cscope 15 $HOME/plugin_arm/arm/plugin -q 0000032826 0002253373
	@include/alias.h

20 #i‚de‡
GCC_ALIAS_H


21 
	#GCC_ALIAS_H


	)

29 
	tÆüs_£t_ty≥
;

31 
Æüs_£t_ty≥
 
√w_Æüs_£t
 ();

32 
Æüs_£t_ty≥
 
gë_Æüs_£t
 (
åì
);

33 
Æüs_£t_ty≥
 
gë_dîef_Æüs_£t
 (
åì
);

34 
Æüs_£t_ty≥
 
gë_v¨¨gs_Æüs_£t
 ();

35 
Æüs_£t_ty≥
 
gë_‰ame_Æüs_£t
 ();

36 
åì
 
comp⁄ít_u£s_∑ª¡_Æüs_£t_‰om
 (
c⁄°_åì
);

37 
boﬁ
 
Æüs_£t_sub£t_of
 (
Æüs_£t_ty≥
,álias_set_type);

38 
ªc‹d_Æüs_sub£t
 (
Æüs_£t_ty≥
,álias_set_type);

39 
ªc‹d_comp⁄ít_Æü£s
 (
åì
);

40 
Æüs_£ts_c⁄Êi˘_p
 (
Æüs_£t_ty≥
,álias_set_type);

41 
Æüs_£ts_mu°_c⁄Êi˘_p
 (
Æüs_£t_ty≥
,álias_set_type);

42 
obje˘s_mu°_c⁄Êi˘_p
 (
åì
,Åree);

43 
n⁄ovîœµög_memªfs_p
 (
c⁄°_πx
, c⁄°_πx, 
boﬁ
);

44 
åì
 
ª„ªn˚_Æüs_±r_ty≥
 (tree);

45 
boﬁ
 
Æüs_±r_ty≥s_com∑tibÀ_p
 (
åì
,Åree);

51 
	#ALIAS_SET_MEMORY_BARRIER
 ((
Æüs_£t_ty≥
Ë-1)

	)

	@include/alloc-pool.h

20 #i‚de‡
ALLOC_POOL_H


21 
	#ALLOC_POOL_H


	)

23 
	tALLOC_POOL_ID_TYPE
;

25 
	sÆloc_poﬁ_li°_def


27 
Æloc_poﬁ_li°_def
 *
	m√xt
;

29 *
	tÆloc_poﬁ_li°
;

31 
	sÆloc_poﬁ_def


33 c⁄° *
	m«me
;

34 #ifde‡
ENABLE_CHECKING


35 
ALLOC_POOL_ID_TYPE
 
	mid
;

37 
size_t
 
	mñts_≥r_block
;

40 
Æloc_poﬁ_li°
 
	mªtu∫ed_‰ì_li°
;

44 * 
	mvúgö_‰ì_li°
;

48 
size_t
 
	mvúgö_ñts_ªmaöög
;

50 
size_t
 
	mñts_Æloˇãd
;

51 
size_t
 
	mñts_‰ì
;

52 
size_t
 
	mblocks_Æloˇãd
;

53 
Æloc_poﬁ_li°
 
	mblock_li°
;

54 
size_t
 
	mblock_size
;

55 
size_t
 
	mñt_size
;

57 *
	tÆloc_poﬁ
;

59 
Æloc_poﬁ
 
¸óã_Æloc_poﬁ
 (c⁄° *, 
size_t
, size_t);

60 
‰ì_Æloc_poﬁ
 (
Æloc_poﬁ
);

61 
em±y_Æloc_poﬁ
 (
Æloc_poﬁ
);

62 
‰ì_Æloc_poﬁ_if_em±y
 (
Æloc_poﬁ
 *);

63 *
	$poﬁ_Æloc
 (
Æloc_poﬁ
Ë
ATTRIBUTE_MALLOC
;

64 
	`poﬁ_‰ì
 (
Æloc_poﬁ
, *);

65 
	`dump_Æloc_poﬁ_°©i°ics
 ();

	@include/ansidecl.h

38 #i‚def 
_ANSIDECL_H


39 
	#_ANSIDECL_H
 1

	)

41 #ifde‡
__˝lu•lus


63 #i‚de‡
GCC_VERSION


64 
	#GCC_VERSION
 (
__GNUC__
 * 1000 + 
__GNUC_MINOR__
)

	)

67 #i‡
deföed
 (
__STDC__
Ë|| deföed(
__˝lu•lus
Ë|| deföed (
_AIX
Ë|| (deföed (
__mùs
Ë&& deföed (
_SYSTYPE_SVR4
)Ë|| deföed(
_WIN32
)

75 
	#PTR
 *

	)

83 #unde‡
ölöe


84 #i‡
__STDC_VERSION__
 >199901L || 
deföed
(
__˝lu•lus
Ë|| (deföed(
__SUNPRO_C
Ë&& deföed(
__C99FEATURES__
))

87 #i‡
GCC_VERSION
 >= 2007

88 
	#ölöe
 
__ölöe__


	)

90 
	#ölöe


	)

96 
	#PTR
 *

	)

102 #unde‡
ölöe


103 c⁄°

	)

104 vﬁ©ûe

	)

105 sig√d

	)

106 
	#ölöe


	)

114 #i‡(
GCC_VERSION
 < 2007)

115 
	#__©åibuã__
(
x
)

	)

119 #i‚de‡
ATTRIBUTE_MALLOC


120 #i‡(
GCC_VERSION
 >= 2096)

121 
	#ATTRIBUTE_MALLOC
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

123 
	#ATTRIBUTE_MALLOC


	)

129 #i‚de‡
ATTRIBUTE_UNUSED_LABEL


130 #i‚de‡
__˝lu•lus


131 #i‡
GCC_VERSION
 >= 2093

132 
	#ATTRIBUTE_UNUSED_LABEL
 
ATTRIBUTE_UNUSED


	)

134 
	#ATTRIBUTE_UNUSED_LABEL


	)

137 #i‡
GCC_VERSION
 >= 4005

138 
	#ATTRIBUTE_UNUSED_LABEL
 
ATTRIBUTE_UNUSED
 ;

	)

140 
	#ATTRIBUTE_UNUSED_LABEL


	)

148 #i‚de‡
ATTRIBUTE_UNUSED


149 #i‡
GCC_VERSION
 >= 3004

150 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

152 
	#ATTRIBUTE_UNUSED


	)

158 #i‡! 
deföed
(
__˝lu•lus
Ë|| (
GCC_VERSION
 >= 3004)

159 
	#ARG_UNUSED
(
NAME
ËNAME 
ATTRIBUTE_UNUSED


	)

161 
	#ARG_UNUSED
(
NAME
Ë
	)
NAME

164 #i‚de‡
ATTRIBUTE_NORETURN


165 
	#ATTRIBUTE_NORETURN
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

169 #i‚de‡
ATTRIBUTE_NONNULL


170 #i‡(
GCC_VERSION
 >= 3003)

171 
	#ATTRIBUTE_NONNULL
(
m
Ë
	`__©åibuã__
 ((
	`__n⁄nuŒ__
 (m)))

	)

173 
	#ATTRIBUTE_NONNULL
(
m
)

	)

178 #i‚de‡
ATTRIBUTE_RETURNS_NONNULL


179 #i‡(
GCC_VERSION
 >= 4009)

180 
	#ATTRIBUTE_RETURNS_NONNULL
 
	`__©åibuã__
 ((
__ªtu∫s_n⁄nuŒ__
))

	)

182 
	#ATTRIBUTE_RETURNS_NONNULL


	)

187 #i‚de‡
ATTRIBUTE_PURE


188 #i‡(
GCC_VERSION
 >= 3000)

189 
	#ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

191 
	#ATTRIBUTE_PURE


	)

199 #i‚de‡
ATTRIBUTE_PRINTF


200 
	#ATTRIBUTE_PRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, m,Ç))Ë
	`ATTRIBUTE_NONNULL
(m)

	)

201 
	#ATTRIBUTE_PRINTF_1
 
	`ATTRIBUTE_PRINTF
(1, 2)

	)

202 
	#ATTRIBUTE_PRINTF_2
 
	`ATTRIBUTE_PRINTF
(2, 3)

	)

203 
	#ATTRIBUTE_PRINTF_3
 
	`ATTRIBUTE_PRINTF
(3, 4)

	)

204 
	#ATTRIBUTE_PRINTF_4
 
	`ATTRIBUTE_PRINTF
(4, 5)

	)

205 
	#ATTRIBUTE_PRINTF_5
 
	`ATTRIBUTE_PRINTF
(5, 6)

	)

211 #i‚de‡
ATTRIBUTE_FPTR_PRINTF


212 #i‡(
GCC_VERSION
 >= 3001)

213 
	#ATTRIBUTE_FPTR_PRINTF
(
m
, 
n
Ë
	`ATTRIBUTE_PRINTF
(m,Ç)

	)

215 
	#ATTRIBUTE_FPTR_PRINTF
(
m
, 
n
)

	)

217 
	#ATTRIBUTE_FPTR_PRINTF_1
 
	`ATTRIBUTE_FPTR_PRINTF
(1, 2)

	)

218 
	#ATTRIBUTE_FPTR_PRINTF_2
 
	`ATTRIBUTE_FPTR_PRINTF
(2, 3)

	)

219 
	#ATTRIBUTE_FPTR_PRINTF_3
 
	`ATTRIBUTE_FPTR_PRINTF
(3, 4)

	)

220 
	#ATTRIBUTE_FPTR_PRINTF_4
 
	`ATTRIBUTE_FPTR_PRINTF
(4, 5)

	)

221 
	#ATTRIBUTE_FPTR_PRINTF_5
 
	`ATTRIBUTE_FPTR_PRINTF
(5, 6)

	)

226 #i‚de‡
ATTRIBUTE_NULL_PRINTF


227 #i‡(
GCC_VERSION
 >= 3003)

228 
	#ATTRIBUTE_NULL_PRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, m,Ç)))

	)

230 
	#ATTRIBUTE_NULL_PRINTF
(
m
, 
n
)

	)

232 
	#ATTRIBUTE_NULL_PRINTF_1
 
	`ATTRIBUTE_NULL_PRINTF
(1, 2)

	)

233 
	#ATTRIBUTE_NULL_PRINTF_2
 
	`ATTRIBUTE_NULL_PRINTF
(2, 3)

	)

234 
	#ATTRIBUTE_NULL_PRINTF_3
 
	`ATTRIBUTE_NULL_PRINTF
(3, 4)

	)

235 
	#ATTRIBUTE_NULL_PRINTF_4
 
	`ATTRIBUTE_NULL_PRINTF
(4, 5)

	)

236 
	#ATTRIBUTE_NULL_PRINTF_5
 
	`ATTRIBUTE_NULL_PRINTF
(5, 6)

	)

240 #i‚de‡
ATTRIBUTE_SENTINEL


241 #i‡(
GCC_VERSION
 >= 3005)

242 
	#ATTRIBUTE_SENTINEL
 
	`__©åibuã__
 ((
__£¡öñ__
))

	)

244 
	#ATTRIBUTE_SENTINEL


	)

249 #i‚de‡
ATTRIBUTE_ALIGNED_ALIGNOF


250 #i‡(
GCC_VERSION
 >= 3000)

251 
	#ATTRIBUTE_ALIGNED_ALIGNOF
(
m
Ë
	`__©åibuã__
 ((
	`__Æig√d__
 (
	`__Æignof__
 (m))))

	)

253 
	#ATTRIBUTE_ALIGNED_ALIGNOF
(
m
)

	)

259 #i‚de‡
ATTRIBUTE_PACKED


260 
	#ATTRIBUTE_PACKED
 
	`__©åibuã__
 ((
∑cked
))

	)

264 #i‚de‡
ATTRIBUTE_COLD


265 #i‡(
GCC_VERSION
 >= 4003)

266 
	#ATTRIBUTE_COLD
 
	`__©åibuã__
 ((
__cﬁd__
))

	)

268 
	#ATTRIBUTE_COLD


	)

271 #i‚de‡
ATTRIBUTE_HOT


272 #i‡(
GCC_VERSION
 >= 4003)

273 
	#ATTRIBUTE_HOT
 
	`__©åibuã__
 ((
__hŸ__
))

	)

275 
	#ATTRIBUTE_HOT


	)

282 #i‡
GCC_VERSION
 < 2008

283 
	#__exãnsi⁄__


	)

292 #ifde‡
__˝lu•lus


293 
	#EXPORTED_CONST
 c⁄°

	)

295 
	#EXPORTED_CONST
 c⁄°

	)

301 #ifde‡
__˝lu•lus


302 
	#ENUM_BITFIELD
(
TYPE
Ë
	)
TYPE

303 #ñi‡(
GCC_VERSION
 > 2000)

304 
	#ENUM_BITFIELD
(
TYPE
Ë
__exãnsi⁄__
 
	)
TYPE

306 
	#ENUM_BITFIELD
(
TYPE
Ë

	)

309 #ifde‡
__˝lu•lus


	@include/attribs.h

20 #i‚de‡
GCC_ATTRIBS_H


21 
	#GCC_ATTRIBS_H


	)

23 c⁄° 
©åibuã_•ec
 *
lookup_©åibuã_•ec
 (
c⁄°_åì
);

24 
öô_©åibuãs
 ();

34 
åì
 
de˛_©åibuãs
 (tree *,Åree, );

36 
boﬁ
 
cxx11_©åibuã_p
 (
c⁄°_åì
);

37 
åì
 
gë_©åibuã_«me
 (
c⁄°_åì
);

38 
≠∂y_tm_©å
 (
åì
,Åree);

	@include/auto-host.h

5 #i‚de‡
USED_FOR_TARGET


11 #i‚de‡
USED_FOR_TARGET


17 #i‚de‡
USED_FOR_TARGET


23 #i‚de‡
USED_FOR_TARGET


29 #i‚de‡
USED_FOR_TARGET


38 #i‚de‡
USED_FOR_TARGET


39 
	#DEFAULT_USE_CXA_ATEXIT
 2

	)

44 #i‚de‡
USED_FOR_TARGET


45 
	#ENABLE_ASSERT_CHECKING
 1

	)

51 #i‚de‡
USED_FOR_TARGET


58 #i‚de‡
USED_FOR_TARGET


59 
	#ENABLE_DECIMAL_BID_FORMAT
 0

	)

64 #i‚de‡
USED_FOR_TARGET


65 
	#ENABLE_DECIMAL_FLOAT
 0

	)

70 #i‚de‡
USED_FOR_TARGET


76 #i‚de‡
USED_FOR_TARGET


77 
	#ENABLE_FIXED_POINT
 1

	)

83 #i‚de‡
USED_FOR_TARGET


91 #i‚de‡
USED_FOR_TARGET


98 #i‚de‡
USED_FOR_TARGET


106 #i‚de‡
USED_FOR_TARGET


112 #i‚de‡
USED_FOR_TARGET


118 #i‚de‡
USED_FOR_TARGET


119 
	#ENABLE_LIBQUADMATH_SUPPORT
 1

	)

124 #i‚de‡
USED_FOR_TARGET


125 
	#ENABLE_LTO
 1

	)

131 #i‚de‡
USED_FOR_TARGET


137 #i‚de‡
USED_FOR_TARGET


138 
	#ENABLE_PLUGIN
 1

	)

145 #i‚de‡
USED_FOR_TARGET


152 #i‚de‡
USED_FOR_TARGET


158 
	#ENABLE_RUNTIME_CHECKING
 1

	)

164 #i‚de‡
USED_FOR_TARGET


171 #i‚de‡
USED_FOR_TARGET


178 #i‚de‡
USED_FOR_TARGET


185 #i‚de‡
USED_FOR_TARGET


192 #i‚de‡
USED_FOR_TARGET


193 
	#EXTRA_MODES_FILE
 "c⁄fig/¨m/¨m-modes.def"

	)

198 #i‚de‡
USED_FOR_TARGET


199 
	#GATHER_STATISTICS
 0

	)

204 #i‚de‡
USED_FOR_TARGET


205 
	#GWINSZ_IN_SYS_IOCTL
 1

	)

210 #i‚de‡
USED_FOR_TARGET


216 #i‚de‡
USED_FOR_TARGET


222 #i‚de‡
USED_FOR_TARGET


228 #i‚de‡
USED_FOR_TARGET


234 #i‚de‡
USED_FOR_TARGET


235 
	#HAVE_AS_DEBUG_PREFIX_MAP
 1

	)

240 #i‚de‡
USED_FOR_TARGET


246 #i‚de‡
USED_FOR_TARGET


252 #i‚de‡
USED_FOR_TARGET


258 #i‚de‡
USED_FOR_TARGET


265 #i‚de‡
USED_FOR_TARGET


266 
	#HAVE_AS_DWARF2_DEBUG_LINE
 1

	)

271 #i‚de‡
USED_FOR_TARGET


277 #i‚de‡
USED_FOR_TARGET


283 #i‚de‡
USED_FOR_TARGET


289 #i‚de‡
USED_FOR_TARGET


290 
	#HAVE_AS_GDWARF2_DEBUG_FLAG
 1

	)

295 #i‚de‡
USED_FOR_TARGET


301 #i‚de‡
USED_FOR_TARGET


307 #i‚de‡
USED_FOR_TARGET


308 
	#HAVE_AS_GSTABS_DEBUG_FLAG
 1

	)

313 #i‚de‡
USED_FOR_TARGET


320 #i‚de‡
USED_FOR_TARGET


326 #i‚de‡
USED_FOR_TARGET


332 #i‚de‡
USED_FOR_TARGET


338 #i‚de‡
USED_FOR_TARGET


344 #i‚de‡
USED_FOR_TARGET


350 #i‚de‡
USED_FOR_TARGET


356 #i‚de‡
USED_FOR_TARGET


362 #i‚de‡
USED_FOR_TARGET


368 #i‚de‡
USED_FOR_TARGET


374 #i‚de‡
USED_FOR_TARGET


380 #i‚de‡
USED_FOR_TARGET


386 #i‚de‡
USED_FOR_TARGET


392 #i‚de‡
USED_FOR_TARGET


398 #i‚de‡
USED_FOR_TARGET


404 #i‚de‡
USED_FOR_TARGET


410 #i‚de‡
USED_FOR_TARGET


411 
	#HAVE_AS_LEB128
 1

	)

416 #i‚de‡
USED_FOR_TARGET


422 #i‚de‡
USED_FOR_TARGET


423 
	#HAVE_AS_LINE_ZERO
 1

	)

428 #i‚de‡
USED_FOR_TARGET


434 #i‚de‡
USED_FOR_TARGET


440 #i‚de‡
USED_FOR_TARGET


446 #i‚de‡
USED_FOR_TARGET


452 #i‚de‡
USED_FOR_TARGET


458 #i‚de‡
USED_FOR_TARGET


464 #i‚de‡
USED_FOR_TARGET


470 #i‚de‡
USED_FOR_TARGET


476 #i‚de‡
USED_FOR_TARGET


482 #i‚de‡
USED_FOR_TARGET


488 #i‚de‡
USED_FOR_TARGET


494 #i‚de‡
USED_FOR_TARGET


500 #i‚de‡
USED_FOR_TARGET


506 #i‚de‡
USED_FOR_TARGET


512 #i‚de‡
USED_FOR_TARGET


518 #i‚de‡
USED_FOR_TARGET


524 #i‚de‡
USED_FOR_TARGET


530 #i‚de‡
USED_FOR_TARGET


536 #i‚de‡
USED_FOR_TARGET


543 #i‚de‡
USED_FOR_TARGET


550 #i‚de‡
USED_FOR_TARGET


556 #i‚de‡
USED_FOR_TARGET


562 #i‚de‡
USED_FOR_TARGET


568 #i‚de‡
USED_FOR_TARGET


574 #i‚de‡
USED_FOR_TARGET


575 
	#HAVE_ATOLL
 1

	)

580 #i‚de‡
USED_FOR_TARGET


586 #i‚de‡
USED_FOR_TARGET


587 
	#HAVE_CLEARERR_UNLOCKED
 1

	)

592 #i‚de‡
USED_FOR_TARGET


593 
	#HAVE_CLOCK
 1

	)

598 #i‚de‡
USED_FOR_TARGET


599 
	#HAVE_CLOCK_T
 1

	)

604 #i‚de‡
USED_FOR_TARGET


605 
	#HAVE_COMDAT_GROUP
 1

	)

611 #i‚de‡
USED_FOR_TARGET


612 
	#HAVE_DECL_ABORT
 1

	)

618 #i‚de‡
USED_FOR_TARGET


619 
	#HAVE_DECL_ASPRINTF
 1

	)

624 #i‚de‡
USED_FOR_TARGET


625 
	#HAVE_DECL_ATOF
 1

	)

630 #i‚de‡
USED_FOR_TARGET


631 
	#HAVE_DECL_ATOL
 1

	)

637 #i‚de‡
USED_FOR_TARGET


638 
	#HAVE_DECL_BASENAME
 1

	)

644 #i‚de‡
USED_FOR_TARGET


645 
	#HAVE_DECL_CALLOC
 1

	)

651 #i‚de‡
USED_FOR_TARGET


652 
	#HAVE_DECL_CLEARERR_UNLOCKED
 1

	)

658 #i‚de‡
USED_FOR_TARGET


659 
	#HAVE_DECL_CLOCK
 1

	)

665 #i‚de‡
USED_FOR_TARGET


666 
	#HAVE_DECL_ERRNO
 1

	)

672 #i‚de‡
USED_FOR_TARGET


673 
	#HAVE_DECL_FEOF_UNLOCKED
 1

	)

679 #i‚de‡
USED_FOR_TARGET


680 
	#HAVE_DECL_FERROR_UNLOCKED
 1

	)

686 #i‚de‡
USED_FOR_TARGET


687 
	#HAVE_DECL_FFLUSH_UNLOCKED
 1

	)

692 #i‚de‡
USED_FOR_TARGET


693 
	#HAVE_DECL_FFS
 1

	)

699 #i‚de‡
USED_FOR_TARGET


700 
	#HAVE_DECL_FGETC_UNLOCKED
 1

	)

706 #i‚de‡
USED_FOR_TARGET


707 
	#HAVE_DECL_FGETS_UNLOCKED
 1

	)

713 #i‚de‡
USED_FOR_TARGET


714 
	#HAVE_DECL_FILENO_UNLOCKED
 1

	)

720 #i‚de‡
USED_FOR_TARGET


721 
	#HAVE_DECL_FPRINTF_UNLOCKED
 0

	)

727 #i‚de‡
USED_FOR_TARGET


728 
	#HAVE_DECL_FPUTC_UNLOCKED
 1

	)

734 #i‚de‡
USED_FOR_TARGET


735 
	#HAVE_DECL_FPUTS_UNLOCKED
 1

	)

741 #i‚de‡
USED_FOR_TARGET


742 
	#HAVE_DECL_FREAD_UNLOCKED
 1

	)

747 #i‚de‡
USED_FOR_TARGET


748 
	#HAVE_DECL_FREE
 1

	)

754 #i‚de‡
USED_FOR_TARGET


755 
	#HAVE_DECL_FWRITE_UNLOCKED
 1

	)

761 #i‚de‡
USED_FOR_TARGET


762 
	#HAVE_DECL_GETCHAR_UNLOCKED
 1

	)

768 #i‚de‡
USED_FOR_TARGET


769 
	#HAVE_DECL_GETCWD
 1

	)

775 #i‚de‡
USED_FOR_TARGET


776 
	#HAVE_DECL_GETC_UNLOCKED
 1

	)

782 #i‚de‡
USED_FOR_TARGET


783 
	#HAVE_DECL_GETENV
 1

	)

789 #i‚de‡
USED_FOR_TARGET


790 
	#HAVE_DECL_GETOPT
 0

	)

796 #i‚de‡
USED_FOR_TARGET


797 
	#HAVE_DECL_GETPAGESIZE
 1

	)

803 #i‚de‡
USED_FOR_TARGET


804 
	#HAVE_DECL_GETRLIMIT
 1

	)

810 #i‚de‡
USED_FOR_TARGET


811 
	#HAVE_DECL_GETRUSAGE
 1

	)

817 #i‚de‡
USED_FOR_TARGET


818 
	#HAVE_DECL_GETWD
 1

	)

824 #i‚de‡
USED_FOR_TARGET


825 
	#HAVE_DECL_LDGETNAME
 0

	)

831 #i‚de‡
USED_FOR_TARGET


832 
	#HAVE_DECL_MADVISE
 1

	)

838 #i‚de‡
USED_FOR_TARGET


839 
	#HAVE_DECL_MALLOC
 1

	)

845 #i‚de‡
USED_FOR_TARGET


846 
	#HAVE_DECL_PUTCHAR_UNLOCKED
 1

	)

852 #i‚de‡
USED_FOR_TARGET


853 
	#HAVE_DECL_PUTC_UNLOCKED
 1

	)

859 #i‚de‡
USED_FOR_TARGET


860 
	#HAVE_DECL_REALLOC
 1

	)

865 #i‚de‡
USED_FOR_TARGET


866 
	#HAVE_DECL_SBRK
 1

	)

872 #i‚de‡
USED_FOR_TARGET


873 
	#HAVE_DECL_SETRLIMIT
 1

	)

879 #i‚de‡
USED_FOR_TARGET


880 
	#HAVE_DECL_SIGALTSTACK
 1

	)

886 #i‚de‡
USED_FOR_TARGET


887 
	#HAVE_DECL_SNPRINTF
 1

	)

893 #i‚de‡
USED_FOR_TARGET


894 
	#HAVE_DECL_STPCPY
 1

	)

900 #i‚de‡
USED_FOR_TARGET


901 
	#HAVE_DECL_STRSIGNAL
 1

	)

907 #i‚de‡
USED_FOR_TARGET


908 
	#HAVE_DECL_STRSTR
 1

	)

914 #i‚de‡
USED_FOR_TARGET


915 
	#HAVE_DECL_STRVERSCMP
 1

	)

921 #i‚de‡
USED_FOR_TARGET


922 
	#HAVE_DECL_TIMES
 1

	)

928 #i‚de‡
USED_FOR_TARGET


929 
	#HAVE_DECL_VASPRINTF
 1

	)

935 #i‚de‡
USED_FOR_TARGET


936 
	#HAVE_DECL_VSNPRINTF
 1

	)

941 #i‚de‡
USED_FOR_TARGET


947 #i‚de‡
USED_FOR_TARGET


948 
	#HAVE_DLFCN_H
 1

	)

953 #i‚de‡
USED_FOR_TARGET


954 
	#HAVE_EXT_HASH_MAP
 1

	)

959 #i‚de‡
USED_FOR_TARGET


960 
	#HAVE_FCNTL_H
 1

	)

965 #i‚de‡
USED_FOR_TARGET


966 
	#HAVE_FEOF_UNLOCKED
 1

	)

971 #i‚de‡
USED_FOR_TARGET


972 
	#HAVE_FERROR_UNLOCKED
 1

	)

977 #i‚de‡
USED_FOR_TARGET


978 
	#HAVE_FFLUSH_UNLOCKED
 1

	)

983 #i‚de‡
USED_FOR_TARGET


984 
	#HAVE_FGETC_UNLOCKED
 1

	)

989 #i‚de‡
USED_FOR_TARGET


990 
	#HAVE_FGETS_UNLOCKED
 1

	)

995 #i‚de‡
USED_FOR_TARGET


996 
	#HAVE_FILENO_UNLOCKED
 1

	)

1001 #i‚de‡
USED_FOR_TARGET


1002 
	#HAVE_FORK
 1

	)

1007 #i‚de‡
USED_FOR_TARGET


1013 #i‚de‡
USED_FOR_TARGET


1014 
	#HAVE_FPUTC_UNLOCKED
 1

	)

1019 #i‚de‡
USED_FOR_TARGET


1020 
	#HAVE_FPUTS_UNLOCKED
 1

	)

1025 #i‚de‡
USED_FOR_TARGET


1026 
	#HAVE_FREAD_UNLOCKED
 1

	)

1031 #i‚de‡
USED_FOR_TARGET


1032 
	#HAVE_FWRITE_UNLOCKED
 1

	)

1038 #i‚de‡
USED_FOR_TARGET


1044 #i‚de‡
USED_FOR_TARGET


1045 
	#HAVE_GAS_BALIGN_AND_P2ALIGN
 1

	)

1050 
	#HAVE_GAS_CFI_DIRECTIVE
 1

	)

1053 
	#HAVE_GAS_CFI_PERSONALITY_DIRECTIVE
 1

	)

1056 
	#HAVE_GAS_CFI_SECTIONS_DIRECTIVE
 1

	)

1059 #i‚de‡
USED_FOR_TARGET


1060 
	#HAVE_GAS_DISCRIMINATOR
 1

	)

1065 #i‚de‡
USED_FOR_TARGET


1071 
	#HAVE_GAS_HIDDEN
 1

	)

1074 #i‚de‡
USED_FOR_TARGET


1080 #i‚de‡
USED_FOR_TARGET


1087 #i‚de‡
USED_FOR_TARGET


1088 
	#HAVE_GAS_MAX_SKIP_P2ALIGN
 1

	)

1093 #i‚de‡
USED_FOR_TARGET


1099 #i‚de‡
USED_FOR_TARGET


1106 #i‚de‡
USED_FOR_TARGET


1112 #i‚de‡
USED_FOR_TARGET


1119 #i‚de‡
USED_FOR_TARGET


1120 
	#HAVE_GAS_SHF_MERGE
 1

	)

1126 #i‚de‡
USED_FOR_TARGET


1127 
	#HAVE_GAS_SUBSECTION_ORDERING
 1

	)

1132 #i‚de‡
USED_FOR_TARGET


1133 
	#HAVE_GAS_WEAK
 1

	)

1138 #i‚de‡
USED_FOR_TARGET


1139 
	#HAVE_GAS_WEAKREF
 1

	)

1144 #i‚de‡
USED_FOR_TARGET


1145 
	#HAVE_GETCHAR_UNLOCKED
 1

	)

1150 #i‚de‡
USED_FOR_TARGET


1151 
	#HAVE_GETC_UNLOCKED
 1

	)

1156 #i‚de‡
USED_FOR_TARGET


1157 
	#HAVE_GETRLIMIT
 1

	)

1162 #i‚de‡
USED_FOR_TARGET


1163 
	#HAVE_GETRUSAGE
 1

	)

1168 #i‚de‡
USED_FOR_TARGET


1169 
	#HAVE_GETTIMEOFDAY
 1

	)

1174 #i‚de‡
USED_FOR_TARGET


1175 
	#HAVE_GNU_AS
 1

	)

1180 #i‚de‡
USED_FOR_TARGET


1181 
	#HAVE_GNU_INDIRECT_FUNCTION
 0

	)

1186 #i‚de‡
USED_FOR_TARGET


1187 
	#HAVE_GNU_LD
 1

	)

1192 #i‚de‡
USED_FOR_TARGET


1193 
	#HAVE_ICONV
 1

	)

1198 #i‚de‡
USED_FOR_TARGET


1199 
	#HAVE_ICONV_H
 1

	)

1204 #i‚de‡
USED_FOR_TARGET


1210 #i‚de‡
USED_FOR_TARGET


1211 
	#HAVE_INTMAX_T
 1

	)

1216 #i‚de‡
USED_FOR_TARGET


1217 
	#HAVE_INTPTR_T
 1

	)

1222 #i‚de‡
USED_FOR_TARGET


1223 
	#HAVE_INTTYPES_H
 1

	)

1228 #i‚de‡
USED_FOR_TARGET


1234 #i‚de‡
USED_FOR_TARGET


1235 
	#HAVE_KILL
 1

	)

1240 #i‚de‡
USED_FOR_TARGET


1241 
	#HAVE_LANGINFO_CODESET
 1

	)

1246 #i‚de‡
USED_FOR_TARGET


1247 
	#HAVE_LANGINFO_H
 1

	)

1252 #i‚de‡
USED_FOR_TARGET


1253 
	#HAVE_LC_MESSAGES
 1

	)

1258 #i‚de‡
USED_FOR_TARGET


1265 #i‚de‡
USED_FOR_TARGET


1266 
	#HAVE_LD_AS_NEEDED
 1

	)

1271 #i‚de‡
USED_FOR_TARGET


1272 
	#HAVE_LD_BUILDID
 1

	)

1278 #i‚de‡
USED_FOR_TARGET


1284 #i‚de‡
USED_FOR_TARGET


1285 
	#HAVE_LD_DEMANGLE
 1

	)

1290 #i‚de‡
USED_FOR_TARGET


1291 
	#HAVE_LD_EH_FRAME_CIEV3
 1

	)

1296 
	#HAVE_LD_EH_FRAME_HDR
 1

	)

1300 #i‚de‡
USED_FOR_TARGET


1307 #i‚de‡
USED_FOR_TARGET


1313 #i‚de‡
USED_FOR_TARGET


1319 #i‚de‡
USED_FOR_TARGET


1326 #i‚de‡
USED_FOR_TARGET


1332 #i‚de‡
USED_FOR_TARGET


1333 
	#HAVE_LD_PIE
 1

	)

1339 #i‚de‡
USED_FOR_TARGET


1340 
	#HAVE_LD_RO_RW_SECTION_MIXING
 1

	)

1345 #i‚de‡
USED_FOR_TARGET


1351 #i‚de‡
USED_FOR_TARGET


1352 
	#HAVE_LD_STATIC_DYNAMIC
 1

	)

1357 #i‚de‡
USED_FOR_TARGET


1358 
	#HAVE_LD_SYSROOT
 1

	)

1363 #i‚de‡
USED_FOR_TARGET


1364 
	#HAVE_LIMITS_H
 1

	)

1369 #i‚de‡
USED_FOR_TARGET


1370 
	#HAVE_LOCALE_H
 1

	)

1375 #i‚de‡
USED_FOR_TARGET


1376 
	#HAVE_LONG_LONG
 1

	)

1381 #i‚de‡
USED_FOR_TARGET


1382 
	#HAVE_LONG_LONG_INT
 1

	)

1387 #i‚de‡
USED_FOR_TARGET


1388 
	#HAVE_LTO_PLUGIN
 2

	)

1393 #i‚de‡
USED_FOR_TARGET


1394 
	#HAVE_MADVISE
 1

	)

1399 #i‚de‡
USED_FOR_TARGET


1400 
	#HAVE_MALLOC_H
 1

	)

1405 #i‚de‡
USED_FOR_TARGET


1406 
	#HAVE_MBSTOWCS
 1

	)

1411 #i‚de‡
USED_FOR_TARGET


1417 #i‚de‡
USED_FOR_TARGET


1418 
	#HAVE_MEMORY_H
 1

	)

1423 #i‚de‡
USED_FOR_TARGET


1424 
	#HAVE_MMAP
 1

	)

1429 #i‚de‡
USED_FOR_TARGET


1430 
	#HAVE_MMAP_ANON
 1

	)

1435 #i‚de‡
USED_FOR_TARGET


1436 
	#HAVE_MMAP_DEV_ZERO
 1

	)

1441 #i‚de‡
USED_FOR_TARGET


1442 
	#HAVE_MMAP_FILE
 1

	)

1447 #i‚de‡
USED_FOR_TARGET


1448 
	#HAVE_NL_LANGINFO
 1

	)

1453 #i‚de‡
USED_FOR_TARGET


1454 
	#HAVE_PUTCHAR_UNLOCKED
 1

	)

1459 #i‚de‡
USED_FOR_TARGET


1460 
	#HAVE_PUTC_UNLOCKED
 1

	)

1465 #i‚de‡
USED_FOR_TARGET


1466 
	#HAVE_SETLOCALE
 1

	)

1471 #i‚de‡
USED_FOR_TARGET


1472 
	#HAVE_SETRLIMIT
 1

	)

1477 #i‚de‡
USED_FOR_TARGET


1478 
	#HAVE_STDDEF_H
 1

	)

1483 #i‚de‡
USED_FOR_TARGET


1484 
	#HAVE_STDINT_H
 1

	)

1489 #i‚de‡
USED_FOR_TARGET


1490 
	#HAVE_STDLIB_H
 1

	)

1495 #i‚de‡
USED_FOR_TARGET


1496 
	#HAVE_STRINGS_H
 1

	)

1501 #i‚de‡
USED_FOR_TARGET


1502 
	#HAVE_STRING_H
 1

	)

1507 #i‚de‡
USED_FOR_TARGET


1508 
	#HAVE_STRSIGNAL
 1

	)

1513 #i‚de‡
USED_FOR_TARGET


1514 
	#HAVE_STRUCT_TMS
 1

	)

1519 #i‚de‡
USED_FOR_TARGET


1520 
	#HAVE_SYSCONF
 1

	)

1525 #i‚de‡
USED_FOR_TARGET


1526 
	#HAVE_SYS_FILE_H
 1

	)

1531 #i‚de‡
USED_FOR_TARGET


1532 
	#HAVE_SYS_MMAN_H
 1

	)

1537 #i‚de‡
USED_FOR_TARGET


1538 
	#HAVE_SYS_PARAM_H
 1

	)

1543 #i‚de‡
USED_FOR_TARGET


1544 
	#HAVE_SYS_RESOURCE_H
 1

	)

1552 #i‚de‡
USED_FOR_TARGET


1553 
	#HAVE_SYS_STAT_H
 1

	)

1558 #i‚de‡
USED_FOR_TARGET


1559 
	#HAVE_SYS_TIMES_H
 1

	)

1564 #i‚de‡
USED_FOR_TARGET


1565 
	#HAVE_SYS_TIME_H
 1

	)

1570 #i‚de‡
USED_FOR_TARGET


1571 
	#HAVE_SYS_TYPES_H
 1

	)

1576 #i‚de‡
USED_FOR_TARGET


1577 
	#HAVE_SYS_WAIT_H
 1

	)

1582 #i‚de‡
USED_FOR_TARGET


1583 
	#HAVE_TIMES
 1

	)

1588 #i‚de‡
USED_FOR_TARGET


1589 
	#HAVE_TIME_H
 1

	)

1594 #i‚de‡
USED_FOR_TARGET


1595 
	#HAVE_TR1_UNORDERED_MAP
 1

	)

1600 #i‚de‡
USED_FOR_TARGET


1601 
	#HAVE_UINTMAX_T
 1

	)

1606 #i‚de‡
USED_FOR_TARGET


1607 
	#HAVE_UINTPTR_T
 1

	)

1612 #i‚de‡
USED_FOR_TARGET


1613 
	#HAVE_UNISTD_H
 1

	)

1618 #i‚de‡
USED_FOR_TARGET


1624 #i‚de‡
USED_FOR_TARGET


1625 
	#HAVE_UNSIGNED_LONG_LONG_INT
 1

	)

1630 #i‚de‡
USED_FOR_TARGET


1636 #i‚de‡
USED_FOR_TARGET


1637 
	#HAVE_VFORK
 1

	)

1642 #i‚de‡
USED_FOR_TARGET


1648 #i‚de‡
USED_FOR_TARGET


1649 
	#HAVE_WCHAR_H
 1

	)

1654 #i‚de‡
USED_FOR_TARGET


1655 
	#HAVE_WCSWIDTH
 1

	)

1660 #i‚de‡
USED_FOR_TARGET


1661 
	#HAVE_WORKING_FORK
 1

	)

1667 #i‚de‡
USED_FOR_TARGET


1668 
	#HAVE_WORKING_MBSTOWCS
 1

	)

1673 #i‚de‡
USED_FOR_TARGET


1674 
	#HAVE_WORKING_VFORK
 1

	)

1679 #i‚de‡
USED_FOR_TARGET


1685 #i‚de‡
USED_FOR_TARGET


1686 
	#HAVE_˛oog
 1

	)

1691 #i‚de‡
USED_FOR_TARGET


1692 
	#HOST_HAS_F_SETLKW
 1

	)

1697 #i‚de‡
USED_FOR_TARGET


1698 
	#ICONV_CONST


	)

1703 #i‚de‡
USED_FOR_TARGET


1704 
	#LD_AS_NEEDED_OPTION
 "--as-√eded"

	)

1709 #i‚de‡
USED_FOR_TARGET


1710 
	#LD_DYNAMIC_OPTION
 "-Bdy«mic"

	)

1715 #i‚de‡
USED_FOR_TARGET


1716 
	#LD_NO_AS_NEEDED_OPTION
 "--no-as-√eded"

	)

1721 #i‚de‡
USED_FOR_TARGET


1722 
	#LD_STATIC_OPTION
 "-B°©ic"

	)

1727 #i‚de‡
USED_FOR_TARGET


1733 #i‚de‡
USED_FOR_TARGET


1740 #i‚de‡
USED_FOR_TARGET


1741 
	#LTOPLUGINSONAME
 "lib…o_∂ugö.so"

	)

1747 #i‚de‡
USED_FOR_TARGET


1748 
	#LT_OBJDIR
 ".libs/"

	)

1753 #i‚de‡
USED_FOR_TARGET


1759 #i‚de‡
USED_FOR_TARGET


1760 
	#NEED_64BIT_HOST_WIDE_INT
 1

	)

1765 #i‚de‡
USED_FOR_TARGET


1766 
	#PACKAGE_BUGREPORT
 ""

	)

1771 #i‚de‡
USED_FOR_TARGET


1772 
	#PACKAGE_NAME
 ""

	)

1777 #i‚de‡
USED_FOR_TARGET


1778 
	#PACKAGE_STRING
 ""

	)

1783 #i‚de‡
USED_FOR_TARGET


1784 
	#PACKAGE_TARNAME
 ""

	)

1789 #i‚de‡
USED_FOR_TARGET


1790 
	#PACKAGE_URL
 ""

	)

1795 #i‚de‡
USED_FOR_TARGET


1796 
	#PACKAGE_VERSION
 ""

	)

1801 #i‚de‡
USED_FOR_TARGET


1802 
	#PLUGIN_LD_SUFFIX
 "ld"

	)

1807 #i‚de‡
USED_FOR_TARGET


1813 #i‚de‡
USED_FOR_TARGET


1814 
	#SIZEOF_INT
 4

	)

1819 #i‚de‡
USED_FOR_TARGET


1820 
	#SIZEOF_LONG
 4

	)

1825 #i‚de‡
USED_FOR_TARGET


1826 
	#SIZEOF_LONG_LONG
 8

	)

1831 #i‚de‡
USED_FOR_TARGET


1832 
	#SIZEOF_SHORT
 2

	)

1837 #i‚de‡
USED_FOR_TARGET


1838 
	#SIZEOF_VOID_P
 4

	)

1843 #i‚de‡
USED_FOR_TARGET


1849 #i‚de‡
USED_FOR_TARGET


1850 
	#STDC_HEADERS
 1

	)

1855 #i‚de‡
USED_FOR_TARGET


1856 
	#STRING_WITH_STRINGS
 1

	)

1861 #i‚de‡
USED_FOR_TARGET


1870 #i‚de‡
USED_FOR_TARGET


1876 #i‚de‡
USED_FOR_TARGET


1877 
	#TIME_WITH_SYS_TIME
 1

	)

1883 #i‚de‡
USED_FOR_TARGET


1889 #i‚de‡
USED_FOR_TARGET


1896 #i‚de‡
USED_FOR_TARGET


1903 #i‚de‡
USED_FOR_TARGET


1909 #i‚de‡
USED_FOR_TARGET


1915 #i‚de‡
_ALL_SOURCE


1916 
	#_ALL_SOURCE
 1

	)

1919 #i‚de‡
_GNU_SOURCE


1920 
	#_GNU_SOURCE
 1

	)

1923 #i‚de‡
_POSIX_PTHREAD_SEMANTICS


1924 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

1927 #i‚de‡
_TANDEM_SOURCE


1928 
	#_TANDEM_SOURCE
 1

	)

1931 #i‚de‡
__EXTENSIONS__


1932 
	#__EXTENSIONS__
 1

	)

1940 #i‚de‡
USED_FOR_TARGET


1947 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


1948 #i‡
deföed
 
__BIG_ENDIAN__


1949 
	#WORDS_BIGENDIAN
 1

	)

1952 #i‚de‡
WORDS_BIGENDIAN


1958 #i‚de‡
USED_FOR_TARGET


1959 
	#_FILE_OFFSET_BITS
 64

	)

1964 #i‚de‡
USED_FOR_TARGET


1970 #i‚de‡
USED_FOR_TARGET


1977 #i‚de‡
USED_FOR_TARGET


1983 #i‚de‡
USED_FOR_TARGET


1991 #i‚de‡
USED_FOR_TARGET


1999 #i‚de‡
USED_FOR_TARGET


2007 #i‚de‡
USED_FOR_TARGET


2013 #i‚de‡
USED_FOR_TARGET


2020 #i‚de‡
__˝lu•lus


2026 #i‚de‡
USED_FOR_TARGET


2033 #i‚de‡
USED_FOR_TARGET


2040 #i‚de‡
USED_FOR_TARGET


2047 #i‚de‡
USED_FOR_TARGET


2054 #i‚de‡
USED_FOR_TARGET


2061 #i‚de‡
USED_FOR_TARGET


2067 #i‚de‡
USED_FOR_TARGET


2073 #i‚de‡
USED_FOR_TARGET


2079 #i‚de‡
USED_FOR_TARGET


2086 #i‚de‡
USED_FOR_TARGET


2093 #i‚de‡
USED_FOR_TARGET


2100 #i‚de‡
USED_FOR_TARGET


2107 #i‚de‡
USED_FOR_TARGET


2114 #i‚de‡
USED_FOR_TARGET


2121 #i‚de‡
USED_FOR_TARGET


2127 #i‚de‡
USED_FOR_TARGET


	@include/basic-block.h

20 #i‚de‡
GCC_BASIC_BLOCK_H


21 
	#GCC_BASIC_BLOCK_H


	)

23 
	~"¥edi˘.h
"

24 
	~"vec.h
"

25 
	~"fun˘i⁄.h
"

34 
GTY
((
u£r
)Ë
	gedge_def
 {

36 
basic_block
 
	g§c
;

37 
basic_block
 
	gde°
;

40 
	uedge_def_ö¢s
 {

41 
gim∂e_£q
 
	gg
;

42 
πx
 
	gr
;

43 } 
	gö¢s
;

46 
PTR
 
	gaux
;

49 
loˇti⁄_t
 
	ggŸo_locus
;

53 
	gde°_idx
;

55 
	gÊags
;

56 
	g¥obabûôy
;

57 
gcov_ty≥
 
	gcou¡
;

63 
gt_ggc_mx
 (
edge_def
 *
e
);

64 
gt_pch_nx
 (
edge_def
 *
e
);

65 
gt_pch_nx
 (
edge_def
 *
e
, 
gt_poöãr_›î©‹
, *);

68 
	#DEF_EDGE_FLAG
(
NAME
,
IDX
Ë
EDGE_
##NAME = 1 << IDX ,

	)

69 
	ecfg_edge_Êags
 {

70 
	~"cfg-Êags.def
"

71 
	mLAST_CFG_EDGE_FLAG


73 #unde‡
DEF_EDGE_FLAG


76 
	#EDGE_ALL_FLAGS
 ((
LAST_CFG_EDGE_FLAG
 - 1Ë* 2 - 1)

	)

81 
	#EDGE_COMPLEX
 \

82 (
EDGE_ABNORMAL
 | 
EDGE_ABNORMAL_CALL
 | 
EDGE_EH
 | 
EDGE_PRESERVE
)

	)

86 c⁄° 
gcov_˘r_summ¨y
 *
¥ofûe_öfo
;

99 
	s¥ofûe_ªc‹d


103 
	mnum_mism©ched_‰eq_ö
[2];

105 
	mnum_mism©ched_‰eq_out
[2];

108 
	mnum_mism©ched_cou¡_ö
[2];

110 
	mnum_mism©ched_cou¡_out
[2];

112 
gcov_ty≥
 
	mtime
[2];

114 
	msize
[2];

116 
boﬁ
 
	mrun
;

120 
	glo›
;

122 
GTY
(()Ë
	gπl_bb_öfo
 {

125 
πx
 
	gíd_
;

129 
πx
 
	ghódî_
;

130 
πx
 
	gfoŸî_
;

133 
GTY
(()Ë
	ggim∂e_bb_öfo
 {

135 
gim∂e_£q
 
	g£q
;

138 
gim∂e_£q
 
	gphi_nodes
;

167 
GTY
((
chaö_√xt
 ("%h.√xt_bb"), 
chaö_¥ev
 ("%h.¥ev_bb"))Ë
	gbasic_block_def
 {

169 
	gvec
<
	gedge
, 
	gva_gc
> *
	g¥eds
;

170 
	gvec
<
	gedge
, 
	gva_gc
> *
	gsuccs
;

173 
PTR
 
GTY
 ((
skù
 (""))Ë
	gaux
;

176 
lo›
 *
	glo›_Áthî
;

179 
ë_node
 * 
GTY
 ((
skù
 (""))Ë
	gdom
[2];

182 
basic_block
 
	g¥ev_bb
;

183 
basic_block
 
	g√xt_bb
;

185 
	ubasic_block_û_dïídít
 {

186 
gim∂e_bb_öfo
 
GTY
 ((
èg
 ("0"))Ë
	ggim∂e
;

188 
πx
 
	ghód_
;

189 
πl_bb_öfo
 * 
	gπl
;

190 } 
GTY
 ((
èg
 ("1"))Ë
	gx
;

191 } 
GTY
 ((
desc
 ("((%1.Êag†& BB_RTLË!0)"))Ë
	gû
;

194 
	gÊags
;

197 
	gödex
;

200 
gcov_ty≥
 
	gcou¡
;

203 
	g‰equícy
;

208 
	gdis¸imö©‹
;

214 
	t__as£π_gim∂e_bb_smÆÀr_πl_bb


215 [(Ë (
πl_bb_öfo
)

216 - (Ë (
gim∂e_bb_öfo
)];

219 
	#BB_FREQ_MAX
 10000

	)

222 
	#DEF_BASIC_BLOCK_FLAG
(
NAME
,
IDX
Ë
BB_
##NAME = 1 << IDX ,

	)

223 
	ecfg_bb_Êags


225 
	~"cfg-Êags.def
"

226 
	mLAST_CFG_BB_FLAG


228 #unde‡
DEF_BASIC_BLOCK_FLAG


231 
	#BB_ALL_FLAGS
 ((
LAST_CFG_BB_FLAG
 - 1Ë* 2 - 1)

	)

235 
	#BB_FLAGS_TO_PRESERVE
 \

236 (
BB_DISABLE_SCHEDULE
 | 
BB_RTL
 | 
BB_NON_LOCAL_GOTO_TARGET
 \

237 | 
BB_HOT_PARTITION
 | 
BB_COLD_PARTITION
)

	)

240 
	#BB_UNPARTITIONED
 0

	)

244 
	#BB_PARTITION
(
bb
Ë((bb)->
Êags
 & (
BB_HOT_PARTITION
|
BB_COLD_PARTITION
))

	)

245 
	#BB_SET_PARTITION
(
bb
, 
∑π
) do { \

246 
basic_block
 
bb_
 = (
bb
); \

247 
bb_
->
Êags
 = ((bb_->Êag†& ~(
BB_HOT_PARTITION
|
BB_COLD_PARTITION
)) \

248 | (
∑π
)); \

249 } 0)

	)

251 
	#BB_COPY_PARTITION
(
d°bb
, 
§cbb
) \

252 
	`BB_SET_PARTITION
 (
d°bb
, 
	`BB_PARTITION
 (
§cbb
))

	)

256 
	edom_°©e


258 
	mDOM_NONE
,

259 
	mDOM_NO_FAST_QUERY
,

260 
	mDOM_OK


264 
	e¥ofûe_°©us_d


266 
	mPROFILE_ABSENT
,

267 
	mPROFILE_GUESSED
,

268 
	mPROFILE_READ
,

269 
	mPROFILE_LAST


276 
GTY
(()Ë
	gc⁄åﬁ_Êow_gøph
 {

279 
basic_block
 
	gx_íåy_block_±r
;

280 
basic_block
 
	gx_exô_block_±r
;

283 
	gvec
<
	gbasic_block
, 
	gva_gc
> *
	gx_basic_block_öfo
;

286 
	gx_n_basic_blocks
;

289 
	gx_n_edges
;

292 
	gx_œ°_basic_block
;

295 
	gœ°_œbñ_uid
;

299 
	gvec
<
	gbasic_block
, 
	gva_gc
> *
	gx_œbñ_to_block_m≠
;

301 
¥ofûe_°©us_d
 
	gx_¥ofûe_°©us
;

304 
dom_°©e
 
	gx_dom_compuãd
[2];

307 
	gx_n_bbs_ö_dom_åì
[2];

311 
	gmax_jum±abÀ_íts
;

315 
	#ENTRY_BLOCK_PTR_FOR_FN
(
FN
Ë((FN)->
cfg
->
x_íåy_block_±r
)

	)

316 
	#EXIT_BLOCK_PTR_FOR_FN
(
FN
Ë((FN)->
cfg
->
x_exô_block_±r
)

	)

317 
	#basic_block_öfo_f‹_‚
(
FN
Ë((FN)->
cfg
->
x_basic_block_öfo
)

	)

318 
	#n_basic_blocks_f‹_‚
(
FN
Ë((FN)->
cfg
->
x_n_basic_blocks
)

	)

319 
	#n_edges_f‹_‚
(
FN
Ë((FN)->
cfg
->
x_n_edges
)

	)

320 
	#œ°_basic_block_f‹_‚
(
FN
Ë((FN)->
cfg
->
x_œ°_basic_block
)

	)

321 
	#œbñ_to_block_m≠_f‹_‚
(
FN
Ë((FN)->
cfg
->
x_œbñ_to_block_m≠
)

	)

322 
	#¥ofûe_°©us_f‹_‚
(
FN
Ë((FN)->
cfg
->
x_¥ofûe_°©us
)

	)

324 
	#BASIC_BLOCK_FOR_FN
(
FN
,
N
) \

325 ((*
	`basic_block_öfo_f‹_‚
 (
FN
))[(
N
)])

	)

326 
	#SET_BASIC_BLOCK_FOR_FN
(
FN
,
N
,
BB
) \

327 ((*
	`basic_block_öfo_f‹_‚
 (
FN
))[(
N
)] = (
BB
))

	)

330 
	#FOR_BB_BETWEEN
(
BB
, 
FROM
, 
TO
, 
DIR
) \

331 
BB
 = 
FROM
; BB !
TO
; BB = BB->
DIR
)

	)

333 
	#FOR_EACH_BB_FN
(
BB
, 
FN
) \

334 
	`FOR_BB_BETWEEN
 (
BB
, (
FN
)->
cfg
->
x_íåy_block_±r
->
√xt_bb
, (FN)->cfg->
x_exô_block_±r
,Çext_bb)

	)

336 
	#FOR_EACH_BB_REVERSE_FN
(
BB
, 
FN
) \

337 
	`FOR_BB_BETWEEN
 (
BB
, (
FN
)->
cfg
->
x_exô_block_±r
->
¥ev_bb
, (FN)->cfg->
x_íåy_block_±r
,Öªv_bb)

	)

340 
	#FOR_BB_INSNS
(
BB
, 
INSN
) \

341 (
INSN
Ë
	`BB_HEAD
 (
BB
); \

342 (
INSN
Ë&& (INSNË!
	`NEXT_INSN
 (
	`BB_END
 (
BB
)); \

343 (
INSN
Ë
	`NEXT_INSN
 (INSN))

	)

347 
	#FOR_BB_INSNS_SAFE
(
BB
, 
INSN
, 
CURR
) \

348 (
INSN
Ë
	`BB_HEAD
 (
BB
), (
CURR
Ë(INSNË? 
	`NEXT_INSN
 ((INSN)): 
NULL
; \

349 (
INSN
Ë&& (INSNË!
	`NEXT_INSN
 (
	`BB_END
 (
BB
)); \

350 (
INSN
Ë(
CURR
), (CURRË(INSNË? 
	`NEXT_INSN
 ((INSN)Ë: 
NULL
)

	)

352 
	#FOR_BB_INSNS_REVERSE
(
BB
, 
INSN
) \

353 (
INSN
Ë
	`BB_END
 (
BB
); \

354 (
INSN
Ë&& (INSNË!
	`PREV_INSN
 (
	`BB_HEAD
 (
BB
)); \

355 (
INSN
Ë
	`PREV_INSN
 (INSN))

	)

357 
	#FOR_BB_INSNS_REVERSE_SAFE
(
BB
, 
INSN
, 
CURR
) \

358 (
INSN
Ë
	`BB_END
 (
BB
),(
CURR
Ë(INSNË? 
	`PREV_INSN
 ((INSN)Ë: 
NULL
; \

359 (
INSN
Ë&& (INSNË!
	`PREV_INSN
 (
	`BB_HEAD
 (
BB
)); \

360 (
INSN
Ë(
CURR
), (CURRË(INSNË? 
	`PREV_INSN
 ((INSN)Ë: 
NULL
)

	)

365 
	#FOR_ALL_BB_FN
(
BB
, 
FN
) \

366 
BB
 = 
	`ENTRY_BLOCK_PTR_FOR_FN
 (
FN
); BB; BB = BB->
√xt_bb
)

	)

371 
	#BB_HEAD
(
B
Ë(B)->
û
.
x
.
hód_


	)

372 
	#BB_END
(
B
Ë(B)->
û
.
x
.
πl
->
íd_


	)

373 
	#BB_HEADER
(
B
Ë(B)->
û
.
x
.
πl
->
hódî_


	)

374 
	#BB_FOOTER
(
B
Ë(B)->
û
.
x
.
πl
->
foŸî_


	)

378 
	#ENTRY_BLOCK
 (0)

	)

379 
	#EXIT_BLOCK
 (1)

	)

382 
	#NUM_FIXED_BLOCKS
 (2)

	)

384 
	#£t_block_f‹_ö¢
(
INSN
, 
BB
Ë(
	`BLOCK_FOR_INSN
 (INSNËBB)

	)

386 
compuã_bb_f‹_ö¢
 ();

387 
‰ì_bb_f‹_ö¢
 ();

388 
upd©e_bb_f‹_ö¢
 (
basic_block
);

390 
ö£π_ö¢_⁄_edge
 (
πx
, 
edge
);

391 
basic_block
 
•lô_edge_™d_ö£π
 (
edge
, 
πx
);

393 
commô_⁄e_edge_ö£πi⁄
 (
edge
 
e
);

394 
commô_edge_ö£πi⁄s
 ();

396 
edge
 
unchecked_make_edge
 (
basic_block
, basic_block, );

397 
edge
 
ˇched_make_edge
 (
sbôm≠
, 
basic_block
, basic_block, );

398 
edge
 
make_edge
 (
basic_block
, basic_block, );

399 
edge
 
make_sögÀ_succ_edge
 (
basic_block
, basic_block, );

400 
ªmove_edge_øw
 (
edge
);

401 
ªdúe˘_edge_succ
 (
edge
, 
basic_block
);

402 
edge
 
ªdúe˘_edge_succ_nodup
 (edge, 
basic_block
);

403 
ªdúe˘_edge_¥ed
 (
edge
, 
basic_block
);

404 
basic_block
 
¸óã_basic_block_°ru˘uª
 (
πx
,Ñtx,Ñtx, basic_block);

405 
˛ór_bb_Êags
 ();

406 
dump_bb_öfo
 (
FILE
 *, 
basic_block
, , , 
boﬁ
, bool);

407 
dump_edge_öfo
 (
FILE
 *, 
edge
, , );

408 
debug
 (
edge_def
 &
ªf
);

409 
debug
 (
edge_def
 *
±r
);

410 
brõf_dump_cfg
 (
FILE
 *, );

411 
˛ór_edges
 ();

412 
sˇÀ_bbs_‰equícõs_öt
 (
basic_block
 *, , , );

413 
sˇÀ_bbs_‰equícõs_gcov_ty≥
 (
basic_block
 *, , 
gcov_ty≥
,

414 
gcov_ty≥
);

421 
	s˚_if_block


423 
basic_block
 
	mã°_bb
;

424 
basic_block
 
	mthí_bb
;

425 
basic_block
 
	mñ£_bb
;

426 
basic_block
 
	mjoö_bb
;

427 
basic_block
 
	mœ°_ã°_bb
;

428 
	mnum_mu…ùÀ_ã°_blocks
;

429 
	mnum_™d_™d_blocks
;

430 
	mnum_‹_‹_blocks
;

431 
	mnum_mu…ùÀ_ã°_ö¢s
;

432 
	m™d_™d_p
;

433 
	mnum_thí_ö¢s
;

434 
	mnum_ñ£_ö¢s
;

435 
	m∑ss
;

440 
	sedge_li°


442 
	mnum_edges
;

443 
edge
 *
	mödex_to_edge
;

447 ˛as†
	cc⁄åﬁ_dïídí˚s


449 
	mpublic
:

450 
c⁄åﬁ_dïídí˚s
 (
edge_li°
 *);

451 ~
c⁄åﬁ_dïídí˚s
 ();

452 
bôm≠
 
gë_edges_dïídít_⁄
 ();

453 
edge
 
gë_edge
 ();

455 
	m¥iv©e
:

456 
£t_c⁄åﬁ_dïídí˚_m≠_bô
 (
basic_block
, );

457 
˛ór_c⁄åﬁ_dïídí˚_bôm≠
 (
basic_block
);

458 
föd_c⁄åﬁ_dïídí˚
 ();

459 
	mvec
<
	mbôm≠
> 
	mc⁄åﬁ_dïídí˚_m≠
;

460 
edge_li°
 *
	mm_ñ
;

464 
	#REG_BR_PROB_BASE
 10000

	)

467 
	#EDGE_INDEX_NO_EDGE
 -1

	)

471 
	#EDGE_INDEX
(
ñ
, 
¥ed
, 
succ
Ë(
	`föd_edge_ödex
 (”l), (¥ed), (succ)))

	)

475 
	#INDEX_EDGE_PRED_BB
(
ñ
, 
ödex
Ë(”l)->
ödex_to_edge
[(ödex)]->
§c
)

	)

476 
	#INDEX_EDGE_SUCC_BB
(
ñ
, 
ödex
Ë(”l)->
ödex_to_edge
[(ödex)]->
de°
)

	)

479 
	#INDEX_EDGE
(
ñ
, 
ödex
Ë(”l)->
ödex_to_edge
[(ödex)])

	)

482 
	#NUM_EDGES
(
ñ
Ë(”l)->
num_edges
)

	)

485 
	#FALLTHRU_EDGE
(
bb
Ë(
	`EDGE_SUCC
 ((bb), 0)->
Êags
 & 
EDGE_FALLTHRU
 \

486 ? 
	`EDGE_SUCC
 ((
bb
), 0Ë: EDGE_SUCC ((bb), 1))

	)

489 
	#BRANCH_EDGE
(
bb
Ë(
	`EDGE_SUCC
 ((bb), 0)->
Êags
 & 
EDGE_FALLTHRU
 \

490 ? 
	`EDGE_SUCC
 ((
bb
), 1Ë: EDGE_SUCC ((bb), 0))

	)

492 
	#RDIV
(
X
,
Y
Ë(((XË+ (YË/ 2Ë/ (Y))

	)

494 
	#EDGE_FREQUENCY
(
e
Ë
	`RDIV
 (”)->
§c
->
‰equícy
 * (e)->
¥obabûôy
, \

495 
REG_BR_PROB_BASE
)

	)

499 
	#GCOV_COMPUTE_SCALE
(
num
,
dí
) \

500 ((
dí
Ë? 
	`RDIV
 ((
num
Ë* 
REG_BR_PROB_BASE
, (dí)Ë: REG_BR_PROB_BASE)

	)

503 
	#EDGE_CRITICAL_P
(
e
Ë(
	`EDGE_COUNT
 (”)->
§c
->
succs
) >= 2 \

504 && 
	`EDGE_COUNT
 ((
e
)->
de°
->
¥eds
Ë>2)

	)

506 
	#EDGE_COUNT
(
ev
Ë
	`vec_ß„_Àngth
 (ev)

	)

507 
	#EDGE_I
(
ev
,
i
Ë(*ev)[(i)]

	)

508 
	#EDGE_PRED
(
bb
,
i
Ë(*(bb)->
¥eds
)[(i)]

	)

509 
	#EDGE_SUCC
(
bb
,
i
Ë(*(bb)->
succs
)[(i)]

	)

513 
ölöe
 
boﬁ


514 
	$sögÀ_succ_p
 (
c⁄°_basic_block
 
bb
)

516  
	`EDGE_COUNT
 (
bb
->
succs
) == 1;

517 
	}
}

521 
ölöe
 
boﬁ


522 
	$sögÀ_¥ed_p
 (
c⁄°_basic_block
 
bb
)

524  
	`EDGE_COUNT
 (
bb
->
¥eds
) == 1;

525 
	}
}

530 
ölöe
 
edge


531 
	$sögÀ_succ_edge
 (
c⁄°_basic_block
 
bb
)

533 
	`gcc_checkög_as£π
 (
	`sögÀ_succ_p
 (
bb
));

534  
	`EDGE_SUCC
 (
bb
, 0);

535 
	}
}

540 
ölöe
 
edge


541 
	$sögÀ_¥ed_edge
 (
c⁄°_basic_block
 
bb
)

543 
	`gcc_checkög_as£π
 (
	`sögÀ_¥ed_p
 (
bb
));

544  
	`EDGE_PRED
 (
bb
, 0);

545 
	}
}

550 
ölöe
 
basic_block


551 
	$sögÀ_succ
 (
c⁄°_basic_block
 
bb
)

553  
	`sögÀ_succ_edge
 (
bb
)->
de°
;

554 
	}
}

559 
ölöe
 
basic_block


560 
	$sögÀ_¥ed
 (
c⁄°_basic_block
 
bb
)

562  
	`sögÀ_¥ed_edge
 (
bb
)->
§c
;

563 
	}
}

567 
	sedge_ôî©‹
 {

568 
	mödex
;

569 
	mvec
<
	medge
, 
	mva_gc
> **
	mc⁄èöî
;

572 
ölöe
 
	gvec
<
	gedge
, 
	gva_gc
> *

573 
	$ei_c⁄èöî
 (
edge_ôî©‹
 
i
)

575 
	`gcc_checkög_as£π
 (
i
.
c⁄èöî
);

576  *
i
.
c⁄èöî
;

577 
	}
}

579 
	#ei_°¨t
(
ôî
Ë
	`ei_°¨t_1
 (&(ôî))

	)

580 
	#ei_œ°
(
ôî
Ë
	`ei_œ°_1
 (&(ôî))

	)

583 
ölöe
 
edge_ôî©‹


584 
ei_°¨t_1
 (
vec
<
edge
, 
va_gc
> **
ev
)

586 
edge_ôî©‹
 
	gi
;

588 
	gi
.
	gödex
 = 0;

589 
	gi
.
	gc⁄èöî
 = 
ev
;

591  
	gi
;

596 
ölöe
 
edge_ôî©‹


597 
ei_œ°_1
 (
vec
<
edge
, 
va_gc
> **
ev
)

599 
edge_ôî©‹
 
	gi
;

601 
	gi
.
	gödex
 = 
EDGE_COUNT
 (*
ev
) - 1;

602 
	gi
.
	gc⁄èöî
 = 
ev
;

604  
	gi
;

608 
ölöe
 
boﬁ


609 
	$ei_íd_p
 (
edge_ôî©‹
 
i
)

611  (
i
.
ödex
 =
	`EDGE_COUNT
 (
	`ei_c⁄èöî
 (i)));

612 
	}
}

616 
ölöe
 
boﬁ


617 
	$ei_⁄e_bef‹e_íd_p
 (
edge_ôî©‹
 
i
)

619  (
i
.
ödex
 + 1 =
	`EDGE_COUNT
 (
	`ei_c⁄èöî
 (i)));

620 
	}
}

623 
ölöe
 

624 
	$ei_√xt
 (
edge_ôî©‹
 *
i
)

626 
	`gcc_checkög_as£π
 (
i
->
ödex
 < 
	`EDGE_COUNT
 (
	`ei_c⁄èöî
 (*i)));

627 
i
->
ödex
++;

628 
	}
}

631 
ölöe
 

632 
	$ei_¥ev
 (
edge_ôî©‹
 *
i
)

634 
	`gcc_checkög_as£π
 (
i
->
ödex
 > 0);

635 
i
->
ödex
--;

636 
	}
}

639 
ölöe
 
edge


640 
	$ei_edge
 (
edge_ôî©‹
 
i
)

642  
	`EDGE_I
 (
	`ei_c⁄èöî
 (
i
), i.
ödex
);

643 
	}
}

648 
ölöe
 
edge


649 
	$ei_ß„_edge
 (
edge_ôî©‹
 
i
)

651  !
	`ei_íd_p
 (
i
Ë? 
	`ei_edge
 (iË: 
NULL
;

652 
	}
}

658 
ölöe
 
boﬁ


659 
	$ei_c⁄d
 (
edge_ôî©‹
 
ei
, 
edge
 *
p
)

661 i‡(!
	`ei_íd_p
 (
ei
))

663 *
p
 = 
	`ei_edge
 (
ei
);

668 *
p
 = 
NULL
;

671 
	}
}

688 
	#FOR_EACH_EDGE
(
EDGE
,
ITER
,
EDGE_VEC
) \

689 (
ITER
Ë
	`ei_°¨t
 ((
EDGE_VEC
)); \

690 
	`ei_c⁄d
 ((
ITER
), &(
EDGE
)); \

691 
	`ei_√xt
 (&(
ITER
)))

	)

693 
	#CLEANUP_EXPENSIVE
 1

	)

695 
	#CLEANUP_CROSSJUMP
 2

	)

696 
	#CLEANUP_POST_REGSTACK
 4

	)

698 
	#CLEANUP_THREADING
 8

	)

699 
	#CLEANUP_NO_INSN_DEL
 16

	)

701 
	#CLEANUP_CFGLAYOUT
 32

	)

702 
	#CLEANUP_CFG_CHANGED
 64

	)

705 
bôm≠_öãr£˘i⁄_of_succs
 (
sbôm≠
, sbôm≠ *, 
basic_block
);

706 
bôm≠_öãr£˘i⁄_of_¥eds
 (
sbôm≠
, sbôm≠ *, 
basic_block
);

707 
bôm≠_uni⁄_of_succs
 (
sbôm≠
, sbôm≠ *, 
basic_block
);

708 
bôm≠_uni⁄_of_¥eds
 (
sbôm≠
, sbôm≠ *, 
basic_block
);

711 
edge_li°
 *
¥e_edge_lcm
 (, 
sbôm≠
 *, sbitmap *,

712 
sbôm≠
 *, sbitmap *, sbitmap **,

713 
sbôm≠
 **);

714 
edge_li°
 *
¥e_edge_ªv_lcm
 (, 
sbôm≠
 *,

715 
sbôm≠
 *, sbitmap *,

716 
sbôm≠
 *, sbitmap **,

717 
sbôm≠
 **);

718 
compuã_avaûabÀ
 (
sbôm≠
 *, sbitmap *, sbitmap *, sbitmap *);

721 
boﬁ
 
maybe_hŸ_bb_p
 (
fun˘i⁄
 *, 
c⁄°_basic_block
);

722 
boﬁ
 
maybe_hŸ_edge_p
 (
edge
);

723 
boﬁ
 
¥obably_√vî_execuãd_bb_p
 (
fun˘i⁄
 *, 
c⁄°_basic_block
);

724 
boﬁ
 
¥obably_√vî_execuãd_edge_p
 (
fun˘i⁄
 *, 
edge
);

725 
boﬁ
 
›timize_bb_f‹_size_p
 (
c⁄°_basic_block
);

726 
boﬁ
 
›timize_bb_f‹_•ìd_p
 (
c⁄°_basic_block
);

727 
boﬁ
 
›timize_edge_f‹_size_p
 (
edge
);

728 
boﬁ
 
›timize_edge_f‹_•ìd_p
 (
edge
);

729 
boﬁ
 
›timize_lo›_f‹_size_p
 (
lo›
 *);

730 
boﬁ
 
›timize_lo›_f‹_•ìd_p
 (
lo›
 *);

731 
boﬁ
 
›timize_lo›_√°_f‹_size_p
 (
lo›
 *);

732 
boﬁ
 
›timize_lo›_√°_f‹_•ìd_p
 (
lo›
 *);

733 
boﬁ
 
gim∂e_¥edi˘ed_by_p
 (
c⁄°_basic_block
, 
br_¥edi˘‹
);

734 
boﬁ
 
πl_¥edi˘ed_by_p
 (
c⁄°_basic_block
, 
br_¥edi˘‹
);

735 
gim∂e_¥edi˘_edge
 (
edge
, 
br_¥edi˘‹
, );

736 
πl_¥edi˘_edge
 (
edge
, 
br_¥edi˘‹
, );

737 
¥edi˘_edge_def
 (
edge
, 
br_¥edi˘‹
, 
¥edi˘i⁄
);

738 
guess_outgoög_edge_¥obabûôõs
 (
basic_block
);

739 
ªmove_¥edi˘i⁄s_assocüãd_wôh_edge
 (
edge
);

740 
boﬁ
 
edge_¥obabûôy_ªlübÀ_p
 (
c⁄°_edge
);

741 
boﬁ
 
br_¥ob_nŸe_ªlübÀ_p
 (
c⁄°_πx
);

742 
boﬁ
 
¥edi˘abÀ_edge_p
 (
edge
);

745 
öô_Êow
 (
fun˘i⁄
 *);

746 
debug_bb
 (
basic_block
);

747 
basic_block
 
debug_bb_n
 ();

748 
dump_Êow_öfo
 (
FILE
 *, );

749 
expunge_block
 (
basic_block
);

750 
lök_block
 (
basic_block
, basic_block);

751 
u∆ök_block
 (
basic_block
);

752 
com∑˘_blocks
 ();

753 
basic_block
 
Æloc_block
 ();

754 
Æloc_aux_f‹_blocks
 ();

755 
˛ór_aux_f‹_blocks
 ();

756 
‰ì_aux_f‹_blocks
 ();

757 
Æloc_aux_f‹_edge
 (
edge
, );

758 
Æloc_aux_f‹_edges
 ();

759 
˛ór_aux_f‹_edges
 ();

760 
‰ì_aux_f‹_edges
 ();

763 
föd_uƒóchabÀ_blocks
 ();

764 
boﬁ
 
m¨k_dfs_back_edges
 ();

765 
edge_li°
 * 
¸óã_edge_li°
 ();

766 
‰ì_edge_li°
 (
edge_li°
 *);

767 
¥öt_edge_li°
 (
FILE
 *, 
edge_li°
 *);

768 
vîify_edge_li°
 (
FILE
 *, 
edge_li°
 *);

769 
föd_edge_ödex
 (
edge_li°
 *, 
basic_block
, basic_block);

770 
edge
 
föd_edge
 (
basic_block
, basic_block);

771 
ªmove_Áke_edges
 ();

772 
ªmove_Áke_exô_edges
 ();

773 
add_n‹ëu∫_Áke_exô_edges
 ();

774 
c⁄√˘_öföôe_lo›s_to_exô
 ();

775 
po°_‹dî_compuã
 (*, 
boﬁ
, bool);

776 
basic_block
 
dfs_föd_dódíd
 (basic_block);

777 
övîãd_po°_‹dî_compuã
 (*);

778 
¥e_™d_ªv_po°_‹dî_compuã_‚
 (
fun˘i⁄
 *,

779 *, *, 
boﬁ
);

780 
¥e_™d_ªv_po°_‹dî_compuã
 (*, *, 
boﬁ
);

781 
dfs_íumî©e_‰om
 (
basic_block
, ,

782 
	$boﬁ
 (*)(
c⁄°_basic_block
, const *),

783 
basic_block
 *, , const *);

784 
	`compuã_domö™˚_‰⁄tõrs
 (
bôm≠_hód
 *);

785 
bôm≠
 
	`compuã_idf
 (bôm≠, 
bôm≠_hód
 *);

786 
basic_block
 * 
	`sögÀ_¥ed_bef‹e_succ_‹dî
 ();

789 
πx
 
	`block_œbñ
 (
basic_block
);

790 
πx
 
	`bb_nŸe
 (
basic_block
);

791 
boﬁ
 
	`purge_Æl_dód_edges
 ();

792 
boﬁ
 
	`purge_dód_edges
 (
basic_block
);

793 
boﬁ
 
	`fixup_abn‹mÆ_edges
 ();

794 
basic_block
 
	`f‹˚_n⁄ÁŒthru_™d_ªdúe˘
 (
edge
, basic_block, 
πx
);

795 
boﬁ
 
	`c⁄èös_no_a˘ive_ö¢_p
 (
c⁄°_basic_block
);

796 
boﬁ
 
	`f‹w¨dî_block_p
 (
c⁄°_basic_block
);

797 
boﬁ
 
	`ˇn_ÁŒthru
 (
basic_block
, basic_block);

798 
	`emô_b¨rõr_a·î_bb
 (
basic_block
 
bb
);

799 
	`fixup_∑πôi⁄s
 ();

802 
	`föd_m™y_sub_basic_blocks
 (
sbôm≠
);

803 
	`πl_make_eh_edge
 (
sbôm≠
, 
basic_block
, 
πx
);

805 
	eª∂a˚_dúe˘i⁄
 { 
dú_n⁄e
, 
dú_f‹w¨d
, 
dú_backw¨d
, 
dú_bŸh
 };

808 
boﬁ
 
	`˛ónup_cfg
 ();

809 
	`Êow_föd_¸oss_jump
 (
basic_block
, basic_block, 
πx
 *,Ñtx *,

810 
ª∂a˚_dúe˘i⁄
*);

811 
	`Êow_föd_hód_m©chög_£quí˚
 (
basic_block
, basic_block,

812 
πx
 *,Ñtx *, );

814 
boﬁ
 
	`dñëe_uƒóchabÀ_blocks
 ();

816 
	`upd©e_br_¥ob_nŸe
 (
basic_block
);

817 
boﬁ
 
	`öside_basic_block_p
 (
c⁄°_πx
);

818 
boﬁ
 
	`c⁄åﬁ_Êow_ö¢_p
 (
c⁄°_πx
);

819 
πx
 
	`gë_œ°_bb_ö¢
 (
basic_block
);

823 
	ecdi_dúe˘i⁄


825 
CDI_DOMINATORS
 = 1,

826 
CDI_POST_DOMINATORS
 = 2

829 
dom_°©e
 
	`dom_öfo_°©e
 (
cdi_dúe˘i⁄
);

830 
	`£t_dom_öfo_avaûabûôy
 (
cdi_dúe˘i⁄
, 
dom_°©e
);

831 
boﬁ
 
	`dom_öfo_avaûabÀ_p
 (
cdi_dúe˘i⁄
);

832 
	`ˇlcuœã_domö™˚_öfo
 (
cdi_dúe˘i⁄
);

833 
	`‰ì_domö™˚_öfo
 (
cdi_dúe˘i⁄
);

834 
basic_block
 
	`√¨e°_comm⁄_domö©‹
 (
cdi_dúe˘i⁄
,

835 
basic_block
, basic_block);

836 
basic_block
 
	`√¨e°_comm⁄_domö©‹_f‹_£t
 (
cdi_dúe˘i⁄
,

837 
bôm≠
);

838 
	`£t_immedüã_domö©‹
 (
cdi_dúe˘i⁄
, 
basic_block
,

839 
basic_block
);

840 
basic_block
 
	`gë_immedüã_domö©‹
 (
cdi_dúe˘i⁄
, basic_block);

841 
boﬁ
 
	`domö©ed_by_p
 (
cdi_dúe˘i⁄
, 
c⁄°_basic_block
, const_basic_block);

842 
vec
<
basic_block
> 
	`gë_domö©ed_by
 (
cdi_dúe˘i⁄
, basic_block);

843 
vec
<
basic_block
> 
	`gë_domö©ed_by_ªgi⁄
 (
cdi_dúe˘i⁄
,

844 
basic_block
 *,

846 
vec
<
basic_block
> 
	`gë_domö©ed_to_dïth
 (
cdi_dúe˘i⁄
,

847 
basic_block
, );

848 
vec
<
basic_block
> 
	`gë_Æl_domö©ed_blocks
 (
cdi_dúe˘i⁄
,

849 
basic_block
);

850 
	`add_to_domö™˚_öfo
 (
cdi_dúe˘i⁄
, 
basic_block
);

851 
	`dñëe_‰om_domö™˚_öfo
 (
cdi_dúe˘i⁄
, 
basic_block
);

852 
basic_block
 
	`ªcompuã_domö©‹
 (
cdi_dúe˘i⁄
, basic_block);

853 
	`ªdúe˘_immedüã_domö©‹s
 (
cdi_dúe˘i⁄
, 
basic_block
,

854 
basic_block
);

855 
	`ôî©e_fix_domö©‹s
 (
cdi_dúe˘i⁄
,

856 
vec
<
basic_block
> , 
boﬁ
);

857 
	`vîify_domö©‹s
 (
cdi_dúe˘i⁄
);

858 
basic_block
 
	`fú°_dom_s⁄
 (
cdi_dúe˘i⁄
, basic_block);

859 
basic_block
 
	`√xt_dom_s⁄
 (
cdi_dúe˘i⁄
, basic_block);

860 
	`bb_dom_dfs_ö
 (
cdi_dúe˘i⁄
, 
basic_block
);

861 
	`bb_dom_dfs_out
 (
cdi_dúe˘i⁄
, 
basic_block
);

863 
edge
 
	`åy_ªdúe˘_by_ª∂acög_jump
 (edge, 
basic_block
, 
boﬁ
);

864 
	`bªak_su≥rblocks
 ();

865 
	`ªlök_block_chaö
 (
boﬁ
);

866 
	`upd©e_bb_¥ofûe_f‹_thªadög
 (
basic_block
, , 
gcov_ty≥
, 
edge
);

867 
	`öô_πl_bb_öfo
 (
basic_block
);

869 
	`öôülize_‹igöÆ_c›y_èbÀs
 ();

870 
	`‰ì_‹igöÆ_c›y_èbÀs
 ();

871 
	`£t_bb_‹igöÆ
 (
basic_block
, basic_block);

872 
basic_block
 
	`gë_bb_‹igöÆ
 (basic_block);

873 
	`£t_bb_c›y
 (
basic_block
, basic_block);

874 
basic_block
 
	`gë_bb_c›y
 (basic_block);

875 
	`£t_lo›_c›y
 (
lo›
 *, loop *);

876 
lo›
 *
	`gë_lo›_c›y
 (loop *);

878 
	~"cfghooks.h
"

882 
ölöe
 
boﬁ


883 
	$bb_ö_å™ß˘i⁄
 (
basic_block
 
bb
)

885  
bb
->
Êags
 & 
BB_IN_TRANSACTION
;

886 
	}
}

889 
ölöe
 
boﬁ


890 
	$bb_has_eh_¥ed
 (
basic_block
 
bb
)

892 
edge
 
e
;

893 
edge_ôî©‹
 
ei
;

895 
	`FOR_EACH_EDGE
 (
e
, 
ei
, 
bb
->
¥eds
)

897 i‡(
e
->
Êags
 & 
EDGE_EH
)

898  
åue
;

900  
Ál£
;

901 
	}
}

904 
ölöe
 
boﬁ


905 
	$bb_has_abn‹mÆ_¥ed
 (
basic_block
 
bb
)

907 
edge
 
e
;

908 
edge_ôî©‹
 
ei
;

910 
	`FOR_EACH_EDGE
 (
e
, 
ei
, 
bb
->
¥eds
)

912 i‡(
e
->
Êags
 & 
EDGE_ABNORMAL
)

913  
åue
;

915  
Ál£
;

916 
	}
}

919 
ölöe
 
edge


920 
föd_ÁŒthru_edge
 (
vec
<
edge
, 
va_gc
> *
edges
)

922 
edge
 
	ge
;

923 
edge_ôî©‹
 
	gei
;

925 
FOR_EACH_EDGE
 (
e
, 
ei
, 
edges
)

926 i‡(
	ge
->
	gÊags
 & 
	gEDGE_FALLTHRU
)

929  
	ge
;

933 
edge
 
mfb_kj_edge
;

934 
boﬁ
 
mfb_kìp_ju°
 (
edge
);

937 
πl_¥ofûe_f‹_bb
 (
basic_block
);

938 
πl_¥ofûe_f‹_edge
 (
edge
);

939 
deÁu…_πl_¥ofûe
 ();

942 
gcov_w‹kög_£t_öfo
 
	tgcov_w‹kög_£t_t
;

943 
gcov_w‹kög_£t_t
 *
föd_w‹kög_£t
 (
p˘_times_10
);

947 
ölöe
 

948 
	$check_¥obabûôy
 (
¥ob
)

950 
	`gcc_checkög_as£π
 (
¥ob
 >0 &&Örob <
REG_BR_PROB_BASE
);

951 
	}
}

956 
ölöe
 

957 
	$comböe_¥obabûôõs
 (
¥ob1
, 
¥ob2
)

959 
	`check_¥obabûôy
 (
¥ob1
);

960 
	`check_¥obabûôy
 (
¥ob2
);

961  
	`RDIV
 (
¥ob1
 * 
¥ob2
, 
REG_BR_PROB_BASE
);

962 
	}
}

968 
ölöe
 
gcov_ty≥


969 
	$≠∂y_sˇÀ
 (
gcov_ty≥
 
‰eq
, gcov_ty≥ 
sˇÀ
)

971  
	`RDIV
 (
‰eq
 * 
sˇÀ
, 
REG_BR_PROB_BASE
);

972 
	}
}

976 
ölöe
 
gcov_ty≥


977 
	$≠∂y_¥obabûôy
 (
gcov_ty≥
 
‰eq
, 
¥ob
)

979 
	`check_¥obabûôy
 (
¥ob
);

980  
	`≠∂y_sˇÀ
 (
‰eq
, 
¥ob
);

981 
	}
}

985 
ölöe
 

986 
	$övî£_¥obabûôy
 (
¥ob1
)

988 
	`check_¥obabûôy
 (
¥ob1
);

989  
REG_BR_PROB_BASE
 - 
¥ob1
;

990 
	}
}

994 
ölöe
 
boﬁ


995 
	$has_abn‹mÆ_‹_eh_outgoög_edge_p
 (
basic_block
 
bb
)

997 
edge
 
e
;

998 
edge_ôî©‹
 
ei
;

1000 
	`FOR_EACH_EDGE
 (
e
, 
ei
, 
bb
->
succs
)

1001 i‡(
e
->
Êags
 & (
EDGE_ABNORMAL
 | 
EDGE_EH
))

1002  
åue
;

1004  
Ál£
;

1005 
	}
}

	@include/bitmap.h

20 #i‚de‡
GCC_BITMAP_H


21 
	#GCC_BITMAP_H


	)

130 
	~"hashèb.h
"

131 
	~"°©i°ics.h
"

132 
	~"ob°ack.h
"

136 
	tBITMAP_WORD
;

139 
	#BITMAP_WORD_BITS
 (
CHAR_BIT
 * 
SIZEOF_LONG
 * 1u)

	)

143 #i‚de‡
BITMAP_ELEMENT_WORDS


144 
	#BITMAP_ELEMENT_WORDS
 ((128 + 
BITMAP_WORD_BITS
 - 1Ë/ BITMAP_WORD_BITS)

	)

149 
	#BITMAP_ELEMENT_ALL_BITS
 (
BITMAP_ELEMENT_WORDS
 * 
BITMAP_WORD_BITS
)

	)

152 
GTY
 (()Ë
	gbôm≠_ob°ack
 {

153 
bôm≠_ñemít
 *
	gñemíts
;

154 
bôm≠_hód
 *
	ghóds
;

155 
ob°ack
 
GTY
 ((
skù
)Ë
	gob°ack
;

170 
GTY
((
chaö_√xt
 ("%h.√xt"), 
chaö_¥ev
 ("%h.¥ev"))Ë
	gbôm≠_ñemít
 {

171 
bôm≠_ñemít
 *
	g√xt
;

172 
bôm≠_ñemít
 *
	g¥ev
;

173 
	gödx
;

174 
BITMAP_WORD
 
	gbôs
[
BITMAP_ELEMENT_WORDS
];

180 
GTY
(()Ë
	gbôm≠_hód
 {

181 
	gödx
;

182 
	gdes¸ùt‹_id
;

185 
bôm≠_ñemít
 *
	gfú°
;

186 
bôm≠_ñemít
 * 
GTY
((
skù
(""))Ë
	gcuºít
;

187 
bôm≠_ob°ack
 *
	gob°ack
;

192 
bôm≠_ñemít
 
bôm≠_zîo_bôs
;

193 
bôm≠_ob°ack
 
bôm≠_deÁu…_ob°ack
;

196 
bôm≠_˛ór
 (
bôm≠
);

199 
bôm≠_c›y
 (
bôm≠
, 
c⁄°_bôm≠
);

202 
boﬁ
 
bôm≠_equÆ_p
 (
c⁄°_bôm≠
, const_bitmap);

205 
boﬁ
 
bôm≠_öãr£˘_p
 (
c⁄°_bôm≠
, const_bitmap);

209 
boﬁ
 
bôm≠_öãr£˘_com∂_p
 (
c⁄°_bôm≠
, const_bitmap);

212 
ölöe
 
boﬁ
 
	$bôm≠_em±y_p
 (
c⁄°_bôm≠
 
m≠
)

214  !
m≠
->
fú°
;

215 
	}
}

218 
boﬁ
 
bôm≠_sögÀ_bô_£t_p
 (
c⁄°_bôm≠
);

221 
bôm≠_cou¡_bôs
 (
c⁄°_bôm≠
);

227 
bôm≠_™d
 (
bôm≠
, 
c⁄°_bôm≠
, const_bitmap);

228 
boﬁ
 
bôm≠_™d_öto
 (
bôm≠
, 
c⁄°_bôm≠
);

229 
boﬁ
 
bôm≠_™d_com∂
 (
bôm≠
, 
c⁄°_bôm≠
, const_bitmap);

230 
boﬁ
 
bôm≠_™d_com∂_öto
 (
bôm≠
, 
c⁄°_bôm≠
);

231 
	#bôm≠_com∂_™d
(
DST
, 
A
, 
B
Ë
	`bôm≠_™d_com∂
 (DST, B, A)

	)

232 
bôm≠_com∂_™d_öto
 (
bôm≠
, 
c⁄°_bôm≠
);

233 
bôm≠_˛ór_ønge
 (
bôm≠
, , );

234 
bôm≠_£t_ønge
 (
bôm≠
, , );

235 
boﬁ
 
bôm≠_i‹
 (
bôm≠
, 
c⁄°_bôm≠
, const_bitmap);

236 
boﬁ
 
bôm≠_i‹_öto
 (
bôm≠
, 
c⁄°_bôm≠
);

237 
bôm≠_x‹
 (
bôm≠
, 
c⁄°_bôm≠
, const_bitmap);

238 
bôm≠_x‹_öto
 (
bôm≠
, 
c⁄°_bôm≠
);

241 
boﬁ
 
bôm≠_i‹_™d_öto
 (
bôm≠
 
DST
, 
c⁄°_bôm≠
 
B
, c⁄°_bôm≠ 
C
);

243 
boﬁ
 
bôm≠_i‹_™d_com∂
 (
bôm≠
 
DST
, 
c⁄°_bôm≠
 
A
,

244 
c⁄°_bôm≠
 
B
, c⁄°_bôm≠ 
C
);

246 
boﬁ
 
bôm≠_i‹_™d_com∂_öto
 (
bôm≠
 
A
,

247 
c⁄°_bôm≠
 
B
, c⁄°_bôm≠ 
C
);

250 
boﬁ
 
bôm≠_˛ór_bô
 (
bôm≠
, );

253 
boﬁ
 
bôm≠_£t_bô
 (
bôm≠
, );

256 
bôm≠_bô_p
 (
bôm≠
, );

259 
debug_bôm≠
 (
c⁄°_bôm≠
);

260 
debug_bôm≠_fûe
 (
FILE
 *, 
c⁄°_bôm≠
);

263 
bôm≠_¥öt
 (
FILE
 *, 
c⁄°_bôm≠
, const *, const *);

266 
bôm≠_ob°ack_öôülize
 (
bôm≠_ob°ack
 *);

267 
bôm≠_ob°ack_ªÀa£
 (
bôm≠_ob°ack
 *);

268 
bôm≠_ªgi°î
 (
bôm≠
 
MEM_STAT_DECL
);

269 
dump_bôm≠_°©i°ics
 ();

274 
ölöe
 

275 
	$bôm≠_öôülize_°©
 (
bôm≠
 
hód
, 
bôm≠_ob°ack
 *
ob°ack
 
MEM_STAT_DECL
)

277 
hód
->
fú°
 = hód->
cuºít
 = 
NULL
;

278 
hód
->
ob°ack
 = obstack;

279 i‡(
GATHER_STATISTICS
)

280 
	`bôm≠_ªgi°î
 (
hód
 
PASS_MEM_STAT
);

281 
	}
}

282 
	#bôm≠_öôülize
(
h
,
o
Ë
	`bôm≠_öôülize_°©
 (h,ÿ
MEM_STAT_INFO
)

	)

285 
bôm≠
 
bôm≠_ob°ack_Æloc_°©
 (
bôm≠_ob°ack
 *
ob°ack
 
MEM_STAT_DECL
);

286 
	#bôm≠_ob°ack_Æloc
(
t
Ë
	`bôm≠_ob°ack_Æloc_°©
 (à
MEM_STAT_INFO
)

	)

287 
bôm≠
 
bôm≠_gc_Æloc_°©
 (
ALONE_MEM_STAT_DECL
);

288 
	#bôm≠_gc_Æloc
(Ë
	`bôm≠_gc_Æloc_°©
 (
ALONE_MEM_STAT_INFO
)

	)

289 
bôm≠_ob°ack_‰ì
 (
bôm≠
);

292 
ölöe
 
	$dump_bôm≠
 (
FILE
 *
fûe
, 
c⁄°_bôm≠
 
m≠
)

294 
	`bôm≠_¥öt
 (
fûe
, 
m≠
, "", "\n");

295 
	}
}

296 
debug
 (c⁄° 
bôm≠_hód
 &
ªf
);

297 
debug
 (c⁄° 
bôm≠_hód
 *
±r
);

299 
bôm≠_fú°_£t_bô
 (
c⁄°_bôm≠
);

300 
bôm≠_œ°_£t_bô
 (
c⁄°_bôm≠
);

303 
hashvÆ_t
 
bôm≠_hash
 (
c⁄°_bôm≠
);

306 
	#BITMAP_ALLOC
(
OBSTACK
Ë
	`bôm≠_ob°ack_Æloc
 (OBSTACK)

	)

309 
	#BITMAP_GGC_ALLOC
(Ë
	`bôm≠_gc_Æloc
 ()

	)

312 
	#BITMAP_FREE
(
BITMAP
) \

313 ((Ë(
	`bôm≠_ob°ack_‰ì
 ((
bôm≠
Ë
BITMAP
), (BITMAPË(bôm≠Ë
NULL
))

	)

317 
	sbôm≠_ôî©‹


320 
bôm≠_ñemít
 *
	mñt1
;

323 
bôm≠_ñemít
 *
	mñt2
;

326 
	mw‹d_no
;

331 
BITMAP_WORD
 
	mbôs
;

337 
ölöe
 

338 
	$bmp_ôî_£t_öô
 (
bôm≠_ôî©‹
 *
bi
, 
c⁄°_bôm≠
 
m≠
,

339 
°¨t_bô
, *
bô_no
)

341 
bi
->
ñt1
 = 
m≠
->
fú°
;

342 
bi
->
ñt2
 = 
NULL
;

347 i‡(!
bi
->
ñt1
)

349 
bi
->
ñt1
 = &
bôm≠_zîo_bôs
;

353 i‡(
bi
->
ñt1
->
ödx
 >
°¨t_bô
 / 
BITMAP_ELEMENT_ALL_BITS
)

355 
bi
->
ñt1
 = bi->ñt1->
√xt
;

359 i‡(
bi
->
ñt1
->
ödx
 !
°¨t_bô
 / 
BITMAP_ELEMENT_ALL_BITS
)

360 
°¨t_bô
 = 
bi
->
ñt1
->
ödx
 * 
BITMAP_ELEMENT_ALL_BITS
;

363 
bi
->
w‹d_no
 = 
°¨t_bô
 / 
BITMAP_WORD_BITS
 % 
BITMAP_ELEMENT_WORDS
;

364 
bi
->
bôs
 = bi->
ñt1
->bôs[bi->
w‹d_no
];

365 
bi
->
bôs
 >>
°¨t_bô
 % 
BITMAP_WORD_BITS
;

371 
°¨t_bô
 +!
bi
->
bôs
;

373 *
bô_no
 = 
°¨t_bô
;

374 
	}
}

379 
ölöe
 

380 
	$bmp_ôî_™d_öô
 (
bôm≠_ôî©‹
 *
bi
, 
c⁄°_bôm≠
 
m≠1
, c⁄°_bôm≠ 
m≠2
,

381 
°¨t_bô
, *
bô_no
)

383 
bi
->
ñt1
 = 
m≠1
->
fú°
;

384 
bi
->
ñt2
 = 
m≠2
->
fú°
;

390 i‡(!
bi
->
ñt1
)

392 
bi
->
ñt2
 = 
NULL
;

396 i‡(
bi
->
ñt1
->
ödx
 >
°¨t_bô
 / 
BITMAP_ELEMENT_ALL_BITS
)

398 
bi
->
ñt1
 = bi->ñt1->
√xt
;

404 i‡(!
bi
->
ñt2
)

406 
bi
->
ñt1
 = bi->
ñt2
 = &
bôm≠_zîo_bôs
;

410 i‡(
bi
->
ñt2
->
ödx
 >bi->
ñt1
->indx)

412 
bi
->
ñt2
 = bi->ñt2->
√xt
;

416 i‡(
bi
->
ñt1
->
ödx
 =bi->
ñt2
->indx)

420 i‡(
bi
->
ñt1
->
ödx
 !
°¨t_bô
 / 
BITMAP_ELEMENT_ALL_BITS
)

421 
°¨t_bô
 = 
bi
->
ñt1
->
ödx
 * 
BITMAP_ELEMENT_ALL_BITS
;

423 
bi
->
w‹d_no
 = 
°¨t_bô
 / 
BITMAP_WORD_BITS
 % 
BITMAP_ELEMENT_WORDS
;

424 
bi
->
bôs
 = bi->
ñt1
->bôs[bi->
w‹d_no
] & bi->
ñt2
->bits[bi->word_no];

425 
bi
->
bôs
 >>
°¨t_bô
 % 
BITMAP_WORD_BITS
;

431 
bi
->
w‹d_no
 = 
BITMAP_ELEMENT_WORDS
 - 1;

432 
bi
->
bôs
 = 0;

439 
°¨t_bô
 +!
bi
->
bôs
;

441 *
bô_no
 = 
°¨t_bô
;

442 
	}
}

447 
ölöe
 

448 
	$bmp_ôî_™d_com∂_öô
 (
bôm≠_ôî©‹
 *
bi
,

449 
c⁄°_bôm≠
 
m≠1
, c⁄°_bôm≠ 
m≠2
,

450 
°¨t_bô
, *
bô_no
)

452 
bi
->
ñt1
 = 
m≠1
->
fú°
;

453 
bi
->
ñt2
 = 
m≠2
->
fú°
;

458 i‡(!
bi
->
ñt1
)

460 
bi
->
ñt1
 = &
bôm≠_zîo_bôs
;

464 i‡(
bi
->
ñt1
->
ödx
 >
°¨t_bô
 / 
BITMAP_ELEMENT_ALL_BITS
)

466 
bi
->
ñt1
 = bi->ñt1->
√xt
;

470 
bi
->
ñt2
 && bi->ñt2->
ödx
 < bi->
ñt1
->indx)

471 
bi
->
ñt2
 = bi->ñt2->
√xt
;

475 i‡(
bi
->
ñt1
->
ödx
 !
°¨t_bô
 / 
BITMAP_ELEMENT_ALL_BITS
)

476 
°¨t_bô
 = 
bi
->
ñt1
->
ödx
 * 
BITMAP_ELEMENT_ALL_BITS
;

478 
bi
->
w‹d_no
 = 
°¨t_bô
 / 
BITMAP_WORD_BITS
 % 
BITMAP_ELEMENT_WORDS
;

479 
bi
->
bôs
 = bi->
ñt1
->bôs[bi->
w‹d_no
];

480 i‡(
bi
->
ñt2
 && bi->
ñt1
->
ödx
 == bi->elt2->indx)

481 
bi
->
bôs
 &~bi->
ñt2
->bôs[bi->
w‹d_no
];

482 
bi
->
bôs
 >>
°¨t_bô
 % 
BITMAP_WORD_BITS
;

488 
°¨t_bô
 +!
bi
->
bôs
;

490 *
bô_no
 = 
°¨t_bô
;

491 
	}
}

496 
ölöe
 

497 
	$bmp_ôî_√xt
 (
bôm≠_ôî©‹
 *
bi
, *
bô_no
)

499 
bi
->
bôs
 >>= 1;

500 *
bô_no
 += 1;

501 
	}
}

505 
ölöe
 

506 
	$bmp_ôî_√xt_bô
 (
bôm≠_ôî©‹
 * 
bi
, *
bô_no
)

508 #i‡(
GCC_VERSION
 >= 3004)

510 
n
 = 
	`__buûtö_˘zl
 (
bi
->
bôs
);

511 
	`gcc_as£π
 ( (Ë= (
BITMAP_WORD
));

512 
bi
->
bôs
 >>
n
;

513 *
bô_no
 +
n
;

516 !(
bi
->
bôs
 & 1))

518 
bi
->
bôs
 >>= 1;

519 *
bô_no
 += 1;

522 
	}
}

528 
ölöe
 
boﬁ


529 
	$bmp_ôî_£t
 (
bôm≠_ôî©‹
 *
bi
, *
bô_no
)

532 i‡(
bi
->
bôs
)

534 
√xt_bô
:

535 
	`bmp_ôî_√xt_bô
 (
bi
, 
bô_no
);

536  
åue
;

542 *
bô_no
 = ((*bô_nÿ+ 
BITMAP_WORD_BITS
 - 1)

543 / 
BITMAP_WORD_BITS
 * BITMAP_WORD_BITS);

544 
bi
->
w‹d_no
++;

549 
bi
->
w‹d_no
 !
BITMAP_ELEMENT_WORDS
)

551 
bi
->
bôs
 = bi->
ñt1
->bôs[bi->
w‹d_no
];

552 i‡(
bi
->
bôs
)

553 
√xt_bô
;

554 *
bô_no
 +
BITMAP_WORD_BITS
;

555 
bi
->
w‹d_no
++;

559 
bi
->
ñt1
 = bi->ñt1->
√xt
;

560 i‡(!
bi
->
ñt1
)

561  
Ál£
;

562 *
bô_no
 = 
bi
->
ñt1
->
ödx
 * 
BITMAP_ELEMENT_ALL_BITS
;

563 
bi
->
w‹d_no
 = 0;

565 
	}
}

571 
ölöe
 
boﬁ


572 
	$bmp_ôî_™d
 (
bôm≠_ôî©‹
 *
bi
, *
bô_no
)

575 i‡(
bi
->
bôs
)

577 
√xt_bô
:

578 
	`bmp_ôî_√xt_bô
 (
bi
, 
bô_no
);

579  
åue
;

585 *
bô_no
 = ((*bô_nÿ+ 
BITMAP_WORD_BITS
 - 1)

586 / 
BITMAP_WORD_BITS
 * BITMAP_WORD_BITS);

587 
bi
->
w‹d_no
++;

592 
bi
->
w‹d_no
 !
BITMAP_ELEMENT_WORDS
)

594 
bi
->
bôs
 = bi->
ñt1
->bôs[bi->
w‹d_no
] & bi->
ñt2
->bits[bi->word_no];

595 i‡(
bi
->
bôs
)

596 
√xt_bô
;

597 *
bô_no
 +
BITMAP_WORD_BITS
;

598 
bi
->
w‹d_no
++;

608 
bi
->
ñt1
 = bi->ñt1->
√xt
;

609 i‡(!
bi
->
ñt1
)

610  
Ál£
;

612 
bi
->
ñt1
->
ödx
 < bi->
ñt2
->indx);

616 
bi
->
ñt2
->
ödx
 < bi->
ñt1
->indx)

618 
bi
->
ñt2
 = bi->ñt2->
√xt
;

619 i‡(!
bi
->
ñt2
)

620  
Ál£
;

623 
bi
->
ñt1
->
ödx
 !bi->
ñt2
->indx);

625 *
bô_no
 = 
bi
->
ñt1
->
ödx
 * 
BITMAP_ELEMENT_ALL_BITS
;

626 
bi
->
w‹d_no
 = 0;

628 
	}
}

634 
ölöe
 
boﬁ


635 
	$bmp_ôî_™d_com∂
 (
bôm≠_ôî©‹
 *
bi
, *
bô_no
)

638 i‡(
bi
->
bôs
)

640 
√xt_bô
:

641 
	`bmp_ôî_√xt_bô
 (
bi
, 
bô_no
);

642  
åue
;

648 *
bô_no
 = ((*bô_nÿ+ 
BITMAP_WORD_BITS
 - 1)

649 / 
BITMAP_WORD_BITS
 * BITMAP_WORD_BITS);

650 
bi
->
w‹d_no
++;

655 
bi
->
w‹d_no
 !
BITMAP_ELEMENT_WORDS
)

657 
bi
->
bôs
 = bi->
ñt1
->bôs[bi->
w‹d_no
];

658 i‡(
bi
->
ñt2
 && bi->ñt2->
ödx
 =bi->
ñt1
->indx)

659 
bi
->
bôs
 &~bi->
ñt2
->bôs[bi->
w‹d_no
];

660 i‡(
bi
->
bôs
)

661 
√xt_bô
;

662 *
bô_no
 +
BITMAP_WORD_BITS
;

663 
bi
->
w‹d_no
++;

667 
bi
->
ñt1
 = bi->ñt1->
√xt
;

668 i‡(!
bi
->
ñt1
)

669  
Ál£
;

672 
bi
->
ñt2
 && bi->ñt2->
ödx
 < bi->
ñt1
->indx)

673 
bi
->
ñt2
 = bi->ñt2->
√xt
;

675 *
bô_no
 = 
bi
->
ñt1
->
ödx
 * 
BITMAP_ELEMENT_ALL_BITS
;

676 
bi
->
w‹d_no
 = 0;

678 
	}
}

685 #i‚de‡
EXECUTE_IF_SET_IN_BITMAP


687 
	#EXECUTE_IF_SET_IN_BITMAP
(
BITMAP
, 
MIN
, 
BITNUM
, 
ITER
) \

688 
	`bmp_ôî_£t_öô
 (&(
ITER
), (
BITMAP
), (
MIN
), &(
BITNUM
)); \

689 
	`bmp_ôî_£t
 (&(
ITER
), &(
BITNUM
)); \

690 
	`bmp_ôî_√xt
 (&(
ITER
), &(
BITNUM
)))

	)

698 
	#EXECUTE_IF_AND_IN_BITMAP
(
BITMAP1
, 
BITMAP2
, 
MIN
, 
BITNUM
, 
ITER
) \

699 
	`bmp_ôî_™d_öô
 (&(
ITER
), (
BITMAP1
), (
BITMAP2
), (
MIN
), \

700 &(
BITNUM
)); \

701 
	`bmp_ôî_™d
 (&(
ITER
), &(
BITNUM
)); \

702 
	`bmp_ôî_√xt
 (&(
ITER
), &(
BITNUM
)))

	)

709 
	#EXECUTE_IF_AND_COMPL_IN_BITMAP
(
BITMAP1
, 
BITMAP2
, 
MIN
, 
BITNUM
, 
ITER
) \

710 
	`bmp_ôî_™d_com∂_öô
 (&(
ITER
), (
BITMAP1
), (
BITMAP2
), (
MIN
), \

711 &(
BITNUM
)); \

712 
	`bmp_ôî_™d_com∂
 (&(
ITER
), &(
BITNUM
)); \

713 
	`bmp_ôî_√xt
 (&(
ITER
), &(
BITNUM
)))

	)

	@include/bversion.h

1 
	#BUILDING_GCC_MAJOR
 4

	)

2 
	#BUILDING_GCC_MINOR
 9

	)

3 
	#BUILDING_GCC_PATCHLEVEL
 3

	)

4 
	#BUILDING_GCC_VERSION
 (
BUILDING_GCC_MAJOR
 * 1000 + 
BUILDING_GCC_MINOR
)

	)

	@include/c-family/c-common.h

20 #i‚de‡
GCC_C_COMMON_H


21 
	#GCC_C_COMMON_H


	)

23 
	~"•œy-åì.h
"

24 
	~"˝∂ib.h
"

25 
	~"ggc.h
"

26 
	~"åì.h
"

33 #i‡
deföed
(
GCC_DIAGNOSTIC_CORE_H
)

35 
In
 
‹dî
 
the
 
f‹m©
 
checkög
 
to
 
ac˚±
Åhê
C
 
‰⁄t
 
íd
 
	gdügno°ic
 \

36 
‰amew‹k
 
	gexãnsi⁄s
, 
you
 
mu°
 
ö˛ude
 
this
 
fûe
 
bef‹e
 
	gdügno°ic
-
	gc‹e
.
	gh
 \

37 
√vî
 
	ga·î
.

39 #i‚de‡
GCC_DIAG_STYLE


40 
	#GCC_DIAG_STYLE
 
__gcc_cdüg__


	)

42 
	~"dügno°ic-c‹e.h
"

61 
	erid


65 
	mRID_STATIC
 = 0,

66 
	mRID_UNSIGNED
, 
	mRID_LONG
, 
	mRID_CONST
, 
	mRID_EXTERN
,

67 
	mRID_REGISTER
, 
	mRID_TYPEDEF
, 
	mRID_SHORT
, 
	mRID_INLINE
,

68 
	mRID_VOLATILE
, 
	mRID_SIGNED
, 
	mRID_AUTO
, 
	mRID_RESTRICT
,

69 
	mRID_NORETURN
, 
	mRID_ATOMIC
,

72 
	mRID_COMPLEX
, 
	mRID_THREAD
, 
	mRID_SAT
,

75 
	mRID_FRIEND
, 
	mRID_VIRTUAL
, 
	mRID_EXPLICIT
, 
	mRID_EXPORT
, 
	mRID_MUTABLE
,

79 
	mRID_IN
, 
	mRID_OUT
, 
	mRID_INOUT
, 
	mRID_BYCOPY
, 
	mRID_BYREF
, 
	mRID_ONEWAY
,

83 
	mRID_GETTER
, 
	mRID_SETTER
,

84 
	mRID_READONLY
, 
	mRID_READWRITE
,

85 
	mRID_ASSIGN
, 
	mRID_RETAIN
, 
	mRID_COPY
,

86 
	mRID_NONATOMIC
,

90 
	mRID_IMAGINARY
,

93 
	mRID_INT
, 
	mRID_CHAR
, 
	mRID_FLOAT
, 
	mRID_DOUBLE
, 
	mRID_VOID
,

94 
	mRID_INT128
,

95 
	mRID_ENUM
, 
	mRID_STRUCT
, 
	mRID_UNION
, 
	mRID_IF
, 
	mRID_ELSE
,

96 
	mRID_WHILE
, 
	mRID_DO
, 
	mRID_FOR
, 
	mRID_SWITCH
, 
	mRID_CASE
,

97 
	mRID_DEFAULT
, 
	mRID_BREAK
, 
	mRID_CONTINUE
, 
	mRID_RETURN
, 
	mRID_GOTO
,

98 
	mRID_SIZEOF
,

101 
	mRID_ASM
, 
	mRID_TYPEOF
, 
	mRID_ALIGNOF
, 
	mRID_ATTRIBUTE
, 
	mRID_VA_ARG
,

102 
	mRID_EXTENSION
, 
	mRID_IMAGPART
, 
	mRID_REALPART
, 
	mRID_LABEL
, 
	mRID_CHOOSE_EXPR
,

103 
	mRID_TYPES_COMPATIBLE_P
, 
	mRID_BUILTIN_COMPLEX
, 
	mRID_BUILTIN_SHUFFLE
,

104 
	mRID_DFLOAT32
, 
	mRID_DFLOAT64
, 
	mRID_DFLOAT128
,

105 
	mRID_FRACT
, 
	mRID_ACCUM
, 
	mRID_AUTO_TYPE
,

108 
	mRID_ALIGNAS
, 
	mRID_GENERIC
,

112 
	mRID_CXX_COMPAT_WARN
,

115 
	mRID_TRANSACTION_ATOMIC
, 
	mRID_TRANSACTION_RELAXED
, 
	mRID_TRANSACTION_CANCEL
,

118 
	mRID_FUNCTION_NAME
, 
	mRID_PRETTY_FUNCTION_NAME
, 
	mRID_C99_FUNCTION_NAME
,

122 
	mRID_BOOL
, 
	mRID_WCHAR
, 
	mRID_CLASS
,

123 
	mRID_PUBLIC
, 
	mRID_PRIVATE
, 
	mRID_PROTECTED
,

124 
	mRID_TEMPLATE
, 
	mRID_NULL
, 
	mRID_CATCH
,

125 
	mRID_DELETE
, 
	mRID_FALSE
, 
	mRID_NAMESPACE
,

126 
	mRID_NEW
, 
	mRID_OFFSETOF
, 
	mRID_OPERATOR
,

127 
	mRID_THIS
, 
	mRID_THROW
, 
	mRID_TRUE
,

128 
	mRID_TRY
, 
	mRID_TYPENAME
, 
	mRID_TYPEID
,

129 
	mRID_USING
, 
	mRID_CHAR16
, 
	mRID_CHAR32
,

132 
	mRID_CONSTCAST
, 
	mRID_DYNCAST
, 
	mRID_REINTCAST
, 
	mRID_STATCAST
,

135 
	mRID_BASES
, 
	mRID_DIRECT_BASES
,

136 
	mRID_HAS_NOTHROW_ASSIGN
, 
	mRID_HAS_NOTHROW_CONSTRUCTOR
,

137 
	mRID_HAS_NOTHROW_COPY
, 
	mRID_HAS_TRIVIAL_ASSIGN
,

138 
	mRID_HAS_TRIVIAL_CONSTRUCTOR
, 
	mRID_HAS_TRIVIAL_COPY
,

139 
	mRID_HAS_TRIVIAL_DESTRUCTOR
, 
	mRID_HAS_VIRTUAL_DESTRUCTOR
,

140 
	mRID_IS_ABSTRACT
, 
	mRID_IS_BASE_OF
,

141 
	mRID_IS_CLASS
, 
	mRID_IS_CONVERTIBLE_TO
,

142 
	mRID_IS_EMPTY
, 
	mRID_IS_ENUM
,

143 
	mRID_IS_FINAL
, 
	mRID_IS_LITERAL_TYPE
,

144 
	mRID_IS_POD
, 
	mRID_IS_POLYMORPHIC
,

145 
	mRID_IS_STD_LAYOUT
, 
	mRID_IS_TRIVIAL
,

146 
	mRID_IS_UNION
, 
	mRID_UNDERLYING_TYPE
,

149 
	mRID_CONSTEXPR
, 
	mRID_DECLTYPE
, 
	mRID_NOEXCEPT
, 
	mRID_NULLPTR
, 
	mRID_STATIC_ASSERT
,

152 
	mRID_CILK_SPAWN
, 
	mRID_CILK_SYNC
,

156 
	mRID_AT_ENCODE
, 
	mRID_AT_END
,

157 
	mRID_AT_CLASS
, 
	mRID_AT_ALIAS
, 
	mRID_AT_DEFS
,

158 
	mRID_AT_PRIVATE
, 
	mRID_AT_PROTECTED
, 
	mRID_AT_PUBLIC
, 
	mRID_AT_PACKAGE
,

159 
	mRID_AT_PROTOCOL
, 
	mRID_AT_SELECTOR
,

160 
	mRID_AT_THROW
, 
	mRID_AT_TRY
, 
	mRID_AT_CATCH
,

161 
	mRID_AT_FINALLY
, 
	mRID_AT_SYNCHRONIZED
,

162 
	mRID_AT_OPTIONAL
, 
	mRID_AT_REQUIRED
, 
	mRID_AT_PROPERTY
,

163 
	mRID_AT_SYNTHESIZE
, 
	mRID_AT_DYNAMIC
,

164 
	mRID_AT_INTERFACE
,

165 
	mRID_AT_IMPLEMENTATION
,

171 
	mRID_ADDR_SPACE_0
,

172 
	mRID_ADDR_SPACE_1
,

173 
	mRID_ADDR_SPACE_2
,

174 
	mRID_ADDR_SPACE_3
,

175 
	mRID_ADDR_SPACE_4
,

176 
	mRID_ADDR_SPACE_5
,

177 
	mRID_ADDR_SPACE_6
,

178 
	mRID_ADDR_SPACE_7
,

179 
	mRID_ADDR_SPACE_8
,

180 
	mRID_ADDR_SPACE_9
,

181 
	mRID_ADDR_SPACE_10
,

182 
	mRID_ADDR_SPACE_11
,

183 
	mRID_ADDR_SPACE_12
,

184 
	mRID_ADDR_SPACE_13
,

185 
	mRID_ADDR_SPACE_14
,

186 
	mRID_ADDR_SPACE_15
,

188 
	mRID_FIRST_ADDR_SPACE
 = 
RID_ADDR_SPACE_0
,

189 
	mRID_LAST_ADDR_SPACE
 = 
RID_ADDR_SPACE_15
,

191 
	mRID_MAX
,

193 
	mRID_FIRST_MODIFIER
 = 
RID_STATIC
,

194 
	mRID_LAST_MODIFIER
 = 
RID_ONEWAY
,

196 
	mRID_FIRST_CXX0X
 = 
RID_CONSTEXPR
,

197 
	mRID_LAST_CXX0X
 = 
RID_STATIC_ASSERT
,

198 
	mRID_FIRST_AT
 = 
RID_AT_ENCODE
,

199 
	mRID_LAST_AT
 = 
RID_AT_IMPLEMENTATION
,

200 
	mRID_FIRST_PQ
 = 
RID_IN
,

201 
	mRID_LAST_PQ
 = 
RID_ONEWAY
,

202 
	mRID_FIRST_PATTR
 = 
RID_GETTER
,

203 
	mRID_LAST_PATTR
 = 
RID_NONATOMIC


206 
	#OBJC_IS_AT_KEYWORD
(
rid
) \

207 ((Ë(
rid
Ë>(Ë
RID_FIRST_AT
 && \

208 (Ë(
rid
Ë<(Ë
RID_LAST_AT
)

	)

210 
	#OBJC_IS_PQ_KEYWORD
(
rid
) \

211 ((Ë(
rid
Ë>(Ë
RID_FIRST_PQ
 && \

212 (Ë(
rid
Ë<(Ë
RID_LAST_PQ
)

	)

214 
	#OBJC_IS_PATTR_KEYWORD
(
rid
) \

215 ((Ë(
rid
Ë>(Ë
RID_FIRST_PATTR
 && \

216 (Ë(
rid
Ë<(Ë
RID_LAST_PATTR
)

	)

225 
	#OBJC_IS_CXX_KEYWORD
(
rid
) \

226 (
rid
 =
RID_CLASS
 \

227 || 
rid
 =
RID_PUBLIC
 ||Ñid =
RID_PROTECTED
 ||Ñid =
RID_PRIVATE
 \

228 || 
rid
 =
RID_TRY
 ||Ñid =
RID_THROW
 ||Ñid =
RID_CATCH
)

	)

232 
GTY
 ((
Àngth
 ("(ötËRID_MAX"))Ë
åì
 *
ridpoöãrs
;

236 
	ec_åì_ödex


238 
	mCTI_CHAR16_TYPE
,

239 
	mCTI_CHAR32_TYPE
,

240 
	mCTI_WCHAR_TYPE
,

241 
	mCTI_UNDERLYING_WCHAR_TYPE
,

242 
	mCTI_WINT_TYPE
,

243 
	mCTI_SIGNED_SIZE_TYPE
,

244 
	mCTI_UNSIGNED_PTRDIFF_TYPE
,

245 
	mCTI_INTMAX_TYPE
,

246 
	mCTI_UINTMAX_TYPE
,

247 
	mCTI_WIDEST_INT_LIT_TYPE
,

248 
	mCTI_WIDEST_UINT_LIT_TYPE
,

252 
	mCTI_SIG_ATOMIC_TYPE
,

253 
	mCTI_INT8_TYPE
,

254 
	mCTI_INT16_TYPE
,

255 
	mCTI_INT32_TYPE
,

256 
	mCTI_INT64_TYPE
,

257 
	mCTI_UINT8_TYPE
,

258 
	mCTI_UINT16_TYPE
,

259 
	mCTI_UINT32_TYPE
,

260 
	mCTI_UINT64_TYPE
,

261 
	mCTI_INT_LEAST8_TYPE
,

262 
	mCTI_INT_LEAST16_TYPE
,

263 
	mCTI_INT_LEAST32_TYPE
,

264 
	mCTI_INT_LEAST64_TYPE
,

265 
	mCTI_UINT_LEAST8_TYPE
,

266 
	mCTI_UINT_LEAST16_TYPE
,

267 
	mCTI_UINT_LEAST32_TYPE
,

268 
	mCTI_UINT_LEAST64_TYPE
,

269 
	mCTI_INT_FAST8_TYPE
,

270 
	mCTI_INT_FAST16_TYPE
,

271 
	mCTI_INT_FAST32_TYPE
,

272 
	mCTI_INT_FAST64_TYPE
,

273 
	mCTI_UINT_FAST8_TYPE
,

274 
	mCTI_UINT_FAST16_TYPE
,

275 
	mCTI_UINT_FAST32_TYPE
,

276 
	mCTI_UINT_FAST64_TYPE
,

277 
	mCTI_INTPTR_TYPE
,

278 
	mCTI_UINTPTR_TYPE
,

280 
	mCTI_CHAR_ARRAY_TYPE
,

281 
	mCTI_CHAR16_ARRAY_TYPE
,

282 
	mCTI_CHAR32_ARRAY_TYPE
,

283 
	mCTI_WCHAR_ARRAY_TYPE
,

284 
	mCTI_STRING_TYPE
,

285 
	mCTI_CONST_STRING_TYPE
,

288 
	mCTI_TRUTHVALUE_TYPE
,

289 
	mCTI_TRUTHVALUE_TRUE
,

290 
	mCTI_TRUTHVALUE_FALSE
,

292 
	mCTI_DEFAULT_FUNCTION_TYPE
,

295 
	mCTI_FUNCTION_NAME_DECL
,

296 
	mCTI_PRETTY_FUNCTION_NAME_DECL
,

297 
	mCTI_C99_FUNCTION_NAME_DECL
,

298 
	mCTI_SAVED_FUNCTION_NAME_DECLS
,

300 
	mCTI_VOID_ZERO
,

302 
	mCTI_NULL
,

304 
	mCTI_MAX


307 
	#C_CPP_HASHNODE
(
id
) \

308 (&(((
c_comm⁄_idítifõr
 *Ë(
id
))->
node
))

	)

309 
	#C_RID_CODE
(
id
) \

310 ((
rid
Ë(((
c_comm⁄_idítifõr
 *Ë(
id
))->
node
.
rid_code
))

	)

311 
	#C_SET_RID_CODE
(
id
, 
code
) \

312 (((
c_comm⁄_idítifõr
 *Ë(
id
))->
node
.
rid_code
 = (Ë
code
)

	)

316 
GTY
(()Ë
	gc_comm⁄_idítifõr
 {

317 
åì_comm⁄
 
	gcomm⁄
;

318 
˝p_hashnode
 
	gnode
;

323 
	sc_comm⁄_ªsw‹d


325 c⁄° *c⁄° 
	mw‹d
;

326 
ENUM_BITFIELD
(
rid
Ëc⁄° 
	mrid
 : 16;

327 c⁄° 
	mdißbÀ
 : 16;

333 
	#CPP_KEYWORD
 ((
˝p_ây≥
Ë(
N_TTYPES
 + 1))

	)

339 
	#CPP_TEMPLATE_ID
 ((
˝p_ây≥
Ë(
CPP_KEYWORD
 + 1))

	)

346 
	#CPP_NESTED_NAME_SPECIFIER
 ((
˝p_ây≥
Ë(
CPP_TEMPLATE_ID
 + 1))

	)

349 
	#CPP_DECLTYPE
 ((
˝p_ây≥
Ë(
CPP_NESTED_NAME_SPECIFIER
 + 1))

	)

352 
	#N_CP_TTYPES
 ((Ë(
CPP_DECLTYPE
 + 1))

	)

358 
	#D_CONLY
 0x001

	)

359 
	#D_CXXONLY
 0x002

	)

360 
	#D_C99
 0x004

	)

361 
	#D_CXX0X
 0x008

	)

362 
	#D_EXT
 0x010

	)

363 
	#D_EXT89
 0x020

	)

364 
	#D_ASM
 0x040

	)

365 
	#D_OBJC
 0x080

	)

366 
	#D_CXX_OBJC
 0x100

	)

367 
	#D_CXXWARN
 0x200

	)

370 c⁄° 
c_comm⁄_ªsw‹d
 
c_comm⁄_ªsw‹ds
[];

373 c⁄° 
num_c_comm⁄_ªsw‹ds
;

375 
	#ch¨16_ty≥_node
 
c_globÆ_åìs
[
CTI_CHAR16_TYPE
]

	)

376 
	#ch¨32_ty≥_node
 
c_globÆ_åìs
[
CTI_CHAR32_TYPE
]

	)

377 
	#wch¨_ty≥_node
 
c_globÆ_åìs
[
CTI_WCHAR_TYPE
]

	)

378 
	#undîlyög_wch¨_ty≥_node
 
c_globÆ_åìs
[
CTI_UNDERLYING_WCHAR_TYPE
]

	)

379 
	#wöt_ty≥_node
 
c_globÆ_åìs
[
CTI_WINT_TYPE
]

	)

380 
	#sig√d_size_ty≥_node
 
c_globÆ_åìs
[
CTI_SIGNED_SIZE_TYPE
]

	)

381 
	#unsig√d_±rdiff_ty≥_node
 
c_globÆ_åìs
[
CTI_UNSIGNED_PTRDIFF_TYPE
]

	)

382 
	#ötmax_ty≥_node
 
c_globÆ_åìs
[
CTI_INTMAX_TYPE
]

	)

383 
	#uötmax_ty≥_node
 
c_globÆ_åìs
[
CTI_UINTMAX_TYPE
]

	)

384 
	#wide°_öãgî_lôîÆ_ty≥_node
 
c_globÆ_åìs
[
CTI_WIDEST_INT_LIT_TYPE
]

	)

385 
	#wide°_unsig√d_lôîÆ_ty≥_node
 
c_globÆ_åìs
[
CTI_WIDEST_UINT_LIT_TYPE
]

	)

387 
	#sig_©omic_ty≥_node
 
c_globÆ_åìs
[
CTI_SIG_ATOMIC_TYPE
]

	)

388 
	#öt8_ty≥_node
 
c_globÆ_åìs
[
CTI_INT8_TYPE
]

	)

389 
	#öt16_ty≥_node
 
c_globÆ_åìs
[
CTI_INT16_TYPE
]

	)

390 
	#öt32_ty≥_node
 
c_globÆ_åìs
[
CTI_INT32_TYPE
]

	)

391 
	#öt64_ty≥_node
 
c_globÆ_åìs
[
CTI_INT64_TYPE
]

	)

392 
	#uöt8_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT8_TYPE
]

	)

393 
	#c_uöt16_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT16_TYPE
]

	)

394 
	#c_uöt32_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT32_TYPE
]

	)

395 
	#c_uöt64_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT64_TYPE
]

	)

396 
	#öt_Àa°8_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_LEAST8_TYPE
]

	)

397 
	#öt_Àa°16_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_LEAST16_TYPE
]

	)

398 
	#öt_Àa°32_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_LEAST32_TYPE
]

	)

399 
	#öt_Àa°64_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_LEAST64_TYPE
]

	)

400 
	#uöt_Àa°8_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_LEAST8_TYPE
]

	)

401 
	#uöt_Àa°16_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_LEAST16_TYPE
]

	)

402 
	#uöt_Àa°32_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_LEAST32_TYPE
]

	)

403 
	#uöt_Àa°64_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_LEAST64_TYPE
]

	)

404 
	#öt_Á°8_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_FAST8_TYPE
]

	)

405 
	#öt_Á°16_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_FAST16_TYPE
]

	)

406 
	#öt_Á°32_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_FAST32_TYPE
]

	)

407 
	#öt_Á°64_ty≥_node
 
c_globÆ_åìs
[
CTI_INT_FAST64_TYPE
]

	)

408 
	#uöt_Á°8_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_FAST8_TYPE
]

	)

409 
	#uöt_Á°16_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_FAST16_TYPE
]

	)

410 
	#uöt_Á°32_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_FAST32_TYPE
]

	)

411 
	#uöt_Á°64_ty≥_node
 
c_globÆ_åìs
[
CTI_UINT_FAST64_TYPE
]

	)

412 
	#öçå_ty≥_node
 
c_globÆ_åìs
[
CTI_INTPTR_TYPE
]

	)

413 
	#uöçå_ty≥_node
 
c_globÆ_åìs
[
CTI_UINTPTR_TYPE
]

	)

415 
	#åuthvÆue_ty≥_node
 
c_globÆ_åìs
[
CTI_TRUTHVALUE_TYPE
]

	)

416 
	#åuthvÆue_åue_node
 
c_globÆ_åìs
[
CTI_TRUTHVALUE_TRUE
]

	)

417 
	#åuthvÆue_Ál£_node
 
c_globÆ_åìs
[
CTI_TRUTHVALUE_FALSE
]

	)

419 
	#ch¨_¨øy_ty≥_node
 
c_globÆ_åìs
[
CTI_CHAR_ARRAY_TYPE
]

	)

420 
	#ch¨16_¨øy_ty≥_node
 
c_globÆ_åìs
[
CTI_CHAR16_ARRAY_TYPE
]

	)

421 
	#ch¨32_¨øy_ty≥_node
 
c_globÆ_åìs
[
CTI_CHAR32_ARRAY_TYPE
]

	)

422 
	#wch¨_¨øy_ty≥_node
 
c_globÆ_åìs
[
CTI_WCHAR_ARRAY_TYPE
]

	)

423 
	#°rög_ty≥_node
 
c_globÆ_åìs
[
CTI_STRING_TYPE
]

	)

424 
	#c⁄°_°rög_ty≥_node
 
c_globÆ_åìs
[
CTI_CONST_STRING_TYPE
]

	)

426 
	#deÁu…_fun˘i⁄_ty≥
 
c_globÆ_åìs
[
CTI_DEFAULT_FUNCTION_TYPE
]

	)

428 
	#fun˘i⁄_«me_de˛_node
 
c_globÆ_åìs
[
CTI_FUNCTION_NAME_DECL
]

	)

429 
	#¥ëty_fun˘i⁄_«me_de˛_node
 
c_globÆ_åìs
[
CTI_PRETTY_FUNCTION_NAME_DECL
]

	)

430 
	#c99_fun˘i⁄_«me_de˛_node
 
c_globÆ_åìs
[
CTI_C99_FUNCTION_NAME_DECL
]

	)

431 
	#ßved_fun˘i⁄_«me_de˛s
 
c_globÆ_åìs
[
CTI_SAVED_FUNCTION_NAME_DECLS
]

	)

434 
	#void_zîo_node
 
c_globÆ_åìs
[
CTI_VOID_ZERO
]

	)

437 
	#nuŒ_node
 
c_globÆ_åìs
[
CTI_NULL
]

	)

439 
GTY
(()Ë
åì
 
c_globÆ_åìs
[
CTI_MAX
];

443 
GTY
((
v¨übÀ_size
)Ë
	gs‹ãd_fõlds_ty≥
 {

444 
	gÀn
;

445 
åì
 
GTY
((
Àngth
 ("%h.Àn"))Ë
	gñts
[1];

450 
	#C_DECLARED_LABEL_FLAG
(
œbñ
Ë
	`TREE_LANG_FLAG_1
 (œbñ)

	)

452 
	ec_œnguage_köd


454 
	m˛k_c
 = 0,

455 
	m˛k_objc
 = 1,

456 
	m˛k_cxx
 = 2,

457 
	m˛k_objcxx
 = 3

459 
	tc_œnguage_köd
;

463 
c_œnguage_köd
 
c_œnguage
;

465 
	#c_düÀ˘_cxx
(Ë((
c_œnguage
 & 
˛k_cxx
Ë!0)

	)

466 
	#c_düÀ˘_objc
(Ë((
c_œnguage
 & 
˛k_objc
Ë!0)

	)

469 
	eªf_›î©‹
 {

471 
	mRO_NULL
,

473 
	mRO_ARRAY_INDEXING
,

475 
	mRO_UNARY_STAR
,

477 
	mRO_ARROW
,

479 
	mRO_IMPLICIT_CONVERSION
,

481 
	mRO_ARROW_STAR


482 } 
	tªf_›î©‹
;

486 
GTY
(()Ë
	g°mt_åì_s
 {

488 
	gvec
<
	gåì
, 
	gva_gc
> *
	gx_cur_°mt_li°
;

499 
	g°mts_¨e_fuŒ_ex¥s_p
;

502 
°mt_åì_s
 *
	t°mt_åì
;

507 
GTY
(()Ë
	gc_œnguage_fun˘i⁄
 {

510 
°mt_åì_s
 
	gx_°mt_åì
;

514 
	gvec
<
	gåì
, 
	gva_gc
> *
	gloˇl_ty≥defs
;

517 
	#°mt_li°_°ack
 (
	`cuºít_°mt_åì
 ()->
x_cur_°mt_li°
)

	)

521 
	#cur_°mt_li°
 (
°mt_li°_°ack
->
	`œ°
 ())

	)

523 
	#buûdög_°mt_li°_p
(Ë(
°mt_li°_°ack
 && !°mt_li°_°ack->
	`is_em±y
())

	)

529 (*
œng_po°_pch_lﬂd
) ();

531 
	`push_fûe_sc›e
 ();

532 
	`p›_fûe_sc›e
 ();

533 
°mt_åì
 
	`cuºít_°mt_åì
 ();

534 
åì
 
	`push_°mt_li°
 ();

535 
åì
 
	`p›_°mt_li°
 (tree);

536 
åì
 
	`add_°mt
 (tree);

537 
	`push_˛ónup
 (
åì
,Åªe, 
boﬁ
);

538 
åì
 
	`pushde˛_t›_Àvñ
 (tree);

539 
åì
 
	`pushde˛
 (tree);

540 
åì
 
	`buûd_modify_ex¥
 (
loˇti⁄_t
,Åªe,Åªe, 
åì_code
,

541 
loˇti⁄_t
, 
åì
,Åree);

542 
åì
 
	`buûd_¨øy_nŸ©i⁄_ex¥
 (
loˇti⁄_t
,Åªe,Åªe, 
åì_code
,

543 
loˇti⁄_t
, 
åì
,Åree);

544 
åì
 
	`buûd_¨øy_nŸ©i⁄_ªf
 (
loˇti⁄_t
,Åree,Åree,Åree,Åree,Åree);

545 
åì
 
	`buûd_ödúe˘_ªf
 (
loˇti⁄_t
,Åªe, 
ªf_›î©‹
);

547 
	`fõld_de˛_cmp
 (const *, const *);

548 
	`ªs‹t_s‹ãd_fõlds
 (*, *, 
gt_poöãr_›î©‹
,

550 
boﬁ
 
	`has_c_lökage
 (
c⁄°_åì
 
de˛
);

556 
Êag_no_löe_comm™ds
;

561 
Êag_no_ouçut
;

566 
Êag_dump_ma¸os
;

570 
Êag_dump_ö˛udes
;

574 
boﬁ
 
Êag_pch_¥ïro˚ss
;

579 c⁄° *
pch_fûe
;

584 
Êag_iso
;

592 
Êag_c⁄d_mism©ch
;

596 
Êag_isoc94
;

600 
Êag_isoc99
;

604 
Êag_isoc11
;

608 
Êag_ho°ed
;

617 
¥öt_°ru˘_vÆues
;

621 c⁄° *
c⁄°™t_°rög_˛ass_«me
;

630 
Êag_u£_ªposô‹y
;

634 
	ecxx_düÀ˘
 {

636 
cxx98
,

637 
cxx03
 = 
cxx98
,

639 
cxx0x
,

640 
cxx11
 = 
cxx0x
,

642 
cxx1y


646 
cxx_düÀ˘
 cxx_dialect;

652 
max_tö°_dïth
;

660 
c_öhibô_evÆu©i⁄_w¨nögs
;

665 
boﬁ
 
d⁄e_Àxög
;

669 
	#C_TYPE_OBJECT_P
(
ty≥
) \

670 (
	`TREE_CODE
 (
ty≥
Ë!
FUNCTION_TYPE
 && 
	`TYPE_SIZE
 (ty≥))

	)

672 
	#C_TYPE_INCOMPLETE_P
(
ty≥
) \

673 (
	`TREE_CODE
 (
ty≥
Ë!
FUNCTION_TYPE
 && 
	`TYPE_SIZE
 (ty≥Ë=0)

	)

675 
	#C_TYPE_FUNCTION_P
(
ty≥
) \

676 (
	`TREE_CODE
 (
ty≥
Ë=
FUNCTION_TYPE
)

	)

680 
	#C_TYPE_OBJECT_OR_INCOMPLETE_P
(
ty≥
) \

681 (!
	`C_TYPE_FUNCTION_P
 (
ty≥
))

	)

683 
	svisibûôy_Êags


685 
ö¥agma
 : 1;

686 
ölöes_hiddí
 : 1;

697 
	ec⁄vîsi⁄_ß„ty
 { 
SAFE_CONVERSION
 = 0, 
UNSAFE_OTHER
, 
UNSAFE_SIGN
, 
UNSAFE_REAL
 };

700 
visibûôy_Êags
 
visibûôy_›ti⁄s
;

703 c⁄° 
©åibuã_•ec
 
c_comm⁄_©åibuã_èbÀ
[];

704 c⁄° 
©åibuã_•ec
 
c_comm⁄_f‹m©_©åibuã_èbÀ
[];

711 
	$åì
 (*
make_‚ame_de˛
Ë(
loˇti⁄_t
, 
åì
, );

714 
	`c_ªgi°î_addr_•a˚
 (c⁄° *
°r
, 
addr_•a˚_t
 
as
);

717 
boﬁ
 
ö_œã_bö¨y_›
;

718 c⁄° *
	`c_addr_•a˚_«me
 (
addr_•a˚_t
 
as
);

719 
åì
 
	`idítifõr_globÆ_vÆue
 (tree);

720 
åì
 
	`c_lökage_bödögs
 (tree);

721 
	`ªc‹d_buûtö_ty≥
 (
rid
, c⁄° *, 
åì
);

722 
åì
 
	`buûd_void_li°_node
 ();

723 
	`°¨t_‚ame_de˛s
 ();

724 
	`föish_‚ame_de˛s
 ();

725 c⁄° *
	`‚ame_as_°rög
 ();

726 
åì
 
	`‚ame_de˛
 (
loˇti⁄_t
, ,Åree);

728 
	`check_u£r_Æignmít
 (
c⁄°_åì
, 
boﬁ
);

729 
	`check_fun˘i⁄_¨gumíts
 (
c⁄°_åì
, , 
åì
 *);

730 
	`check_fun˘i⁄_¨gumíts_ªcur£
 ((*)

731 (*, 
åì
,

732 
HOST_WIDE_INT
),

733 *, 
åì
,

734 
HOST_WIDE_INT
);

735 
boﬁ
 
	`check_buûtö_fun˘i⁄_¨gumíts
 (
åì
, ,Åree *);

736 
	`check_fun˘i⁄_f‹m©
 (
åì
, ,Åree *);

737 
åì
 
	`h™dÀ_f‹m©_©åibuã
 (åì *,Åªe,Åªe, , 
boﬁ
 *);

738 
åì
 
	`h™dÀ_f‹m©_¨g_©åibuã
 (åì *,Åªe,Åªe, , 
boﬁ
 *);

739 
boﬁ
 
	`©åibuã_èkes_idítifõr_p
 (
c⁄°_åì
);

740 
boﬁ
 
	`c_comm⁄_h™dÀ_›ti⁄
 (
size_t
, c⁄° *, , , 
loˇti⁄_t
,

741 c⁄° 
˛_›ti⁄_h™dÀrs
 *);

742 
boﬁ
 
	`deÁu…_h™dÀ_c_›ti⁄
 (
size_t
, const *, );

743 
åì
 
	`c_comm⁄_ty≥_f‹_mode
 (
machöe_mode
, );

744 
åì
 
	`c_comm⁄_ty≥_f‹_size
 (, );

745 
åì
 
	`c_comm⁄_fixed_poöt_ty≥_f‹_size
 (, ,

747 
åì
 
	`c_comm⁄_unsig√d_ty≥
 (tree);

748 
åì
 
	`c_comm⁄_sig√d_ty≥
 (tree);

749 
åì
 
	`c_comm⁄_sig√d_‹_unsig√d_ty≥
 (,Åree);

750 
	`c_comm⁄_öô_ts
 ();

751 
åì
 
	`c_buûd_bôfõld_öãgî_ty≥
 (
HOST_WIDE_INT
, );

752 
c⁄vîsi⁄_ß„ty
 
	`unß„_c⁄vîsi⁄_p
 (
loˇti⁄_t
, 
åì
,Åree,

753 
boﬁ
);

754 
boﬁ
 
	`de˛_wôh_n⁄nuŒ_addr_p
 (
c⁄°_åì
);

755 
åì
 
	`c_fuŒy_fﬁd
 (åì, 
boﬁ
, bool *);

756 
åì
 
	`de˛_c⁄°™t_vÆue_f‹_›timiz©i⁄
 (tree);

757 
åì
 
	`c_wøp_maybe_c⁄°
 (åì, 
boﬁ
);

758 
åì
 
	`c_ßve_ex¥
 (tree);

759 
åì
 
	`c_comm⁄_åuthvÆue_c⁄vîsi⁄
 (
loˇti⁄_t
,Åree);

760 
	`c_≠∂y_ty≥_quÆs_to_de˛
 (, 
åì
);

761 
	`mö_Æign_of_ty≥
 (
åì
);

762 
åì
 
	`c_sizeof_‹_Æignof_ty≥
 (
loˇti⁄_t
,Åªe, 
boﬁ
, bool, );

763 
åì
 
	`c_Æignof_ex¥
 (
loˇti⁄_t
,Åree);

766 
	`bö¨y_›_îr‹
 (
loˇti⁄_t
, 
åì_code
, 
åì
,Åree);

767 
åì
 
	`fix_°rög_ty≥
 (tree);

768 
	`c⁄°™t_ex¥essi⁄_w¨nög
 (
åì
);

769 
	`c⁄°™t_ex¥essi⁄_îr‹
 (
åì
);

770 
boﬁ
 
	`°ri˘_Æüsög_w¨nög
 (
åì
,Åree,Åree);

771 
	`sizeof_poöãr_memac˚ss_w¨nög
 (
loˇti⁄_t
 *, 
åì
,

772 
vec
<
åì
, 
va_gc
> *,Åree *,

773 
	$boﬁ
 (*Ë(
åì
,Åree));

774 
	`w¨nögs_f‹_c⁄vît_™d_check
 (
loˇti⁄_t
, 
åì
,Åree,Åree);

775 
åì
 
	`c⁄vît_™d_check
 (
loˇti⁄_t
,Åree,Åree);

776 
	`ovîÊow_w¨nög
 (
loˇti⁄_t
, 
åì
);

777 
boﬁ
 
	`w¨n_if_unu£d_vÆue
 (
c⁄°_åì
, 
loˇti⁄_t
);

778 
	`w¨n_logiˇl_›î©‹
 (
loˇti⁄_t
, 
åì_code
, 
åì
,

779 
åì_code
, 
åì
, tree_code,Åree);

780 
	`check_maö_∑ømëî_ty≥s
 (
åì
 
de˛
);

781 
boﬁ
 
	`c_dëîmöe_visibûôy
 (
åì
);

782 
boﬁ
 
	`ve˘‹_ty≥s_com∑tibÀ_ñemíts_p
 (
åì
,Åree);

783 
	`m¨k_vÆid_loˇti⁄_f‹_°dc_¥agma
 (
boﬁ
);

784 
boﬁ
 
	`vÆid_loˇti⁄_f‹_°dc_¥agma_p
 ();

785 
	`£t_Êﬂt_c⁄°_decimÆ64
 ();

786 
	`˛ór_Êﬂt_c⁄°_decimÆ64
 ();

787 
boﬁ
 
	`Êﬂt_c⁄°_decimÆ64_p
 ();

789 
boﬁ
 
	`keyw‹d_begös_ty≥_•ecifõr
 (
rid
);

790 
boﬁ
 
	`keyw‹d_is_°‹age_˛ass_•ecifõr
 (
rid
);

791 
boﬁ
 
	`keyw‹d_is_ty≥_quÆifõr
 (
rid
);

792 
boﬁ
 
	`keyw‹d_is_de˛_•ecifõr
 (
rid
);

793 
boﬁ
 
	`cxx_fundamíèl_Æignmít_p
 ();

794 
boﬁ
 
	`poöãr_to_zîo_sized_aggr_p
 (
åì
);

796 
	#c_sizeof
(
LOC
, 
T
Ë
	`c_sizeof_‹_Æignof_ty≥
 (LOC, T, 
åue
, 
Ál£
, 1)

	)

797 
	#c_Æignof
(
LOC
, 
T
Ë
	`c_sizeof_‹_Æignof_ty≥
 (LOC, T, 
Ál£
, fÆ£, 1)

	)

800 
åì
 
	`sh‹ãn_bö¨y_›
 (åì 
ªsu…_ty≥
,Åªê
›0
,Åªê
›1
, 
boﬁ
 
bôwi£
);

805 
åì
 
	`sh‹ãn_com∑ª
 (
loˇti⁄_t
,Åree *,Åree *,Åree *,

806 
åì_code
 *);

808 
åì
 
	`poöãr_öt_sum
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,

809 
boﬁ
 = 
åue
);

812 
åì
 
	`c_buûd_quÆifõd_ty≥
 (tree, );

816 
	`c_comm⁄_nodes_™d_buûtös
 ();

818 
	`dißbÀ_buûtö_fun˘i⁄
 (const *);

820 
	`£t_compound_lôîÆ_«me
 (
åì
 
de˛
);

822 
åì
 
	`buûd_va_¨g
 (
loˇti⁄_t
,Åree,Åree);

824 c⁄° 
c_Ámûy_œng_mask
;

825 
	`c_comm⁄_›ti⁄_œng_mask
 ();

826 
	`c_comm⁄_öôülize_dügno°ics
 (
dügno°ic_c⁄ãxt
 *);

827 
boﬁ
 
	`c_comm⁄_com∂aö_wr⁄g_œng_p
 (c⁄° 
˛_›ti⁄
 *);

828 
	`c_comm⁄_öô_›ti⁄s_°ru˘
 (
gcc_›ti⁄s
 *);

829 
	`c_comm⁄_öô_›ti⁄s
 (, 
˛_decoded_›ti⁄
 *);

830 
boﬁ
 
	`c_comm⁄_po°_›ti⁄s
 (const **);

831 
boﬁ
 
	`c_comm⁄_öô
 ();

832 
	`c_comm⁄_föish
 ();

833 
	`c_comm⁄_∑r£_fûe
 ();

834 
Æüs_£t_ty≥
 
	`c_comm⁄_gë_Æüs_£t
 (
åì
);

835 
	`c_ªgi°î_buûtö_ty≥
 (
åì
, const *);

836 
boﬁ
 
	`c_¥omŸög_öãgî_ty≥_p
 (
c⁄°_åì
);

837 
	`£lf_¥omŸög_¨gs_p
 (
c⁄°_åì
);

838 
åì
 
	`°rù_poöãr_›î©‹
 (tree);

839 
åì
 
	`°rù_poöãr_‹_¨øy_ty≥s
 (tree);

840 
HOST_WIDE_INT
 
	`c_comm⁄_to_èrgë_ch¨£t
 (HOST_WIDE_INT);

843 
	`c_∑r£_fûe
 ();

845 
	`w¨n_f‹_omôãd_c⁄d›
 (
loˇti⁄_t
, 
åì
);

851 
	#STATEMENT_LIST_STMT_EXPR
(
NODE
) \

852 
	`TREE_LANG_FLAG_1
 (
	`STATEMENT_LIST_CHECK
 (
NODE
))

	)

855 
	#STATEMENT_LIST_HAS_LABEL
(
NODE
) \

856 
	`TREE_LANG_FLAG_3
 (
	`STATEMENT_LIST_CHECK
 (
NODE
))

	)

859 
	#C_MAYBE_CONST_EXPR_PRE
(
NODE
) \

860 
	`TREE_OPERAND
 (
	`C_MAYBE_CONST_EXPR_CHECK
 (
NODE
), 0)

	)

861 
	#C_MAYBE_CONST_EXPR_EXPR
(
NODE
) \

862 
	`TREE_OPERAND
 (
	`C_MAYBE_CONST_EXPR_CHECK
 (
NODE
), 1)

	)

863 
	#C_MAYBE_CONST_EXPR_INT_OPERANDS
(
NODE
) \

864 
	`TREE_LANG_FLAG_0
 (
	`C_MAYBE_CONST_EXPR_CHECK
 (
NODE
))

	)

865 
	#C_MAYBE_CONST_EXPR_NON_CONST
(
NODE
) \

866 
	`TREE_LANG_FLAG_1
 (
	`C_MAYBE_CONST_EXPR_CHECK
 (
NODE
))

	)

867 
	#EXPR_INT_CONST_OPERANDS
(
EXPR
) \

868 (
	`INTEGRAL_TYPE_P
 (
	`TREE_TYPE
 (
EXPR
)) \

869 && (
	`TREE_CODE
 (
EXPR
Ë=
INTEGER_CST
 \

870 || (
	`TREE_CODE
 (
EXPR
Ë=
C_MAYBE_CONST_EXPR
 \

871 && 
	`C_MAYBE_CONST_EXPR_INT_OPERANDS
 (
EXPR
))))

	)

874 
	#DECL_C_BIT_FIELD
(
NODE
) \

875 (
	`DECL_LANG_FLAG_4
 (
	`FIELD_DECL_CHECK
 (
NODE
)Ë=1)

	)

876 
	#SET_DECL_C_BIT_FIELD
(
NODE
) \

877 (
	`DECL_LANG_FLAG_4
 (
	`FIELD_DECL_CHECK
 (
NODE
)Ë1)

	)

878 
	#CLEAR_DECL_C_BIT_FIELD
(
NODE
) \

879 (
	`DECL_LANG_FLAG_4
 (
	`FIELD_DECL_CHECK
 (
NODE
)Ë0)

	)

881 
åì
 
	`do_ˇ£
 (
loˇti⁄_t
,Åree,Åree);

882 
åì
 
	`buûd_°mt
 (
loˇti⁄_t
, 
åì_code
, ...);

883 
åì
 
	`buûd_ªÆ_imag_ex¥
 (
loˇti⁄_t
, 
åì_code
,Åree);

888 
åì
 
	`buûd_u«ry_›
 (
loˇti⁄_t
, 
åì_code
,Åree, );

889 
åì
 
	`buûd_bö¨y_›
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree, );

890 
åì
 
	`≥rf‹m_öãgøl_¥omŸi⁄s
 (tree);

895 
åì
 
	`deÁu…_c⁄vîsi⁄
 (tree);

900 
åì
 
	`comm⁄_ty≥
 (tree,Åree);

902 
åì
 
	`de˛_c⁄°™t_vÆue
 (tree);

905 
åì
 
	`boﬁón_ö¸emít
 (
åì_code
,Åree);

907 
	`ˇ£_com∑ª
 (
•œy_åì_key
, splay_tree_key);

909 
åì
 
	`c_add_ˇ£_œbñ
 (
loˇti⁄_t
, 
•œy_åì
,Åree,Åree,Åree,Åree);

911 
	`c_do_swôch_w¨nögs
 (
•œy_åì
, 
loˇti⁄_t
, 
åì
,Åree);

913 
åì
 
	`buûd_fun˘i⁄_ˇŒ
 (
loˇti⁄_t
,Åree,Åree);

915 
åì
 
	`buûd_fun˘i⁄_ˇŒ_vec
 (
loˇti⁄_t
, 
vec
<location_t>,Åree,

916 
vec
<
åì
, 
va_gc
> *, vec<tree, va_gc> *);

918 
åì
 
	`ªsﬁve_ovîlﬂded_buûtö
 (
loˇti⁄_t
,Åªe, 
vec
<åì, 
va_gc
> *);

920 
åì
 
	`föish_œbñ_addªss_ex¥
 (åì, 
loˇti⁄_t
);

924 
åì
 
	`lookup_œbñ
 (tree);

925 
åì
 
	`lookup_«me
 (tree);

926 
boﬁ
 
	`lvÆue_p
 (
c⁄°_åì
);

928 
boﬁ
 
	`ve˘‹_èrgës_c⁄vîtibÀ_p
 (
c⁄°_åì
 
t1
, c⁄°_åì 
t2
);

929 
boﬁ
 
	`ve˘‹_ty≥s_c⁄vîtibÀ_p
 (
c⁄°_åì
 
t1
, c⁄°_åì 
t2
, boﬁ 
emô_œx_nŸe
);

930 
åì
 
	`c_buûd_vec_≥rm_ex¥
 (
loˇti⁄_t
,Åªe,Åªe,Åªe, 
boﬁ
 = 
åue
);

932 
	`öô_c_Àx
 ();

934 
	`c_˝p_buûtös
 (
˝p_ªadî
 *);

935 
	`c_˝p_buûtös_›timize_¥agma
 (
˝p_ªadî
 *, 
åì
,Åree);

936 
boﬁ
 
	$c_˝p_îr‹
 (
˝p_ªadî
 *, , , 
loˇti⁄_t
, ,

937 c⁄° *, 
va_li°
 *)

938 
	`ATTRIBUTE_GCC_DIAG
(6,0);

940 
boﬁ
 
	`∑r£_›timize_›ti⁄s
 (
åì
, bool);

944 
	`GTY
(()Ë
≥ndög_œng_ch™ge
;

948 
	sc_fûeöfo


950 
time
;

958 
öãrÁ˚_⁄ly
;

959 
öãrÁ˚_unknown
;

962 
c_fûeöfo
 *
	`gë_fûeöfo
 (const *);

963 
	`dump_time_°©i°ics
 ();

965 
boﬁ
 
	`c_dump_åì
 (*, 
åì
);

967 
	`vîify_£quí˚_poöts
 (
åì
);

969 
åì
 
	`fﬁd_off£tof_1
 (tree);

970 
åì
 
	`fﬁd_off£tof
 (tree);

975 
	elvÆue_u£
 {

976 
lv_assign
,

977 
lv_ö¸emít
,

978 
lv_de¸emít
,

979 
lv_addªssof
,

980 
lv_asm


983 
	`ªad⁄ly_îr‹
 (
loˇti⁄_t
, 
åì
, 
lvÆue_u£
);

984 
	`lvÆue_îr‹
 (
loˇti⁄_t
, 
lvÆue_u£
);

985 
	`övÆid_ödúe˘i⁄_îr‹
 (
loˇti⁄_t
, 
åì
, 
ªf_›î©‹
);

987 
	`com∂ëe_¨øy_ty≥
 (
åì
 *,Åªe, 
boﬁ
);

989 
åì
 
	`buûtö_ty≥_f‹_size
 (, 
boﬁ
);

991 
	`c_comm⁄_m¨k_addªsßbÀ_vec
 (
åì
);

993 
	`w¨n_¨øy_subs¸ùt_wôh_ty≥_ch¨
 (
åì
);

994 
	`w¨n_about_∑ª¡he£s
 (
loˇti⁄_t
,

995 
åì_code
,

996 
åì_code
, 
åì
,

997 
åì_code
, 
åì
);

998 
	`w¨n_f‹_unu£d_œbñ
 (
åì
 
œbñ
);

999 
	`w¨n_f‹_div_by_zîo
 (
loˇti⁄_t
, 
åì
 
divis‹
);

1000 
	`w¨n_f‹_sign_com∑ª
 (
loˇti⁄_t
,

1001 
åì
 
‹ig_›0
,Åªê
‹ig_›1
,

1002 
åì
 
›0
,Åªê
›1
,

1003 
åì
 
ªsu…_ty≥
,

1004 
åì_code
 
ªsu…code
);

1005 
	`do_w¨n_doubÀ_¥omŸi⁄
 (
åì
,Åree,Åree, const *,

1006 
loˇti⁄_t
);

1007 
	`£t_undîlyög_ty≥
 (
åì
);

1008 
	`ªc‹d_loˇŒy_deföed_ty≥def
 (
åì
);

1009 
	`maybe_ªc‹d_ty≥def_u£
 (
åì
);

1010 
	`maybe_w¨n_unu£d_loˇl_ty≥defs
 ();

1011 
vec
<
åì
, 
va_gc
> *
	`make_åì_ve˘‹
 ();

1012 
	`ªÀa£_åì_ve˘‹
 (
vec
<
åì
, 
va_gc
> *);

1013 
vec
<
åì
, 
va_gc
> *
	`make_åì_ve˘‹_sögÀ
 (tree);

1014 
vec
<
åì
, 
va_gc
> *
	`make_åì_ve˘‹_‰om_li°
 (tree);

1015 
vec
<
åì
, 
va_gc
> *
	`make_åì_ve˘‹_c›y
 (const vec<tree, va_gc> *);

1018 
	`c_gíîicize
 (
åì
);

1019 
	`c_gim∂ify_ex¥
 (
åì
 *, 
gim∂e_£q
 *, gimple_seq *);

1020 
åì
 
	`c_buûd_böd_ex¥
 (
loˇti⁄_t
,Åree,Åree);

1023 
	`pch_öô
 ();

1024 
	`pch_˝p_ßve_°©e
 ();

1025 
	`c_comm⁄_vÆid_pch
 (
˝p_ªadî
 *
pfûe
, c⁄° *
«me
, 
fd
);

1026 
	`c_comm⁄_ªad_pch
 (
˝p_ªadî
 *
pfûe
, c⁄° *
«me
, 
fd
,

1027 c⁄° *
‹ig
);

1028 
	`c_comm⁄_wrôe_pch
 ();

1029 
	`c_comm⁄_no_m‹e_pch
 ();

1030 
	`c_comm⁄_pch_¥agma
 (
˝p_ªadî
 *
pfûe
, const *);

1033 c⁄° 
execuèbÀ_checksum
[16];

1036 
	`buûtö_deföe_°d
 (c⁄° *
ma¸o
);

1037 
	`buûtö_deföe_wôh_vÆue
 (const *, const *, );

1038 
	`c_°ddef_˝p_buûtös
 ();

1039 
	`„_fûe_ch™ge
 (c⁄° 
löe_m≠
 *);

1040 
	`c_∑r£_îr‹
 (c⁄° *, 
˝p_ây≥
, 
åì
, );

1043 
	`öô_µ_ouçut
 (
FILE
 *);

1044 
	`¥ïro˚ss_fûe
 (
˝p_ªadî
 *);

1045 
	`µ_fûe_ch™ge
 (c⁄° 
löe_m≠
 *);

1046 
	`µ_dú_ch™ge
 (
˝p_ªadî
 *, const *);

1047 
boﬁ
 
	`check_missög_f‹m©_©åibuã
 (
åì
,Åree);

1050 #i‡
HOST_BITS_PER_WIDE_INT
 >= 64

1051 
	tHOST_WIDE_INT
 
	tomp_˛au£_mask
;

1052 
	#OMP_CLAUSE_MASK_1
 ((
omp_˛au£_mask
Ë1)

	)

1054 
	somp_˛au£_mask


1056 
ölöe
 
	`omp_˛au£_mask
 ();

1057 
ölöe
 
	`omp_˛au£_mask
 (
HOST_WIDE_INT
 
l
);

1058 
ölöe
 
	`omp_˛au£_mask
 (
HOST_WIDE_INT
 
l
,

1059 
HOST_WIDE_INT
 
h
);

1060 
ölöe
 
omp_˛au£_mask
 &
›î©‹
 &= (omp_clause_mask);

1061 
ölöe
 
omp_˛au£_mask
 &
›î©‹
 |= (omp_clause_mask);

1062 
ölöe
 
omp_˛au£_mask
 
›î©‹
 ~ () const;

1063 
ölöe
 
omp_˛au£_mask
 
›î©‹
 & (omp_clause_mask) const;

1064 
ölöe
 
omp_˛au£_mask
 
›î©‹
 | (omp_clause_mask) const;

1065 
ölöe
 
omp_˛au£_mask
 
›î©‹
 >> ();

1066 
ölöe
 
omp_˛au£_mask
 
›î©‹
 << ();

1067 
ölöe
 
boﬁ
 
›î©‹
 =(
omp_˛au£_mask
) const;

1068 
ölöe
 
boﬁ
 
›î©‹
 !(
omp_˛au£_mask
) const;

1069 
HOST_WIDE_INT
 
low
, 
high
;

1072 
ölöe


1073 
omp_˛au£_mask
::
	$omp_˛au£_mask
 ()

1075 
	}
}

1077 
ölöe


1078 
omp_˛au£_mask
::
	$omp_˛au£_mask
 (
HOST_WIDE_INT
 
l
)

1079 : 
	`low
 (
l
), 
	$high
 (0)

1081 
	}
}

1083 
ölöe


1084 
	gomp_˛au£_mask
::
	$omp_˛au£_mask
 (
HOST_WIDE_INT
 
l
,

1085 
HOST_WIDE_INT
 
h
)

1086 : 
	`low
 (
l
), 
	$high
 (
h
)

1088 
	}
}

1090 
ölöe
 
	gomp_˛au£_mask
 &

1091 
	gomp_˛au£_mask
::
›î©‹
 &(
omp_˛au£_mask
 
b
)

1093 
low
 &
b
.low;

1094 
	ghigh
 &
b
.
high
;

1095  *
	gthis
;

1098 
ölöe
 
	gomp_˛au£_mask
 &

1099 
	gomp_˛au£_mask
::
›î©‹
 |(
omp_˛au£_mask
 
b
)

1101 
low
 |
b
.low;

1102 
	ghigh
 |
b
.
high
;

1103  *
	gthis
;

1106 
ölöe
 
omp_˛au£_mask


1107 
	gomp_˛au£_mask
::
›î©‹
 ~ () const

1109 
omp_˛au£_mask
 
ªt
 (~
low
, ~
high
);

1110  
	gªt
;

1113 
ölöe
 
omp_˛au£_mask


1114 
	gomp_˛au£_mask
::
›î©‹
 | (
omp_˛au£_mask
 
b
) const

1116 
omp_˛au£_mask
 
ªt
 (
low
 | 
b
.low, 
high
 | b.high);

1117  
	gªt
;

1120 
ölöe
 
omp_˛au£_mask


1121 
	gomp_˛au£_mask
::
›î©‹
 & (
omp_˛au£_mask
 
b
) const

1123 
omp_˛au£_mask
 
ªt
 (
low
 & 
b
.low, 
high
 & b.high);

1124  
	gªt
;

1127 
ölöe
 
omp_˛au£_mask


1128 
	gomp_˛au£_mask
::
›î©‹
 << (
amou¡
)

1130 
omp_˛au£_mask
 
ªt
;

1131 i‡(
	gamou¡
 >
HOST_BITS_PER_WIDE_INT
)

1133 
ªt
.
low
 = 0;

1134 
	gªt
.
	ghigh
 = 
low
 << (
amou¡
 - 
HOST_BITS_PER_WIDE_INT
);

1136 i‡(
	gamou¡
 == 0)

1137 
ªt
 = *
this
;

1140 
	gªt
.
	glow
 = 
low
 << 
amou¡
;

1141 
	gªt
.
	ghigh
 = (
low
 >> (
HOST_BITS_PER_WIDE_INT
 - 
amou¡
))

1142 | (
high
 << 
amou¡
);

1144  
	gªt
;

1147 
ölöe
 
omp_˛au£_mask


1148 
	gomp_˛au£_mask
::
›î©‹
 >> (
amou¡
)

1150 
omp_˛au£_mask
 
ªt
;

1151 i‡(
	gamou¡
 >
HOST_BITS_PER_WIDE_INT
)

1153 
ªt
.
low
 = 
high
 >> (
amou¡
 - 
HOST_BITS_PER_WIDE_INT
);

1154 
	gªt
.
	ghigh
 = 0;

1156 i‡(
	gamou¡
 == 0)

1157 
ªt
 = *
this
;

1160 
	gªt
.
	glow
 = (
high
 << (
HOST_BITS_PER_WIDE_INT
 - 
amou¡
))

1161 | (
low
 >> 
amou¡
);

1162 
	gªt
.
	ghigh
 = 
high
 >> 
amou¡
;

1164  
	gªt
;

1167 
ölöe
 
boﬁ


1168 
	gomp_˛au£_mask
::
›î©‹
 =(
omp_˛au£_mask
 
b
) const

1170  
low
 =
b
.low && 
high
 == b.high;

1173 
ölöe
 
boﬁ


1174 
	gomp_˛au£_mask
::
›î©‹
 !(
omp_˛au£_mask
 
b
) const

1176  
low
 !
b
.low || 
high
 != b.high;

1179 
	#OMP_CLAUSE_MASK_1
 
	`omp_˛au£_mask
 (1)

	)

1182 
	ec_omp_˛au£_•lô


1184 
	mC_OMP_CLAUSE_SPLIT_TARGET
 = 0,

1185 
	mC_OMP_CLAUSE_SPLIT_TEAMS
,

1186 
	mC_OMP_CLAUSE_SPLIT_DISTRIBUTE
,

1187 
	mC_OMP_CLAUSE_SPLIT_PARALLEL
,

1188 
	mC_OMP_CLAUSE_SPLIT_FOR
,

1189 
	mC_OMP_CLAUSE_SPLIT_SIMD
,

1190 
	mC_OMP_CLAUSE_SPLIT_COUNT
,

1191 
	mC_OMP_CLAUSE_SPLIT_SECTIONS
 = 
C_OMP_CLAUSE_SPLIT_FOR


1194 
åì
 
c_föish_omp_ma°î
 (
loˇti⁄_t
,Åree);

1195 
åì
 
c_föish_omp_èskgroup
 (
loˇti⁄_t
,Åree);

1196 
åì
 
c_föish_omp_¸ôiˇl
 (
loˇti⁄_t
,Åree,Åree);

1197 
åì
 
c_föish_omp_‹dîed
 (
loˇti⁄_t
,Åree);

1198 
c_föish_omp_b¨rõr
 (
loˇti⁄_t
);

1199 
åì
 
c_föish_omp_©omic
 (
loˇti⁄_t
, 
åì_code
, tree_code,

1200 
åì
,Åªe,Åªe,Åªe,Åªe, 
boﬁ
, bool);

1201 
c_föish_omp_Êush
 (
loˇti⁄_t
);

1202 
c_föish_omp_èskwaô
 (
loˇti⁄_t
);

1203 
c_föish_omp_èskyõld
 (
loˇti⁄_t
);

1204 
åì
 
c_föish_omp_f‹
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree,

1205 
åì
,Åree,Åree);

1206 
c_omp_•lô_˛au£s
 (
loˇti⁄_t
, 
åì_code
, 
omp_˛au£_mask
,

1207 
åì
,Åree *);

1208 
åì
 
c_omp_de˛¨e_simd_˛au£s_to_numbîs
 (tree,Åree);

1209 
c_omp_de˛¨e_simd_˛au£s_to_de˛s
 (
åì
,Åree);

1210 
omp_˛au£_deÁu…_köd
 
c_omp_¥edëîmöed_sh¨ög
 (
åì
);

1213 
boﬁ
 
c_omp_sh¨ög_¥edëîmöed
 (
åì
);

1214 
åì
 
c_omp_ªm≠_de˛
 (åì, 
boﬁ
);

1215 
ªc‹d_ty≥s_u£d_by_cuºít_v¨_de˛
 (
åì
);

1218 
ölöe
 
åì


1219 
	$c_åì_chaö_√xt
 (
åì
 
t
)

1224 i‡(
	`CODE_CONTAINS_STRUCT
 (
	`TREE_CODE
 (
t
), 
TS_TYPE_COMMON
))

1225  
	`TYPE_NEXT_VARIANT
 (
t
);

1227 i‡(
	`CODE_CONTAINS_STRUCT
 (
	`TREE_CODE
 (
t
), 
TS_COMMON
))

1228  
	`TREE_CHAIN
 (
t
);

1229  
NULL
;

1230 
	}
}

1233 
	#TM_STMT_ATTR_OUTER
 2

	)

1234 
	#TM_STMT_ATTR_ATOMIC
 4

	)

1235 
	#TM_STMT_ATTR_RELAXED
 8

	)

1237 
∑r£_tm_°mt_©å
 (
åì
, );

1244 
	#TM_ATTR_SAFE
 1

	)

1245 
	#TM_ATTR_CALLABLE
 2

	)

1246 
	#TM_ATTR_PURE
 4

	)

1247 
	#TM_ATTR_IRREVOCABLE
 8

	)

1248 
	#TM_ATTR_MAY_CANCEL_OUTER
 16

	)

1250 
tm_©å_to_mask
 (
åì
);

1251 
åì
 
tm_mask_to_©å
 ();

1252 
åì
 
föd_tm_©åibuã
 (tree);

1256 
	eovîÊow_ty≥
 {

1257 
	mOT_UNDERFLOW
 = -1,

1258 
	mOT_NONE
,

1259 
	mOT_OVERFLOW


1262 
GTY
(()Ë
	gåì_u£rdef_lôîÆ
 {

1263 
åì_ba£
 
	gba£
;

1264 
åì
 
	gsuffix_id
;

1265 
åì
 
	gvÆue
;

1266 
åì
 
	gnum_°rög
;

1267 
ovîÊow_ty≥
 
	govîÊow
;

1270 
	#USERDEF_LITERAL_SUFFIX_ID
(
NODE
) \

1271 (((
åì_u£rdef_lôîÆ
 *)
	`USERDEF_LITERAL_CHECK
 (
NODE
))->
suffix_id
)

	)

1273 
	#USERDEF_LITERAL_VALUE
(
NODE
) \

1274 (((
åì_u£rdef_lôîÆ
 *)
	`USERDEF_LITERAL_CHECK
 (
NODE
))->
vÆue
)

	)

1276 
	#USERDEF_LITERAL_OVERFLOW
(
NODE
) \

1277 (((
åì_u£rdef_lôîÆ
 *)
	`USERDEF_LITERAL_CHECK
 (
NODE
))->
ovîÊow
)

	)

1279 
	#USERDEF_LITERAL_NUM_STRING
(
NODE
) \

1280 (((
åì_u£rdef_lôîÆ
 *)
	`USERDEF_LITERAL_CHECK
 (
NODE
))->
num_°rög
)

	)

1282 
	#USERDEF_LITERAL_TYPE
(
NODE
) \

1283 (
	`TREE_TYPE
 (
	`USERDEF_LITERAL_VALUE
 (
NODE
)))

	)

1285 
åì
 
buûd_u£rdef_lôîÆ
 (åì 
suffix_id
,Åªê
vÆue
,

1286 
ovîÊow_ty≥
 
ovîÊow
,

1287 
åì
 
num_°rög
);

1289 
c⁄vît_ve˘‹_to_poöãr_f‹_subs¸ùt
 (
loˇti⁄_t
, 
åì
*,Åree);

1292 
	e°v_c⁄v
 {

1293 
	m°v_îr‹
,

1294 
	m°v_nŸhög
,

1295 
	m°v_fú°¨g
,

1296 
	m°v_£c⁄d¨g


1299 
°v_c⁄v
 
sˇœr_to_ve˘‹
 (
loˇti⁄_t
 
loc
, 
åì_code
 
code
,

1300 
åì
 
›0
,Åªê
›1
, 
boﬁ
);

1303 
åì
 
c_föish_cûk_˛au£s
 (tree);

1304 
åì
 
c_vÆid©e_cûk_∂us_lo›
 (tree *, *, *);

1305 
boﬁ
 
c_check_cûk_lo›
 (
loˇti⁄_t
, 
åì
);

1310 
	#ARRAY_NOTATION_CHECK
(
NODE
Ë
	`TREE_CHECK
 (NODE, 
ARRAY_NOTATION_REF
)

	)

1311 
	#ARRAY_NOTATION_ARRAY
(
NODE
) \

1312 
	`TREE_OPERAND
 (
	`ARRAY_NOTATION_CHECK
 (
NODE
), 0)

	)

1313 
	#ARRAY_NOTATION_START
(
NODE
) \

1314 
	`TREE_OPERAND
 (
	`ARRAY_NOTATION_CHECK
 (
NODE
), 1)

	)

1315 
	#ARRAY_NOTATION_LENGTH
(
NODE
) \

1316 
	`TREE_OPERAND
 (
	`ARRAY_NOTATION_CHECK
 (
NODE
), 2)

	)

1317 
	#ARRAY_NOTATION_STRIDE
(
NODE
) \

1318 
	`TREE_OPERAND
 (
	`ARRAY_NOTATION_CHECK
 (
NODE
), 3)

	)

1324 
	söv_li°


1326 
	mvec
<
	måì
, 
	mva_gc
> *
	mli°_vÆues
;

1327 
	mvec
<
	måì
, 
	mva_gc
> *
	mª∂a˚mít
;

1328 
	mvec
<
	måì_code
, 
	mva_gc
> *
	maddôi⁄Æ_tcodes
;

1334 
	scûk∂us_™_∑πs


1336 
åì
 
	mvÆue
;

1337 
åì
 
	m°¨t
;

1338 
åì
 
	mÀngth
;

1339 
åì
 
	m°ride
;

1340 
boﬁ
 
	mis_ve˘‹
;

1341 } 
	t™_∑πs
;

1346 
	scûk∂us_™_lo›_∑πs


1348 
åì
 
	mv¨
;

1349 
åì
 
	mö¸
;

1350 
åì
 
	mcmp
;

1351 
åì
 
	möd_öô
;

1352 } 
	t™_lo›_∑πs
;

1355 
HOST_WIDE_INT
 
exåa˘_£c_im∂icô_ödex_¨g
 (
loˇti⁄_t
, 
åì
);

1356 
boﬁ
 
is_£c_im∂icô_ödex_‚
 (
åì
);

1357 
¨øy_nŸ©i⁄_öô_buûtös
 ();

1358 
c_ex¥
 
fix_¨øy_nŸ©i⁄_ex¥
 (
loˇti⁄_t
, 
åì_code
,

1359 
c_ex¥
);

1360 
boﬁ
 
c⁄èös_¨øy_nŸ©i⁄_ex¥
 (
åì
);

1361 
åì
 
ex∑nd_¨øy_nŸ©i⁄_ex¥s
 (tree);

1362 
åì
 
fix_c⁄dôi⁄Æ_¨øy_nŸ©i⁄s
 (tree);

1363 
åì
 
föd_c‹ª˘_¨øy_nŸ©i⁄_ty≥
 (tree);

1364 
boﬁ
 
Àngth_mism©ch_ö_ex¥_p
 (
loˇti⁄_t
, 
vec
<vec<
™_∑πs
> >);

1365 
buût_ö_fun˘i⁄
 
is_cûk∂us_ªdu˚_buûtö
 (
åì
);

1366 
boﬁ
 
föd_ønk
 (
loˇti⁄_t
, 
åì
,Åªe, boﬁ, 
size_t
 *);

1367 
exåa˘_¨øy_nŸ©i⁄_ex¥s
 (
åì
, 
boﬁ
, 
vec
<åì, 
va_gc
> **);

1368 
ª∂a˚_¨øy_nŸ©i⁄s
 (
åì
 *, 
boﬁ
, 
vec
<åì, 
va_gc
> *,

1369 
vec
<
åì
, 
va_gc
> *);

1370 
åì
 
föd_öv_åìs
 (tree *, *, *);

1371 
åì
 
ª∂a˚_öv_åìs
 (tree *, *, *);

1372 
åì
 
föd_c‹ª˘_¨øy_nŸ©i⁄_ty≥
 (åì 
›
);

1373 
cûk∂us_exåa˘_™_åùÀts
 (
vec
<
åì
, 
va_gc
> *, 
size_t
, size_t,

1374 
vec
<vec<
™_∑πs
> > *);

1375 
vec
 <
åì
, 
va_gc
> *
fix_£c_im∂icô_¨gs


1376 (
loˇti⁄_t
, 
vec
 <
åì
, 
va_gc
> *, vec<
™_lo›_∑πs
>, 
size_t
,Åree);

1379 
åì
 
ö£π_cûk_‰ame
 (tree);

1380 
cûk_öô_buûtös
 ();

1381 
gim∂ify_cûk_•awn
 (
åì
 *);

1382 
cûk_ö°Æl_body_wôh_‰ame_˛ónup
 (
åì
,Åree, *);

1383 
boﬁ
 
cûk_dëe˘_•awn_™d_unwøp
 (
åì
 *);

1384 
boﬁ
 
cûk_£t_•awn_m¨kî
 (
loˇti⁄_t
, 
åì
);

1385 
åì
 
buûd_cûk_sync
 ();

1386 
åì
 
buûd_cûk_•awn
 (
loˇti⁄_t
,Åree);

1387 
åì
 
make_cûk_‰ame
 (tree);

1388 
åì
 
¸óã_cûk_fun˘i⁄_exô
 (åì, 
boﬁ
, bool);

1389 
åì
 
cûk_ö°Æl_body_≥digªe_›î©i⁄s
 (tree);

1390 
cûk_ouéöe
 (
åì
,Åree *, *);

1391 
boﬁ
 
c⁄èös_cûk_•awn_°mt
 (
åì
);

	@include/c-family/c-objc.h

20 #i‚de‡
GCC_C_COMMON_OBJC_H


21 
	#GCC_C_COMMON_OBJC_H


	)

24 
	eobjc_iv¨_visibûôy_köd
 {

25 
	mOBJC_IVAR_VIS_PROTECTED
 = 0,

26 
	mOBJC_IVAR_VIS_PUBLIC
 = 1,

27 
	mOBJC_IVAR_VIS_PRIVATE
 = 2,

28 
	mOBJC_IVAR_VIS_PACKAGE
 = 3

29 } 
	tobjc_iv¨_visibûôy_köd
;

35 
objc_wrôe_globÆ_de˛¨©i⁄s
 ();

36 
åì
 
objc_is_˛ass_«me
 (tree);

37 
åì
 
objc_is_obje˘_±r
 (tree);

38 
objc_check_de˛
 (
åì
);

39 
objc_check_globÆ_de˛
 (
åì
);

40 
åì
 
objc_comm⁄_ty≥
 (tree,Åree);

41 
boﬁ
 
objc_com∑ª_ty≥s
 (
åì
,Åree, ,Åree);

42 
boﬁ
 
objc_have_comm⁄_ty≥
 (
åì
,Åree, ,Åree);

43 
boﬁ
 
objc_dügno£_¥iv©e_iv¨
 (
åì
);

44 
objc_vﬁ©ûize_de˛
 (
åì
);

45 
åì
 
objc_ªwrôe_fun˘i⁄_ˇŒ
 (tree,Åree);

46 
åì
 
objc_mesßge_£À˘‹
 ();

47 
åì
 
objc_lookup_iv¨
 (tree,Åree);

48 
objc_˛ór_su≥r_ª˚ivî
 ();

49 
objc_is_public
 (
åì
,Åree);

50 
åì
 
objc_is_id
 (tree);

51 
objc_de˛¨e_Æüs
 (
åì
,Åree);

52 
objc_de˛¨e_˛ass
 (
åì
);

53 
objc_de˛¨e_¥Ÿocﬁ
 (
åì
,Åree);

54 
åì
 
objc_buûd_mesßge_ex¥
 (tree,Åree);

55 
åì
 
objc_föish_mesßge_ex¥
 (tree,Åree,Åree,Åree*);

56 
åì
 
objc_buûd_£À˘‹_ex¥
 (
loˇti⁄_t
,Åree);

57 
åì
 
objc_buûd_¥Ÿocﬁ_ex¥
 (tree);

58 
åì
 
objc_buûd_ícode_ex¥
 (tree);

59 
åì
 
objc_buûd_°rög_obje˘
 (tree);

60 
åì
 
objc_gë_¥Ÿocﬁ_quÆifõd_ty≥
 (tree,Åree);

61 
åì
 
objc_gë_˛ass_ª„ªn˚
 (tree);

62 
åì
 
objc_gë_˛ass_iv¨s
 (tree);

63 
boﬁ
 
objc_dëe˘_fõld_du∂iˇãs
 (bool);

64 
objc_°¨t_˛ass_öãrÁ˚
 (
åì
,Åree,Åree,Åree);

65 
objc_°¨t_ˇãg‹y_öãrÁ˚
 (
åì
,Åree,Åree,Åree);

66 
objc_°¨t_¥Ÿocﬁ
 (
åì
,Åree,Åree);

67 
objc_c⁄töue_öãrÁ˚
 ();

68 
objc_föish_öãrÁ˚
 ();

69 
objc_°¨t_˛ass_im∂emíèti⁄
 (
åì
,Åree);

70 
objc_°¨t_ˇãg‹y_im∂emíèti⁄
 (
åì
,Åree);

71 
objc_c⁄töue_im∂emíèti⁄
 ();

72 
objc_föish_im∂emíèti⁄
 ();

73 
objc_£t_visibûôy
 (
objc_iv¨_visibûôy_köd
);

74 
åì
 
objc_buûd_mëhod_sig«tuª
 (
boﬁ
,Åree,Åree,Åree, bool);

75 
objc_add_mëhod_de˛¨©i⁄
 (
boﬁ
, 
åì
,Åree);

76 
boﬁ
 
objc_°¨t_mëhod_deföôi⁄
 (boﬁ, 
åì
,Åree,Åree);

77 
objc_föish_mëhod_deföôi⁄
 (
åì
);

78 
objc_add_ö°™˚_v¨übÀ
 (
åì
);

79 
åì
 
objc_buûd_keyw‹d_de˛
 (tree,Åree,Åree,Åree);

80 
åì
 
objc_buûd_throw_°mt
 (
loˇti⁄_t
,Åree);

81 
objc_begö_åy_°mt
 (
loˇti⁄_t
, 
åì
);

82 
åì
 
objc_föish_åy_°mt
 ();

83 
objc_begö_ˇtch_˛au£
 (
åì
);

84 
objc_föish_ˇtch_˛au£
 ();

85 
objc_buûd_föÆly_˛au£
 (
loˇti⁄_t
, 
åì
);

86 
åì
 
objc_buûd_synchr⁄ized
 (
loˇti⁄_t
,Åree,Åree);

87 
objc_°©ic_öô_√eded_p
 ();

88 
åì
 
objc_gíî©e_°©ic_öô_ˇŒ
 (tree);

89 
åì
 
objc_gíî©e_wrôe_b¨rõr
 (åì, 
åì_code
,Åree);

90 
objc_£t_mëhod_›t
 (
boﬁ
);

91 
objc_föish_f‹óch_lo›
 (
loˇti⁄_t
, 
åì
,Åree,Åree,Åree,Åree);

92 
boﬁ
 
objc_mëhod_de˛
 (
åì_code
);

93 
objc_add_¥›îty_de˛¨©i⁄
 (
loˇti⁄_t
, 
åì
, 
boﬁ
, bool, bool,

94 
boﬁ
, boﬁ, boﬁ, 
åì
,Åree);

95 
åì
 
objc_maybe_buûd_comp⁄ít_ªf
 (tree,Åree);

96 
åì
 
objc_buûd_˛ass_comp⁄ít_ªf
 (tree,Åree);

97 
åì
 
objc_maybe_buûd_modify_ex¥
 (tree,Åree);

98 
åì
 
objc_buûd_ö¸_ex¥_f‹_¥›îty_ªf
 (
loˇti⁄_t
, 
åì_code
,

99 
åì
,Åree);

100 
objc_add_sy¡hesize_de˛¨©i⁄
 (
loˇti⁄_t
, 
åì
);

101 
objc_add_dy«mic_de˛¨©i⁄
 (
loˇti⁄_t
, 
åì
);

102 c⁄° * 
objc_maybe_¥öèbÀ_«me
 (
åì
, );

103 
boﬁ
 
objc_is_¥›îty_ªf
 (
åì
);

104 
boﬁ
 
objc_°rög_ªf_ty≥_p
 (
åì
);

105 
objc_check_f‹m©_¨g
 (
åì
,Åree);

106 
objc_föish_fun˘i⁄
 ();

107 
objc_maybe_w¨n_ex˚±i⁄s
 (
loˇti⁄_t
);

111 *
objc_gë_cuºít_sc›e
 ();

112 
objc_m¨k_loˇls_vﬁ©ûe
 (*);

	@include/c-family/c-pragma.h

20 #i‚de‡
GCC_C_PRAGMA_H


21 
	#GCC_C_PRAGMA_H


	)

23 
	~"˝∂ib.h
"

27 
	e¥agma_köd
 {

28 
	mPRAGMA_NONE
 = 0,

30 
	mPRAGMA_OMP_ATOMIC
,

31 
	mPRAGMA_OMP_BARRIER
,

32 
	mPRAGMA_OMP_CANCEL
,

33 
	mPRAGMA_OMP_CANCELLATION_POINT
,

34 
	mPRAGMA_OMP_CRITICAL
,

35 
	mPRAGMA_OMP_DECLARE_REDUCTION
,

36 
	mPRAGMA_OMP_DISTRIBUTE
,

37 
	mPRAGMA_OMP_END_DECLARE_TARGET
,

38 
	mPRAGMA_OMP_FLUSH
,

39 
	mPRAGMA_OMP_FOR
,

40 
	mPRAGMA_OMP_MASTER
,

41 
	mPRAGMA_OMP_ORDERED
,

42 
	mPRAGMA_OMP_PARALLEL
,

43 
	mPRAGMA_OMP_SECTION
,

44 
	mPRAGMA_OMP_SECTIONS
,

45 
	mPRAGMA_OMP_SIMD
,

46 
	mPRAGMA_OMP_SINGLE
,

47 
	mPRAGMA_OMP_TARGET
,

48 
	mPRAGMA_OMP_TASK
,

49 
	mPRAGMA_OMP_TASKGROUP
,

50 
	mPRAGMA_OMP_TASKWAIT
,

51 
	mPRAGMA_OMP_TASKYIELD
,

52 
	mPRAGMA_OMP_THREADPRIVATE
,

53 
	mPRAGMA_OMP_TEAMS
,

56 
	mPRAGMA_CILK_SIMD
,

58 
	mPRAGMA_GCC_PCH_PREPROCESS
,

59 
	mPRAGMA_IVDEP
,

61 
	mPRAGMA_FIRST_EXTERNAL


62 } 
	t¥agma_köd
;

67 
	e¥agma_omp_˛au£
 {

68 
	mPRAGMA_OMP_CLAUSE_NONE
 = 0,

70 
	mPRAGMA_OMP_CLAUSE_ALIGNED
,

71 
	mPRAGMA_OMP_CLAUSE_COLLAPSE
,

72 
	mPRAGMA_OMP_CLAUSE_COPYIN
,

73 
	mPRAGMA_OMP_CLAUSE_COPYPRIVATE
,

74 
	mPRAGMA_OMP_CLAUSE_DEFAULT
,

75 
	mPRAGMA_OMP_CLAUSE_DEPEND
,

76 
	mPRAGMA_OMP_CLAUSE_DEVICE
,

77 
	mPRAGMA_OMP_CLAUSE_DIST_SCHEDULE
,

78 
	mPRAGMA_OMP_CLAUSE_FINAL
,

79 
	mPRAGMA_OMP_CLAUSE_FIRSTPRIVATE
,

80 
	mPRAGMA_OMP_CLAUSE_FOR
,

81 
	mPRAGMA_OMP_CLAUSE_FROM
,

82 
	mPRAGMA_OMP_CLAUSE_IF
,

83 
	mPRAGMA_OMP_CLAUSE_INBRANCH
,

84 
	mPRAGMA_OMP_CLAUSE_LASTPRIVATE
,

85 
	mPRAGMA_OMP_CLAUSE_LINEAR
,

86 
	mPRAGMA_OMP_CLAUSE_MAP
,

87 
	mPRAGMA_OMP_CLAUSE_MERGEABLE
,

88 
	mPRAGMA_OMP_CLAUSE_NOTINBRANCH
,

89 
	mPRAGMA_OMP_CLAUSE_NOWAIT
,

90 
	mPRAGMA_OMP_CLAUSE_NUM_TEAMS
,

91 
	mPRAGMA_OMP_CLAUSE_NUM_THREADS
,

92 
	mPRAGMA_OMP_CLAUSE_ORDERED
,

93 
	mPRAGMA_OMP_CLAUSE_PARALLEL
,

94 
	mPRAGMA_OMP_CLAUSE_PRIVATE
,

95 
	mPRAGMA_OMP_CLAUSE_PROC_BIND
,

96 
	mPRAGMA_OMP_CLAUSE_REDUCTION
,

97 
	mPRAGMA_OMP_CLAUSE_SAFELEN
,

98 
	mPRAGMA_OMP_CLAUSE_SCHEDULE
,

99 
	mPRAGMA_OMP_CLAUSE_SECTIONS
,

100 
	mPRAGMA_OMP_CLAUSE_SHARED
,

101 
	mPRAGMA_OMP_CLAUSE_SIMDLEN
,

102 
	mPRAGMA_OMP_CLAUSE_TASKGROUP
,

103 
	mPRAGMA_OMP_CLAUSE_THREAD_LIMIT
,

104 
	mPRAGMA_OMP_CLAUSE_TO
,

105 
	mPRAGMA_OMP_CLAUSE_UNIFORM
,

106 
	mPRAGMA_OMP_CLAUSE_UNTIED
,

109 
	mPRAGMA_CILK_CLAUSE_NOMASK
,

110 
	mPRAGMA_CILK_CLAUSE_MASK
,

111 
	mPRAGMA_CILK_CLAUSE_VECTORLENGTH
,

112 
	mPRAGMA_CILK_CLAUSE_NONE
 = 
PRAGMA_OMP_CLAUSE_NONE
,

113 
	mPRAGMA_CILK_CLAUSE_LINEAR
 = 
PRAGMA_OMP_CLAUSE_LINEAR
,

114 
	mPRAGMA_CILK_CLAUSE_PRIVATE
 = 
PRAGMA_OMP_CLAUSE_PRIVATE
,

115 
	mPRAGMA_CILK_CLAUSE_FIRSTPRIVATE
 = 
PRAGMA_OMP_CLAUSE_FIRSTPRIVATE
,

116 
	mPRAGMA_CILK_CLAUSE_LASTPRIVATE
 = 
PRAGMA_OMP_CLAUSE_LASTPRIVATE
,

117 
	mPRAGMA_CILK_CLAUSE_REDUCTION
 = 
PRAGMA_OMP_CLAUSE_REDUCTION
,

118 
	mPRAGMA_CILK_CLAUSE_UNIFORM
 = 
PRAGMA_OMP_CLAUSE_UNIFORM


119 } 
	t¥agma_omp_˛au£
;

121 
˝p_ªadî
* 
∑r£_ö
;

126 
push_visibûôy
 (const *, );

127 
boﬁ
 
p›_visibûôy
 ();

129 
öô_¥agma
 ();

132 (*
	t¥agma_h™dÀr_1¨g
)(
	t˝p_ªadî
 *);

135 (*
	t¥agma_h™dÀr_2¨g
)(
	t˝p_ªadî
 *, *);

138 
	ugí_¥agma_h™dÀr
 {

139 
¥agma_h™dÀr_1¨g
 
h™dÀr_1¨g
;

140 
¥agma_h™dÀr_2¨g
 
h™dÀr_2¨g
;

143 
	söã∫Æ_¥agma_h™dÀr_d
 {

144 
gí_¥agma_h™dÀr
 
h™dÀr
;

147 
boﬁ
 
exåa_d©a
;

149 * 
d©a
;

151 
öã∫Æ_¥agma_h™dÀr_d
 
	töã∫Æ_¥agma_h™dÀr
;

153 
	`c_ªgi°î_¥agma
 (c⁄° *
•a˚
, c⁄° *
«me
,

154 
¥agma_h™dÀr_1¨g
 
h™dÀr
);

155 
	`c_ªgi°î_¥agma_wôh_d©a
 (c⁄° *
•a˚
, c⁄° *
«me
,

156 
¥agma_h™dÀr_2¨g
 
h™dÀr
,

157 *
d©a
);

159 
	`c_ªgi°î_¥agma_wôh_ex∑nsi⁄
 (c⁄° *
•a˚
,

160 c⁄° *
«me
,

161 
¥agma_h™dÀr_1¨g
 
h™dÀr
);

162 
	`c_ªgi°î_¥agma_wôh_ex∑nsi⁄_™d_d©a
 (c⁄° *
•a˚
,

163 c⁄° *
«me
,

164 
¥agma_h™dÀr_2¨g
 
h™dÀr
,

165 *
d©a
);

166 
	`c_övoke_¥agma_h™dÀr
 ();

168 
	`maybe_≠∂y_¥agma_wók
 (
åì
);

169 
	`maybe_≠∂y_≥ndög_¥agma_wóks
 ();

170 
åì
 
	`maybe_≠∂y_ª«mög_¥agma
 (tree,Åree);

171 
	`add_to_ª«mög_¥agma_li°
 (
åì
,Åree);

173 
˝p_ây≥
 
	`¥agma_Àx
 (
åì
 *);

177 
	#C_LEX_STRING_NO_TRANSLATE
 1

	)

179 
	#C_LEX_STRING_NO_JOIN
 2

	)

186 
˝p_ây≥
 
	`c_Àx_wôh_Êags
 (
åì
 *, 
loˇti⁄_t
 *, *,

189 
	`c_µ_lookup_¥agma
 (, const **, const **);

191 
	`GTY
(()Ë
åì
 
¥agma_exã∫_¥efix
;

	@include/c-family/c-pretty-print.h

21 #i‚de‡
GCC_C_PRETTY_PRINTER


22 
	#GCC_C_PRETTY_PRINTER


	)

24 
	~"åì.h
"

25 
	~"c-Ámûy/c-comm⁄.h
"

26 
	~"¥ëty-¥öt.h
"

29 
	eµ_c_¥ëty_¥öt_Êags


31 
	mµ_c_Êag_ab°ø˘
 = 1 << 1,

32 
	mµ_c_Êag_gnu_v3
 = 1 << 2,

33 
	mµ_c_Êag_œ°_bô
 = 3

39 
	gc_¥ëty_¥öãr
;

42 (*
	tc_¥ëty_¥öt_‚
Ë(
	tc_¥ëty_¥öãr
 *, 
	tåì
);

50 
c_¥ëty_¥öãr
 : 
¥ëty_¥öãr


52 
	`c_¥ëty_¥öãr
 ();

55 
	`å™¶©e_°rög
 (const *);

57 
vútuÆ
 
	`c⁄°™t
 (
åì
);

58 
vútuÆ
 
	`id_ex¥essi⁄
 (
åì
);

59 
vútuÆ
 
	`¥im¨y_ex¥essi⁄
 (
åì
);

60 
vútuÆ
 
	`po°fix_ex¥essi⁄
 (
åì
);

61 
vútuÆ
 
	`u«ry_ex¥essi⁄
 (
åì
);

62 
vútuÆ
 
	`mu…ùliˇtive_ex¥essi⁄
 (
åì
);

63 
vútuÆ
 
	`c⁄dôi⁄Æ_ex¥essi⁄
 (
åì
);

64 
vútuÆ
 
	`assignmít_ex¥essi⁄
 (
åì
);

65 
vútuÆ
 
	`ex¥essi⁄
 (
åì
);

67 
vútuÆ
 
	`ty≥_id
 (
åì
);

68 
vútuÆ
 
	`°©emít
 (
åì
);

70 
vútuÆ
 
	`de˛¨©i⁄
 (
åì
);

71 
vútuÆ
 
	`de˛¨©i⁄_•ecifõrs
 (
åì
);

72 
vútuÆ
 
	`sim∂e_ty≥_•ecifõr
 (
åì
);

73 
vútuÆ
 
	`fun˘i⁄_•ecifõr
 (
åì
);

74 
vútuÆ
 
	`°‹age_˛ass_•ecifõr
 (
åì
);

75 
vútuÆ
 
	`de˛¨©‹
 (
åì
);

76 
vútuÆ
 
	`dúe˘_de˛¨©‹
 (
åì
);

77 
vútuÆ
 
	`ab°ø˘_de˛¨©‹
 (
åì
);

78 
vútuÆ
 
	`dúe˘_ab°ø˘_de˛¨©‹
 (
åì
);

80 
vútuÆ
 
	`öôülizî
 (
åì
);

83 *
off£t_li°
;

85 
µ_Êags
 
Êags
;

89 
c_¥ëty_¥öt_‚
 
ty≥_•ecifõr_£q
;

90 
c_¥ëty_¥öt_‚
 
±r_›î©‹
;

91 
c_¥ëty_¥öt_‚
 
∑ømëî_li°
;

92 
	}
};

94 
	#µ_c_åì_idítifõr
(
PPI
, 
ID
) \

95 
	`µ_c_idítifõr
 (
PPI
, 
	`IDENTIFIER_POINTER
 (
ID
))

	)

97 
	#µ_ty≥_•ecifõr_£q
(
PP
, 
D
Ë(PP)->
	`ty≥_•ecifõr_£q
 (PP, D)

	)

98 
	#µ_±r_›î©‹
(
PP
, 
D
Ë(PP)->
	`±r_›î©‹
 (PP, D)

	)

99 
	#µ_∑ømëî_li°
(
PP
, 
T
Ë(PP)->
	`∑ømëî_li°
 (PP, T)

	)

101 
µ_c_whôe•a˚
 (
c_¥ëty_¥öãr
 *);

102 
µ_c_À·_∑ªn
 (
c_¥ëty_¥öãr
 *);

103 
µ_c_right_∑ªn
 (
c_¥ëty_¥öãr
 *);

104 
µ_c_À·_bø˚
 (
c_¥ëty_¥öãr
 *);

105 
µ_c_right_bø˚
 (
c_¥ëty_¥öãr
 *);

106 
µ_c_À·_bøckë
 (
c_¥ëty_¥öãr
 *);

107 
µ_c_right_bøckë
 (
c_¥ëty_¥öãr
 *);

108 
µ_c_dŸ
 (
c_¥ëty_¥öãr
 *);

109 
µ_c_am≥rßnd
 (
c_¥ëty_¥öãr
 *);

110 
µ_c_°¨
 (
c_¥ëty_¥öãr
 *);

111 
µ_c_¨row
 (
c_¥ëty_¥öãr
 *);

112 
µ_c_£micﬁ⁄
 (
c_¥ëty_¥öãr
 *);

113 
µ_c_com∂emít
 (
c_¥ëty_¥öãr
 *);

114 
µ_c_ex˛am©i⁄
 (
c_¥ëty_¥öãr
 *);

115 
µ_c_•a˚_f‹_poöãr_›î©‹
 (
c_¥ëty_¥öãr
 *, 
åì
);

118 
µ_c_åì_de˛_idítifõr
 (
c_¥ëty_¥öãr
 *, 
åì
);

119 
µ_c_fun˘i⁄_deföôi⁄
 (
c_¥ëty_¥öãr
 *, 
åì
);

120 
µ_c_©åibuãs
 (
c_¥ëty_¥öãr
 *, 
åì
);

121 
µ_c_©åibuãs_di•œy
 (
c_¥ëty_¥öãr
 *, 
åì
);

122 
µ_c_cv_quÆifõrs
 (
c_¥ëty_¥öãr
 *
µ
, 
quÆifõrs
, 
boﬁ
 
func_ty≥
);

123 
µ_c_ty≥_quÆifõr_li°
 (
c_¥ëty_¥öãr
 *, 
åì
);

124 
µ_c_∑ømëî_ty≥_li°
 (
c_¥ëty_¥öãr
 *, 
åì
);

125 
µ_c_•ecifõr_quÆifõr_li°
 (
c_¥ëty_¥öãr
 *, 
åì
);

127 
µ_c_logiˇl_‹_ex¥essi⁄
 (
c_¥ëty_¥öãr
 *, 
åì
);

128 
µ_c_ex¥essi⁄_li°
 (
c_¥ëty_¥öãr
 *, 
åì
);

129 
µ_c_c⁄°ru˘‹_ñts
 (
c_¥ëty_¥öãr
 *, 
vec
<
c⁄°ru˘‹_ñt
, 
va_gc
> *);

130 
µ_c_ˇŒ_¨gumít_li°
 (
c_¥ëty_¥öãr
 *, 
åì
);

131 
µ_c_ˇ°_ex¥essi⁄
 (
c_¥ëty_¥öãr
 *, 
åì
);

132 
µ_c_öô_de˛¨©‹
 (
c_¥ëty_¥öãr
 *, 
åì
);

133 
µ_c_ws_°rög
 (
c_¥ëty_¥öãr
 *, const *);

134 
µ_c_idítifõr
 (
c_¥ëty_¥öãr
 *, const *);

135 
µ_c_°rög_lôîÆ
 (
c_¥ëty_¥öãr
 *, 
åì
);

137 
¥öt_c_åì
 (
FILE
 *
fûe
, 
åì
 
t
);

	@include/c-tree.h

20 #i‚de‡
GCC_C_TREE_H


21 
	#GCC_C_TREE_H


	)

23 
	~"c-Ámûy/c-comm⁄.h
"

24 
	~"dügno°ic.h
"

28 
	#C_SIZEOF_STRUCT_LANG_IDENTIFIER
 \

29 ( (
c_comm⁄_idítifõr
Ë+ 3 *  (*))

	)

32 
	#C_TYPE_FIELDS_READONLY
(
TYPE
Ë
	`TREE_LANG_FLAG_1
 (TYPE)

	)

35 
	#C_TYPE_FIELDS_VOLATILE
(
TYPE
Ë
	`TREE_LANG_FLAG_2
 (TYPE)

	)

39 
	#C_TYPE_BEING_DEFINED
(
TYPE
Ë
	`TYPE_LANG_FLAG_0
 (TYPE)

	)

43 
	#C_TYPE_INCOMPLETE_VARS
(
TYPE
Ë
	`TYPE_VFIELD
 (TYPE)

	)

48 
	#C_IS_RESERVED_WORD
(
ID
Ë
	`TREE_LANG_FLAG_0
 (ID)

	)

52 
	#C_TYPE_VARIABLE_SIZE
(
TYPE
Ë
	`TYPE_LANG_FLAG_1
 (TYPE)

	)

53 
	#C_DECL_VARIABLE_SIZE
(
TYPE
Ë
	`DECL_LANG_FLAG_0
 (TYPE)

	)

57 
	#C_TYPE_DEFINED_IN_STRUCT
(
TYPE
Ë
	`TYPE_LANG_FLAG_2
 (TYPE)

	)

60 
	#C_TYPEDEF_EXPLICITLY_SIGNED
(
EXP
Ë
	`DECL_LANG_FLAG_1
 (EXP)

	)

64 
	#C_FUNCTION_IMPLICIT_INT
(
EXP
Ë
	`DECL_LANG_FLAG_1
 (EXP)

	)

67 
	#C_DECL_IMPLICIT
(
EXP
Ë
	`DECL_LANG_FLAG_2
 (EXP)

	)

71 
	#C_DECL_DECLARED_BUILTIN
(
EXP
) \

72 
	`DECL_LANG_FLAG_3
 (
	`FUNCTION_DECL_CHECK
 (
EXP
))

	)

76 
	#C_DECL_BUILTIN_PROTOTYPE
(
EXP
) \

77 
	`DECL_LANG_FLAG_6
 (
	`FUNCTION_DECL_CHECK
 (
EXP
))

	)

82 
	#C_DECL_REGISTER
(
EXP
Ë
	`DECL_LANG_FLAG_4
 (EXP)

	)

88 
	#C_DECL_USED
(
EXP
Ë
	`DECL_LANG_FLAG_5
 (
	`FUNCTION_DECL_CHECK
 (EXP))

	)

92 
	#C_DECL_THREADPRIVATE_P
(
DECL
Ë
	`DECL_LANG_FLAG_3
 (
	`VAR_DECL_CHECK
 (DECL))

	)

97 
	#C_DECL_ISNT_PROTOTYPE
(
EXP
) \

98 (
EXP
 == 0 \

99 || (!
	`¥ŸŸy≥_p
 (
	`TREE_TYPE
 (
EXP
)) \

100 && !
	`DECL_BUILT_IN
 (
EXP
)))

	)

105 
	#TYPE_ACTUAL_ARG_TYPES
(
NODE
Ë
	`TYPE_LANG_SLOT_1
 (NODE)

	)

109 
	#CONSTRUCTOR_NON_CONST
(
EXPR
Ë
	`TREE_LANG_FLAG_1
 (
	`CONSTRUCTOR_CHECK
 (EXPR))

	)

113 
	sc_ex¥


116 
åì
 
	mvÆue
;

123 
åì_code
 
	m‹igöÆ_code
;

128 
åì
 
	m‹igöÆ_ty≥
;

133 
c_ex¥
 
	tc_ex¥_t
;

138 
	ec_ty≥•ec_köd
 {

140 
	m˘sk_n⁄e
,

142 
	m˘sk_ªsw‹d
,

147 
	m˘sk_ègªf
,

150 
	m˘sk_ègfú°ªf
,

152 
	m˘sk_ègdef
,

154 
	m˘sk_ty≥def
,

156 
	m˘sk_objc
,

158 
	m˘sk_ty≥of


163 
	sc_ty≥•ec
 {

165 
c_ty≥•ec_köd
 
	mköd
;

168 
boﬁ
 
	mex¥_c⁄°_›î™ds
;

170 
åì
 
	m•ec
;

179 
åì
 
	mex¥
;

183 
	ec_°‹age_˛ass
 {

184 
	mcsc_n⁄e
,

185 
	mcsc_auto
,

186 
	mcsc_exã∫
,

187 
	mcsc_ªgi°î
,

188 
	mcsc_°©ic
,

189 
	mcsc_ty≥def


195 
	ec_ty≥•ec_keyw‹d
 {

196 
	m˘s_n⁄e
,

197 
	m˘s_void
,

198 
	m˘s_boﬁ
,

199 
	m˘s_ch¨
,

200 
	m˘s_öt
,

201 
	m˘s_Êﬂt
,

202 
	m˘s_öt128
,

203 
	m˘s_doubÀ
,

204 
	m˘s_dÊﬂt32
,

205 
	m˘s_dÊﬂt64
,

206 
	m˘s_dÊﬂt128
,

207 
	m˘s_‰a˘
,

208 
	m˘s_accum
,

209 
	m˘s_auto_ty≥


219 
	ec_de˛•ec_w‹d
 {

220 
	mcdw_ty≥•ec
 ,

221 
	mcdw_°‹age_˛ass
 ,

222 
	mcdw_©åibuãs
,

223 
	mcdw_ty≥def
,

224 
	mcdw_ex∂icô_sig√d
,

225 
	mcdw_dïªˇãd
,

226 
	mcdw_deÁu…_öt
,

227 
	mcdw_l⁄g
,

228 
	mcdw_l⁄g_l⁄g
,

229 
	mcdw_sh‹t
,

230 
	mcdw_sig√d
,

231 
	mcdw_unsig√d
,

232 
	mcdw_com∂ex
,

233 
	mcdw_ölöe
,

234 
	mcdw_n‹ëu∫
,

235 
	mcdw_thªad
,

236 
	mcdw_c⁄°
,

237 
	mcdw_vﬁ©ûe
,

238 
	mcdw_ª°ri˘
,

239 
	mcdw_ßtuøtög
,

240 
	mcdw_Æig«s
,

241 
	mcdw_addªss_•a˚
,

242 
	mcdw_numbî_of_ñemíts


249 
	sc_de˛•ecs
 {

250 
sour˚_loˇti⁄
 
	mloˇti⁄s
[
cdw_numbî_of_ñemíts
];

255 
åì
 
	mty≥
;

258 
åì
 
	mex¥
;

260 
åì
 
	mde˛_©å
;

264 
åì
 
	m©ås
;

268 
	mÆign_log
;

270 
c_°‹age_˛ass
 
	m°‹age_˛ass
;

273 
ENUM_BITFIELD
 (
c_ty≥•ec_keyw‹d
Ë
	mty≥•ec_w‹d
 : 8;

276 
ENUM_BITFIELD
 (
c_ty≥•ec_köd
Ë
	mty≥•ec_köd
 : 3;

279 
BOOL_BITFIELD
 
	mex¥_c⁄°_›î™ds
 : 1;

281 
BOOL_BITFIELD
 
	mde˛•ecs_£í_p
 : 1;

288 
BOOL_BITFIELD
 
	mn⁄_sc_£í_p
 : 1;

290 
BOOL_BITFIELD
 
	mty≥def_p
 : 1;

293 
BOOL_BITFIELD
 
	mex∂icô_sig√d_p
 : 1;

295 
BOOL_BITFIELD
 
	mdïªˇãd_p
 : 1;

298 
BOOL_BITFIELD
 
	mdeÁu…_öt_p
 : 1;

300 
BOOL_BITFIELD
 
	ml⁄g_p
 : 1;

302 
BOOL_BITFIELD
 
	ml⁄g_l⁄g_p
 : 1;

304 
BOOL_BITFIELD
 
	msh‹t_p
 : 1;

306 
BOOL_BITFIELD
 
	msig√d_p
 : 1;

308 
BOOL_BITFIELD
 
	munsig√d_p
 : 1;

310 
BOOL_BITFIELD
 
	mcom∂ex_p
 : 1;

312 
BOOL_BITFIELD
 
	mölöe_p
 : 1;

314 
BOOL_BITFIELD
 
	mn‹ëu∫_p
 : 1;

316 
BOOL_BITFIELD
 
	mthªad_p
 : 1;

318 
BOOL_BITFIELD
 
	mthªad_gnu_p
 : 1;

320 
BOOL_BITFIELD
 
	mc⁄°_p
 : 1;

322 
BOOL_BITFIELD
 
	mvﬁ©ûe_p
 : 1;

324 
BOOL_BITFIELD
 
	mª°ri˘_p
 : 1;

326 
BOOL_BITFIELD
 
	m©omic_p
 : 1;

328 
BOOL_BITFIELD
 
	mßtuøtög_p
 : 1;

331 
BOOL_BITFIELD
 
	mÆig«s_p
 : 1;

333 
addr_•a˚_t
 
	maddªss_•a˚
;

337 
	ec_de˛¨©‹_köd
 {

339 
	mcdk_id
,

341 
	mcdk_fun˘i⁄
,

343 
	mcdk_¨øy
,

345 
	mcdk_poöãr
,

347 
	mcdk_©ås


350 
	sc_¨g_èg_d
 {

352 
åì
 
	mid
;

354 
åì
 
	mty≥
;

355 } 
	tc_¨g_èg
;

359 
	sc_¨g_öfo
 {

361 
åì
 
	m∑rms
;

363 
	mvec
<
	mc_¨g_èg
, 
	mva_gc
> *
	mègs
;

365 
åì
 
	mty≥s
;

368 
åì
 
	mŸhîs
;

374 
åì
 
	m≥ndög_sizes
;

376 
BOOL_BITFIELD
 
	mhad_vœ_un•ec
 : 1;

380 
	sc_de˛¨©‹
 {

382 
c_de˛¨©‹_köd
 
	mköd
;

383 
loˇti⁄_t
 
	mid_loc
;

385 
c_de˛¨©‹
 *
	mde˛¨©‹
;

389 
åì
 
	mid
;

391 
c_¨g_öfo
 *
	m¨g_öfo
;

395 
åì
 
	mdimí
;

397 
	mquÆs
;

399 
åì
 
	m©ås
;

401 
BOOL_BITFIELD
 
	m°©ic_p
 : 1;

403 
BOOL_BITFIELD
 
	mvœ_un•ec_p
 : 1;

404 } 
	m¨øy
;

406 
	mpoöãr_quÆs
;

408 
åì
 
	m©ås
;

409 } 
	mu
;

413 
	sc_ty≥_«me
 {

415 
c_de˛•ecs
 *
	m•ecs
;

417 
c_de˛¨©‹
 *
	mde˛¨©‹
;

421 
	sc_∑rm
 {

423 
c_de˛•ecs
 *
	m•ecs
;

425 
åì
 
	m©ås
;

427 
c_de˛¨©‹
 *
	mde˛¨©‹
;

431 
	sc_íum_c⁄ã¡s


435 
åì
 
	míum_√xt_vÆue
;

438 
	míum_ovîÊow
;

443 
	ec_ölöe_°©ic_ty≥
 {

446 
	mcsi_öã∫Æ
,

450 
	mcsi_modifübÀ


455 
c_∑r£_öô
 ();

458 
gí_aux_öfo_ªc‹d
 (
åì
, , , );

461 
	gc_•Ÿ_bödögs
;

462 
	gc_°ru˘_∑r£_öfo
;

463 
ob°ack
 
∑r£r_ob°ack
;

464 
åì
 
c_bªak_œbñ
;

465 
åì
 
c_c⁄t_œbñ
;

467 
boﬁ
 
globÆ_bödögs_p
 ();

468 
push_sc›e
 ();

469 
åì
 
p›_sc›e
 ();

470 
c_bödögs_°¨t_°mt_ex¥
 (
c_•Ÿ_bödögs
 *);

471 
c_bödögs_íd_°mt_ex¥
 (
c_•Ÿ_bödögs
 *);

473 
ªc‹d_ölöe_°©ic
 (
loˇti⁄_t
, 
åì
,Åree,

474 
c_ölöe_°©ic_ty≥
);

475 
c_öô_de˛_¥o˚ssög
 ();

476 
c_¥öt_idítifõr
 (
FILE
 *, 
åì
, );

477 
quÆs_‰om_de˛•ecs
 (c⁄° 
c_de˛•ecs
 *);

478 
c_de˛¨©‹
 *
buûd_¨øy_de˛¨©‹
 (
loˇti⁄_t
, 
åì
,

479 
c_de˛•ecs
 *,

480 
boﬁ
, bool);

481 
åì
 
buûd_íumî©‹
 (
loˇti⁄_t
,Üoˇti⁄_t, 
c_íum_c⁄ã¡s
 *,

482 
åì
,Åree);

483 
åì
 
check_f‹_lo›_de˛s
 (
loˇti⁄_t
, 
boﬁ
);

484 
m¨k_f‹w¨d_∑rm_de˛s
 ();

485 
de˛¨e_∑rm_Àvñ
 ();

486 
unde˛¨ed_v¨übÀ
 (
loˇti⁄_t
, 
åì
);

487 
åì
 
lookup_œbñ_f‹_gŸo
 (
loˇti⁄_t
,Åree);

488 
åì
 
de˛¨e_œbñ
 (tree);

489 
åì
 
deföe_œbñ
 (
loˇti⁄_t
,Åree);

490 
c_•Ÿ_bödögs
 *
c_gë_swôch_bödögs
 ();

491 
c_ªÀa£_swôch_bödögs
 (
c_•Ÿ_bödögs
 *);

492 
boﬁ
 
c_check_swôch_jump_w¨nögs
 (
c_•Ÿ_bödögs
 *,

493 
loˇti⁄_t
,Üocation_t);

494 
föish_de˛
 (
åì
, 
loˇti⁄_t
,Åree,Åree,Åree);

495 
åì
 
föish_íum
 (tree,Åree,Åree);

496 
föish_fun˘i⁄
 ();

497 
åì
 
föish_°ru˘
 (
loˇti⁄_t
,Åree,Åree,Åree,

498 
c_°ru˘_∑r£_öfo
 *);

499 
c_¨g_öfo
 *
buûd_¨g_öfo
 ();

500 
c_¨g_öfo
 *
gë_∑rm_öfo
 (
boﬁ
, 
åì
);

501 
åì
 
grokfõld
 (
loˇti⁄_t
, 
c_de˛¨©‹
 *,

502 
c_de˛•ecs
 *, 
åì
,Åree *);

503 
åì
 
grokty≥«me
 (
c_ty≥_«me
 *,Åªê*, 
boﬁ
 *);

504 
åì
 
grok∑rm
 (c⁄° 
c_∑rm
 *,Åree *);

505 
åì
 
im∂icôly_de˛¨e
 (
loˇti⁄_t
,Åree);

506 
kìp_√xt_Àvñ
 ();

507 
≥ndög_xªf_îr‹
 ();

508 
c_push_fun˘i⁄_c⁄ãxt
 ();

509 
c_p›_fun˘i⁄_c⁄ãxt
 ();

510 
push_∑rm_de˛
 (c⁄° 
c_∑rm
 *, 
åì
 *);

511 
c_de˛¨©‹
 *
£t_¨øy_de˛¨©‹_ö√r
 (c_declarator *,

512 
c_de˛¨©‹
 *);

513 
åì
 
c_buûtö_fun˘i⁄
 (tree);

514 
åì
 
c_buûtö_fun˘i⁄_ext_sc›e
 (tree);

515 
shadow_èg
 (c⁄° 
c_de˛•ecs
 *);

516 
shadow_èg_w¨√d
 (c⁄° 
c_de˛•ecs
 *, );

517 
åì
 
°¨t_íum
 (
loˇti⁄_t
, 
c_íum_c⁄ã¡s
 *,Åree);

518 
°¨t_fun˘i⁄
 (
c_de˛•ecs
 *, 
c_de˛¨©‹
 *, 
åì
);

519 
åì
 
°¨t_de˛
 (
c_de˛¨©‹
 *, 
c_de˛•ecs
 *, 
boﬁ
,

520 
åì
);

521 
åì
 
°¨t_°ru˘
 (
loˇti⁄_t
, 
åì_code
,Åree,

522 
c_°ru˘_∑r£_öfo
 **);

523 
°‹e_∑rm_de˛s
 ();

524 
°‹e_∑rm_de˛s_‰om
 (
c_¨g_öfo
 *);

525 
ãmp_°‹e_∑rm_de˛s
 (
åì
,Åree);

526 
ãmp_p›_∑rm_de˛s
 ();

527 
åì
 
xªf_èg
 (
åì_code
,Åree);

528 
c_ty≥•ec
 
∑r£r_xªf_èg
 (
loˇti⁄_t
, 
åì_code
, 
åì
);

529 
c_∑rm
 *
buûd_c_∑rm
 (
c_de˛•ecs
 *, 
åì
,

530 
c_de˛¨©‹
 *);

531 
c_de˛¨©‹
 *
buûd_©ås_de˛¨©‹
 (
åì
,

532 
c_de˛¨©‹
 *);

533 
c_de˛¨©‹
 *
buûd_fun˘i⁄_de˛¨©‹
 (
c_¨g_öfo
 *,

534 
c_de˛¨©‹
 *);

535 
c_de˛¨©‹
 *
buûd_id_de˛¨©‹
 (
åì
);

536 
c_de˛¨©‹
 *
make_poöãr_de˛¨©‹
 (
c_de˛•ecs
 *,

537 
c_de˛¨©‹
 *);

538 
c_de˛•ecs
 *
buûd_nuŒ_de˛•ecs
 ();

539 
c_de˛•ecs
 *
de˛•ecs_add_quÆ
 (
sour˚_loˇti⁄
,

540 
c_de˛•ecs
 *, 
åì
);

541 
c_de˛•ecs
 *
de˛•ecs_add_ty≥
 (
loˇti⁄_t
,

542 
c_de˛•ecs
 *,

543 
c_ty≥•ec
);

544 
c_de˛•ecs
 *
de˛•ecs_add_sc•ec
 (
sour˚_loˇti⁄
,

545 
c_de˛•ecs
 *, 
åì
);

546 
c_de˛•ecs
 *
de˛•ecs_add_©ås
 (
sour˚_loˇti⁄
,

547 
c_de˛•ecs
 *, 
åì
);

548 
c_de˛•ecs
 *
de˛•ecs_add_addr•a˚
 (
sour˚_loˇti⁄
,

549 
c_de˛•ecs
 *,

550 
addr_•a˚_t
);

551 
c_de˛•ecs
 *
de˛•ecs_add_Æig«s
 (
sour˚_loˇti⁄
,

552 
c_de˛•ecs
 *, 
åì
);

553 
c_de˛•ecs
 *
föish_de˛•ecs
 (c_declspecs *);

556 
boﬁ
 
c_objc_comm⁄_öô
 ();

557 
boﬁ
 
c_missög_n‹ëu∫_ok_p
 (
åì
);

558 
boﬁ
 
c_w¨n_unu£d_globÆ_de˛
 (
c⁄°_åì
);

559 
c_öôülize_dügno°ics
 (
dügno°ic_c⁄ãxt
 *);

560 
boﬁ
 
c_vœ_un•ec_p
 (
åì
 
x
,Åªê
‚
);

563 
ö_Æignof
;

564 
ö_sizeof
;

565 
ö_ty≥of
;

567 
åì
 
c_œ°_sizeof_¨g
;

569 
c_swôch
 *
c_swôch_°ack
;

571 
åì
 
c_objc_comm⁄_åuthvÆue_c⁄vîsi⁄
 (
loˇti⁄_t
,Åree);

572 
åì
 
ªquúe_com∂ëe_ty≥
 (tree);

573 
ßme_å™¶©i⁄_unô_p
 (
c⁄°_åì
, const_tree);

574 
com±y≥s
 (
åì
,Åree);

575 
com±y≥s_check_dif„ª¡_ty≥s
 (
åì
,Åªe, 
boﬁ
 *);

576 
boﬁ
 
c_vœ_ty≥_p
 (
c⁄°_åì
);

577 
boﬁ
 
c_m¨k_addªsßbÀ
 (
åì
);

578 
c_öcom∂ëe_ty≥_îr‹
 (
c⁄°_åì
, const_tree);

579 
åì
 
c_ty≥_¥omŸes_to
 (tree);

580 
c_ex¥
 
deÁu…_fun˘i⁄_¨øy_c⁄vîsi⁄
 (
loˇti⁄_t
,

581 
c_ex¥
);

582 
c_ex¥
 
deÁu…_fun˘i⁄_¨øy_ªad_c⁄vîsi⁄
 (
loˇti⁄_t
,

583 
c_ex¥
);

584 
c_ex¥
 
c⁄vît_lvÆue_to_rvÆue
 (
loˇti⁄_t
, c_expr,

585 
boﬁ
, bool);

586 
m¨k_exp_ªad
 (
åì
);

587 
åì
 
composôe_ty≥
 (tree,Åree);

588 
åì
 
buûd_comp⁄ít_ªf
 (
loˇti⁄_t
,Åree,Åree);

589 
åì
 
buûd_¨øy_ªf
 (
loˇti⁄_t
,Åree,Åree);

590 
åì
 
buûd_exã∫Æ_ªf
 (
loˇti⁄_t
,Åree, ,Åree *);

591 
p›_maybe_u£d
 (
boﬁ
);

592 
c_ex¥
 
c_ex¥_sizeof_ex¥
 (
loˇti⁄_t
, c_expr);

593 
c_ex¥
 
c_ex¥_sizeof_ty≥
 (
loˇti⁄_t
, 
c_ty≥_«me
 *);

594 
c_ex¥
 
∑r£r_buûd_u«ry_›
 (
loˇti⁄_t
, 
åì_code
,

595 
c_ex¥
);

596 
c_ex¥
 
∑r£r_buûd_bö¨y_›
 (
loˇti⁄_t
,

597 
åì_code
, 
c_ex¥
,

598 
c_ex¥
);

599 
åì
 
buûd_c⁄dôi⁄Æ_ex¥
 (
loˇti⁄_t
,Åªe, 
boﬁ
,Åree,Åree,

600 
åì
,Åree);

601 
åì
 
buûd_compound_ex¥
 (
loˇti⁄_t
,Åree,Åree);

602 
åì
 
c_ˇ°_ex¥
 (
loˇti⁄_t
, 
c_ty≥_«me
 *,Åree);

603 
åì
 
buûd_c_ˇ°
 (
loˇti⁄_t
,Åree,Åree);

604 
°‹e_öô_vÆue
 (
loˇti⁄_t
, 
åì
,Åree,Åree);

605 
îr‹_öô
 (const *);

606 
≥dw¨n_öô
 (
loˇti⁄_t
, 
›t
, const *);

607 
maybe_w¨n_°rög_öô
 (
åì
, 
c_ex¥
);

608 
°¨t_öô
 (
åì
,Åree, );

609 
föish_öô
 ();

610 
ªÆly_°¨t_ö¸emíèl_öô
 (
åì
);

611 
push_öô_Àvñ
 (, 
ob°ack
 *);

612 
c_ex¥
 
p›_öô_Àvñ
 (, 
ob°ack
 *);

613 
£t_öô_ödex
 (
åì
,Åªe, 
ob°ack
 *);

614 
£t_öô_œbñ
 (
åì
, 
ob°ack
 *);

615 
¥o˚ss_öô_ñemít
 (
c_ex¥
, 
boﬁ
, 
ob°ack
 *);

616 
åì
 
buûd_compound_lôîÆ
 (
loˇti⁄_t
,Åªe,Åªe, 
boﬁ
);

617 
check_compound_lôîÆ_ty≥
 (
loˇti⁄_t
, 
c_ty≥_«me
 *);

618 
åì
 
c_°¨t_ˇ£
 (
loˇti⁄_t
,Üocation_t,Åree);

619 
c_föish_ˇ£
 (
åì
);

620 
åì
 
buûd_asm_ex¥
 (
loˇti⁄_t
,Åªe,Åªe,Åªe,Åªe,Åªe, 
boﬁ
);

621 
åì
 
buûd_asm_°mt
 (tree,Åree);

622 
c_ty≥s_com∑tibÀ_p
 (
åì
,Åree);

623 
åì
 
c_begö_compound_°mt
 (
boﬁ
);

624 
åì
 
c_íd_compound_°mt
 (
loˇti⁄_t
,Åªe, 
boﬁ
);

625 
c_föish_if_°mt
 (
loˇti⁄_t
, 
åì
,Åªe,Åªe, 
boﬁ
);

626 
c_föish_lo›
 (
loˇti⁄_t
, 
åì
,Åªe,Åªe,Åªe,Åªe, 
boﬁ
);

627 
åì
 
c_begö_°mt_ex¥
 ();

628 
åì
 
c_föish_°mt_ex¥
 (
loˇti⁄_t
,Åree);

629 
åì
 
c_¥o˚ss_ex¥_°mt
 (
loˇti⁄_t
,Åree);

630 
åì
 
c_föish_ex¥_°mt
 (
loˇti⁄_t
,Åree);

631 
åì
 
c_föish_ªtu∫
 (
loˇti⁄_t
,Åree,Åree);

632 
åì
 
c_föish_bc_°mt
 (
loˇti⁄_t
,Åªê*, 
boﬁ
);

633 
åì
 
c_föish_gŸo_œbñ
 (
loˇti⁄_t
,Åree);

634 
åì
 
c_föish_gŸo_±r
 (
loˇti⁄_t
,Åree);

635 
åì
 
c_ex¥_to_de˛
 (åì, 
boﬁ
 *, bool *);

636 
åì
 
c_begö_omp_∑øŒñ
 ();

637 
åì
 
c_föish_omp_∑øŒñ
 (
loˇti⁄_t
,Åree,Åree);

638 
åì
 
c_begö_omp_èsk
 ();

639 
åì
 
c_föish_omp_èsk
 (
loˇti⁄_t
,Åree,Åree);

640 
c_föish_omp_ˇn˚l
 (
loˇti⁄_t
, 
åì
);

641 
c_föish_omp_ˇn˚Œ©i⁄_poöt
 (
loˇti⁄_t
, 
åì
);

642 
åì
 
c_föish_omp_˛au£s
 (tree);

643 
åì
 
c_buûd_va_¨g
 (
loˇti⁄_t
,Åree,Åree);

644 
åì
 
c_föish_å™ß˘i⁄
 (
loˇti⁄_t
,Åree, );

645 
boﬁ
 
c_åì_equÆ
 (
åì
,Åree);

646 
åì
 
c_buûd_fun˘i⁄_ˇŒ_vec
 (
loˇti⁄_t
, 
vec
<location_t>,Åree,

647 
vec
<
åì
, 
va_gc
> *, vec<tree, va_gc> *);

652 
cuºít_fun˘i⁄_ªtu∫s_vÆue
;

657 
cuºít_fun˘i⁄_ªtu∫s_nuŒ
;

662 
cuºít_fun˘i⁄_ªtu∫s_abn‹mÆly
;

666 
machöe_mode
 
c_deÁu…_poöãr_mode
;

669 
c_föish_öcom∂ëe_de˛
 (
åì
);

670 
c_wrôe_globÆ_de˛¨©i⁄s
 ();

671 
åì
 
c_omp_ªdu˘i⁄_id
 (
åì_code
,Åree);

672 
åì
 
c_omp_ªdu˘i⁄_de˛
 (tree);

673 
åì
 
c_omp_ªdu˘i⁄_lookup
 (tree,Åree);

674 
åì
 
c_check_omp_de˛¨e_ªdu˘i⁄_r
 (tree *, *, *);

677 
	$≥dw¨n_c90
 (
loˇti⁄_t
, 
›t
, c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(3,4);

678 
	$≥dw¨n_c99
 (
loˇti⁄_t
, 
›t
, c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(3,4);

	@include/calls.h

20 #i‚de‡
GCC_CALLS_H


21 
	#GCC_CALLS_H


	)

23 
Êags_‰om_de˛_‹_ty≥
 (
c⁄°_åì
);

24 
ˇŒ_ex¥_Êags
 (
c⁄°_åì
);

25 
£tjmp_ˇŒ_p
 (
c⁄°_åì
);

26 
boﬁ
 
gim∂e_Æloˇ_ˇŒ_p
 (
c⁄°_gim∂e
);

27 
boﬁ
 
Æloˇ_ˇŒ_p
 (
c⁄°_åì
);

28 
boﬁ
 
mu°_∑ss_ö_°ack_v¨_size
 (
machöe_mode
, 
c⁄°_åì
);

29 
boﬁ
 
mu°_∑ss_ö_°ack_v¨_size_‹_∑d
 (
machöe_mode
, 
c⁄°_åì
);

	@include/cfgexpand.h

20 #i‚de‡
GCC_CFGEXPAND_H


21 
	#GCC_CFGEXPAND_H


	)

23 
åì
 
gim∂e_assign_rhs_to_åì
 (
gim∂e
);

24 
HOST_WIDE_INT
 
e°im©ed_°ack_‰ame_size
 (
cgøph_node
 *);

	@include/cfghooks.h

23 
	scfg_hooks


26 c⁄° *
	m«me
;

29 (*
	mvîify_Êow_öfo
) ();

30 (*
	mdump_bb
Ë(
	mFILE
 *, 
	mbasic_block
, , );

31 (*
	mdump_bb_f‹_gøph
Ë(
	m¥ëty_¥öãr
 *, 
	mbasic_block
);

36 
basic_block
 (*
¸óã_basic_block
Ë(*
	mhód
, *
	míd
, basic_block 
	ma·î
);

42 
edge
 (*
ªdúe˘_edge_™d_bønch
Ë”dgê
	me
, 
basic_block
 
	mb
);

47 
basic_block
 (*
ªdúe˘_edge_™d_bønch_f‹˚
Ë(
	medge
, 
	mbasic_block
);

51 
boﬁ
 (*
ˇn_ªmove_bønch_p
Ë(
	mc⁄°_edge
);

54 (*
	mdñëe_basic_block
Ë(
	mbasic_block
);

58 
basic_block
 (*
•lô_block
Ë(basic_block 
	mb
, * 
	mi
);

61 
boﬁ
 (*
move_block_a·î
Ë(
basic_block
 
	mb
, basic_block 
	ma
);

64 
boﬁ
 (*
ˇn_mîge_blocks_p
Ë(
basic_block
 
	ma
, basic_block 
	mb
);

67 (*
	mmîge_blocks
Ë(
basic_block
 
	ma
, basic_block 
	mb
);

70 (*
	m¥edi˘_edge
Ë(
edge
 
	me
, 
br_¥edi˘‹
 
	m¥edi˘‹
, 
	m¥obabûôy
);

74 
boﬁ
 (*
¥edi˘ed_by_p
Ë(
c⁄°_basic_block
 
	mbb
, 
br_¥edi˘‹
 
	m¥edi˘‹
);

77 
boﬁ
 (*
ˇn_du∂iˇã_block_p
Ë(
c⁄°_basic_block
 
	ma
);

80 
basic_block
 (*
du∂iˇã_block
Ë(basic_block 
	ma
);

84 
basic_block
 (*
•lô_edge
Ë(
	medge
);

85 (*
	mmake_f‹w¨dî_block
Ë(
	medge
);

88 (*
	mtidy_ÁŒthru_edge
Ë(
	medge
);

91 
basic_block
 (*
f‹˚_n⁄ÁŒthru
Ë(
	medge
);

95 
boﬁ
 (*
block_íds_wôh_ˇŒ_p
Ë(
	mbasic_block
);

99 
boﬁ
 (*
block_íds_wôh_c⁄djump_p
Ë(
	mc⁄°_basic_block
);

108 (*
	mÊow_ˇŒ_edges_add
Ë(
	msbôm≠
);

112 (*
	mexecuã_⁄_growög_¥ed
Ë(
	medge
);

116 (*
	mexecuã_⁄_shrökög_¥ed
Ë(
	medge
);

120 
boﬁ
 (*
cfg_hook_du∂iˇã_lo›_to_hódî_edge
Ë(
	mlo›
 *, 
	medge
,

121 , 
	msbôm≠
,

122 
	medge
, 
	mvec
<edge> *,

127 (*
	mlv_add_c⁄dôi⁄_to_bb
Ë(
	mbasic_block
, basic_block, basic_block,

130 (*
	mlv_adju°_lo›_hódî_phi
Ë(
	mbasic_block
, basic_block,

131 
	mbasic_block
, 
	medge
);

135 (*
	mexåa˘_c⁄d_bb_edges
Ë(
	mbasic_block
, 
	medge
 *,Édge *);

140 (*
	mÊush_≥ndög_°mts
Ë(
	medge
);

143 
boﬁ
 (*
em±y_block_p
Ë(
	mbasic_block
);

147 
basic_block
 (*
•lô_block_bef‹e_c⁄d_jump
Ë(
	mbasic_block
);

150 (*
	maccou¡_¥ofûe_ªc‹d
Ë(
	mbasic_block
, , 
	m¥ofûe_ªc‹d
 *);

153 
vîify_Êow_öfo
 ();

154 
dump_bb
 (
FILE
 *, 
basic_block
, , );

155 
dump_bb_f‹_gøph
 (
¥ëty_¥öãr
 *, 
basic_block
);

157 
edge
 
ªdúe˘_edge_™d_bønch
 (edge, 
basic_block
);

158 
basic_block
 
ªdúe˘_edge_™d_bønch_f‹˚
 (
edge
, basic_block);

159 
boﬁ
 
ˇn_ªmove_bønch_p
 (
c⁄°_edge
);

160 
ªmove_bønch
 (
edge
);

161 
ªmove_edge
 (
edge
);

162 
edge
 
•lô_block
 (
basic_block
, *);

163 
edge
 
•lô_block_a·î_œbñs
 (
basic_block
);

164 
boﬁ
 
move_block_a·î
 (
basic_block
, basic_block);

165 
dñëe_basic_block
 (
basic_block
);

166 
basic_block
 
•lô_edge
 (
edge
);

167 
basic_block
 
¸óã_basic_block
 (*, *, basic_block);

168 
basic_block
 
¸óã_em±y_bb
 (basic_block);

169 
boﬁ
 
ˇn_mîge_blocks_p
 (
basic_block
, basic_block);

170 
mîge_blocks
 (
basic_block
, basic_block);

171 
edge
 
make_f‹w¨dî_block
 (
basic_block
, 
	$boﬁ
 (*)(
edge
),

172 (*Ë(
basic_block
));

173 
basic_block
 
	`f‹˚_n⁄ÁŒthru
 (
edge
);

174 
	`tidy_ÁŒthru_edge
 (
edge
);

175 
	`tidy_ÁŒthru_edges
 ();

176 
	`¥edi˘_edge
 (
edge
 
e
, 
br_¥edi˘‹
 
¥edi˘‹
, 
¥obabûôy
);

177 
boﬁ
 
	`¥edi˘ed_by_p
 (
c⁄°_basic_block
 
bb
, 
br_¥edi˘‹
 
¥edi˘‹
);

178 
boﬁ
 
	`ˇn_du∂iˇã_block_p
 (
c⁄°_basic_block
);

179 
basic_block
 
	`du∂iˇã_block
 (basic_block, 
edge
, basic_block);

180 
boﬁ
 
	`block_íds_wôh_ˇŒ_p
 (
basic_block
 
bb
);

181 
boﬁ
 
	`em±y_block_p
 (
basic_block
);

182 
basic_block
 
	`•lô_block_bef‹e_c⁄d_jump
 (basic_block);

183 
boﬁ
 
	`block_íds_wôh_c⁄djump_p
 (
c⁄°_basic_block
 
bb
);

184 
	`Êow_ˇŒ_edges_add
 (
sbôm≠
);

185 
	`execuã_⁄_growög_¥ed
 (
edge
);

186 
	`execuã_⁄_shrökög_¥ed
 (
edge
);

187 
boﬁ
 
	`cfg_hook_du∂iˇã_lo›_to_hódî_edge
 (
lo›
 *lo›, 
edge
,

188 
ndu∂
,

189 
sbôm≠
 
w⁄t_exô
,

190 
edge
 
‹ig
,

191 
vec
<
edge
> *
to_ªmove
,

192 
Êags
);

194 
	`lv_Êush_≥ndög_°mts
 (
edge
);

195 
	`exåa˘_c⁄d_bb_edges
 (
basic_block
, 
edge
 *,Édge*);

196 
	`lv_adju°_lo›_hódî_phi
 (
basic_block
, basic_block, basic_block,

197 
edge
);

198 
	`lv_add_c⁄dôi⁄_to_bb
 (
basic_block
, basic_block, basic_block,

201 
boﬁ
 
	`ˇn_c›y_bbs_p
 (
basic_block
 *, );

202 
	`c›y_bbs
 (
basic_block
 *, , basic_block *,

203 
edge
 *, ,Édgê*, 
lo›
 *,

204 
basic_block
, 
boﬁ
);

206 
	`accou¡_¥ofûe_ªc‹d
 (
¥ofûe_ªc‹d
 *, );

208 
	`cfg_œyout_öôülize
 ();

209 
	`cfg_œyout_föÆize
 ();

212 
cfg_hooks
 
gim∂e_cfg_hooks
;

213 
cfg_hooks
 
πl_cfg_hooks
;

214 
cfg_hooks
 
cfg_œyout_πl_cfg_hooks
;

217 
ú_ty≥
 
	`cuºít_ú_ty≥
 ();

218 
	`πl_ªgi°î_cfg_hooks
 ();

219 
	`cfg_œyout_πl_ªgi°î_cfg_hooks
 ();

220 
	`gim∂e_ªgi°î_cfg_hooks
 ();

221 
cfg_hooks
 
	`gë_cfg_hooks
 ();

222 
	`£t_cfg_hooks
 (
cfg_hooks
);

	@include/cfgloop.h

20 #i‚de‡
GCC_CFGLOOP_H


21 
	#GCC_CFGLOOP_H


	)

23 
	~"doubÀ-öt.h
"

24 
	~"bôm≠.h
"

25 
	~"sbôm≠.h
"

26 
	~"fun˘i⁄.h
"

29 
	eÕt_dec


31 
	mLPT_NONE
,

32 
	mLPT_PEEL_COMPLETELY
,

33 
	mLPT_PEEL_SIMPLE
,

34 
	mLPT_UNROLL_CONSTANT
,

35 
	mLPT_UNROLL_RUNTIME
,

36 
	mLPT_UNROLL_STUPID


39 
GTY
 (()Ë
	gÕt_decisi⁄
 {

40 
Õt_dec
 
	gdecisi⁄
;

41 
	gtimes
;

45 
	eiv_exãnd_code


47 
	mIV_SIGN_EXTEND
,

48 
	mIV_ZERO_EXTEND
,

49 
	mIV_UNKNOWN_EXTEND


54 
GTY
 ((
chaö_√xt
 ("%h.√xt"))Ë
	gnb_ôî_bound
 {

56 
gim∂e
 
	g°mt
;

65 
doubÀ_öt
 
	gbound
;

70 
boﬁ
 
	gis_exô
;

73 
nb_ôî_bound
 *
	g√xt
;

78 
GTY
 (()Ë
	glo›_exô
 {

80 
edge
 
	ge
;

83 
lo›_exô
 *
	g¥ev
;

84 
lo›_exô
 *
	g√xt
;

87 
lo›_exô
 *
	g√xt_e
;

90 
lo›
 *
	tlo›_p
;

94 
	elo›_e°im©i⁄


97 
	mEST_NOT_COMPUTED
,

99 
	mEST_AVAILABLE
,

100 
	mEST_LAST


104 
GTY
 ((
chaö_√xt
 ("%h.√xt"))Ë
	glo›
 {

106 
	gnum
;

109 
	gnö¢s
;

112 
basic_block
 
	ghódî
;

115 
basic_block
 
	gœtch
;

118 
Õt_decisi⁄
 
	gÕt_decisi⁄
;

121 
	gav_nö¢s
;

124 
	gnum_nodes
;

127 
	gvec
<
	glo›_p
, 
	gva_gc
> *
	gsu≥æo›s
;

130 
lo›
 *
	gö√r
;

133 
lo›
 *
	g√xt
;

136 
PTR
 
GTY
 ((
skù
 (""))Ë
	gaux
;

145 
åì
 
	gnb_ôî©i⁄s
;

149 
doubÀ_öt
 
	gnb_ôî©i⁄s_uµî_bound
;

154 
doubÀ_öt
 
	gnb_ôî©i⁄s_e°im©e
;

156 
boﬁ
 
	g™y_uµî_bound
;

157 
boﬁ
 
	g™y_e°im©e
;

160 
boﬁ
 
	gˇn_be_∑øŒñ
;

164 
boﬁ
 
	gw¨√d_aggªssive_lo›_›timiz©i⁄s
;

168 
lo›_e°im©i⁄
 
	ge°im©e_°©e
;

174 
	gß„Àn
;

177 
boﬁ
 
	gf‹˚_ve˘
;

180 
boﬁ
 
	gd⁄t_ve˘‹ize
;

185 
åì
 
	gsimduid
;

188 
nb_ôî_bound
 *
	gbounds
;

191 
lo›_exô
 *
	gexôs
;

194 
nôî_desc
 *
	gsim∂e_lo›_desc
;

200 
	mLOOPS_HAVE_PREHEADERS
 = 1,

201 
	mLOOPS_HAVE_SIMPLE_LATCHES
 = 2,

202 
	mLOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS
 = 4,

203 
	mLOOPS_HAVE_RECORDED_EXITS
 = 8,

204 
	mLOOPS_MAY_HAVE_MULTIPLE_LATCHES
 = 16,

205 
	mLOOP_CLOSED_SSA
 = 32,

206 
	mLOOPS_NEED_FIXUP
 = 64,

207 
	mLOOPS_HAVE_FALLTHRU_PREHEADERS
 = 128

210 
	#LOOPS_NORMAL
 (
LOOPS_HAVE_PREHEADERS
 | 
LOOPS_HAVE_SIMPLE_LATCHES
 \

211 | 
LOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS
)

	)

212 
	#AVOID_CFG_MODIFICATIONS
 (
LOOPS_MAY_HAVE_MULTIPLE_LATCHES
)

	)

215 
GTY
 (()Ë
	glo›s
 {

217 
	g°©e
;

220 
	gvec
<
	glo›_p
, 
	gva_gc
> *
	gœºay
;

225 
hèb_t
 
GTY
((
∑øm_is
 (
lo›_exô
))Ë
	gexôs
;

228 
lo›
 *
	gåì_roŸ
;

232 
boﬁ
 
bb_lo›_hódî_p
 (
basic_block
);

233 
öô_lo›s_°ru˘uª
 (
fun˘i⁄
 *, 
lo›s
 *, );

234 
lo›s
 *
Êow_lo›s_föd
 (loops *);

235 
dißmbigu©e_lo›s_wôh_mu…ùÀ_œtches
 ();

236 
Êow_lo›s_‰ì
 (
lo›s
 *);

237 
Êow_lo›s_dump
 (
FILE
 *,

238 (*)(c⁄° 
lo›
 *, 
FILE
 *, ), );

239 
	`Êow_lo›_dump
 (c⁄° 
lo›
 *, 
FILE
 *,

240 (*)(c⁄° 
lo›
 *, 
FILE
 *, ), );

241 
lo›
 *
	`Æloc_lo›
 ();

242 
	`Êow_lo›_‰ì
 (
lo›
 *);

243 
	`Êow_lo›_nodes_föd
 (
basic_block
, 
lo›
 *);

244 
	`fix_lo›_°ru˘uª
 (
bôm≠
 
ch™ged_bbs
);

245 
boﬁ
 
	`m¨k_úªducibÀ_lo›s
 ();

246 
	`ªÀa£_ªc‹ded_exôs
 ();

247 
	`ªc‹d_lo›_exôs
 ();

248 
	`ªsˇn_lo›_exô
 (
edge
, 
boﬁ
, bool);

251 
	`Êow_lo›_åì_node_add
 (
lo›
 *, loop *);

252 
	`Êow_lo›_åì_node_ªmove
 (
lo›
 *);

253 
	`∂a˚_√w_lo›
 (
fun˘i⁄
 *, 
lo›
 *);

254 
	`add_lo›
 (
lo›
 *, loop *);

255 
boﬁ
 
	`Êow_lo›_√°ed_p
 (c⁄° 
lo›
 *, const loop *);

256 
boﬁ
 
	`Êow_bb_öside_lo›_p
 (c⁄° 
lo›
 *, 
c⁄°_basic_block
);

257 
lo›
 * 
	`föd_comm⁄_lo›
 (loop *, loop *);

258 
lo›
 *
	`su≥æo›_©_dïth
 (loop *, );

259 
íi_weights_d
;

260 
	`num_lo›_ö¢s
 (c⁄° 
lo›
 *);

261 
	`avîage_num_lo›_ö¢s
 (c⁄° 
lo›
 *);

262 
	`gë_lo›_Àvñ
 (c⁄° 
lo›
 *);

263 
boﬁ
 
	`lo›_exô_edge_p
 (c⁄° 
lo›
 *, 
c⁄°_edge
);

264 
boﬁ
 
	`lo›_exôs_to_bb_p
 (
lo›
 *, 
basic_block
);

265 
boﬁ
 
	`lo›_exôs_‰om_bb_p
 (
lo›
 *, 
basic_block
);

266 
	`m¨k_lo›_exô_edges
 ();

267 
loˇti⁄_t
 
	`gë_lo›_loˇti⁄
 (
lo›
 *loop);

270 
basic_block
 *
	`gë_lo›_body
 (c⁄° 
lo›
 *);

271 
	`gë_lo›_body_wôh_size
 (c⁄° 
lo›
 *, 
basic_block
 *,

273 
basic_block
 *
	`gë_lo›_body_ö_dom_‹dî
 (c⁄° 
lo›
 *);

274 
basic_block
 *
	`gë_lo›_body_ö_bfs_‹dî
 (c⁄° 
lo›
 *);

275 
basic_block
 *
	`gë_lo›_body_ö_cu°om_‹dî
 (c⁄° 
lo›
 *,

278 
vec
<
edge
> 
	`gë_lo›_exô_edges
 (c⁄° 
lo›
 *);

279 
edge
 
	`sögÀ_exô
 (c⁄° 
lo›
 *);

280 
edge
 
	`sögÀ_likñy_exô
 (
lo›
 *loop);

281 
	`num_lo›_bønches
 (c⁄° 
lo›
 *);

283 
edge
 
	`lo›_¥ehódî_edge
 (c⁄° 
lo›
 *);

284 
edge
 
	`lo›_œtch_edge
 (c⁄° 
lo›
 *);

286 
	`add_bb_to_lo›
 (
basic_block
, 
lo›
 *);

287 
	`ªmove_bb_‰om_lo›s
 (
basic_block
);

289 
	`ˇn˚l_lo›_åì
 (
lo›
 *);

290 
	`dñëe_lo›
 (
lo›
 *);

294 
CP_SIMPLE_PREHEADERS
 = 1,

295 
CP_FALLTHRU_PREHEADERS
 = 2

298 
basic_block
 
	`¸óã_¥ehódî
 (
lo›
 *, );

299 
	`¸óã_¥ehódîs
 ();

300 
	`f‹˚_sögÀ_succ_œtches
 ();

302 
	`vîify_lo›_°ru˘uª
 ();

305 
boﬁ
 
	`ju°_⁄˚_óch_ôî©i⁄_p
 (c⁄° 
lo›
 *, 
c⁄°_basic_block
);

306 
gcov_ty≥
 
	`ex≥˘ed_lo›_ôî©i⁄s_unbounded
 (c⁄° 
lo›
 *);

307 
	`ex≥˘ed_lo›_ôî©i⁄s
 (c⁄° 
lo›
 *);

308 
πx
 
	`dﬁo›_c⁄dôi⁄_gë
 (rtx);

312 
boﬁ
 
	`ˇn_du∂iˇã_lo›_p
 (c⁄° 
lo›
 *loop);

314 
	#DLTHE_FLAG_UPDATE_FREQ
 1

	)

316 
	#DLTHE_RECORD_COPY_NUMBER
 2

	)

318 
	#DLTHE_FLAG_COMPLETTE_PEEL
 4

	)

321 
edge
 
	`¸óã_em±y_if_ªgi⁄_⁄_edge
 (edge, 
åì
);

322 
lo›
 *
	`¸óã_em±y_lo›_⁄_edge
 (
edge
, 
åì
,Åree,Åree,Åree,

323 
åì
 *,Åªê*, 
lo›
 *);

324 
lo›
 * 
	`du∂iˇã_lo›
 (loop *, loop *);

325 
	`c›y_lo›_öfo
 (
lo›
 *lo›, lo› *
èrgë
);

326 
	`du∂iˇã_sublo›s
 (
lo›
 *, loop *);

327 
boﬁ
 
	`du∂iˇã_lo›_to_hódî_edge
 (
lo›
 *, 
edge
,

328 , 
sbôm≠
, 
edge
,

329 
vec
<
edge
> *, );

330 
lo›
 *
	`lo›ify
 (
edge
,Édge,

331 
basic_block
, 
edge
,Édge, 
boﬁ
,

333 
lo›
 * 
	`lo›_vîsi⁄
 (loop *, *,

334 
basic_block
 *, , , , 
boﬁ
);

335 
boﬁ
 
	`ªmove_∑th
 (
edge
);

336 
	`u∆o›
 (
lo›
 *, 
boﬁ
 *, 
bôm≠
);

337 
	`sˇÀ_lo›_‰equícõs
 (
lo›
 *, , );

360 
	sπx_iv


364 
πx
 
ba£
, 
°ï
;

368 
iv_exãnd_code
 
exãnd
;

371 
πx
 
dñè
, 
mu…
;

374 
machöe_mode
 
exãnd_mode
;

377 
machöe_mode
 
mode
;

380 
fú°_•ecül
 : 1;

386 
	`GTY
(()Ë
nôî_desc


389 
edge
 
out_edge
;

392 
edge
 
ö_edge
;

396 
boﬁ
 
sim∂e_p
;

399 
boﬁ
 
c⁄°_ôî
;

402 
HOST_WIDEST_INT
 
nôî
;

405 
πx
 
assum±i⁄s
;

409 
πx
 
nﬁo›_assum±i⁄s
;

412 
πx
 
öföôe
;

415 
boﬁ
 
sig√d_p
;

418 
machöe_mode
 
mode
;

421 
πx
 
nôî_ex¥
;

422 
	}
};

424 
iv_™Æysis_lo›_öô
 (
lo›
 *);

425 
boﬁ
 
iv_™Æyze
 (
πx
,Ñtx, 
πx_iv
 *);

426 
boﬁ
 
iv_™Æyze_ªsu…
 (
πx
,Ñtx, 
πx_iv
 *);

427 
boﬁ
 
iv_™Æyze_ex¥
 (
πx
,Ñtx, 
machöe_mode
, 
πx_iv
 *);

428 
πx
 
gë_iv_vÆue
 (
πx_iv
 *,Ñtx);

429 
boﬁ
 
biv_p
 (
πx
,Ñtx);

430 
föd_sim∂e_exô
 (
lo›
 *, 
nôî_desc
 *);

431 
iv_™Æysis_d⁄e
 ();

433 
nôî_desc
 *
gë_sim∂e_lo›_desc
 (
lo›
 *loop);

434 
‰ì_sim∂e_lo›_desc
 (
lo›
 *loop);

436 
ölöe
 
nôî_desc
 *

437 
	$sim∂e_lo›_desc
 (
lo›
 *loop)

439  
lo›
->
sim∂e_lo›_desc
;

440 
	}
}

446 
ölöe
 
lo›
 *

447 
	$gë_lo›
 (
fun˘i⁄
 *
‚
, 
num
)

449  (*
	`lo›s_f‹_‚
 (
‚
)->
œºay
)[
num
];

450 
	}
}

454 
ölöe
 

455 
	$lo›_dïth
 (c⁄° 
lo›
 *loop)

457  
	`vec_ß„_Àngth
 (
lo›
->
su≥æo›s
);

458 
	}
}

463 
ölöe
 
lo›
 *

464 
	$lo›_ouãr
 (c⁄° 
lo›
 *loop)

466 
n
 = 
	`vec_ß„_Àngth
 (
lo›
->
su≥æo›s
);

468 i‡(
n
 == 0)

469  
NULL
;

471  (*
lo›
->
su≥æo›s
)[
n
 - 1];

472 
	}
}

476 
ölöe
 
boﬁ


477 
	$lo›_has_exô_edges
 (c⁄° 
lo›
 *loop)

479  
lo›
->
exôs
->
√xt
->
e
 !
NULL
;

480 
	}
}

484 
ölöe
 
	gvec
<
	glo›_p
, 
	gva_gc
> *

485 
	$gë_lo›s
 (
fun˘i⁄
 *
‚
)

487 
lo›s
 *lo›†
	`lo›s_f‹_‚
 (
‚
);

488 i‡(!
lo›s
)

489  
NULL
;

491  
lo›s
->
œºay
;

492 
	}
}

497 
ölöe
 

498 
	$numbî_of_lo›s
 (
fun˘i⁄
 *
‚
)

500 
lo›s
 *lo›†
	`lo›s_f‹_‚
 (
‚
);

501 i‡(!
lo›s
)

504  
	`vec_ß„_Àngth
 (
lo›s
->
œºay
);

505 
	}
}

510 
ölöe
 
boﬁ


511 
	$lo›s_°©e_ßtisfõs_p
 (
Êags
)

513  (
cuºít_lo›s
->
°©e
 & 
Êags
) == flags;

514 
	}
}

518 
ölöe
 

519 
	$lo›s_°©e_£t
 (
Êags
)

521 
cuºít_lo›s
->
°©e
 |
Êags
;

522 
	}
}

526 
ölöe
 

527 
	$lo›s_°©e_˛ór
 (
Êags
)

529 i‡(!
cuºít_lo›s
)

531 
cuºít_lo›s
->
°©e
 &~
Êags
;

532 
	}
}

538 
	eli_Êags


540 
	mLI_INCLUDE_ROOT
 = 1,

541 
	mLI_FROM_INNERMOST
 = 2,

543 
	mLI_ONLY_INNERMOST
 = 4

548 
	slo›_ôî©‹


550 
lo›_ôî©‹
 (
lo›_p
 *
lo›
, 
Êags
);

551 ~
lo›_ôî©‹
 ();

553 
ölöe
 
lo›_p
 
√xt
 ();

556 
	mvec
<> 
	mto_visô
;

559 
	midx
;

562 
ölöe
 
lo›_p


563 
	glo›_ôî©‹
::
	$√xt
 ()

565 
™um
;

567 
this
->
to_visô
.
	`ôî©e
 (this->
idx
, &
™um
))

569 
this
->
idx
++;

570 
lo›_p
 
lo›
 = 
	`gë_lo›
 (
cfun
, 
™um
);

571 i‡(
lo›
)

572  
lo›
;

575  
NULL
;

576 
	}
}

578 
ölöe


579 
	glo›_ôî©‹
::
	$lo›_ôî©‹
 (
lo›_p
 *
lo›
, 
Êags
)

581 
lo›
 *
Æo›
;

582 
i
;

583 
mn
;

585 
this
->
idx
 = 0;

586 i‡(!
cuºít_lo›s
)

588 
this
->
to_visô
.
	`¸óã
 (0);

589 *
lo›
 = 
NULL
;

593 
this
->
to_visô
.
	`¸óã
 (
	`numbî_of_lo›s
 (
cfun
));

594 
mn
 = (
Êags
 & 
LI_INCLUDE_ROOT
) ? 0 : 1;

596 i‡(
Êags
 & 
LI_ONLY_INNERMOST
)

598 
i
 = 0; 
	`vec_ß„_ôî©e
 (
cuºít_lo›s
->
œºay
, i, &
Æo›
); i++)

599 i‡(
Æo›
 !
NULL


600 && 
Æo›
->
ö√r
 =
NULL


601 && 
Æo›
->
num
 >
mn
)

602 
this
->
to_visô
.
	`quick_push
 (
Æo›
->
num
);

604 i‡(
Êags
 & 
LI_FROM_INNERMOST
)

607 
Æo›
 = 
cuºít_lo›s
->
åì_roŸ
;

608 
Æo›
->
ö√r
 !
NULL
;

609 
Æo›
 =álo›->
ö√r
)

614 i‡(
Æo›
->
num
 >
mn
)

615 
this
->
to_visô
.
	`quick_push
 (
Æo›
->
num
);

617 i‡(
Æo›
->
√xt
)

619 
Æo›
 =álo›->
√xt
;

620 
Æo›
->
ö√r
 !
NULL
;

621 
Æo›
 =álo›->
ö√r
)

624 i‡(!
	`lo›_ouãr
 (
Æo›
))

627 
Æo›
 = 
	`lo›_ouãr
 (aloop);

633 
Æo›
 = 
cuºít_lo›s
->
åì_roŸ
;

636 i‡(
Æo›
->
num
 >
mn
)

637 
this
->
to_visô
.
	`quick_push
 (
Æo›
->
num
);

639 i‡(
Æo›
->
ö√r
 !
NULL
)

640 
Æo›
 =álo›->
ö√r
;

643 
Æo›
 !
NULL
 &&álo›->
√xt
 == NULL)

644 
Æo›
 = 
	`lo›_ouãr
 (aloop);

645 i‡(
Æo›
 =
NULL
)

647 
Æo›
 =álo›->
√xt
;

652 *
lo›
 = 
this
->
	`√xt
 ();

653 
	}
}

655 
ölöe


656 
	glo›_ôî©‹
::~
	$lo›_ôî©‹
 ()

658 
this
->
to_visô
.
	`ªÀa£
 ();

659 
	}
}

661 
	#FOR_EACH_LOOP
(
LOOP
, 
FLAGS
) \

662 
lo›_ôî©‹
 
	`li
(&(
LOOP
), 
FLAGS
); \

663 (
LOOP
); \

664 (
LOOP
Ë
li
.
	`√xt
 ())

	)

667 
	sèrgë_cfglo›
 {

669 
	mx_èrgë_avaû_ªgs
;

672 
	mx_èrgë_˛obbîed_ªgs
;

675 
	mx_èrgë_ªs_ªgs
;

679 
	mx_èrgë_ªg_co°
[2];

682 
	mx_èrgë_•ûl_co°
[2];

685 
èrgë_cfglo›
 
deÁu…_èrgë_cfglo›
;

686 #i‡
SWITCHABLE_TARGET


687 
èrgë_cfglo›
 *
this_èrgë_cfglo›
;

689 
	#this_èrgë_cfglo›
 (&
deÁu…_èrgë_cfglo›
)

	)

692 
	#èrgë_avaû_ªgs
 \

693 (
this_èrgë_cfglo›
->
x_èrgë_avaû_ªgs
)

	)

694 
	#èrgë_˛obbîed_ªgs
 \

695 (
this_èrgë_cfglo›
->
x_èrgë_˛obbîed_ªgs
)

	)

696 
	#èrgë_ªs_ªgs
 \

697 (
this_èrgë_cfglo›
->
x_èrgë_ªs_ªgs
)

	)

698 
	#èrgë_ªg_co°
 \

699 (
this_èrgë_cfglo›
->
x_èrgë_ªg_co°
)

	)

700 
	#èrgë_•ûl_co°
 \

701 (
this_èrgë_cfglo›
->
x_èrgë_•ûl_co°
)

	)

705 
e°im©e_ªg_¥essuª_co°
 (, , 
boﬁ
, bool);

706 
öô_£t_co°s
 ();

709 
lo›_›timizî_öô
 ();

710 
lo›_›timizî_föÆize
 ();

713 
unswôch_lo›s
 ();

717 
	mUAP_PEEL
 = 1,

718 
	mUAP_UNROLL
 = 2,

719 
	mUAP_UNROLL_ALL
 = 4

722 
uƒﬁl_™d_≥ñ_lo›s
 ();

723 
dﬁo›_›timize_lo›s
 ();

724 
move_lo›_öv¨ü¡s
 ();

725 
sˇÀ_lo›_¥ofûe
 (
lo›
 *lo›, 
sˇÀ
, 
gcov_ty≥
 
ôî©i⁄_bound
);

726 
vec
<
basic_block
> 
gë_lo›_hŸ_∑th
 (c⁄° 
lo›
 *loop);

729 
ölöe
 
lo›
 *

730 
	$lo›_ouãrmo°
 (
lo›
 *loop)

732 
n
 = 
	`vec_ß„_Àngth
 (
lo›
->
su≥æo›s
);

734 i‡(
n
 <= 1)

735  
lo›
;

737  (*
lo›
->
su≥æo›s
)[1];

738 
	}
}

740 
ªc‹d_nôî_bound
 (
lo›
 *, 
doubÀ_öt
, 
boﬁ
, bool);

741 
HOST_WIDE_INT
 
gë_e°im©ed_lo›_ôî©i⁄s_öt
 (
lo›
 *);

742 
HOST_WIDE_INT
 
gë_max_lo›_ôî©i⁄s_öt
 (
lo›
 *);

743 
boﬁ
 
gë_e°im©ed_lo›_ôî©i⁄s
 (
lo›
 *lo›, 
doubÀ_öt
 *
nô
);

744 
boﬁ
 
gë_max_lo›_ôî©i⁄s
 (
lo›
 *lo›, 
doubÀ_öt
 *
nô
);

745 
bb_lo›_dïth
 (
c⁄°_basic_block
);

749 
ölöe
 
doubÀ_öt


750 
	$gcov_ty≥_to_doubÀ_öt
 (
gcov_ty≥
 
vÆ
)

752 
doubÀ_öt
 
ªt
;

754 
ªt
.
low
 = (
HOST_WIDE_INT
Ë
vÆ
;

757 
vÆ
 >>
HOST_BITS_PER_WIDE_INT
 - 1;

758 
vÆ
 >>= 1;

759 
ªt
.
high
 = (
HOST_WIDE_INT
Ë
vÆ
;

761  
ªt
;

762 
	}
}

	@include/cgraph.h

21 #i‚de‡
GCC_CGRAPH_H


22 
	#GCC_CGRAPH_H


	)

24 
	~"is-a.h
"

25 
	~"∂ugö-≠i.h
"

26 
	~"vec.h
"

27 
	~"basic-block.h
"

28 
	~"fun˘i⁄.h
"

29 
	~"ùa-ªf.h
"

33 
	esymèb_ty≥


35 
	mSYMTAB_SYMBOL
,

36 
	mSYMTAB_FUNCTION
,

37 
	mSYMTAB_VARIABLE


42 
˛ass
 
GTY
((
desc
 ("%h.ty≥"), 
èg
 ("SYMTAB_SYMBOL"),

43 
chaö_√xt
 ("%h.√xt"), 
chaö_¥ev
 ("%h.previous")))

44 
	gsymèb_node


46 
	gpublic
:

48 c⁄° *
«me
 () const;

51 c⁄° * 
asm_«me
 () const;

54 
ENUM_BITFIELD
 (
symèb_ty≥
Ë
	gty≥
 : 8;

57 
ENUM_BITFIELD
 (
ld_∂ugö_symbﬁ_ªsﬁuti⁄
Ë
	gªsﬁuti⁄
 : 8;

63 
	gdeföôi⁄
 : 1;

66 
	gÆüs
 : 1;

68 
	gwókªf
 : 1;

75 
	g˝p_im∂icô_Æüs
 : 1;

78 
	g™Æyzed
 : 1;

84 
	gexã∫Æly_visibÀ
 : 1;

87 
	gf‹˚_ouçut
 : 1;

91 
	gf‹˚d_by_abi
 : 1;

93 
	gunique_«me
 : 1;

96 
	gbody_ªmoved
 : 1;

103 
	gu£d_‰om_Ÿhî_∑πôi⁄
 : 1;

107 
	gö_Ÿhî_∑πôi⁄
 : 1;

114 
	gaddªss_èkí
 : 1;

118 
	g‹dî
;

121 
åì
 
	gde˛
;

124 
symèb_node
 *
	g√xt
;

125 
symèb_node
 *
	g¥evious
;

136 
symèb_node
 *
	g√xt_sh¨ög_asm_«me
;

137 
symèb_node
 *
	g¥evious_sh¨ög_asm_«me
;

140 
symèb_node
 *
	gßme_comd©_group
;

143 
ùa_ªf_li°
 
	gªf_li°
;

148 
åì
 
	gÆüs_èrgë
;

151 
…o_fûe_de˛_d©a
 * 
	g…o_fûe_d©a
;

153 
PTR
 
GTY
 ((
skù
)Ë
	gaux
;

156 
	eavaûabûôy


159 
	mAVAIL_UNSET
,

161 
	mAVAIL_NOT_AVAILABLE
,

167 
	mAVAIL_OVERWRITABLE
,

170 
	mAVAIL_AVAILABLE
,

175 
	mAVAIL_LOCAL


180 
	g…o_fûe_de˛_d©a
;

182 c⁄° * c⁄° 
cgøph_avaûabûôy_«mes
[];

183 c⁄° * c⁄° 
ld_∂ugö_symbﬁ_ªsﬁuti⁄_«mes
[];

187 
GTY
(()Ë
	gcgøph_thunk_öfo
 {

189 
HOST_WIDE_INT
 
	gfixed_off£t
;

190 
HOST_WIDE_INT
 
	gvútuÆ_vÆue
;

191 
åì
 
	gÆüs
;

192 
boﬁ
 
	gthis_adju°ög
;

193 
boﬁ
 
	gvútuÆ_off£t_p
;

195 
boﬁ
 
	gthunk_p
;

201 
GTY
(()Ë
	gcgøph_loˇl_öfo
 {

204 
	gloˇl
 : 1;

207 
	gvîsi⁄abÀ
 : 1;

211 
	gˇn_ch™ge_sig«tuª
 : 1;

215 
	gªdeföed_exã∫_ölöe
 : 1;

218 
	gtm_may_íãr_úr
 : 1;

224 
GTY
(()Ë
	gcgøph_globÆ_öfo
 {

227 
cgøph_node
 *
	gölöed_to
;

233 
GTY
(()Ë
	gcgøph_πl_öfo
 {

234 
	g¥e„ºed_öcomög_°ack_bound¨y
;

239 
GTY
(()Ë
	gùa_ª∂a˚_m≠


242 
åì
 
	gﬁd_åì
;

244 
åì
 
	g√w_åì
;

246 
	g∑rm_num
;

248 
boﬁ
 
	gª∂a˚_p
;

250 
boﬁ
 
	gªf_p
;

252 
ùa_ª∂a˚_m≠
 *
	tùa_ª∂a˚_m≠_p
;

254 
GTY
(()Ë
	gcgøph_˛⁄e_öfo


256 
	gvec
<
	gùa_ª∂a˚_m≠_p
, 
	gva_gc
> *
	gåì_m≠
;

257 
bôm≠
 
	g¨gs_to_skù
;

258 
bôm≠
 
	gcomböed_¨gs_to_skù
;

261 
	ecgøph_simd_˛⁄e_¨g_ty≥


263 
	mSIMD_CLONE_ARG_TYPE_VECTOR
,

264 
	mSIMD_CLONE_ARG_TYPE_UNIFORM
,

265 
	mSIMD_CLONE_ARG_TYPE_LINEAR_CONSTANT_STEP
,

266 
	mSIMD_CLONE_ARG_TYPE_LINEAR_VARIABLE_STEP
,

267 
	mSIMD_CLONE_ARG_TYPE_MASK


273 
GTY
(()Ë
	gcgøph_simd_˛⁄e_¨g
 {

276 
åì
 
	g‹ig_¨g
;

280 
åì
 
	g‹ig_ty≥
;

288 
åì
 
	gve˘‹_¨g
;

291 
åì
 
	gve˘‹_ty≥
;

300 
åì
 
	gsimd_¨øy
;

304 
cgøph_simd_˛⁄e_¨g_ty≥
 
	g¨g_ty≥
;

310 
HOST_WIDE_INT
 
	glöór_°ï
;

313 
	gÆignmít
;

318 
GTY
(()Ë
	gcgøph_simd_˛⁄e
 {

320 
	gsimdÀn
;

324 
	g«rgs
;

327 
	gvecsize_öt
;

330 
	gvecsize_Êﬂt
;

335 
	gvecsize_m™gÀ
;

339 
	göbønch
 : 1;

342 
	gcûk_ñemíèl
 : 1;

345 
cgøph_node
 *
	g¥ev_˛⁄e
, *
	g√xt_˛⁄e
;

348 
cgøph_node
 *
	g‹igö
;

351 
cgøph_simd_˛⁄e_¨g
 
GTY
((
Àngth
 ("%h.«rgs"))Ë
	g¨gs
[1];

358 
GTY
((
èg
 ("SYMTAB_FUNCTION"))Ë
	gcgøph_node
 : 
public
 
symèb_node
 {

359 
public
:

360 
cgøph_edge
 *
ˇŒìs
;

361 
cgøph_edge
 *
	gˇŒîs
;

364 
cgøph_edge
 *
	gödúe˘_ˇŒs
;

366 
cgøph_node
 *
	g‹igö
;

368 
cgøph_node
 *
	g√°ed
;

370 
cgøph_node
 *
	g√xt_√°ed
;

372 
cgøph_node
 *
	g√xt_siblög_˛⁄e
;

373 
cgøph_node
 *
	g¥ev_siblög_˛⁄e
;

374 
cgøph_node
 *
	g˛⁄es
;

375 
cgøph_node
 *
	g˛⁄e_of
;

378 
hèb_t
 
GTY
((
∑øm_is
 (
cgøph_edge
))Ë
	gˇŒ_sôe_hash
;

380 
åì
 
	gf‹mî_˛⁄e_of
;

384 
cgøph_simd_˛⁄e
 *
	gsimd˛⁄e
;

386 
cgøph_node
 *
	gsimd_˛⁄es
;

391 
	gvec
<
	gùa_›t_∑ss
> 
GTY
((
skù
)Ë
	gùa_å™sf‹ms_to_≠∂y
;

393 
cgøph_loˇl_öfo
 
	gloˇl
;

394 
cgøph_globÆ_öfo
 
	gglobÆ
;

395 
cgøph_πl_öfo
 
	gπl
;

396 
cgøph_˛⁄e_öfo
 
	g˛⁄e
;

397 
cgøph_thunk_öfo
 
	gthunk
;

400 
gcov_ty≥
 
	gcou¡
;

403 
	gcou¡_m©îüliz©i⁄_sˇÀ
;

405 
	guid
;

407 
	g¥ofûe_id
;

409 
	gç_fú°_run
;

413 
	gu£d_as_ab°ø˘_‹igö
 : 1;

415 
	glowîed
 : 1;

418 
	g¥o˚ss
 : 1;

421 
ENUM_BITFIELD
 (
node_‰equícy
Ë
	g‰equícy
 : 2;

423 
	g⁄ly_ˇŒed_©_°¨tup
 : 1;

425 
	g⁄ly_ˇŒed_©_exô
 : 1;

430 
	gtm_˛⁄e
 : 1;

432 
	gdi•©chî_fun˘i⁄
 : 1;

435 
	gˇŒs_comd©_loˇl
 : 1;

439 
cgøph_node
 *
	tcgøph_node_±r
;

443 
GTY
(()Ë
	gcgøph_fun˘i⁄_vîsi⁄_öfo
 {

445 
cgøph_node
 *
	gthis_node
;

449 
cgøph_fun˘i⁄_vîsi⁄_öfo
 *
	g¥ev
;

453 
cgøph_fun˘i⁄_vîsi⁄_öfo
 *
	g√xt
;

463 
åì
 
	gdi•©chî_ªsﬁvî
;

467 
cgøph_fun˘i⁄_vîsi⁄_öfo
 *

468 
gë_cgøph_node_vîsi⁄
 (
cgøph_node
 *
node
);

472 
cgøph_fun˘i⁄_vîsi⁄_öfo
 *

473 
ö£π_√w_cgøph_node_vîsi⁄
 (
cgøph_node
 *
node
);

477 
ªc‹d_fun˘i⁄_vîsi⁄s
 (
åì
 
de˛1
,Åªê
de˛2
);

481 
dñëe_fun˘i⁄_vîsi⁄
 (
åì
 
de˛
);

485 
	scgøph_node_£t_def


487 
poöãr_m≠_t
 *
	mm≠
;

488 
	mvec
<
	mcgøph_node_±r
> 
	mnodes
;

491 
˛ass
 
	gv¨poﬁ_node
;

492 
v¨poﬁ_node
 *
	tv¨poﬁ_node_±r
;

497 
	sv¨poﬁ_node_£t_def


499 
poöãr_m≠_t
 * 
	mm≠
;

500 
	mvec
<
	mv¨poﬁ_node_±r
> 
	mnodes
;

503 
cgøph_node_£t_def
 *
	tcgøph_node_£t
;

506 
v¨poﬁ_node_£t_def
 *
	tv¨poﬁ_node_£t
;

510 
	scgøph_node_£t_ôî©‹


512 
cgøph_node_£t
 
	m£t
;

513 
	mödex
;

517 
	sv¨poﬁ_node_£t_ôî©‹


519 
v¨poﬁ_node_£t
 
	m£t
;

520 
	mödex
;

523 
	#DEFCIFCODE
(
code
, 
ty≥
, 
°rög
Ë
CIF_
 ## code,

	)

525 
	ecgøph_ölöe_Áûed_t
 {

526 
	~"cif-code.def
"

527 
	mCIF_N_REASONS


530 
	ecgøph_ölöe_Áûed_ty≥_t


532 
	mCIF_FINAL_NORMAL
 = 0,

533 
	mCIF_FINAL_ERROR


538 
GTY
(()Ë
	gcgøph_ödúe˘_ˇŒ_öfo


544 
HOST_WIDE_INT
 
	goff£t
;

546 
HOST_WIDE_INT
 
	gŸr_tokí
;

548 
åì
 
	gŸr_ty≥
, 
	gouãr_ty≥
;

550 
	g∑øm_ödex
;

552 
	gecf_Êags
;

554 
	gcomm⁄_èrgë_id
;

556 
	gcomm⁄_èrgë_¥obabûôy
;

560 
	gpﬁym‹phic
 : 1;

563 
	gagg_c⁄ã¡s
 : 1;

565 
	gmembî_±r
 : 1;

568 
	gby_ªf
 : 1;

569 
	gmaybe_ö_c⁄°ru˘i⁄
 : 1;

570 
	gmaybe_dîived_ty≥
 : 1;

573 
GTY
((
chaö_√xt
 ("%h.√xt_ˇŒî"), 
chaö_¥ev
 ("%h.¥ev_ˇŒî"))Ë
	gcgøph_edge
 {

575 
gcov_ty≥
 
	gcou¡
;

576 
cgøph_node
 *
	gˇŒî
;

577 
cgøph_node
 *
	gˇŒì
;

578 
cgøph_edge
 *
	g¥ev_ˇŒî
;

579 
cgøph_edge
 *
	g√xt_ˇŒî
;

580 
cgøph_edge
 *
	g¥ev_ˇŒì
;

581 
cgøph_edge
 *
	g√xt_ˇŒì
;

582 
gim∂e
 
	gˇŒ_°mt
;

585 
cgøph_ödúe˘_ˇŒ_öfo
 *
	gödúe˘_öfo
;

586 
PTR
 
GTY
 ((
skù
 (""))Ë
	gaux
;

589 
cgøph_ölöe_Áûed_t
 
	gölöe_Áûed
;

592 
	g…o_°mt_uid
;

596 
	g‰equícy
;

598 
	guid
;

600 
	gödúe˘_ölöög_edge
 : 1;

603 
	gödúe˘_unknown_ˇŒì
 : 1;

606 
	gˇŒ_°mt_ˇ¬Ÿ_ölöe_p
 : 1;

608 
	gˇn_throw_exã∫Æ
 : 1;

626 
	g•ecuœtive
 : 1;

629 
	#CGRAPH_FREQ_BASE
 1000

	)

630 
	#CGRAPH_FREQ_MAX
 100000

	)

632 
cgøph_edge
 *
	tcgøph_edge_p
;

638 
˛ass
 
GTY
((
èg
 ("SYMTAB_VARIABLE"))Ë
	gv¨poﬁ_node
 : 
public
 
symèb_node
 {

639 
public
:

641 
ouçut
 : 1;

645 
	gdy«miˇŒy_öôülized
 : 1;

650 
GTY
(()Ë
	gasm_node
 {

652 
asm_node
 *
	g√xt
;

654 
åì
 
	gasm_°r
;

656 
	g‹dî
;

661 
	gãm∂©e
 <>

662 
	gãm∂©e
 <>

663 
ölöe
 
boﬁ


664 
	gis_a_hñ≥r
 <
	gcgøph_node
>::
	$ã°
 (
symèb_node
 *
p
)

666  
p
->
ty≥
 =
SYMTAB_FUNCTION
;

667 
	}
}

671 
	gãm∂©e
 <>

672 
	gãm∂©e
 <>

673 
ölöe
 
boﬁ


674 
	gis_a_hñ≥r
 <
	gv¨poﬁ_node
>::
	$ã°
 (
symèb_node
 *
p
)

676  
p
->
ty≥
 =
SYMTAB_VARIABLE
;

677 
	}
}

679 
GTY
(()Ë
symèb_node
 *
symèb_nodes
;

680 
GTY
(()Ë
cgøph_n_nodes
;

681 
GTY
(()Ë
cgøph_max_uid
;

682 
GTY
(()Ë
cgøph_edge_max_uid
;

683 
boﬁ
 
cgøph_globÆ_öfo_ªady
;

684 
	ecgøph_°©e


687 
	mCGRAPH_STATE_PARSING
,

689 
	mCGRAPH_STATE_CONSTRUCTION
,

691 
	mCGRAPH_LTO_STREAMING
,

693 
	mCGRAPH_STATE_IPA
,

695 
	mCGRAPH_STATE_IPA_SSA
,

697 
	mCGRAPH_STATE_EXPANSION
,

699 
	mCGRAPH_STATE_FINISHED


701 
cgøph_°©e
 cgraph_state;

702 
boﬁ
 
cgøph_fun˘i⁄_Êags_ªady
;

703 
cgøph_node_£t
 
cgøph_√w_nodes
;

705 
GTY
(()Ë
asm_node
 *
asm_nodes
;

706 
GTY
(()Ë
symèb_‹dî
;

707 
boﬁ
 
˝p_im∂icô_Æü£s_d⁄e
;

710 
	esymbﬁ_∑πôi⁄ög_˛ass


714 
	mSYMBOL_EXTERNAL
,

716 
	mSYMBOL_PARTITION
,

719 
	mSYMBOL_DUPLICATE


724 
symèb_ªgi°î_node
 (
symèb_node
 *);

725 
symèb_uƒegi°î_node
 (
symèb_node
 *);

726 
symèb_ªmove_‰om_ßme_comd©_group
 (
symèb_node
 *);

727 
symèb_ªmove_node
 (
symèb_node
 *);

728 
symèb_node
 *
symèb_gë_node
 (
c⁄°_åì
);

729 
symèb_node
 *
symèb_node_f‹_asm
 (
c⁄°_åì
 
asm«me
);

730 
symèb_ö£π_node_to_hashèbÀ
 (
symèb_node
 *);

731 
symèb_add_to_ßme_comd©_group
 (
symèb_node
 *, symtab_node *);

732 
symèb_dissﬁve_ßme_comd©_group_li°
 (
symèb_node
 *
node
);

733 
dump_symèb
 (
FILE
 *);

734 
debug_symèb
 ();

735 
dump_symèb_node
 (
FILE
 *, 
symèb_node
 *);

736 
debug_symèb_node
 (
symèb_node
 *);

737 
dump_symèb_ba£
 (
FILE
 *, 
symèb_node
 *);

738 
vîify_symèb
 ();

739 
vîify_symèb_node
 (
symèb_node
 *);

740 
boﬁ
 
vîify_symèb_ba£
 (
symèb_node
 *);

741 
boﬁ
 
symèb_u£d_‰om_obje˘_fûe_p
 (
symèb_node
 *);

742 
symèb_make_de˛_loˇl
 (
åì
);

743 
symèb_node
 *
symèb_Æüs_u…im©e_èrgë
 (symtab_node *,

744 
avaûabûôy
 *
avaû
 = 
NULL
);

745 
boﬁ
 
symèb_ªsﬁve_Æüs
 (
symèb_node
 *
node
, symèb_nodê*
èrgë
);

746 
fixup_ßme_˝p_Æüs_visibûôy
 (
symèb_node
 *
node
, symèb_nodê*
èrgë
);

747 
boﬁ
 
symèb_f‹_node_™d_Æü£s
 (
symèb_node
 *,

748 
	$boﬁ
 (*Ë(
symèb_node
 *, *),

750 
boﬁ
);

751 
symèb_node
 *
	`symèb_n⁄ovîwrôabÀ_Æüs
 (symtab_node *);

752 
avaûabûôy
 
	`symèb_node_avaûabûôy
 (
symèb_node
 *);

753 
boﬁ
 
	`symèb_£m™tiˇŒy_equivÆít_p
 (
symèb_node
 *, symtab_node *);

754 
symbﬁ_∑πôi⁄ög_˛ass
 
	`symèb_gë_symbﬁ_∑πôi⁄ög_˛ass
 (
symèb_node
 *);

757 
	`dump_cgøph
 (
FILE
 *);

758 
	`debug_cgøph
 ();

759 
	`dump_cgøph_node
 (
FILE
 *, 
cgøph_node
 *);

760 
	`debug_cgøph_node
 (
cgøph_node
 *);

761 
	`cgøph_ªmove_edge
 (
cgøph_edge
 *);

762 
	`cgøph_ªmove_node
 (
cgøph_node
 *);

763 
	`cgøph_ªÀa£_fun˘i⁄_body
 (
cgøph_node
 *);

764 
	`ªÀa£_fun˘i⁄_body
 (
åì
);

765 
	`cgøph_node_ªmove_ˇŒìs
 (
cgøph_node
 *
node
);

766 
cgøph_edge
 *
	`cgøph_¸óã_edge
 (
cgøph_node
 *,

767 
cgøph_node
 *,

768 
gim∂e
, 
gcov_ty≥
, );

769 
cgøph_edge
 *
	`cgøph_¸óã_ödúe˘_edge
 (
cgøph_node
 *, 
gim∂e
,

770 , 
gcov_ty≥
, );

771 
cgøph_ödúe˘_ˇŒ_öfo
 *
	`cgøph_Æloˇã_öô_ödúe˘_öfo
 ();

772 
cgøph_node
 * 
	`cgøph_¸óã_node
 (
åì
);

773 
cgøph_node
 * 
	`cgøph_¸óã_em±y_node
 ();

774 
cgøph_node
 * 
	`cgøph_gë_¸óã_node
 (
åì
);

775 
cgøph_node
 * 
	`cgøph_ßme_body_Æüs
 (cgøph_nodê*, 
åì
,Åree);

776 
cgøph_node
 * 
	`cgøph_add_thunk
 (cgøph_nodê*, 
åì
,Åªe, 
boﬁ
, 
HOST_WIDE_INT
,

777 
HOST_WIDE_INT
, 
åì
,Åree);

778 
cgøph_node
 *
	`cgøph_node_f‹_asm
 (
åì
);

779 
cgøph_edge
 *
	`cgøph_edge
 (
cgøph_node
 *, 
gim∂e
);

780 
	`cgøph_£t_ˇŒ_°mt
 (
cgøph_edge
 *, 
gim∂e
, 
boﬁ
 
upd©e_•ecuœtive
 = 
åue
);

781 
	`cgøph_upd©e_edges_f‹_ˇŒ_°mt
 (
gim∂e
, 
åì
, gimple);

782 
cgøph_loˇl_öfo
 *
	`cgøph_loˇl_öfo
 (
åì
);

783 
cgøph_globÆ_öfo
 *
	`cgøph_globÆ_öfo
 (
åì
);

784 
cgøph_πl_öfo
 *
	`cgøph_πl_öfo
 (
åì
);

785 
cgøph_node
 *
	`cgøph_¸óã_fun˘i⁄_Æüs
 (
åì
,Åree);

786 
	`cgøph_ˇŒ_node_du∂iˇti⁄_hooks
 (
cgøph_node
 *,

787 
cgøph_node
 *);

788 
	`cgøph_ˇŒ_edge_du∂iˇti⁄_hooks
 (
cgøph_edge
 *,

789 
cgøph_edge
 *);

791 
	`cgøph_ªdúe˘_edge_ˇŒì
 (
cgøph_edge
 *, 
cgøph_node
 *);

792 
cgøph_edge
 *
	`cgøph_make_edge_dúe˘
 (cgøph_edgê*, 
cgøph_node
 *);

793 
boﬁ
 
	`cgøph_⁄ly_ˇŒed_dúe˘ly_p
 (
cgøph_node
 *);

795 
boﬁ
 
	`cgøph_fun˘i⁄_possibly_ölöed_p
 (
åì
);

796 
	`cgøph_u¬e°_node
 (
cgøph_node
 *);

798 
avaûabûôy
 
	`cgøph_fun˘i⁄_body_avaûabûôy
 (
cgøph_node
 *);

799 
	`cgøph_add_√w_fun˘i⁄
 (
åì
, 
boﬁ
);

800 
	`cgøph_™Æyze_fun˘i⁄
 (
cgøph_node
 *);

801 c⁄° * 
	`cgøph_ölöe_Áûed_°rög
 (
cgøph_ölöe_Áûed_t
);

802 
cgøph_ölöe_Áûed_ty≥_t
 
	`cgøph_ölöe_Áûed_ty≥
 (
cgøph_ölöe_Áûed_t
);

804 
	`cgøph_£t_nŸhrow_Êag
 (
cgøph_node
 *, 
boﬁ
);

805 
	`cgøph_£t_c⁄°_Êag
 (
cgøph_node
 *, 
boﬁ
, bool);

806 
	`cgøph_£t_puª_Êag
 (
cgøph_node
 *, 
boﬁ
, bool);

807 
boﬁ
 
	`cgøph_node_ˇ¬Ÿ_ªtu∫
 (
cgøph_node
 *);

808 
boﬁ
 
	`cgøph_edge_ˇ¬Ÿ_Àad_to_ªtu∫
 (
cgøph_edge
 *);

809 
boﬁ
 
cgøph_wûl_be_ªmoved_‰om_¥ogøm_if_no_dúe˘_ˇŒs


810 (
cgøph_node
 *
node
);

811 
boﬁ
 
cgøph_ˇn_ªmove_if_no_dúe˘_ˇŒs_™d_ªfs_p


812 (
cgøph_node
 *
node
);

813 
boﬁ
 
	`cgøph_ˇn_ªmove_if_no_dúe˘_ˇŒs_p
 (
cgøph_node
 *
node
);

814 
boﬁ
 
	`ªsﬁuti⁄_u£d_‰om_Ÿhî_fûe_p
 (
ld_∂ugö_symbﬁ_ªsﬁuti⁄
);

815 
boﬁ
 
	`cgøph_f‹_node_thunks_™d_Æü£s
 (
cgøph_node
 *,

816 
	$boﬁ
 (*Ë(
cgøph_node
 *, *),

818 
boﬁ
);

819 
boﬁ
 
	`cgøph_f‹_node_™d_Æü£s
 (
cgøph_node
 *,

820 
	$boﬁ
 (*Ë(
cgøph_node
 *, *),

821 *, 
boﬁ
);

822 
vec
<
cgøph_edge_p
> 
	`cﬁÀ˘_ˇŒîs_of_node
 (
cgøph_node
 *
node
);

823 
	`vîify_cgøph
 ();

824 
	`vîify_cgøph_node
 (
cgøph_node
 *);

825 
	`cgøph_m¨k_addªss_èkí_node
 (
cgøph_node
 *);

827 (*
	tcgøph_edge_hook
)(
	tcgøph_edge
 *, *);

828 (*
	tcgøph_node_hook
)(
	tcgøph_node
 *, *);

829 (*
	tv¨poﬁ_node_hook
)(
	tv¨poﬁ_node
 *, *);

830 (*
	tcgøph_2edge_hook
)(
	tcgøph_edge
 *, cgraph_edge *,

832 (*
	tcgøph_2node_hook
)(
	tcgøph_node
 *, cgraph_node *,

834 
cgøph_edge_hook_li°
;

835 
cgøph_node_hook_li°
;

836 
v¨poﬁ_node_hook_li°
;

837 
cgøph_2edge_hook_li°
;

838 
cgøph_2node_hook_li°
;

839 
cgøph_edge_hook_li°
 *
	`cgøph_add_edge_ªmovÆ_hook
 (
cgøph_edge_hook
, *);

840 
	`cgøph_ªmove_edge_ªmovÆ_hook
 (
cgøph_edge_hook_li°
 *);

841 
cgøph_node_hook_li°
 *
	`cgøph_add_node_ªmovÆ_hook
 (
cgøph_node_hook
,

843 
	`cgøph_ªmove_node_ªmovÆ_hook
 (
cgøph_node_hook_li°
 *);

844 
v¨poﬁ_node_hook_li°
 *
	`v¨poﬁ_add_node_ªmovÆ_hook
 (
v¨poﬁ_node_hook
,

846 
	`v¨poﬁ_ªmove_node_ªmovÆ_hook
 (
v¨poﬁ_node_hook_li°
 *);

847 
cgøph_node_hook_li°
 *
	`cgøph_add_fun˘i⁄_ö£πi⁄_hook
 (
cgøph_node_hook
,

849 
	`cgøph_ªmove_fun˘i⁄_ö£πi⁄_hook
 (
cgøph_node_hook_li°
 *);

850 
v¨poﬁ_node_hook_li°
 *
	`v¨poﬁ_add_v¨übÀ_ö£πi⁄_hook
 (
v¨poﬁ_node_hook
,

852 
	`v¨poﬁ_ªmove_v¨übÀ_ö£πi⁄_hook
 (
v¨poﬁ_node_hook_li°
 *);

853 
	`cgøph_ˇŒ_fun˘i⁄_ö£πi⁄_hooks
 (
cgøph_node
 *
node
);

854 
cgøph_2edge_hook_li°
 *
	`cgøph_add_edge_du∂iˇti⁄_hook
 (
cgøph_2edge_hook
, *);

855 
	`cgøph_ªmove_edge_du∂iˇti⁄_hook
 (
cgøph_2edge_hook_li°
 *);

856 
cgøph_2node_hook_li°
 *
	`cgøph_add_node_du∂iˇti⁄_hook
 (
cgøph_2node_hook
, *);

857 
	`cgøph_ªmove_node_du∂iˇti⁄_hook
 (
cgøph_2node_hook_li°
 *);

858 
gim∂e
 
	`cgøph_ªdúe˘_edge_ˇŒ_°mt_to_ˇŒì
 (
cgøph_edge
 *);

859 
cgøph_node
 * 
	`cgøph_fun˘i⁄_node
 (cgraph_node *,

860 
avaûabûôy
 *
avaû
 = 
NULL
);

861 
boﬁ
 
	`cgøph_gë_body
 (
cgøph_node
 *
node
);

862 
cgøph_edge
 *

863 
	`cgøph_tu∫_edge_to_•ecuœtive
 (
cgøph_edge
 *,

864 
cgøph_node
 *,

865 
gcov_ty≥
, );

866 
	`cgøph_•ecuœtive_ˇŒ_öfo
 (
cgøph_edge
 *,

867 
cgøph_edge
 *&,

868 
cgøph_edge
 *&,

869 
ùa_ªf
 *&);

870 
boﬁ
 
	`gim∂e_check_ˇŒ_m©chög_ty≥s
 (
gim∂e
, 
åì
, bool);

873 
asm_node
 *
	`add_asm_node
 (
åì
);

874 
FILE
 *
cgøph_dump_fûe
;

875 
	`cgøph_föÆize_fun˘i⁄
 (
åì
, 
boﬁ
);

876 
	`föÆize_compû©i⁄_unô
 ();

877 
	`compûe
 ();

878 
	`öô_cgøph
 ();

879 
	`cgøph_¥o˚ss_√w_fun˘i⁄s
 ();

880 
	`cgøph_¥o˚ss_ßme_body_Æü£s
 ();

881 
	`fixup_ßme_˝p_Æüs_visibûôy
 (
symèb_node
 *, symèb_nodê*
èrgë
, 
åì
);

884 
basic_block
 
	`öô_lowîed_em±y_fun˘i⁄
 (
åì
, 
boﬁ
);

885 
	`cgøph_ª£t_node
 (
cgøph_node
 *);

886 
boﬁ
 
	`ex∑nd_thunk
 (
cgøph_node
 *, bool);

890 
cgøph_edge
 * 
	`cgøph_˛⁄e_edge
 (cgraph_edge *,

891 
cgøph_node
 *, 
gim∂e
,

892 , 
gcov_ty≥
, , 
boﬁ
);

893 
cgøph_node
 * 
	`cgøph_˛⁄e_node
 (cgøph_nodê*, 
åì
, 
gcov_ty≥
,

894 , 
boﬁ
, 
vec
<
cgøph_edge_p
>,

895 
boﬁ
, 
cgøph_node
 *, 
bôm≠
);

896 
åì
 
	`˛⁄e_fun˘i⁄_«me
 (åì 
de˛
, const *);

897 
cgøph_node
 * 
	`cgøph_¸óã_vútuÆ_˛⁄e
 (cgøph_nodê*
ﬁd_node
,

898 
vec
<
cgøph_edge_p
>,

899 
vec
<
ùa_ª∂a˚_m≠_p
, 
va_gc
> *
åì_m≠
,

900 
bôm≠
 
¨gs_to_skù
,

901 c⁄° *
˛⁄e_«me
);

902 
cgøph_node
 *
	`cgøph_föd_ª∂a˚mít_node
 (cgraph_node *);

903 
boﬁ
 
	`cgøph_ªmove_node_™d_ölöe_˛⁄es
 (
cgøph_node
 *, cgraph_node *);

904 
	`cgøph_£t_ˇŒ_°mt_ö˛udög_˛⁄es
 (
cgøph_node
 *, 
gim∂e
, gimple,

905 
boﬁ
 
upd©e_•ecuœtive
 = 
åue
);

906 
	`cgøph_¸óã_edge_ö˛udög_˛⁄es
 (
cgøph_node
 *,

907 
cgøph_node
 *,

908 
gim∂e
, gim∂e, 
gcov_ty≥
, ,

909 
cgøph_ölöe_Áûed_t
);

910 
	`cgøph_m©îülize_Æl_˛⁄es
 ();

911 
cgøph_node
 * 
	`cgøph_c›y_node_f‹_vîsi⁄ög
 (cgraph_node *,

912 
åì
, 
vec
<
cgøph_edge_p
>, 
bôm≠
);

913 
cgøph_node
 *
	`cgøph_fun˘i⁄_vîsi⁄ög
 (cgraph_node *,

914 
vec
<
cgøph_edge_p
>,

915 
vec
<
ùa_ª∂a˚_m≠_p
, 
va_gc
> *,

916 
bôm≠
, 
boﬁ
, bitmap,

917 
basic_block
, const *);

918 
	`åì_fun˘i⁄_vîsi⁄ög
 (
åì
,Åªe, 
vec
<
ùa_ª∂a˚_m≠_p
, 
va_gc
> *,

919 
boﬁ
, 
bôm≠
, boﬁ, bôm≠, 
basic_block
);

920 
cgøph_edge
 *
	`cgøph_ªsﬁve_•ecuœti⁄
 (cgøph_edgê*, 
åì
);

923 
	`ªbuûd_cgøph_edges
 ();

924 
	`cgøph_ªbuûd_ª„ªn˚s
 ();

925 
	`compuã_ˇŒ_°mt_bb_‰equícy
 (
åì
, 
basic_block
 
bb
);

926 
	`ªc‹d_ª„ªn˚s_ö_öôülizî
 (
åì
, 
boﬁ
);

927 
	`ùa_ªc‹d_°mt_ª„ªn˚s
 (
cgøph_node
 *, 
gim∂e
);

930 
boﬁ
 
	`symèb_ªmove_uƒóchabÀ_nodes
 (boﬁ, 
FILE
 *);

931 
cgøph_node_£t
 
	`cgøph_node_£t_√w
 ();

932 
cgøph_node_£t_ôî©‹
 
	`cgøph_node_£t_föd
 (
cgøph_node_£t
,

933 
cgøph_node
 *);

934 
	`cgøph_node_£t_add
 (
cgøph_node_£t
, 
cgøph_node
 *);

935 
	`cgøph_node_£t_ªmove
 (
cgøph_node_£t
, 
cgøph_node
 *);

936 
	`dump_cgøph_node_£t
 (
FILE
 *, 
cgøph_node_£t
);

937 
	`debug_cgøph_node_£t
 (
cgøph_node_£t
);

938 
	`‰ì_cgøph_node_£t
 (
cgøph_node_£t
);

939 
	`cgøph_buûd_°©ic_cdt‹
 (
which
, 
åì
 
body
, 
¥i‹ôy
);

941 
v¨poﬁ_node_£t
 
	`v¨poﬁ_node_£t_√w
 ();

942 
v¨poﬁ_node_£t_ôî©‹
 
	`v¨poﬁ_node_£t_föd
 (
v¨poﬁ_node_£t
,

943 
v¨poﬁ_node
 *);

944 
	`v¨poﬁ_node_£t_add
 (
v¨poﬁ_node_£t
, 
v¨poﬁ_node
 *);

945 
	`v¨poﬁ_node_£t_ªmove
 (
v¨poﬁ_node_£t
, 
v¨poﬁ_node
 *);

946 
	`dump_v¨poﬁ_node_£t
 (
FILE
 *, 
v¨poﬁ_node_£t
);

947 
	`debug_v¨poﬁ_node_£t
 (
v¨poﬁ_node_£t
);

948 
	`‰ì_v¨poﬁ_node_£t
 (
v¨poﬁ_node_£t
);

949 
	`ùa_discovî_ªad⁄ly_n⁄addªsßbÀ_v¨s
 ();

950 
boﬁ
 
	`v¨poﬁ_exã∫Æly_visibÀ_p
 (
v¨poﬁ_node
 *);

953 
boﬁ
 
	`cgøph_maybe_hŸ_edge_p
 (
cgøph_edge
 *
e
);

954 
boﬁ
 
	`cgøph_›timize_f‹_size_p
 (
cgøph_node
 *);

957 
v¨poﬁ_node
 *
	`v¨poﬁ_¸óã_em±y_node
 ();

958 
v¨poﬁ_node
 *
	`v¨poﬁ_node_f‹_de˛
 (
åì
);

959 
v¨poﬁ_node
 *
	`v¨poﬁ_node_f‹_asm
 (
åì
 
asm«me
);

960 
	`v¨poﬁ_m¨k_√eded_node
 (
v¨poﬁ_node
 *);

961 
	`debug_v¨poﬁ
 ();

962 
	`dump_v¨poﬁ
 (
FILE
 *);

963 
	`dump_v¨poﬁ_node
 (
FILE
 *, 
v¨poﬁ_node
 *);

965 
	`v¨poﬁ_föÆize_de˛
 (
åì
);

966 
avaûabûôy
 
	`cgøph_v¨übÀ_öôülizî_avaûabûôy
 (
v¨poﬁ_node
 *);

967 
	`cgøph_make_node_loˇl
 (
cgøph_node
 *);

968 
boﬁ
 
	`cgøph_node_ˇn_be_loˇl_p
 (
cgøph_node
 *);

971 
	`v¨poﬁ_ªmove_node
 (
v¨poﬁ_node
 *
node
);

972 
	`v¨poﬁ_föÆize_«med_£˘i⁄_Êags
 (
v¨poﬁ_node
 *
node
);

973 
boﬁ
 
	`v¨poﬁ_ouçut_v¨übÀs
 ();

974 
boﬁ
 
	`v¨poﬁ_as£mbÀ_de˛
 (
v¨poﬁ_node
 *
node
);

975 
	`v¨poﬁ_™Æyze_node
 (
v¨poﬁ_node
 *);

976 
v¨poﬁ_node
 * 
	`v¨poﬁ_exåa_«me_Æüs
 (
åì
,Åree);

977 
v¨poﬁ_node
 * 
	`v¨poﬁ_¸óã_v¨übÀ_Æüs
 (
åì
,Åree);

978 
	`v¨poﬁ_ª£t_queue
 ();

979 
åì
 
	`˘‹_f‹_fﬁdög
 (tree);

980 
boﬁ
 
	`v¨poﬁ_f‹_node_™d_Æü£s
 (
v¨poﬁ_node
 *,

981 
	$boﬁ
 (*Ë(
v¨poﬁ_node
 *, *),

982 *, 
boﬁ
);

983 
	`v¨poﬁ_add_√w_v¨übÀ
 (
åì
);

984 
	`symèb_öôülize_asm_«me_hash
 ();

985 
	`symèb_¥evaû_ö_asm_«me_hash
 (
symèb_node
 *
node
);

986 
	`v¨poﬁ_ªmove_öôülizî
 (
v¨poﬁ_node
 *);

989 
	`ch™ge_de˛_as£mbÀr_«me
 (
åì
,Åree);

992 
ölöe
 
cgøph_node
 *

993 
	$cgøph
 (
symèb_node
 *
node
)

995 
	`gcc_checkög_as£π
 (!
node
 ||Çode->
ty≥
 =
SYMTAB_FUNCTION
);

996  (
cgøph_node
 *)
node
;

997 
	}
}

1000 
ölöe
 
v¨poﬁ_node
 *

1001 
	$v¨poﬁ
 (
symèb_node
 *
node
)

1003 
	`gcc_checkög_as£π
 (!
node
 ||Çode->
ty≥
 =
SYMTAB_VARIABLE
);

1004  (
v¨poﬁ_node
 *)
node
;

1005 
	}
}

1008 
ölöe
 
cgøph_node
 *

1009 
	$cgøph_gë_node
 (
c⁄°_åì
 
de˛
)

1011 
	`gcc_checkög_as£π
 (
	`TREE_CODE
 (
de˛
Ë=
FUNCTION_DECL
);

1012  
	`cgøph
 (
	`symèb_gë_node
 (
de˛
));

1013 
	}
}

1016 
ölöe
 
v¨poﬁ_node
 *

1017 
	$v¨poﬁ_gë_node
 (
c⁄°_åì
 
de˛
)

1019 
	`gcc_checkög_as£π
 (
	`TREE_CODE
 (
de˛
Ë=
VAR_DECL
);

1020  
	`v¨poﬁ
 (
	`symèb_gë_node
 (
de˛
));

1021 
	}
}

1024 
	#FOR_EACH_SYMBOL
(
node
) \

1025 (
node
Ë
symèb_nodes
; (node); (nodeË“ode)->
√xt
)

	)

1029 
ölöe
 
v¨poﬁ_node
 *

1030 
	$v¨poﬁ_fú°_v¨übÀ
 ()

1032 
symèb_node
 *
node
;

1033 
node
 = 
symèb_nodes
;Çode;Çodênode->
√xt
)

1034 i‡(
v¨poﬁ_node
 *
vnode
 = 
dyn_ˇ°
 <v¨poﬁ_node> (
node
))

1035  
vnode
;

1036  
NULL
;

1037 
	}
}

1040 
ölöe
 
v¨poﬁ_node
 *

1041 
	$v¨poﬁ_√xt_v¨übÀ
 (
v¨poﬁ_node
 *
node
)

1043 
symèb_node
 *
node1
 = 
node
->
√xt
;

1044 ; 
node1
;Çode1 =Çode1->
√xt
)

1045 i‡(
v¨poﬁ_node
 *
vnode1
 = 
dyn_ˇ°
 <v¨poﬁ_node> (
node1
))

1046  
vnode1
;

1047  
NULL
;

1048 
	}
}

1050 
	#FOR_EACH_VARIABLE
(
node
) \

1051 (
node
Ë
	`v¨poﬁ_fú°_v¨übÀ
 (); \

1052 (
node
); \

1053 (
node
Ë
	`v¨poﬁ_√xt_v¨übÀ
 (“ode)))

	)

1056 
ölöe
 
v¨poﬁ_node
 *

1057 
	$v¨poﬁ_fú°_°©ic_öôülizî
 ()

1059 
symèb_node
 *
node
;

1060 
node
 = 
symèb_nodes
;Çode;Çodênode->
√xt
)

1062 
v¨poﬁ_node
 *
vnode
 = 
dyn_ˇ°
 <v¨poﬁ_node> (
node
);

1063 i‡(
vnode
 && 
	`DECL_INITIAL
 (
node
->
de˛
))

1064  
vnode
;

1066  
NULL
;

1067 
	}
}

1070 
ölöe
 
v¨poﬁ_node
 *

1071 
	$v¨poﬁ_√xt_°©ic_öôülizî
 (
v¨poﬁ_node
 *
node
)

1073 
symèb_node
 *
node1
 = 
node
->
√xt
;

1074 ; 
node1
;Çode1 =Çode1->
√xt
)

1076 
v¨poﬁ_node
 *
vnode1
 = 
dyn_ˇ°
 <v¨poﬁ_node> (
node1
);

1077 i‡(
vnode1
 && 
	`DECL_INITIAL
 (
node1
->
de˛
))

1078  
vnode1
;

1080  
NULL
;

1081 
	}
}

1084 
	#FOR_EACH_STATIC_INITIALIZER
(
node
) \

1085 (
node
Ë
	`v¨poﬁ_fú°_°©ic_öôülizî
 (); (node); \

1086 (
node
Ë
	`v¨poﬁ_√xt_°©ic_öôülizî
 (node))

	)

1089 
ölöe
 
v¨poﬁ_node
 *

1090 
	$v¨poﬁ_fú°_deföed_v¨übÀ
 ()

1092 
symèb_node
 *
node
;

1093 
node
 = 
symèb_nodes
;Çode;Çodênode->
√xt
)

1095 
v¨poﬁ_node
 *
vnode
 = 
dyn_ˇ°
 <v¨poﬁ_node> (
node
);

1096 i‡(
vnode
 && vnode->
deföôi⁄
)

1097  
vnode
;

1099  
NULL
;

1100 
	}
}

1103 
ölöe
 
v¨poﬁ_node
 *

1104 
	$v¨poﬁ_√xt_deföed_v¨übÀ
 (
v¨poﬁ_node
 *
node
)

1106 
symèb_node
 *
node1
 = 
node
->
√xt
;

1107 ; 
node1
;Çode1 =Çode1->
√xt
)

1109 
v¨poﬁ_node
 *
vnode1
 = 
dyn_ˇ°
 <v¨poﬁ_node> (
node1
);

1110 i‡(
vnode1
 && vnode1->
deföôi⁄
)

1111  
vnode1
;

1113  
NULL
;

1114 
	}
}

1116 
	#FOR_EACH_DEFINED_VARIABLE
(
node
) \

1117 (
node
Ë
	`v¨poﬁ_fú°_deföed_v¨übÀ
 (); (node); \

1118 (
node
Ë
	`v¨poﬁ_√xt_deföed_v¨übÀ
 (node))

	)

1121 
ölöe
 
cgøph_node
 *

1122 
	$cgøph_fú°_deföed_fun˘i⁄
 ()

1124 
symèb_node
 *
node
;

1125 
node
 = 
symèb_nodes
;Çode;Çodênode->
√xt
)

1127 
cgøph_node
 *
˙
 = 
dyn_ˇ°
 <cgøph_node> (
node
);

1128 i‡(
˙
 && cn->
deföôi⁄
)

1129  
˙
;

1131  
NULL
;

1132 
	}
}

1135 
ölöe
 
cgøph_node
 *

1136 
	$cgøph_√xt_deföed_fun˘i⁄
 (
cgøph_node
 *
node
)

1138 
symèb_node
 *
node1
 = 
node
->
√xt
;

1139 ; 
node1
;Çode1 =Çode1->
√xt
)

1141 
cgøph_node
 *
˙1
 = 
dyn_ˇ°
 <cgøph_node> (
node1
);

1142 i‡(
˙1
 && cn1->
deföôi⁄
)

1143  
˙1
;

1145  
NULL
;

1146 
	}
}

1149 
	#FOR_EACH_DEFINED_FUNCTION
(
node
) \

1150 (
node
Ë
	`cgøph_fú°_deföed_fun˘i⁄
 (); (node); \

1151 (
node
Ë
	`cgøph_√xt_deföed_fun˘i⁄
 (“ode)))

	)

1154 
ölöe
 
cgøph_node
 *

1155 
	$cgøph_fú°_fun˘i⁄
 ()

1157 
symèb_node
 *
node
;

1158 
node
 = 
symèb_nodes
;Çode;Çodênode->
√xt
)

1159 i‡(
cgøph_node
 *
˙
 = 
dyn_ˇ°
 <cgøph_node> (
node
))

1160  
˙
;

1161  
NULL
;

1162 
	}
}

1165 
ölöe
 
cgøph_node
 *

1166 
	$cgøph_√xt_fun˘i⁄
 (
cgøph_node
 *
node
)

1168 
symèb_node
 *
node1
 = 
node
->
√xt
;

1169 ; 
node1
;Çode1 =Çode1->
√xt
)

1170 i‡(
cgøph_node
 *
˙1
 = 
dyn_ˇ°
 <cgøph_node> (
node1
))

1171  
˙1
;

1172  
NULL
;

1173 
	}
}

1175 
	#FOR_EACH_FUNCTION
(
node
) \

1176 (
node
Ë
	`cgøph_fú°_fun˘i⁄
 (); (node); \

1177 (
node
Ë
	`cgøph_√xt_fun˘i⁄
 (“ode)))

	)

1185 
ölöe
 
boﬁ


1186 
	$cgøph_fun˘i⁄_wôh_gim∂e_body_p
 (
cgøph_node
 *
node
)

1188  
node
->
deföôi⁄
 && !node->
thunk
.
thunk_p
 && !node->
Æüs
;

1189 
	}
}

1192 
ölöe
 
cgøph_node
 *

1193 
	$cgøph_fú°_fun˘i⁄_wôh_gim∂e_body
 ()

1195 
symèb_node
 *
node
;

1196 
node
 = 
symèb_nodes
;Çode;Çodênode->
√xt
)

1198 
cgøph_node
 *
˙
 = 
dyn_ˇ°
 <cgøph_node> (
node
);

1199 i‡(
˙
 && 
	`cgøph_fun˘i⁄_wôh_gim∂e_body_p
 (cn))

1200  
˙
;

1202  
NULL
;

1203 
	}
}

1206 
ölöe
 
cgøph_node
 *

1207 
	$cgøph_√xt_fun˘i⁄_wôh_gim∂e_body
 (
cgøph_node
 *
node
)

1209 
symèb_node
 *
node1
 = 
node
->
√xt
;

1210 ; 
node1
;Çode1 =Çode1->
√xt
)

1212 
cgøph_node
 *
˙1
 = 
dyn_ˇ°
 <cgøph_node> (
node1
);

1213 i‡(
˙1
 && 
	`cgøph_fun˘i⁄_wôh_gim∂e_body_p
 (cn1))

1214  
˙1
;

1216  
NULL
;

1217 
	}
}

1220 
	#FOR_EACH_FUNCTION_WITH_GIMPLE_BODY
(
node
) \

1221 (
node
Ë
	`cgøph_fú°_fun˘i⁄_wôh_gim∂e_body
 (); (node); \

1222 (
node
Ë
	`cgøph_√xt_fun˘i⁄_wôh_gim∂e_body
 (node))

	)

1225 
åì
 
add_√w_°©ic_v¨
 (åì 
ty≥
);

1228 
ölöe
 
boﬁ


1229 
	$csi_íd_p
 (
cgøph_node_£t_ôî©‹
 
csi
)

1231  
csi
.
ödex
 >csi.
£t
->
nodes
.
	`Àngth
 ();

1232 
	}
}

1235 
ölöe
 

1236 
	$csi_√xt
 (
cgøph_node_£t_ôî©‹
 *
csi
)

1238 
csi
->
ödex
++;

1239 
	}
}

1242 
ölöe
 
cgøph_node
 *

1243 
	$csi_node
 (
cgøph_node_£t_ôî©‹
 
csi
)

1245  
csi
.
£t
->
nodes
[csi.
ödex
];

1246 
	}
}

1249 
ölöe
 
cgøph_node_£t_ôî©‹


1250 
	$csi_°¨t
 (
cgøph_node_£t
 
£t
)

1252 
cgøph_node_£t_ôî©‹
 
csi
;

1254 
csi
.
£t
 = set;

1255 
csi
.
ödex
 = 0;

1256  
csi
;

1257 
	}
}

1260 
ölöe
 
boﬁ


1261 
	$cgøph_node_ö_£t_p
 (
cgøph_node
 *
node
, 
cgøph_node_£t
 
£t
)

1263 
cgøph_node_£t_ôî©‹
 
csi
;

1264 
csi
 = 
	`cgøph_node_£t_föd
 (
£t
, 
node
);

1265  !
	`csi_íd_p
 (
csi
);

1266 
	}
}

1269 
ölöe
 
size_t


1270 
	$cgøph_node_£t_size
 (
cgøph_node_£t
 
£t
)

1272  
£t
->
nodes
.
	`Àngth
 ();

1273 
	}
}

1276 
ölöe
 
boﬁ


1277 
	$vsi_íd_p
 (
v¨poﬁ_node_£t_ôî©‹
 
vsi
)

1279  
vsi
.
ödex
 >vsi.
£t
->
nodes
.
	`Àngth
 ();

1280 
	}
}

1283 
ölöe
 

1284 
	$vsi_√xt
 (
v¨poﬁ_node_£t_ôî©‹
 *
vsi
)

1286 
vsi
->
ödex
++;

1287 
	}
}

1290 
ölöe
 
v¨poﬁ_node
 *

1291 
	$vsi_node
 (
v¨poﬁ_node_£t_ôî©‹
 
vsi
)

1293  
vsi
.
£t
->
nodes
[vsi.
ödex
];

1294 
	}
}

1297 
ölöe
 
v¨poﬁ_node_£t_ôî©‹


1298 
	$vsi_°¨t
 (
v¨poﬁ_node_£t
 
£t
)

1300 
v¨poﬁ_node_£t_ôî©‹
 
vsi
;

1302 
vsi
.
£t
 = set;

1303 
vsi
.
ödex
 = 0;

1304  
vsi
;

1305 
	}
}

1308 
ölöe
 
boﬁ


1309 
	$v¨poﬁ_node_ö_£t_p
 (
v¨poﬁ_node
 *
node
, 
v¨poﬁ_node_£t
 
£t
)

1311 
v¨poﬁ_node_£t_ôî©‹
 
vsi
;

1312 
vsi
 = 
	`v¨poﬁ_node_£t_föd
 (
£t
, 
node
);

1313  !
	`vsi_íd_p
 (
vsi
);

1314 
	}
}

1317 
ölöe
 
size_t


1318 
	$v¨poﬁ_node_£t_size
 (
v¨poﬁ_node_£t
 
£t
)

1320  
£t
->
nodes
.
	`Àngth
 ();

1321 
	}
}

1327 
GTY
(()Ë
	gc⁄°™t_des¸ùt‹_åì
 {

1329 
πx
 
	gπl
;

1332 
åì
 
	gvÆue
;

1337 
hashvÆ_t
 
	ghash
;

1341 
ölöe
 
boﬁ


1342 
	$cgøph_node_£t_n⁄em±y_p
 (
cgøph_node_£t
 
£t
)

1344  !
£t
->
nodes
.
	`is_em±y
 ();

1345 
	}
}

1348 
ölöe
 
boﬁ


1349 
	$v¨poﬁ_node_£t_n⁄em±y_p
 (
v¨poﬁ_node_£t
 
£t
)

1351  !
£t
->
nodes
.
	`is_em±y
 ();

1352 
	}
}

1358 
ölöe
 
boﬁ


1359 
	$cgøph_⁄ly_ˇŒed_dúe˘ly_‹_Æü£d_p
 (
cgøph_node
 *
node
)

1361 
	`gcc_as£π
 (!
node
->
globÆ
.
ölöed_to
);

1362  (!
node
->
f‹˚_ouçut
 && !node->
addªss_èkí


1363 && !
node
->
u£d_‰om_Ÿhî_∑πôi⁄


1364 && !
	`DECL_VIRTUAL_P
 (
node
->
de˛
)

1365 && !
	`DECL_STATIC_CONSTRUCTOR
 (
node
->
de˛
)

1366 && !
	`DECL_STATIC_DESTRUCTOR
 (
node
->
de˛
)

1367 && !
node
->
exã∫Æly_visibÀ
);

1368 
	}
}

1373 
ölöe
 
boﬁ


1374 
	$v¨poﬁ_ˇn_ªmove_if_no_ªfs
 (
v¨poﬁ_node
 *
node
)

1376 i‡(
	`DECL_EXTERNAL
 (
node
->
de˛
))

1377  
åue
;

1378  (!
node
->
f‹˚_ouçut
 && !node->
u£d_‰om_Ÿhî_∑πôi⁄


1379 && ((
	`DECL_COMDAT
 (
node
->
de˛
)

1380 && !
node
->
f‹˚d_by_abi


1381 && !
	`symèb_u£d_‰om_obje˘_fûe_p
 (
node
))

1382 || !
node
->
exã∫Æly_visibÀ


1383 || 
	`DECL_HAS_VALUE_EXPR_P
 (
node
->
de˛
)));

1384 
	}
}

1391 
ölöe
 
boﬁ


1392 
	$v¨poﬁ_Æl_ªfs_ex∂icô_p
 (
v¨poﬁ_node
 *
vnode
)

1394  (
vnode
->
deföôi⁄


1395 && !
vnode
->
exã∫Æly_visibÀ


1396 && !
vnode
->
u£d_‰om_Ÿhî_∑πôi⁄


1397 && !
vnode
->
f‹˚_ouçut
);

1398 
	}
}

1401 
hèb_t
 
c⁄°™t_poﬁ_hèb
 ();

1404 
	~"ùa-ªf-ölöe.h
"

1408 
ölöe
 
symèb_node
 *

1409 
	$symèb_Æüs_èrgë
 (
symèb_node
 *
n
)

1411 
ùa_ªf
 *
ªf
;

1412 
	`ùa_ªf_li°_ª„ªn˚_ôî©e
 (&
n
->
ªf_li°
, 0, 
ªf
);

1413 
	`gcc_checkög_as£π
 (
ªf
->
u£
 =
IPA_REF_ALIAS
);

1414  
ªf
->
ª„ºed
;

1415 
	}
}

1417 
ölöe
 
cgøph_node
 *

1418 
	$cgøph_Æüs_èrgë
 (
cgøph_node
 *
n
)

1420  
dyn_ˇ°
 <
cgøph_node
> (
	`symèb_Æüs_èrgë
 (
n
));

1421 
	}
}

1423 
ölöe
 
v¨poﬁ_node
 *

1424 
	$v¨poﬁ_Æüs_èrgë
 (
v¨poﬁ_node
 *
n
)

1426  
dyn_ˇ°
 <
v¨poﬁ_node
> (
	`symèb_Æüs_èrgë
 (
n
));

1427 
	}
}

1433 
ölöe
 
cgøph_node
 *

1434 
	$cgøph_fun˘i⁄_‹_thunk_node
 (
cgøph_node
 *
node
,

1435 
avaûabûôy
 *avaûabûôy = 
NULL
)

1437 
cgøph_node
 *
n
;

1439 
n
 = 
dyn_ˇ°
 <
cgøph_node
> (
	`symèb_Æüs_u…im©e_èrgë
 (
node
,

1440 
avaûabûôy
));

1441 i‡(!
n
 && 
avaûabûôy
)

1442 *
avaûabûôy
 = 
AVAIL_NOT_AVAILABLE
;

1443  
n
;

1444 
	}
}

1449 
ölöe
 
v¨poﬁ_node
 *

1450 
	$v¨poﬁ_v¨übÀ_node
 (
v¨poﬁ_node
 *
node
,

1451 
avaûabûôy
 *avaûabûôy = 
NULL
)

1453 
v¨poﬁ_node
 *
n
;

1455 i‡(
node
)

1456 
n
 = 
dyn_ˇ°
 <
v¨poﬁ_node
> (
	`symèb_Æüs_u…im©e_èrgë
 (
node
,

1457 
avaûabûôy
));

1459 
n
 = 
NULL
;

1461 i‡(!
n
 && 
avaûabûôy
)

1462 *
avaûabûôy
 = 
AVAIL_NOT_AVAILABLE
;

1463  
n
;

1464 
	}
}

1467 
ölöe
 
boﬁ


1468 
	$cgøph_edge_ªcursive_p
 (
cgøph_edge
 *
e
)

1470 
cgøph_node
 *
ˇŒì
 = 
	`cgøph_fun˘i⁄_‹_thunk_node
 (
e
->ˇŒì, 
NULL
);

1471 i‡(
e
->
ˇŒî
->
globÆ
.
ölöed_to
)

1472  
e
->
ˇŒî
->
globÆ
.
ölöed_to
->
de˛
 =
ˇŒì
->decl;

1474  
e
->
ˇŒî
->
de˛
 =
ˇŒì
->decl;

1475 
	}
}

1478 
ölöe
 
boﬁ


1479 
	$de˛_is_tm_˛⁄e
 (
c⁄°_åì
 
‚de˛
)

1481 
cgøph_node
 *
n
 = 
	`cgøph_gë_node
 (
‚de˛
);

1482 i‡(
n
)

1483  
n
->
tm_˛⁄e
;

1484  
Ál£
;

1485 
	}
}

1490 
ölöe
 

1491 
	$cgøph_m¨k_f‹˚_ouçut_node
 (
cgøph_node
 *
node
)

1493 
node
->
f‹˚_ouçut
 = 1;

1494 
	`gcc_checkög_as£π
 (!
node
->
globÆ
.
ölöed_to
);

1495 
	}
}

1500 
ölöe
 
boﬁ


1501 
	$symèb_ªÆ_symbﬁ_p
 (
symèb_node
 *
node
)

1503 
cgøph_node
 *
˙ode
;

1505 i‡(
	`DECL_ABSTRACT
 (
node
->
de˛
))

1506  
Ál£
;

1507 i‡(!
is_a
 <
cgøph_node
> (
node
))

1508  
åue
;

1509 
˙ode
 = 
	`cgøph
 (
node
);

1510 i‡(
˙ode
->
globÆ
.
ölöed_to
)

1511  
Ál£
;

1512  
åue
;

1513 
	}
}

1517 
ölöe
 
boﬁ


1518 
	$symèb_ˇn_be_disˇrded
 (
symèb_node
 *
node
)

1520  (
	`DECL_EXTERNAL
 (
node
->
de˛
)

1521 || (
	`DECL_ONE_ONLY
 (
node
->
de˛
)

1522 && 
node
->
ªsﬁuti⁄
 !
LDPR_PREVAILING_DEF


1523 && 
node
->
ªsﬁuti⁄
 !
LDPR_PREVAILING_DEF_IRONLY


1524 && 
node
->
ªsﬁuti⁄
 !
LDPR_PREVAILING_DEF_IRONLY_EXP
));

1525 
	}
}

1531 
ölöe
 
boﬁ


1532 
	$symèb_comd©_loˇl_p
 (
symèb_node
 *
node
)

1534  (
node
->
ßme_comd©_group
 && !
	`TREE_PUBLIC
 (node->
de˛
));

1535 
	}
}

1539 
ölöe
 
boﬁ


1540 
	$symèb_ö_ßme_comd©_p
 (
symèb_node
 *
⁄e
, symèb_nodê*
two
)

1542  
	`DECL_COMDAT_GROUP
 (
⁄e
->
de˛
Ë=DECL_COMDAT_GROUP (
two
->decl);

1543 
	}
}

	@include/config.h

1 #i‚de‡
GCC_CONFIG_H


2 
	#GCC_CONFIG_H


	)

3 #ifde‡
GENERATOR_FILE


4 #îr‹ 
c⁄fig
.
h
 
is
 
the
 
ho°
, 
nŸ
 
buûd
, 
machöe
.

6 
	~"auto-ho°.h
"

7 #ifde‡
IN_GCC


8 
	~"™side˛.h
"

	@include/config/arm/aarch-common-protos.h

23 #i‚de‡
GCC_AARCH_COMMON_PROTOS_H


24 
	#GCC_AARCH_COMMON_PROTOS_H


	)

26 
Ørch_¸y±o_ˇn_duÆ_issue
 (
πx
,Ñtx);

27 
¨m_óæy_lﬂd_addr_dï
 (
πx
,Ñtx);

28 
¨m_óæy_°‹e_addr_dï
 (
πx
,Ñtx);

29 
¨m_mac_accumuœt‹_is_mul_ªsu…
 (
πx
,Ñtx);

30 
¨m_mac_accumuœt‹_is_ªsu…
 (
πx
,Ñtx);

31 
¨m_no_óæy_Æu_shi·_dï
 (
πx
,Ñtx);

32 
¨m_no_óæy_Æu_shi·_vÆue_dï
 (
πx
,Ñtx);

33 
¨m_no_óæy_mul_dï
 (
πx
,Ñtx);

34 
¨m_no_óæy_°‹e_addr_dï
 (
πx
,Ñtx);

35 
boﬁ
 
¨m_πx_shi·_À·_p
 (
πx
);

42 
	sÆu_co°_èbÀ


44 c⁄° 
	m¨ôh
;

45 c⁄° 
	mlogiˇl
;

46 c⁄° 
	mshi·
;

47 c⁄° 
	mshi·_ªg
;

48 c⁄° 
	m¨ôh_shi·
;

49 c⁄° 
	m¨ôh_shi·_ªg
;

50 c⁄° 
	mlog_shi·
;

51 c⁄° 
	mlog_shi·_ªg
;

52 c⁄° 
	mexãnd
;

53 c⁄° 
	mexãnd_¨ôh
;

54 c⁄° 
	mbfi
;

55 c⁄° 
	mbfx
;

56 c⁄° 
	m˛z
;

57 c⁄° 
	mn⁄_exec
;

58 c⁄° 
boﬁ
 
	mn⁄_exec_co°s_exec
;

62 
	smu…_co°_èbÀ


64 c⁄° 
	msim∂e
;

65 c⁄° 
	mÊag_£âög
;

66 c⁄° 
	mexãnd
;

67 c⁄° 
	madd
;

68 c⁄° 
	mexãnd_add
;

69 c⁄° 
	midiv
;

82 
	smem_co°_èbÀ


84 c⁄° 
	mlﬂd
;

85 c⁄° 
	mlﬂd_sign_exãnd
;

86 c⁄° 
	mldrd
;

87 c⁄° 
	mldm_1°
;

88 c⁄° 
	mldm_ªgs_≥r_ö¢_1°
;

89 c⁄° 
	mldm_ªgs_≥r_ö¢_sub£quít
;

90 c⁄° 
	mlﬂdf
;

91 c⁄° 
	mlﬂdd
;

92 c⁄° 
	mlﬂd_u«lig√d
;

93 c⁄° 
	m°‹e
;

94 c⁄° 
	m°rd
;

95 c⁄° 
	m°m_1°
;

96 c⁄° 
	m°m_ªgs_≥r_ö¢_1°
;

97 c⁄° 
	m°m_ªgs_≥r_ö¢_sub£quít
;

98 c⁄° 
	m°‹ef
;

99 c⁄° 
	m°‹ed
;

100 c⁄° 
	m°‹e_u«lig√d
;

103 
	sÂ_co°_èbÀ


105 c⁄° 
	mdiv
;

106 c⁄° 
	mmu…
;

107 c⁄° 
	mmu…_addsub
;

108 c⁄° 
	mfma
;

109 c⁄° 
	maddsub
;

110 c⁄° 
	mÂc⁄°
;

111 c⁄° 
	m√g
;

112 c⁄° 
	mcom∑ª
;

113 c⁄° 
	mwidí
;

114 c⁄° 
	m«ºow
;

115 c⁄° 
	mtoöt
;

116 c⁄° 
	m‰omöt
;

117 c⁄° 
	mroundöt
;

120 
	sve˘‹_co°_èbÀ


122 c⁄° 
	mÆu
;

125 
	s˝u_co°_èbÀ


127 c⁄° 
Æu_co°_èbÀ
 
	mÆu
;

128 c⁄° 
mu…_co°_èbÀ
 
	mmu…
[2];

129 c⁄° 
mem_co°_èbÀ
 
	mld°
;

130 c⁄° 
Â_co°_èbÀ
 
	mÂ
[2];

131 c⁄° 
ve˘‹_co°_èbÀ
 
	mve˘
;

	@include/config/arm/aout.h

26 #i‚de‡
ASM_APP_ON


27 
	#ASM_APP_ON
 ""

	)

29 #i‚de‡
ASM_APP_OFF


30 
	#ASM_APP_OFF
 ""

	)

34 
	#TEXT_SECTION_ASM_OP
 "\t.ãxt"

	)

35 
	#DATA_SECTION_ASM_OP
 "\t.d©a"

	)

36 
	#BSS_SECTION_ASM_OP
 "\t.bss"

	)

41 #i‚de‡
REGISTER_PREFIX


42 
	#REGISTER_PREFIX
 ""

	)

45 #i‚de‡
USER_LABEL_PREFIX


46 
	#USER_LABEL_PREFIX
 "_"

	)

49 #i‚de‡
LOCAL_LABEL_PREFIX


50 
	#LOCAL_LABEL_PREFIX
 ""

	)

57 #i‚de‡
REGISTER_NAMES


58 
	#REGISTER_NAMES
 \

76 }

	)

79 #i‚de‡
ADDITIONAL_REGISTER_NAMES


80 
	#ADDITIONAL_REGISTER_NAMES
 \

101 }

	)

104 #i‚de‡
OVERLAPPING_REGISTER_NAMES


105 
	#OVERLAPPING_REGISTER_NAMES
 \

107 {"d0", 
FIRST_VFP_REGNUM
 + 0, 2}, \

108 {"d1", 
FIRST_VFP_REGNUM
 + 2, 2}, \

109 {"d2", 
FIRST_VFP_REGNUM
 + 4, 2}, \

110 {"d3", 
FIRST_VFP_REGNUM
 + 6, 2}, \

111 {"d4", 
FIRST_VFP_REGNUM
 + 8, 2}, \

112 {"d5", 
FIRST_VFP_REGNUM
 + 10, 2}, \

113 {"d6", 
FIRST_VFP_REGNUM
 + 12, 2}, \

114 {"d7", 
FIRST_VFP_REGNUM
 + 14, 2}, \

115 {"d8", 
FIRST_VFP_REGNUM
 + 16, 2}, \

116 {"d9", 
FIRST_VFP_REGNUM
 + 18, 2}, \

117 {"d10", 
FIRST_VFP_REGNUM
 + 20, 2}, \

118 {"d11", 
FIRST_VFP_REGNUM
 + 22, 2}, \

119 {"d12", 
FIRST_VFP_REGNUM
 + 24, 2}, \

120 {"d13", 
FIRST_VFP_REGNUM
 + 26, 2}, \

121 {"d14", 
FIRST_VFP_REGNUM
 + 28, 2}, \

122 {"d15", 
FIRST_VFP_REGNUM
 + 30, 2}, \

123 {"q0", 
FIRST_VFP_REGNUM
 + 0, 4}, \

124 {"q1", 
FIRST_VFP_REGNUM
 + 4, 4}, \

125 {"q2", 
FIRST_VFP_REGNUM
 + 8, 4}, \

126 {"q3", 
FIRST_VFP_REGNUM
 + 12, 4}, \

127 {"q4", 
FIRST_VFP_REGNUM
 + 16, 4}, \

128 {"q5", 
FIRST_VFP_REGNUM
 + 20, 4}, \

129 {"q6", 
FIRST_VFP_REGNUM
 + 24, 4}, \

130 {"q7", 
FIRST_VFP_REGNUM
 + 28, 4}, \

131 {"q8", 
FIRST_VFP_REGNUM
 + 32, 4}, \

132 {"q9", 
FIRST_VFP_REGNUM
 + 36, 4}, \

133 {"q10", 
FIRST_VFP_REGNUM
 + 40, 4}, \

134 {"q11", 
FIRST_VFP_REGNUM
 + 44, 4}, \

135 {"q12", 
FIRST_VFP_REGNUM
 + 48, 4}, \

136 {"q13", 
FIRST_VFP_REGNUM
 + 52, 4}, \

137 {"q14", 
FIRST_VFP_REGNUM
 + 56, 4}, \

138 {"q15", 
FIRST_VFP_REGNUM
 + 60, 4} \

139 }

	)

142 #i‚de‡
NO_DOLLAR_IN_LABEL


143 
	#NO_DOLLAR_IN_LABEL
 1

	)

148 
	#DBX_DEBUGGING_INFO
 1

	)

151 #i‚de‡
DBX_CONTIN_LENGTH


152 
	#DBX_CONTIN_LENGTH
 0

	)

156 #i‚de‡
ASM_DECLARE_FUNCTION_NAME


157 
	#ASM_DECLARE_FUNCTION_NAME
(
STREAM
, 
NAME
, 
DECL
) \

160 
	`ARM_DECLARE_FUNCTION_NAME
 (
STREAM
, 
NAME
, 
DECL
); \

161 
	`ASM_OUTPUT_LABEL
 (
STREAM
, 
NAME
); \

163 0)

	)

167 
	#GLOBAL_ASM_OP
 "\t.globÆ\t"

	)

170 #i‚de‡
ASM_GENERATE_INTERNAL_LABEL


171 
	#ASM_GENERATE_INTERNAL_LABEL
(
STRING
, 
PREFIX
, 
NUM
) \

172 
	`•rötf
 (
STRING
, "*%s%s%u", 
LOCAL_LABEL_PREFIX
, 
PREFIX
, ()(
NUM
))

	)

176 
	#ASM_OUTPUT_ADDR_VEC_ELT
(
STREAM
, 
VALUE
) \

179 
	`gcc_as£π
 (!
TARGET_THUMB2
); \

180 
	`asm_Ârötf
 (
STREAM
, "\t.w‹d\t%LL%d\n", 
VALUE
); \

182 0)

	)

188 
	#ASM_OUTPUT_ADDR_DIFF_ELT
(
STREAM
, 
BODY
, 
VALUE
, 
REL
) \

191 i‡(
TARGET_ARM
) \

192 
	`asm_Ârötf
 (
STREAM
, "\tb\t%LL%d\n", 
VALUE
); \

193 i‡(
TARGET_THUMB1
) \

195 i‡(
Êag_pic
 || 
›timize_size
) \

197 
	`GET_MODE
(
body
)) \

199 
QImode
: \

200 
	`asm_Ârötf
 (
STREAM
, "\t.byte\t(%LL%d-%LL%d)/2\n", \

201 
VALUE
, 
REL
); \

203 
HImode
: \

204 
	`asm_Ârötf
 (
STREAM
, "\t.2byte\t(%LL%d-%LL%d)/2\n", \

205 
VALUE
, 
REL
); \

207 
SImode
: \

208 
	`asm_Ârötf
 (
STREAM
, "\t.word\t%LL%d-%LL%d\n", \

209 
VALUE
, 
REL
); \

212 
	`gcc_uƒóchabÀ
(); \

216 
	`asm_Ârötf
 (
STREAM
, "\t.w‹d\t%LL%d+1\n", 
VALUE
); \

220 
	`GET_MODE
(
body
)) \

222 
QImode
: \

223 
	`asm_Ârötf
 (
STREAM
, "\t.byte\t(%LL%d-%LL%d)/2\n", \

224 
VALUE
, 
REL
); \

226 
HImode
: \

227 
	`asm_Ârötf
 (
STREAM
, "\t.2byte\t(%LL%d-%LL%d)/2\n", \

228 
VALUE
, 
REL
); \

230 
SImode
: \

231 i‡(
Êag_pic
) \

232 
	`asm_Ârötf
 (
STREAM
, "\t.w‹d\t%LL%d+1-%LL%d\n", 
VALUE
, 
REL
); \

234 
	`asm_Ârötf
 (
STREAM
, "\t.w‹d\t%LL%d+1\n", 
VALUE
); \

237 
	`gcc_uƒóchabÀ
(); \

241 0)

	)

244 #unde‡
ASM_OUTPUT_ASCII


245 
	#ASM_OUTPUT_ASCII
(
STREAM
, 
PTR
, 
LEN
) \

246 
	`ouçut_ascii_p£udo_›
 (
STREAM
, (c⁄° *Ë(
PTR
), 
LEN
)

	)

249 #unde‡
ASM_OUTPUT_SKIP


250 
	#ASM_OUTPUT_SKIP
(
STREAM
, 
NBYTES
) \

251 
	`Ârötf
 (
STREAM
, "\t.•a˚\t%d\n", (Ë(
NBYTES
))

	)

254 #i‚de‡
ASM_OUTPUT_ALIGN


255 
	#ASM_OUTPUT_ALIGN
(
STREAM
, 
POWER
) \

258 
amou¡
 = 1 << (
POWER
); \

260 i‡(
amou¡
 == 2) \

261 
	`Ârötf
 (
STREAM
, "\t.even\n"); \

262 i‡(
amou¡
 != 1) \

263 
	`Ârötf
 (
STREAM
, "\t.Æign\t%d\n", 
amou¡
 - 4); \

265 0)

	)

269 #i‚de‡
ASM_OUTPUT_COMMON


270 
	#ASM_OUTPUT_COMMON
(
STREAM
, 
NAME
, 
SIZE
, 
ROUNDED
) \

273 
	`Ârötf
 (
STREAM
, "\t.comm\t"); \

274 
	`as£mbÀ_«me
 (
STREAM
, 
NAME
); \

275 
	`asm_Ârötf
 (
STREAM
, ", %d\t%@ %d\n", \

276 ()(
ROUNDED
), ()(
SIZE
)); \

278 0)

	)

285 #i‚de‡
ASM_OUTPUT_ALIGNED_LOCAL


286 
	#ASM_OUTPUT_ALIGNED_LOCAL
(
STREAM
, 
NAME
, 
SIZE
, 
ALIGN
) \

289 
	`swôch_to_£˘i⁄
 (
bss_£˘i⁄
); \

290 
	`ASM_OUTPUT_ALIGN
 (
STREAM
, 
	`Êo‹_log2
 (
ALIGN
 / 
BITS_PER_UNIT
)); \

291 
	`ASM_OUTPUT_LABEL
 (
STREAM
, 
NAME
); \

292 
	`Ârötf
 (
STREAM
, "\t.•a˚\t%d\n", ()(
SIZE
)); \

294 0)

	)

298 #i‚de‡
ASM_OUTPUT_ALIGNED_BSS


299 
	#ASM_OUTPUT_ALIGNED_BSS
(
STREAM
, 
DECL
, 
NAME
, 
SIZE
, 
ALIGN
) \

300 
	`asm_ouçut_Æig√d_bss
 (
STREAM
, 
DECL
, 
NAME
, 
SIZE
, 
ALIGN
)

	)

303 #i‚de‡
ASM_COMMENT_START


304 
	#ASM_COMMENT_START
 "@"

	)

308 
	#SET_ASM_OP
 "\t.£t\t"

	)

	@include/config/arm/arm-opts.h

25 #i‚de‡
ARM_OPTS_H


26 
	#ARM_OPTS_H


	)

29 
	e¥o˚ss‹_ty≥


31 #unde‡
ARM_CORE


32 
	#ARM_CORE
(
NAME
, 
INTERNAL_IDENT
, 
IDENT
, 
ARCH
, 
FLAGS
, 
COSTS
) \

33 
INTERNAL_IDENT
,

	)

34 
	~"¨m-c‹es.def
"

35 #unde‡
ARM_CORE


37 
	m¨m_n⁄e


44 
	e¨m_Â16_f‹m©_ty≥


46 
	mARM_FP16_FORMAT_NONE
 = 0,

47 
	mARM_FP16_FORMAT_IEEE
 = 1,

48 
	mARM_FP16_FORMAT_ALTERNATIVE
 = 2

52 
	e¨m_abi_ty≥


54 
	mARM_ABI_APCS
,

55 
	mARM_ABI_ATPCS
,

56 
	mARM_ABI_AAPCS
,

57 
	mARM_ABI_IWMMXT
,

58 
	mARM_ABI_AAPCS_LINUX


61 
	eÊﬂt_abi_ty≥


63 
	mARM_FLOAT_ABI_SOFT
,

64 
	mARM_FLOAT_ABI_SOFTFP
,

65 
	mARM_FLOAT_ABI_HARD


69 
	e¨m_ç_ty≥
 {

70 
	mTP_AUTO
,

71 
	mTP_SOFT
,

72 
	mTP_CP15


76 
	e¨m_és_ty≥
 {

77 
	mTLS_GNU
,

78 
	mTLS_GNU2


	@include/config/arm/arm-protos.h

22 #i‚de‡
GCC_ARM_PROTOS_H


23 
	#GCC_ARM_PROTOS_H


	)

25 
unwöd_öfo_ty≥
 
¨m_ex˚±_unwöd_öfo
 (
gcc_›ti⁄s
 *);

26 
u£_ªtu∫_ö¢
 (, 
πx
);

27 
boﬁ
 
u£_sim∂e_ªtu∫_p
 ();

28 
ªg_˛ass
 
¨m_ªgno_˛ass
 ();

29 
¨m_lﬂd_pic_ªgi°î
 ();

30 
¨m_vﬁ©ûe_func
 ();

31 
¨m_ex∑nd_¥ﬁogue
 ();

32 
¨m_ex∑nd_ïûogue
 (
boﬁ
);

33 
thumb2_ex∑nd_ªtu∫
 (
boﬁ
);

34 c⁄° *
¨m_°rù_«me_ícodög
 (const *);

35 
¨m_asm_ouçut_œbñªf
 (
FILE
 *, const *);

36 
thumb2_asm_ouçut_›code
 (
FILE
 *);

37 
¨m_cuºít_func_ty≥
 ();

38 
HOST_WIDE_INT
 
¨m_compuã_öôül_ñimö©i⁄_off£t
 (,

40 
HOST_WIDE_INT
 
thumb_compuã_öôül_ñimö©i⁄_off£t
 (,

42 
¨m_dbx_ªgi°î_numbî
 ();

43 
¨m_ouçut_‚_unwöd
 (
FILE
 *, 
boﬁ
);

46 #ifde‡
RTX_CODE


47 
boﬁ
 
¨m_ve˘‹_mode_suµ‹ãd_p
 (
machöe_mode
);

48 
boﬁ
 
¨m_smÆl_ªgi°î_˛as£s_f‹_mode_p
 (
machöe_mode
);

49 
¨m_h¨d_ªgno_mode_ok
 (, 
machöe_mode
);

50 
boﬁ
 
¨m_modes_tõabÀ_p
 (
machöe_mode
, machine_mode);

51 
c⁄°_ok_f‹_¨m
 (
HOST_WIDE_INT
);

52 
c⁄°_ok_f‹_›
 (
HOST_WIDE_INT
, 
πx_code
);

53 
c⁄°_ok_f‹_dimode_›
 (
HOST_WIDE_INT
, 
πx_code
);

54 
¨m_•lô_c⁄°™t
 (
RTX_CODE
, 
machöe_mode
, 
πx
,

55 
HOST_WIDE_INT
, 
πx
,Ñtx, );

56 
Àgôim©e_pic_›î™d_p
 (
πx
);

57 
πx
 
Àgôimize_pic_addªss
 (πx, 
machöe_mode
,Ñtx);

58 
πx
 
Àgôimize_és_addªss
 (rtx,Ñtx);

59 
boﬁ
 
¨m_Àgôim©e_addªss_p
 (
machöe_mode
, 
πx
, bool);

60 
¨m_Àgôim©e_addªss_ouãr_p
 (
machöe_mode
, 
πx
, 
RTX_CODE
, );

61 
thumb_Àgôim©e_off£t_p
 (
machöe_mode
, 
HOST_WIDE_INT
);

62 
boﬁ
 
¨m_Àgôimize_ªlﬂd_addªss
 (
πx
 *, 
machöe_mode
, , ,

64 
πx
 
thumb_Àgôimize_ªlﬂd_addªss
 (πx *, 
machöe_mode
, , ,

66 
thumb1_Àgôim©e_addªss_p
 (
machöe_mode
, 
πx
, );

67 
boﬁ
 
ldm_°m_›î©i⁄_p
 (
πx
, boﬁ, 
machöe_mode
 
mode
,

68 
boﬁ
, bool);

69 
¨m_c⁄°_doubÀ_πx
 (
πx
);

70 
vÂ3_c⁄°_doubÀ_πx
 (
πx
);

71 
√⁄_immedüã_vÆid_f‹_move
 (
πx
, 
machöe_mode
,Ñtx *, *);

72 
√⁄_immedüã_vÆid_f‹_logic
 (
πx
, 
machöe_mode
, ,Ñtx *,

74 
√⁄_immedüã_vÆid_f‹_shi·
 (
πx
, 
machöe_mode
,Ñtx *,

75 *, 
boﬁ
);

76 *
√⁄_ouçut_logic_immedüã
 (c⁄° *, 
πx
 *,

77 
machöe_mode
, , );

78 *
√⁄_ouçut_shi·_immedüã
 (c⁄° *, , 
πx
 *,

79 
machöe_mode
, , 
boﬁ
);

80 
√⁄_∑úwi£_ªdu˚
 (
πx
,Ñtx, 
machöe_mode
,

81 
	$πx
 (*Ë(
πx
,Ñtx,Ñtx));

82 
πx
 
	`√⁄_make_c⁄°™t
 (rtx);

83 
åì
 
	`¨m_buûtö_ve˘‹ized_fun˘i⁄
 (tree,Åree,Åree);

84 
	`√⁄_ex∑nd_ve˘‹_öô
 (
πx
,Ñtx);

85 
	`√⁄_œ√_bounds
 (
πx
, 
HOST_WIDE_INT
, HOST_WIDE_INT);

86 
	`√⁄_c⁄°_bounds
 (
πx
, 
HOST_WIDE_INT
, HOST_WIDE_INT);

87 
HOST_WIDE_INT
 
	`√⁄_ñemít_bôs
 (
machöe_mode
);

88 
	`√⁄_ªöãΩªt
 (
πx
,Ñtx);

89 
	`√⁄_emô_∑ú_ªsu…_ö¢
 (
machöe_mode
,

90 
	$πx
 (*Ë(
πx
,Ñtx,Ñtx,Ñtx),

91 
πx
,Ñtx,Ñtx);

92 
	`√⁄_dißmbigu©e_c›y
 (
πx
 *,Ñtx *,Ñtx *, );

93 
	`√⁄_•lô_vcomböe
 (
πx
 
›
[3]);

94 
ªg_˛ass
 
	`c›roc_£c⁄d¨y_ªlﬂd_˛ass
 (
machöe_mode
, 
πx
,

95 
boﬁ
);

96 
boﬁ
 
	`¨m_és_ª„ªn˚d_p
 (
πx
);

98 
	`¨m_c›roc_mem_›î™d
 (
πx
, 
boﬁ
);

99 
	`√⁄_ve˘‹_mem_›î™d
 (
πx
, , 
boﬁ
);

100 
	`√⁄_°ru˘_mem_›î™d
 (
πx
);

102 
	`és_míti⁄ed_p
 (
πx
);

103 
	`symbﬁ_míti⁄ed_p
 (
πx
);

104 
	`œbñ_míti⁄ed_p
 (
πx
);

105 
RTX_CODE
 
	`mömax_code
 (
πx
);

106 
boﬁ
 
	`¨m_ßt_›î©‹_m©ch
 (
πx
,Ñtx, *, bool *);

107 
	`adja˚¡_mem_loˇti⁄s
 (
πx
,Ñtx);

108 
boﬁ
 
	`gí_ldm_£q
 (
πx
 *, , bool);

109 
boﬁ
 
	`gí_°m_£q
 (
πx
 *, );

110 
boﬁ
 
	`gí_c⁄°_°m_£q
 (
πx
 *, );

111 
πx
 
	`¨m_gí_lﬂd_mu…ùÀ
 (*, ,Ñtx, ,Ñtx, 
HOST_WIDE_INT
 *);

112 
πx
 
	`¨m_gí_°‹e_mu…ùÀ
 (*, ,Ñtx, ,Ñtx, 
HOST_WIDE_INT
 *);

113 
boﬁ
 
	`off£t_ok_f‹_ldrd_°rd
 (
HOST_WIDE_INT
);

114 
boﬁ
 
	`›î™ds_ok_ldrd_°rd
 (
πx
,Ñtx,Ñtx, 
HOST_WIDE_INT
, bool, bool);

115 
boﬁ
 
	`gí_›î™ds_ldrd_°rd
 (
πx
 *, bool, bool, bool);

116 
	`¨m_gí_movmemqi
 (
πx
 *);

117 
boﬁ
 
	`gí_movmem_ldrd_°rd
 (
πx
 *);

118 
machöe_mode
 
	`¨m_£À˘_cc_mode
 (
RTX_CODE
, 
πx
,Ñtx);

119 
machöe_mode
 
	`¨m_£À˘_domö™˚_cc_mode
 (
πx
,Ñtx,

120 
HOST_WIDE_INT
);

121 
πx
 
	`¨m_gí_com∑ª_ªg
 (
RTX_CODE
,Ñtx,Ñtx,Ñtx);

122 
πx
 
	`¨m_gí_ªtu∫_addr_mask
 ();

123 
	`¨m_ªlﬂd_ö_hi
 (
πx
 *);

124 
	`¨m_ªlﬂd_out_hi
 (
πx
 *);

125 
	`¨m_max_c⁄°_doubÀ_ölöe_co°
 ();

126 
	`¨m_c⁄°_doubÀ_ölöe_co°
 (
πx
);

127 
boﬁ
 
	`¨m_c⁄°_doubÀ_by_∑πs
 (
πx
);

128 
boﬁ
 
	`¨m_c⁄°_doubÀ_by_immedüãs
 (
πx
);

129 c⁄° *
	`Â_immedüã_c⁄°™t
 (
πx
);

130 
	`¨m_emô_ˇŒ_ö¢
 (
πx
,Ñtx);

131 c⁄° *
	`ouçut_ˇŒ
 (
πx
 *);

132 c⁄° *
	`ouçut_ˇŒ_mem
 (
πx
 *);

133 
	`¨m_emô_mov∑ú
 (
πx
,Ñtx);

134 c⁄° *
	`ouçut_mov_l⁄g_doubÀ_¨m_‰om_¨m
 (
πx
 *);

135 c⁄° *
	`ouçut_move_doubÀ
 (
πx
 *, 
boﬁ
, *
cou¡
);

136 c⁄° *
	`ouçut_move_quad
 (
πx
 *);

137 
	`¨m_cou¡_ouçut_move_doubÀ_ö¢s
 (
πx
 *);

138 c⁄° *
	`ouçut_move_vÂ
 (
πx
 *
›î™ds
);

139 c⁄° *
	`ouçut_move_√⁄
 (
πx
 *
›î™ds
);

140 
	`¨m_©å_Àngth_move_√⁄
 (
πx
);

141 
	`¨m_addªss_off£t_is_imm
 (
πx
);

142 c⁄° *
	`ouçut_add_immedüã
 (
πx
 *);

143 c⁄° *
	`¨ôhmëic_ö°r
 (
πx
, );

144 
	`ouçut_ascii_p£udo_›
 (
FILE
 *, const *, );

145 c⁄° *
	`ouçut_ªtu∫_ö°ru˘i⁄
 (
πx
, 
boﬁ
, bool, bool);

146 
	`¨m_poke_fun˘i⁄_«me
 (
FILE
 *, const *);

147 
	`¨m_föÆ_¥esˇn_ö¢
 (
πx
);

148 
	`¨m_debuggî_¨g_off£t
 (, 
πx
);

149 
boﬁ
 
	`¨m_is_l⁄g_ˇŒ_p
 (
åì
);

150 
	`¨m_emô_ve˘‹_c⁄°
 (
FILE
 *, 
πx
);

151 
	`¨m_emô_Â16_c⁄°
 (
πx
 
c
);

152 c⁄° * 
	`¨m_ouçut_lﬂd_gr
 (
πx
 *);

153 c⁄° *
	`vÂ_ouçut_f°md
 (
πx
 *);

154 
	`¨m_ouçut_mu…úeg_p›
 (
πx
 *, 
boﬁ
,Ñtx, bool, bool);

155 
	`¨m_£t_ªtu∫_addªss
 (
πx
,Ñtx);

156 
	`¨m_ñimöabÀ_ªgi°î
 (
πx
);

157 c⁄° *
	`¨m_ouçut_shi·
(
πx
 *, );

158 c⁄° *
	`¨m_ouçut_iwmmxt_shi·_immedüã
 (c⁄° *, 
πx
 *, 
boﬁ
);

159 c⁄° *
	`¨m_ouçut_iwmmxt_tö§
 (
πx
 *);

160 
	`¨m_sync_lo›_ö¢s
 (
πx
 ,Ñtx *);

161 
	`¨m_©å_Àngth_push_mu…i
(
πx
,Ñtx);

162 
	`¨m_ex∑nd_com∑ª_™d_sw≠
 (
πx
 
›
[]);

163 
	`¨m_•lô_com∑ª_™d_sw≠
 (
πx
 
›
[]);

164 
	`¨m_•lô_©omic_›
 (
πx_code
, 
πx
,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

165 
πx
 
	`¨m_lﬂd_ç
 (rtx);

167 #i‡
deföed
 
TREE_CODE


168 
	`¨m_öô_cumuœtive_¨gs
 (
CUMULATIVE_ARGS
 *, 
åì
, 
πx
,Åree);

169 
boﬁ
 
	`¨m_∑d_¨g_upw¨d
 (
machöe_mode
, 
c⁄°_åì
);

170 
boﬁ
 
	`¨m_∑d_ªg_upw¨d
 (
machöe_mode
, 
åì
, );

172 
	`¨m_≠∂y_ªsu…_size
 ();

177 
	`¨m_öô_ex∑ndîs
 ();

178 c⁄° *
	`thumb1_u√x∑nded_ïûogue
 ();

179 
	`thumb1_ex∑nd_¥ﬁogue
 ();

180 
	`thumb1_ex∑nd_ïûogue
 ();

181 c⁄° *
	`thumb1_ouçut_öãrw‹k
 ();

182 #ifde‡
TREE_CODE


183 
	`is_ˇŒed_ö_ARM_mode
 (
åì
);

185 
	`thumb_shi·abÀ_c⁄°
 (
HOST_WIDE_INT
);

186 #ifde‡
RTX_CODE


187 
¨m_c⁄d_code
 
	`maybe_gë_¨m_c⁄dôi⁄_code
 (
πx
);

188 
	`thumb1_föÆ_¥esˇn_ö¢
 (
πx
);

189 
	`thumb2_föÆ_¥esˇn_ö¢
 (
πx
);

190 c⁄° *
	`thumb_lﬂd_doubÀ_‰om_addªss
 (
πx
 *);

191 c⁄° *
	`thumb_ouçut_move_mem_mu…ùÀ
 (, 
πx
 *);

192 c⁄° *
	`thumb_ˇŒ_vü_ªg
 (
πx
);

193 
	`thumb_ex∑nd_movmemqi
 (
πx
 *);

194 
πx
 
	`¨m_ªtu∫_addr
 (,Ñtx);

195 
	`thumb_ªlﬂd_out_hi
 (
πx
 *);

196 
	`thumb_ªlﬂd_ö_hi
 (
πx
 *);

197 
	`thumb_£t_ªtu∫_addªss
 (
πx
,Ñtx);

198 c⁄° *
	`thumb1_ouçut_ˇ£si
 (
πx
 *);

199 c⁄° *
	`thumb2_ouçut_ˇ£si
 (
πx
 *);

203 
	`¨m_dŒexp‹t_«me_p
 (const *);

204 
	`¨m_dŒimp‹t_«me_p
 (const *);

206 #ifde‡
TREE_CODE


207 
	`¨m_≥_unique_£˘i⁄
 (
åì
, );

208 
	`¨m_≥_ícode_£˘i⁄_öfo
 (
åì
, 
πx
, );

209 
	`¨m_dŒexp‹t_p
 (
åì
);

210 
	`¨m_dŒimp‹t_p
 (
åì
);

211 
	`¨m_m¨k_dŒexp‹t
 (
åì
);

212 
	`¨m_m¨k_dŒimp‹t
 (
åì
);

215 
	`¨m_¥_l⁄g_ˇŒs
 (
˝p_ªadî
 *);

216 
	`¨m_¥_no_l⁄g_ˇŒs
 (
˝p_ªadî
 *);

217 
	`¨m_¥_l⁄g_ˇŒs_off
 (
˝p_ªadî
 *);

219 
	`¨m_œng_obje˘_©åibuãs_öô
();

221 c⁄° *
	`¨m_m™gÀ_ty≥
 (
c⁄°_åì
);

223 
	`¨m_‹dî_ªgs_f‹_loˇl_Æloc
 ();

225 
	`¨m_max_c⁄dôi⁄Æ_execuã
 ();

228 
	s˝u_vec_co°s
 {

229 c⁄° 
sˇœr_°mt_co°
;

231 c⁄° 
sˇœr_lﬂd_co°
;

232 c⁄° 
sˇœr_°‹e_co°
;

233 c⁄° 
vec_°mt_co°
;

236 c⁄° 
vec_to_sˇœr_co°
;

237 c⁄° 
sˇœr_to_vec_co°
;

238 c⁄° 
vec_Æign_lﬂd_co°
;

239 c⁄° 
vec_u«lign_lﬂd_co°
;

240 c⁄° 
vec_u«lign_°‹e_co°
;

241 c⁄° 
vec_°‹e_co°
;

242 c⁄° 
c⁄d_èkí_bønch_co°
;

244 c⁄° 
c⁄d_nŸ_èkí_bønch_co°
;

248 #ifde‡
RTX_CODE


251 
˝u_co°_èbÀ
;

253 
	stu√_∑øms


255 
	`boﬁ
 (*
πx_co°s
Ë(
πx
, 
RTX_CODE
, RTX_CODE, *, 
boﬁ
);

256 c⁄° 
˝u_co°_èbÀ
 *
ö¢_exåa_co°
;

257 
	`boﬁ
 (*
sched_adju°_co°
Ë(
πx
,Ñtx,Ñtx, *);

258 
c⁄°™t_limô
;

260 
max_ö¢s_skù≥d
;

261 
num_¥e„tch_¶Ÿs
;

262 
l1_ˇche_size
;

263 
l1_ˇche_löe_size
;

264 
boﬁ
 
¥e„r_c⁄°™t_poﬁ
;

265 (*
bønch_co°
Ë(
boﬁ
, bool);

267 
boﬁ
 
¥e„r_ldrd_°rd
;

271 
boﬁ
 
logiˇl_›_n⁄_sh‹t_cúcuô
[2];

273 c⁄° 
˝u_vec_co°s
* 
vec_co°s
;

275 
boﬁ
 
¥e„r_√⁄_f‹_64bôs
;

278 c⁄° 
tu√_∑øms
 *
cuºít_tu√
;

279 
	`vÂ3_c⁄°_doubÀ_f‹_‰a˘_bôs
 (
πx
);

281 
	`vÂ3_c⁄°_doubÀ_f‹_bôs
 (
πx
);

283 
	`¨m_emô_c‹îegs_64bô_shi·
 (
πx_code
, 
πx
,Ñtx,Ñtx,Ñtx,

284 
πx
);

285 
boﬁ
 
	`¨m_vÆidize_com∑ris⁄
 (
πx
 *,Ñtx *,Ñtx *);

288 
	`¨m_ex∑nd_vec_≥rm
 (
πx
 
èrgë
,Ñtx 
›0
,Ñtx 
›1
,Ñtx 
£l
);

289 
boﬁ
 
	`¨m_ex∑nd_vec_≥rm_c⁄°
 (
πx
 
èrgë
,Ñtx 
›0
,Ñtx 
›1
,Ñtx 
£l
);

291 
boﬁ
 
	`¨m_autoöc_modes_ok_p
 (
machöe_mode
, 
¨m_auto_öcmodes
);

293 
	`¨m_emô_óbi_©åibuã
 (const *, , );

296 c⁄° *
	`¨m_ªwrôe_£À˘ed_˝u
 (c⁄° *
«me
);

298 
boﬁ
 
	`¨m_is_c⁄°™t_poﬁ_ªf
 (
πx
);

	@include/config/arm/arm.h

29 #i‚de‡
GCC_ARM_H


30 
	#GCC_ARM_H


	)

35 #ifde‡
GENERATOR_FILE


36 
	#MACHMODE
 

	)

38 
	~"ö¢-modes.h
"

39 
	#MACHMODE
 
machöe_mode


	)

42 
	~"c⁄fig/vxw‹ks-dummy.h
"

45 
¨m_¨ch_«me
[];

48 
	#TARGET_CPU_CPP_BUILTINS
() \

51 i‡(
TARGET_DSP_MULTIPLY
) \

52 
	`buûtö_deföe
 ("__ARM_FEATURE_DSP"); \

53 i‡(
TARGET_ARM_QBIT
) \

54 
	`buûtö_deföe
 ("__ARM_FEATURE_QBIT"); \

55 i‡(
TARGET_ARM_SAT
) \

56 
	`buûtö_deföe
 ("__ARM_FEATURE_SAT"); \

57 i‡(
TARGET_CRYPTO
) \

58 
	`buûtö_deföe
 ("__ARM_FEATURE_CRYPTO"); \

59 i‡(
u«lig√d_ac˚ss
) \

60 
	`buûtö_deföe
 ("__ARM_FEATURE_UNALIGNED"); \

61 i‡(
TARGET_CRC32
) \

62 
	`buûtö_deföe
 ("__ARM_FEATURE_CRC32"); \

63 i‡(
TARGET_32BIT
) \

64 
	`buûtö_deföe
 ("__ARM_32BIT_STATE"); \

65 i‡(
TARGET_ARM_FEATURE_LDREX
) \

66 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

67 "__ARM_FEATURE_LDREX", 
TARGET_ARM_FEATURE_LDREX
); \

68 i‡((
TARGET_ARM_ARCH
 >5 && !
TARGET_THUMB
) \

69 || 
TARGET_ARM_ARCH_ISA_THUMB
 >=2) \

70 
	`buûtö_deföe
 ("__ARM_FEATURE_CLZ"); \

71 i‡(
TARGET_INT_SIMD
) \

72 
	`buûtö_deföe
 ("__ARM_FEATURE_SIMD32"); \

74 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

76 
Êag_sh‹t_íums
 ? 1 : 4); \

77 
	`buûtö_deföe_ty≥_sizeof
 ("__ARM_SIZEOF_WCHAR_T", \

78 
wch¨_ty≥_node
); \

79 i‡(
TARGET_ARM_ARCH_PROFILE
) \

80 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

81 "__ARM_ARCH_PROFILE", 
TARGET_ARM_ARCH_PROFILE
); \

85 
	`buûtö_deföe
 ("__arm__"); \

86 i‡(
TARGET_ARM_ARCH
) \

87 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

88 "__ARM_ARCH", 
TARGET_ARM_ARCH
); \

89 i‡(
¨m_¨ch_nŸm
) \

90 
	`buûtö_deföe
 ("__ARM_ARCH_ISA_ARM"); \

91 
	`buûtö_deföe
 ("__APCS_32__"); \

92 i‡(
TARGET_THUMB
) \

93 
	`buûtö_deföe
 ("__thumb__"); \

94 i‡(
TARGET_THUMB2
) \

95 
	`buûtö_deföe
 ("__thumb2__"); \

96 i‡(
TARGET_ARM_ARCH_ISA_THUMB
) \

97 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

99 
TARGET_ARM_ARCH_ISA_THUMB
); \

101 i‡(
TARGET_BIG_END
) \

103 
	`buûtö_deföe
 ("__ARMEB__"); \

104 
	`buûtö_deföe
 ("__ARM_BIG_ENDIAN"); \

105 i‡(
TARGET_THUMB
) \

106 
	`buûtö_deföe
 ("__THUMBEB__"); \

107 i‡(
TARGET_LITTLE_WORDS
) \

108 
	`buûtö_deföe
 ("__ARMWEL__"); \

112 
	`buûtö_deföe
 ("__ARMEL__"); \

113 i‡(
TARGET_THUMB
) \

114 
	`buûtö_deföe
 ("__THUMBEL__"); \

117 i‡(
TARGET_SOFT_FLOAT
) \

118 
	`buûtö_deföe
 ("__SOFTFP__"); \

120 i‡(
TARGET_VFP
) \

121 
	`buûtö_deföe
 ("__VFP_FP__"); \

123 i‡(
TARGET_ARM_FP
) \

124 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

125 "__ARM_FP", 
TARGET_ARM_FP
); \

126 i‡(
¨m_Â16_f‹m©
 =
ARM_FP16_FORMAT_IEEE
) \

127 
	`buûtö_deföe
 ("__ARM_FP16_FORMAT_IEEE"); \

128 i‡(
¨m_Â16_f‹m©
 =
ARM_FP16_FORMAT_ALTERNATIVE
) \

129 
	`buûtö_deföe
 ("__ARM_FP16_FORMAT_ALTERNATIVE"); \

130 i‡(
TARGET_FMA
) \

131 
	`buûtö_deföe
 ("__ARM_FEATURE_FMA"); \

133 i‡(
TARGET_NEON
) \

135 
	`buûtö_deföe
 ("__ARM_NEON__"); \

136 
	`buûtö_deföe
 ("__ARM_NEON"); \

138 i‡(
TARGET_NEON_FP
) \

139 
	`buûtö_deföe_wôh_öt_vÆue
 ( \

140 "__ARM_NEON_FP", 
TARGET_NEON_FP
); \

144 i‡(
¨m_˝p_öãrw‹k
) \

145 
	`buûtö_deföe
 ("__THUMB_INTERWORK__"); \

147 
	`buûtö_as£π
 ("cpu=arm"); \

148 
	`buûtö_as£π
 ("machine=arm"); \

150 
	`buûtö_deföe
 (
¨m_¨ch_«me
); \

151 i‡(
¨m_¨ch_xsˇÀ
) \

152 
	`buûtö_deföe
 ("__XSCALE__"); \

153 i‡(
¨m_¨ch_iwmmxt
) \

155 
	`buûtö_deföe
 ("__IWMMXT__"); \

156 
	`buûtö_deföe
 ("__ARM_WMMX"); \

158 i‡(
¨m_¨ch_iwmmxt2
) \

159 
	`buûtö_deföe
 ("__IWMMXT2__"); \

160 i‡(
TARGET_AAPCS_BASED
) \

162 i‡(
¨m_pcs_deÁu…
 =
ARM_PCS_AAPCS_VFP
) \

163 
	`buûtö_deföe
 ("__ARM_PCS_VFP"); \

164 i‡(
¨m_pcs_deÁu…
 =
ARM_PCS_AAPCS
) \

165 
	`buûtö_deföe
 ("__ARM_PCS"); \

166 
	`buûtö_deföe
 ("__ARM_EABI__"); \

168 i‡(
TARGET_IDIV
) \

169 
	`buûtö_deföe
 ("__ARM_ARCH_EXT_IDIV__"); \

170 } 0)

	)

172 
	~"c⁄fig/¨m/¨m-›ts.h
"

174 
	eèrgë_˝us


176 
	#ARM_CORE
(
NAME
, 
INTERNAL_IDENT
, 
IDENT
, 
ARCH
, 
FLAGS
, 
COSTS
) \

177 
TARGET_CPU_
##
INTERNAL_IDENT
,

	)

178 
	~"¨m-c‹es.def
"

179 #unde‡
ARM_CORE


180 
	mTARGET_CPU_gíîic


184 
¥o˚ss‹_ty≥
 
¨m_tu√
;

186 
	e¨m_c⁄d_code


188 
	mARM_EQ
 = 0, 
	mARM_NE
, 
	mARM_CS
, 
	mARM_CC
, 
	mARM_MI
, 
	mARM_PL
, 
	mARM_VS
, 
	mARM_VC
,

189 
	mARM_HI
, 
	mARM_LS
, 
	mARM_GE
, 
	mARM_LT
, 
	mARM_GT
, 
	mARM_LE
, 
	mARM_AL
, 
	mARM_NV


191 
	t¨m_cc
;

193 
¨m_cc
 
¨m_cuºít_cc
;

195 
	#ARM_INVERSE_CONDITION_CODE
(
X
Ë((
¨m_cc
Ë((()XË^ 1))

	)

199 #unde‡
MAX_CONDITIONAL_EXECUTE


200 
	#MAX_CONDITIONAL_EXECUTE
 
	`¨m_max_c⁄dôi⁄Æ_execuã
 ()

	)

202 
¨m_èrgë_œbñ
;

203 
¨m_ccfsm_°©e
;

204 
GTY
(()Ë
πx
 
¨m_èrgë_ö¢
;

206 
πx
 
poﬁ_ve˘‹_œbñ
;

209 
ªtu∫_u£d_this_fun˘i⁄
;

211 (*
¨m_œng_ouçut_obje˘_©åibuãs_hook
)();

214 #i‚de‡
TARGET_CPU_DEFAULT


215 
	#TARGET_CPU_DEFAULT
 
TARGET_CPU_gíîic


	)

219 #unde‡
CPP_SPEC


220 
	#CPP_SPEC
 "%(subèrgë_˝p_•ec) \
%{mÊﬂt-abi=so·:%{mÊﬂt-abi=h¨d: \
%e-mÊﬂt-abi=so·ánd -mÊﬂt-abi=h¨d mayÇŸ bêu£dÅogëhî}} \
%{mbig-ídün:%{mlôée-ídün: \
%e-mbig-ídü¿™d -mlôée-ídü¿mayÇŸ bêu£dÅogëhî}}"

	)

226 #i‚de‡
CC1_SPEC


227 
	#CC1_SPEC
 ""

	)

239 
	#EXTRA_SPECS
 \

240 { "subèrgë_˝p_•ec", 
SUBTARGET_CPP_SPEC
 
	}
}, \

241 { "asm_˝u_•ec", 
ASM_CPU_SPEC
 }, \

242 
SUBTARGET_EXTRA_SPECS


	)

244 #i‚de‡
SUBTARGET_EXTRA_SPECS


245 
	#SUBTARGET_EXTRA_SPECS


	)

248 #i‚de‡
SUBTARGET_CPP_SPEC


249 
	#SUBTARGET_CPP_SPEC
 ""

	)

253 
	#TARGET_SOFT_FLOAT
 (
¨m_Êﬂt_abi
 =
ARM_FLOAT_ABI_SOFT
)

	)

255 
	#TARGET_HARD_FLOAT
 (
¨m_Êﬂt_abi
 !
ARM_FLOAT_ABI_SOFT
)

	)

257 
	#TARGET_HARD_FLOAT_ABI
 (
¨m_Êﬂt_abi
 =
ARM_FLOAT_ABI_HARD
)

	)

258 
	#TARGET_VFP
 (
¨m_Âu_desc
->
modñ
 =
ARM_FP_MODEL_VFP
)

	)

259 
	#TARGET_IWMMXT
 (
¨m_¨ch_iwmmxt
)

	)

260 
	#TARGET_IWMMXT2
 (
¨m_¨ch_iwmmxt2
)

	)

261 
	#TARGET_REALLY_IWMMXT
 (
TARGET_IWMMXT
 && 
TARGET_32BIT
)

	)

262 
	#TARGET_REALLY_IWMMXT2
 (
TARGET_IWMMXT2
 && 
TARGET_32BIT
)

	)

263 
	#TARGET_IWMMXT_ABI
 (
TARGET_32BIT
 && 
¨m_abi
 =
ARM_ABI_IWMMXT
)

	)

264 
	#TARGET_ARM
 (! 
TARGET_THUMB
)

	)

265 
	#TARGET_EITHER
 1

	)

266 
	#TARGET_BACKTRACE
 (
	`Àaf_fun˘i⁄_p
 () \

267 ? 
TARGET_TPCS_LEAF_FRAME
 \

268 : 
TARGET_TPCS_FRAME
)

	)

269 
	#TARGET_AAPCS_BASED
 \

270 (
¨m_abi
 !
ARM_ABI_APCS
 &&árm_abò!
ARM_ABI_ATPCS
)

	)

272 
	#TARGET_HARD_TP
 (
èrgë_thªad_poöãr
 =
TP_CP15
)

	)

273 
	#TARGET_SOFT_TP
 (
èrgë_thªad_poöãr
 =
TP_SOFT
)

	)

274 
	#TARGET_GNU2_TLS
 (
èrgë_és_düÀ˘
 =
TLS_GNU2
)

	)

277 
	#TARGET_THUMB1
 (
TARGET_THUMB
 && !
¨m_¨ch_thumb2
)

	)

279 
	#TARGET_32BIT
 (
TARGET_ARM
 || 
¨m_¨ch_thumb2
)

	)

281 
	#TARGET_THUMB2
 (
TARGET_THUMB
 && 
¨m_¨ch_thumb2
)

	)

283 
	#TARGET_THUMB1_ONLY
 (
TARGET_THUMB1
 && !
¨m_¨ch_nŸm
)

	)

285 
	#TARGET_LDRD
 (
¨m_¨ch5e
 && 
ARM_DOUBLEWORD_ALIGN
 \

286 && !
TARGET_THUMB1
)

	)

288 
	#TARGET_CRC32
 (
¨m_¨ch_¸c
)

	)

296 
	#TARGET_VFPD32
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªgs
 =
VFP_REG_D32
)

	)

299 
	#TARGET_VFP3
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªv
 >3)

	)

302 
	#TARGET_VFP5
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªv
 >5)

	)

305 
	#TARGET_VFP_SINGLE
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªgs
 =
VFP_REG_SINGLE
)

	)

308 
	#TARGET_VFP_DOUBLE
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªgs
 !
VFP_REG_SINGLE
)

	)

311 
	#TARGET_NEON_FP16
 \

312 (
TARGET_VFP
 && 
¨m_Âu_desc
->
√⁄
 &&árm_Âu_desc->
Â16
)

	)

315 
	#TARGET_FP16
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
Â16
)

	)

318 
	#TARGET_FMA
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªv
 >4)

	)

321 
	#TARGET_FPU_ARMV8
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
ªv
 >8)

	)

324 
	#TARGET_CRYPTO
 (
TARGET_VFP
 && 
¨m_Âu_desc
->
¸y±o
)

	)

330 
	#TARGET_NEON
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 \

331 && 
TARGET_VFP
 && 
¨m_Âu_desc
->
√⁄
)

	)

334 
	#TARGET_ARM_QBIT
 \

335 (
TARGET_32BIT
 && 
¨m_¨ch5e
 && (
¨m_¨ch_nŸm
 || 
¨m_¨ch7
))

	)

337 
	#TARGET_ARM_SAT
 \

338 (
TARGET_32BIT
 && 
¨m_¨ch6
 && (
¨m_¨ch_nŸm
 || 
¨m_¨ch7
))

	)

340 
	#TARGET_DSP_MULTIPLY
 \

341 (
TARGET_32BIT
 && 
¨m_¨ch5e
 && (
¨m_¨ch_nŸm
 || 
¨m_¨ch7em
))

	)

343 
	#TARGET_INT_SIMD
 \

344 (
TARGET_32BIT
 && 
¨m_¨ch6
 && (
¨m_¨ch_nŸm
 || 
¨m_¨ch7em
))

	)

347 
	#TARGET_USE_MOVT
 \

348 (
¨m_¨ch_thumb2
 \

349 && (
¨m_dißbÀ_lôîÆ_poﬁ
 \

350 || (!
›timize_size
 && !
cuºít_tu√
->
¥e„r_c⁄°™t_poﬁ
)))

	)

354 
	#TARGET_UNIFIED_ASM
 
TARGET_THUMB2


	)

357 
	#TARGET_HAVE_DMB
 (
¨m_¨ch6m
 || 
¨m_¨ch7
)

	)

360 
	#TARGET_HAVE_DMB_MCR
 (
¨m_¨ch6
 && ! 
TARGET_HAVE_DMB
 \

361 && ! 
TARGET_THUMB1
)

	)

364 
	#TARGET_HAVE_MEMORY_BARRIER
 (
TARGET_HAVE_DMB
 || 
TARGET_HAVE_DMB_MCR
)

	)

367 
	#TARGET_HAVE_LDREX
 ((
¨m_¨ch6
 && 
TARGET_ARM
Ë|| 
¨m_¨ch7
)

	)

370 
	#TARGET_HAVE_LDREXBH
 ((
¨m_¨ch6k
 && 
TARGET_ARM
Ë|| 
¨m_¨ch7
)

	)

373 
	#TARGET_HAVE_LDREXD
 (((
¨m_¨ch6k
 && 
TARGET_ARM
Ë|| 
¨m_¨ch7
) \

374 && 
¨m_¨ch_nŸm
)

	)

377 
	#TARGET_HAVE_LDACQ
 (
TARGET_ARM_ARCH
 >8)

	)

380 
	#TARGET_IDIV
 ((
TARGET_ARM
 && 
¨m_¨ch_¨m_hwdiv
) \

381 || (
TARGET_THUMB2
 && 
¨m_¨ch_thumb_hwdiv
))

	)

384 
	#TARGET_NO_VOLATILE_CE
 (
¨m_¨ch_no_vﬁ©ûe_˚
)

	)

387 
	#TARGET_PREFER_NEON_64BITS
 (
¥e„r_√⁄_f‹_64bôs
)

	)

393 #i‚de‡
TARGET_BPABI


394 
	#TARGET_BPABI
 
Ál£


	)

407 
	#OPTION_DEFAULT_SPECS
 \

415 {"és", "%{!més-düÀ˘=*:-més-düÀ˘=%(VALUE)}"},

	)

418 
	e¨m_Â_modñ


420 
	mARM_FP_MODEL_UNKNOWN
,

422 
	mARM_FP_MODEL_VFP


425 
	evÂ_ªg_ty≥


427 
	mVFP_NONE
 = 0,

428 
	mVFP_REG_D16
,

429 
	mVFP_REG_D32
,

430 
	mVFP_REG_SINGLE


433 c⁄° 
	s¨m_Âu_desc


435 c⁄° *
«me
;

436 
¨m_Â_modñ
 
modñ
;

437 
ªv
;

438 
vÂ_ªg_ty≥
 
ªgs
;

439 
√⁄
;

440 
Â16
;

441 
¸y±o
;

442 } *
¨m_Âu_desc
;

445 
¨m_Âu_©å
;

447 #i‚de‡
TARGET_DEFAULT_FLOAT_ABI


448 
	#TARGET_DEFAULT_FLOAT_ABI
 
ARM_FLOAT_ABI_SOFT


	)

451 
	#LARGEST_EXPONENT_IS_NORMAL
(
bôs
) \

452 ((
bôs
Ë=16 && 
¨m_Â16_f‹m©
 =
ARM_FP16_FORMAT_ALTERNATIVE
)

	)

454 #i‚de‡
ARM_DEFAULT_ABI


455 
	#ARM_DEFAULT_ABI
 
ARM_ABI_APCS


	)

461 
	eba£_¨chôe˘uª


463 
	mBASE_ARCH_0
 = 0,

464 
	mBASE_ARCH_2
 = 2,

465 
	mBASE_ARCH_3
 = 3,

466 
	mBASE_ARCH_3M
 = 3,

467 
	mBASE_ARCH_4
 = 4,

468 
	mBASE_ARCH_4T
 = 4,

469 
	mBASE_ARCH_5
 = 5,

470 
	mBASE_ARCH_5E
 = 5,

471 
	mBASE_ARCH_5T
 = 5,

472 
	mBASE_ARCH_5TE
 = 5,

473 
	mBASE_ARCH_5TEJ
 = 5,

474 
	mBASE_ARCH_6
 = 6,

475 
	mBASE_ARCH_6J
 = 6,

476 
	mBASE_ARCH_6ZK
 = 6,

477 
	mBASE_ARCH_6K
 = 6,

478 
	mBASE_ARCH_6T2
 = 6,

479 
	mBASE_ARCH_6M
 = 6,

480 
	mBASE_ARCH_6Z
 = 6,

481 
	mBASE_ARCH_7
 = 7,

482 
	mBASE_ARCH_7A
 = 7,

483 
	mBASE_ARCH_7R
 = 7,

484 
	mBASE_ARCH_7M
 = 7,

485 
	mBASE_ARCH_7EM
 = 7,

486 
	mBASE_ARCH_8A
 = 8

490 
ba£_¨chôe˘uª
 
¨m_ba£_¨ch
;

493 
¨m_¨ch3m
;

496 
¨m_¨ch4
;

499 
¨m_¨ch4t
;

502 
¨m_¨ch5
;

505 
¨m_¨ch5e
;

508 
¨m_¨ch6
;

511 
¨m_¨ch6k
;

514 
¨m_¨ch6m
;

517 
¨m_¨ch7
;

520 
¨m_¨ch_nŸm
;

523 
¨m_¨ch7em
;

526 
¨m_¨ch8
;

529 
¨m_ld_sched
;

532 
thumb_code
;

535 
thumb1_code
;

538 
¨m_tu√_°r⁄g¨m
;

541 
¨m_¨ch_iwmmxt
;

544 
¨m_¨ch_iwmmxt2
;

547 
¨m_¨ch_xsˇÀ
;

550 
¨m_tu√_xsˇÀ
;

553 
¨m_tu√_wbuf
;

556 
¨m_tu√_c‹ãx_a9
;

563 
¨m_˝p_öãrw‹k
;

566 
¨m_¨ch_thumb2
;

569 
¨m_¨ch_¨m_hwdiv
;

572 
¨m_¨ch_thumb_hwdiv
;

575 
¨m_¨ch_no_vﬁ©ûe_˚
;

579 
¥e„r_√⁄_f‹_64bôs
;

582 #i‚de‡
USED_FOR_TARGET


583 
boﬁ
 
¨m_dißbÀ_lôîÆ_poﬁ
;

587 
¨m_¨ch_¸c
;

589 #i‚de‡
TARGET_DEFAULT


590 
	#TARGET_DEFAULT
 (
MASK_APCS_FRAME
)

	)

596 #i‚de‡
NEED_GOT_RELOC


597 
	#NEED_GOT_RELOC
 0

	)

599 #i‚de‡
NEED_PLT_RELOC


600 
	#NEED_PLT_RELOC
 0

	)

603 #i‚de‡
TARGET_DEFAULT_PIC_DATA_IS_TEXT_RELATIVE


604 
	#TARGET_DEFAULT_PIC_DATA_IS_TEXT_RELATIVE
 1

	)

618 #i‚de‡
GOT_PCREL


619 
	#GOT_PCREL
 1

	)

633 
	#PROMOTE_MODE
(
MODE
, 
UNSIGNEDP
, 
TYPE
) \

634 i‡(
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_INT
 \

635 && 
	`GET_MODE_SIZE
 (
MODE
) < 4) \

637 i‡(
MODE
 =
QImode
) \

638 
UNSIGNEDP
 = 1; \

639 i‡(
MODE
 =
HImode
) \

640 
UNSIGNEDP
 = 1; \

641 (
MODE
Ë
SImode
; \

642 }

	)

646 
	#BITS_BIG_ENDIAN
 0

	)

652 
	#BYTES_BIG_ENDIAN
 (
TARGET_BIG_END
 !0)

	)

657 
	#WORDS_BIG_ENDIAN
 (
BYTES_BIG_ENDIAN
 && ! 
TARGET_LITTLE_WORDS
)

	)

659 
	#UNITS_PER_WORD
 4

	)

662 
	#ARM_DOUBLEWORD_ALIGN
 
TARGET_AAPCS_BASED


	)

664 
	#DOUBLEWORD_ALIGNMENT
 64

	)

666 
	#PARM_BOUNDARY
 32

	)

668 
	#STACK_BOUNDARY
 (
ARM_DOUBLEWORD_ALIGN
 ? 
DOUBLEWORD_ALIGNMENT
 : 32)

	)

670 
	#PREFERRED_STACK_BOUNDARY
 \

671 (
¨m_abi
 =
ARM_ABI_ATPCS
 ? 64 : 
STACK_BOUNDARY
)

	)

673 
	#FUNCTION_BOUNDARY
 ((
TARGET_THUMB
 && 
›timize_size
Ë? 16 : 32)

	)

678 
	#TARGET_PTRMEMFUNC_VBIT_LOCATION
 
±rmemfunc_vbô_ö_dñè


	)

680 
	#EMPTY_FIELD_BOUNDARY
 32

	)

682 
	#BIGGEST_ALIGNMENT
 (
ARM_DOUBLEWORD_ALIGN
 ? 
DOUBLEWORD_ALIGNMENT
 : 32)

	)

684 
	#MALLOC_ABI_ALIGNMENT
 
BIGGEST_ALIGNMENT


	)

689 #ifde‡
IN_TARGET_LIBS


690 
	#BIGGEST_FIELD_ALIGNMENT
 64

	)

694 
	#CONSTANT_ALIGNMENT_FACTOR
 (
TARGET_THUMB
 || ! 
¨m_tu√_xsˇÀ
 ? 1 : 2)

	)

696 
	#CONSTANT_ALIGNMENT
(
EXP
, 
ALIGN
) \

697 ((
	`TREE_CODE
 (
EXP
Ë=
STRING_CST
 \

698 && !
›timize_size
 \

699 && (
ALIGN
Ë< 
BITS_PER_WORD
 * 
CONSTANT_ALIGNMENT_FACTOR
) \

700 ? 
BITS_PER_WORD
 * 
CONSTANT_ALIGNMENT_FACTOR
 : (
ALIGN
))

	)

707 
	#ARM_EXPAND_ALIGNMENT
(
COND
, 
EXP
, 
ALIGN
) \

708 (((
COND
Ë&& ((
ALIGN
Ë< 
BITS_PER_WORD
) \

709 && (
	`TREE_CODE
 (
EXP
Ë=
ARRAY_TYPE
 \

710 || 
	`TREE_CODE
 (
EXP
Ë=
UNION_TYPE
 \

711 || 
	`TREE_CODE
 (
EXP
Ë=
RECORD_TYPE
)Ë? 
BITS_PER_WORD
 : (
ALIGN
))

	)

714 
	#DATA_ALIGNMENT
(
EXP
, 
ALIGN
) \

715 
	`ARM_EXPAND_ALIGNMENT
(!
›timize_size
, 
EXP
, 
ALIGN
)

	)

718 
	#LOCAL_ALIGNMENT
(
EXP
, 
ALIGN
) \

719 
	`ARM_EXPAND_ALIGNMENT
(!
Êag_c⁄£rve_°ack
, 
EXP
, 
ALIGN
)

	)

728 
	#STRUCTURE_SIZE_BOUNDARY
 
¨m_°ru˘uª_size_bound¨y


	)

734 #i‚de‡
DEFAULT_STRUCTURE_SIZE_BOUNDARY


735 
	#DEFAULT_STRUCTURE_SIZE_BOUNDARY
 32

	)

740 
	#STRICT_ALIGNMENT
 1

	)

743 #i‚de‡
WCHAR_TYPE


744 
	#WCHAR_TYPE
 (
TARGET_AAPCS_BASED
 ? "unsig√d i¡" : "öt")

	)

746 
	#WCHAR_TYPE_SIZE
 
BITS_PER_WORD


	)

751 
	#SHORT_FRACT_TYPE_SIZE
 8

	)

752 
	#FRACT_TYPE_SIZE
 16

	)

753 
	#LONG_FRACT_TYPE_SIZE
 32

	)

754 
	#LONG_LONG_FRACT_TYPE_SIZE
 64

	)

756 
	#SHORT_ACCUM_TYPE_SIZE
 16

	)

757 
	#ACCUM_TYPE_SIZE
 32

	)

758 
	#LONG_ACCUM_TYPE_SIZE
 64

	)

759 
	#LONG_LONG_ACCUM_TYPE_SIZE
 64

	)

761 
	#MAX_FIXED_MODE_SIZE
 64

	)

763 #i‚de‡
SIZE_TYPE


764 
	#SIZE_TYPE
 (
TARGET_AAPCS_BASED
 ? "unsig√d i¡" : "l⁄g unsig√d i¡")

	)

767 #i‚de‡
PTRDIFF_TYPE


768 
	#PTRDIFF_TYPE
 (
TARGET_AAPCS_BASED
 ? "öt" : "l⁄g i¡")

	)

772 #i‚de‡
PCC_BITFIELD_TYPE_MATTERS


773 
	#PCC_BITFIELD_TYPE_MATTERS
 
TARGET_AAPCS_BASED


	)

833 
	#FIXED_REGISTERS
 \

853 }

	)

863 
	#CALL_USED_REGISTERS
 \

883 }

	)

885 #i‚de‡
SUBTARGET_CONDITIONAL_REGISTER_USAGE


886 
	#SUBTARGET_CONDITIONAL_REGISTER_USAGE


	)

893 
	#ASM_FPRINTF_EXTENSIONS
(
FILE
, 
ARGS
, 
P
) \

895 
	`Âuts
 (
ASM_COMMENT_START
, 
FILE
); \

899 
	`Âuts
 (
REGISTER_PREFIX
, 
FILE
); \

900 
	`Âuts
 (
ªg_«mes
 [
	`va_¨g
 (
ARGS
, )], 
FILE
); \

901 ;

	)

904 
	#ROUND_UP_WORD
(
X
Ë(((XË+ 3Ë& ~3)

	)

907 
	#ARM_NUM_INTS
(
X
Ë(((XË+ 
UNITS_PER_WORD
 - 1Ë/ UNITS_PER_WORD)

	)

911 
	#ARM_NUM_REGS
(
MODE
) \

912 
	`ARM_NUM_INTS
 (
	`GET_MODE_SIZE
 (
MODE
))

	)

915 
	#ARM_NUM_REGS2
(
MODE
, 
TYPE
) \

916 
	`ARM_NUM_INTS
 ((
MODE
Ë=
BLKmode
 ? \

917 
	`öt_size_ö_byãs
 (
TYPE
Ë: 
	`GET_MODE_SIZE
 (
MODE
))

	)

920 
	#NUM_ARG_REGS
 4

	)

923 
	#NUM_VFP_ARG_REGS
 16

	)

926 
	#ARG_REGISTER
(
N
Ë(N - 1)

	)

932 
	#LAST_ARG_REGNUM
 
	`ARG_REGISTER
 (
NUM_ARG_REGS
)

	)

935 
	#FIRST_LO_REGNUM
 0

	)

936 
	#LAST_LO_REGNUM
 7

	)

937 
	#FIRST_HI_REGNUM
 8

	)

938 
	#LAST_HI_REGNUM
 11

	)

941 #i‚de‡
ARM_UNWIND_INFO


942 
	#ARM_UNWIND_INFO
 0

	)

946 
	#EH_RETURN_DATA_REGNO
(
N
Ë(((NË< 2Ë? N : 
INVALID_REGNUM
)

	)

949 
	#ARM_EH_STACKADJ_REGNUM
 2

	)

950 
	#EH_RETURN_STACKADJ_RTX
 
	`gí_πx_REG
 (
SImode
, 
ARM_EH_STACKADJ_REGNUM
)

	)

952 #i‚de‡
ARM_TARGET2_DWARF_FORMAT


953 
	#ARM_TARGET2_DWARF_FORMAT
 
DW_EH_PE_p¸ñ


	)

958 
	#ASM_PREFERRED_EH_DATA_FORMAT
(
code
, 
d©a
) \

959 (((
code
Ë=0 && (
d©a
Ë=1 && 
ARM_UNWIND_INFO
Ë? 
ARM_TARGET2_DWARF_FORMAT
 \

960 : 
DW_EH_PE_ab•å
)

	)

965 
	#STATIC_CHAIN_REGNUM
 12

	)

983 
	#ARM_HARD_FRAME_POINTER_REGNUM
 11

	)

984 
	#THUMB_HARD_FRAME_POINTER_REGNUM
 7

	)

986 
	#HARD_FRAME_POINTER_REGNUM
 \

987 (
TARGET_ARM
 \

988 ? 
ARM_HARD_FRAME_POINTER_REGNUM
 \

989 : 
THUMB_HARD_FRAME_POINTER_REGNUM
)

	)

991 
	#HARD_FRAME_POINTER_IS_FRAME_POINTER
 0

	)

992 
	#HARD_FRAME_POINTER_IS_ARG_POINTER
 0

	)

994 
	#FP_REGNUM
 
HARD_FRAME_POINTER_REGNUM


	)

997 
	#STACK_POINTER_REGNUM
 
SP_REGNUM


	)

999 
	#FIRST_IWMMXT_REGNUM
 (
LAST_HI_VFP_REGNUM
 + 1)

	)

1000 
	#LAST_IWMMXT_REGNUM
 (
FIRST_IWMMXT_REGNUM
 + 15)

	)

1003 
	#FIRST_IWMMXT_GR_REGNUM
 (
LAST_IWMMXT_REGNUM
 + 1)

	)

1004 
	#LAST_IWMMXT_GR_REGNUM
 (
FIRST_IWMMXT_GR_REGNUM
 + 3)

	)

1006 
	#IS_IWMMXT_REGNUM
(
REGNUM
) \

1007 (((
REGNUM
Ë>
FIRST_IWMMXT_REGNUM
Ë&& ((REGNUMË<
LAST_IWMMXT_REGNUM
))

	)

1008 
	#IS_IWMMXT_GR_REGNUM
(
REGNUM
) \

1009 (((
REGNUM
Ë>
FIRST_IWMMXT_GR_REGNUM
Ë&& ((REGNUMË<
LAST_IWMMXT_GR_REGNUM
))

	)

1012 
	#FRAME_POINTER_REGNUM
 102

	)

1015 
	#ARG_POINTER_REGNUM
 103

	)

1017 
	#FIRST_VFP_REGNUM
 16

	)

1018 
	#D7_VFP_REGNUM
 (
FIRST_VFP_REGNUM
 + 15)

	)

1019 
	#LAST_VFP_REGNUM
 \

1020 (
TARGET_VFPD32
 ? 
LAST_HI_VFP_REGNUM
 : 
LAST_LO_VFP_REGNUM
)

	)

1022 
	#IS_VFP_REGNUM
(
REGNUM
) \

1023 (((
REGNUM
Ë>
FIRST_VFP_REGNUM
Ë&& ((REGNUMË<
LAST_VFP_REGNUM
))

	)

1031 
	#LAST_LO_VFP_REGNUM
 (
FIRST_VFP_REGNUM
 + 31)

	)

1032 
	#FIRST_HI_VFP_REGNUM
 (
LAST_LO_VFP_REGNUM
 + 1)

	)

1033 
	#LAST_HI_VFP_REGNUM
 (
FIRST_HI_VFP_REGNUM
 + 31)

	)

1035 
	#VFP_REGNO_OK_FOR_SINGLE
(
REGNUM
) \

1036 ((
REGNUM
Ë<
LAST_LO_VFP_REGNUM
)

	)

1039 
	#VFP_REGNO_OK_FOR_DOUBLE
(
REGNUM
) \

1040 ((((
REGNUM
Ë- 
FIRST_VFP_REGNUM
Ë& 1Ë=0)

	)

1043 
	#NEON_REGNO_OK_FOR_QUAD
(
REGNUM
) \

1044 ((((
REGNUM
Ë- 
FIRST_VFP_REGNUM
Ë& 3Ë=0)

	)

1050 
	#NEON_REGNO_OK_FOR_NREGS
(
REGNUM
, 
N
) \

1051 ((((
REGNUM
Ë- 
FIRST_VFP_REGNUM
) & 3) == 0 \

1052 && (
LAST_VFP_REGNUM
 - (
REGNUM
Ë>2 * (
N
Ë- 1))

	)

1057 
	#FIRST_PSEUDO_REGISTER
 104

	)

1059 
	#DBX_REGISTER_NUMBER
(
REGNO
Ë
	`¨m_dbx_ªgi°î_numbî
 (REGNO)

	)

1068 #i‚de‡
SUBTARGET_FRAME_POINTER_REQUIRED


1069 
	#SUBTARGET_FRAME_POINTER_REQUIRED
 0

	)

1078 
	#HARD_REGNO_NREGS
(
REGNO
, 
MODE
) \

1079 ((
TARGET_32BIT
 \

1080 && 
REGNO
 > 
PC_REGNUM
 \

1081 && 
REGNO
 !
FRAME_POINTER_REGNUM
 \

1082 && 
REGNO
 !
ARG_POINTER_REGNUM
) \

1083 && !
	`IS_VFP_REGNUM
 (
REGNO
) \

1084 ? 1 : 
	`ARM_NUM_REGS
 (
MODE
))

	)

1087 
	#HARD_REGNO_MODE_OK
(
REGNO
, 
MODE
) \

1088 
	`¨m_h¨d_ªgno_mode_ok
 ((
REGNO
), (
MODE
))

	)

1090 
	#MODES_TIEABLE_P
(
MODE1
, 
MODE2
Ë
	`¨m_modes_tõabÀ_p
 (MODE1, MODE2)

	)

1092 
	#VALID_IWMMXT_REG_MODE
(
MODE
) \

1093 (
	`¨m_ve˘‹_mode_suµ‹ãd_p
 (
MODE
Ë|| (MODEË=
DImode
)

	)

1096 
	#VALID_NEON_DREG_MODE
(
MODE
) \

1097 ((
MODE
Ë=
V2SImode
 || (MODEË=
V4HImode
 || (MODEË=
V8QImode
 \

1098 || (
MODE
Ë=
V4HFmode
 || (MODEË=
V2SFmode
 || (MODEË=
DImode
)

	)

1101 
	#VALID_NEON_QREG_MODE
(
MODE
) \

1102 ((
MODE
Ë=
V4SImode
 || (MODEË=
V8HImode
 || (MODEË=
V16QImode
 \

1103 || (
MODE
Ë=
V4SFmode
 || (MODEË=
V2DImode
)

	)

1106 
	#VALID_NEON_STRUCT_MODE
(
MODE
) \

1107 ((
MODE
Ë=
TImode
 || (MODEË=
EImode
 || (MODEË=
OImode
 \

1108 || (
MODE
Ë=
CImode
 || (MODEË=
XImode
)

	)

1111 
¨m_ªgs_ö_£quí˚
[];

1124 
	#VREG
(
X
Ë(
FIRST_VFP_REGNUM
 + (X))

	)

1125 
	#WREG
(
X
Ë(
FIRST_IWMMXT_REGNUM
 + (X))

	)

1126 
	#WGREG
(
X
Ë(
FIRST_IWMMXT_GR_REGNUM
 + (X))

	)

1128 
	#REG_ALLOC_ORDER
 \

1134 
	`VREG
(32), VREG(33), VREG(34), VREG(35), \

1135 
	`VREG
(36), VREG(37), VREG(38), VREG(39), \

1136 
	`VREG
(40), VREG(41), VREG(42), VREG(43), \

1137 
	`VREG
(44), VREG(45), VREG(46), VREG(47), \

1138 
	`VREG
(48), VREG(49), VREG(50), VREG(51), \

1139 
	`VREG
(52), VREG(53), VREG(54), VREG(55), \

1140 
	`VREG
(56), VREG(57), VREG(58), VREG(59), \

1141 
	`VREG
(60), VREG(61), VREG(62), VREG(63), \

1143 
	`VREG
(15), VREG(14), VREG(13), VREG(12), \

1144 
	`VREG
(11), VREG(10), VREG(9), VREG(8), \

1145 
	`VREG
(7), VREG(6), VREG(5), VREG(4), \

1146 
	`VREG
(3), VREG(2), VREG(1), VREG(0), \

1148 
	`VREG
(16), VREG(17), VREG(18), VREG(19), \

1149 
	`VREG
(20), VREG(21), VREG(22), VREG(23), \

1150 
	`VREG
(24), VREG(25), VREG(26), VREG(27), \

1151 
	`VREG
(28), VREG(29), VREG(30), VREG(31), \

1153 
	`WREG
(0), WREG(1), WREG(2), WREG(3), \

1154 
	`WREG
(4), WREG(5), WREG(6), WREG(7), \

1155 
	`WREG
(8), WREG(9), WREG(10), WREG(11), \

1156 
	`WREG
(12), WREG(13), WREG(14), WREG(15), \

1157 
	`WGREG
(0), WGREG(1), WGREG(2), WGREG(3), \

1159 
CC_REGNUM
, 
VFPCC_REGNUM
, \

1160 
FRAME_POINTER_REGNUM
, 
ARG_POINTER_REGNUM
, \

1161 
SP_REGNUM
, 
PC_REGNUM
 \

1162 }

	)

1165 
	#ADJUST_REG_ALLOC_ORDER
 
	`¨m_‹dî_ªgs_f‹_loˇl_Æloc
 ()

	)

1169 
	#HONOR_REG_ALLOC_ORDER


	)

1174 
	#HARD_REGNO_RENAME_OK
(
SRC
, 
DST
) \

1175 (! 
	`IS_INTERRUPT
 (
cfun
->
machöe
->
func_ty≥
) || \

1176 
	`df_ªgs_evî_live_p
 (
DST
))

	)

1181 
	eªg_˛ass


1183 
	mNO_REGS
,

1184 
	mLO_REGS
,

1185 
	mSTACK_REG
,

1186 
	mBASE_REGS
,

1187 
	mHI_REGS
,

1188 
	mCALLER_SAVE_REGS
,

1189 
	mGENERAL_REGS
,

1190 
	mCORE_REGS
,

1191 
	mVFP_D0_D7_REGS
,

1192 
	mVFP_LO_REGS
,

1193 
	mVFP_HI_REGS
,

1194 
	mVFP_REGS
,

1195 
	mIWMMXT_REGS
,

1196 
	mIWMMXT_GR_REGS
,

1197 
	mCC_REG
,

1198 
	mVFPCC_REG
,

1199 
	mSFP_REG
,

1200 
	mAFP_REG
,

1201 
	mALL_REGS
,

1202 
	mLIM_REG_CLASSES


1205 
	#N_REG_CLASSES
 (Ë
LIM_REG_CLASSES


	)

1208 
	#REG_CLASS_NAMES
 \

1229 }

	)

1234 
	#REG_CLASS_CONTENTS
 \

1255 }

	)

1258 
	#IS_VFP_CLASS
(
X
) \

1259 ((
X
Ë=
VFP_D0_D7_REGS
 || (XË=
VFP_LO_REGS
 \

1260 || (
X
Ë=
VFP_HI_REGS
 || (XË=
VFP_REGS
)

	)

1266 
	#REGNO_REG_CLASS
(
REGNO
Ë
	`¨m_ªgno_˛ass
 (REGNO)

	)

1278 
	#CANNOT_CHANGE_MODE_CLASS
(
FROM
, 
TO
, 
CLASS
) \

1279 (
TARGET_VFP
 && 
TARGET_BIG_END
 \

1280 && !(
	`GET_MODE_SIZE
 (
FROM
Ë=16 && GET_MODE_SIZE (
TO
) == 8) \

1281 && (
	`GET_MODE_SIZE
 (
FROM
Ë> 
UNITS_PER_WORD
 \

1282 || 
	`GET_MODE_SIZE
 (
TO
Ë> 
UNITS_PER_WORD
) \

1283 && 
	`ªg_˛as£s_öãr£˘_p
 (
VFP_REGS
, (
CLASS
)))

	)

1286 
	#INDEX_REG_CLASS
 (
TARGET_THUMB1
 ? 
LO_REGS
 : 
GENERAL_REGS
)

	)

1287 
	#BASE_REG_CLASS
 (
TARGET_THUMB1
 ? 
LO_REGS
 : 
CORE_REGS
)

	)

1292 
	#MODE_BASE_REG_CLASS
(
MODE
) \

1293 (
¨m_Ãa_Êag
 \

1294 ? (
TARGET_32BIT
 ? 
CORE_REGS
 \

1295 : 
	`GET_MODE_SIZE
 (
MODE
Ë>4 ? 
BASE_REGS
 \

1296 : 
LO_REGS
) \

1297 : ((
TARGET_ARM
 || (
TARGET_THUMB2
 && !
›timize_size
)Ë? 
CORE_REGS
 \

1298 : ((
MODE
Ë=
SImode
Ë? 
BASE_REGS
 \

1299 : 
LO_REGS
))

	)

1303 
	#MODE_BASE_REG_REG_CLASS
(
MODE
Ë
BASE_REG_CLASS


	)

1309 
	#TARGET_SMALL_REGISTER_CLASSES_FOR_MODE_P
 \

1310 
¨m_smÆl_ªgi°î_˛as£s_f‹_mode_p


	)

1313 
	#THUMB_SECONDARY_INPUT_RELOAD_CLASS
(
CLASS
, 
MODE
, 
X
) \

1314 (
Ãa_ö_¥ogªss
 ? 
NO_REGS
 \

1315 : ((
CLASS
Ë!
LO_REGS
 && (CLASSË!
BASE_REGS
 \

1316 ? ((
	`åue_ªgnum
 (
X
Ë=-1 ? 
LO_REGS
 \

1317 : (
	`åue_ªgnum
 (
X
Ë+ 
	`HARD_REGNO_NREGS
 (0, 
MODE
Ë> 8Ë? 
LO_REGS
 \

1318 : 
NO_REGS
)) \

1319 : 
NO_REGS
))

	)

1321 
	#THUMB_SECONDARY_OUTPUT_RELOAD_CLASS
(
CLASS
, 
MODE
, 
X
) \

1322 (
Ãa_ö_¥ogªss
 ? 
NO_REGS
 \

1323 : (
CLASS
Ë!
LO_REGS
 && (CLASSË!
BASE_REGS
 \

1324 ? ((
	`åue_ªgnum
 (
X
Ë=-1 ? 
LO_REGS
 \

1325 : (
	`åue_ªgnum
 (
X
Ë+ 
	`HARD_REGNO_NREGS
 (0, 
MODE
Ë> 8Ë? 
LO_REGS
 \

1326 : 
NO_REGS
)) \

1327 : 
NO_REGS
)

	)

1332 
	#SECONDARY_OUTPUT_RELOAD_CLASS
(
CLASS
, 
MODE
, 
X
) \

1334 ((
TARGET_VFP
 && 
TARGET_HARD_FLOAT
 \

1335 && 
	`IS_VFP_CLASS
 (
CLASS
)) \

1336 ? 
	`c›roc_£c⁄d¨y_ªlﬂd_˛ass
 (
MODE
, 
X
, 
FALSE
) \

1337 : (
TARGET_IWMMXT
 && (
CLASS
Ë=
IWMMXT_REGS
) \

1338 ? 
	`c›roc_£c⁄d¨y_ªlﬂd_˛ass
 (
MODE
, 
X
, 
TRUE
) \

1339 : 
TARGET_32BIT
 \

1340 ? (((
MODE
Ë=
HImode
 && ! 
¨m_¨ch4
 && 
	`åue_ªgnum
 (
X
) == -1) \

1341 ? 
GENERAL_REGS
 : 
NO_REGS
) \

1342 : 
	`THUMB_SECONDARY_OUTPUT_RELOAD_CLASS
 (
CLASS
, 
MODE
, 
X
))

	)

1345 
	#SECONDARY_INPUT_RELOAD_CLASS
(
CLASS
, 
MODE
, 
X
) \

1347 ((
TARGET_VFP
 && 
TARGET_HARD_FLOAT
 \

1348 && 
	`IS_VFP_CLASS
 (
CLASS
)) \

1349 ? 
	`c›roc_£c⁄d¨y_ªlﬂd_˛ass
 (
MODE
, 
X
, 
FALSE
) : \

1350 (
TARGET_IWMMXT
 && (
CLASS
Ë=
IWMMXT_REGS
) ? \

1351 
	`c›roc_£c⁄d¨y_ªlﬂd_˛ass
 (
MODE
, 
X
, 
TRUE
) : \

1352 (
TARGET_32BIT
 ? \

1353 (((
CLASS
Ë=
IWMMXT_REGS
 || (CLASSË=
IWMMXT_GR_REGS
) \

1354 && 
	`CONSTANT_P
 (
X
)) \

1355 ? 
GENERAL_REGS
 : \

1356 (((
MODE
Ë=
HImode
 && ! 
¨m_¨ch4
 \

1357 && (
	`MEM_P
 (
X
) \

1358 || ((
	`REG_P
 (
X
Ë|| 
	`GET_CODE
 (XË=
SUBREG
) \

1359 && 
	`åue_ªgnum
 (
X
) == -1))) \

1360 ? 
GENERAL_REGS
 : 
NO_REGS
) \

1361 : 
	`THUMB_SECONDARY_INPUT_RELOAD_CLASS
 (
CLASS
, 
MODE
, 
X
)))

	)

1370 
	#ARM_LEGITIMIZE_RELOAD_ADDRESS
(
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND
, 
WIN
) \

1373 i‡(
	`¨m_Àgôimize_ªlﬂd_addªss
 (&
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND
)) \

1374 
WIN
; \

1376 0)

	)

1387 
	#THUMB_LEGITIMIZE_RELOAD_ADDRESS
(
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND_L
, 
WIN
) \

1389 
πx
 
√w_x
 = 
	`thumb_Àgôimize_ªlﬂd_addªss
 (&
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND_L
); \

1390 i‡(
√w_x
) \

1392 
X
 = 
√w_x
; \

1393 
WIN
; \

1395 } 0)

	)

1397 
	#LEGITIMIZE_RELOAD_ADDRESS
(
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND_LEVELS
, 
WIN
) \

1398 i‡(
TARGET_ARM
) \

1399 
	`ARM_LEGITIMIZE_RELOAD_ADDRESS
 (
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND_LEVELS
, 
WIN
); \

1401 
	`THUMB_LEGITIMIZE_RELOAD_ADDRESS
 (
X
, 
MODE
, 
OPNUM
, 
TYPE
, 
IND_LEVELS
, 
WIN
)

	)

1407 
	#CLASS_MAX_NREGS
(
CLASS
, 
MODE
) \

1408 (
	`ARM_NUM_REGS
 (
MODE
))

	)

1417 
	#STACK_GROWS_DOWNWARD
 1

	)

1423 
	#FRAME_GROWS_DOWNWARD
 1

	)

1434 
	#CALLER_INTERWORKING_SLOT_SIZE
 \

1435 (
TARGET_CALLER_INTERWORKING
 \

1436 && 
¸é
->
outgoög_¨gs_size
 != 0 \

1437 ? 
UNITS_PER_WORD
 : 0)

	)

1443 
	#STARTING_FRAME_OFFSET
 0

	)

1454 
	#ACCUMULATE_OUTGOING_ARGS
 1

	)

1457 
	#FIRST_PARM_OFFSET
(
FNDECL
Ë(
TARGET_ARM
 ? 4 : 0)

	)

1461 
	#APPLY_RESULT_SIZE
 
	`¨m_≠∂y_ªsu…_size
()

	)

1466 
	#DEFAULT_PCC_STRUCT_RETURN
 0

	)

1479 
	#ARM_FT_UNKNOWN
 0

	)

1480 
	#ARM_FT_NORMAL
 1

	)

1481 
	#ARM_FT_INTERWORKED
 2

	)

1482 
	#ARM_FT_ISR
 4

	)

1483 
	#ARM_FT_FIQ
 5

	)

1484 
	#ARM_FT_EXCEPTION
 6

	)

1486 
	#ARM_FT_TYPE_MASK
 ((1 << 3Ë- 1)

	)

1490 
	#ARM_FT_INTERRUPT
 (1 << 2Ë

	)

1491 
	#ARM_FT_NAKED
 (1 << 3Ë

	)

1492 
	#ARM_FT_VOLATILE
 (1 << 4Ë

	)

1493 
	#ARM_FT_NESTED
 (1 << 5Ë

	)

1494 
	#ARM_FT_STACKALIGN
 (1 << 6Ë

	)

1497 
	#ARM_FUNC_TYPE
(
t
Ë— & 
ARM_FT_TYPE_MASK
)

	)

1498 
	#IS_INTERRUPT
(
t
Ë— & 
ARM_FT_INTERRUPT
)

	)

1499 
	#IS_VOLATILE
(
t
Ë— & 
ARM_FT_VOLATILE
)

	)

1500 
	#IS_NAKED
(
t
Ë— & 
ARM_FT_NAKED
)

	)

1501 
	#IS_NESTED
(
t
Ë— & 
ARM_FT_NESTED
)

	)

1502 
	#IS_STACKALIGN
(
t
Ë— & 
ARM_FT_STACKALIGN
)

	)

1510 
GTY
(()Ë
	t¨m_°ack_off£ts


1512 
	gßved_¨gs
;

1513 
	g‰ame
;

1514 
	gßved_ªgs
;

1515 
	gso·_‰ame
;

1516 
	gloˇls_ba£
;

1517 
	goutgoög_¨gs
;

1518 
	gßved_ªgs_mask
;

1520 
	t¨m_°ack_off£ts
;

1522 #i‚de‡
GENERATOR_FILE


1525 
GTY
(()Ë
	tmachöe_fun˘i⁄


1528 
πx
 
	geh_ïûogue_•_ofs
;

1530 
	gÁr_jump_u£d
;

1532 
	g¨g_poöãr_live
;

1534 
	gÃ_ßve_ñimö©ed
;

1536 
¨m_°ack_off£ts
 
	g°ack_off£ts
;

1538 
	gfunc_ty≥
;

1540 
	gu£s_™⁄ymous_¨gs
;

1543 
	gsibˇŒ_blocked
;

1545 
πx
 
	gpic_ªg
;

1549 
πx
 
	gˇŒ_vü
[14];

1552 
	gªtu∫_u£d_this_fun˘i⁄
;

1555 
πx
 
	gthumb1_cc_ö¢
;

1556 
πx
 
	gthumb1_cc_›0
;

1557 
πx
 
	gthumb1_cc_›1
;

1559 
machöe_mode
 
	gthumb1_cc_mode
;

1561 
	tmachöe_fun˘i⁄
;

1566 
GTY
(()Ë
πx
 
thumb_ˇŒ_vü_œbñ
[14];

1569 
	#ARM_NUM_COPROC_SLOTS
 1

	)

1573 
	e¨m_pcs


1575 
	mARM_PCS_AAPCS
,

1576 
	mARM_PCS_AAPCS_VFP
,

1577 
	mARM_PCS_AAPCS_IWMMXT
,

1579 
	mARM_PCS_AAPCS_LOCAL
,

1580 
	mARM_PCS_ATPCS
,

1581 
	mARM_PCS_APCS
,

1582 
	mARM_PCS_UNKNOWN


1586 
¨m_pcs
 
¨m_pcs_deÁu…
;

1593 
	mƒegs
;

1595 
	miwmmxt_ƒegs
;

1596 
	m«med_cou¡
;

1597 
	m«rgs
;

1599 
¨m_pcs
 
	mpcs_v¨ü¡
;

1602 
	mØpcs_¨g_¥o˚s£d
;

1603 
	mØpcs_˝rc_¶Ÿ
;

1606 
	mØpcs_n¸n
;

1607 
	mØpcs_√xt_n¸n
;

1608 
πx
 
	mØpcs_ªg
;

1609 
	mØpcs_∑πül
;

1612 
	mØpcs_˝rc_Áûed
[
ARM_NUM_COPROC_SLOTS
];

1613 
	mˇn_•lô
;

1616 
	mØpcs_vÂ_ªgs_‰ì
;

1617 
	mØpcs_vÂ_ªg_Æloc
;

1618 
	mØpcs_vÂ_rcou¡
;

1619 
MACHMODE
 
	mØpcs_vÂ_rmode
;

1620 } 
	tCUMULATIVE_ARGS
;

1622 
	#FUNCTION_ARG_PADDING
(
MODE
, 
TYPE
) \

1623 (
	`¨m_∑d_¨g_upw¨d
 (
MODE
, 
TYPE
Ë? 
upw¨d
 : 
downw¨d
)

	)

1625 
	#BLOCK_REG_PADDING
(
MODE
, 
TYPE
, 
FIRST
) \

1626 (
	`¨m_∑d_ªg_upw¨d
 (
MODE
, 
TYPE
, 
FIRST
Ë? 
upw¨d
 : 
downw¨d
)

	)

1630 
	#PAD_VARARGS_DOWN
 \

1631 ((
TARGET_AAPCS_BASED
Ë? 0 : 
BYTES_BIG_ENDIAN
)

	)

1637 
	#INIT_CUMULATIVE_ARGS
(
CUM
, 
FNTYPE
, 
LIBNAME
, 
FNDECL
, 
N_NAMED_ARGS
) \

1638 
	`¨m_öô_cumuœtive_¨gs
 (&(
CUM
), (
FNTYPE
), (
LIBNAME
), (
FNDECL
))

	)

1642 
	#FUNCTION_ARG_REGNO_P
(
REGNO
) \

1643 (
	`IN_RANGE
 ((
REGNO
), 0, 3) \

1644 || (
TARGET_AAPCS_BASED
 && 
TARGET_VFP
 && 
TARGET_HARD_FLOAT
 \

1645 && 
	`IN_RANGE
 ((
REGNO
), 
FIRST_VFP_REGNUM
, FIRST_VFP_REGNUM + 15)) \

1646 || (
TARGET_IWMMXT_ABI
 \

1647 && 
	`IN_RANGE
 ((
REGNO
), 
FIRST_IWMMXT_REGNUM
, FIRST_IWMMXT_REGNUM + 9)))

	)

1652 #i‚de‡
ARM_MCOUNT_NAME


1653 
	#ARM_MCOUNT_NAME
 "*mcou¡"

	)

1675 #i‚de‡
ARM_FUNCTION_PROFILER


1676 
	#ARM_FUNCTION_PROFILER
(
STREAM
, 
LABELNO
) \

1678 
ãmp
[20]; \

1679 
πx
 
sym
; \

1681 
	`asm_Ârötf
 (
STREAM
, "\tmov\t%r, %r\n\tbl\t", \

1682 
IP_REGNUM
, 
LR_REGNUM
); \

1683 
	`as£mbÀ_«me
 (
STREAM
, 
ARM_MCOUNT_NAME
); \

1684 
	`Âutc
 ('\n', 
STREAM
); \

1685 
	`ASM_GENERATE_INTERNAL_LABEL
 (
ãmp
, "LP", 
LABELNO
); \

1686 
sym
 = 
	`gí_πx_SYMBOL_REF
 (
Pmode
, 
ãmp
); \

1687 
	`as£mbÀ_Æig√d_öãgî
 (
UNITS_PER_WORD
, 
sym
); \

1688 }

	)

1691 #ifde‡
THUMB_FUNCTION_PROFILER


1692 
	#FUNCTION_PROFILER
(
STREAM
, 
LABELNO
) \

1693 i‡(
TARGET_ARM
) \

1694 
	`ARM_FUNCTION_PROFILER
 (
STREAM
, 
LABELNO
) \

1696 
	`THUMB_FUNCTION_PROFILER
 (
STREAM
, 
LABELNO
)

	)

1698 
	#FUNCTION_PROFILER
(
STREAM
, 
LABELNO
) \

1699 
	`ARM_FUNCTION_PROFILER
 (
STREAM
, 
LABELNO
)

	)

1709 
	#EXIT_IGNORE_STACK
 1

	)

1711 
	#EPILOGUE_USES
(
REGNO
Ë(
ïûogue_com∂ëed
 && (REGNOË=
LR_REGNUM
)

	)

1715 
	#USE_RETURN_INSN
(
ISCOND
) \

1716 (
TARGET_32BIT
 ? 
	`u£_ªtu∫_ö¢
 (
ISCOND
, 
NULL
Ë: 0)

	)

1732 
	#ELIMINABLE_REGS
 \

1733 {{ 
ARG_POINTER_REGNUM
, 
STACK_POINTER_REGNUM
 },\

1734 { 
ARG_POINTER_REGNUM
, 
FRAME_POINTER_REGNUM
 },\

1735 { 
ARG_POINTER_REGNUM
, 
ARM_HARD_FRAME_POINTER_REGNUM
 },\

1736 { 
ARG_POINTER_REGNUM
, 
THUMB_HARD_FRAME_POINTER_REGNUM
 },\

1737 { 
FRAME_POINTER_REGNUM
, 
STACK_POINTER_REGNUM
 },\

1738 { 
FRAME_POINTER_REGNUM
, 
ARM_HARD_FRAME_POINTER_REGNUM
 },\

1739 { 
FRAME_POINTER_REGNUM
, 
THUMB_HARD_FRAME_POINTER_REGNUM
 }}

	)

1743 
	#INITIAL_ELIMINATION_OFFSET
(
FROM
, 
TO
, 
OFFSET
) \

1744 i‡(
TARGET_ARM
) \

1745 (
OFFSET
Ë
	`¨m_compuã_öôül_ñimö©i⁄_off£t
 (
FROM
, 
TO
); \

1747 (
OFFSET
Ë
	`thumb_compuã_öôül_ñimö©i⁄_off£t
 (
FROM
, 
TO
)

	)

1750 
	#DEBUGGER_ARG_OFFSET
(
vÆue
, 
addr
ËvÆuê? vÆuê: 
	`¨m_debuggî_¨g_off£t
 (vÆue,áddr)

	)

1754 
	#INIT_EXPANDERS
 
	`¨m_öô_ex∑ndîs
 ()

	)

1757 
	#TRAMPOLINE_SIZE
 (
TARGET_32BIT
 ? 16 : 20)

	)

1760 
	#TRAMPOLINE_ALIGNMENT
 32

	)

1763 
	#HAVE_POST_INCREMENT
 1

	)

1764 
	#HAVE_PRE_INCREMENT
 
TARGET_32BIT


	)

1765 
	#HAVE_POST_DECREMENT
 
TARGET_32BIT


	)

1766 
	#HAVE_PRE_DECREMENT
 
TARGET_32BIT


	)

1767 
	#HAVE_PRE_MODIFY_DISP
 
TARGET_32BIT


	)

1768 
	#HAVE_POST_MODIFY_DISP
 
TARGET_32BIT


	)

1769 
	#HAVE_PRE_MODIFY_REG
 
TARGET_32BIT


	)

1770 
	#HAVE_POST_MODIFY_REG
 
TARGET_32BIT


	)

1772 
	e¨m_auto_öcmodes


1774 
	mARM_POST_INC
,

1775 
	mARM_PRE_INC
,

1776 
	mARM_POST_DEC
,

1777 
	mARM_PRE_DEC


1780 
	#ARM_AUTOINC_VALID_FOR_MODE_P
(
mode
, 
code
) \

1781 (
TARGET_32BIT
 && 
	`¨m_autoöc_modes_ok_p
 (
mode
, 
code
))

	)

1782 
	#USE_LOAD_POST_INCREMENT
(
mode
) \

1783 
	`ARM_AUTOINC_VALID_FOR_MODE_P
(
mode
, 
ARM_POST_INC
)

	)

1784 
	#USE_LOAD_PRE_INCREMENT
(
mode
) \

1785 
	`ARM_AUTOINC_VALID_FOR_MODE_P
(
mode
, 
ARM_PRE_INC
)

	)

1786 
	#USE_LOAD_POST_DECREMENT
(
mode
) \

1787 
	`ARM_AUTOINC_VALID_FOR_MODE_P
(
mode
, 
ARM_POST_DEC
)

	)

1788 
	#USE_LOAD_PRE_DECREMENT
(
mode
) \

1789 
	`ARM_AUTOINC_VALID_FOR_MODE_P
(
mode
, 
ARM_PRE_DEC
)

	)

1791 
	#USE_STORE_PRE_DECREMENT
(
mode
Ë
	`USE_LOAD_PRE_DECREMENT
(mode)

	)

1792 
	#USE_STORE_PRE_INCREMENT
(
mode
Ë
	`USE_LOAD_PRE_INCREMENT
(mode)

	)

1793 
	#USE_STORE_POST_DECREMENT
(
mode
Ë
	`USE_LOAD_POST_DECREMENT
(mode)

	)

1794 
	#USE_STORE_POST_INCREMENT
(
mode
Ë
	`USE_LOAD_POST_INCREMENT
(mode)

	)

1804 
	#TEST_REGNO
(
R
, 
TEST
, 
VALUE
) \

1805 ((
R
 
TEST
 
VALUE
Ë|| ((Ë
ªg_ªnumbî
[R] TEST VALUE))

	)

1808 
	#ARM_REGNO_OK_FOR_BASE_P
(
REGNO
) \

1809 (
	`TEST_REGNO
 (
REGNO
, <, 
PC_REGNUM
) \

1810 || 
	`TEST_REGNO
 (
REGNO
, ==, 
FRAME_POINTER_REGNUM
) \

1811 || 
	`TEST_REGNO
 (
REGNO
, ==, 
ARG_POINTER_REGNUM
))

	)

1813 
	#THUMB1_REGNO_MODE_OK_FOR_BASE_P
(
REGNO
, 
MODE
) \

1814 (
	`TEST_REGNO
 (
REGNO
, <=, 
LAST_LO_REGNUM
) \

1815 || (
	`GET_MODE_SIZE
 (
MODE
) >= 4 \

1816 && 
	`TEST_REGNO
 (
REGNO
, ==, 
STACK_POINTER_REGNUM
)))

	)

1818 
	#REGNO_MODE_OK_FOR_BASE_P
(
REGNO
, 
MODE
) \

1819 (
TARGET_THUMB1
 \

1820 ? 
	`THUMB1_REGNO_MODE_OK_FOR_BASE_P
 (
REGNO
, 
MODE
) \

1821 : 
	`ARM_REGNO_OK_FOR_BASE_P
 (
REGNO
))

	)

1825 
	#REGNO_MODE_OK_FOR_REG_BASE_P
(
X
, 
MODE
) \

1826 
	`REGNO_MODE_OK_FOR_BASE_P
 (
X
, 
QImode
)

	)

1830 
	#REGNO_OK_FOR_INDEX_P
(
REGNO
) \

1831 (
	`REGNO_MODE_OK_FOR_BASE_P
 (
REGNO
, 
QImode
) \

1832 && !
	`TEST_REGNO
 (
REGNO
, ==, 
STACK_POINTER_REGNUM
))

	)

1836 
	#MAX_REGS_PER_ADDRESS
 2

	)

1841 
	#CONSTANT_ADDRESS_P
(
X
) \

1842 (
	`GET_CODE
 (
X
Ë=
SYMBOL_REF
 \

1843 && (
	`CONSTANT_POOL_ADDRESS_P
 (
X
) \

1844 || (
TARGET_ARM
 && 
›timize
 > 0 && 
	`SYMBOL_REF_FLAG
 (
X
))))

	)

1848 
	#ARM_OFFSETS_MUST_BE_WITHIN_SECTIONS_P
 0

	)

1851 #i‚de‡
TARGET_DEFAULT_WORD_RELOCATIONS


1852 
	#TARGET_DEFAULT_WORD_RELOCATIONS
 0

	)

1855 #i‚de‡
SUBTARGET_NAME_ENCODING_LENGTHS


1856 
	#SUBTARGET_NAME_ENCODING_LENGTHS


	)

1863 
	#ARM_NAME_ENCODING_LENGTHS
 \

1865 
SUBTARGET_NAME_ENCODING_LENGTHS


	)

1869 #unde‡
ASM_OUTPUT_LABELREF


1870 
	#ASM_OUTPUT_LABELREF
(
FILE
, 
NAME
) \

1871 
	`¨m_asm_ouçut_œbñªf
 (
FILE
, 
NAME
)

	)

1874 
	#ASM_OUTPUT_OPCODE
(
STREAM
, 
PTR
) \

1875 i‡(
TARGET_THUMB2
) \

1876 
	`thumb2_asm_ouçut_›code
 (
STREAM
);

	)

1880 #i‚de‡
ARM_EABI_CTORS_SECTION_OP


1881 
	#ARM_EABI_CTORS_SECTION_OP
 \

1882 "\t.£˘i⁄\t.öô_¨øy,\"aw\",%öô_¨øy"

	)

1884 #i‚de‡
ARM_EABI_DTORS_SECTION_OP


1885 
	#ARM_EABI_DTORS_SECTION_OP
 \

1886 "\t.£˘i⁄\t.föi_¨øy,\"aw\",%föi_¨øy"

	)

1888 
	#ARM_CTORS_SECTION_OP
 \

1889 "\t.£˘i⁄\t.˘‹s,\"aw\",%¥ogbôs"

	)

1890 
	#ARM_DTORS_SECTION_OP
 \

1891 "\t.£˘i⁄\t.dt‹s,\"aw\",%¥ogbôs"

	)

1894 #unde‡
CTORS_SECTION_ASM_OP


1895 #unde‡
DTORS_SECTION_ASM_OP


1896 #i‚de‡
IN_LIBGCC2


1897 
	#CTORS_SECTION_ASM_OP
 \

1898 (
TARGET_AAPCS_BASED
 ? 
ARM_EABI_CTORS_SECTION_OP
 : 
ARM_CTORS_SECTION_OP
)

	)

1899 
	#DTORS_SECTION_ASM_OP
 \

1900 (
TARGET_AAPCS_BASED
 ? 
ARM_EABI_DTORS_SECTION_OP
 : 
ARM_DTORS_SECTION_OP
)

	)

1904 #ifde‡
__ARM_EABI__


1914 
	#CTOR_LIST_BEGIN
 
	`asm
 (
ARM_EABI_CTORS_SECTION_OP
)

	)

1915 
	#CTOR_LIST_END


	)

1916 
	#DTOR_LIST_BEGIN
 
	`asm
 (
ARM_EABI_DTORS_SECTION_OP
)

	)

1917 
	#DTOR_LIST_END


	)

1919 
	#CTORS_SECTION_ASM_OP
 
ARM_CTORS_SECTION_OP


	)

1920 
	#DTORS_SECTION_ASM_OP
 
ARM_DTORS_SECTION_OP


	)

1926 #i‚de‡
TARGET_ARM_DYNAMIC_VAGUE_LINKAGE_P


1927 
	#TARGET_ARM_DYNAMIC_VAGUE_LINKAGE_P
 
åue


	)

1930 
	#ARM_OUTPUT_FN_UNWIND
(
F
, 
PROLOGUE
Ë
	`¨m_ouçut_‚_unwöd
 (F, PROLOGUE)

	)

1939 #i‚de‡
REG_OK_STRICT


1941 
	#ARM_REG_OK_FOR_BASE_P
(
X
) \

1942 (
	`REGNO
 (
X
Ë<
LAST_ARM_REGNUM
 \

1943 || 
	`REGNO
 (
X
Ë>
FIRST_PSEUDO_REGISTER
 \

1944 || 
	`REGNO
 (
X
Ë=
FRAME_POINTER_REGNUM
 \

1945 || 
	`REGNO
 (
X
Ë=
ARG_POINTER_REGNUM
)

	)

1947 
	#ARM_REG_OK_FOR_INDEX_P
(
X
) \

1948 ((
	`REGNO
 (
X
Ë<
LAST_ARM_REGNUM
 \

1949 && 
	`REGNO
 (
X
Ë!
STACK_POINTER_REGNUM
) \

1950 || 
	`REGNO
 (
X
Ë>
FIRST_PSEUDO_REGISTER
 \

1951 || 
	`REGNO
 (
X
Ë=
FRAME_POINTER_REGNUM
 \

1952 || 
	`REGNO
 (
X
Ë=
ARG_POINTER_REGNUM
)

	)

1954 
	#THUMB1_REG_MODE_OK_FOR_BASE_P
(
X
, 
MODE
) \

1955 (
	`REGNO
 (
X
Ë<
LAST_LO_REGNUM
 \

1956 || 
	`REGNO
 (
X
Ë>
FIRST_PSEUDO_REGISTER
 \

1957 || (
	`GET_MODE_SIZE
 (
MODE
) >= 4 \

1958 && (
	`REGNO
 (
X
Ë=
STACK_POINTER_REGNUM
 \

1959 || (
X
Ë=
h¨d_‰ame_poöãr_πx
 \

1960 || (
X
Ë=
¨g_poöãr_πx
)))

	)

1962 
	#REG_STRICT_P
 0

	)

1966 
	#ARM_REG_OK_FOR_BASE_P
(
X
) \

1967 
	`ARM_REGNO_OK_FOR_BASE_P
 (
	`REGNO
 (
X
))

	)

1969 
	#ARM_REG_OK_FOR_INDEX_P
(
X
) \

1970 
	`ARM_REGNO_OK_FOR_INDEX_P
 (
	`REGNO
 (
X
))

	)

1972 
	#THUMB1_REG_MODE_OK_FOR_BASE_P
(
X
, 
MODE
) \

1973 
	`THUMB1_REGNO_MODE_OK_FOR_BASE_P
 (
	`REGNO
 (
X
), 
MODE
)

	)

1975 
	#REG_STRICT_P
 1

	)

1981 
	#REG_MODE_OK_FOR_BASE_P
(
X
, 
MODE
) \

1982 (
TARGET_THUMB1
 \

1983 ? 
	`THUMB1_REG_MODE_OK_FOR_BASE_P
 (
X
, 
MODE
) \

1984 : 
	`ARM_REG_OK_FOR_BASE_P
 (
X
))

	)

1988 
	#THUMB1_REG_OK_FOR_INDEX_P
(
X
) \

1989 
	`THUMB1_REG_MODE_OK_FOR_BASE_P
 (
X
, 
QImode
)

	)

1994 
	#REG_OK_FOR_INDEX_P
(
X
) \

1995 (
TARGET_THUMB1
 \

1996 ? 
	`THUMB1_REG_OK_FOR_INDEX_P
 (
X
) \

1997 : 
	`ARM_REG_OK_FOR_INDEX_P
 (
X
))

	)

2001 
	#REG_MODE_OK_FOR_REG_BASE_P
(
X
, 
MODE
) \

2002 
	`REG_OK_FOR_INDEX_P
 (
X
)

	)

2004 
	#ARM_BASE_REGISTER_RTX_P
(
X
) \

2005 (
	`REG_P
 (
X
Ë&& 
	`ARM_REG_OK_FOR_BASE_P
 (X))

	)

2007 
	#ARM_INDEX_REGISTER_RTX_P
(
X
) \

2008 (
	`REG_P
 (
X
Ë&& 
	`ARM_REG_OK_FOR_INDEX_P
 (X))

	)

2012 
	#CASE_VECTOR_MODE
 
Pmode


	)

2014 
	#CASE_VECTOR_PC_RELATIVE
 (
TARGET_THUMB2
 \

2015 || (
TARGET_THUMB1
 \

2016 && (
›timize_size
 || 
Êag_pic
)))

	)

2018 
	#CASE_VECTOR_SHORTEN_MODE
(
mö
, 
max
, 
body
) \

2019 (
TARGET_THUMB1
 \

2020 ? (
mö
 >0 && 
max
 < 512 \

2021 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
body
).
off£t_unsig√d
 = 1, 
QImode
) \

2022 : 
mö
 >-256 && 
max
 < 256 \

2023 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
body
).
off£t_unsig√d
 = 0, 
QImode
) \

2024 : 
mö
 >0 && 
max
 < 8192 \

2025 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
body
).
off£t_unsig√d
 = 1, 
HImode
) \

2026 : 
mö
 >-4096 && 
max
 < 4096 \

2027 ? (
	`ADDR_DIFF_VEC_FLAGS
 (
body
).
off£t_unsig√d
 = 0, 
HImode
) \

2028 : 
SImode
) \

2029 : ((
mö
 < 0 || 
max
 >0x20000 || !
TARGET_THUMB2
Ë? 
SImode
 \

2030 : (
max
 >0x200Ë? 
HImode
 \

2031 : 
QImode
))

	)

2035 #i‚de‡
DEFAULT_SIGNED_CHAR


2036 
	#DEFAULT_SIGNED_CHAR
 0

	)

2041 
	#MOVE_MAX
 4

	)

2043 #unde‡
MOVE_RATIO


2044 
	#MOVE_RATIO
(
•ìd
Ë(
¨m_tu√_xsˇÀ
 ? 4 : 2)

	)

2048 
	#WORD_REGISTER_OPERATIONS


	)

2054 
	#LOAD_EXTEND_OP
(
MODE
) \

2055 (
TARGET_THUMB
 ? 
ZERO_EXTEND
 : \

2056 ((
¨m_¨ch4
 || (
MODE
Ë=
QImode
Ë? 
ZERO_EXTEND
 \

2057 : ((
BYTES_BIG_ENDIAN
 && (
MODE
Ë=
HImode
Ë? 
SIGN_EXTEND
 : 
UNKNOWN
)))

	)

2060 
	#SLOW_BYTE_ACCESS
 0

	)

2062 
	#SLOW_UNALIGNED_ACCESS
(
MODE
, 
ALIGN
Ë1

	)

2076 
	#TRULY_NOOP_TRUNCATION
(
OUTPREC
, 
INPREC
Ë1

	)

2079 
	#NO_FUNCTION_CSE
 1

	)

2082 
	#Pmode
 
SImode


	)

2083 
	#FUNCTION_MODE
 
Pmode


	)

2085 
	#ARM_FRAME_RTX
(
X
) \

2086 –(
X
Ë=
‰ame_poöãr_πx
 || (XË=
°ack_poöãr_πx
 \

2087 || (
X
Ë=
¨g_poöãr_πx
)

	)

2091 
	#BRANCH_COST
(
•ìd_p
, 
¥edi˘abÀ_p
) \

2092 (
cuºít_tu√
->
	`bønch_co°
 (
•ìd_p
, 
¥edi˘abÀ_p
))

	)

2095 
	#LOGICAL_OP_NON_SHORT_CIRCUIT
 \

2096 ((
›timize_size
) \

2097 ? (
TARGET_THUMB
 ? 
Ál£
 : 
åue
) \

2098 : (
cuºít_tu√
->
logiˇl_›_n⁄_sh‹t_cúcuô
[
TARGET_ARM
]))

	)

2105 
¨m_pic_ªgi°î
;

2109 
	#PIC_OFFSET_TABLE_REGNUM
 
¨m_pic_ªgi°î


	)

2114 
	#LEGITIMATE_PIC_OPERAND_P
(
X
) \

2115 (!(
	`symbﬁ_míti⁄ed_p
 (
X
) \

2116 || 
	`œbñ_míti⁄ed_p
 (
X
) \

2117 || (
	`GET_CODE
 (
X
Ë=
SYMBOL_REF
 \

2118 && 
	`CONSTANT_POOL_ADDRESS_P
 (
X
) \

2119 && (
	`symbﬁ_míti⁄ed_p
 (
	`gë_poﬁ_c⁄°™t
 (
X
)) \

2120 || 
	`œbñ_míti⁄ed_p
 (
	`gë_poﬁ_c⁄°™t
 (
X
))))) \

2121 || 
	`és_míti⁄ed_p
 (
X
))

	)

2126 
makög_c⁄°_èbÀ
;

2130 
	#REGISTER_TARGET_PRAGMAS
() do { \

2131 
	`c_ªgi°î_¥agma
 (0, "l⁄g_ˇŒs", 
¨m_¥_l⁄g_ˇŒs
); \

2132 
	`c_ªgi°î_¥agma
 (0, "no_l⁄g_ˇŒs", 
¨m_¥_no_l⁄g_ˇŒs
); \

2133 
	`c_ªgi°î_¥agma
 (0, "l⁄g_ˇŒs_off", 
¨m_¥_l⁄g_ˇŒs_off
); \

2134 
	`¨m_œng_obje˘_©åibuãs_öô
(); \

2135 } 0)

	)

2141 
	#SELECT_CC_MODE
(
OP
, 
X
, 
Y
Ë
	`¨m_£À˘_cc_mode
 (OP, X, Y)

	)

2143 
	#REVERSIBLE_CC_MODE
(
MODE
Ë1

	)

2145 
	#REVERSE_CONDITION
(
CODE
,
MODE
) \

2146 (((
MODE
Ë=
CCFPmode
 || (MODEË=
CCFPEmode
) \

2147 ? 
	`ªvî£_c⁄dôi⁄_maybe_un‹dîed
 (
code
) \

2148 : 
	`ªvî£_c⁄dôi⁄
 (
code
))

	)

2150 
	#CLZ_DEFINED_VALUE_AT_ZERO
(
MODE
, 
VALUE
) \

2151 ((
VALUE
Ë
	`GET_MODE_UNIT_BITSIZE
 (
MODE
))

	)

2152 
	#CTZ_DEFINED_VALUE_AT_ZERO
(
MODE
, 
VALUE
) \

2153 ((
VALUE
Ë
	`GET_MODE_UNIT_BITSIZE
 (
MODE
))

	)

2155 
	#CC_STATUS_INIT
 \

2156 dÿ{ 
cfun
->
machöe
->
thumb1_cc_ö¢
 = 
NULL_RTX
; } 0)

	)

2158 #unde‡
ASM_APP_OFF


2159 
	#ASM_APP_OFF
 (
TARGET_THUMB1
 ? "\t.code\t16\n" : \

2160 
TARGET_THUMB2
 ? "\t.thumb\n" : "")

	)

2168 
	#ASM_OUTPUT_REG_PUSH
(
STREAM
, 
REGNO
) \

2171 i‡(
TARGET_ARM
) \

2172 
	`asm_Ârötf
 (
STREAM
,"\tstmfd\t%r!,{%r}\n", \

2173 
STACK_POINTER_REGNUM
, 
REGNO
); \

2174 i‡(
TARGET_THUMB1
 \

2175 && (
REGNO
Ë=
STATIC_CHAIN_REGNUM
) \

2177 
	`asm_Ârötf
 (
STREAM
, "\tpush\t{r7}\n"); \

2178 
	`asm_Ârötf
 (
STREAM
, "\tmov\å7, %r\n", 
REGNO
);\

2179 
	`asm_Ârötf
 (
STREAM
, "\tpush\t{r7}\n"); \

2182 
	`asm_Ârötf
 (
STREAM
, "\çush {%r}\n", 
REGNO
); \

2183 } 0)

	)

2187 
	#ASM_OUTPUT_REG_POP
(
STREAM
, 
REGNO
) \

2190 i‡(
TARGET_ARM
) \

2191 
	`asm_Ârötf
 (
STREAM
, "\tldmfd\t%r!,{%r}\n", \

2192 
STACK_POINTER_REGNUM
, 
REGNO
); \

2193 i‡(
TARGET_THUMB1
 \

2194 && (
REGNO
Ë=
STATIC_CHAIN_REGNUM
) \

2196 
	`asm_Ârötf
 (
STREAM
, "\tpop\t{r7}\n"); \

2197 
	`asm_Ârötf
 (
STREAM
, "\tmov\t%r,Ñ7\n", 
REGNO
);\

2198 
	`asm_Ârötf
 (
STREAM
, "\tpop\t{r7}\n"); \

2201 
	`asm_Ârötf
 (
STREAM
, "\ç› {%r}\n", 
REGNO
); \

2202 } 0)

	)

2204 
	#ADDR_VEC_ALIGN
(
JUMPTABLE
) \

2205 ((
TARGET_THUMB
 && 
	`GET_MODE
 (
	`PATTERN
 (
JUMPTABLE
)Ë=
SImode
Ë? 2 : 0)

	)

2209 #unde‡
ASM_OUTPUT_BEFORE_CASE_LABEL


2210 
	#ASM_OUTPUT_BEFORE_CASE_LABEL
(
FILE
, 
PREFIX
, 
NUM
, 
TABLE
Ë

	)

2212 
	#LABEL_ALIGN_AFTER_BARRIER
(
LABEL
) \

2213 (
	`GET_CODE
 (
	`PATTERN
 (
	`¥ev_a˘ive_ö¢
 (
LABEL
))Ë=
ADDR_DIFF_VEC
 \

2214 ? 1 : 0)

	)

2216 
	#ARM_DECLARE_FUNCTION_NAME
(
STREAM
, 
NAME
, 
DECL
) \

2219 i‡(
TARGET_THUMB
) \

2221 i‡(
	`is_ˇŒed_ö_ARM_mode
 (
DECL
) \

2222 || (
TARGET_THUMB1
 && !
TARGET_THUMB1_ONLY
 \

2223 && 
cfun
->
is_thunk
)) \

2224 
	`Ârötf
 (
STREAM
, "\t.code 32\n") ; \

2225 i‡(
TARGET_THUMB1
) \

2226 
	`Ârötf
 (
STREAM
, "\t.code\t16\n\t.thumb_func\n") ; \

2228 
	`Ârötf
 (
STREAM
, "\t.thumb\n\t.thumb_func\n") ; \

2230 i‡(
TARGET_POKE_FUNCTION_NAME
) \

2231 
	`¨m_poke_fun˘i⁄_«me
 (
STREAM
, (c⁄° *Ë
NAME
); \

2233 0)

	)

2236 
	#ASM_OUTPUT_DEF_FROM_DECLS
(
FILE
, 
DECL1
, 
DECL2
) \

2239 c⁄° *c⁄° 
LABEL1
 = 
	`XSTR
 (
	`XEXP
 (
	`DECL_RTL
 (
de˛
), 0), 0); \

2240 c⁄° *c⁄° 
LABEL2
 = 
	`IDENTIFIER_POINTER
 (
DECL2
); \

2242 i‡(
TARGET_THUMB
 && 
	`TREE_CODE
 (
DECL1
Ë=
FUNCTION_DECL
) \

2244 
	`Ârötf
 (
FILE
, "\t.thumb_set "); \

2245 
	`as£mbÀ_«me
 (
FILE
, 
LABEL1
); \

2246 
	`Ârötf
 (
FILE
, ","); \

2247 
	`as£mbÀ_«me
 (
FILE
, 
LABEL2
); \

2248 
	`Ârötf
 (
FILE
, "\n"); \

2251 
	`ASM_OUTPUT_DEF
 (
FILE
, 
LABEL1
, 
LABEL2
); \

2253 0)

	)

2255 #ifde‡
HAVE_GAS_MAX_SKIP_P2ALIGN


2259 
	#ASM_OUTPUT_MAX_SKIP_ALIGN
(
FILE
, 
LOG
, 
MAX_SKIP
) \

2260 i‡((
LOG
) != 0) \

2262 i‡((
MAX_SKIP
) == 0) \

2263 
	`Ârötf
 ((
FILE
), "\t.p2Æig¿%d\n", (Ë(
LOG
)); \

2265 
	`Ârötf
 ((
FILE
), "\t.p2align %d,,%d\n", \

2266 (Ë(
LOG
), (Ë(
MAX_SKIP
)); \

2267 }

	)

2272 
	#ADJUST_INSN_LENGTH
(
ö¢
, 
Àngth
) \

2273 i‡(
TARGET_THUMB2
 && 
	`GET_CODE
 (
	`PATTERN
 (
ö¢
)Ë=
COND_EXEC
) \

2274 
Àngth
 +2;

	)

2279 
	#FINAL_PRESCAN_INSN
(
INSN
, 
OPVEC
, 
NOPERANDS
) \

2280 i‡(
TARGET_ARM
 && 
›timize
) \

2281 
	`¨m_föÆ_¥esˇn_ö¢
 (
INSN
); \

2282 i‡(
TARGET_THUMB2
) \

2283 
	`thumb2_föÆ_¥esˇn_ö¢
 (
INSN
); \

2284 i‡(
TARGET_THUMB1
) \

2285 
	`thumb1_föÆ_¥esˇn_ö¢
 (
INSN
)

	)

2287 
	#ARM_SIGN_EXTEND
(
x
Ë((
HOST_WIDE_INT
) \

2288 (
HOST_BITS_PER_WIDE_INT
 <32 ? (
HOST_WIDE_INT
Ë(
x
) \

2289 : ((((
HOST_WIDE_INT
)(
x
)) & (HOST_WIDE_INT) 0xffffffff) |\

2290 ((((
HOST_WIDE_INT
)(
x
)) & (HOST_WIDE_INT) 0x80000000) \

2291 ? ((~ (
HOST_WIDE_INT
) 0) \

2292 & ~ (
HOST_WIDE_INT
) 0xffffffff) \

2293 : 0))))

	)

2298 
	#RETURN_ADDR_RTX
(
COUNT
, 
FRAME
) \

2299 
	`¨m_ªtu∫_addr
 (
COUNT
, 
FRAME
)

	)

2303 
	#RETURN_ADDR_MASK26
 (0x03fffffc)

	)

2308 
	#INCOMING_RETURN_ADDR_RTX
 
	`gí_πx_REG
 (
Pmode
, 
LR_REGNUM
)

	)

2309 
	#DWARF_FRAME_RETURN_COLUMN
 
	`DWARF_FRAME_REGNUM
 (
LR_REGNUM
)

	)

2313 
	#MASK_RETURN_ADDR
 \

2318 ((
¨m_¨ch4
 || 
TARGET_THUMB
) \

2319 ? (
	`gí_öt_mode
 (()0xffffffff, 
Pmode
)) \

2320 : 
	`¨m_gí_ªtu∫_addr_mask
 ())

	)

2324 #i‚de‡
NEED_INDICATE_EXEC_STACK


2325 
	#NEED_INDICATE_EXEC_STACK
 0

	)

2328 
	#TARGET_ARM_ARCH
 \

2329 (
¨m_ba£_¨ch
) \

2330 

	)

2331 
	#TARGET_ARM_V6M
 (!
¨m_¨ch_nŸm
 && !
¨m_¨ch_thumb2
)

	)

2332 
	#TARGET_ARM_V7M
 (!
¨m_¨ch_nŸm
 && 
¨m_¨ch_thumb2
)

	)

2335 
	#TARGET_ARM_ARCH_ISA_THUMB
 \

2336 (
¨m_¨ch_thumb2
 ? 2 \

2337 : ((
TARGET_ARM_ARCH
 >5 || 
¨m_¨ch4t
Ë? 1 : 0))

	)

2341 
	#TARGET_ARM_ARCH_PROFILE
 \

2342 (!
¨m_¨ch_nŸm
 \

2344 : (
¨m_¨ch7
 \

2345 ? (
	`°æí
 (
¨m_¨ch_«me
) >=3 \

2346 ? (
¨m_¨ch_«me
[
	`°æí
 (arm_arch_name) - 3]) \

2348 : 0))

	)

2352 
	#TARGET_ARM_FEATURE_LDREX
 \

2353 ((
TARGET_HAVE_LDREX
 ? 4 : 0) \

2354 | (
TARGET_HAVE_LDREXBH
 ? 3 : 0) \

2355 | (
TARGET_HAVE_LDREXD
 ? 8 : 0))

	)

2360 
	#TARGET_ARM_FP
 \

2361 (
TARGET_VFP_SINGLE
 ? 4 \

2362 : (
TARGET_VFP_DOUBLE
 ? (
TARGET_FP16
 ? 14 : 12Ë: 0))

	)

2368 #ifde‡
TARGET_NEON


2369 
	#TARGET_NEON_FP
 \

2370 (
TARGET_ARM_FP
 & (0xf‡^ 0x08))

	)

2375 
	#MAX_LDM_STM_OPS
 4

	)

2377 
	#BIG_LITTLE_SPEC
 \

2378 " %{m˝u=*:-m˝u=%:ªwrôe_m˝u(%{m˝u=*:%*})}"

	)

2380 c⁄° *
¨m_ªwrôe_m˝u
 (
¨gc
, c⁄° **
¨gv
);

2381 
	#BIG_LITTLE_CPU_SPEC_FUNCTIONS
 \

2382 { "ªwrôe_m˝u", 
¨m_ªwrôe_m˝u
 },

	)

2384 
	#ASM_CPU_SPEC
 \

2387 
BIG_LITTLE_SPEC


	)

2391 #i‡
deföed
(
__¨m__
)

2392 c⁄° *
ho°_dëe˘_loˇl_˝u
 (
¨gc
, c⁄° **
¨gv
);

2393 
	#EXTRA_SPEC_FUNCTIONS
 \

2394 { "loˇl_˝u_dëe˘", 
ho°_dëe˘_loˇl_˝u
 }, \

2395 
BIG_LITTLE_CPU_SPEC_FUNCTIONS


	)

2397 
	#MCPU_MTUNE_NATIVE_SPECS
 \

2400 " %{mtu√Ú©ive:%<mtu√Ú©ivê%:loˇl_˝u_dëe˘—u√)}"

	)

2402 
	#MCPU_MTUNE_NATIVE_SPECS
 ""

	)

2403 
	#EXTRA_SPEC_FUNCTIONS
 
BIG_LITTLE_CPU_SPEC_FUNCTIONS


	)

2406 
	#DRIVER_SELF_SPECS
 
MCPU_MTUNE_NATIVE_SPECS


	)

	@include/config/arm/bpabi.h

27 
	#ARM_DEFAULT_ABI
 
ARM_ABI_AAPCS


	)

30 
	#TARGET_BPABI
 (
TARGET_AAPCS_BASED
)

	)

33 #unde‡
ARM_UNWIND_INFO


34 
	#ARM_UNWIND_INFO
 1

	)

37 #unde‡
FPUTYPE_DEFAULT


38 
	#FPUTYPE_DEFAULT
 "vÂ"

	)

42 #i‡
TARGET_BIG_ENDIAN_DEFAULT


43 
	#TARGET_ENDIAN_DEFAULT
 
MASK_BIG_END


	)

45 
	#TARGET_ENDIAN_DEFAULT
 0

	)

49 #unde‡
TARGET_DEFAULT


50 
	#TARGET_DEFAULT
 (
MASK_INTERWORK
 | 
TARGET_ENDIAN_DEFAULT
)

	)

54 
	#FLOAT_LIB_COMPARE_RETURNS_BOOL
(
MODE
, 
COMPARISON
Ë
TARGET_BPABI


	)

57 
	#TARGET_LIB_INT_CMP_BIASED
 !
TARGET_BPABI


	)

59 
	#TARGET_FIX_V4BX_SPEC
 " %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*"\

60 "|m¨ch˜rmv4|m˝u=Á526|m˝u=Á626:--fix-v4bx}"

	)

62 #i‡
TARGET_BIG_ENDIAN_DEFAULT


63 
	#BE8_LINK_SPEC
 \

64 " %{!mlôée-ídün:%{m¨ch˜rmv7-a|m˝u=c‹ãx-a5 \
|m˝u=c‹ãx-a7 \
|m˝u=c‹ãx-a8|m˝u=c‹ãx-a9|m˝u=c‹ãx-a15 \
|m˝u=c‹ãx-a12 \
|m˝u=c‹ãx-a15.c‹ãx-a7 \
|m˝u=m¨vñl-pj4 \
|m˝u=c‹ãx-a53 \
|m˝u=c‹ãx-a57 \
|m˝u=c‹ãx-a57.c‹ãx-a53 \
|m˝u=c‹ãx-m1.smÆl-mu…ùly \
|m˝u=c‹ãx-m0.smÆl-mu…ùly \
|m˝u=c‹ãx-m0∂us.smÆl-mu…ùly \
|m˝u=gíîic-¨mv7-® \
|m¨ch˜rmv7ve \
|m¨ch˜rmv7-m|m˝u=c‹ãx-m3 \
|m¨ch˜rmv7e-m|m˝u=c‹ãx-m4|m˝u=c‹ãx-m7 \
|m¨ch˜rmv6-m|m˝u=c‹ãx-m0 \
|m¨ch˜rmv8-a \
:%{!r:--be8}}}"

	)

84 
	#BE8_LINK_SPEC
 \

85 " %{mbig-ídün:%{m¨ch˜rmv7-a|m˝u=c‹ãx-a5 \
|m˝u=c‹ãx-a7 \
|m˝u=c‹ãx-a8|m˝u=c‹ãx-a9|m˝u=c‹ãx-a15 \
|m˝u=c‹ãx-a12 \
|m˝u=c‹ãx-a15.c‹ãx-a7 \
|m˝u=c‹ãx-a53 \
|m˝u=c‹ãx-a57 \
|m˝u=c‹ãx-a57.c‹ãx-a53 \
|m˝u=c‹ãx-m1.smÆl-mu…ùly \
|m˝u=c‹ãx-m0.smÆl-mu…ùly \
|m˝u=c‹ãx-m0∂us.smÆl-mu…ùly \
|m˝u=m¨vñl-pj4 \
|m˝u=gíîic-¨mv7-® \
|m¨ch˜rmv7ve \
|m¨ch˜rmv7-m|m˝u=c‹ãx-m3 \
|m¨ch˜rmv7e-m|m˝u=c‹ãx-m4|m˝u=c‹ãx-m7 \
|m¨ch˜rmv6-m|m˝u=c‹ãx-m0 \
|m¨ch˜rmv8-a \
:%{!r:--be8}}}"

	)

107 #unde‡
SUBTARGET_EXTRA_ASM_SPEC


108 
	#SUBTARGET_EXTRA_ASM_SPEC
 \

109 "%{mabi˜pcs-gnu|mabi˜çcs:-móbi=gnu;:-móbi=5}" 
TARGET_FIX_V4BX_SPEC


	)

111 #i‚de‡
SUBTARGET_EXTRA_LINK_SPEC


112 
	#SUBTARGET_EXTRA_LINK_SPEC
 ""

	)

116 
	#EABI_LINK_SPEC
 \

117 
TARGET_FIX_V4BX_SPEC
 
BE8_LINK_SPEC


	)

120 
	#BPABI_LINK_SPEC
 \

123 "-X" 
SUBTARGET_EXTRA_LINK_SPEC
 
EABI_LINK_SPEC


	)

125 #unde‡
LINK_SPEC


126 
	#LINK_SPEC
 
BPABI_LINK_SPEC


	)

135 
	#TARGET_BPABI_CPP_BUILTINS
() \

138 
	`buûtö_deföe
 ("__GXX_TYPEINFO_EQUALITY_INLINE=0"); \

140 
Ál£
)

	)

142 #unde‡
TARGET_OS_CPP_BUILTINS


143 
	#TARGET_OS_CPP_BUILTINS
() \

144 
	`TARGET_BPABI_CPP_BUILTINS
()

	)

148 #unde‡
INIT_SECTION_ASM_OP


149 #unde‡
FINI_SECTION_ASM_OP


150 
	#INIT_ARRAY_SECTION_ASM_OP
 
ARM_EABI_CTORS_SECTION_OP


	)

151 
	#FINI_ARRAY_SECTION_ASM_OP
 
ARM_EABI_DTORS_SECTION_OP


	)

160 #unde‡
NO_PROFILE_COUNTERS


161 
	#NO_PROFILE_COUNTERS
 1

	)

162 #unde‡
ARM_FUNCTION_PROFILER


163 
	#ARM_FUNCTION_PROFILER
(
STREAM
, 
LABELNO
) \

165 
	`Ârötf
 (
STREAM
, "\tpush\t{lr}\n"); \

166 
	`Ârötf
 (
STREAM
, "\tbl\t__gnu_mcount_nc\n"); \

167 }

	)

169 #unde‡
SUBTARGET_FRAME_POINTER_REQUIRED


170 
	#SUBTARGET_FRAME_POINTER_REQUIRED
 0

	)

174 #unde‡
PROFILE_HOOK


	@include/config/arm/elf.h

28 #i‚de‡
OBJECT_FORMAT_ELF


29 #îr‹ 
ñf
.
h
 
ö˛uded
 
bef‹e
 
ñfos
.h

32 #i‚de‡
LOCAL_LABEL_PREFIX


33 
	#LOCAL_LABEL_PREFIX
 "."

	)

36 #i‚de‡
SUBTARGET_CPP_SPEC


37 
	#SUBTARGET_CPP_SPEC
 "-D__ELF__"

	)

40 #i‚de‡
SUBTARGET_EXTRA_SPECS


41 
	#SUBTARGET_EXTRA_SPECS
 \

42 { "subèrgë_exåa_asm_•ec", 
SUBTARGET_EXTRA_ASM_SPEC
 }, \

43 { "subèrgë_asm_Êﬂt_•ec", 
SUBTARGET_ASM_FLOAT_SPEC
 }, \

44 
SUBSUBTARGET_EXTRA_SPECS


	)

47 #i‚de‡
SUBTARGET_EXTRA_ASM_SPEC


48 
	#SUBTARGET_EXTRA_ASM_SPEC
 ""

	)

51 #i‚de‡
SUBTARGET_ASM_FLOAT_SPEC


52 
	#SUBTARGET_ASM_FLOAT_SPEC
 "\
%{m≠cs-Êﬂt:-mÊﬂt}"

	)

56 #unde‡
SUBSUBTARGET_EXTRA_SPECS


57 
	#SUBSUBTARGET_EXTRA_SPECS


	)

59 #i‚de‡
ASM_SPEC


60 
	#ASM_SPEC
 "\
%{mbig-ídün:-EB} \
%{mlôée-ídün:-EL} \
%◊sm_˝u_•ecË\
%{m≠cs-*:-m≠cs-%*} \
%(subèrgë_asm_Êﬂt_•ecË\
%{mthumb-öãrw‹k:-mthumb-öãrw‹k} \
%{mÊﬂt-abi=*} %{mÂu=*} \
%(subèrgë_exåa_asm_•ec)"

	)

73 #unde‡
TYPE_OPERAND_FMT


74 
	#TYPE_OPERAND_FMT
 "%%%s"

	)

77 #unde‡
ASM_DECLARE_FUNCTION_NAME


78 
	#ASM_DECLARE_FUNCTION_NAME
(
FILE
, 
NAME
, 
DECL
) \

81 
	`ARM_DECLARE_FUNCTION_NAME
 (
FILE
, 
NAME
, 
DECL
); \

82 
	`ASM_OUTPUT_TYPE_DIRECTIVE
 (
FILE
, 
NAME
, "function"); \

83 
	`ASM_DECLARE_RESULT
 (
FILE
, 
	`DECL_RESULT
 (
DECL
)); \

84 
	`ASM_OUTPUT_LABEL
(
FILE
, 
NAME
); \

85 
	`ARM_OUTPUT_FN_UNWIND
 (
FILE
, 
TRUE
); \

87 0)

	)

90 #unde‡
ASM_DECLARE_FUNCTION_SIZE


91 
	#ASM_DECLARE_FUNCTION_SIZE
(
FILE
, 
FNAME
, 
DECL
) \

94 
	`ARM_OUTPUT_FN_UNWIND
 (
FILE
, 
FALSE
); \

95 i‡(!
Êag_öhibô_size_dúe˘ive
) \

96 
	`ASM_OUTPUT_MEASURED_SIZE
 (
FILE
, 
FNAME
); \

98 0)

	)

106 
	#JUMP_TABLES_IN_TEXT_SECTION
 \

107 (
TARGET_32BIT
 || (
TARGET_THUMB
 && (
›timize_size
 || 
Êag_pic
)))

	)

109 #i‚de‡
LINK_SPEC


110 
	#LINK_SPEC
 "%{mbig-ídün:-EB} %{mlôée-ídün:-EL} -X"

	)

114 #i‚de‡
TARGET_DEFAULT


115 
	#TARGET_DEFAULT
 (
MASK_APCS_FRAME
)

	)

118 #i‚de‡
MULTILIB_DEFAULTS


119 
	#MULTILIB_DEFAULTS
 \

120 { "m¨m", "mlôée-ídün", "mÊﬂt-abi=so·", "mno-thumb-öãrw‹k", "‚o-Àadög-undîsc‹e" }

	)

123 
	#TARGET_ASM_FILE_START_APP_OFF
 
åue


	)

124 
	#TARGET_ASM_FILE_START_FILE_DIRECTIVE
 
åue


	)

128 #unde‡
TARGET_ASM_CONSTRUCTOR


129 
	#TARGET_ASM_CONSTRUCTOR
 
¨m_ñf_asm_c⁄°ru˘‹


	)

131 #unde‡
TARGET_ASM_DESTRUCTOR


132 
	#TARGET_ASM_DESTRUCTOR
 
¨m_ñf_asm_de°ru˘‹


	)

135 
	#NEED_PLT_RELOC
 
Êag_pic


	)

136 
	#NEED_GOT_RELOC
 
Êag_pic


	)

139 
	#GOT_PCREL
 0

	)

143 
	#ASM_OUTPUT_ALIGN
(
STREAM
, 
POWER
) \

146 i‡((
POWER
) > 0) \

147 
	`Ârötf
 (
STREAM
, "\t.Æign\t%d\n", 
POWER
); \

149 0)

	)

153 #i‚de‡
__ARM_ARCH_6M__


154 #unde‡
L_fixdfsi


155 #unde‡
L_fixunsdfsi


156 #unde‡
L_åuncdfsf2


157 #unde‡
L_fixsfsi


158 #unde‡
L_fixunssfsi


159 #unde‡
L_Êﬂtdidf


160 #unde‡
L_Êﬂtdisf


161 #unde‡
L_Êﬂtundidf


162 #unde‡
L_Êﬂtundisf


	@include/config/arm/unknown-elf.h

27 #i‚de‡
TARGET_DEFAULT


28 
	#TARGET_DEFAULT
 (0)

	)

32 
	#UNKNOWN_ELF_STARTFILE_SPEC
 " cπi%O%†¸tbegö%O%†¸t0%O%s"

	)

34 #unde‡
STARTFILE_SPEC


35 
	#STARTFILE_SPEC
 
UNKNOWN_ELF_STARTFILE_SPEC


	)

37 
	#UNKNOWN_ELF_ENDFILE_SPEC
 "¸ãnd%O%†¸ä%O%s"

	)

39 #unde‡
ENDFILE_SPEC


40 
	#ENDFILE_SPEC
 
UNKNOWN_ELF_ENDFILE_SPEC


	)

44 #unde‡
SUBTARGET_CPP_SPEC


45 
	#SUBTARGET_CPP_SPEC
 "-D__USES_INITFINI__"

	)

47 #unde‡
PREFERRED_DEBUGGING_TYPE


48 
	#PREFERRED_DEBUGGING_TYPE
 
DWARF2_DEBUG


	)

51 
	#IN_NAMED_SECTION_P
(
DECL
) \

52 ((
	`TREE_CODE
 (
DECL
Ë=
FUNCTION_DECL
 || TREE_CODE (DECLË=
VAR_DECL
) \

53 && 
	`DECL_SECTION_NAME
 (
DECL
Ë!
NULL_TREE
)

	)

55 #unde‡
ASM_OUTPUT_ALIGNED_BSS


56 
	#ASM_OUTPUT_ALIGNED_BSS
(
FILE
, 
DECL
, 
NAME
, 
SIZE
, 
ALIGN
) \

59 i‡(
	`IN_NAMED_SECTION_P
 (
DECL
)) \

60 
	`swôch_to_£˘i⁄
 (
	`gë_«med_£˘i⁄
 (
DECL
, 
NULL
, 0)); \

62 
	`swôch_to_£˘i⁄
 (
bss_£˘i⁄
); \

64 
	`ASM_OUTPUT_ALIGN
 (
FILE
, 
	`Êo‹_log2
 (
ALIGN
 / 
BITS_PER_UNIT
)); \

66 
œ°_as£mbÀ_v¨übÀ_de˛
 = 
DECL
; \

67 
	`ASM_DECLARE_OBJECT_NAME
 (
FILE
, 
NAME
, 
DECL
); \

68 
	`ASM_OUTPUT_SKIP
 (
FILE
, 
SIZE
 ? ()(SIZE) : 1); \

70 0)

	)

72 #unde‡
ASM_OUTPUT_ALIGNED_DECL_LOCAL


73 
	#ASM_OUTPUT_ALIGNED_DECL_LOCAL
(
FILE
, 
DECL
, 
NAME
, 
SIZE
, 
ALIGN
) \

76 i‡((
DECL
Ë!
NULL
 && 
	`IN_NAMED_SECTION_P
 (DECL)) \

77 
	`swôch_to_£˘i⁄
 (
	`gë_«med_£˘i⁄
 (
DECL
, 
NULL
, 0)); \

79 
	`swôch_to_£˘i⁄
 (
bss_£˘i⁄
); \

81 
	`ASM_OUTPUT_ALIGN
 (
FILE
, 
	`Êo‹_log2
 (
ALIGN
 / 
BITS_PER_UNIT
)); \

82 
	`ASM_OUTPUT_LABEL
 (
FILE
, 
NAME
); \

83 
	`Ârötf
 (
FILE
, "\t.•a˚\t%d\n", 
SIZE
 ? ()(SIZE) : 1); \

85 0)

	)

87 #i‚de‡
SUBTARGET_CPU_DEFAULT


88 
	#SUBTARGET_CPU_DEFAULT
 
TARGET_CPU_¨m7tdmi


	)

95 #unde‡
LINK_GCC_C_SEQUENCE_SPEC


96 
	#LINK_GCC_C_SEQUENCE_SPEC
 "--°¨t-grou∞%G %L --íd-group"

	)

	@include/config/dbxelf.h

29 #i‚de‡
GCC_DBX_ELF_H


30 
	#GCC_DBX_ELF_H


	)

34 
	#DBX_DEBUGGING_INFO
 1

	)

41 
	#DBX_BLOCKS_FUNCTION_RELATIVE
 1

	)

45 
	#DBX_FUNCTION_FIRST


	)

49 
	#DBX_USE_BINCL


	)

53 #i‚de‡
DBX_CONTIN_LENGTH


54 
	#DBX_CONTIN_LENGTH
 0

	)

60 
	#DBX_LINES_FUNCTION_RELATIVE
 1

	)

66 
	#DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END


	)

	@include/config/elfos.h

27 
	#TARGET_OBJFMT_CPP_BUILTINS
() \

30 
	`buûtö_deföe
 ("__ELF__"); \

32 0)

	)

36 
	#USING_ELFOS_H


	)

43 #unde‡
USER_LABEL_PREFIX


44 
	#USER_LABEL_PREFIX
 ""

	)

53 #i‚de‡
MAX_OFILE_ALIGNMENT


54 
	#MAX_OFILE_ALIGNMENT
 (((Ë1 << 28Ë* 8)

	)

59 
	#NO_DOLLAR_IN_LABEL


	)

63 #i‚de‡
PCC_BITFIELD_TYPE_MATTERS


64 
	#PCC_BITFIELD_TYPE_MATTERS
 1

	)

69 
	#DWARF2_DEBUGGING_INFO
 1

	)

75 #i‚de‡
PREFERRED_DEBUGGING_TYPE


76 
	#PREFERRED_DEBUGGING_TYPE
 
DWARF2_DEBUG


	)

80 
	#OBJECT_FORMAT_ELF


	)

85 #unde‡
TARGET_ASM_OUTPUT_IDENT


86 
	#TARGET_ASM_OUTPUT_IDENT
 
deÁu…_asm_ouçut_idít_dúe˘ive


	)

88 #unde‡
SET_ASM_OP


89 
	#SET_ASM_OP
 "\t.£t\t"

	)

93 
	#TARGET_ASM_FILE_START_FILE_DIRECTIVE
 
åue


	)

98 
	#SKIP_ASM_OP
 "\t.zîo\t"

	)

100 #unde‡
ASM_OUTPUT_SKIP


101 
	#ASM_OUTPUT_SKIP
(
FILE
, 
SIZE
) \

102 
	`Ârötf
 ((
FILE
), "%s"
HOST_WIDE_INT_PRINT_UNSIGNED
"\n",\

103 
SKIP_ASM_OP
, (
SIZE
))

	)

113 #unde‡
ASM_GENERATE_INTERNAL_LABEL


114 
	#ASM_GENERATE_INTERNAL_LABEL
(
LABEL
, 
PREFIX
, 
NUM
) \

117 *
__p
; \

118 (
LABEL
)[0] = '*'; \

119 (
LABEL
)[1] = '.'; \

120 
__p
 = 
	`°p˝y
 (&(
LABEL
)[2], 
PREFIX
); \

121 
	`•röt_ul
 (
__p
, (Ë(
NUM
)); \

123 0)

	)

133 #unde‡
ALIGN_ASM_OP


134 
	#ALIGN_ASM_OP
 "\t.Æign\t"

	)

136 #i‚de‡
ASM_OUTPUT_BEFORE_CASE_LABEL


137 
	#ASM_OUTPUT_BEFORE_CASE_LABEL
(
FILE
, 
PREFIX
, 
NUM
, 
TABLE
) \

138 
	`ASM_OUTPUT_ALIGN
 ((
FILE
), 2);

	)

141 #unde‡
ASM_OUTPUT_CASE_LABEL


142 
	#ASM_OUTPUT_CASE_LABEL
(
FILE
, 
PREFIX
, 
NUM
, 
JUMPTABLE
) \

145 
	`ASM_OUTPUT_BEFORE_CASE_LABEL
 (
FILE
, 
PREFIX
, 
NUM
, 
JUMPTABLE
) \

146 (*
èrgëm
.
asm_out
.
öã∫Æ_œbñ
Ë(
FILE
, 
PREFIX
, 
NUM
); \

148 0)

	)

154 
	#ASM_OUTPUT_EXTERNAL_LIBCALL
(
FILE
, 
FUN
) \

155 (*
èrgëm
.
asm_out
.
globÆize_œbñ
Ë(
FILE
, 
	`XSTR
 (
FUN
, 0))

	)

162 
	#COMMON_ASM_OP
 "\t.comm\t"

	)

164 #unde‡
ASM_OUTPUT_ALIGNED_COMMON


165 
	#ASM_OUTPUT_ALIGNED_COMMON
(
FILE
, 
NAME
, 
SIZE
, 
ALIGN
) \

168 
	`Ârötf
 ((
FILE
), "%s", 
COMMON_ASM_OP
); \

169 
	`as£mbÀ_«me
 ((
FILE
), (
NAME
)); \

170 
	`Ârötf
 ((
FILE
), ","
HOST_WIDE_INT_PRINT_UNSIGNED
",%u\n", \

171 (
SIZE
), (
ALIGN
Ë/ 
BITS_PER_UNIT
); \

173 0)

	)

180 
	#LOCAL_ASM_OP
 "\t.loˇl\t"

	)

182 #unde‡
ASM_OUTPUT_ALIGNED_LOCAL


183 
	#ASM_OUTPUT_ALIGNED_LOCAL
(
FILE
, 
NAME
, 
SIZE
, 
ALIGN
) \

186 
	`Ârötf
 ((
FILE
), "%s", 
LOCAL_ASM_OP
); \

187 
	`as£mbÀ_«me
 ((
FILE
), (
NAME
)); \

188 
	`Ârötf
 ((
FILE
), "\n"); \

189 
	`ASM_OUTPUT_ALIGNED_COMMON
 (
FILE
, 
NAME
, 
SIZE
, 
ALIGN
); \

191 0)

	)

197 #unde‡
ASCII_DATA_ASM_OP


198 
	#ASCII_DATA_ASM_OP
 "\t.ascii\t"

	)

201 
	#READONLY_DATA_SECTION_ASM_OP
 "\t.£˘i⁄\t.rod©a"

	)

209 
	#INIT_SECTION_ASM_OP
 "\t.£˘i⁄\t.öô"

	)

210 
	#FINI_SECTION_ASM_OP
 "\t.£˘i⁄\t.föi"

	)

213 #ifde‡
HAVE_GAS_SUBSECTION_ORDERING


214 
	#ASM_SECTION_START_OP
 "\t.sub£˘i⁄\t-1"

	)

215 
	#ASM_OUTPUT_SECTION_START
(
FILE
) \

216 
	`Ârötf
 ((
FILE
), "%s\n", 
ASM_SECTION_START_OP
)

	)

219 
	#MAKE_DECL_ONE_ONLY
(
DECL
Ë(
	`DECL_WEAK
 (DECLË1)

	)

222 
	#TARGET_ASM_NAMED_SECTION
 
deÁu…_ñf_asm_«med_£˘i⁄


	)

224 #unde‡
TARGET_ASM_SELECT_RTX_SECTION


225 
	#TARGET_ASM_SELECT_RTX_SECTION
 
deÁu…_ñf_£À˘_πx_£˘i⁄


	)

226 #unde‡
TARGET_ASM_SELECT_SECTION


227 
	#TARGET_ASM_SELECT_SECTION
 
deÁu…_ñf_£À˘_£˘i⁄


	)

228 #unde‡
TARGET_HAVE_SWITCHABLE_BSS_SECTIONS


229 
	#TARGET_HAVE_SWITCHABLE_BSS_SECTIONS
 
åue


	)

237 
	#TYPE_ASM_OP
 "\t.ty≥\t"

	)

238 
	#SIZE_ASM_OP
 "\t.size\t"

	)

242 
	#ASM_WEAKEN_LABEL
(
FILE
, 
NAME
) \

245 
	`Âuts
 ("\t.wók\t", (
FILE
)); \

246 
	`as£mbÀ_«me
 ((
FILE
), (
NAME
)); \

247 
	`Âutc
 ('\n', (
FILE
)); \

249 0)

	)

257 
	#TYPE_OPERAND_FMT
 "@%s"

	)

263 #i‚de‡
ASM_DECLARE_RESULT


264 
	#ASM_DECLARE_RESULT
(
FILE
, 
RESULT
)

	)

276 #i‚de‡
ASM_DECLARE_FUNCTION_NAME


277 
	#ASM_DECLARE_FUNCTION_NAME
(
FILE
, 
NAME
, 
DECL
) \

280 
	`ASM_OUTPUT_TYPE_DIRECTIVE
 (
FILE
, 
NAME
, "function"); \

281 
	`ASM_DECLARE_RESULT
 (
FILE
, 
	`DECL_RESULT
 (
DECL
)); \

282 
	`ASM_OUTPUT_FUNCTION_LABEL
 (
FILE
, 
NAME
, 
DECL
); \

284 0)

	)

289 #ifde‡
HAVE_GAS_GNU_UNIQUE_OBJECT


290 
	#USE_GNU_UNIQUE_OBJECT
 
Êag_gnu_unique


	)

292 
	#USE_GNU_UNIQUE_OBJECT
 0

	)

295 
	#ASM_DECLARE_OBJECT_NAME
(
FILE
, 
NAME
, 
DECL
) \

298 
HOST_WIDE_INT
 
size
; \

305 i‡(
USE_GNU_UNIQUE_OBJECT
 && 
	`DECL_ONE_ONLY
 (
DECL
) \

306 && (!
	`DECL_ARTIFICIAL
 (
DECL
Ë|| !
	`TREE_READONLY
 (DECL))) \

307 
	`ASM_OUTPUT_TYPE_DIRECTIVE
 (
FILE
, 
NAME
, "gnu_unique_object"); \

309 
	`ASM_OUTPUT_TYPE_DIRECTIVE
 (
FILE
, 
NAME
, "object"); \

311 
size_dúe˘ive_ouçut
 = 0; \

312 i‡(!
Êag_öhibô_size_dúe˘ive
 \

313 && (
DECL
Ë&& 
	`DECL_SIZE
 (DECL)) \

315 
size_dúe˘ive_ouçut
 = 1; \

316 
size
 = 
	`öt_size_ö_byãs
 (
	`TREE_TYPE
 (
DECL
)); \

317 
	`ASM_OUTPUT_SIZE_DIRECTIVE
 (
FILE
, 
NAME
, 
size
); \

320 
	`ASM_OUTPUT_LABEL
 (
FILE
, 
NAME
); \

322 0)

	)

330 #unde‡
ASM_FINISH_DECLARE_OBJECT


331 
	#ASM_FINISH_DECLARE_OBJECT
(
FILE
, 
DECL
, 
TOP_LEVEL
, 
AT_END
)\

334 c⁄° *
«me
 = 
	`XSTR
 (
	`XEXP
 (
	`DECL_RTL
 (
DECL
), 0), 0); \

335 
HOST_WIDE_INT
 
size
; \

337 i‡(!
Êag_öhibô_size_dúe˘ive
 \

338 && 
	`DECL_SIZE
 (
DECL
) \

339 && ! 
AT_END
 && 
TOP_LEVEL
 \

340 && 
	`DECL_INITIAL
 (
DECL
Ë=
îr‹_m¨k_node
 \

341 && !
size_dúe˘ive_ouçut
) \

343 
size_dúe˘ive_ouçut
 = 1; \

344 
size
 = 
	`öt_size_ö_byãs
 (
	`TREE_TYPE
 (
DECL
)); \

345 
	`ASM_OUTPUT_SIZE_DIRECTIVE
 (
FILE
, 
«me
, 
size
); \

348 0)

	)

351 #i‚de‡
ASM_DECLARE_FUNCTION_SIZE


352 
	#ASM_DECLARE_FUNCTION_SIZE
(
FILE
, 
FNAME
, 
DECL
) \

355 i‡(!
Êag_öhibô_size_dúe˘ive
) \

356 
	`ASM_OUTPUT_MEASURED_SIZE
 (
FILE
, 
FNAME
); \

358 0)

	)

375 
	#ELF_ASCII_ESCAPES
 \

376 "\1\1\1\1\1\1\1\1bä\1‰\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\
\0\0\"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\\\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\
\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\
\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\
\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\
\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1"

	)

397 
	#ELF_STRING_LIMIT
 ((Ë256)

	)

399 
	#STRING_ASM_OP
 "\t.°rög\t"

	)

408 
	#ASM_OUTPUT_LIMITED_STRING
(
FILE
, 
STR
) \

409 
	`deÁu…_ñf_asm_ouçut_limôed_°rög
 ((
FILE
), (
STR
))

	)

418 #unde‡
ASM_OUTPUT_ASCII


419 
	#ASM_OUTPUT_ASCII
(
FILE
, 
STR
, 
LENGTH
) \

420 
	`deÁu…_ñf_asm_ouçut_ascii
 ((
FILE
), (
STR
), (
LENGTH
));

	)

424 #unde‡
TARGET_ASM_RECORD_GCC_SWITCHES


425 
	#TARGET_ASM_RECORD_GCC_SWITCHES
 
ñf_ªc‹d_gcc_swôches


	)

432 #i‚de‡
ASM_OUTPUT_EXTERNAL


433 
	#ASM_OUTPUT_EXTERNAL
(
FILE
, 
DECL
, 
NAME
) \

434 
	`deÁu…_ñf_asm_ouçut_exã∫Æ
 (
FILE
, 
DECL
, 
NAME
)

	)

437 #unde‡
TARGET_LIBC_HAS_FUNCTION


438 
	#TARGET_LIBC_HAS_FUNCTION
 
no_c99_libc_has_fun˘i⁄


	)

	@include/config/initfini-array.h

26 #ifde‡
HAVE_INITFINI_ARRAY_SUPPORT


28 
	#USE_INITFINI_ARRAY


	)

30 #unde‡
INIT_SECTION_ASM_OP


31 #unde‡
FINI_SECTION_ASM_OP


33 #unde‡
INIT_ARRAY_SECTION_ASM_OP


34 
	#INIT_ARRAY_SECTION_ASM_OP


	)

36 #unde‡
FINI_ARRAY_SECTION_ASM_OP


37 
	#FINI_ARRAY_SECTION_ASM_OP


	)

40 #unde‡
TARGET_ASM_CONSTRUCTOR


41 
	#TARGET_ASM_CONSTRUCTOR
 
deÁu…_ñf_öô_¨øy_asm_out_c⁄°ru˘‹


	)

42 #unde‡
TARGET_ASM_DESTRUCTOR


43 
	#TARGET_ASM_DESTRUCTOR
 
deÁu…_ñf_föi_¨øy_asm_out_de°ru˘‹


	)

	@include/config/newlib-stdint.h

27 #i‚de‡
STDINT_LONG32


28 
	#STDINT_LONG32
 (
LONG_TYPE_SIZE
 =32)

	)

31 
	#SIG_ATOMIC_TYPE
 "öt"

	)

36 
	#INT8_TYPE
 (
CHAR_TYPE_SIZE
 =8 ? "sig√d ch¨" : 0)

	)

37 
	#INT16_TYPE
 (
SHORT_TYPE_SIZE
 =16 ? "sh‹àöt" : 
INT_TYPE_SIZE
 =16 ? "öt" : 
CHAR_TYPE_SIZE
 =16 ? "sig√d ch¨" : 0)

	)

38 
	#INT32_TYPE
 (
STDINT_LONG32
 ? "l⁄g i¡" : 
INT_TYPE_SIZE
 =32 ? "öt" : 
SHORT_TYPE_SIZE
 =32 ? "sh‹àöt" : 
CHAR_TYPE_SIZE
 =32 ? "sig√d ch¨" : 0)

	)

39 
	#INT64_TYPE
 (
LONG_TYPE_SIZE
 =64 ? "l⁄g i¡" : 
LONG_LONG_TYPE_SIZE
 =64 ? "l⁄gÜ⁄g i¡" : 
INT_TYPE_SIZE
 =64 ? "öt" : 0)

	)

40 
	#UINT8_TYPE
 (
CHAR_TYPE_SIZE
 =8 ? "unsig√d ch¨" : 0)

	)

41 
	#UINT16_TYPE
 (
SHORT_TYPE_SIZE
 =16 ? "sh‹àunsig√d i¡" : 
INT_TYPE_SIZE
 =16 ? "unsig√d i¡" : 
CHAR_TYPE_SIZE
 =16 ? "unsig√d ch¨" : 0)

	)

42 
	#UINT32_TYPE
 (
STDINT_LONG32
 ? "l⁄g unsig√d i¡" : 
INT_TYPE_SIZE
 =32 ? "unsig√d i¡" : 
SHORT_TYPE_SIZE
 =32 ? "sh‹àunsig√d i¡" : 
CHAR_TYPE_SIZE
 =32 ? "unsig√d ch¨" : 0)

	)

43 
	#UINT64_TYPE
 (
LONG_TYPE_SIZE
 =64 ? "l⁄g unsig√d i¡" : 
LONG_LONG_TYPE_SIZE
 =64 ? "l⁄gÜ⁄g unsig√d i¡" : 
INT_TYPE_SIZE
 =64 ? "unsig√d i¡" : 0)

	)

45 
	#INT_LEAST8_TYPE
 (
INT8_TYPE
 ? INT8_TYPE : 
INT16_TYPE
 ? INT16_TYPE : 
INT32_TYPE
 ? INT32_TYPE : 
INT64_TYPE
 ? INT64_TYPE : 0)

	)

46 
	#INT_LEAST16_TYPE
 (
INT16_TYPE
 ? INT16_TYPE : 
INT32_TYPE
 ? INT32_TYPE : 
INT64_TYPE
 ? INT64_TYPE : 0)

	)

47 
	#INT_LEAST32_TYPE
 (
INT32_TYPE
 ? INT32_TYPE : 
INT64_TYPE
 ? INT64_TYPE : 0)

	)

48 
	#INT_LEAST64_TYPE
 
INT64_TYPE


	)

49 
	#UINT_LEAST8_TYPE
 (
UINT8_TYPE
 ? UINT8_TYPE : 
UINT16_TYPE
 ? UINT16_TYPE : 
UINT32_TYPE
 ? UINT32_TYPE : 
UINT64_TYPE
 ? UINT64_TYPE : 0)

	)

50 
	#UINT_LEAST16_TYPE
 (
UINT16_TYPE
 ? UINT16_TYPE : 
UINT32_TYPE
 ? UINT32_TYPE : 
UINT64_TYPE
 ? UINT64_TYPE : 0)

	)

51 
	#UINT_LEAST32_TYPE
 (
UINT32_TYPE
 ? UINT32_TYPE : 
UINT64_TYPE
 ? UINT64_TYPE : 0)

	)

52 
	#UINT_LEAST64_TYPE
 
UINT64_TYPE


	)

54 
	#INT_FAST8_TYPE
 (
INT_TYPE_SIZE
 >8 ? "öt" : 
INT_LEAST8_TYPE
)

	)

55 
	#INT_FAST16_TYPE
 (
INT_TYPE_SIZE
 >16 ? "öt" : 
INT_LEAST16_TYPE
)

	)

56 
	#INT_FAST32_TYPE
 (
INT_TYPE_SIZE
 >32 ? "öt" : 
INT_LEAST32_TYPE
)

	)

57 
	#INT_FAST64_TYPE
 (
INT_TYPE_SIZE
 >64 ? "öt" : 
INT_LEAST64_TYPE
)

	)

58 
	#UINT_FAST8_TYPE
 (
INT_TYPE_SIZE
 >8 ? "unsig√d i¡" : 
UINT_LEAST8_TYPE
)

	)

59 
	#UINT_FAST16_TYPE
 (
INT_TYPE_SIZE
 >16 ? "unsig√d i¡" : 
UINT_LEAST16_TYPE
)

	)

60 
	#UINT_FAST32_TYPE
 (
INT_TYPE_SIZE
 >32 ? "unsig√d i¡" : 
UINT_LEAST32_TYPE
)

	)

61 
	#UINT_FAST64_TYPE
 (
INT_TYPE_SIZE
 >64 ? "unsig√d i¡" : 
UINT_LEAST64_TYPE
)

	)

66 
	#INTPTR_TYPE
 
PTRDIFF_TYPE


	)

67 #i‚de‡
UINTPTR_TYPE


68 
	#UINTPTR_TYPE
 
SIZE_TYPE


	)

	@include/config/vxworks-dummy.h

26 #i‚de‡
TARGET_VXWORKS


27 
	#TARGET_VXWORKS
 0

	)

31 #i‚de‡
TARGET_VXWORKS_RTP


32 
	#TARGET_VXWORKS_RTP
 
Ál£


	)

36 
	#VXWORKS_GOTT_BASE
 (
	`gcc_uƒóchabÀ
 (), "")

	)

40 
	#VXWORKS_GOTT_INDEX
 (
	`gcc_uƒóchabÀ
 (), "")

	)

	@include/configargs.h

2 c⁄° 
	gc⁄figuøti⁄_¨gumíts
[] = "/home/build/work/GCC-4-9-build/src/gcc/configure --target=arm-none-eabi --prefix=/home/build/work/GCC-4-9-build/install-native --libexecdir=/home/build/work/GCC-4-9-build/install-native/lib --infodir=/home/build/work/GCC-4-9-build/install-native/share/doc/gcc-arm-none-eabi/info --mandir=/home/build/work/GCC-4-9-build/install-native/share/doc/gcc-arm-none-eabi/man --htmldir=/home/build/work/GCC-4-9-build/install-native/share/doc/gcc-arm-none-eabi/html --pdfdir=/home/build/work/GCC-4-9-build/install-native/share/doc/gcc-arm-none-eabi/pdf --enable-languages=c,c++ --enable-plugins --disable-decimal-float --disable-libffi --disable-libgomp --disable-libmudflap --disable-libquadmath --disable-libssp --disable-libstdcxx-pch --disable-nls --disable-shared --disable-threads --disable-tls --with-gnu-as --with-gnu-ld --with-newlib --with-headers=yes --with-python-dir=share/gcc-arm-none-eabi --with-sysroot=/home/build/work/GCC-4-9-build/install-native/arm-none-eabi --build=i686-linux-gnu --host=i686-linux-gnu --with-gmp=/home/build/work/GCC-4-9-build/build-native/host-libs/usr --with-mpfr=/home/build/work/GCC-4-9-build/build-native/host-libs/usr --with-mpc=/home/build/work/GCC-4-9-build/build-native/host-libs/usr --with-isl=/home/build/work/GCC-4-9-build/build-native/host-libs/usr --with-cloog=/home/build/work/GCC-4-9-build/build-native/host-libs/usr --with-libelf=/home/build/work/GCC-4-9-build/build-native/host-libs/usr --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-pkgversion='GNU Tools for ARM Embedded Processors' --with-multilib-list=armv6-m,armv7-m,armv7e-m,cortex-m7,armv7-r";

3 c⁄° 
	gthªad_modñ
[] = "single";

6 c⁄° *
	m«me
, *
	mvÆue
;

7 } 
	gc⁄figuª_deÁu…_›ti⁄s
[] = { { 
NULL
, NULL} };

	@include/context.h

20 #i‚de‡
GCC_CONTEXT_H


21 
	#GCC_CONTEXT_H


	)

23 
«me•a˚
 
	ggcc
 {

25 
˛ass
 
	g∑ss_m™agî
;

26 
˛ass
 
	gdump_m™agî
;

31 ˛as†
	cc⁄ãxt


33 
	gpublic
:

34 
c⁄ãxt
 ();

38 
∑ss_m™agî
 *
gë_∑s£s
 (Ë{ 
gcc_as£π
 (
m_∑s£s
);  
	gm_∑s£s
; }

42 
dump_m™agî
 *
gë_dumps
 (Ë{
gcc_as£π
 (
m_dumps
);  
	gm_dumps
; }

44 
	g¥iv©e
:

46 
∑ss_m™agî
 *
m_∑s£s
;

49 
dump_m™agî
 *
	gm_dumps
;

57 
gcc
::
c⁄ãxt
 *
g
;

	@include/coretypes.h

37 #i‚de‡
GCC_CORETYPES_H


38 
	#GCC_CORETYPES_H


	)

40 #i‚de‡
GTY


41 
	#GTY
(
x
Ë

	)

44 #i‚de‡
USED_FOR_TARGET


46 
HOST_WIDEST_INT
 
	tgcov_ty≥
;

47 
	tHOST_WIDEST_INT
 
	tgcov_ty≥_unsig√d
;

49 
	gbôm≠_hód
;

50 
bôm≠_hód
 *
	tbôm≠
;

51 c⁄° 
	tbôm≠_hód
 *
	tc⁄°_bôm≠
;

52 
	gsim∂e_bôm≠_def
;

53 
sim∂e_bôm≠_def
 *
	tsbôm≠
;

54 c⁄° 
	tsim∂e_bôm≠_def
 *
	tc⁄°_sbôm≠
;

55 
	gπx_def
;

56 
πx_def
 *
	tπx
;

57 c⁄° 
	tπx_def
 *
	tc⁄°_πx
;

58 
	gπvec_def
;

59 
πvec_def
 *
	tπvec
;

60 c⁄° 
	tπvec_def
 *
	tc⁄°_πvec
;

61 
	gåì_node
;

62 
åì_node
 *
	tåì
;

63 c⁄° 
	tåì_node
 *
	tc⁄°_åì
;

64 
gim∂e_°©emít_ba£
 *
	tgim∂e
;

65 c⁄° 
	tgim∂e_°©emít_ba£
 *
	tc⁄°_gim∂e
;

66 
gim∂e
 
	tgim∂e_£q
;

67 
	ggim∂e_°mt_ôî©‹
;

68 
	g£˘i⁄
;

69 
£˘i⁄
 
	t£˘i⁄
;

70 
	ggcc_›ti⁄s
;

71 
	g˛_èrgë_›ti⁄
;

72 
	g˛_›timiz©i⁄
;

73 
	g˛_›ti⁄
;

74 
	g˛_decoded_›ti⁄
;

75 
	g˛_›ti⁄_h™dÀrs
;

76 
	gdügno°ic_c⁄ãxt
;

77 
	g¥ëty_¥öãr
;

80 
	taddr_•a˚_t
;

83 
	#ADDR_SPACE_GENERIC
 0

	)

84 
	#ADDR_SPACE_GENERIC_P
(
AS
Ë((ASË=
ADDR_SPACE_GENERIC
)

	)

87 
	eú_ty≥
 {

88 
	mIR_GIMPLE
,

89 
	mIR_RTL_CFGRTL
,

90 
	mIR_RTL_CFGLAYOUT


98 
	g˝p_ªadî
;

99 
	g˝p_tokí
;

104 
	eés_modñ
 {

105 
	mTLS_MODEL_NONE
,

106 
	mTLS_MODEL_EMULATED
,

107 
	mTLS_MODEL_REAL
,

108 
	mTLS_MODEL_GLOBAL_DYNAMIC
 = 
TLS_MODEL_REAL
,

109 
	mTLS_MODEL_LOCAL_DYNAMIC
,

110 
	mTLS_MODEL_INITIAL_EXEC
,

111 
	mTLS_MODEL_LOCAL_EXEC


116 
	eunwöd_öfo_ty≥


118 
	mUI_NONE
,

119 
	mUI_SJLJ
,

120 
	mUI_DWARF2
,

121 
	mUI_TARGET
,

122 
	mUI_SEH


126 
	enode_‰equícy
 {

129 
	mNODE_FREQUENCY_UNLIKELY_EXECUTED
,

132 
	mNODE_FREQUENCY_EXECUTED_ONCE
,

134 
	mNODE_FREQUENCY_NORMAL
,

137 
	mNODE_FREQUENCY_HOT


143 
	ev¨_öô_°©us


145 
	mVAR_INIT_STATUS_UNKNOWN
,

146 
	mVAR_INIT_STATUS_UNINITIALIZED
,

147 
	mVAR_INIT_STATUS_INITIALIZED


151 
	gedge_def
;

152 
edge_def
 *
	tedge
;

153 c⁄° 
	tedge_def
 *
	tc⁄°_edge
;

154 
	gbasic_block_def
;

155 
basic_block_def
 *
	tbasic_block
;

156 c⁄° 
	tbasic_block_def
 *
	tc⁄°_basic_block
;

158 
	#ob°ack_chunk_Æloc
 ((*(*Ë()Ë
xmÆloc
)

	)

159 
	#ob°ack_chunk_‰ì
 (((*Ë(*)Ë
‰ì
)

	)

160 
	#OBSTACK_CHUNK_SIZE
 0

	)

161 
	#gcc_ob°ack_öô
(
OBSTACK
) \

162 
	`_ob°ack_begö
 ((
OBSTACK
), 
OBSTACK_CHUNK_SIZE
, 0, \

163 
ob°ack_chunk_Æloc
, \

164 
ob°ack_chunk_‰ì
)

	)

169 
	tªg_˛ass_t
;

171 
˛ass
 
	gπl_›t_∑ss
;

173 
«me•a˚
 
	ggcc
 {

174 
˛ass
 
	gc⁄ãxt
;

179 
	g_d⁄t_u£_πx_hîe_
;

180 
	g_d⁄t_u£_πvec_hîe_
;

181 
	g_d⁄t_u£_åì_hîe_
;

182 
	#πx
 
_d⁄t_u£_πx_hîe_
 *

	)

183 
	#c⁄°_πx
 
_d⁄t_u£_πx_hîe_
 *

	)

184 
	#πvec
 
_d⁄t_u£_πvec_hîe
 *

	)

185 
	#c⁄°_πvec
 
_d⁄t_u£_πvec_hîe
 *

	)

186 
	#åì
 
_d⁄t_u£_åì_hîe_
 *

	)

187 
	#c⁄°_åì
 
_d⁄t_u£_åì_hîe_
 *

	)

193 
	efun˘i⁄_˛ass
 {

194 
	mfun˘i⁄_c94
,

195 
	mfun˘i⁄_c99_misc
,

196 
	mfun˘i⁄_c99_m©h_com∂ex
,

197 
	mfun˘i⁄_söcos


202 
	ememmodñ


204 
	mMEMMODEL_RELAXED
 = 0,

205 
	mMEMMODEL_CONSUME
 = 1,

206 
	mMEMMODEL_ACQUIRE
 = 2,

207 
	mMEMMODEL_RELEASE
 = 3,

208 
	mMEMMODEL_ACQ_REL
 = 4,

209 
	mMEMMODEL_SEQ_CST
 = 5,

210 
	mMEMMODEL_LAST
 = 6

214 
	#MEMMODEL_MASK
 ((1<<16)-1)

	)

218 (*
	tgt_poöãr_›î©‹
) (*, *);

220 #i‡!
	`deföed
 (
HAVE_UCHAR
)

221 
	tuch¨
;

	@include/cp/cp-tree.h

21 #i‚de‡
GCC_CP_TREE_H


22 
	#GCC_CP_TREE_H


	)

24 
	~"ggc.h
"

25 
	~"fun˘i⁄.h
"

26 
	~"hashèb.h
"

27 
	~"vec.h
"

33 #unde‡
GCC_DIAG_STYLE


34 
	#GCC_DIAG_STYLE
 
__gcc_cxxdüg__


	)

35 #i‡
deföed
(
GCC_DIAGNOSTIC_CORE_H
Ë|| deföed (
GCC_C_COMMON_H
)

37 
In
 
‹dî
 
the
 
f‹m©
 
checkög
 
to
 
ac˚±
Åhê
	gC
++ 
‰⁄t
 
íd
 
	gdügno°ic
 \

38 
‰amew‹k
 
	gexãnsi⁄s
, 
you
 
mu°
 
ö˛ude
 
this
 
fûe
 
bef‹e
 
	gdügno°ic
-
	gc‹e
.
h
 
	g™d
 \

39 
	gc
-
	gcomm⁄
.
	gh
, 
nŸ
 
	ga·î
.

41 
	~"c-Ámûy/c-comm⁄.h
"

42 
	~"dügno°ic.h
"

44 
	~"«me-lookup.h
"

212 
	#VAR_OR_FUNCTION_DECL_CHECK
(
NODE
) \

213 
	`TREE_CHECK2
(
NODE
,
VAR_DECL
,
FUNCTION_DECL
)

	)

215 
	#TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK
(
NODE
) \

216 
	`TREE_CHECK3
(
NODE
,
TYPE_DECL
,
TEMPLATE_DECL
,
FUNCTION_DECL
)

	)

218 
	#TYPE_FUNCTION_OR_TEMPLATE_DECL_P
(
NODE
) \

219 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_DECL
 || TREE_CODE (NODEË=
TEMPLATE_DECL
 \

220 || 
	`TREE_CODE
 (
NODE
Ë=
FUNCTION_DECL
)

	)

222 
	#VAR_FUNCTION_OR_PARM_DECL_CHECK
(
NODE
) \

223 
	`TREE_CHECK3
(
NODE
,
VAR_DECL
,
FUNCTION_DECL
,
PARM_DECL
)

	)

225 
	#VAR_TEMPL_TYPE_OR_FUNCTION_DECL_CHECK
(
NODE
) \

226 
	`TREE_CHECK4
(
NODE
,
VAR_DECL
,
FUNCTION_DECL
,
TYPE_DECL
,
TEMPLATE_DECL
)

	)

228 
	#VAR_TEMPL_TYPE_FIELD_OR_FUNCTION_DECL_CHECK
(
NODE
) \

229 
	`TREE_CHECK5
(
NODE
,
VAR_DECL
,
FIELD_DECL
,
FUNCTION_DECL
,
TYPE_DECL
,
TEMPLATE_DECL
)

	)

231 
	#BOUND_TEMPLATE_TEMPLATE_PARM_TYPE_CHECK
(
NODE
) \

232 
	`TREE_CHECK
(
NODE
,
BOUND_TEMPLATE_TEMPLATE_PARM
)

	)

234 #i‡
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 2007)

235 
	#THUNK_FUNCTION_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

236 ({ 
	`__ty≥of
 (
NODE
Ëc⁄° 
__t
 = (NODE); \

237 i‡(
	`TREE_CODE
 (
__t
Ë!
FUNCTION_DECL
 || !__t->
de˛_comm⁄
.
œng_•ecific
 \

238 || !
__t
->
de˛_comm⁄
.
œng_•ecific
->
u
.
‚
.
thunk_p
) \

239 
	`åì_check_Áûed
 (
__t
, 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 0); \

240 
__t
; })

	)

242 
	#THUNK_FUNCTION_CHECK
(
NODE
Ë(NODE)

	)

247 
GTY
(()Ë
	gœng_idítifõr
 {

248 
c_comm⁄_idítifõr
 
	gc_comm⁄
;

249 
cxx_bödög
 *
	g«me•a˚_bödögs
;

250 
cxx_bödög
 *
	gbödögs
;

251 
åì
 
	g˛ass_ãm∂©e_öfo
;

252 
åì
 
	gœbñ_vÆue
;

257 
ölöe
 
œng_idítifõr
*

258 
	$idítifõr_p
 (
åì
 
t
)

260 i‡(
	`TREE_CODE
 (
t
Ë=
IDENTIFIER_NODE
)

261  (
œng_idítifõr
*Ë
t
;

262  
NULL
;

263 
	}
}

269 
	#C_IS_RESERVED_WORD
(
ID
Ë
	`TREE_LANG_FLAG_5
 (ID)

	)

271 
	#LANG_IDENTIFIER_CAST
(
NODE
) \

272 ((
œng_idítifõr
*)
	`IDENTIFIER_NODE_CHECK
 (
NODE
))

	)

274 
GTY
(()Ë
	gãm∂©e_∑rm_ödex_s
 {

275 
åì_comm⁄
 
	gcomm⁄
;

276 
	gödex
;

277 
	gÀvñ
;

278 
	g‹ig_Àvñ
;

279 
åì
 
	gde˛
;

281 
ãm∂©e_∑rm_ödex_s
 
	tãm∂©e_∑rm_ödex
;

283 
GTY
(()Ë
	g±rmem_c°
 {

284 
åì_comm⁄
 
	gcomm⁄
;

285 
åì
 
	gmembî
;

287 
±rmem_c°
 * 
	t±rmem_c°_t
;

289 
	#IDENTIFIER_GLOBAL_VALUE
(
NODE
) \

290 
	`«me•a˚_bödög
 ((
NODE
), 
globÆ_«me•a˚
)

	)

291 
	#SET_IDENTIFIER_GLOBAL_VALUE
(
NODE
, 
VAL
) \

292 
	`£t_«me•a˚_bödög
 ((
NODE
), 
globÆ_«me•a˚
, (
VAL
))

	)

293 
	#IDENTIFIER_NAMESPACE_VALUE
(
NODE
) \

294 
	`«me•a˚_bödög
 ((
NODE
), 
cuºít_«me•a˚
)

	)

295 
	#SET_IDENTIFIER_NAMESPACE_VALUE
(
NODE
, 
VAL
) \

296 
	`£t_«me•a˚_bödög
 ((
NODE
), 
cuºít_«me•a˚
, (
VAL
))

	)

298 
	#CLEANUP_P
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`TRY_BLOCK_CHECK
 (NODE))

	)

300 
	#BIND_EXPR_TRY_BLOCK
(
NODE
) \

301 
	`TREE_LANG_FLAG_0
 (
	`BIND_EXPR_CHECK
 (
NODE
))

	)

304 
	#BIND_EXPR_BODY_BLOCK
(
NODE
) \

305 
	`TREE_LANG_FLAG_3
 (
	`BIND_EXPR_CHECK
 (
NODE
))

	)

306 
	#FUNCTION_NEEDS_BODY_BLOCK
(
NODE
) \

307 (
	`DECL_CONSTRUCTOR_P
 (
NODE
Ë|| 
	`DECL_DESTRUCTOR_P
 (NODE) \

308 || 
	`LAMBDA_FUNCTION_P
 (
NODE
))

	)

310 
	#STATEMENT_LIST_NO_SCOPE
(
NODE
) \

311 
	`TREE_LANG_FLAG_0
 (
	`STATEMENT_LIST_CHECK
 (
NODE
))

	)

312 
	#STATEMENT_LIST_TRY_BLOCK
(
NODE
) \

313 
	`TREE_LANG_FLAG_2
 (
	`STATEMENT_LIST_CHECK
 (
NODE
))

	)

318 
	#STMT_IS_FULL_EXPR_P
(
NODE
Ë
	`TREE_LANG_FLAG_1
 ((NODE))

	)

321 
	#EXPR_STMT_STMT_EXPR_RESULT
(
NODE
) \

322 
	`TREE_LANG_FLAG_0
 (
	`EXPR_STMT_CHECK
 (
NODE
))

	)

325 
	#STMT_EXPR_NO_SCOPE
(
NODE
) \

326 
	`TREE_LANG_FLAG_0
 (
	`STMT_EXPR_CHECK
 (
NODE
))

	)

330 
	#ßme_ty≥_p
(
TYPE1
, 
TYPE2
) \

331 
	`com±y≥s
 ((
TYPE1
), (
TYPE2
), 
COMPARE_STRICT
)

	)

335 
	#DECL_MAIN_P
(
NODE
) \

336 (
	`DECL_EXTERN_C_FUNCTION_P
 (
NODE
) \

337 && 
	`DECL_NAME
 (
NODE
Ë!
NULL_TREE
 \

338 && 
	`MAIN_NAME_P
 (
	`DECL_NAME
 (
NODE
)) \

339 && 
Êag_ho°ed
)

	)

342 
	#OVL_FUNCTION
(
NODE
) \

343 (((
åì_ovîlﬂd
*)
	`OVERLOAD_CHECK
 (
NODE
))->
fun˘i⁄
)

	)

344 
	#OVL_CHAIN
(
NODE
Ë
	`TREE_CHAIN
 (NODE)

	)

346 
	#OVL_CURRENT
(
NODE
) \

347 ((
	`TREE_CODE
 (
NODE
Ë=
OVERLOAD
Ë? 
	`OVL_FUNCTION
 (NODEË: (NODE))

	)

348 
	#OVL_NEXT
(
NODE
) \

349 ((
	`TREE_CODE
 (
NODE
Ë=
OVERLOAD
Ë? 
	`TREE_CHAIN
 (NODEË: 
NULL_TREE
)

	)

353 
	#OVL_USED
(
NODE
Ë
	`TREE_USED
 (
	`OVERLOAD_CHECK
 (NODE))

	)

356 
	#OVL_ARG_DEPENDENT
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`OVERLOAD_CHECK
 (NODE))

	)

358 
GTY
(()Ë
	gåì_ovîlﬂd
 {

359 
åì_comm⁄
 
	gcomm⁄
;

360 
åì
 
	gfun˘i⁄
;

364 
	#BASELINK_P
(
NODE
) \

365 (
	`TREE_CODE
 (
NODE
Ë=
BASELINK
)

	)

368 
	#BASELINK_BINFO
(
NODE
) \

369 (((
åì_ba£lök
*Ë
	`BASELINK_CHECK
 (
NODE
))->
böfo
)

	)

372 
	#BASELINK_FUNCTIONS
(
NODE
) \

373 (((
åì_ba£lök
*Ë
	`BASELINK_CHECK
 (
NODE
))->
fun˘i⁄s
)

	)

377 
	#BASELINK_ACCESS_BINFO
(
NODE
) \

378 (((
åì_ba£lök
*Ë
	`BASELINK_CHECK
 (
NODE
))->
ac˚ss_böfo
)

	)

384 
	#BASELINK_OPTYPE
(
NODE
) \

385 (
	`TREE_CHAIN
 (
	`BASELINK_CHECK
 (
NODE
)))

	)

387 
	#BASELINK_QUALIFIED_P
(
NODE
) \

388 
	`TREE_LANG_FLAG_0
 (
	`BASELINK_CHECK
 (
NODE
))

	)

390 
GTY
(()Ë
	gåì_ba£lök
 {

391 
åì_comm⁄
 
	gcomm⁄
;

392 
åì
 
	gböfo
;

393 
åì
 
	gfun˘i⁄s
;

394 
åì
 
	gac˚ss_böfo
;

399 
	e˝_id_köd


402 
	mCP_ID_KIND_NONE
,

404 
	mCP_ID_KIND_UNQUALIFIED
,

406 
	mCP_ID_KIND_UNQUALIFIED_DEPENDENT
,

408 
	mCP_ID_KIND_TEMPLATE_ID
,

410 
	mCP_ID_KIND_QUALIFIED


411 } 
	t˝_id_köd
;

416 
	e˝p0x_w¨n_°r


419 
	mCPP0X_INITIALIZER_LISTS
,

421 
	mCPP0X_EXPLICIT_CONVERSION
,

423 
	mCPP0X_VARIADIC_TEMPLATES
,

425 
	mCPP0X_LAMBDA_EXPR
,

427 
	mCPP0X_AUTO
,

429 
	mCPP0X_SCOPED_ENUMS
,

431 
	mCPP0X_DEFAULTED_DELETED
,

433 
	mCPP0X_INLINE_NAMESPACES
,

435 
	mCPP0X_OVERRIDE_CONTROLS
,

437 
	mCPP0X_NSDMI
,

439 
	mCPP0X_USER_DEFINED_LITERALS
,

441 
	mCPP0X_DELEGATING_CTORS
,

443 
	mCPP0X_INHERITING_CTORS
,

445 
	mCPP0X_ATTRIBUTES
,

447 
	mCPP0X_REF_QUALIFIER


448 } 
	t˝p0x_w¨n_°r
;

452 
	ecomposôe_poöãr_›î©i⁄


455 
	mCPO_COMPARISON
,

457 
	mCPO_CONVERSION
,

459 
	mCPO_CONDITIONAL_EXPR


460 } 
	tcomposôe_poöãr_›î©i⁄
;

463 
	eex¥_li°_köd
 {

464 
	mELK_INIT
,

465 
	mELK_MEM_INIT
,

466 
	mELK_FUNC_CAST


467 } 
	tex¥_li°_köd
;

470 
	eim∂_c⁄v_rhs
 {

471 
	mICR_DEFAULT_ARGUMENT
,

472 
	mICR_CONVERTING
,

473 
	mICR_INIT
,

474 
	mICR_ARGPASS
,

475 
	mICR_RETURN
,

476 
	mICR_ASSIGN


477 } 
	tim∂_c⁄v_rhs
;

480 
	eim∂_c⁄v_void
 {

481 
	mICV_CAST
,

482 
	mICV_SECOND_OF_COND
,

483 
	mICV_THIRD_OF_COND
,

484 
	mICV_RIGHT_OF_COMMA
,

485 
	mICV_LEFT_OF_COMMA
,

486 
	mICV_STATEMENT
,

487 
	mICV_THIRD_IN_FOR


488 } 
	tim∂_c⁄v_void
;

492 
	eab°ø˘_˛ass_u£
 {

493 
	mACU_UNKNOWN
,

494 
	mACU_CAST
,

495 
	mACU_NEW
,

496 
	mACU_THROW
,

497 
	mACU_CATCH
,

498 
	mACU_ARRAY
,

499 
	mACU_RETURN
,

500 
	mACU_PARM


501 } 
	tab°ø˘_˛ass_u£
;

505 
	#IDENTIFIER_NAMESPACE_BINDINGS
(
NODE
) \

506 (
	`LANG_IDENTIFIER_CAST
 (
NODE
)->
«me•a˚_bödögs
)

	)

507 
	#IDENTIFIER_TEMPLATE
(
NODE
) \

508 (
	`LANG_IDENTIFIER_CAST
 (
NODE
)->
˛ass_ãm∂©e_öfo
)

	)

517 
	#IDENTIFIER_BINDING
(
NODE
) \

518 (
	`LANG_IDENTIFIER_CAST
 (
NODE
)->
bödögs
)

	)

524 
	#IDENTIFIER_TYPE_VALUE
(
NODE
Ë
	`idítifõr_ty≥_vÆue
 (NODE)

	)

525 
	#REAL_IDENTIFIER_TYPE_VALUE
(
NODE
Ë
	`TREE_TYPE
 (NODE)

	)

526 
	#SET_IDENTIFIER_TYPE_VALUE
(
NODE
,
TYPE
Ë(
	`TREE_TYPE
 (NODEË(TYPE))

	)

527 
	#IDENTIFIER_HAS_TYPE_VALUE
(
NODE
Ë(
	`IDENTIFIER_TYPE_VALUE
 (NODEË? 1 : 0)

	)

529 
	#IDENTIFIER_LABEL_VALUE
(
NODE
) \

530 (
	`LANG_IDENTIFIER_CAST
 (
NODE
)->
œbñ_vÆue
)

	)

531 
	#SET_IDENTIFIER_LABEL_VALUE
(
NODE
, 
VALUE
) \

532 
	`IDENTIFIER_LABEL_VALUE
 (
NODE
Ë(
VALUE
)

	)

536 
	#IDENTIFIER_VIRTUAL_P
(
NODE
Ë
	`TREE_LANG_FLAG_1
 (NODE)

	)

540 
	#IDENTIFIER_OPNAME_P
(
NODE
Ë
	`TREE_LANG_FLAG_2
 (NODE)

	)

544 
	#IDENTIFIER_TYPENAME_P
(
NODE
) \

545 
	`TREE_LANG_FLAG_4
 (
NODE
)

	)

549 
	#IDENTIFIER_CTOR_OR_DTOR_P
(
NODE
) \

550 
	`TREE_LANG_FLAG_3
 (
NODE
)

	)

555 
	#IDENTIFIER_REPO_CHOSEN
(
NAME
) \

556 (
	`TREE_LANG_FLAG_6
 (
NAME
))

	)

559 
	#C_TYPE_FIELDS_READONLY
(
TYPE
) \

560 (
	`LANG_TYPE_CLASS_CHECK
 (
TYPE
)->
fõlds_ªad⁄ly
)

	)

564 
	#DEFARG_TOKENS
(
NODE
) \

565 (((
åì_deÁu…_¨g
 *)
	`DEFAULT_ARG_CHECK
 (
NODE
))->
tokís
)

	)

566 
	#DEFARG_INSTANTIATIONS
(
NODE
) \

567 (((
åì_deÁu…_¨g
 *)
	`DEFAULT_ARG_CHECK
 (
NODE
))->
ö°™tüti⁄s
)

	)

569 
GTY
 (()Ë
	gåì_deÁu…_¨g
 {

570 
åì_comm⁄
 
	gcomm⁄
;

571 
˝_tokí_ˇche
 *
	gtokís
;

572 
	gvec
<
	gåì
, 
	gva_gc
> *
	gö°™tüti⁄s
;

576 
	#DEFERRED_NOEXCEPT_PATTERN
(
NODE
) \

577 (((
åì_de„ºed_n€x˚±
 *)
	`DEFERRED_NOEXCEPT_CHECK
 (
NODE
))->
∑âîn
)

	)

578 
	#DEFERRED_NOEXCEPT_ARGS
(
NODE
) \

579 (((
åì_de„ºed_n€x˚±
 *)
	`DEFERRED_NOEXCEPT_CHECK
 (
NODE
))->
¨gs
)

	)

580 
	#DEFERRED_NOEXCEPT_SPEC_P
(
NODE
) \

581 ((
NODE
Ë&& (
	`TREE_PURPOSE
 (NODE)) \

582 && (
	`TREE_CODE
 (
	`TREE_PURPOSE
 (
NODE
)Ë=
DEFERRED_NOEXCEPT
 \

583 || 
	`is_ovîlﬂded_‚
 (
	`TREE_PURPOSE
 (
NODE
))))

	)

585 
GTY
 (()Ë
	gåì_de„ºed_n€x˚±
 {

586 
åì_ba£
 
	gba£
;

587 
åì
 
	g∑âîn
;

588 
åì
 
	g¨gs
;

594 
	#STATIC_ASSERT_CONDITION
(
NODE
) \

595 (((
åì_°©ic_as£π
 *)
	`STATIC_ASSERT_CHECK
 (
NODE
))->
c⁄dôi⁄
)

	)

600 
	#STATIC_ASSERT_MESSAGE
(
NODE
) \

601 (((
åì_°©ic_as£π
 *)
	`STATIC_ASSERT_CHECK
 (
NODE
))->
mesßge
)

	)

604 
	#STATIC_ASSERT_SOURCE_LOCATION
(
NODE
) \

605 (((
åì_°©ic_as£π
 *)
	`STATIC_ASSERT_CHECK
 (
NODE
))->
loˇti⁄
)

	)

607 
GTY
 (()Ë
	gåì_°©ic_as£π
 {

608 
åì_comm⁄
 
	gcomm⁄
;

609 
åì
 
	gc⁄dôi⁄
;

610 
åì
 
	gmesßge
;

611 
loˇti⁄_t
 
	gloˇti⁄
;

614 
GTY
 (()Ë
	gåì_¨gumít_∑ck_£À˘
 {

615 
åì_comm⁄
 
	gcomm⁄
;

616 
åì
 
	g¨gumít_∑ck
;

617 
	gödex
;

622 
	e˝_åaô_köd


624 
	mCPTK_BASES
,

625 
	mCPTK_DIRECT_BASES
,

626 
	mCPTK_HAS_NOTHROW_ASSIGN
,

627 
	mCPTK_HAS_NOTHROW_CONSTRUCTOR
,

628 
	mCPTK_HAS_NOTHROW_COPY
,

629 
	mCPTK_HAS_TRIVIAL_ASSIGN
,

630 
	mCPTK_HAS_TRIVIAL_CONSTRUCTOR
,

631 
	mCPTK_HAS_TRIVIAL_COPY
,

632 
	mCPTK_HAS_TRIVIAL_DESTRUCTOR
,

633 
	mCPTK_HAS_VIRTUAL_DESTRUCTOR
,

634 
	mCPTK_IS_ABSTRACT
,

635 
	mCPTK_IS_BASE_OF
,

636 
	mCPTK_IS_CLASS
,

637 
	mCPTK_IS_CONVERTIBLE_TO
,

638 
	mCPTK_IS_EMPTY
,

639 
	mCPTK_IS_ENUM
,

640 
	mCPTK_IS_FINAL
,

641 
	mCPTK_IS_LITERAL_TYPE
,

642 
	mCPTK_IS_POD
,

643 
	mCPTK_IS_POLYMORPHIC
,

644 
	mCPTK_IS_STD_LAYOUT
,

645 
	mCPTK_IS_TRIVIAL
,

646 
	mCPTK_IS_UNION
,

647 
	mCPTK_UNDERLYING_TYPE


648 } 
	t˝_åaô_köd
;

651 
	#TRAIT_EXPR_TYPE1
(
NODE
) \

652 (((
åì_åaô_ex¥
 *)
	`TRAIT_EXPR_CHECK
 (
NODE
))->
ty≥1
)

	)

654 
	#TRAIT_EXPR_TYPE2
(
NODE
) \

655 (((
åì_åaô_ex¥
 *)
	`TRAIT_EXPR_CHECK
 (
NODE
))->
ty≥2
)

	)

658 
	#TRAIT_EXPR_KIND
(
NODE
) \

659 (((
åì_åaô_ex¥
 *)
	`TRAIT_EXPR_CHECK
 (
NODE
))->
köd
)

	)

661 
GTY
 (()Ë
	gåì_åaô_ex¥
 {

662 
åì_comm⁄
 
	gcomm⁄
;

663 
åì
 
	gty≥1
;

664 
åì
 
	gty≥2
;

665 
˝_åaô_köd
 
	gköd
;

669 
	#LAMBDA_TYPE_P
(
NODE
) \

670 (
	`CLASS_TYPE_P
 (
NODE
Ë&& 
	`CLASSTYPE_LAMBDA_EXPR
 (NODE))

	)

673 
	#LAMBDA_FUNCTION_P
(
FNDECL
) \

674 (
	`DECL_OVERLOADED_OPERATOR_P
 (
FNDECL
Ë=
CALL_EXPR
 \

675 && 
	`LAMBDA_TYPE_P
 (
	`CP_DECL_CONTEXT
 (
FNDECL
)))

	)

677 
	e˝_œmbda_deÁu…_ˇ±uª_mode_ty≥
 {

678 
	mCPLD_NONE
,

679 
	mCPLD_COPY
,

680 
	mCPLD_REFERENCE


684 
	#LAMBDA_EXPR_DEFAULT_CAPTURE_MODE
(
NODE
) \

685 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
deÁu…_ˇ±uª_mode
)

	)

693 
	#LAMBDA_EXPR_CAPTURE_LIST
(
NODE
) \

694 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
ˇ±uª_li°
)

	)

699 
	#LAMBDA_EXPR_THIS_CAPTURE
(
NODE
) \

700 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
this_ˇ±uª
)

	)

703 
	#LAMBDA_EXPR_CAPTURES_THIS_P
(
NODE
) \

704 
	`LAMBDA_EXPR_THIS_CAPTURE
(
NODE
)

	)

707 
	#LAMBDA_EXPR_MUTABLE_P
(
NODE
) \

708 
	`TREE_LANG_FLAG_1
 (
	`LAMBDA_EXPR_CHECK
 (
NODE
))

	)

712 
	#LAMBDA_EXPR_RETURN_TYPE
(
NODE
) \

713 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
ªtu∫_ty≥
)

	)

716 
	#LAMBDA_EXPR_LOCATION
(
NODE
) \

717 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
locus
)

	)

721 
	#LAMBDA_EXPR_EXTRA_SCOPE
(
NODE
) \

722 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
exåa_sc›e
)

	)

725 
	#LAMBDA_EXPR_DISCRIMINATOR
(
NODE
) \

726 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
dis¸imö©‹
)

	)

730 
	#LAMBDA_EXPR_PENDING_PROXIES
(
NODE
) \

731 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
≥ndög_¥oxõs
)

	)

736 
	#LAMBDA_EXPR_CLOSURE
(
NODE
) \

737 (((
åì_œmbda_ex¥
 *)
	`LAMBDA_EXPR_CHECK
 (
NODE
))->
˛osuª
)

	)

739 
GTY
 (()Ë
	gåì_œmbda_ex¥


741 
åì_ty≥d
 
	gty≥d
;

742 
åì
 
	gˇ±uª_li°
;

743 
åì
 
	gthis_ˇ±uª
;

744 
åì
 
	gªtu∫_ty≥
;

745 
åì
 
	gexåa_sc›e
;

746 
åì
 
	g˛osuª
;

747 
	gvec
<
	gåì
, 
	gva_gc
> *
	g≥ndög_¥oxõs
;

748 
loˇti⁄_t
 
	glocus
;

749 
˝_œmbda_deÁu…_ˇ±uª_mode_ty≥
 
	gdeÁu…_ˇ±uª_mode
;

750 
	gdis¸imö©‹
;

767 
GTY
(()Ë
	gquÆifõd_ty≥def_ußge_s
 {

768 
åì
 
	gty≥def_de˛
;

769 
åì
 
	gc⁄ãxt
;

770 
loˇti⁄_t
 
	glocus
;

772 
quÆifõd_ty≥def_ußge_s
 
	tquÆifõd_ty≥def_ußge_t
;

777 
	#TINFO_HAS_ACCESS_ERRORS
(
NODE
) \

778 (
	`TREE_LANG_FLAG_0
 (
	`TEMPLATE_INFO_CHECK
 (
NODE
)))

	)

779 
	#FNDECL_HAS_ACCESS_ERRORS
(
NODE
) \

780 (
	`TINFO_HAS_ACCESS_ERRORS
 (
	`DECL_TEMPLATE_INFO
 (
NODE
)))

	)

782 
GTY
(()Ë
	gåì_ãm∂©e_öfo
 {

783 
åì_comm⁄
 
	gcomm⁄
;

784 
	gvec
<
	gquÆifõd_ty≥def_ußge_t
, 
	gva_gc
> *
	gty≥defs_√edög_ac˚ss_checkög
;

787 
	e˝_åì_node_°ru˘uª_íum
 {

788 
	mTS_CP_GENERIC
,

789 
	mTS_CP_IDENTIFIER
,

790 
	mTS_CP_TPI
,

791 
	mTS_CP_PTRMEM
,

792 
	mTS_CP_BINDING
,

793 
	mTS_CP_OVERLOAD
,

794 
	mTS_CP_BASELINK
,

795 
	mTS_CP_WRAPPER
,

796 
	mTS_CP_DEFAULT_ARG
,

797 
	mTS_CP_DEFERRED_NOEXCEPT
,

798 
	mTS_CP_STATIC_ASSERT
,

799 
	mTS_CP_ARGUMENT_PACK_SELECT
,

800 
	mTS_CP_TRAIT_EXPR
,

801 
	mTS_CP_LAMBDA_EXPR
,

802 
	mTS_CP_TEMPLATE_INFO
,

803 
	mTS_CP_USERDEF_LITERAL
,

804 
	mLAST_TS_CP_ENUM


808 
GTY
((
desc
 ("cp_tree_node_structure (&%h)"),

809 
chaö_√xt
 ("(uni⁄Ü™g_åì_nodê*Ëc_åì_chaö_√xà(&%h.gíîic)"))Ë
	gœng_åì_node
 {

810 
åì_node
 
GTY
 ((
èg
 ("TS_CP_GENERIC"),

811 
desc
 ("åì_node_°ru˘uª (&%h)"))Ë
	ggíîic
;

812 
ãm∂©e_∑rm_ödex_s
 
GTY
 ((
èg
 ("TS_CP_TPI"))Ë
	gçi
;

813 
±rmem_c°
 
GTY
 ((
èg
 ("TS_CP_PTRMEM"))Ë
	g±rmem
;

814 
åì_ovîlﬂd
 
GTY
 ((
èg
 ("TS_CP_OVERLOAD"))Ë
	govîlﬂd
;

815 
åì_ba£lök
 
GTY
 ((
èg
 ("TS_CP_BASELINK"))Ë
	gba£lök
;

816 
åì_deÁu…_¨g
 
GTY
 ((
èg
 ("TS_CP_DEFAULT_ARG"))Ë
	gdeÁu…_¨g
;

817 
åì_de„ºed_n€x˚±
 
GTY
 ((
èg
 ("TS_CP_DEFERRED_NOEXCEPT"))Ë
	gde„ºed_n€x˚±
;

818 
œng_idítifõr
 
GTY
 ((
èg
 ("TS_CP_IDENTIFIER"))Ë
	gidítifõr
;

819 
åì_°©ic_as£π
 
GTY
 ((
èg
 ("TS_CP_STATIC_ASSERT")))

820 
	g°©ic_as£πi⁄
;

821 
åì_¨gumít_∑ck_£À˘
 
GTY
 ((
èg
 ("TS_CP_ARGUMENT_PACK_SELECT")))

822 
	g¨gumít_∑ck_£À˘
;

823 
åì_åaô_ex¥
 
GTY
 ((
èg
 ("TS_CP_TRAIT_EXPR")))

824 
	gåaô_ex¥essi⁄
;

825 
åì_œmbda_ex¥
 
GTY
 ((
èg
 ("TS_CP_LAMBDA_EXPR")))

826 
	gœmbda_ex¥essi⁄
;

827 
åì_ãm∂©e_öfo
 
GTY
 ((
èg
 ("TS_CP_TEMPLATE_INFO")))

828 
	gãm∂©e_öfo
;

829 
åì_u£rdef_lôîÆ
 
GTY
 ((
èg
 ("TS_CP_USERDEF_LITERAL")))

830 
	gu£rdef_lôîÆ
;

834 
	e˝_åì_ödex


836 
	mCPTI_JAVA_BYTE_TYPE
,

837 
	mCPTI_JAVA_SHORT_TYPE
,

838 
	mCPTI_JAVA_INT_TYPE
,

839 
	mCPTI_JAVA_LONG_TYPE
,

840 
	mCPTI_JAVA_FLOAT_TYPE
,

841 
	mCPTI_JAVA_DOUBLE_TYPE
,

842 
	mCPTI_JAVA_CHAR_TYPE
,

843 
	mCPTI_JAVA_BOOLEAN_TYPE
,

845 
	mCPTI_WCHAR_DECL
,

846 
	mCPTI_VTABLE_ENTRY_TYPE
,

847 
	mCPTI_DELTA_TYPE
,

848 
	mCPTI_VTABLE_INDEX_TYPE
,

849 
	mCPTI_CLEANUP_TYPE
,

850 
	mCPTI_VTT_PARM_TYPE
,

852 
	mCPTI_CLASS_TYPE
,

853 
	mCPTI_UNKNOWN_TYPE
,

854 
	mCPTI_INIT_LIST_TYPE
,

855 
	mCPTI_VTBL_TYPE
,

856 
	mCPTI_VTBL_PTR_TYPE
,

857 
	mCPTI_STD
,

858 
	mCPTI_ABI
,

859 
	mCPTI_CONST_TYPE_INFO_TYPE
,

860 
	mCPTI_TYPE_INFO_PTR_TYPE
,

861 
	mCPTI_ABORT_FNDECL
,

862 
	mCPTI_GLOBAL_DELETE_FNDECL
,

863 
	mCPTI_AGGR_TAG
,

865 
	mCPTI_CTOR_IDENTIFIER
,

866 
	mCPTI_COMPLETE_CTOR_IDENTIFIER
,

867 
	mCPTI_BASE_CTOR_IDENTIFIER
,

868 
	mCPTI_DTOR_IDENTIFIER
,

869 
	mCPTI_COMPLETE_DTOR_IDENTIFIER
,

870 
	mCPTI_BASE_DTOR_IDENTIFIER
,

871 
	mCPTI_DELETING_DTOR_IDENTIFIER
,

872 
	mCPTI_DELTA_IDENTIFIER
,

873 
	mCPTI_IN_CHARGE_IDENTIFIER
,

874 
	mCPTI_VTT_PARM_IDENTIFIER
,

875 
	mCPTI_NELTS_IDENTIFIER
,

876 
	mCPTI_THIS_IDENTIFIER
,

877 
	mCPTI_PFN_IDENTIFIER
,

878 
	mCPTI_VPTR_IDENTIFIER
,

879 
	mCPTI_STD_IDENTIFIER
,

881 
	mCPTI_LANG_NAME_C
,

882 
	mCPTI_LANG_NAME_CPLUSPLUS
,

883 
	mCPTI_LANG_NAME_JAVA
,

885 
	mCPTI_EMPTY_EXCEPT_SPEC
,

886 
	mCPTI_NOEXCEPT_TRUE_SPEC
,

887 
	mCPTI_NOEXCEPT_FALSE_SPEC
,

888 
	mCPTI_JCLASS
,

889 
	mCPTI_TERMINATE
,

890 
	mCPTI_CALL_UNEXPECTED
,

891 
	mCPTI_ATEXIT_FN_PTR_TYPE
,

892 
	mCPTI_ATEXIT
,

893 
	mCPTI_DSO_HANDLE
,

894 
	mCPTI_DCAST
,

896 
	mCPTI_KEYED_CLASSES
,

898 
	mCPTI_NULLPTR
,

899 
	mCPTI_NULLPTR_TYPE
,

901 
	mCPTI_MAX


904 
GTY
(()Ë
åì
 
˝_globÆ_åìs
[
CPTI_MAX
];

906 
	#java_byã_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_BYTE_TYPE
]

	)

907 
	#java_sh‹t_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_SHORT_TYPE
]

	)

908 
	#java_öt_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_INT_TYPE
]

	)

909 
	#java_l⁄g_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_LONG_TYPE
]

	)

910 
	#java_Êﬂt_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_FLOAT_TYPE
]

	)

911 
	#java_doubÀ_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_DOUBLE_TYPE
]

	)

912 
	#java_ch¨_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_CHAR_TYPE
]

	)

913 
	#java_boﬁón_ty≥_node
 
˝_globÆ_åìs
[
CPTI_JAVA_BOOLEAN_TYPE
]

	)

915 
	#wch¨_de˛_node
 
˝_globÆ_åìs
[
CPTI_WCHAR_DECL
]

	)

916 
	#vèbÀ_íåy_ty≥
 
˝_globÆ_åìs
[
CPTI_VTABLE_ENTRY_TYPE
]

	)

919 
	#dñè_ty≥_node
 
˝_globÆ_åìs
[
CPTI_DELTA_TYPE
]

	)

921 
	#vèbÀ_ödex_ty≥
 
˝_globÆ_åìs
[
CPTI_VTABLE_INDEX_TYPE
]

	)

923 
	#˛ass_ty≥_node
 
˝_globÆ_åìs
[
CPTI_CLASS_TYPE
]

	)

924 
	#unknown_ty≥_node
 
˝_globÆ_åìs
[
CPTI_UNKNOWN_TYPE
]

	)

925 
	#öô_li°_ty≥_node
 
˝_globÆ_åìs
[
CPTI_INIT_LIST_TYPE
]

	)

926 
	#vtbl_ty≥_node
 
˝_globÆ_åìs
[
CPTI_VTBL_TYPE
]

	)

927 
	#vtbl_±r_ty≥_node
 
˝_globÆ_åìs
[
CPTI_VTBL_PTR_TYPE
]

	)

928 
	#°d_node
 
˝_globÆ_åìs
[
CPTI_STD
]

	)

929 
	#abi_node
 
˝_globÆ_åìs
[
CPTI_ABI
]

	)

930 
	#c⁄°_ty≥_öfo_ty≥_node
 
˝_globÆ_åìs
[
CPTI_CONST_TYPE_INFO_TYPE
]

	)

931 
	#ty≥_öfo_±r_ty≥
 
˝_globÆ_åìs
[
CPTI_TYPE_INFO_PTR_TYPE
]

	)

932 
	#ab‹t_‚de˛
 
˝_globÆ_åìs
[
CPTI_ABORT_FNDECL
]

	)

933 
	#globÆ_dñëe_‚de˛
 
˝_globÆ_åìs
[
CPTI_GLOBAL_DELETE_FNDECL
]

	)

934 
	#cuºít_aggr
 
˝_globÆ_åìs
[
CPTI_AGGR_TAG
]

	)

935 
	#nuŒ±r_node
 
˝_globÆ_åìs
[
CPTI_NULLPTR
]

	)

936 
	#nuŒ±r_ty≥_node
 
˝_globÆ_åìs
[
CPTI_NULLPTR_TYPE
]

	)

943 
	#˘‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_CTOR_IDENTIFIER
]

	)

945 
	#com∂ëe_˘‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_COMPLETE_CTOR_IDENTIFIER
]

	)

947 
	#ba£_˘‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_BASE_CTOR_IDENTIFIER
]

	)

951 
	#dt‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_DTOR_IDENTIFIER
]

	)

953 
	#com∂ëe_dt‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_COMPLETE_DTOR_IDENTIFIER
]

	)

956 
	#ba£_dt‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_BASE_DTOR_IDENTIFIER
]

	)

959 
	#dñëög_dt‹_idítifõr
 
˝_globÆ_åìs
[
CPTI_DELETING_DTOR_IDENTIFIER
]

	)

960 
	#dñè_idítifõr
 
˝_globÆ_åìs
[
CPTI_DELTA_IDENTIFIER
]

	)

961 
	#ö_ch¨ge_idítifõr
 
˝_globÆ_åìs
[
CPTI_IN_CHARGE_IDENTIFIER
]

	)

964 
	#vâ_∑rm_idítifõr
 
˝_globÆ_åìs
[
CPTI_VTT_PARM_IDENTIFIER
]

	)

965 
	#√…s_idítifõr
 
˝_globÆ_åìs
[
CPTI_NELTS_IDENTIFIER
]

	)

966 
	#this_idítifõr
 
˝_globÆ_åìs
[
CPTI_THIS_IDENTIFIER
]

	)

967 
	#p‚_idítifõr
 
˝_globÆ_åìs
[
CPTI_PFN_IDENTIFIER
]

	)

968 
	#v±r_idítifõr
 
˝_globÆ_åìs
[
CPTI_VPTR_IDENTIFIER
]

	)

970 
	#°d_idítifõr
 
˝_globÆ_åìs
[
CPTI_STD_IDENTIFIER
]

	)

971 
	#œng_«me_c
 
˝_globÆ_åìs
[
CPTI_LANG_NAME_C
]

	)

972 
	#œng_«me_˝lu•lus
 
˝_globÆ_åìs
[
CPTI_LANG_NAME_CPLUSPLUS
]

	)

973 
	#œng_«me_java
 
˝_globÆ_åìs
[
CPTI_LANG_NAME_JAVA
]

	)

976 
	#em±y_ex˚±_•ec
 
˝_globÆ_åìs
[
CPTI_EMPTY_EXCEPT_SPEC
]

	)

977 
	#n€x˚±_åue_•ec
 
˝_globÆ_åìs
[
CPTI_NOEXCEPT_TRUE_SPEC
]

	)

978 
	#n€x˚±_Ál£_•ec
 
˝_globÆ_åìs
[
CPTI_NOEXCEPT_FALSE_SPEC
]

	)

981 
	#j˛ass_node
 
˝_globÆ_åìs
[
CPTI_JCLASS
]

	)

984 
	#ãrmö©e_node
 
˝_globÆ_åìs
[
CPTI_TERMINATE
]

	)

987 
	#ˇŒ_u√x≥˘ed_node
 
˝_globÆ_åìs
[
CPTI_CALL_UNEXPECTED
]

	)

991 
	#©exô_‚_±r_ty≥_node
 
˝_globÆ_åìs
[
CPTI_ATEXIT_FN_PTR_TYPE
]

	)

994 
	#©exô_node
 
˝_globÆ_åìs
[
CPTI_ATEXIT
]

	)

997 
	#dso_h™dÀ_node
 
˝_globÆ_åìs
[
CPTI_DSO_HANDLE
]

	)

1000 
	#dy«mic_ˇ°_node
 
˝_globÆ_åìs
[
CPTI_DCAST
]

	)

1003 
	#˛ónup_ty≥
 
˝_globÆ_åìs
[
CPTI_CLEANUP_TYPE
]

	)

1007 
	#vâ_∑rm_ty≥
 
˝_globÆ_åìs
[
CPTI_VTT_PARM_TYPE
]

	)

1012 
	#keyed_˛as£s
 
˝_globÆ_åìs
[
CPTI_KEYED_CLASSES
]

	)

1017 
	#ac˚ss_deÁu…_node
 
nuŒ_node


	)

1021 
GTY
(()Ë
	gßved_sc›e
 {

1022 
	gvec
<
	gcxx_ßved_bödög
, 
	gva_gc
> *
	gﬁd_bödögs
;

1023 
åì
 
	gﬁd_«me•a˚
;

1024 
	gvec
<
	gåì
, 
	gva_gc
> *
	gde˛_ns_li°
;

1025 
åì
 
	g˛ass_«me
;

1026 
åì
 
	g˛ass_ty≥
;

1027 
åì
 
	gac˚ss_•ecifõr
;

1028 
åì
 
	gfun˘i⁄_de˛
;

1029 
	gvec
<
	gåì
, 
	gva_gc
> *
	gœng_ba£
;

1030 
åì
 
	gœng_«me
;

1031 
åì
 
	gãm∂©e_∑rms
;

1032 
˝_bödög_Àvñ
 *
	gx_¥evious_˛ass_Àvñ
;

1033 
åì
 
	gx_ßved_åì
;

1036 
åì
 
	gx_cuºít_˛ass_±r
;

1037 
åì
 
	gx_cuºít_˛ass_ªf
;

1039 
	gx_¥o˚ssög_ãm∂©e_de˛
;

1040 
	gx_¥o˚ssög_•ecüliz©i⁄
;

1041 
BOOL_BITFIELD
 
	gx_¥o˚ssög_ex∂icô_ö°™tüti⁄
 : 1;

1042 
BOOL_BITFIELD
 
	g√ed_p›_fun˘i⁄_c⁄ãxt
 : 1;

1044 
	gu√vÆu©ed_›î™d
;

1045 
	göhibô_evÆu©i⁄_w¨nögs
;

1048 
	gomp_de˛¨e_èrgë_©åibuã
;

1050 
°mt_åì_s
 
	gx_°mt_åì
;

1052 
˝_bödög_Àvñ
 *
	g˛ass_bödögs
;

1053 
˝_bödög_Àvñ
 *
	gbödögs
;

1055 
poöãr_m≠_t
 *
	gx_loˇl_•ecüliz©i⁄s
;

1057 
ßved_sc›e
 *
	g¥ev
;

1062 
	#cuºít_«me•a˚
 
sc›e_chaö
->
ﬁd_«me•a˚


	)

1066 
	#de˛_«me•a˚_li°
 
sc›e_chaö
->
de˛_ns_li°


	)

1070 
	#cuºít_˛ass_«me
 
sc›e_chaö
->
˛ass_«me


	)

1074 
	#cuºít_˛ass_ty≥
 
sc›e_chaö
->
˛ass_ty≥


	)

1081 
	#cuºít_ac˚ss_•ecifõr
 
sc›e_chaö
->
ac˚ss_•ecifõr


	)

1085 
	#cuºít_œng_ba£
 
sc›e_chaö
->
œng_ba£


	)

1086 
	#cuºít_œng_«me
 
sc›e_chaö
->
œng_«me


	)

1095 
	#cuºít_ãm∂©e_∑rms
 
sc›e_chaö
->
ãm∂©e_∑rms


	)

1097 
	#¥o˚ssög_ãm∂©e_de˛
 
sc›e_chaö
->
x_¥o˚ssög_ãm∂©e_de˛


	)

1098 
	#¥o˚ssög_•ecüliz©i⁄
 
sc›e_chaö
->
x_¥o˚ssög_•ecüliz©i⁄


	)

1099 
	#¥o˚ssög_ex∂icô_ö°™tüti⁄
 
sc›e_chaö
->
x_¥o˚ssög_ex∂icô_ö°™tüti⁄


	)

1104 
	sw¨nög_£¡öñ


1106 &
	mÊag
;

1107 
	mvÆ
;

1108 
w¨nög_£¡öñ
(& 
Êag
, 
boﬁ
 
suµªss
=
åue
)

1109 : 
Êag
(Êag), 
vÆ
(ÊagË{ i‡(
	msuµªss
Ë
	mÊag
 = 0; }

1110 ~
w¨nög_£¡öñ
(Ë{ 
	mÊag
 = 
vÆ
; }

1116 
	#¥evious_˛ass_Àvñ
 
sc›e_chaö
->
x_¥evious_˛ass_Àvñ


	)

1122 
	#loˇl_•ecüliz©i⁄s
 
sc›e_chaö
->
x_loˇl_•ecüliz©i⁄s


	)

1126 
GTY
(()Ë
ßved_sc›e
 *
sc›e_chaö
;

1128 
GTY
(()Ë
	gcxx_öt_åì_m≠
 {

1129 
	guid
;

1130 
åì
 
	gto
;

1133 
cxx_öt_åì_m≠_hash
 (const *);

1134 
cxx_öt_åì_m≠_eq
 (const *, const *);

1138 
GTY
(()Ë
	gœnguage_fun˘i⁄
 {

1139 
c_œnguage_fun˘i⁄
 
	gba£
;

1141 
åì
 
	gx_cdt‹_œbñ
;

1142 
åì
 
	gx_cuºít_˛ass_±r
;

1143 
åì
 
	gx_cuºít_˛ass_ªf
;

1144 
åì
 
	gx_eh_•ec_block
;

1145 
åì
 
	gx_ö_ch¨ge_∑rm
;

1146 
åì
 
	gx_vâ_∑rm
;

1147 
åì
 
	gx_ªtu∫_vÆue
;

1148 
åì
 
	gx_auto_ªtu∫_∑âîn
;

1150 
BOOL_BITFIELD
 
	gªtu∫s_vÆue
 : 1;

1151 
BOOL_BITFIELD
 
	gªtu∫s_nuŒ
 : 1;

1152 
BOOL_BITFIELD
 
	gªtu∫s_abn‹mÆly
 : 1;

1153 
BOOL_BITFIELD
 
	göföôe_lo›
: 1;

1154 
BOOL_BITFIELD
 
	gx_ö_fun˘i⁄_åy_h™dÀr
 : 1;

1155 
BOOL_BITFIELD
 
	gx_ö_ba£_öôülizî
 : 1;

1158 
BOOL_BITFIELD
 
	gˇn_throw
 : 1;

1160 
hèb_t
 
GTY
((
∑øm_is
(
«med_œbñ_íåy
))Ë
	gx_«med_œbñs
;

1161 
˝_bödög_Àvñ
 *
	gbödögs
;

1162 
	gvec
<
	gåì
, 
	gva_gc
> *
	gx_loˇl_«mes
;

1165 
	gvec
<
	gåì
, 
	gva_gc
> *
	göföôe_lo›s
;

1166 
hèb_t
 
GTY
((
∑øm_is
 (
cxx_öt_åì_m≠
))Ë
	gexã∫_de˛_m≠
;

1171 
	#˝_fun˘i⁄_chaö
 (
cfun
->
œnguage
)

	)

1178 
	#cdt‹_œbñ
 
˝_fun˘i⁄_chaö
->
x_cdt‹_œbñ


	)

1184 
	#cuºít_˛ass_±r
 \

1185 (*(
cfun
 && 
˝_fun˘i⁄_chaö
 \

1186 ? &
˝_fun˘i⁄_chaö
->
x_cuºít_˛ass_±r
 \

1187 : &
sc›e_chaö
->
x_cuºít_˛ass_±r
))

	)

1188 
	#cuºít_˛ass_ªf
 \

1189 (*(
cfun
 && 
˝_fun˘i⁄_chaö
 \

1190 ? &
˝_fun˘i⁄_chaö
->
x_cuºít_˛ass_ªf
 \

1191 : &
sc›e_chaö
->
x_cuºít_˛ass_ªf
))

	)

1196 
	#cuºít_eh_•ec_block
 
˝_fun˘i⁄_chaö
->
x_eh_•ec_block


	)

1201 
	#cuºít_ö_ch¨ge_∑rm
 
˝_fun˘i⁄_chaö
->
x_ö_ch¨ge_∑rm


	)

1206 
	#cuºít_vâ_∑rm
 
˝_fun˘i⁄_chaö
->
x_vâ_∑rm


	)

1211 
	#cuºít_fun˘i⁄_ªtu∫s_vÆue
 
˝_fun˘i⁄_chaö
->
ªtu∫s_vÆue


	)

1216 
	#cuºít_fun˘i⁄_ªtu∫s_nuŒ
 
˝_fun˘i⁄_chaö
->
ªtu∫s_nuŒ


	)

1221 
	#cuºít_fun˘i⁄_ªtu∫s_abn‹mÆly
 \

1222 
˝_fun˘i⁄_chaö
->
ªtu∫s_abn‹mÆly


	)

1228 
	#cuºít_fun˘i⁄_öföôe_lo›
 
˝_fun˘i⁄_chaö
->
öföôe_lo›


	)

1231 
	#ö_ba£_öôülizî
 
˝_fun˘i⁄_chaö
->
x_ö_ba£_öôülizî


	)

1233 
	#ö_fun˘i⁄_åy_h™dÀr
 
˝_fun˘i⁄_chaö
->
x_ö_fun˘i⁄_åy_h™dÀr


	)

1238 
	#cuºít_fun˘i⁄_ªtu∫_vÆue
 \

1239 (
˝_fun˘i⁄_chaö
->
x_ªtu∫_vÆue
)

	)

1243 
	#cuºít_fun˘i⁄_auto_ªtu∫_∑âîn
 \

1244 (
˝_fun˘i⁄_chaö
->
x_auto_ªtu∫_∑âîn
)

	)

1248 
	#NEW_DELETE_OPNAME_P
(
NAME
) \

1249 ((
NAME
Ë=
	`™si_›«me
 (
NEW_EXPR
) \

1250 || (
NAME
Ë=
	`™si_›«me
 (
VEC_NEW_EXPR
) \

1251 || (
NAME
Ë=
	`™si_›«me
 (
DELETE_EXPR
) \

1252 || (
NAME
Ë=
	`™si_›«me
 (
VEC_DELETE_EXPR
))

	)

1254 
	#™si_›«me
(
CODE
) \

1255 (
›î©‹_«me_öfo
[(Ë(
CODE
)].
idítifõr
)

	)

1256 
	#™si_ass›«me
(
CODE
) \

1257 (
assignmít_›î©‹_«me_öfo
[(Ë(
CODE
)].
idítifõr
)

	)

1260 
boﬁ
 
°©emít_code_p
[
MAX_TREE_CODES
];

1262 
	#STATEMENT_CODE_P
(
CODE
Ë
°©emít_code_p
[(Ë(CODE)]

	)

1264 
	eœnguages
 { 
	mœng_c
, 
	mœng_˝lu•lus
, 
	mœng_java
 };

1267 
	#TYPE_IDENTIFIER
(
NODE
Ë(
	`DECL_NAME
 (
	`TYPE_NAME
 (NODE)))

	)

1268 
	#TYPE_LINKAGE_IDENTIFIER
(
NODE
) \

1269 (
	`TYPE_IDENTIFIER
 (
	`TYPE_MAIN_VARIANT
 (
NODE
)))

	)

1270 
	#TYPE_NAME_STRING
(
NODE
Ë(
	`IDENTIFIER_POINTER
 (
	`TYPE_IDENTIFIER
 (NODE)))

	)

1271 
	#TYPE_NAME_LENGTH
(
NODE
Ë(
	`IDENTIFIER_LENGTH
 (
	`TYPE_IDENTIFIER
 (NODE)))

	)

1274 
	#TYPE_ANONYMOUS_P
(
NODE
) \

1275 (
	`OVERLOAD_TYPE_P
 (
NODE
Ë&& 
	`ANON_AGGRNAME_P
 (
	`TYPE_LINKAGE_IDENTIFIER
 (NODE)))

	)

1278 
	#TYPE_MAIN_DECL
(
NODE
Ë(
	`TYPE_STUB_DECL
 (
	`TYPE_MAIN_VARIANT
 (NODE)))

	)

1282 
	#WILDCARD_TYPE_P
(
T
) \

1283 (
	`TREE_CODE
 (
T
Ë=
TEMPLATE_TYPE_PARM
 \

1284 || 
	`TREE_CODE
 (
T
Ë=
TYPENAME_TYPE
 \

1285 || 
	`TREE_CODE
 (
T
Ë=
TYPEOF_TYPE
 \

1286 || 
	`TREE_CODE
 (
T
Ë=
BOUND_TEMPLATE_TEMPLATE_PARM
 \

1287 || 
	`TREE_CODE
 (
T
Ë=
DECLTYPE_TYPE
)

	)

1293 
	#MAYBE_CLASS_TYPE_P
(
T
Ë(
	`WILDCARD_TYPE_P
 (TË|| 
	`CLASS_TYPE_P
 (T))

	)

1297 
	#SET_CLASS_TYPE_P
(
T
, 
VAL
) \

1298 (
	`TYPE_LANG_FLAG_5
 (
T
Ë(
VAL
))

	)

1302 
	#CLASS_TYPE_P
(
T
) \

1303 (
	`RECORD_OR_UNION_CODE_P
 (
	`TREE_CODE
 (
T
)Ë&& 
	`TYPE_LANG_FLAG_5
 (T))

	)

1306 
	#NON_UNION_CLASS_TYPE_P
(
T
) \

1307 (
	`CLASS_TYPE_P
 (
T
Ë&& 
	`TREE_CODE
 (TË!
UNION_TYPE
)

	)

1310 
	#RECORD_OR_UNION_CODE_P
(
T
) \

1311 ((
T
Ë=
RECORD_TYPE
 || (TË=
UNION_TYPE
)

	)

1312 
	#OVERLOAD_TYPE_P
(
T
) \

1313 (
	`CLASS_TYPE_P
 (
T
Ë|| 
	`TREE_CODE
 (TË=
ENUMERAL_TYPE
)

	)

1316 
	#TYPE_FOR_JAVA
(
NODE
Ë
	`TYPE_LANG_FLAG_3
 (NODE)

	)

1320 
	#TYPE_DEPENDENT_P
(
NODE
Ë
	`TYPE_LANG_FLAG_0
 (NODE)

	)

1324 
	#TYPE_DEPENDENT_P_VALID
(
NODE
Ë
	`TYPE_LANG_FLAG_6
(NODE)

	)

1327 
	#CP_TYPE_CONST_P
(
NODE
) \

1328 ((
	`˝_ty≥_quÆs
 (
NODE
Ë& 
TYPE_QUAL_CONST
Ë!0)

	)

1331 
	#CP_TYPE_VOLATILE_P
(
NODE
) \

1332 ((
	`˝_ty≥_quÆs
 (
NODE
Ë& 
TYPE_QUAL_VOLATILE
Ë!0)

	)

1335 
	#CP_TYPE_RESTRICT_P
(
NODE
) \

1336 ((
	`˝_ty≥_quÆs
 (
NODE
Ë& 
TYPE_QUAL_RESTRICT
Ë!0)

	)

1342 
	#CP_TYPE_CONST_NON_VOLATILE_P
(
NODE
) \

1343 ((
	`˝_ty≥_quÆs
 (
NODE
Ë& (
TYPE_QUAL_CONST
 | 
TYPE_QUAL_VOLATILE
)) \

1344 =
TYPE_QUAL_CONST
)

	)

1346 
	#FUNCTION_ARG_CHAIN
(
NODE
) \

1347 
	`TREE_CHAIN
 (
	`TYPE_ARG_TYPES
 (
	`TREE_TYPE
 (
NODE
)))

	)

1351 
	#FUNCTION_FIRST_USER_PARMTYPE
(
NODE
) \

1352 
	`skù_¨tificül_∑rms_f‹
 ((
NODE
), 
	`TYPE_ARG_TYPES
 (
	`TREE_TYPE
 (NODE)))

	)

1355 
	#FUNCTION_FIRST_USER_PARM
(
NODE
) \

1356 
	`skù_¨tificül_∑rms_f‹
 ((
NODE
), 
	`DECL_ARGUMENTS
 (NODE))

	)

1360 
	#DERIVED_FROM_P
(
PARENT
, 
TYPE
) \

1361 (
	`lookup_ba£
 ((
TYPE
), (
PARENT
), 
ba_™y
, 
NULL
, 
tf_n⁄e
Ë!
NULL_TREE
)

	)

1364 
	#CLASSTYPE_VISIBILITY
(
TYPE
) \

1365 
	`DECL_VISIBILITY
 (
	`TYPE_MAIN_DECL
 (
TYPE
))

	)

1366 
	#CLASSTYPE_VISIBILITY_SPECIFIED
(
TYPE
) \

1367 
	`DECL_VISIBILITY_SPECIFIED
 (
	`TYPE_MAIN_DECL
 (
TYPE
))

	)

1369 
GTY
 (()Ë
	tåì_∑ú_s
 {

1370 
åì
 
	gpuΩo£
;

1371 
åì
 
	gvÆue
;

1372 } 
	tåì_∑ú_s
;

1373 
åì_∑ú_s
 *
	tåì_∑ú_p
;

1378 
GTY
(()Ë
	gœng_ty≥_hódî
 {

1379 
BOOL_BITFIELD
 
	gis_œng_ty≥_˛ass
 : 1;

1381 
BOOL_BITFIELD
 
	ghas_ty≥_c⁄vîsi⁄
 : 1;

1382 
BOOL_BITFIELD
 
	ghas_c›y_˘‹
 : 1;

1383 
BOOL_BITFIELD
 
	ghas_deÁu…_˘‹
 : 1;

1384 
BOOL_BITFIELD
 
	gc⁄°_√eds_öô
 : 1;

1385 
BOOL_BITFIELD
 
	gªf_√eds_öô
 : 1;

1386 
BOOL_BITFIELD
 
	ghas_c⁄°_c›y_assign
 : 1;

1388 
BOOL_BITFIELD
 
	g•¨e
 : 1;

1404 
GTY
(()Ë
	gœng_ty≥_˛ass
 {

1405 
œng_ty≥_hódî
 
	gh
;

1407 
	gÆign
;

1409 
	ghas_muèbÀ
 : 1;

1410 
	gcom_öãrÁ˚
 : 1;

1411 
	gn⁄_pod_˛ass
 : 1;

1412 
	g√¨ly_em±y_p
 : 1;

1413 
	gu£r_Æign
 : 1;

1414 
	ghas_c›y_assign
 : 1;

1415 
	ghas_√w
 : 1;

1416 
	ghas_¨øy_√w
 : 1;

1418 
	ggës_dñëe
 : 2;

1419 
	göãrÁ˚_⁄ly
 : 1;

1420 
	göãrÁ˚_unknown
 : 1;

1421 
	gc⁄èös_em±y_˛ass_p
 : 1;

1422 
	g™⁄_aggr
 : 1;

1423 
	gn⁄_zîo_öô
 : 1;

1424 
	gem±y_p
 : 1;

1426 
	gvec_√w_u£s_cookõ
 : 1;

1427 
	gde˛¨ed_˛ass
 : 1;

1428 
	gdüm⁄d_sh≠ed
 : 1;

1429 
	gª≥©ed_ba£
 : 1;

1430 
	gbeög_deföed
 : 1;

1431 
	gjava_öãrÁ˚
 : 1;

1432 
	gdebug_ªque°ed
 : 1;

1433 
	gfõlds_ªad⁄ly
 : 1;

1435 
	gu£_ãm∂©e
 : 2;

1436 
	g±rmemfunc_Êag
 : 1;

1437 
	gwas_™⁄ymous
 : 1;

1438 
	gœzy_deÁu…_˘‹
 : 1;

1439 
	gœzy_c›y_˘‹
 : 1;

1440 
	gœzy_c›y_assign
 : 1;

1441 
	gœzy_de°ru˘‹
 : 1;

1443 
	ghas_c⁄°_c›y_˘‹
 : 1;

1444 
	ghas_com∂ex_c›y_˘‹
 : 1;

1445 
	ghas_com∂ex_c›y_assign
 : 1;

1446 
	gn⁄_aggªg©e
 : 1;

1447 
	ghas_com∂ex_dÊt
 : 1;

1448 
	ghas_li°_˘‹
 : 1;

1449 
	gn⁄_°d_œyout
 : 1;

1450 
	gis_lôîÆ
 : 1;

1452 
	gœzy_move_˘‹
 : 1;

1453 
	gœzy_move_assign
 : 1;

1454 
	ghas_com∂ex_move_˘‹
 : 1;

1455 
	ghas_com∂ex_move_assign
 : 1;

1456 
	ghas_c⁄°ex¥_˘‹
 : 1;

1465 
	gdummy
 : 3;

1467 
åì
 
	g¥im¨y_ba£
;

1468 
	gvec
<
	gåì_∑ú_s
, 
	gva_gc
> *
	gvˇŒ_ödi˚s
;

1469 
åì
 
	gvèbÀs
;

1470 
åì
 
	gty≥öfo_v¨
;

1471 
	gvec
<
	gåì
, 
	gva_gc
> *
	gvba£s
;

1472 
bödög_èbÀ
 
	g√°ed_udts
;

1473 
åì
 
	gas_ba£
;

1474 
	gvec
<
	gåì
, 
	gva_gc
> *
	gpuª_vútuÆs
;

1475 
åì
 
	g‰õnd_˛as£s
;

1476 
	gvec
<
	gåì
, 
	gva_gc
> * 
GTY
((
ª‹dî
 ("ªs‹t_ty≥_mëhod_vec"))Ë
	gmëhods
;

1477 
åì
 
	gkey_mëhod
;

1478 
åì
 
	gde˛_li°
;

1479 
åì
 
	gãm∂©e_öfo
;

1480 
åì
 
	gbe‰õndög_˛as£s
;

1484 
åì
 
	gobjc_öfo
;

1487 
s‹ãd_fõlds_ty≥
 * 
GTY
 ((
ª‹dî
 ("resort_sorted_fields")))

1488 
	gs‹ãd_fõlds
;

1490 
åì
 
	gœmbda_ex¥
;

1493 
GTY
(()Ë
	gœng_ty≥_±rmem
 {

1494 
œng_ty≥_hódî
 
	gh
;

1495 
åì
 
	gªc‹d
;

1498 
GTY
((
v¨übÀ_size
)Ë
	gœng_ty≥
 {

1499 
	uœng_ty≥_u


1501 
œng_ty≥_hódî
 
GTY
((
skù
 (""))Ë
	gh
;

1502 
œng_ty≥_˛ass
 
GTY
((
èg
 ("1"))Ë
	gc
;

1503 
œng_ty≥_±rmem
 
GTY
((
èg
 ("0"))Ë
	g±rmem
;

1504 } 
GTY
((
desc
 ("%h.h.is_œng_ty≥_˛ass"))Ë
	gu
;

1507 #i‡
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 2007)

1509 
	#LANG_TYPE_CLASS_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

1510 ({ 
œng_ty≥
 *
…
 = 
	`TYPE_LANG_SPECIFIC
 (
NODE
); \

1511 i‡(! 
…
->
u
.
h
.
is_œng_ty≥_˛ass
) \

1512 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

1513 &
…
->
u
.
c
; })

	)

1515 
	#LANG_TYPE_PTRMEM_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

1516 ({ 
œng_ty≥
 *
…
 = 
	`TYPE_LANG_SPECIFIC
 (
NODE
); \

1517 i‡(
…
->
u
.
h
.
is_œng_ty≥_˛ass
) \

1518 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

1519 &
…
->
u
.
±rmem
; })

	)

1523 
	#LANG_TYPE_CLASS_CHECK
(
NODE
Ë(&
	`TYPE_LANG_SPECIFIC
 (NODE)->
u
.
c
)

	)

1524 
	#LANG_TYPE_PTRMEM_CHECK
(
NODE
Ë(&
	`TYPE_LANG_SPECIFIC
 (NODE)->
u
.
±rmem
)

	)

1529 
	#TYPE_GETS_DELETE
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
gës_dñëe
)

	)

1530 
	#TYPE_GETS_REG_DELETE
(
NODE
Ë(
	`TYPE_GETS_DELETE
 (NODEË& 1)

	)

1534 
	#TYPE_VEC_NEW_USES_COOKIE
(
NODE
) \

1535 (
	`CLASS_TYPE_P
 (
NODE
) \

1536 && 
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
vec_√w_u£s_cookõ
)

	)

1540 
	#TYPE_HAS_CONVERSION
(
NODE
) \

1541 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
has_ty≥_c⁄vîsi⁄
)

	)

1545 
	#CLASSTYPE_LAZY_DEFAULT_CTOR
(
NODE
) \

1546 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œzy_deÁu…_˘‹
)

	)

1550 
	#CLASSTYPE_LAZY_COPY_CTOR
(
NODE
) \

1551 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œzy_c›y_˘‹
)

	)

1555 
	#CLASSTYPE_LAZY_MOVE_CTOR
(
NODE
) \

1556 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œzy_move_˘‹
)

	)

1560 
	#CLASSTYPE_LAZY_COPY_ASSIGN
(
NODE
) \

1561 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œzy_c›y_assign
)

	)

1565 
	#CLASSTYPE_LAZY_MOVE_ASSIGN
(
NODE
) \

1566 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œzy_move_assign
)

	)

1570 
	#CLASSTYPE_LAZY_DESTRUCTOR
(
NODE
) \

1571 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œzy_de°ru˘‹
)

	)

1574 
	#CLASSTYPE_FINAL
(
NODE
) \

1575 
	`TYPE_FINAL_P
 (
NODE
)

	)

1579 
	#TYPE_HAS_COPY_ASSIGN
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_c›y_assign
)

	)

1583 
	#TYPE_HAS_CONST_COPY_ASSIGN
(
NODE
) \

1584 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
has_c⁄°_c›y_assign
)

	)

1587 
	#TYPE_HAS_COPY_CTOR
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
h
.
has_c›y_˘‹
)

	)

1588 
	#TYPE_HAS_CONST_COPY_CTOR
(
NODE
) \

1589 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
has_c⁄°_c›y_˘‹
)

	)

1592 
	#TYPE_HAS_LIST_CTOR
(
NODE
) \

1593 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
has_li°_˘‹
)

	)

1598 
	#TYPE_HAS_CONSTEXPR_CTOR
(
NODE
) \

1599 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
has_c⁄°ex¥_˘‹
)

	)

1603 
	#TYPE_HAS_NEW_OPERATOR
(
NODE
) \

1604 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
has_√w
)

	)

1607 
	#TYPE_HAS_ARRAY_NEW_OPERATOR
(
NODE
) \

1608 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
has_¨øy_√w
)

	)

1612 
	#TYPE_BEING_DEFINED
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
beög_deföed
)

	)

1616 
	#COMPLETE_OR_OPEN_TYPE_P
(
NODE
) \

1617 (
	`COMPLETE_TYPE_P
 (
NODE
Ë|| (
	`CLASS_TYPE_P
 (NODEË&& 
	`TYPE_BEING_DEFINED
 (NODE)))

	)

1620 
	#TYPE_MARKED_P
(
NODE
Ë
	`TREE_LANG_FLAG_6
 (
	`TYPE_CHECK
 (NODE))

	)

1624 
	#CLASSTYPE_DIAMOND_SHAPED_P
(
NODE
) \

1625 (
	`LANG_TYPE_CLASS_CHECK
(
NODE
)->
düm⁄d_sh≠ed
)

	)

1629 
	#CLASSTYPE_REPEATED_BASE_P
(
NODE
) \

1630 (
	`LANG_TYPE_CLASS_CHECK
(
NODE
)->
ª≥©ed_ba£
)

	)

1635 
	#CLASSTYPE_KEY_METHOD
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
key_mëhod
)

	)

1649 
	#CLASSTYPE_METHOD_VEC
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
mëhods
)

	)

1655 
	#CLASSTYPE_DECL_LIST
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
de˛_li°
)

	)

1658 
	#CLASSTYPE_CONSTRUCTOR_SLOT
 0

	)

1661 
	#CLASSTYPE_DESTRUCTOR_SLOT
 1

	)

1665 
	#CLASSTYPE_FIRST_CONVERSION_SLOT
 2

	)

1669 
	#CLASSTYPE_CONSTRUCTORS
(
NODE
) \

1670 ((*
	`CLASSTYPE_METHOD_VEC
 (
NODE
))[
CLASSTYPE_CONSTRUCTOR_SLOT
])

	)

1676 
	#CLASSTYPE_DESTRUCTORS
(
NODE
) \

1677 (
	`CLASSTYPE_METHOD_VEC
 (
NODE
) \

1678 ? (*
	`CLASSTYPE_METHOD_VEC
 (
NODE
))[
CLASSTYPE_DESTRUCTOR_SLOT
] \

1679 : 
NULL_TREE
)

	)

1684 
	#CLASSTYPE_NESTED_UTDS
(
NODE
) \

1685 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
√°ed_udts
)

	)

1689 
	#CLASSTYPE_HAS_PRIMARY_BASE_P
(
NODE
) \

1690 (
	`CLASSTYPE_PRIMARY_BINFO
 (
NODE
Ë!
NULL_TREE
)

	)

1695 
	#CLASSTYPE_PRIMARY_BINFO
(
NODE
) \

1696 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
¥im¨y_ba£
)

	)

1702 
	#CLASSTYPE_VBASECLASSES
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
vba£s
)

	)

1707 
	#CLASSTYPE_AS_BASE
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
as_ba£
)

	)

1711 
	#IS_FAKE_BASE_TYPE
(
NODE
) \

1712 (
	`TREE_CODE
 (
NODE
Ë=
RECORD_TYPE
 \

1713 && 
	`TYPE_CONTEXT
 (
NODE
Ë&& 
	`CLASS_TYPE_P
 (TYPE_CONTEXT (NODE)) \

1714 && 
	`CLASSTYPE_AS_BASE
 (
	`TYPE_CONTEXT
 (
NODE
)Ë=(NODE))

	)

1718 
	#CLASSTYPE_SIZE
(
NODE
Ë
	`TYPE_SIZE
 (
	`CLASSTYPE_AS_BASE
 (NODE))

	)

1719 
	#CLASSTYPE_SIZE_UNIT
(
NODE
Ë
	`TYPE_SIZE_UNIT
 (
	`CLASSTYPE_AS_BASE
 (NODE))

	)

1720 
	#CLASSTYPE_ALIGN
(
NODE
Ë
	`TYPE_ALIGN
 (
	`CLASSTYPE_AS_BASE
 (NODE))

	)

1721 
	#CLASSTYPE_USER_ALIGN
(
NODE
Ë
	`TYPE_USER_ALIGN
 (
	`CLASSTYPE_AS_BASE
 (NODE))

	)

1724 
	#CLASSTYPE_ALIGN_UNIT
(
NODE
) \

1725 (
	`CLASSTYPE_ALIGN
 (
NODE
Ë/ 
BITS_PER_UNIT
)

	)

1729 
	#TYPE_JAVA_INTERFACE
(
NODE
) \

1730 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
java_öãrÁ˚
)

	)

1735 
	#CLASSTYPE_PURE_VIRTUALS
(
NODE
) \

1736 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
puª_vútuÆs
)

	)

1739 
	#ABSTRACT_CLASS_TYPE_P
(
NODE
) \

1740 (
	`CLASS_TYPE_P
 (
NODE
Ë&& 
	`CLASSTYPE_PURE_VIRTUALS
(NODE))

	)

1743 
	#TYPE_HAS_DEFAULT_CONSTRUCTOR
(
NODE
) \

1744 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
has_deÁu…_˘‹
)

	)

1747 
	#CLASSTYPE_HAS_MUTABLE
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_muèbÀ
)

	)

1748 
	#TYPE_HAS_MUTABLE_P
(
NODE
Ë(
	`˝_has_muèbÀ_p
 (NODE))

	)

1752 
	#CLASSTYPE_NON_LAYOUT_POD_P
(
NODE
) \

1753 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
n⁄_pod_˛ass
)

	)

1756 
	#CLASSTYPE_NON_STD_LAYOUT
(
NODE
) \

1757 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
n⁄_°d_œyout
)

	)

1762 
	#CLASSTYPE_NON_ZERO_INIT_P
(
NODE
) \

1763 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
n⁄_zîo_öô
)

	)

1766 
	#CLASSTYPE_EMPTY_P
(
NODE
) \

1767 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
em±y_p
)

	)

1771 
	#CLASSTYPE_NEARLY_EMPTY_P
(
NODE
) \

1772 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
√¨ly_em±y_p
)

	)

1775 
	#CLASSTYPE_CONTAINS_EMPTY_CLASS_P
(
NODE
) \

1776 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
c⁄èös_em±y_˛ass_p
)

	)

1781 
	#CLASSTYPE_FRIEND_CLASSES
(
NODE
) \

1782 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
‰õnd_˛as£s
)

	)

1785 
	#CLASSTYPE_BEFRIENDING_CLASSES
(
NODE
) \

1786 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
be‰õndög_˛as£s
)

	)

1789 
	#CLASSTYPE_LAMBDA_EXPR
(
NODE
) \

1790 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
œmbda_ex¥
)

	)

1792 
	#LAMBDA_TYPE_EXTRA_SCOPE
(
NODE
) \

1793 (
	`LAMBDA_EXPR_EXTRA_SCOPE
 (
	`CLASSTYPE_LAMBDA_EXPR
 (
NODE
)))

	)

1796 
	#CLASSTYPE_DECLARED_CLASS
(
NODE
) \

1797 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
de˛¨ed_˛ass
)

	)

1801 
	#CLASSTYPE_READONLY_FIELDS_NEED_INIT
(
NODE
) \

1802 (
	`TYPE_LANG_SPECIFIC
 (
NODE
) \

1803 ? 
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
c⁄°_√eds_öô
 : 0)

	)

1804 
	#SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT
(
NODE
, 
VALUE
) \

1805 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
c⁄°_√eds_öô
 = (
VALUE
))

	)

1809 
	#CLASSTYPE_REF_FIELDS_NEED_INIT
(
NODE
) \

1810 (
	`TYPE_LANG_SPECIFIC
 (
NODE
) \

1811 ? 
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
ªf_√eds_öô
 : 0)

	)

1812 
	#SET_CLASSTYPE_REF_FIELDS_NEED_INIT
(
NODE
, 
VALUE
) \

1813 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
h
.
ªf_√eds_öô
 = (
VALUE
))

	)

1817 
	#CLASSTYPE_INTERFACE_ONLY
(
NODE
) \

1818 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
öãrÁ˚_⁄ly
)

	)

1825 
	#CLASSTYPE_INTERFACE_KNOWN
(
NODE
) \

1826 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
öãrÁ˚_unknown
 =0)

	)

1828 
	#CLASSTYPE_INTERFACE_UNKNOWN
(
NODE
) \

1829 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
öãrÁ˚_unknown
)

	)

1831 
	#SET_CLASSTYPE_INTERFACE_UNKNOWN_X
(
NODE
,
X
) \

1832 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
öãrÁ˚_unknown
 = !!(
X
))

	)

1833 
	#SET_CLASSTYPE_INTERFACE_UNKNOWN
(
NODE
) \

1834 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
öãrÁ˚_unknown
 = 1)

	)

1835 
	#SET_CLASSTYPE_INTERFACE_KNOWN
(
NODE
) \

1836 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
öãrÁ˚_unknown
 = 0)

	)

1839 
	#CLASSTYPE_DEBUG_REQUESTED
(
NODE
) \

1840 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
debug_ªque°ed
)

	)

1845 
	#BINFO_VTABLE_PATH_MARKED
(
NODE
Ë
	`BINFO_FLAG_1
 (NODE)

	)

1849 
	#BINFO_NEW_VTABLE_MARKED
(
B
Ë(
	`BINFO_FLAG_2
 (B))

	)

1857 
	#SAME_BINFO_TYPE_P
(
A
, 
B
Ë((AË=(B))

	)

1862 
	#SET_BINFO_NEW_VTABLE_MARKED
(
B
) \

1863 (
	`BINFO_NEW_VTABLE_MARKED
 (
B
) = 1, \

1864 
	`gcc_as£π
 (!
	`BINFO_PRIMARY_P
 (
B
Ë|| 
	`BINFO_VIRTUAL_P
 (B)), \

1865 
	`gcc_as£π
 (
	`TYPE_VFIELD
 (
	`BINFO_TYPE
 (
B
))))

	)

1869 
	#BINFO_DEPENDENT_BASE_P
(
NODE
Ë
	`BINFO_FLAG_3
 (NODE)

	)

1874 
	#BINFO_LOST_PRIMARY_P
(
NODE
Ë
	`BINFO_FLAG_4
 (NODE)

	)

1877 
	#BINFO_PRIMARY_P
(
NODE
Ë
	`BINFO_FLAG_5
(NODE)

	)

1880 
	#IDENTIFIER_MARKED
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (NODE)

	)

1887 
	#CLASSTYPE_VCALL_INDICES
(
NODE
) \

1888 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
vˇŒ_ödi˚s
)

	)

1892 
	#CLASSTYPE_VTABLES
(
NODE
) \

1893 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
vèbÀs
)

	)

1898 
	#CLASSTYPE_TYPEINFO_VAR
(
NODE
) \

1899 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
ty≥öfo_v¨
)

	)

1906 
	#BV_DELTA
(
NODE
Ë(
	`TREE_PURPOSE
 (NODE))

	)

1911 
	#BV_VCALL_INDEX
(
NODE
Ë(
	`TREE_TYPE
 (NODE))

	)

1914 
	#BV_FN
(
NODE
Ë(
	`TREE_VALUE
 (NODE))

	)

1917 
	#BV_LOST_PRIMARY
(
NODE
Ë(
	`TREE_LANG_FLAG_0
 (NODE))

	)

1927 
	#TYPE_RAISES_EXCEPTIONS
(
NODE
) \

1928 
	`TYPE_LANG_SLOT_1
 (
	`FUNC_OR_METHOD_CHECK
 (
NODE
))

	)

1932 
	#TYPE_NOTHROW_P
(
NODE
Ë
	`nŸhrow_•ec_p
 (
	`TYPE_RAISES_EXCEPTIONS
 (NODE))

	)

1937 
	#TYPE_NOEXCEPT_P
(
NODE
Ë
	`ty≥_n€x˚±_p
 (NODE)

	)

1940 
	#NAMESPACE_LEVEL
(
NODE
) \

1941 (
	`LANG_DECL_NS_CHECK
 (
NODE
)->
Àvñ
)

	)

1948 
GTY
(()Ë
	gœng_de˛_ba£
 {

1949 
	g£À˘‹
 : 16;

1950 
ENUM_BITFIELD
(
œnguages
Ë
	gœnguage
 : 4;

1951 
	gu£_ãm∂©e
 : 2;

1952 
	gnŸ_ªÆly_exã∫
 : 1;

1953 
	göôülized_ö_˛ass
 : 1;

1954 
	gªpo_avaûabÀ_p
 : 1;

1955 
	gthªad¥iv©e_‹_dñëed_p
 : 1;

1956 
	g™ticù©ed_p
 : 1;

1957 
	g‰õnd_©å
 : 1;

1958 
	gãm∂©e_c⁄v_p
 : 1;

1959 
	godr_u£d
 : 1;

1960 
	gu2£l
 : 1;

1965 
	#LANG_DECL_HAS_MIN
(
NODE
) \

1966 (
	`VAR_OR_FUNCTION_DECL_P
 (
NODE
) \

1967 || 
	`TREE_CODE
 (
NODE
Ë=
FIELD_DECL
 \

1968 || 
	`TREE_CODE
 (
NODE
Ë=
CONST_DECL
 \

1969 || 
	`TREE_CODE
 (
NODE
Ë=
TYPE_DECL
 \

1970 || 
	`TREE_CODE
 (
NODE
Ë=
TEMPLATE_DECL
 \

1971 || 
	`TREE_CODE
 (
NODE
Ë=
USING_DECL
)

	)

1975 
GTY
(()Ë
	gœng_de˛_mö
 {

1976 
œng_de˛_ba£
 
	gba£
;

1983 
åì
 
	gãm∂©e_öfo
;

1985 
	uœng_de˛_u2
 {

1989 
åì
 
GTY
 ((
èg
 ("0"))Ë
	gac˚ss
;

1992 
GTY
 ((
èg
 ("1"))Ë
	gdis¸imö©‹
;

1993 } 
GTY
 ((
desc
 ("%0.u.ba£.u2£l"))Ë
	gu2
;

1998 
GTY
(()Ë
	gœng_de˛_‚
 {

1999 
œng_de˛_mö
 
	gmö
;

2003 
ENUM_BITFIELD
 (
åì_code
Ë
	g›î©‹_code
 : 16;

2005 
	gglobÆ_˘‹_p
 : 1;

2006 
	gglobÆ_dt‹_p
 : 1;

2007 
	gc⁄°ru˘‹_©å
 : 1;

2008 
	gde°ru˘‹_©å
 : 1;

2009 
	gassignmít_›î©‹_p
 : 1;

2010 
	g°©ic_fun˘i⁄
 : 1;

2011 
	gpuª_vútuÆ
 : 1;

2012 
	gdeÁu…ed_p
 : 1;

2014 
	ghas_ö_ch¨ge_∑rm_p
 : 1;

2015 
	ghas_vâ_∑rm_p
 : 1;

2016 
	g≥ndög_ölöe_p
 : 1;

2017 
	gn⁄c⁄vîtög
 : 1;

2018 
	gthunk_p
 : 1;

2019 
	gthis_thunk_p
 : 1;

2020 
	ghiddí_‰õnd_p
 : 1;

2021 
	gomp_de˛¨e_ªdu˘i⁄_p
 : 1;

2027 
åì
 
	gbe‰õndög_˛as£s
;

2035 
åì
 
	gc⁄ãxt
;

2037 
	uœng_de˛_u5


2041 
åì
 
GTY
 ((
èg
 ("0"))Ë
	g˛⁄ed_fun˘i⁄
;

2045 
HOST_WIDE_INT
 
GTY
 ((
èg
 ("1"))Ë
	gfixed_off£t
;

2046 } 
GTY
 ((
desc
 ("%1.thunk_p"))Ë
	gu5
;

2048 
	uœng_de˛_u3


2050 
˝_tokí_ˇche
 * 
GTY
 ((
èg
 ("1"))Ë
	g≥ndög_ölöe_öfo
;

2051 
œnguage_fun˘i⁄
 * 
GTY
 ((
èg
 ("0")))

2052 
	gßved_œnguage_fun˘i⁄
;

2053 } 
GTY
 ((
desc
 ("%1.≥ndög_ölöe_p"))Ë
	gu
;

2059 
GTY
(()Ë
	gœng_de˛_ns
 {

2060 
œng_de˛_ba£
 
	gba£
;

2061 
˝_bödög_Àvñ
 *
	gÀvñ
;

2066 
GTY
(()Ë
	gœng_de˛_∑rm
 {

2067 
œng_de˛_ba£
 
	gba£
;

2068 
	gÀvñ
;

2069 
	gödex
;

2076 
GTY
((
v¨übÀ_size
)Ë
	gœng_de˛
 {

2077 
GTY
((
desc
 ("%h.ba£.£À˘‹"))Ë
	gœng_de˛_u
 {

2078 
œng_de˛_ba£
 
GTY
 (()Ë
	gba£
;

2079 
œng_de˛_mö
 
GTY
((
èg
 ("0"))Ë
	gmö
;

2080 
œng_de˛_‚
 
GTY
 ((
èg
 ("1"))Ë
	g‚
;

2081 
œng_de˛_ns
 
GTY
((
èg
 ("2"))Ë
	gns
;

2082 
œng_de˛_∑rm
 
GTY
((
èg
 ("3"))Ë
	g∑rm
;

2083 } 
	gu
;

2087 
	#STRIP_TEMPLATE
(
NODE
) \

2088 (
	`TREE_CODE
 (
NODE
Ë=
TEMPLATE_DECL
 ? 
	`DECL_TEMPLATE_RESULT
 (NODEË: NODE)

	)

2090 #i‡
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 2007)

2092 
	#LANG_DECL_MIN_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

2093 ({ 
œng_de˛
 *
…
 = 
	`DECL_LANG_SPECIFIC
 (
NODE
); \

2094 i‡(!
	`LANG_DECL_HAS_MIN
 (
NODE
)) \

2095 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

2096 &
…
->
u
.
mö
; })

	)

2101 
	#LANG_DECL_FN_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

2102 ({ 
œng_de˛
 *
…
 = 
	`DECL_LANG_SPECIFIC
 (
	`STRIP_TEMPLATE
 (
NODE
)); \

2103 i‡(!
	`DECL_DECLARES_FUNCTION_P
 (
NODE
Ë|| 
…
->
u
.
ba£
.
£À˘‹
 != 1) \

2104 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

2105 &
…
->
u
.
‚
; })

	)

2107 
	#LANG_DECL_NS_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

2108 ({ 
œng_de˛
 *
…
 = 
	`DECL_LANG_SPECIFIC
 (
NODE
); \

2109 i‡(
	`TREE_CODE
 (
NODE
Ë!
NAMESPACE_DECL
 || 
…
->
u
.
ba£
.
£À˘‹
 != 2) \

2110 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

2111 &
…
->
u
.
ns
; })

	)

2113 
	#LANG_DECL_PARM_CHECK
(
NODE
Ë
__exãnsi⁄__
 \

2114 ({ 
œng_de˛
 *
…
 = 
	`DECL_LANG_SPECIFIC
 (
NODE
); \

2115 i‡(
	`TREE_CODE
 (
NODE
Ë!
PARM_DECL
) \

2116 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

2117 &
…
->
u
.
∑rm
; })

	)

2119 
	#LANG_DECL_U2_CHECK
(
NODE
, 
TF
Ë
__exãnsi⁄__
 \

2120 ({ 
œng_de˛
 *
…
 = 
	`DECL_LANG_SPECIFIC
 (
NODE
); \

2121 i‡(!
	`LANG_DECL_HAS_MIN
 (
NODE
Ë|| 
…
->
u
.
ba£
.
u2£l
 !
TF
) \

2122 
	`œng_check_Áûed
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
); \

2123 &
…
->
u
.
mö
.
u2
; })

	)

2127 
	#LANG_DECL_MIN_CHECK
(
NODE
) \

2128 (&
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
mö
)

	)

2130 
	#LANG_DECL_FN_CHECK
(
NODE
) \

2131 (&
	`DECL_LANG_SPECIFIC
 (
	`STRIP_TEMPLATE
 (
NODE
))->
u
.
‚
)

	)

2133 
	#LANG_DECL_NS_CHECK
(
NODE
) \

2134 (&
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
ns
)

	)

2136 
	#LANG_DECL_PARM_CHECK
(
NODE
) \

2137 (&
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
∑rm
)

	)

2139 
	#LANG_DECL_U2_CHECK
(
NODE
, 
TF
) \

2140 (&
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
mö
.
u2
)

	)

2153 
	#DECL_LANGUAGE
(
NODE
) \

2154 (
	`DECL_LANG_SPECIFIC
 (
NODE
) \

2155 ? 
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
ba£
.
œnguage
 \

2156 : (
	`TREE_CODE
 (
NODE
Ë=
FUNCTION_DECL
 \

2157 ? 
œng_c
 : 
œng_˝lu•lus
))

	)

2160 
	#SET_DECL_LANGUAGE
(
NODE
, 
LANGUAGE
) \

2161 (
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
ba£
.
œnguage
 = (
LANGUAGE
))

	)

2165 
	#DECL_CONSTRUCTOR_P
(
NODE
) \

2166 
	`DECL_CXX_CONSTRUCTOR_P
 (
	`STRIP_TEMPLATE
 (
NODE
))

	)

2170 
	#DECL_COMPLETE_CONSTRUCTOR_P
(
NODE
) \

2171 (
	`DECL_CONSTRUCTOR_P
 (
NODE
) \

2172 && 
	`DECL_NAME
 (
NODE
Ë=
com∂ëe_˘‹_idítifõr
)

	)

2176 
	#DECL_BASE_CONSTRUCTOR_P
(
NODE
) \

2177 (
	`DECL_CONSTRUCTOR_P
 (
NODE
) \

2178 && 
	`DECL_NAME
 (
NODE
Ë=
ba£_˘‹_idítifõr
)

	)

2183 
	#DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P
(
NODE
) \

2184 (
	`DECL_DECLARES_FUNCTION_P
 (
NODE
Ë&& 
	`DECL_CONSTRUCTOR_P
 (NODE) \

2185 && !
	`DECL_CLONED_FUNCTION_P
 (
NODE
))

	)

2188 
	#DECL_COPY_CONSTRUCTOR_P
(
NODE
) \

2189 (
	`DECL_CONSTRUCTOR_P
 (
NODE
Ë&& 
	`c›y_‚_p
 (NODEË> 0)

	)

2192 
	#DECL_MOVE_CONSTRUCTOR_P
(
NODE
) \

2193 (
	`DECL_CONSTRUCTOR_P
 (
NODE
Ë&& 
	`move_‚_p
 (NODE))

	)

2197 
	#DECL_DESTRUCTOR_P
(
NODE
) \

2198 
	`DECL_CXX_DESTRUCTOR_P
 (
	`STRIP_TEMPLATE
 (
NODE
))

	)

2203 
	#DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P
(
NODE
) \

2204 (
	`DECL_DECLARES_FUNCTION_P
 (
NODE
Ë&& 
	`DECL_DESTRUCTOR_P
 (NODE) \

2205 && !
	`DECL_CLONED_FUNCTION_P
 (
NODE
))

	)

2209 
	#DECL_COMPLETE_DESTRUCTOR_P
(
NODE
) \

2210 (
	`DECL_DESTRUCTOR_P
 (
NODE
) \

2211 && 
	`DECL_NAME
 (
NODE
Ë=
com∂ëe_dt‹_idítifõr
)

	)

2215 
	#DECL_BASE_DESTRUCTOR_P
(
NODE
) \

2216 (
	`DECL_DESTRUCTOR_P
 (
NODE
) \

2217 && 
	`DECL_NAME
 (
NODE
Ë=
ba£_dt‹_idítifõr
)

	)

2221 
	#DECL_DELETING_DESTRUCTOR_P
(
NODE
) \

2222 (
	`DECL_DESTRUCTOR_P
 (
NODE
) \

2223 && 
	`DECL_NAME
 (
NODE
Ë=
dñëög_dt‹_idítifõr
)

	)

2227 
	#DECL_CLONED_FUNCTION_P
(
NODE
Ë(!!
	`de˛_˛⁄ed_fun˘i⁄_p
 (NODE, 
åue
))

	)

2231 
	#DECL_CLONED_FUNCTION
(
NODE
Ë(*
	`de˛_˛⁄ed_fun˘i⁄_p
 (NODE, 
Ál£
))

	)

2240 
	#FOR_EACH_CLONE
(
CLONE
, 
FN
) \

2241 i‡(
	`TREE_CODE
 (
FN
Ë=
FUNCTION_DECL
 \

2242 && (
	`DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P
 (
FN
) \

2243 || 
	`DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P
 (
FN
))) \

2244 
CLONE
 = 
	`DECL_CHAIN
 (
FN
); \

2245 
CLONE
 && 
	`DECL_CLONED_FUNCTION_P
 (CLONE); \

2246 
CLONE
 = 
	`DECL_CHAIN
 (CLONE))

	)

2249 
	#DECL_DISCRIMINATOR_P
(
NODE
) \

2250 (
	`VAR_P
 (
NODE
Ë&& 
	`DECL_FUNCTION_SCOPE_P
 (NODE))

	)

2253 
	#DECL_DISCRIMINATOR
(
NODE
Ë(
	`LANG_DECL_U2_CHECK
 (NODE, 1)->
dis¸imö©‹
)

	)

2256 
	#DECL_DISCRIMINATOR_SET_P
(
NODE
) \

2257 (
	`DECL_LANG_SPECIFIC
 (
NODE
Ë&& DECL_LANG_SPECIFIC (NODE)->
u
.
ba£
.
u2£l
 =1)

	)

2261 
	#DECL_PARM_INDEX
(
NODE
) \

2262 (
	`LANG_DECL_PARM_CHECK
 (
NODE
)->
ödex
)

	)

2268 
	#DECL_PARM_LEVEL
(
NODE
) \

2269 (
	`LANG_DECL_PARM_CHECK
 (
NODE
)->
Àvñ
)

	)

2272 
	#DECL_HAS_VTT_PARM_P
(
NODE
) \

2273 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
has_vâ_∑rm_p
)

	)

2277 
	#DECL_NEEDS_VTT_PARM_P
(
NODE
) \

2278 (
	`CLASSTYPE_VBASECLASSES
 (
	`DECL_CONTEXT
 (
NODE
)) \

2279 && (
	`DECL_BASE_CONSTRUCTOR_P
 (
NODE
) \

2280 || 
	`DECL_BASE_DESTRUCTOR_P
 (
NODE
)))

	)

2283 
	#DECL_CONV_FN_P
(
NODE
) \

2284 (
	`DECL_NAME
 (
NODE
Ë&& 
	`IDENTIFIER_TYPENAME_P
 (DECL_NAME (NODE)))

	)

2288 
	#DECL_CONV_FN_TYPE
(
FN
) \

2289 (
	`DECL_CONV_FN_P
 (
FN
Ë? 
	`TREE_TYPE
 (
	`DECL_NAME
 (FN)Ë: 
NULL_TREE
)

	)

2294 
	#DECL_TEMPLATE_CONV_FN_P
(
NODE
) \

2295 (
	`DECL_LANG_SPECIFIC
 (
	`TEMPLATE_DECL_CHECK
 (
NODE
))->
u
.
ba£
.
ãm∂©e_c⁄v_p
)

	)

2299 
	#VAR_HAD_UNKNOWN_BOUND
(
NODE
) \

2300 (
	`DECL_LANG_SPECIFIC
 (
	`VAR_DECL_CHECK
 (
NODE
)) \

2301 ? 
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
ba£
.
ãm∂©e_c⁄v_p
 \

2302 : 
Ál£
)

	)

2303 
	#SET_VAR_HAD_UNKNOWN_BOUND
(
NODE
) \

2304 (
	`DECL_LANG_SPECIFIC
 (
	`VAR_DECL_CHECK
 (
NODE
))->
u
.
ba£
.
ãm∂©e_c⁄v_p
 = 
åue
)

	)

2307 
	#SET_OVERLOADED_OPERATOR_CODE
(
NODE
, 
CODE
) \

2308 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
›î©‹_code
 = (
CODE
))

	)

2317 
	#DECL_OVERLOADED_OPERATOR_P
(
NODE
) \

2318 (
	`IDENTIFIER_OPNAME_P
 (
	`DECL_NAME
 (
NODE
)) \

2319 ? 
	`LANG_DECL_FN_CHECK
 (
NODE
)->
›î©‹_code
 : 
ERROR_MARK
)

	)

2322 
	#DECL_ASSIGNMENT_OPERATOR_P
(
NODE
) \

2323 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
assignmít_›î©‹_p
)

	)

2328 
	#DECL_HAS_IN_CHARGE_PARM_P
(
NODE
) \

2329 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
has_ö_ch¨ge_∑rm_p
)

	)

2332 
	#DECL_IS_BUILTIN_CONSTANT_P
(
NODE
) \

2333 (
	`TREE_CODE
 (
NODE
Ë=
FUNCTION_DECL
 \

2334 && 
	`DECL_BUILT_IN_CLASS
 (
NODE
Ë=
BUILT_IN_NORMAL
 \

2335 && 
	`DECL_FUNCTION_CODE
 (
NODE
Ë=
BUILT_IN_CONSTANT_P
)

	)

2342 
	#DECL_IN_AGGR_P
(
NODE
Ë(
	`DECL_LANG_FLAG_3
 (NODE))

	)

2348 
	#DECL_INITIALIZED_P
(
NODE
) \

2349 (
	`TREE_LANG_FLAG_1
 (
	`VAR_DECL_CHECK
 (
NODE
)))

	)

2353 
	#DECL_NONTRIVIALLY_INITIALIZED_P
(
NODE
) \

2354 (
	`TREE_LANG_FLAG_3
 (
	`VAR_DECL_CHECK
 (
NODE
)))

	)

2358 
	#DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P
(
NODE
) \

2359 (
	`TREE_LANG_FLAG_2
 (
	`VAR_DECL_CHECK
 (
NODE
)))

	)

2364 
	#DECL_INITIALIZED_IN_CLASS_P
(
DECL
) \

2365 (
	`DECL_LANG_SPECIFIC
 (
	`VAR_OR_FUNCTION_DECL_CHECK
 (
DECL
)) \

2366 ->
u
.
ba£
.
öôülized_ö_˛ass
)

	)

2370 
	#DECL_ODR_USED
(
DECL
) \

2371 (
	`DECL_LANG_SPECIFIC
 (
	`VAR_OR_FUNCTION_DECL_CHECK
 (
DECL
)) \

2372 ->
u
.
ba£
.
odr_u£d
)

	)

2376 
	#DECL_FRIEND_P
(
NODE
) \

2377 (
	`DECL_LANG_SPECIFIC
 (
	`TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK
 (
NODE
)) \

2378 ->
u
.
ba£
.
‰õnd_©å
)

	)

2381 
	#DECL_BEFRIENDING_CLASSES
(
NODE
) \

2382 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
be‰õndög_˛as£s
)

	)

2386 
	#DECL_STATIC_FUNCTION_P
(
NODE
) \

2387 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
°©ic_fun˘i⁄
)

	)

2391 
	#DECL_NONSTATIC_MEMBER_FUNCTION_P
(
NODE
) \

2392 (
	`TREE_CODE
 (
	`TREE_TYPE
 (
NODE
)Ë=
METHOD_TYPE
)

	)

2396 
	#DECL_FUNCTION_MEMBER_P
(
NODE
) \

2397 (
	`DECL_NONSTATIC_MEMBER_FUNCTION_P
 (
NODE
Ë|| 
	`DECL_STATIC_FUNCTION_P
 (NODE))

	)

2401 
	#DECL_CONST_MEMFUNC_P
(
NODE
) \

2402 (
	`DECL_NONSTATIC_MEMBER_FUNCTION_P
 (
NODE
) \

2403 && 
	`CP_TYPE_CONST_P
 (
	`TREE_TYPE
 (
TREE_VALUE
 \

2404 (
	`TYPE_ARG_TYPES
 (
	`TREE_TYPE
 (
NODE
))))))

	)

2408 
	#DECL_VOLATILE_MEMFUNC_P
(
NODE
) \

2409 (
	`DECL_NONSTATIC_MEMBER_FUNCTION_P
 (
NODE
) \

2410 && 
	`CP_TYPE_VOLATILE_P
 (
	`TREE_TYPE
 (
TREE_VALUE
 \

2411 (
	`TYPE_ARG_TYPES
 (
	`TREE_TYPE
 (
NODE
))))))

	)

2414 
	#DECL_NONSTATIC_MEMBER_P
(
NODE
) \

2415 (
	`DECL_NONSTATIC_MEMBER_FUNCTION_P
 (
NODE
) \

2416 || 
	`TREE_CODE
 (
NODE
Ë=
FIELD_DECL
)

	)

2420 
	#DECL_MUTABLE_P
(
NODE
Ë(
	`DECL_LANG_FLAG_0
 (NODE))

	)

2424 
	#DECL_NONCONVERTING_P
(
NODE
) \

2425 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
n⁄c⁄vîtög
)

	)

2429 
	#DECL_PURE_VIRTUAL_P
(
NODE
) \

2430 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
puª_vútuÆ
)

	)

2436 
	#DECL_INVALID_OVERRIDER_P
(
NODE
) \

2437 (
	`DECL_LANG_FLAG_4
 (
NODE
))

	)

2441 
	#DECL_OVERRIDE_P
(
NODE
Ë(
	`TREE_LANG_FLAG_0
 (NODE))

	)

2444 
	#DECL_THUNKS
(
NODE
) \

2445 (
	`DECL_VIRTUAL_P
 (
NODE
Ë? 
	`LANG_DECL_FN_CHECK
 (NODE)->
c⁄ãxt
 : 
NULL_TREE
)

	)

2448 
	#SET_DECL_THUNKS
(
NODE
,
THUNKS
) \

2449 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
c⁄ãxt
 = (
THUNKS
))

	)

2453 
	#DECL_INHERITED_CTOR_BASE
(
NODE
) \

2454 (
	`DECL_CONSTRUCTOR_P
 (
NODE
Ë? 
	`LANG_DECL_FN_CHECK
 (NODE)->
c⁄ãxt
 : 
NULL_TREE
)

	)

2457 
	#SET_DECL_INHERITED_CTOR_BASE
(
NODE
,
INH
) \

2458 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
c⁄ãxt
 = (
INH
))

	)

2461 
	#DECL_THUNK_P
(
NODE
) \

2462 (
	`TREE_CODE
 (
NODE
Ë=
FUNCTION_DECL
 \

2463 && 
	`DECL_LANG_SPECIFIC
 (
NODE
) \

2464 && 
	`LANG_DECL_FN_CHECK
 (
NODE
)->
thunk_p
)

	)

2467 
	#SET_DECL_THUNK_P
(
NODE
, 
THIS_ADJUSTING
) \

2468 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
thunk_p
 = 1, \

2469 
	`LANG_DECL_FN_CHECK
 (
NODE
)->
this_thunk_p
 = (
THIS_ADJUSTING
))

	)

2472 
	#DECL_THIS_THUNK_P
(
NODE
) \

2473 (
	`DECL_THUNK_P
 (
NODE
Ë&& 
	`LANG_DECL_FN_CHECK
 (NODE)->
this_thunk_p
)

	)

2476 
	#DECL_RESULT_THUNK_P
(
NODE
) \

2477 (
	`DECL_THUNK_P
 (
NODE
Ë&& !
	`LANG_DECL_FN_CHECK
 (NODE)->
this_thunk_p
)

	)

2480 
	#DECL_NON_THUNK_FUNCTION_P
(
NODE
) \

2481 (
	`TREE_CODE
 (
NODE
Ë=
FUNCTION_DECL
 && !
	`DECL_THUNK_P
 (NODE))

	)

2484 
	#DECL_EXTERN_C_P
(
NODE
) \

2485 (
	`DECL_LANGUAGE
 (
NODE
Ë=
œng_c
)

	)

2488 
	#DECL_EXTERN_C_FUNCTION_P
(
NODE
) \

2489 (
	`DECL_NON_THUNK_FUNCTION_P
 (
NODE
Ë&& 
	`DECL_EXTERN_C_P
 (NODE))

	)

2493 
	#DECL_REPO_AVAILABLE_P
(
NODE
) \

2494 (
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
ba£
.
ªpo_avaûabÀ_p
)

	)

2497 
	#DECL_DECLARED_CONSTEXPR_P
(
DECL
) \

2498 
	`DECL_LANG_FLAG_8
 (
	`VAR_OR_FUNCTION_DECL_CHECK
 (
	`STRIP_TEMPLATE
 (
DECL
)))

	)

2502 
	#DECL_PRETTY_FUNCTION_P
(
NODE
) \

2503 (
	`DECL_NAME
 (
NODE
) \

2504 && !
	`°rcmp
 (
	`IDENTIFIER_POINTER
 (
	`DECL_NAME
 (
NODE
)), "__PRETTY_FUNCTION__"))

	)

2508 
	#DECL_GNU_TLS_P
(
NODE
) \

2509 (
	`TREE_LANG_FLAG_0
 (
	`VAR_DECL_CHECK
 (
NODE
)))

	)

2513 
	#DECL_CLASS_CONTEXT
(
NODE
) \

2514 (
	`DECL_CLASS_SCOPE_P
 (
NODE
Ë? 
	`DECL_CONTEXT
 (NODEË: 
NULL_TREE
)

	)

2522 
	#DECL_FRIEND_CONTEXT
(
NODE
) \

2523 ((
	`DECL_DECLARES_FUNCTION_P
 (
NODE
) \

2524 && 
	`DECL_FRIEND_P
 (
NODE
Ë&& !
	`DECL_FUNCTION_MEMBER_P
 (NODE)) \

2525 ? 
	`LANG_DECL_FN_CHECK
 (
NODE
)->
c⁄ãxt
 \

2526 : 
NULL_TREE
)

	)

2529 
	#SET_DECL_FRIEND_CONTEXT
(
NODE
, 
CONTEXT
) \

2530 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
c⁄ãxt
 = (
CONTEXT
))

	)

2532 
	#CP_DECL_CONTEXT
(
NODE
) \

2533 (!
	`DECL_FILE_SCOPE_P
 (
NODE
Ë? 
	`DECL_CONTEXT
 (NODEË: 
globÆ_«me•a˚
)

	)

2534 
	#CP_TYPE_CONTEXT
(
NODE
) \

2535 (!
	`TYPE_FILE_SCOPE_P
 (
NODE
Ë? 
	`TYPE_CONTEXT
 (NODEË: 
globÆ_«me•a˚
)

	)

2536 
	#FROB_CONTEXT
(
NODE
) \

2537 ((
NODE
Ë=
globÆ_«me•a˚
 ? 
	`DECL_CONTEXT
 (NODEË: (NODE))

	)

2540 
	#DECL_NAMESPACE_SCOPE_P
(
NODE
) \

2541 (!
	`DECL_TEMPLATE_PARM_P
 (
NODE
) \

2542 && 
	`TREE_CODE
 (
	`CP_DECL_CONTEXT
 (
NODE
)Ë=
NAMESPACE_DECL
)

	)

2544 
	#TYPE_NAMESPACE_SCOPE_P
(
NODE
) \

2545 (
	`TREE_CODE
 (
	`CP_TYPE_CONTEXT
 (
NODE
)Ë=
NAMESPACE_DECL
)

	)

2547 
	#NAMESPACE_SCOPE_P
(
NODE
) \

2548 ((
	`DECL_P
 (
NODE
Ë&& 
	`DECL_NAMESPACE_SCOPE_P
 (NODE)) \

2549 || (
	`TYPE_P
 (
NODE
Ë&& 
	`TYPE_NAMESPACE_SCOPE_P
 (NODE)))

	)

2552 
	#DECL_CLASS_SCOPE_P
(
NODE
) \

2553 (
	`DECL_CONTEXT
 (
NODE
Ë&& 
	`TYPE_P
 (DECL_CONTEXT (NODE)))

	)

2555 
	#TYPE_CLASS_SCOPE_P
(
NODE
) \

2556 (
	`TYPE_CONTEXT
 (
NODE
Ë&& 
	`TYPE_P
 (TYPE_CONTEXT (NODE)))

	)

2559 
	#DECL_FUNCTION_SCOPE_P
(
NODE
) \

2560 (
	`DECL_CONTEXT
 (
NODE
) \

2561 && 
	`TREE_CODE
 (
	`DECL_CONTEXT
 (
NODE
)Ë=
FUNCTION_DECL
)

	)

2563 
	#TYPE_FUNCTION_SCOPE_P
(
NODE
) \

2564 (
	`TYPE_CONTEXT
 (
NODE
Ë&& 
	`TREE_CODE
 (TYPE_CONTEXT (NODE)Ë=
FUNCTION_DECL
)

	)

2568 
	#DECL_TINFO_P
(
NODE
Ë
	`TREE_LANG_FLAG_4
 (
	`VAR_DECL_CHECK
 (NODE))

	)

2571 
	#DECL_VTABLE_OR_VTT_P
(
NODE
Ë
	`TREE_LANG_FLAG_5
 (
	`VAR_DECL_CHECK
 (NODE))

	)

2574 
	#FUNCTION_REF_QUALIFIED
(
NODE
) \

2575 
	`TREE_LANG_FLAG_4
 (
	`FUNC_OR_METHOD_CHECK
 (
NODE
))

	)

2578 
	#FUNCTION_RVALUE_QUALIFIED
(
NODE
) \

2579 
	`TREE_LANG_FLAG_5
 (
	`FUNC_OR_METHOD_CHECK
 (
NODE
))

	)

2584 
	#DECL_CONSTRUCTION_VTABLE_P
(
NODE
) \

2585 
	`TREE_LANG_FLAG_6
 (
	`VAR_DECL_CHECK
 (
NODE
))

	)

2588 
	#LOCAL_CLASS_P
(
NODE
) \

2589 (
	`de˛_fun˘i⁄_c⁄ãxt
 (
	`TYPE_MAIN_DECL
 (
NODE
)Ë!
NULL_TREE
)

	)

2594 
	#DECL_NAMESPACE_USING
(
NODE
Ë
	`DECL_VINDEX
 (
	`NAMESPACE_DECL_CHECK
 (NODE))

	)

2598 
	#DECL_NAMESPACE_USERS
(
NODE
Ë
	`DECL_INITIAL
 (
	`NAMESPACE_DECL_CHECK
 (NODE))

	)

2602 
	#DECL_NAMESPACE_ASSOCIATIONS
(
NODE
) \

2603 (
	`NAMESPACE_DECL_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
ßved_åì
)

	)

2607 
	#DECL_NAMESPACE_ALIAS
(
NODE
) \

2608 
	`DECL_ABSTRACT_ORIGIN
 (
	`NAMESPACE_DECL_CHECK
 (
NODE
))

	)

2609 
	#ORIGINAL_NAMESPACE
(
NODE
) \

2610 (
	`DECL_NAMESPACE_ALIAS
 (
NODE
Ë? DECL_NAMESPACE_ALIAS (NODEË: (NODE))

	)

2613 
	#DECL_NAMESPACE_STD_P
(
NODE
) \

2614 (
	`TREE_CODE
 (
NODE
Ë=
NAMESPACE_DECL
 \

2615 && 
	`CP_DECL_CONTEXT
 (
NODE
Ë=
globÆ_«me•a˚
 \

2616 && 
	`DECL_NAME
 (
NODE
Ë=
°d_idítifõr
)

	)

2620 
	#TREE_INDIRECT_USING
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`TREE_LIST_CHECK
 (NODE))

	)

2624 
	#ATTR_IS_DEPENDENT
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`TREE_LIST_CHECK
 (NODE))

	)

2628 
	#ABI_TAG_IMPLICIT
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`TREE_LIST_CHECK
 (NODE))

	)

2630 
åì
 
de˛_shadowed_f‹_v¨_lookup
 (tree);

2631 
de˛_shadowed_f‹_v¨_ö£π
 (
åì
,Åree);

2634 
	#DECL_DEPENDENT_P
(
NODE
Ë
	`DECL_LANG_FLAG_0
 (
	`USING_DECL_CHECK
 (NODE))

	)

2637 
	#USING_DECL_SCOPE
(
NODE
Ë
	`TREE_TYPE
 (
	`USING_DECL_CHECK
 (NODE))

	)

2640 
	#USING_DECL_DECLS
(
NODE
Ë
	`DECL_INITIAL
 (
	`USING_DECL_CHECK
 (NODE))

	)

2643 
	#USING_DECL_TYPENAME_P
(
NODE
Ë
	`DECL_LANG_FLAG_1
 (
	`USING_DECL_CHECK
 (NODE))

	)

2647 
	#DECL_HAS_SHADOWED_FOR_VAR_P
(
NODE
) \

2648 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
shadowed_f‹_v¨_p
)

	)

2652 
	#DECL_SHADOWED_FOR_VAR
(
NODE
) \

2653 (
	`DECL_HAS_SHADOWED_FOR_VAR_P
(
NODE
Ë? 
	`de˛_shadowed_f‹_v¨_lookup
 (NODEË: 
NULL
)

	)

2655 
	#SET_DECL_SHADOWED_FOR_VAR
(
NODE
, 
VAL
) \

2656 (
	`de˛_shadowed_f‹_v¨_ö£π
 (
NODE
, 
VAL
))

	)

2661 
	#DECL_PENDING_INLINE_P
(
NODE
) \

2662 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
≥ndög_ölöe_p
)

	)

2666 
	#DECL_PENDING_INLINE_INFO
(
NODE
) \

2667 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
u
.
≥ndög_ölöe_öfo
)

	)

2670 
	#TYPE_DECL_ALIAS_P
(
NODE
) \

2671 
	`DECL_LANG_FLAG_6
 (
	`TYPE_DECL_CHECK
 (
NODE
))

	)

2676 
	#TYPE_ALIAS_P
(
NODE
) \

2677 (
	`TYPE_P
 (
NODE
) \

2678 && 
	`TYPE_NAME
 (
NODE
) \

2679 && 
	`TREE_CODE
 (
	`TYPE_NAME
 (
NODE
)Ë=
TYPE_DECL
 \

2680 && 
	`TYPE_DECL_ALIAS_P
 (
	`TYPE_NAME
 (
NODE
)))

	)

2684 
	#CLASSTYPE_SORTED_FIELDS
(
NODE
) \

2685 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
s‹ãd_fõlds
)

	)

2706 
	#DECL_TEMPLATE_INFO
(
NODE
) \

2707 (
	`DECL_LANG_SPECIFIC
 (
	`VAR_TEMPL_TYPE_FIELD_OR_FUNCTION_DECL_CHECK
 (
NODE
)) \

2708 ->
u
.
mö
.
ãm∂©e_öfo
)

	)

2713 
	#DECL_ANON_UNION_VAR_P
(
NODE
) \

2714 (
	`DECL_LANG_FLAG_4
 (
	`VAR_DECL_CHECK
 (
NODE
)))

	)

2717 
	#CLASSTYPE_TEMPLATE_INFO
(
NODE
) \

2718 (
	`LANG_TYPE_CLASS_CHECK
 (
	`RECORD_OR_UNION_CHECK
 (
NODE
))->
ãm∂©e_öfo
)

	)

2724 
	#ENUM_TEMPLATE_INFO
(
NODE
) \

2725 (
	`TYPE_LANG_SLOT_1
 (
	`ENUMERAL_TYPE_CHECK
 (
NODE
)))

	)

2728 
	#TEMPLATE_TEMPLATE_PARM_TEMPLATE_INFO
(
NODE
) \

2729 (
	`LANG_TYPE_CLASS_CHECK
 (
	`BOUND_TEMPLATE_TEMPLATE_PARM_TYPE_CHECK
 (
NODE
)) \

2730 ->
ãm∂©e_öfo
)

	)

2737 
	#TYPE_TEMPLATE_INFO
(
NODE
) \

2738 ((
	`TYPE_ALIAS_P
 (
NODE
Ë&& 
	`DECL_LANG_SPECIFIC
 (
	`TYPE_NAME
 (NODE))) \

2739 ? (
	`DECL_LANG_SPECIFIC
 (
	`TYPE_NAME
 (
NODE
)) \

2740 ? 
	`DECL_TEMPLATE_INFO
 (
	`TYPE_NAME
 (
NODE
)) \

2741 : 
NULL_TREE
) \

2742 : ((
	`TREE_CODE
 (
NODE
Ë=
ENUMERAL_TYPE
) \

2743 ? 
	`ENUM_TEMPLATE_INFO
 (
NODE
) \

2744 : ((
	`TREE_CODE
 (
NODE
Ë=
BOUND_TEMPLATE_TEMPLATE_PARM
) \

2745 ? 
	`TEMPLATE_TEMPLATE_PARM_TEMPLATE_INFO
 (
NODE
) \

2746 : (
	`CLASS_TYPE_P
 (
NODE
) \

2747 ? 
	`CLASSTYPE_TEMPLATE_INFO
 (
NODE
) \

2748 : 
NULL_TREE
))))

	)

2753 
	#SET_TYPE_TEMPLATE_INFO
(
NODE
, 
VAL
) \

2754 (
	`TREE_CODE
 (
NODE
Ë=
ENUMERAL_TYPE
 \

2755 ? (
	`ENUM_TEMPLATE_INFO
 (
NODE
Ë(
VAL
)) \

2756 : ((
	`CLASS_TYPE_P
 (
NODE
Ë&& !
	`TYPE_ALIAS_P
 (NODE)) \

2757 ? (
	`CLASSTYPE_TEMPLATE_INFO
 (
NODE
Ë(
VAL
)) \

2758 : (
	`DECL_TEMPLATE_INFO
 (
	`TYPE_NAME
 (
NODE
)Ë(
VAL
))))

	)

2760 
	#TI_TEMPLATE
(
NODE
Ë
	`TREE_TYPE
 (
	`TEMPLATE_INFO_CHECK
 (NODE))

	)

2761 
	#TI_ARGS
(
NODE
Ë
	`TREE_CHAIN
 (
	`TEMPLATE_INFO_CHECK
 (NODE))

	)

2762 
	#TI_PENDING_TEMPLATE_FLAG
(
NODE
Ë
	`TREE_LANG_FLAG_1
 (NODE)

	)

2766 
	#NON_DEFAULT_TEMPLATE_ARGS_COUNT
(
NODE
Ë
	`TREE_CHAIN
 (
	`TREE_VEC_CHECK
 (NODE))

	)

2769 
	#SET_NON_DEFAULT_TEMPLATE_ARGS_COUNT
(
NODE
, 
INT_VALUE
) \

2770 
	`NON_DEFAULT_TEMPLATE_ARGS_COUNT
(
NODE
Ë
	`buûd_öt_c°
 (
NULL_TREE
, 
INT_VALUE
)

	)

2771 #ifde‡
ENABLE_CHECKING


2772 
	#GET_NON_DEFAULT_TEMPLATE_ARGS_COUNT
(
NODE
) \

2773 
	`öt_c°_vÆue
 (
	`NON_DEFAULT_TEMPLATE_ARGS_COUNT
 (
NODE
))

	)

2775 
	#GET_NON_DEFAULT_TEMPLATE_ARGS_COUNT
(
NODE
) \

2776 
	`NON_DEFAULT_TEMPLATE_ARGS_COUNT
 (
NODE
) \

2777 ? 
	`öt_c°_vÆue
 (
	`NON_DEFAULT_TEMPLATE_ARGS_COUNT
 (
NODE
)) \

2778 : 
	`TREE_VEC_LENGTH
 (
	`INNERMOST_TEMPLATE_ARGS
 (
NODE
))

	)

2785 
	#TI_TYPEDEFS_NEEDING_ACCESS_CHECKING
(
NODE
) \

2786 ((
åì_ãm∂©e_öfo
*)
TEMPLATE_INFO_CHECK
 \

2787 (
NODE
))->
ty≥defs_√edög_ac˚ss_checkög


	)

2809 
	#TMPL_ARGS_HAVE_MULTIPLE_LEVELS
(
NODE
) \

2810 (
NODE
 && 
	`TREE_VEC_LENGTH
 (NODEË&& 
	`TREE_VEC_ELT
 (NODE, 0) \

2811 && 
	`TREE_CODE
 (
	`TREE_VEC_ELT
 (
NODE
, 0)Ë=
TREE_VEC
)

	)

2818 
	#TMPL_ARGS_DEPTH
(
NODE
) \

2819 (
	`TMPL_ARGS_HAVE_MULTIPLE_LEVELS
 (
NODE
Ë? 
	`TREE_VEC_LENGTH
 (NODEË: 1)

	)

2823 
	#TMPL_ARGS_LEVEL
(
ARGS
, 
LEVEL
) \

2824 (
	`TMPL_ARGS_HAVE_MULTIPLE_LEVELS
 (
ARGS
) \

2825 ? 
	`TREE_VEC_ELT
 (
ARGS
, (
LEVEL
Ë- 1Ë: (ARGS))

	)

2829 
	#SET_TMPL_ARGS_LEVEL
(
ARGS
, 
LEVEL
, 
VAL
) \

2830 (
	`TREE_VEC_ELT
 (
ARGS
, (
LEVEL
Ë- 1Ë(
VAL
))

	)

2833 
	#TMPL_ARG
(
ARGS
, 
LEVEL
, 
IDX
) \

2834 (
	`TREE_VEC_ELT
 (
	`TMPL_ARGS_LEVEL
 (
ARGS
, 
LEVEL
), 
IDX
))

	)

2838 
	#NUM_TMPL_ARGS
(
NODE
) \

2839 (
	`TREE_VEC_LENGTH
 (
NODE
))

	)

2842 
	#INNERMOST_TEMPLATE_ARGS
(
NODE
) \

2843 (
	`gë_ö√rmo°_ãm∂©e_¨gs
 ((
NODE
), 1))

	)

2846 
	#TMPL_PARMS_DEPTH
(
NODE
) \

2847 ((
HOST_WIDE_INT
Ë
	`TREE_INT_CST_LOW
 (
	`TREE_PURPOSE
 (
NODE
)))

	)

2870 
	#DECL_TI_TEMPLATE
(
NODE
Ë
	`TI_TEMPLATE
 (
	`DECL_TEMPLATE_INFO
 (NODE))

	)

2877 
	#DECL_TI_ARGS
(
NODE
Ë
	`TI_ARGS
 (
	`DECL_TEMPLATE_INFO
 (NODE))

	)

2888 
	#CLASSTYPE_TI_TEMPLATE
(
NODE
Ë
	`TI_TEMPLATE
 (
	`CLASSTYPE_TEMPLATE_INFO
 (NODE))

	)

2889 
	#CLASSTYPE_TI_ARGS
(
NODE
Ë
	`TI_ARGS
 (
	`CLASSTYPE_TEMPLATE_INFO
 (NODE))

	)

2893 
	#CLASSTYPE_PRIMARY_TEMPLATE_TYPE
(
TYPE
) \

2894 ((
	`CLASSTYPE_USE_TEMPLATE
 ((
TYPE
)) \

2895 && !
	`CLASSTYPE_TEMPLATE_SPECIALIZATION
 ((
TYPE
))) \

2896 ? 
	`TREE_TYPE
 (
	`DECL_TEMPLATE_RESULT
 (
DECL_PRIMARY_TEMPLATE
 \

2897 (
	`CLASSTYPE_TI_TEMPLATE
 ((
TYPE
))))) \

2898 : (
TYPE
))

	)

2901 
	#TYPE_TI_TEMPLATE
(
NODE
) \

2902 (
	`TI_TEMPLATE
 (
	`TYPE_TEMPLATE_INFO
 (
NODE
)))

	)

2905 
	#TYPE_TI_ARGS
(
NODE
) \

2906 (
	`TI_ARGS
 (
	`TYPE_TEMPLATE_INFO
 (
NODE
)))

	)

2908 
	#INNERMOST_TEMPLATE_PARMS
(
NODE
Ë
	`TREE_VALUE
 (NODE)

	)

2912 
	#DECL_MEMBER_TEMPLATE_P
(
NODE
) \

2913 (
	`DECL_LANG_FLAG_1
 (
	`TEMPLATE_DECL_CHECK
 (
NODE
)))

	)

2918 
	#TEMPLATE_PARMS_FOR_INLINE
(
NODE
Ë
	`TREE_LANG_FLAG_1
 (NODE)

	)

2921 
	#DECL_PACK_P
(
NODE
) \

2922 (
	`DECL_P
 (
NODE
Ë&& 
	`PACK_EXPANSION_P
 (
	`TREE_TYPE
 (NODE)))

	)

2926 
	#PACK_EXPANSION_P
(
NODE
) \

2927 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_PACK_EXPANSION
 \

2928 || 
	`TREE_CODE
 (
NODE
Ë=
EXPR_PACK_EXPANSION
)

	)

2932 
	#PACK_EXPANSION_PATTERN
(
NODE
) \

2933 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_PACK_EXPANSION
? 
	`TREE_TYPE
 (NODE) \

2934 : 
	`TREE_OPERAND
 (
NODE
, 0))

	)

2938 
	#SET_PACK_EXPANSION_PATTERN
(
NODE
,
VALUE
) \

2939 i‡(
	`TREE_CODE
 (
NODE
Ë=
TYPE_PACK_EXPANSION
) \

2940 
	`TREE_TYPE
 (
NODE
Ë
VALUE
; \

2942 
	`TREE_OPERAND
 (
NODE
, 0Ë
VALUE


	)

2946 
	#PACK_EXPANSION_PARAMETER_PACKS
(
NODE
) \

2947 *(
	`TREE_CODE
 (
NODE
Ë=
EXPR_PACK_EXPANSION
 \

2948 ? &
	`TREE_OPERAND
 (
NODE
, 1) \

2949 : &
	`TYPE_MINVAL
 (
	`TYPE_PACK_EXPANSION_CHECK
 (
NODE
)))

	)

2953 
	#PACK_EXPANSION_EXTRA_ARGS
(
NODE
) \

2954 *(
	`TREE_CODE
 (
NODE
Ë=
TYPE_PACK_EXPANSION
 \

2955 ? &
	`TYPE_MAXVAL
 (
NODE
) \

2956 : &
	`TREE_OPERAND
 ((
NODE
), 2))

	)

2959 
	#PACK_EXPANSION_LOCAL_P
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (NODE)

	)

2962 
	#ARGUMENT_PACK_P
(
NODE
) \

2963 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_ARGUMENT_PACK
 \

2964 || 
	`TREE_CODE
 (
NODE
Ë=
NONTYPE_ARGUMENT_PACK
)

	)

2968 
	#ARGUMENT_PACK_ARGS
(
NODE
) \

2969 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_ARGUMENT_PACK
? 
	`TREE_TYPE
 (NODE) \

2970 : 
	`TREE_OPERAND
 (
NODE
, 0))

	)

2974 
	#SET_ARGUMENT_PACK_ARGS
(
NODE
,
VALUE
) \

2975 i‡(
	`TREE_CODE
 (
NODE
Ë=
TYPE_ARGUMENT_PACK
) \

2976 
	`TREE_TYPE
 (
NODE
Ë
VALUE
; \

2978 
	`TREE_OPERAND
 (
NODE
, 0Ë
VALUE


	)

2986 
	#ARGUMENT_PACK_INCOMPLETE_P
(
NODE
) \

2987 
	`TREE_ADDRESSABLE
 (
	`ARGUMENT_PACK_ARGS
 (
NODE
))

	)

2991 
	#ARGUMENT_PACK_EXPLICIT_ARGS
(
NODE
) \

2992 
	`TREE_TYPE
 (
	`ARGUMENT_PACK_ARGS
 (
NODE
))

	)

2996 
	#ARGUMENT_PACK_SELECT_FROM_PACK
(
NODE
) \

2997 (((
åì_¨gumít_∑ck_£À˘
 *)
	`ARGUMENT_PACK_SELECT_CHECK
 (
NODE
))->
¨gumít_∑ck
)

	)

3001 
	#ARGUMENT_PACK_SELECT_INDEX
(
NODE
) \

3002 (((
åì_¨gumít_∑ck_£À˘
 *)
	`ARGUMENT_PACK_SELECT_CHECK
 (
NODE
))->
ödex
)

	)

3006 
	#ARGUMENT_PACK_SELECT_ARG
(
NODE
) \

3007 
	`TREE_VEC_ELT
 (
	`ARGUMENT_PACK_ARGS
 (
	`ARGUMENT_PACK_SELECT_FROM_PACK
 (
NODE
)), \

3008 
	`ARGUMENT_PACK_SELECT_INDEX
 (
NODE
));

	)

3011 
	#DECL_SAVED_FUNCTION_DATA
(
NODE
) \

3012 (
	`LANG_DECL_FN_CHECK
 (
	`FUNCTION_DECL_CHECK
 (
NODE
)) \

3013 ->
u
.
ßved_œnguage_fun˘i⁄
)

	)

3016 
	#REFERENCE_REF_P
(
NODE
) \

3017 (
	`INDIRECT_REF_P
 (
NODE
) \

3018 && 
	`TREE_TYPE
 (
	`TREE_OPERAND
 (
NODE
, 0)) \

3019 && (
	`TREE_CODE
 (
	`TREE_TYPE
 (
	`TREE_OPERAND
 ((
NODE
), 0))) \

3020 =
REFERENCE_TYPE
))

	)

3024 
	#REFERENCE_VLA_OK
(
NODE
) \

3025 (
	`TYPE_LANG_FLAG_5
 (
	`REFERENCE_TYPE_CHECK
 (
NODE
)))

	)

3027 
	#NEW_EXPR_USE_GLOBAL
(
NODE
) \

3028 
	`TREE_LANG_FLAG_0
 (
	`NEW_EXPR_CHECK
 (
NODE
))

	)

3029 
	#DELETE_EXPR_USE_GLOBAL
(
NODE
) \

3030 
	`TREE_LANG_FLAG_0
 (
	`DELETE_EXPR_CHECK
 (
NODE
))

	)

3031 
	#DELETE_EXPR_USE_VEC
(
NODE
) \

3032 
	`TREE_LANG_FLAG_1
 (
	`DELETE_EXPR_CHECK
 (
NODE
))

	)

3036 
	#COMPOUND_EXPR_OVERLOADED
(
NODE
) \

3037 
	`TREE_LANG_FLAG_0
 (
	`COMPOUND_EXPR_CHECK
 (
NODE
))

	)

3041 
	#KOENIG_LOOKUP_P
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`CALL_EXPR_CHECK
 (NODE))

	)

3044 
	#CALL_EXPR_LIST_INIT_P
(
NODE
) \

3045 
	`TREE_LANG_FLAG_3
 (
	`TREE_CHECK2
 ((
NODE
),
CALL_EXPR
,
AGGR_INIT_EXPR
))

	)

3050 
	#PAREN_STRING_LITERAL_P
(
NODE
) \

3051 
	`TREE_LANG_FLAG_0
 (
	`STRING_CST_CHECK
 (
NODE
))

	)

3057 
	#REF_PARENTHESIZED_P
(
NODE
) \

3058 
	`TREE_LANG_FLAG_2
 (
	`TREE_CHECK2
 ((
NODE
), 
COMPONENT_REF
, 
INDIRECT_REF
))

	)

3062 
	#AGGR_INIT_VIA_CTOR_P
(
NODE
) \

3063 
	`TREE_LANG_FLAG_0
 (
	`AGGR_INIT_EXPR_CHECK
 (
NODE
))

	)

3067 
	#AGGR_INIT_ZERO_FIRST
(
NODE
) \

3068 
	`TREE_LANG_FLAG_2
 (
	`AGGR_INIT_EXPR_CHECK
 (
NODE
))

	)

3074 
	#AGGR_INIT_EXPR_FN
(
NODE
Ë
	`TREE_OPERAND
 (
	`AGGR_INIT_EXPR_CHECK
 (NODE), 1)

	)

3075 
	#AGGR_INIT_EXPR_SLOT
(
NODE
) \

3076 
	`TREE_OPERAND
 (
	`AGGR_INIT_EXPR_CHECK
 (
NODE
), 2)

	)

3077 
	#AGGR_INIT_EXPR_ARG
(
NODE
, 
I
) \

3078 
	`TREE_OPERAND
 (
	`AGGR_INIT_EXPR_CHECK
 (
NODE
), (
I
Ë+ 3)

	)

3079 
	#aggr_öô_ex¥_«rgs
(
NODE
Ë(
	`VL_EXP_OPERAND_LENGTH
(NODEË- 3)

	)

3087 
	#AGGR_INIT_EXPR_ARGP
(
NODE
) \

3088 (&(
	`TREE_OPERAND
 (
	`AGGR_INIT_EXPR_CHECK
 (
NODE
), 0)Ë+ 3)

	)

3093 
	saggr_öô_ex¥_¨g_ôî©‹_d
 {

3094 
åì
 
	mt
;

3095 
	mn
;

3096 
	mi
;

3097 } 
	taggr_öô_ex¥_¨g_ôî©‹
;

3101 
ölöe
 

3102 
	$öô_aggr_öô_ex¥_¨g_ôî©‹
 (
åì
 
exp
,

3103 
aggr_öô_ex¥_¨g_ôî©‹
 *
ôî
)

3105 
ôî
->
t
 = 
exp
;

3106 
ôî
->
n
 = 
	`aggr_öô_ex¥_«rgs
 (
exp
);

3107 
ôî
->
i
 = 0;

3108 
	}
}

3112 
ölöe
 
åì


3113 
	$√xt_aggr_öô_ex¥_¨g
 (
aggr_öô_ex¥_¨g_ôî©‹
 *
ôî
)

3115 
åì
 
ªsu…
;

3116 i‡(
ôî
->
i
 >ôî->
n
)

3117  
NULL_TREE
;

3118 
ªsu…
 = 
	`AGGR_INIT_EXPR_ARG
 (
ôî
->
t
, iãr->
i
);

3119 
ôî
->
i
++;

3120  
ªsu…
;

3121 
	}
}

3127 
ölöe
 
åì


3128 
	$fú°_aggr_öô_ex¥_¨g
 (
åì
 
exp
, 
aggr_öô_ex¥_¨g_ôî©‹
 *
ôî
)

3130 
	`öô_aggr_öô_ex¥_¨g_ôî©‹
 (
exp
, 
ôî
);

3131  
	`√xt_aggr_öô_ex¥_¨g
 (
ôî
);

3132 
	}
}

3136 
ölöe
 
boﬁ


3137 
	$m‹e_aggr_öô_ex¥_¨gs_p
 (c⁄° 
aggr_öô_ex¥_¨g_ôî©‹
 *
ôî
)

3139  (
ôî
->
i
 < iãr->
n
);

3140 
	}
}

3144 
	#FOR_EACH_AGGR_INIT_EXPR_ARG
(
¨g
, 
ôî
, 
ˇŒ
) \

3145 (
¨g
Ë
	`fú°_aggr_öô_ex¥_¨g
 ((
ˇŒ
), &(
ôî
)); (arg); \

3146 (
¨g
Ë
	`√xt_aggr_öô_ex¥_¨g
 (&(
ôî
)))

	)

3149 
	#VEC_INIT_EXPR_SLOT
(
NODE
Ë
	`TREE_OPERAND
 (
	`VEC_INIT_EXPR_CHECK
 (NODE), 0)

	)

3150 
	#VEC_INIT_EXPR_INIT
(
NODE
Ë
	`TREE_OPERAND
 (
	`VEC_INIT_EXPR_CHECK
 (NODE), 1)

	)

3154 
	#VEC_INIT_EXPR_IS_CONSTEXPR
(
NODE
) \

3155 
	`TREE_LANG_FLAG_0
 (
	`VEC_INIT_EXPR_CHECK
 (
NODE
))

	)

3158 
	#VEC_INIT_EXPR_VALUE_INIT
(
NODE
) \

3159 
	`TREE_LANG_FLAG_1
 (
	`VEC_INIT_EXPR_CHECK
 (
NODE
))

	)

3163 
	#MUST_NOT_THROW_COND
(
NODE
) \

3164 
	`TREE_OPERAND
 (
	`MUST_NOT_THROW_EXPR_CHECK
 (
NODE
), 1)

	)

3170 
	#CLASSTYPE_IS_TEMPLATE
(
NODE
) \

3171 (
	`CLASSTYPE_TEMPLATE_INFO
 (
NODE
) \

3172 && !
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
) \

3173 && 
	`PRIMARY_TEMPLATE_P
 (
	`CLASSTYPE_TI_TEMPLATE
 (
NODE
)))

	)

3179 
	#TYPENAME_TYPE_FULLNAME
(
NODE
) \

3180 (
	`TYPE_VALUES_RAW
 (
	`TYPENAME_TYPE_CHECK
 (
NODE
)))

	)

3183 
	#TYPENAME_IS_ENUM_P
(
NODE
) \

3184 (
	`TREE_LANG_FLAG_0
 (
	`TYPENAME_TYPE_CHECK
 (
NODE
)))

	)

3188 
	#TYPENAME_IS_CLASS_P
(
NODE
) \

3189 (
	`TREE_LANG_FLAG_1
 (
	`TYPENAME_TYPE_CHECK
 (
NODE
)))

	)

3192 
	#TYPENAME_IS_RESOLVING_P
(
NODE
) \

3193 (
	`TREE_LANG_FLAG_2
 (
	`TYPENAME_TYPE_CHECK
 (
NODE
)))

	)

3199 
	#TYPE_POLYMORPHIC_P
(
NODE
Ë(
	`TREE_LANG_FLAG_2
 (NODE))

	)

3202 
	#TYPE_CONTAINS_VPTR_P
(
NODE
) \

3203 (
	`TYPE_POLYMORPHIC_P
 (
NODE
Ë|| 
	`CLASSTYPE_VBASECLASSES
 (NODE))

	)

3207 
	#DECL_DEAD_FOR_LOCAL
(
NODE
Ë
	`DECL_LANG_FLAG_7
 (
	`VAR_DECL_CHECK
 (NODE))

	)

3211 
	#DECL_ERROR_REPORTED
(
NODE
Ë
	`DECL_LANG_FLAG_0
 (
	`VAR_DECL_CHECK
 (NODE))

	)

3215 
	#DECL_LOCAL_FUNCTION_P
(
NODE
) \

3216 
	`DECL_LANG_FLAG_0
 (
	`FUNCTION_DECL_CHECK
 (
NODE
))

	)

3222 
	#FNDECL_USED_AUTO
(
NODE
) \

3223 
	`TREE_LANG_FLAG_2
 (
	`FUNCTION_DECL_CHECK
 (
NODE
))

	)

3229 
	#DECL_ANTICIPATED
(
NODE
) \

3230 (
	`DECL_LANG_SPECIFIC
 (
	`TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK
 (
NODE
)) \

3231 ->
u
.
ba£
.
™ticù©ed_p
)

	)

3236 
	#DECL_HIDDEN_FRIEND_P
(
NODE
) \

3237 (
	`LANG_DECL_FN_CHECK
 (
	`DECL_COMMON_CHECK
 (
NODE
))->
hiddí_‰õnd_p
)

	)

3241 
	#DECL_OMP_DECLARE_REDUCTION_P
(
NODE
) \

3242 (
	`LANG_DECL_FN_CHECK
 (
	`DECL_COMMON_CHECK
 (
NODE
))->
omp_de˛¨e_ªdu˘i⁄_p
)

	)

3246 
	#CP_DECL_THREADPRIVATE_P
(
DECL
) \

3247 (
	`DECL_LANG_SPECIFIC
 (
	`VAR_DECL_CHECK
 (
DECL
))->
u
.
ba£
.
thªad¥iv©e_‹_dñëed_p
)

	)

3250 
	#DECL_DELETED_FN
(
DECL
) \

3251 (
	`LANG_DECL_FN_CHECK
 (
DECL
)->
mö
.
ba£
.
thªad¥iv©e_‹_dñëed_p
)

	)

3254 
	#DECL_DEFAULTED_FN
(
DECL
) \

3255 (
	`LANG_DECL_FN_CHECK
 (
DECL
)->
deÁu…ed_p
)

	)

3258 
	#DECL_DEFAULTED_IN_CLASS_P
(
DECL
) \

3259 (
	`DECL_DEFAULTED_FN
 (
DECL
Ë&& 
	`DECL_INITIALIZED_IN_CLASS_P
 (DECL))

	)

3261 
	#DECL_DEFAULTED_OUTSIDE_CLASS_P
(
DECL
) \

3262 (
	`DECL_DEFAULTED_FN
 (
DECL
) \

3263 && !(
	`DECL_ARTIFICIAL
 (
DECL
Ë|| 
	`DECL_INITIALIZED_IN_CLASS_P
 (DECL)))

	)

3266 
	#C_TYPEDEF_EXPLICITLY_SIGNED
(
EXP
Ë
	`DECL_LANG_FLAG_1
 (EXP)

	)

3272 
	#DECL_EXTERNAL_LINKAGE_P
(
DECL
) \

3273 (
	`de˛_lökage
 (
DECL
Ë=
lk_exã∫Æ
)

	)

3277 
	#INTEGRAL_CODE_P
(
CODE
) \

3278 ((
CODE
Ë=
ENUMERAL_TYPE
 \

3279 || (
CODE
Ë=
BOOLEAN_TYPE
 \

3280 || (
CODE
Ë=
INTEGER_TYPE
)

	)

3290 
	#CP_INTEGRAL_TYPE_P
(
TYPE
) \

3291 (
	`TREE_CODE
 (
TYPE
Ë=
BOOLEAN_TYPE
 \

3292 || 
	`TREE_CODE
 (
TYPE
Ë=
INTEGER_TYPE
)

	)

3296 
	#INTEGRAL_OR_ENUMERATION_TYPE_P
(
TYPE
) \

3297 (
	`TREE_CODE
 (
TYPE
Ë=
ENUMERAL_TYPE
 || 
	`CP_INTEGRAL_TYPE_P
 (TYPE))

	)

3300 
	#INTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P
(
TYPE
) \

3301 (
	`UNSCOPED_ENUM_P
 (
TYPE
Ë|| 
	`CP_INTEGRAL_TYPE_P
 (TYPE))

	)

3304 
	#CLASSTYPE_LITERAL_P
(
TYPE
) \

3305 (
	`LANG_TYPE_CLASS_CHECK
 (
TYPE
)->
is_lôîÆ
)

	)

3315 
	#ARITHMETIC_TYPE_P
(
TYPE
) \

3316 (
	`CP_INTEGRAL_TYPE_P
 (
TYPE
) \

3317 || 
	`TREE_CODE
 (
TYPE
Ë=
REAL_TYPE
 \

3318 || 
	`TREE_CODE
 (
TYPE
Ë=
COMPLEX_TYPE
)

	)

3321 
	#NULLPTR_TYPE_P
(
TYPE
Ë(
	`TREE_CODE
 (TYPEË=
NULLPTR_TYPE
)

	)

3330 
	#SCALAR_TYPE_P
(
TYPE
) \

3331 (
	`TYPE_PTRDATAMEM_P
 (
TYPE
) \

3332 || 
	`TREE_CODE
 (
TYPE
Ë=
ENUMERAL_TYPE
 \

3333 || 
	`ARITHMETIC_TYPE_P
 (
TYPE
) \

3334 || 
	`TYPE_PTR_P
 (
TYPE
) \

3335 || 
	`TYPE_PTRMEMFUNC_P
 (
TYPE
) \

3336 || 
	`NULLPTR_TYPE_P
 (
TYPE
))

	)

3358 
	#SCOPED_ENUM_P
(
TYPE
) \

3359 (
	`TREE_CODE
 (
TYPE
Ë=
ENUMERAL_TYPE
 && 
	`ENUM_IS_SCOPED
 (TYPE))

	)

3362 
	#UNSCOPED_ENUM_P
(
TYPE
) \

3363 (
	`TREE_CODE
 (
TYPE
Ë=
ENUMERAL_TYPE
 && !
	`ENUM_IS_SCOPED
 (TYPE))

	)

3368 
	#SET_SCOPED_ENUM_P
(
TYPE
, 
VAL
) \

3369 (
	`ENUM_IS_SCOPED
 (
TYPE
Ë(
VAL
))

	)

3371 
	#SET_OPAQUE_ENUM_P
(
TYPE
, 
VAL
) \

3372 (
	`ENUM_IS_OPAQUE
 (
TYPE
Ë(
VAL
))

	)

3374 
	#OPAQUE_ENUM_P
(
TYPE
) \

3375 (
	`TREE_CODE
 (
TYPE
Ë=
ENUMERAL_TYPE
 && 
	`ENUM_IS_OPAQUE
 (TYPE))

	)

3379 
	#ENUM_FIXED_UNDERLYING_TYPE_P
(
NODE
Ë(
	`TYPE_LANG_FLAG_5
 (NODE))

	)

3398 
	#ENUM_UNDERLYING_TYPE
(
TYPE
) \

3399 
	`TREE_TYPE
 (
	`ENUMERAL_TYPE_CHECK
 (
TYPE
))

	)

3410 
	#CP_AGGREGATE_TYPE_P
(
TYPE
) \

3411 (
	`TREE_CODE
 (
TYPE
Ë=
VECTOR_TYPE
 \

3412 ||
	`TREE_CODE
 (
TYPE
Ë=
ARRAY_TYPE
 \

3413 || (
	`CLASS_TYPE_P
 (
TYPE
Ë&& !
	`CLASSTYPE_NON_AGGREGATE
 (TYPE)))

	)

3417 
	#TYPE_HAS_USER_CONSTRUCTOR
(
NODE
Ë(
	`TYPE_LANG_FLAG_1
 (NODE))

	)

3433 
	#TREE_HAS_CONSTRUCTOR
(
NODE
Ë(
	`TREE_LANG_FLAG_4
 (NODE))

	)

3436 
	#BRACE_ENCLOSED_INITIALIZER_P
(
NODE
) \

3437 (
	`TREE_CODE
 (
NODE
Ë=
CONSTRUCTOR
 && 
	`TREE_TYPE
 (NODEË=
öô_li°_ty≥_node
)

	)

3441 
	#COMPOUND_LITERAL_P
(
NODE
) \

3442 (
	`TREE_CODE
 (
NODE
Ë=
CONSTRUCTOR
 && 
	`TREE_HAS_CONSTRUCTOR
 (NODE))

	)

3444 
	#EMPTY_CONSTRUCTOR_P
(
NODE
Ë(
	`TREE_CODE
 (NODEË=
CONSTRUCTOR
 \

3445 && 
	`vec_ß„_is_em±y
(
	`CONSTRUCTOR_ELTS
(
NODE
))\

3446 && !
	`TREE_HAS_CONSTRUCTOR
 (
NODE
))

	)

3450 
	#CONSTRUCTOR_IS_DIRECT_INIT
(
NODE
Ë(
	`TREE_LANG_FLAG_0
 (
	`CONSTRUCTOR_CHECK
 (NODE)))

	)

3452 
	#DIRECT_LIST_INIT_P
(
NODE
) \

3453 (
	`BRACE_ENCLOSED_INITIALIZER_P
 (
NODE
Ë&& 
	`CONSTRUCTOR_IS_DIRECT_INIT
 (NODE))

	)

3457 
	#IMPLICIT_CONV_EXPR_DIRECT_INIT
(
NODE
) \

3458 (
	`TREE_LANG_FLAG_0
 (
	`IMPLICIT_CONV_EXPR_CHECK
 (
NODE
)))

	)

3462 
	#CLASSTYPE_NON_AGGREGATE
(
NODE
) \

3463 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
n⁄_aggªg©e
)

	)

3464 
	#TYPE_NON_AGGREGATE_CLASS
(
NODE
) \

3465 (
	`CLASS_TYPE_P
 (
NODE
Ë&& 
	`CLASSTYPE_NON_AGGREGATE
 (NODE))

	)

3468 
	#TYPE_HAS_COMPLEX_COPY_ASSIGN
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_com∂ex_c›y_assign
)

	)

3471 
	#TYPE_HAS_COMPLEX_COPY_CTOR
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_com∂ex_c›y_˘‹
)

	)

3474 
	#TYPE_HAS_COMPLEX_MOVE_ASSIGN
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_com∂ex_move_assign
)

	)

3477 
	#TYPE_HAS_COMPLEX_MOVE_CTOR
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_com∂ex_move_˘‹
)

	)

3480 
	#TYPE_HAS_COMPLEX_DFLT
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
has_com∂ex_dÊt
)

	)

3493 
	#TYPE_HAS_TRIVIAL_DESTRUCTOR
(
NODE
) \

3494 (!
	`TYPE_HAS_NONTRIVIAL_DESTRUCTOR
 (
NODE
))

	)

3500 
	#TYPE_HAS_NONTRIVIAL_DESTRUCTOR
(
NODE
) \

3501 (
	`TYPE_LANG_FLAG_4
 (
NODE
))

	)

3504 
	#TYPE_HAS_TRIVIAL_DFLT
(
NODE
) \

3505 (
	`TYPE_HAS_DEFAULT_CONSTRUCTOR
 (
NODE
Ë&& ! 
	`TYPE_HAS_COMPLEX_DFLT
 (NODE))

	)

3509 
	#TYPE_HAS_TRIVIAL_COPY_CTOR
(
NODE
) \

3510 (
	`TYPE_HAS_COPY_CTOR
 (
NODE
Ë&& ! 
	`TYPE_HAS_COMPLEX_COPY_CTOR
 (NODE))

	)

3514 
	#TYPE_HAS_TRIVIAL_COPY_ASSIGN
(
NODE
) \

3515 (
	`TYPE_HAS_COPY_ASSIGN
 (
NODE
Ë&& ! 
	`TYPE_HAS_COMPLEX_COPY_ASSIGN
 (NODE))

	)

3518 
	#TYPE_PTRDATAMEM_P
(
NODE
) \

3519 (
	`TREE_CODE
 (
NODE
Ë=
OFFSET_TYPE
)

	)

3521 
	#TYPE_PTR_P
(
NODE
) \

3522 (
	`TREE_CODE
 (
NODE
Ë=
POINTER_TYPE
)

	)

3532 
	#TYPE_OBJ_P
(
NODE
) \

3533 (
	`TREE_CODE
 (
NODE
Ë!
REFERENCE_TYPE
 \

3534 && !
	`VOID_TYPE_P
 (
NODE
) \

3535 && 
	`TREE_CODE
 (
NODE
Ë!
FUNCTION_TYPE
 \

3536 && 
	`TREE_CODE
 (
NODE
Ë!
METHOD_TYPE
)

	)

3540 
	#TYPE_PTROB_P
(
NODE
) \

3541 (
	`TYPE_PTR_P
 (
NODE
Ë&& 
	`TYPE_OBJ_P
 (
	`TREE_TYPE
 (NODE)))

	)

3545 
	#TYPE_REF_OBJ_P
(
NODE
) \

3546 (
	`TREE_CODE
 (
NODE
Ë=
REFERENCE_TYPE
 && 
	`TYPE_OBJ_P
 (
	`TREE_TYPE
 (NODE)))

	)

3550 
	#TYPE_PTROBV_P
(
NODE
) \

3551 (
	`TYPE_PTR_P
 (
NODE
) \

3552 && !(
	`TREE_CODE
 (
	`TREE_TYPE
 (
NODE
)Ë=
FUNCTION_TYPE
 \

3553 || 
	`TREE_CODE
 (
	`TREE_TYPE
 (
NODE
)Ë=
METHOD_TYPE
))

	)

3556 
	#TYPE_PTRFN_P
(
NODE
) \

3557 (
	`TYPE_PTR_P
 (
NODE
) \

3558 && 
	`TREE_CODE
 (
	`TREE_TYPE
 (
NODE
)Ë=
FUNCTION_TYPE
)

	)

3561 
	#TYPE_REFFN_P
(
NODE
) \

3562 (
	`TREE_CODE
 (
NODE
Ë=
REFERENCE_TYPE
 \

3563 && 
	`TREE_CODE
 (
	`TREE_TYPE
 (
NODE
)Ë=
FUNCTION_TYPE
)

	)

3567 
	#TYPE_PTRMEMFUNC_P
(
NODE
) \

3568 (
	`TREE_CODE
 (
NODE
Ë=
RECORD_TYPE
 \

3569 && 
	`TYPE_LANG_SPECIFIC
 (
NODE
) \

3570 && 
	`TYPE_PTRMEMFUNC_FLAG
 (
NODE
))

	)

3572 
	#TYPE_PTRMEMFUNC_FLAG
(
NODE
) \

3573 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
±rmemfunc_Êag
)

	)

3576 
	#TYPE_PTRMEM_P
(
NODE
) \

3577 (
	`TYPE_PTRDATAMEM_P
 (
NODE
Ë|| 
	`TYPE_PTRMEMFUNC_P
 (NODE))

	)

3580 
	#TYPE_PTR_OR_PTRMEM_P
(
NODE
) \

3581 (
	`TYPE_PTR_P
 (
NODE
Ë|| 
	`TYPE_PTRMEM_P
 (NODE))

	)

3585 
	#PTRMEM_OK_P
(
NODE
) \

3586 
	`TREE_LANG_FLAG_0
 (
	`TREE_CHECK3
 ((
NODE
), 
ADDR_EXPR
, 
OFFSET_REF
, 
SCOPE_REF
))

	)

3591 
	#TYPE_PTRMEMFUNC_FN_TYPE
(
NODE
) \

3592 (
	`TREE_TYPE
 (
	`TYPE_FIELDS
 (
NODE
)))

	)

3595 
	#TYPE_PTRMEMFUNC_OBJECT_TYPE
(
NODE
) \

3596 
	`TYPE_METHOD_BASETYPE
 (
	`TREE_TYPE
 (
	`TYPE_PTRMEMFUNC_FN_TYPE
 (
NODE
)))

	)

3600 
	#TYPE_GET_PTRMEMFUNC_TYPE
(
NODE
) \

3601 (
	`TYPE_LANG_SPECIFIC
 (
NODE
Ë? 
	`LANG_TYPE_PTRMEM_CHECK
 (NODE)->
ªc‹d
 : 
NULL
)

	)

3602 
	#TYPE_SET_PTRMEMFUNC_TYPE
(
NODE
, 
VALUE
) \

3604 i‡(
	`TYPE_LANG_SPECIFIC
 (
NODE
Ë=
NULL
) \

3606 
	`TYPE_LANG_SPECIFIC
 (
NODE
Ë
ggc_Æloc_˛óªd_œng_ty≥
 \

3607 ( (
œng_ty≥_±rmem
)); \

3608 
	`TYPE_LANG_SPECIFIC
 (
NODE
)->
u
.
±rmem
.
h
.
is_œng_ty≥_˛ass
 = 0; \

3610 
	`TYPE_LANG_SPECIFIC
 (
NODE
)->
u
.
±rmem
.
ªc‹d
 = (
VALUE
); \

3611 } 0)

	)

3618 
	#TYPE_PTRMEM_CLASS_TYPE
(
NODE
) \

3619 (
	`TYPE_PTRDATAMEM_P
 (
NODE
) \

3620 ? 
	`TYPE_OFFSET_BASETYPE
 (
NODE
) \

3621 : 
	`TYPE_PTRMEMFUNC_OBJECT_TYPE
 (
NODE
))

	)

3624 
	#TYPE_PTRMEM_POINTED_TO_TYPE
(
NODE
) \

3625 (
	`TYPE_PTRDATAMEM_P
 (
NODE
) \

3626 ? 
	`TREE_TYPE
 (
NODE
) \

3627 : 
	`TREE_TYPE
 (
	`TYPE_PTRMEMFUNC_FN_TYPE
 (
NODE
)))

	)

3631 
	#PTRMEM_CST_CLASS
(
NODE
) \

3632 
	`TYPE_PTRMEM_CLASS_TYPE
 (
	`TREE_TYPE
 (
	`PTRMEM_CST_CHECK
 (
NODE
)))

	)

3636 
	#PTRMEM_CST_MEMBER
(
NODE
Ë(((
±rmem_c°_t
)
	`PTRMEM_CST_CHECK
 (NODE))->
membî
)

	)

3639 
	#TYPEOF_TYPE_EXPR
(
NODE
Ë(
	`TYPE_VALUES_RAW
 (
	`TYPEOF_TYPE_CHECK
 (NODE)))

	)

3642 
	#UNDERLYING_TYPE_TYPE
(
NODE
) \

3643 (
	`TYPE_VALUES_RAW
 (
	`UNDERLYING_TYPE_CHECK
 (
NODE
)))

	)

3646 
	#BASES_TYPE
(
NODE
) \

3647 (
	`TYPE_VALUES_RAW
 (
	`BASES_CHECK
 (
NODE
)))

	)

3649 
	#BASES_DIRECT
(
NODE
) \

3650 
	`TREE_LANG_FLAG_0
 (
	`BASES_CHECK
 (
NODE
))

	)

3653 
	#DECLTYPE_TYPE_EXPR
(
NODE
Ë(
	`TYPE_VALUES_RAW
 (
	`DECLTYPE_TYPE_CHECK
 (NODE)))

	)

3658 
	#DECLTYPE_TYPE_ID_EXPR_OR_MEMBER_ACCESS_P
(
NODE
) \

3659 (
	`DECLTYPE_TYPE_CHECK
 (
NODE
))->
ty≥_comm⁄
.
°rög_Êag


	)

3664 
	#DECLTYPE_FOR_LAMBDA_CAPTURE
(
NODE
) \

3665 
	`TREE_LANG_FLAG_0
 (
	`DECLTYPE_TYPE_CHECK
 (
NODE
))

	)

3666 
	#DECLTYPE_FOR_INIT_CAPTURE
(
NODE
) \

3667 
	`TREE_LANG_FLAG_1
 (
	`DECLTYPE_TYPE_CHECK
 (
NODE
))

	)

3668 
	#DECLTYPE_FOR_LAMBDA_PROXY
(
NODE
) \

3669 
	`TREE_LANG_FLAG_2
 (
	`DECLTYPE_TYPE_CHECK
 (
NODE
))

	)

3674 
	#DECL_THIS_EXTERN
(
NODE
) \

3675 
	`DECL_LANG_FLAG_2
 (
	`VAR_FUNCTION_OR_PARM_DECL_CHECK
 (
NODE
))

	)

3680 
	#DECL_THIS_STATIC
(
NODE
) \

3681 
	`DECL_LANG_FLAG_6
 (
	`VAR_FUNCTION_OR_PARM_DECL_CHECK
 (
NODE
))

	)

3685 
	#DECL_VLA_CAPTURE_P
(
NODE
) \

3686 
	`DECL_LANG_FLAG_1
 (
	`FIELD_DECL_CHECK
 (
NODE
))

	)

3690 
	#DECL_FIELD_IS_BASE
(
NODE
) \

3691 
	`DECL_LANG_FLAG_6
 (
	`FIELD_DECL_CHECK
 (
NODE
))

	)

3696 
	#DECL_NORMAL_CAPTURE_P
(
NODE
) \

3697 
	`DECL_LANG_FLAG_7
 (
	`FIELD_DECL_CHECK
 (
NODE
))

	)

3702 
	#ANON_AGGR_TYPE_P
(
NODE
) \

3703 (
	`CLASS_TYPE_P
 (
NODE
Ë&& 
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
™⁄_aggr
)

	)

3704 
	#SET_ANON_AGGR_TYPE_P
(
NODE
) \

3705 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
™⁄_aggr
 = 1)

	)

3708 
	#ANON_UNION_TYPE_P
(
NODE
) \

3709 (
	`TREE_CODE
 (
NODE
Ë=
UNION_TYPE
 && 
	`ANON_AGGR_TYPE_P
 (NODE))

	)

3713 
	#TYPE_WAS_ANONYMOUS
(
NODE
Ë(
	`LANG_TYPE_CLASS_CHECK
 (NODE)->
was_™⁄ymous
)

	)

3722 
	#DECL_FRIENDLIST
(
NODE
Ë(
	`DECL_INITIAL
 (NODE))

	)

3723 
	#FRIEND_NAME
(
LIST
Ë(
	`TREE_PURPOSE
 (LIST))

	)

3724 
	#FRIEND_DECLS
(
LIST
Ë(
	`TREE_VALUE
 (LIST))

	)

3732 
	#DECL_ACCESS
(
NODE
Ë(
	`LANG_DECL_U2_CHECK
 (NODE, 0)->
ac˚ss
)

	)

3735 
	#DECL_GLOBAL_CTOR_P
(
NODE
) \

3736 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
globÆ_˘‹_p
)

	)

3739 
	#DECL_GLOBAL_DTOR_P
(
NODE
) \

3740 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
globÆ_dt‹_p
)

	)

3755 
	#DECL_TEMPLATE_PARMS
(
NODE
) \

3756 
	`TEMPLATE_DECL_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
¨gumíts


	)

3757 
	#DECL_INNERMOST_TEMPLATE_PARMS
(
NODE
) \

3758 
	`INNERMOST_TEMPLATE_PARMS
 (
	`DECL_TEMPLATE_PARMS
 (
NODE
))

	)

3759 
	#DECL_NTPARMS
(
NODE
) \

3760 
	`TREE_VEC_LENGTH
 (
	`DECL_INNERMOST_TEMPLATE_PARMS
 (
NODE
))

	)

3762 
	#DECL_TEMPLATE_RESULT
(
NODE
) \

3763 
	`DECL_RESULT_FLD
 (
	`TEMPLATE_DECL_CHECK
 (
NODE
))

	)

3792 
	#DECL_TEMPLATE_INSTANTIATIONS
(
NODE
) \

3793 
	`DECL_VINDEX
 (
	`TEMPLATE_DECL_CHECK
 (
NODE
))

	)

3805 
	#DECL_TEMPLATE_SPECIALIZATIONS
(
NODE
) \

3806 
	`DECL_SIZE
 (
	`TEMPLATE_DECL_CHECK
 (
NODE
))

	)

3810 
	#DECL_TEMPLATE_PARM_P
(
NODE
) \

3811 (
	`DECL_LANG_FLAG_0
 (
NODE
) \

3812 && (
	`TREE_CODE
 (
NODE
Ë=
CONST_DECL
 \

3813 || 
	`TREE_CODE
 (
NODE
Ë=
PARM_DECL
 \

3814 || 
	`TREE_CODE
 (
NODE
Ë=
TYPE_DECL
 \

3815 || 
	`TREE_CODE
 (
NODE
Ë=
TEMPLATE_DECL
))

	)

3818 
	#SET_DECL_TEMPLATE_PARM_P
(
NODE
) \

3819 (
	`DECL_LANG_FLAG_0
 (
NODE
Ë1)

	)

3822 
	#DECL_TEMPLATE_TEMPLATE_PARM_P
(
NODE
) \

3823 (
	`TREE_CODE
 (
NODE
Ë=
TEMPLATE_DECL
 && 
	`DECL_TEMPLATE_PARM_P
 (NODE))

	)

3826 
	#DECL_FUNCTION_TEMPLATE_P
(
NODE
) \

3827 (
	`TREE_CODE
 (
NODE
Ë=
TEMPLATE_DECL
 \

3828 && 
	`DECL_TEMPLATE_RESULT
 (
NODE
Ë!
NULL_TREE
 \

3829 && 
	`TREE_CODE
 (
	`DECL_TEMPLATE_RESULT
 (
NODE
)Ë=
FUNCTION_DECL
)

	)

3833 
	#DECL_TYPE_TEMPLATE_P
(
NODE
) \

3834 (
	`TREE_CODE
 (
NODE
Ë=
TEMPLATE_DECL
 \

3835 && 
	`DECL_TEMPLATE_RESULT
 (
NODE
Ë!
NULL_TREE
 \

3836 && 
	`TREE_CODE
 (
	`DECL_TEMPLATE_RESULT
 (
NODE
)Ë=
TYPE_DECL
)

	)

3839 
	#DECL_CLASS_TEMPLATE_P
(
NODE
) \

3840 (
	`DECL_TYPE_TEMPLATE_P
 (
NODE
) \

3841 && 
	`DECL_IMPLICIT_TYPEDEF_P
 (
	`DECL_TEMPLATE_RESULT
 (
NODE
)))

	)

3844 
	#DECL_ALIAS_TEMPLATE_P
(
NODE
) \

3845 (
	`DECL_TYPE_TEMPLATE_P
 (
NODE
) \

3846 && !
	`DECL_ARTIFICIAL
 (
	`DECL_TEMPLATE_RESULT
 (
NODE
)))

	)

3849 
	#DECL_DECLARES_TYPE_P
(
NODE
) \

3850 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_DECL
 || 
	`DECL_TYPE_TEMPLATE_P
 (NODE))

	)

3853 
	#DECL_DECLARES_FUNCTION_P
(
NODE
) \

3854 (
	`TREE_CODE
 (
NODE
Ë=
FUNCTION_DECL
 || 
	`DECL_FUNCTION_TEMPLATE_P
 (NODE))

	)

3863 
	#DECL_IMPLICIT_TYPEDEF_P
(
NODE
) \

3864 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_DECL
 && 
	`DECL_LANG_FLAG_2
 (NODE))

	)

3865 
	#SET_DECL_IMPLICIT_TYPEDEF_P
(
NODE
) \

3866 (
	`DECL_LANG_FLAG_2
 (
NODE
Ë1)

	)

3867 
	#DECL_SELF_REFERENCE_P
(
NODE
) \

3868 (
	`TREE_CODE
 (
NODE
Ë=
TYPE_DECL
 && 
	`DECL_LANG_FLAG_4
 (NODE))

	)

3869 
	#SET_DECL_SELF_REFERENCE_P
(
NODE
) \

3870 (
	`DECL_LANG_FLAG_4
 (
NODE
Ë1)

	)

3878 
	#DECL_PRIMARY_TEMPLATE
(
NODE
) \

3879 (
	`TREE_TYPE
 (
	`DECL_INNERMOST_TEMPLATE_PARMS
 (
NODE
)))

	)

3882 
	#PRIMARY_TEMPLATE_P
(
NODE
Ë(
	`DECL_PRIMARY_TEMPLATE
 (NODEË=(NODE))

	)

3910 
	#DECL_USE_TEMPLATE
(
NODE
Ë(
	`DECL_LANG_SPECIFIC
 (NODE)->
u
.
ba£
.
u£_ãm∂©e
)

	)

3913 
	#CLASSTYPE_USE_TEMPLATE
(
NODE
) \

3914 (
	`LANG_TYPE_CLASS_CHECK
 (
NODE
)->
u£_ãm∂©e
)

	)

3917 
	#CLASSTYPE_SPECIALIZATION_OF_PRIMARY_TEMPLATE_P
(
NODE
) \

3918 (
	`CLASS_TYPE_P
 (
NODE
) \

3919 && 
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
) \

3920 && 
	`PRIMARY_TEMPLATE_P
 (
	`CLASSTYPE_TI_TEMPLATE
 (
NODE
)))

	)

3922 
	#DECL_TEMPLATE_INSTANTIATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË& 1)

	)

3923 
	#CLASSTYPE_TEMPLATE_INSTANTIATION
(
NODE
) \

3924 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë& 1)

	)

3926 
	#DECL_TEMPLATE_SPECIALIZATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË=2)

	)

3927 
	#SET_DECL_TEMPLATE_SPECIALIZATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË2)

	)

3931 
	#CLASSTYPE_TEMPLATE_SPECIALIZATION
(
NODE
) \

3932 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë=2)

	)

3933 
	#SET_CLASSTYPE_TEMPLATE_SPECIALIZATION
(
NODE
) \

3934 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë2)

	)

3936 
	#DECL_IMPLICIT_INSTANTIATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË=1)

	)

3937 
	#SET_DECL_IMPLICIT_INSTANTIATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË1)

	)

3938 
	#CLASSTYPE_IMPLICIT_INSTANTIATION
(
NODE
) \

3939 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë=1)

	)

3940 
	#SET_CLASSTYPE_IMPLICIT_INSTANTIATION
(
NODE
) \

3941 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë1)

	)

3943 
	#DECL_EXPLICIT_INSTANTIATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË=3)

	)

3944 
	#SET_DECL_EXPLICIT_INSTANTIATION
(
NODE
Ë(
	`DECL_USE_TEMPLATE
 (NODEË3)

	)

3945 
	#CLASSTYPE_EXPLICIT_INSTANTIATION
(
NODE
) \

3946 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë=3)

	)

3947 
	#SET_CLASSTYPE_EXPLICIT_INSTANTIATION
(
NODE
) \

3948 (
	`CLASSTYPE_USE_TEMPLATE
 (
NODE
Ë3)

	)

3957 
	#DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION
(
DECL
) \

3958 (
	`DECL_TEMPLATE_INFO
 (
DECL
Ë&& !
	`DECL_USE_TEMPLATE
 (DECL))

	)

3962 
	#DECL_TEMPLOID_INSTANTIATION
(
DECL
) \

3963 (
	`DECL_TEMPLATE_INSTANTIATION
 (
DECL
) \

3964 || 
	`DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION
 (
DECL
))

	)

3968 
	#DECL_GENERATED_P
(
DECL
) \

3969 (
	`DECL_TEMPLOID_INSTANTIATION
 (
DECL
Ë|| 
	`DECL_DEFAULTED_FN
 (DECL))

	)

3974 
	#PROCESSING_REAL_TEMPLATE_DECL_P
() \

3975 (
¥o˚ssög_ãm∂©e_de˛
 > 
	`ãm∂©e_˛ass_dïth
 (
	`cuºít_sc›e
 ()))

	)

3980 
	#DECL_TEMPLATE_INSTANTIATED
(
NODE
) \

3981 
	`DECL_LANG_FLAG_1
 (
	`VAR_OR_FUNCTION_DECL_CHECK
 (
NODE
))

	)

3984 
	#DECL_INTERFACE_KNOWN
(
NODE
Ë
	`DECL_LANG_FLAG_5
 (NODE)

	)

3993 
	#DECL_NOT_REALLY_EXTERN
(
NODE
) \

3994 (
	`DECL_LANG_SPECIFIC
 (
NODE
)->
u
.
ba£
.
nŸ_ªÆly_exã∫
)

	)

3996 
	#DECL_REALLY_EXTERN
(
NODE
) \

3997 (
	`DECL_EXTERNAL
 (
NODE
Ë&& ! 
	`DECL_NOT_REALLY_EXTERN
 (NODE))

	)

4040 
	#THUNK_FIXED_OFFSET
(
DECL
) \

4041 (
	`DECL_LANG_SPECIFIC
 (
	`THUNK_FUNCTION_CHECK
 (
DECL
))->
u
.
‚
.
u5
.
fixed_off£t
)

	)

4053 
	#THUNK_VIRTUAL_OFFSET
(
DECL
) \

4054 (
	`LANG_DECL_U2_CHECK
 (
	`FUNCTION_DECL_CHECK
 (
DECL
), 0)->
ac˚ss
)

	)

4057 
	#THUNK_ALIAS
(
DECL
) \

4058 (
	`DECL_LANG_SPECIFIC
 (
	`FUNCTION_DECL_CHECK
 (
DECL
))->
u
.
mö
.
ãm∂©e_öfo
)

	)

4062 
	#THUNK_TARGET
(
NODE
) \

4063 (
	`LANG_DECL_FN_CHECK
 (
NODE
)->
be‰õndög_˛as£s
)

	)

4067 
	#QUALIFIED_NAME_IS_TEMPLATE
(
NODE
) \

4068 (
	`TREE_LANG_FLAG_1
 (
	`SCOPE_REF_CHECK
 (
NODE
)))

	)

4072 
	#OMP_ATOMIC_DEPENDENT_P
(
NODE
) \

4073 (
	`TREE_CODE
 (
	`TREE_OPERAND
 (
	`OMP_ATOMIC_CHECK
 (
NODE
), 0)Ë=
INTEGER_CST
)

	)

4076 
	#OMP_FOR_GIMPLIFYING_P
(
NODE
) \

4077 (
	`TREE_LANG_FLAG_0
 (
	`OMP_LOOP_CHECK
 (
NODE
)))

	)

4082 
	#CP_OMP_CLAUSE_INFO
(
NODE
) \

4083 
	`TREE_TYPE
 (
	`OMP_CLAUSE_RANGE_CHECK
 (
NODE
, 
OMP_CLAUSE_PRIVATE
, \

4084 
OMP_CLAUSE_LINEAR
))

	)

4087 
	#TRANSACTION_EXPR_IS_STMT
(
NODE
) \

4088 
	`TREE_LANG_FLAG_0
 (
	`TRANSACTION_EXPR_CHECK
 (
NODE
))

	)

4092 
	#TRY_STMTS
(
NODE
Ë
	`TREE_OPERAND
 (
	`TRY_BLOCK_CHECK
 (NODE), 0)

	)

4093 
	#TRY_HANDLERS
(
NODE
Ë
	`TREE_OPERAND
 (
	`TRY_BLOCK_CHECK
 (NODE), 1)

	)

4095 
	#EH_SPEC_STMTS
(
NODE
Ë
	`TREE_OPERAND
 (
	`EH_SPEC_BLOCK_CHECK
 (NODE), 0)

	)

4096 
	#EH_SPEC_RAISES
(
NODE
Ë
	`TREE_OPERAND
 (
	`EH_SPEC_BLOCK_CHECK
 (NODE), 1)

	)

4098 
	#USING_STMT_NAMESPACE
(
NODE
Ë
	`TREE_OPERAND
 (
	`USING_STMT_CHECK
 (NODE), 0)

	)

4101 
	#FN_TRY_BLOCK_P
(
NODE
Ë
	`TREE_LANG_FLAG_3
 (
	`TRY_BLOCK_CHECK
 (NODE))

	)

4102 
	#HANDLER_PARMS
(
NODE
Ë
	`TREE_OPERAND
 (
	`HANDLER_CHECK
 (NODE), 0)

	)

4103 
	#HANDLER_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`HANDLER_CHECK
 (NODE), 1)

	)

4104 
	#HANDLER_TYPE
(
NODE
Ë
	`TREE_TYPE
 (
	`HANDLER_CHECK
 (NODE))

	)

4108 
	#CLEANUP_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`CLEANUP_STMT_CHECK
 (NODE), 0)

	)

4109 
	#CLEANUP_EXPR
(
NODE
Ë
	`TREE_OPERAND
 (
	`CLEANUP_STMT_CHECK
 (NODE), 1)

	)

4110 
	#CLEANUP_DECL
(
NODE
Ë
	`TREE_OPERAND
 (
	`CLEANUP_STMT_CHECK
 (NODE), 2)

	)

4115 
	#IF_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`IF_STMT_CHECK
 (NODE), 0)

	)

4116 
	#THEN_CLAUSE
(
NODE
Ë
	`TREE_OPERAND
 (
	`IF_STMT_CHECK
 (NODE), 1)

	)

4117 
	#ELSE_CLAUSE
(
NODE
Ë
	`TREE_OPERAND
 (
	`IF_STMT_CHECK
 (NODE), 2)

	)

4118 
	#IF_SCOPE
(
NODE
Ë
	`TREE_OPERAND
 (
	`IF_STMT_CHECK
 (NODE), 3)

	)

4122 
	#WHILE_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`WHILE_STMT_CHECK
 (NODE), 0)

	)

4123 
	#WHILE_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`WHILE_STMT_CHECK
 (NODE), 1)

	)

4127 
	#DO_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`DO_STMT_CHECK
 (NODE), 0)

	)

4128 
	#DO_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`DO_STMT_CHECK
 (NODE), 1)

	)

4133 
	#FOR_INIT_STMT
(
NODE
Ë
	`TREE_OPERAND
 (
	`FOR_STMT_CHECK
 (NODE), 0)

	)

4134 
	#FOR_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`FOR_STMT_CHECK
 (NODE), 1)

	)

4135 
	#FOR_EXPR
(
NODE
Ë
	`TREE_OPERAND
 (
	`FOR_STMT_CHECK
 (NODE), 2)

	)

4136 
	#FOR_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`FOR_STMT_CHECK
 (NODE), 3)

	)

4137 
	#FOR_SCOPE
(
NODE
Ë
	`TREE_OPERAND
 (
	`FOR_STMT_CHECK
 (NODE), 4)

	)

4141 
	#RANGE_FOR_DECL
(
NODE
Ë
	`TREE_OPERAND
 (
	`RANGE_FOR_STMT_CHECK
 (NODE), 0)

	)

4142 
	#RANGE_FOR_EXPR
(
NODE
Ë
	`TREE_OPERAND
 (
	`RANGE_FOR_STMT_CHECK
 (NODE), 1)

	)

4143 
	#RANGE_FOR_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`RANGE_FOR_STMT_CHECK
 (NODE), 2)

	)

4144 
	#RANGE_FOR_SCOPE
(
NODE
Ë
	`TREE_OPERAND
 (
	`RANGE_FOR_STMT_CHECK
 (NODE), 3)

	)

4145 
	#RANGE_FOR_IVDEP
(
NODE
Ë
	`TREE_LANG_FLAG_6
 (
	`RANGE_FOR_STMT_CHECK
 (NODE))

	)

4147 
	#SWITCH_STMT_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_STMT_CHECK
 (NODE), 0)

	)

4148 
	#SWITCH_STMT_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_STMT_CHECK
 (NODE), 1)

	)

4149 
	#SWITCH_STMT_TYPE
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_STMT_CHECK
 (NODE), 2)

	)

4150 
	#SWITCH_STMT_SCOPE
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_STMT_CHECK
 (NODE), 3)

	)

4153 
	#STMT_EXPR_STMT
(
NODE
Ë
	`TREE_OPERAND
 (
	`STMT_EXPR_CHECK
 (NODE), 0)

	)

4157 
	#EXPR_STMT_EXPR
(
NODE
Ë
	`TREE_OPERAND
 (
	`EXPR_STMT_CHECK
 (NODE), 0)

	)

4161 
	#TARGET_EXPR_IMPLICIT_P
(
NODE
) \

4162 
	`TREE_LANG_FLAG_0
 (
	`TARGET_EXPR_CHECK
 (
NODE
))

	)

4166 
	#TARGET_EXPR_LIST_INIT_P
(
NODE
) \

4167 
	`TREE_LANG_FLAG_1
 (
	`TARGET_EXPR_CHECK
 (
NODE
))

	)

4171 
	#TARGET_EXPR_DIRECT_INIT_P
(
NODE
) \

4172 
	`TREE_LANG_FLAG_2
 (
	`TARGET_EXPR_CHECK
 (
NODE
))

	)

4175 
	#DIRECT_INIT_EXPR_P
(
TYPE
,
EXPR
) \

4176 (
	`TREE_CODE
 (
EXPR
Ë=
TARGET_EXPR
 && 
	`TREE_LANG_FLAG_2
 (EXPR) \

4177 && 
	`ßme_ty≥_ign‹ög_t›_Àvñ_quÆifõrs_p
 (
TYPE
, 
	`TREE_TYPE
 (
EXPR
)))

	)

4181 
	#CONVERT_EXPR_VBASE_PATH
(
NODE
) \

4182 
	`TREE_LANG_FLAG_0
 (
	`CONVERT_EXPR_CHECK
 (
NODE
))

	)

4185 
	#SIZEOF_EXPR_TYPE_P
(
NODE
) \

4186 
	`TREE_LANG_FLAG_0
 (
	`SIZEOF_EXPR_CHECK
 (
NODE
))

	)

4189 
	eèg_ty≥s
 {

4190 
	mn⁄e_ty≥
 = 0,

4191 
	mªc‹d_ty≥
,

4192 
	m˛ass_ty≥
,

4193 
	muni⁄_ty≥
,

4194 
	míum_ty≥
,

4195 
	mty≥«me_ty≥


4199 
	e˝_lvÆue_köd_Êags
 {

4200 
	m˛k_n⁄e
 = 0,

4201 
	m˛k_‹dö¨y
 = 1,

4202 
	m˛k_rvÆuîef
 = 2,

4203 
	m˛k_˛ass
 = 4,

4204 
	m˛k_bôfõld
 = 8,

4205 
	m˛k_∑cked
 = 16

4210 
	t˝_lvÆue_köd
;

4213 
	etm∂_•ec_köd
 {

4214 
	mtsk_n⁄e
,

4215 
	mtsk_övÆid_membî_•ec
,

4219 
	mtsk_övÆid_ex∂_ö°
,

4221 
	mtsk_ex˚ssive_∑rms
,

4223 
	mtsk_ösufficõ¡_∑rms
,

4225 
	mtsk_ãm∂©e
,

4226 
	mtsk_ex∂_•ec
,

4227 
	mtsk_ex∂_ö°


4228 } 
	ttm∂_•ec_köd
;

4234 
	eac˚ss_köd
 {

4235 
	mak_n⁄e
 = 0,

4236 
	mak_public
 = 1,

4237 
	mak_¥Ÿe˘ed
 = 2,

4238 
	mak_¥iv©e
 = 3

4239 } 
	tac˚ss_köd
;

4243 
	e•ecül_fun˘i⁄_köd
 {

4244 
	msfk_n⁄e
 = 0,

4247 
	msfk_c⁄°ru˘‹
,

4248 
	msfk_c›y_c⁄°ru˘‹
,

4249 
	msfk_move_c⁄°ru˘‹
,

4250 
	msfk_c›y_assignmít
,

4251 
	msfk_move_assignmít
,

4252 
	msfk_de°ru˘‹
,

4253 
	msfk_com∂ëe_de°ru˘‹
,

4254 
	msfk_ba£_de°ru˘‹
,

4255 
	msfk_dñëög_de°ru˘‹
,

4258 
	msfk_c⁄vîsi⁄
,

4259 
	msfk_öhîôög_c⁄°ru˘‹


4260 } 
	t•ecül_fun˘i⁄_köd
;

4279 
	elökage_köd
 {

4280 
	mlk_n⁄e
,

4281 
	mlk_öã∫Æ
,

4282 
	mlk_exã∫Æ


4283 } 
	tlökage_köd
;

4285 
	eduøti⁄_köd
 {

4286 
	mdk_°©ic
,

4287 
	mdk_thªad
,

4288 
	mdk_auto
,

4289 
	mdk_dy«mic


4290 } 
	tduøti⁄_köd
;

4293 
	etsub°_Êags
 {

4294 
	mtf_n⁄e
 = 0,

4295 
	mtf_îr‹
 = 1 << 0,

4296 
	mtf_w¨nög
 = 1 << 1,

4297 
	mtf_ign‹e_bad_quÆs
 = 1 << 2,

4298 
	mtf_kìp_ty≥_de˛
 = 1 << 3,

4300 
	mtf_±rmem_ok
 = 1 << 4,

4302 
	mtf_u£r
 = 1 << 5,

4304 
	mtf_c⁄v
 = 1 << 6,

4308 
	mtf_de˛ty≥
 = 1 << 7,

4311 
	mtf_∑πül
 = 1 << 8,

4314 
	mtf_w¨nög_‹_îr‹
 = 
tf_w¨nög
 | 
tf_îr‹


4319 
	ttsub°_Êags_t
;

4322 
	eba£_ac˚ss_Êags
 {

4323 
	mba_™y
 = 0,

4325 
	mba_unique
 = 1 << 0,

4326 
	mba_check_bô
 = 1 << 1,

4327 
	mba_check
 = 
ba_unique
 | 
ba_check_bô
,

4328 
	mba_ign‹e_sc›e
 = 1 << 2

4333 
	tba£_ac˚ss
;

4336 
	ede„ºög_köd
 {

4337 
	mdk_no_de„ºed
 = 0,

4338 
	mdk_de„ºed
 = 1,

4339 
	mdk_no_check
 = 2

4340 } 
	tde„ºög_köd
;

4344 
	eba£_köd
 {

4345 
	mbk_öac˚ssibÀ
 = -3,

4346 
	mbk_ambig
 = -2,

4347 
	mbk_nŸ_ba£
 = -1,

4348 
	mbk_ßme_ty≥
 = 0,

4349 
	mbk_¥›î_ba£
 = 1,

4350 
	mbk_vü_vútuÆ
 = 2

4353 } 
	tba£_köd
;

4357 
	#vfunc_±r_ty≥_node
 
vèbÀ_íåy_ty≥


	)

4361 
GTY
(()Ë
åì
 
öãgî_two_node
;

4366 
fun˘i⁄_dïth
;

4370 
com∑rög_•ecüliz©i⁄s
;

4375 
	t˝_cv_quÆs
;

4383 
˝_u√vÆu©ed_›î™d
;

4384 
åì
 
˝_c⁄vît_ønge_f‹
 (åì,Åªe,Åªe, 
boﬁ
);

4385 
boﬁ
 
∑rsög_nsdmi
 ();

4386 
öje˘_this_∑ømëî
 (
åì
, 
˝_cv_quÆs
);

4394 
	eunifiˇti⁄_köd_t
 {

4395 
	mDEDUCE_CALL
,

4396 
	mDEDUCE_CONV
,

4397 
	mDEDUCE_EXACT


4398 } 
	tunifiˇti⁄_köd_t
;

4402 
cuºít_˛ass_dïth
;

4406 
GTY
(()Ë
vec
<
åì
, 
va_gc
> *
loˇl_˛as£s
;

4420 #i‚de‡
NO_DOT_IN_LABEL


4422 
	#JOINER
 '.'

	)

4424 
	#AUTO_TEMP_NAME
 "_.tmp_"

	)

4425 
	#VFIELD_BASE
 ".vf"

	)

4426 
	#VFIELD_NAME
 "_v±r."

	)

4427 
	#VFIELD_NAME_FORMAT
 "_v±r.%s"

	)

4431 #i‚de‡
NO_DOLLAR_IN_LABEL


4433 
	#JOINER
 '$'

	)

4435 
	#AUTO_TEMP_NAME
 "_$tmp_"

	)

4436 
	#VFIELD_BASE
 "$vf"

	)

4437 
	#VFIELD_NAME
 "_v±r$"

	)

4438 
	#VFIELD_NAME_FORMAT
 "_v±r$%s"

	)

4442 
	#AUTO_TEMP_NAME
 "__tmp_"

	)

4443 
	#TEMP_NAME_P
(
ID_NODE
) \

4444 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), 
AUTO_TEMP_NAME
, \

4445  (
AUTO_TEMP_NAME
Ë- 1))

	)

4446 
	#VTABLE_NAME
 "__vt_"

	)

4447 
	#VTABLE_NAME_P
(
ID_NODE
) \

4448 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), 
VTABLE_NAME
, \

4449  (
VTABLE_NAME
Ë- 1))

	)

4450 
	#VFIELD_BASE
 "__vfb"

	)

4451 
	#VFIELD_NAME
 "__v±r_"

	)

4452 
	#VFIELD_NAME_P
(
ID_NODE
) \

4453 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), 
VFIELD_NAME
, \

4454  (
VFIELD_NAME
Ë- 1))

	)

4455 
	#VFIELD_NAME_FORMAT
 "__v±r_%s"

	)

4460 
	#THIS_NAME
 "this"

	)

4462 
	#IN_CHARGE_NAME
 "__ö_chrg"

	)

4464 
	#VTBL_PTR_TYPE
 "__vtbl_±r_ty≥"

	)

4465 
	#VTABLE_DELTA_NAME
 "__dñè"

	)

4466 
	#VTABLE_PFN_NAME
 "__p‚"

	)

4468 
	#LAMBDANAME_PREFIX
 "__œmbda"

	)

4469 
	#LAMBDANAME_FORMAT
 
LAMBDANAME_PREFIX
 "%d"

	)

4471 
	#UDLIT_OP_ANSI_PREFIX
 "›î©‹\"\""

	)

4472 
	#UDLIT_OP_ANSI_FORMAT
 
UDLIT_OP_ANSI_PREFIX
 "%s"

	)

4473 
	#UDLIT_OP_MANGLED_PREFIX
 "li"

	)

4474 
	#UDLIT_OP_MANGLED_FORMAT
 
UDLIT_OP_MANGLED_PREFIX
 "%s"

	)

4475 
	#UDLIT_OPER_P
(
ID_NODE
) \

4476 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), \

4477 
UDLIT_OP_ANSI_PREFIX
, \

4478  (
UDLIT_OP_ANSI_PREFIX
Ë- 1))

	)

4479 
	#UDLIT_OP_SUFFIX
(
ID_NODE
) \

4480 (
	`IDENTIFIER_POINTER
 (
ID_NODE
Ë+  (
UDLIT_OP_ANSI_PREFIX
Ë- 1)

	)

4482 #i‡!
deföed
(
NO_DOLLAR_IN_LABEL
Ë|| !deföed(
NO_DOT_IN_LABEL
)

4484 
	#VTABLE_NAME_P
(
ID_NODE
Ë(
	`IDENTIFIER_POINTER
 (ID_NODE)[1] == 'v' \

4485 && 
	`IDENTIFIER_POINTER
 (
ID_NODE
)[2] == 't' \

4486 && 
	`IDENTIFIER_POINTER
 (
ID_NODE
)[3] =
JOINER
)

	)

4488 
	#TEMP_NAME_P
(
ID_NODE
) \

4489 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), 
AUTO_TEMP_NAME
,  (AUTO_TEMP_NAME)-1))

	)

4490 
	#VFIELD_NAME_P
(
ID_NODE
) \

4491 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), 
VFIELD_NAME
, (VFIELD_NAME)-1))

	)

4498 
©_eof
;

4504 
GTY
(()Ë
åì
 
°©ic_aggªg©es
;

4506 
GTY
(()Ë
åì
 
és_aggªg©es
;

4508 
	eovîlﬂd_Êags
 { 
	mNO_SPECIAL
 = 0, 
	mDTOR_FLAG
, 
	mTYPENAME_FLAG
 };

4516 
	#LOOKUP_PROTECT
 (1 << 0)

	)

4517 
	#LOOKUP_NORMAL
 (
LOOKUP_PROTECT
)

	)

4520 
	#LOOKUP_NONVIRTUAL
 (1 << 1)

	)

4523 
	#LOOKUP_ONLYCONVERTING
 (1 << 2)

	)

4524 
	#LOOKUP_IMPLICIT
 (
LOOKUP_NORMAL
 | 
LOOKUP_ONLYCONVERTING
)

	)

4531 
	#DIRECT_BIND
 (1 << 3)

	)

4534 
	#LOOKUP_NO_CONVERSION
 (1 << 4)

	)

4538 
	#LOOKUP_DESTRUCTOR
 (1 << 5)

	)

4540 
	#LOOKUP_NO_TEMP_BIND
 (1 << 6)

	)

4542 
	#LOOKUP_PREFER_TYPES
 (1 << 7)

	)

4544 
	#LOOKUP_PREFER_NAMESPACES
 (1 << 8)

	)

4546 
	#LOOKUP_PREFER_BOTH
 (
LOOKUP_PREFER_TYPES
 | 
LOOKUP_PREFER_NAMESPACES
)

	)

4550 
	#LOOKUP_HIDDEN
 (
LOOKUP_PREFER_NAMESPACES
 << 1)

	)

4552 
	#LOOKUP_PREFER_RVALUE
 (
LOOKUP_HIDDEN
 << 1)

	)

4554 
	#LOOKUP_NO_NARROWING
 (
LOOKUP_PREFER_RVALUE
 << 1)

	)

4556 
	#LOOKUP_LIST_INIT_CTOR
 (
LOOKUP_NO_NARROWING
 << 1)

	)

4558 
	#LOOKUP_COPY_PARM
 (
LOOKUP_LIST_INIT_CTOR
 << 1)

	)

4560 
	#LOOKUP_LIST_ONLY
 (
LOOKUP_COPY_PARM
 << 1)

	)

4567 
	#LOOKUP_SPECULATIVE
 (
LOOKUP_LIST_ONLY
 << 1)

	)

4570 
	#LOOKUP_DEFAULTED
 (
LOOKUP_SPECULATIVE
 << 1)

	)

4573 
	#LOOKUP_ALREADY_DIGESTED
 (
LOOKUP_DEFAULTED
 << 1)

	)

4575 
	#LOOKUP_EXPLICIT_TMPL_ARGS
 (
LOOKUP_ALREADY_DIGESTED
 << 1)

	)

4577 
	#LOOKUP_NO_RVAL_BIND
 (
LOOKUP_EXPLICIT_TMPL_ARGS
 << 1)

	)

4579 
	#LOOKUP_NO_NON_INTEGRAL
 (
LOOKUP_NO_RVAL_BIND
 << 1)

	)

4581 
	#LOOKUP_DELEGATING_CONS
 (
LOOKUP_NO_NON_INTEGRAL
 << 1)

	)

4583 
	#LOOKUP_NAMESPACES_ONLY
(
F
) \

4584 (((
F
Ë& 
LOOKUP_PREFER_NAMESPACES
Ë&& !((FË& 
LOOKUP_PREFER_TYPES
))

	)

4585 
	#LOOKUP_TYPES_ONLY
(
F
) \

4586 (!((
F
Ë& 
LOOKUP_PREFER_NAMESPACES
Ë&& ((FË& 
LOOKUP_PREFER_TYPES
))

	)

4587 
	#LOOKUP_QUALIFIERS_ONLY
(
F
Ë((FË& 
LOOKUP_PREFER_BOTH
)

	)

4599 
	#CONV_IMPLICIT
 1

	)

4600 
	#CONV_STATIC
 2

	)

4601 
	#CONV_CONST
 4

	)

4602 
	#CONV_REINTERPRET
 8

	)

4603 
	#CONV_PRIVATE
 16

	)

4605 
	#CONV_FORCE_TEMP
 64

	)

4606 
	#CONV_OLD_CONVERT
 (
CONV_IMPLICIT
 | 
CONV_STATIC
 | 
CONV_CONST
 \

4607 | 
CONV_REINTERPRET
)

	)

4608 
	#CONV_C_CAST
 (
CONV_IMPLICIT
 | 
CONV_STATIC
 | 
CONV_CONST
 \

4609 | 
CONV_REINTERPRET
 | 
CONV_PRIVATE
 | 
CONV_FORCE_TEMP
)

	)

4614 
	#WANT_INT
 1

	)

4615 
	#WANT_FLOAT
 2

	)

4616 
	#WANT_ENUM
 4

	)

4617 
	#WANT_POINTER
 8

	)

4618 
	#WANT_NULL
 16

	)

4619 
	#WANT_VECTOR_OR_COMPLEX
 32

	)

4620 
	#WANT_ARITH
 (
WANT_INT
 | 
WANT_FLOAT
 | 
WANT_VECTOR_OR_COMPLEX
)

	)

4625 
	#COMPARE_STRICT
 0

	)

4627 
	#COMPARE_BASE
 1

	)

4629 
	#COMPARE_DERIVED
 2

	)

4631 
	#COMPARE_REDECLARATION
 4

	)

4634 
	#COMPARE_STRUCTURAL
 8

	)

4640 
	#PUSH_GLOBAL
 0

	)

4642 
	#PUSH_LOCAL
 1

	)

4644 
	#PUSH_USING
 2

	)

4648 
	#SF_DEFAULT
 0

	)

4649 
	#SF_PRE_PARSED
 1

	)

4651 
	#SF_INCLASS_INLINE
 2

	)

4655 
	#SD_UNINITIALIZED
 0

	)

4656 
	#SD_INITIALIZED
 1

	)

4657 
	#SD_DEFAULTED
 2

	)

4658 
	#SD_DELETED
 3

	)

4663 
	#ßme_‹_ba£_ty≥_p
(
TYPE1
, 
TYPE2
) \

4664 
	`com±y≥s
 ((
TYPE1
), (
TYPE2
), 
COMPARE_BASE
)

	)

4667 
	#TEMPLATE_PARM_INDEX_CAST
(
NODE
) \

4668 ((
ãm∂©e_∑rm_ödex
*)
	`TEMPLATE_PARM_INDEX_CHECK
 (
NODE
))

	)

4669 
	#TEMPLATE_PARM_IDX
(
NODE
Ë(
	`TEMPLATE_PARM_INDEX_CAST
 (NODE)->
ödex
)

	)

4670 
	#TEMPLATE_PARM_LEVEL
(
NODE
Ë(
	`TEMPLATE_PARM_INDEX_CAST
 (NODE)->
Àvñ
)

	)

4671 
	#TEMPLATE_PARM_DESCENDANTS
(
NODE
Ë(
	`TREE_CHAIN
 (NODE))

	)

4672 
	#TEMPLATE_PARM_ORIG_LEVEL
(
NODE
Ë(
	`TEMPLATE_PARM_INDEX_CAST
 (NODE)->
‹ig_Àvñ
)

	)

4673 
	#TEMPLATE_PARM_DECL
(
NODE
Ë(
	`TEMPLATE_PARM_INDEX_CAST
 (NODE)->
de˛
)

	)

4674 
	#TEMPLATE_PARM_PARAMETER_PACK
(
NODE
) \

4675 (
	`TREE_LANG_FLAG_0
 (
	`TEMPLATE_PARM_INDEX_CHECK
 (
NODE
)))

	)

4679 
	#TEMPLATE_TYPE_PARM_INDEX
(
NODE
) \

4680 (
	`TYPE_VALUES_RAW
 (
	`TREE_CHECK3
 ((
NODE
), 
TEMPLATE_TYPE_PARM
, \

4681 
TEMPLATE_TEMPLATE_PARM
, \

4682 
BOUND_TEMPLATE_TEMPLATE_PARM
)))

	)

4683 
	#TEMPLATE_TYPE_IDX
(
NODE
) \

4684 (
	`TEMPLATE_PARM_IDX
 (
	`TEMPLATE_TYPE_PARM_INDEX
 (
NODE
)))

	)

4685 
	#TEMPLATE_TYPE_LEVEL
(
NODE
) \

4686 (
	`TEMPLATE_PARM_LEVEL
 (
	`TEMPLATE_TYPE_PARM_INDEX
 (
NODE
)))

	)

4687 
	#TEMPLATE_TYPE_ORIG_LEVEL
(
NODE
) \

4688 (
	`TEMPLATE_PARM_ORIG_LEVEL
 (
	`TEMPLATE_TYPE_PARM_INDEX
 (
NODE
)))

	)

4689 
	#TEMPLATE_TYPE_DECL
(
NODE
) \

4690 (
	`TEMPLATE_PARM_DECL
 (
	`TEMPLATE_TYPE_PARM_INDEX
 (
NODE
)))

	)

4691 
	#TEMPLATE_TYPE_PARAMETER_PACK
(
NODE
) \

4692 (
	`TEMPLATE_PARM_PARAMETER_PACK
 (
	`TEMPLATE_TYPE_PARM_INDEX
 (
NODE
)))

	)

4695 
	#AUTO_IS_DECLTYPE
(
NODE
) \

4696 (
	`TYPE_LANG_FLAG_5
 (
	`TEMPLATE_TYPE_PARM_CHECK
 (
NODE
)))

	)

4721 
	#TFF_PLAIN_IDENTIFIER
 (0)

	)

4722 
	#TFF_SCOPE
 (1)

	)

4723 
	#TFF_CHASE_TYPEDEF
 (1 << 1)

	)

4724 
	#TFF_DECL_SPECIFIERS
 (1 << 2)

	)

4725 
	#TFF_CLASS_KEY_OR_ENUM
 (1 << 3)

	)

4726 
	#TFF_RETURN_TYPE
 (1 << 4)

	)

4727 
	#TFF_FUNCTION_DEFAULT_ARGUMENTS
 (1 << 5)

	)

4728 
	#TFF_EXCEPTION_SPECIFICATION
 (1 << 6)

	)

4729 
	#TFF_TEMPLATE_HEADER
 (1 << 7)

	)

4730 
	#TFF_TEMPLATE_NAME
 (1 << 8)

	)

4731 
	#TFF_EXPR_IN_PARENS
 (1 << 9)

	)

4732 
	#TFF_NO_FUNCTION_ARGUMENTS
 (1 << 10)

	)

4733 
	#TFF_UNQUALIFIED_NAME
 (1 << 11)

	)

4734 
	#TFF_NO_OMIT_DEFAULT_TEMPLATE_ARGUMENTS
 (1 << 12)

	)

4735 
	#TFF_NO_TEMPLATE_BINDINGS
 (1 << 13)

	)

4739 
	#TEMPLATE_TEMPLATE_PARM_TEMPLATE_DECL
(
NODE
) \

4740 ((
	`TREE_CODE
 (
NODE
Ë=
BOUND_TEMPLATE_TEMPLATE_PARM
) \

4741 ? 
	`TYPE_TI_TEMPLATE
 (
NODE
) \

4742 : 
	`TYPE_NAME
 (
NODE
))

	)

4746 
öô_ªsw‹ds
 ();

4748 
GTY
(()Ë
	t›î©‹_«me_öfo_t
 {

4750 
åì
 
	gidítifõr
;

4752 c⁄° *
	g«me
;

4754 c⁄° *
	gm™gÀd_«me
;

4756 
	g¨ôy
;

4757 } 
	t›î©‹_«me_öfo_t
;

4760 
GTY
(()Ë
›î©‹_«me_öfo_t
 
›î©‹_«me_öfo


4761 [(Ë
MAX_TREE_CODES
];

4763 
GTY
(()Ë
›î©‹_«me_öfo_t
 
assignmít_›î©‹_«me_öfo


4764 [(Ë
MAX_TREE_CODES
];

4770 
	evút_•ecifõr


4772 
	mVIRT_SPEC_UNSPECIFIED
 = 0x0,

4773 
	mVIRT_SPEC_FINAL
 = 0x1,

4774 
	mVIRT_SPEC_OVERRIDE
 = 0x2

4780 
	t˝_vút_•ecifõrs
;

4793 
	e˝_ªf_quÆifõr
 {

4794 
	mREF_QUAL_NONE
 = 0,

4795 
	mREF_QUAL_LVALUE
 = 1,

4796 
	mREF_QUAL_RVALUE
 = 2

4801 
	e˝_°‹age_˛ass
 {

4804 
	msc_n⁄e
 = 0,

4805 
	msc_auto
,

4806 
	msc_ªgi°î
,

4807 
	msc_°©ic
,

4808 
	msc_exã∫
,

4809 
	msc_muèbÀ


4810 } 
	t˝_°‹age_˛ass
;

4816 
	e˝_de˛_•ec
 {

4817 
	mds_fú°
,

4818 
	mds_sig√d
 = 
ds_fú°
,

4819 
	mds_unsig√d
,

4820 
	mds_sh‹t
,

4821 
	mds_l⁄g
,

4822 
	mds_c⁄°
,

4823 
	mds_vﬁ©ûe
,

4824 
	mds_ª°ri˘
,

4825 
	mds_ölöe
,

4826 
	mds_vútuÆ
,

4827 
	mds_ex∂icô
,

4828 
	mds_‰õnd
,

4829 
	mds_ty≥def
,

4830 
	mds_Æüs
,

4831 
	mds_c⁄°ex¥
,

4832 
	mds_com∂ex
,

4833 
	mds_thªad
,

4834 
	mds_ty≥_•ec
,

4835 
	mds_ªdeföed_buûtö_ty≥_•ec
,

4836 
	mds_©åibuã
,

4837 
	mds_°d_©åibuã
,

4838 
	mds_°‹age_˛ass
,

4839 
	mds_l⁄g_l⁄g
,

4840 
	mds_œ°


4841 } 
	t˝_de˛_•ec
;

4845 
	s˝_de˛_•ecifõr_£q
 {

4848 
sour˚_loˇti⁄
 
	mloˇti⁄s
[
ds_œ°
];

4853 
åì
 
	mty≥
;

4855 
åì
 
	m©åibuãs
;

4857 
åì
 
	m°d_©åibuãs
;

4860 
åì
 
	mªdeföed_buûtö_ty≥
;

4863 
˝_°‹age_˛ass
 
	m°‹age_˛ass
;

4865 
BOOL_BITFIELD
 
	mty≥_deföôi⁄_p
 : 1;

4868 
BOOL_BITFIELD
 
	mmu…ùÀ_ty≥s_p
 : 1;

4872 
BOOL_BITFIELD
 
	mc⁄Êi˘ög_•ecifõrs_p
 : 1;

4874 
BOOL_BITFIELD
 
	m™y_•ecifõrs_p
 : 1;

4876 
BOOL_BITFIELD
 
	m™y_ty≥_•ecifõrs_p
 : 1;

4878 
BOOL_BITFIELD
 
	mex∂icô_öt_p
 : 1;

4880 
BOOL_BITFIELD
 
	mex∂icô_öt128_p
 : 1;

4882 
BOOL_BITFIELD
 
	mex∂icô_ch¨_p
 : 1;

4884 
BOOL_BITFIELD
 
	mgnu_thªad_keyw‹d_p
 : 1;

4885 } 
	t˝_de˛_•ecifõr_£q
;

4889 
	e˝_de˛¨©‹_köd
 {

4890 
	mcdk_id
,

4891 
	mcdk_fun˘i⁄
,

4892 
	mcdk_¨øy
,

4893 
	mcdk_poöãr
,

4894 
	mcdk_ª„ªn˚
,

4895 
	mcdk_±rmem
,

4896 
	mcdk_îr‹


4897 } 
	t˝_de˛¨©‹_köd
;

4901 
˝_de˛¨©‹
 
	t˝_de˛¨©‹
;

4903 
˝_∑ømëî_de˛¨©‹
 
	t˝_∑ømëî_de˛¨©‹
;

4906 
	s˝_∑ømëî_de˛¨©‹
 {

4908 
˝_∑ømëî_de˛¨©‹
 *
	m√xt
;

4910 
˝_de˛_•ecifõr_£q
 
	mde˛_•ecifõrs
;

4912 
˝_de˛¨©‹
 *
	mde˛¨©‹
;

4914 
åì
 
	mdeÁu…_¨gumít
;

4917 
boﬁ
 
	mñlùsis_p
;

4921 
	s˝_de˛¨©‹
 {

4923 
ENUM_BITFIELD
 (
˝_de˛¨©‹_köd
Ë
	mköd
 : 4;

4926 
BOOL_BITFIELD
 
	m∑ømëî_∑ck_p
 : 1;

4927 
loˇti⁄_t
 
	mid_loc
;

4931 
åì
 
	m©åibuãs
;

4935 
åì
 
	m°d_©åibuãs
;

4938 
˝_de˛¨©‹
 *
	mde˛¨©‹
;

4944 
åì
 
	mquÆifyög_sc›e
;

4947 
åì
 
	munquÆifõd_«me
;

4950 
•ecül_fun˘i⁄_köd
 
	msfk
;

4951 } 
	mid
;

4955 
åì
 
	m∑ømëîs
;

4957 
˝_cv_quÆs
 
	mquÆifõrs
;

4959 
˝_vút_•ecifõrs
 
	mvút_•ecifõrs
;

4961 
˝_ªf_quÆifõr
 
	mªf_quÆifõr
;

4963 
åì
 
	mex˚±i⁄_•ecifiˇti⁄
;

4965 
åì
 
	mœã_ªtu∫_ty≥
;

4966 } 
	mfun˘i⁄
;

4970 
åì
 
	mbounds
;

4971 } 
	m¨øy
;

4975 
˝_cv_quÆs
 
	mquÆifõrs
;

4977 
åì
 
	m˛ass_ty≥
;

4978 } 
	mpoöãr
;

4983 
˝_cv_quÆs
 
	mquÆifõrs
;

4985 
boﬁ
 
	mrvÆue_ªf
;

4986 } 
	mª„ªn˚
;

4987 } 
	mu
;

4991 
GTY
((
chaö_√xt
 ("%h.√xt"))Ë
	gtö°_Àvñ
 {

4993 
tö°_Àvñ
 *
	g√xt
;

4998 
åì
 
	gde˛
;

5001 
loˇti⁄_t
 
	glocus
;

5004 
	gîr‹s
;

5007 
boﬁ
 
	gö_sy°em_hódî_p
;

5010 
boﬁ
 
de˛_•ec_£q_has_•ec_p
 (c⁄° 
˝_de˛_•ecifõr_£q
 *, 
˝_de˛_•ec
);

5014 
ölöe
 
åì


5015 
	$ty≥_of_this_∑rm
 (
c⁄°_åì
 
‚ty≥
)

5017 
fun˘i⁄_¨gs_ôî©‹
 
ôî
;

5018 
	`gcc_as£π
 (
	`TREE_CODE
 (
‚ty≥
Ë=
METHOD_TYPE
);

5019 
	`fun˘i⁄_¨gs_ôî_öô
 (&
ôî
, 
‚ty≥
);

5020  
	`fun˘i⁄_¨gs_ôî_c⁄d
 (&
ôî
);

5021 
	}
}

5025 
ölöe
 
åì


5026 
	$˛ass_of_this_∑rm
 (
c⁄°_åì
 
‚ty≥
)

5028  
	`TREE_TYPE
 (
	`ty≥_of_this_∑rm
 (
‚ty≥
));

5029 
	}
}

5033 
˝_∑ømëî_de˛¨©‹
 *
no_∑ømëîs
;

5036 
boﬁ
 
¥agma_java_ex˚±i⁄s
;

5039 
boﬁ
 
check_dt‹_«me
 (
åì
,Åree);

5040 
boﬁ
 
magic_v¨¨gs_p
 (
åì
);

5042 
åì
 
buûd_c⁄dôi⁄Æ_ex¥
 (
loˇti⁄_t
,Åree,Åree,Åree,

5043 
tsub°_Êags_t
);

5044 
åì
 
buûd_addr_func
 (åì, 
tsub°_Êags_t
);

5045 
£t_Êags_‰om_ˇŒì
 (
åì
);

5046 
åì
 
buûd_ˇŒ_a
 (tree, ,Åree*);

5047 
åì
 
buûd_ˇŒ_n
 (tree, , ...);

5048 
boﬁ
 
nuŒ_±r_c°_p
 (
åì
);

5049 
boﬁ
 
nuŒ_membî_poöãr_vÆue_p
 (
åì
);

5050 
boﬁ
 
sufficõ¡_∑rms_p
 (
c⁄°_åì
);

5051 
åì
 
ty≥_deˇys_to
 (tree);

5052 
åì
 
buûd_u£r_ty≥_c⁄vîsi⁄
 (tree,Åree, ,

5053 
tsub°_Êags_t
);

5054 
åì
 
buûd_√w_fun˘i⁄_ˇŒ
 (åì, 
vec
<åì, 
va_gc
> **, 
boﬁ
,

5055 
tsub°_Êags_t
);

5056 
åì
 
buûd_›î©‹_√w_ˇŒ
 (åì, 
vec
<åì, 
va_gc
> **,Åree *,

5057 
åì
 *,Åree,Åree *,

5058 
tsub°_Êags_t
);

5059 
åì
 
buûd_√w_mëhod_ˇŒ
 (åì,Åªe, 
vec
<åì, 
va_gc
> **,

5060 
åì
, ,Åree *,

5061 
tsub°_Êags_t
);

5062 
åì
 
buûd_•ecül_membî_ˇŒ
 (åì,Åªe, 
vec
<åì, 
va_gc
> **,

5063 
åì
, , 
tsub°_Êags_t
);

5064 
åì
 
buûd_√w_›
 (
loˇti⁄_t
, 
åì_code
,

5065 , 
åì
,Åree,Åree,Åree *,

5066 
tsub°_Êags_t
);

5067 
åì
 
buûd_›_ˇŒ
 (åì, 
vec
<åì, 
va_gc
> **,

5068 
tsub°_Êags_t
);

5069 
åì
 
buûd_›_dñëe_ˇŒ
 (
åì_code
,Åree,Åree,

5070 
boﬁ
, 
åì
,Åree,

5071 
tsub°_Êags_t
);

5072 
boﬁ
 
ˇn_c⁄vît
 (
åì
,Åªe, 
tsub°_Êags_t
);

5073 
boﬁ
 
ˇn_c⁄vît_°™d¨d
 (
åì
,Åªe, 
tsub°_Êags_t
);

5074 
boﬁ
 
ˇn_c⁄vît_¨g
 (
åì
,Åree,Åree, ,

5075 
tsub°_Êags_t
);

5076 
boﬁ
 
ˇn_c⁄vît_¨g_bad
 (
åì
,Åree,Åree, ,

5077 
tsub°_Êags_t
);

5078 
boﬁ
 
íf‹˚_ac˚ss
 (
åì
,Åree,Åree,

5079 
tsub°_Êags_t
);

5080 
push_deÁrg_c⁄ãxt
 (
åì
);

5081 
p›_deÁrg_c⁄ãxt
 ();

5082 
åì
 
c⁄vît_deÁu…_¨g
 (tree,Åree,Åree, ,

5083 
tsub°_Êags_t
);

5084 
åì
 
c⁄vît_¨g_to_ñlùsis
 (åì, 
tsub°_Êags_t
);

5085 
åì
 
buûd_x_va_¨g
 (
sour˚_loˇti⁄
,Åree,Åree);

5086 
åì
 
cxx_ty≥_¥omŸes_to
 (tree);

5087 
åì
 
ty≥_∑s£d_as
 (tree);

5088 
åì
 
c⁄vît_f‹_¨g_∑ssög
 (åì,Åªe, 
tsub°_Êags_t
);

5089 
boﬁ
 
is_¥›îly_dîived_‰om
 (
åì
,Åree);

5090 
åì
 
öôülize_ª„ªn˚
 (tree,Åree, ,

5091 
tsub°_Êags_t
);

5092 
åì
 
exãnd_ªf_öô_ãmps
 (åì,Åªe, 
vec
<åì, 
va_gc
>**);

5093 
åì
 
make_ãmp‹¨y_v¨_f‹_ªf_to_ãmp
 (tree,Åree);

5094 
boﬁ
 
ty≥_has_exãnded_ãmps
 (
åì
);

5095 
åì
 
°rù_t›_quÆs
 (tree);

5096 
boﬁ
 
ª„ªn˚_ªœãd_p
 (
åì
,Åree);

5097 
åì
 
≥rf‹m_im∂icô_c⁄vîsi⁄
 (åì,Åªe, 
tsub°_Êags_t
);

5098 
åì
 
≥rf‹m_im∂icô_c⁄vîsi⁄_Êags
 (åì,Åªe, 
tsub°_Êags_t
, );

5099 
åì
 
buûd_öãgøl_n⁄ty≥_¨g_c⁄v
 (åì,Åªe, 
tsub°_Êags_t
);

5100 
åì
 
≥rf‹m_dúe˘_öôüliz©i⁄_if_possibÀ
 (åì,Åªe, 
boﬁ
,

5101 
tsub°_Êags_t
);

5102 
åì
 
ö_ch¨ge_¨g_f‹_«me
 (tree);

5103 
åì
 
buûd_cxx_ˇŒ
 (tree, ,Åree *,

5104 
tsub°_Êags_t
);

5105 
boﬁ
 
is_°d_öô_li°
 (
åì
);

5106 
boﬁ
 
is_li°_˘‹
 (
åì
);

5107 #ifde‡
ENABLE_CHECKING


5108 
vÆid©e_c⁄vîsi⁄_ob°ack
 ();

5110 
m¨k_vîsi⁄s_u£d
 (
åì
);

5111 
åì
 
gë_fun˘i⁄_vîsi⁄_di•©chî
 (tree);

5114 
åì
 
buûd_vfõld_ªf
 (tree,Åree);

5115 
åì
 
buûd_ba£_∑th
 (
åì_code
,Åree,

5116 
åì
, , 
tsub°_Êags_t
);

5117 
åì
 
c⁄vît_to_ba£
 (åì,Åªe, 
boﬁ
, bool,

5118 
tsub°_Êags_t
);

5119 
åì
 
c⁄vît_to_ba£_°©iˇŒy
 (tree,Åree);

5120 
åì
 
buûd_vtbl_ªf
 (tree,Åree);

5121 
åì
 
buûd_v‚_ªf
 (tree,Åree);

5122 
åì
 
gë_vèbÀ_de˛
 (tree, );

5123 
ªs‹t_ty≥_mëhod_vec
 (*, *,

5124 
gt_poöãr_›î©‹
, *);

5125 
boﬁ
 
add_mëhod
 (
åì
,Åree,Åree);

5126 
boﬁ
 
cuºíéy_›í_˛ass
 (
åì
);

5127 
åì
 
cuºíéy_›í_dîived_˛ass
 (tree);

5128 
åì
 
ouãrmo°_›í_˛ass
 ();

5129 
åì
 
cuºít_n⁄œmbda_˛ass_ty≥
 ();

5130 
åì
 
föish_°ru˘
 (tree,Åree);

5131 
föish_°ru˘_1
 (
åì
);

5132 
ªsﬁves_to_fixed_ty≥_p
 (
åì
, *);

5133 
öô_˛ass_¥o˚ssög
 ();

5134 
is_em±y_˛ass
 (
åì
);

5135 
boﬁ
 
is_ªÆly_em±y_˛ass
 (
åì
);

5136 
push˛ass
 (
åì
);

5137 
p›˛ass
 ();

5138 
push_√°ed_˛ass
 (
åì
);

5139 
p›_√°ed_˛ass
 ();

5140 
cuºít_œng_dïth
 ();

5141 
push_œng_c⁄ãxt
 (
åì
);

5142 
p›_œng_c⁄ãxt
 ();

5143 
åì
 
ö°™tüã_ty≥
 (åì,Åªe, 
tsub°_Êags_t
);

5144 
¥öt_˛ass_°©i°ics
 ();

5145 
buûd_£lf_ª„ªn˚
 ();

5146 
ßme_sig«tuª_p
 (
c⁄°_åì
, const_tree);

5147 
maybe_add_˛ass_ãm∂©e_de˛_li°
 (
åì
,Åree, );

5148 
uƒevî£_membî_de˛¨©i⁄s
 (
åì
);

5149 
övÆid©e_˛ass_lookup_ˇche
 ();

5150 
maybe_nŸe_«me_u£d_ö_˛ass
 (
åì
,Åree);

5151 
nŸe_«me_de˛¨ed_ö_˛ass
 (
åì
,Åree);

5152 
åì
 
gë_vtbl_de˛_f‹_böfo
 (tree);

5153 
debug_˛ass
 (
åì
);

5154 
debug_thunks
 (
åì
);

5155 
£t_lökage_acc‹dög_to_ty≥
 (
åì
,Åree);

5156 
dëîmöe_key_mëhod
 (
åì
);

5157 
check_f‹_ovîride
 (
åì
,Åree);

5158 
push_˛ass_°ack
 ();

5159 
p›_˛ass_°ack
 ();

5160 
boﬁ
 
ty≥_has_u£r_n⁄deÁu…_c⁄°ru˘‹
 (
åì
);

5161 
åì
 
ö_˛ass_deÁu…ed_deÁu…_c⁄°ru˘‹
 (tree);

5162 
boﬁ
 
u£r_¥ovided_p
 (
åì
);

5163 
boﬁ
 
ty≥_has_u£r_¥ovided_c⁄°ru˘‹
 (
åì
);

5164 
boﬁ
 
ty≥_has_u£r_¥ovided_deÁu…_c⁄°ru˘‹
 (
åì
);

5165 
boﬁ
 
vba£_has_u£r_¥ovided_move_assign
 (
åì
);

5166 
åì
 
deÁu…_öô_unöôülized_∑π
 (tree);

5167 
boﬁ
 
åivül_deÁu…_c⁄°ru˘‹_is_c⁄°ex¥
 (
åì
);

5168 
boﬁ
 
ty≥_has_c⁄°ex¥_deÁu…_c⁄°ru˘‹
 (
åì
);

5169 
boﬁ
 
ty≥_has_vútuÆ_de°ru˘‹
 (
åì
);

5170 
boﬁ
 
ty≥_has_move_c⁄°ru˘‹
 (
åì
);

5171 
boﬁ
 
ty≥_has_move_assign
 (
åì
);

5172 
boﬁ
 
ty≥_has_u£r_de˛¨ed_move_c⁄°ru˘‹
 (
åì
);

5173 
boﬁ
 
ty≥_has_u£r_de˛¨ed_move_assign
(
åì
);

5174 
boﬁ
 
ty≥_buûd_˘‹_ˇŒ
 (
åì
);

5175 
boﬁ
 
ty≥_buûd_dt‹_ˇŒ
 (
åì
);

5176 
ex∂aö_n⁄_lôîÆ_˛ass
 (
åì
);

5177 
deÁu…ed_œã_check
 (
åì
);

5178 
boﬁ
 
deÁu…abÀ_‚_check
 (
åì
);

5179 
fixup_ty≥_v¨ü¡s
 (
åì
);

5180 
fixup_©åibuã_v¨ü¡s
 (
åì
);

5181 
åì
* 
de˛_˛⁄ed_fun˘i⁄_p
 (
c⁄°_åì
, 
boﬁ
);

5182 
˛⁄e_fun˘i⁄_de˛
 (
åì
, );

5183 
adju°_˛⁄e_¨gs
 (
åì
);

5184 
dedu˚_n€x˚±_⁄_de°ru˘‹
 (
åì
);

5185 
ö£π_œã_íum_def_öto_˛as°y≥_s‹ãd_fõlds
 (
åì
,Åree);

5186 
boﬁ
 
uniquñy_dîived_‰om_p
 (
åì
,Åree);

5187 
boﬁ
 
publi˛y_uniquñy_dîived_p
 (
åì
,Åree);

5188 
åì
 
comm⁄_í˛osög_˛ass
 (tree,Åree);

5191 
åì
 
c⁄vît_to_ª„ªn˚
 (tree,Åree, , ,Åree,

5192 
tsub°_Êags_t
);

5193 
åì
 
c⁄vît_‰om_ª„ªn˚
 (tree);

5194 
åì
 
f‹˚_rvÆue
 (åì, 
tsub°_Êags_t
);

5195 
åì
 
o˝_c⁄vît
 (tree,Åree, , ,

5196 
tsub°_Êags_t
);

5197 
åì
 
˝_c⁄vît
 (åì,Åªe, 
tsub°_Êags_t
);

5198 
åì
 
˝_c⁄vît_™d_check
 (åì,Åªe, 
tsub°_Êags_t
);

5199 
åì
 
˝_fﬁd_c⁄vît
 (tree,Åree);

5200 
åì
 
c⁄vît_to_void
 (åì, 
im∂_c⁄v_void
,

5201 
tsub°_Êags_t
);

5202 
åì
 
c⁄vît_f‹˚
 (tree,Åree, ,

5203 
tsub°_Êags_t
);

5204 
åì
 
buûd_ex¥_ty≥_c⁄vîsi⁄
 (,Åªe, 
boﬁ
);

5205 
åì
 
ty≥_¥omŸes_to
 (tree);

5206 
åì
 
≥rf‹m_quÆifiˇti⁄_c⁄vîsi⁄s
 (tree,Åree);

5209 
åì
 
pushde˛
 (tree);

5210 
åì
 
pushde˛_maybe_‰õnd
 (åì, 
boﬁ
);

5211 
maybe_push_˛ónup_Àvñ
 (
åì
);

5212 
åì
 
pushèg
 (åì,Åªe, 
èg_sc›e
);

5213 
åì
 
make_™⁄_«me
 ();

5214 
åì
 
pushde˛_t›_Àvñ_maybe_‰õnd
 (åì, 
boﬁ
);

5215 
åì
 
pushde˛_t›_Àvñ_™d_föish
 (tree,Åree);

5216 
åì
 
check_f‹_out_of_sc›e_v¨übÀ
 (tree);

5217 
dump
 (
˝_bödög_Àvñ
 &
ªf
);

5218 
dump
 (
˝_bödög_Àvñ
 *
±r
);

5219 
¥öt_Ÿhî_bödög_°ack
 (
˝_bödög_Àvñ
 *);

5220 
åì
 
maybe_push_de˛
 (tree);

5221 
åì
 
cuºít_de˛_«me•a˚
 ();

5224 
åì
 
p›Àvñ
 (, , );

5225 
cxx_öô_de˛_¥o˚ssög
 ();

5226 
˝_åì_node_°ru˘uª_íum
 
	g˝_åì_node_°ru˘uª


5227 (
	gœng_åì_node
 *);

5228 
föish_sc›e
 ();

5229 
push_swôch
 (
åì
);

5230 
p›_swôch
 ();

5231 
åì
 
make_œmbda_«me
 ();

5232 
de˛s_m©ch
 (
åì
,Åree);

5233 
åì
 
du∂iˇã_de˛s
 (åì,Åªe, 
boﬁ
);

5234 
åì
 
de˛¨e_loˇl_œbñ
 (tree);

5235 
åì
 
deföe_œbñ
 (
loˇti⁄_t
,Åree);

5236 
check_gŸo
 (
åì
);

5237 
boﬁ
 
check_omp_ªtu∫
 ();

5238 
åì
 
make_ty≥«me_ty≥
 (åì,Åªe, 
èg_ty≥s
, 
tsub°_Êags_t
);

5239 
åì
 
make_unbound_˛ass_ãm∂©e
 (åì,Åªe,Åªe, 
tsub°_Êags_t
);

5240 
åì
 
buûd_libøry_‚_±r
 (const *,Åree, );

5241 
åì
 
buûd_˝_libøry_‚_±r
 (const *,Åree, );

5242 
åì
 
push_libøry_‚
 (tree,Åree,Åree, );

5243 
åì
 
push_void_libøry_‚
 (tree,Åree, );

5244 
åì
 
push_throw_libøry_‚
 (tree,Åree);

5245 
w¨n_mi•œ˚d_©å_f‹_˛ass_ty≥
 (
sour˚_loˇti⁄
 
loˇti⁄
,

5246 
åì
 
˛ass_ty≥
);

5247 
åì
 
check_èg_de˛
 (
˝_de˛_•ecifõr_£q
 *, 
boﬁ
);

5248 
åì
 
shadow_èg
 (
˝_de˛_•ecifõr_£q
 *);

5249 
åì
 
grokty≥«me
 (
˝_de˛_•ecifõr_£q
 *, c⁄° 
˝_de˛¨©‹
 *, 
boﬁ
);

5250 
åì
 
°¨t_de˛
 (c⁄° 
˝_de˛¨©‹
 *, 
˝_de˛_•ecifõr_£q
 *, ,Åree,Åree,Åree *);

5251 
°¨t_de˛_1
 (
åì
, 
boﬁ
);

5252 
boﬁ
 
check_¨øy_öôülizî
 (
åì
,Åree,Åree);

5253 
˝_föish_de˛
 (
åì
,Åªe, 
boﬁ
,Åree, );

5254 
˝_com∂ëe_¨øy_ty≥
 (
åì
 *,Åªe, 
boﬁ
);

5255 
˝_com∂ëe_¨øy_ty≥_‹_îr‹
 (
åì
 *,Åªe, 
boﬁ
, 
tsub°_Êags_t
);

5256 
åì
 
buûd_±rmemfunc_ty≥
 (tree);

5257 
åì
 
buûd_±rmem_ty≥
 (tree,Åree);

5259 
åì
 
buûd_this_∑rm
 (åì, 
˝_cv_quÆs
);

5260 
c›y_‚_p
 (
c⁄°_åì
);

5261 
boﬁ
 
move_‚_p
 (
c⁄°_åì
);

5262 
boﬁ
 
move_sig«tuª_‚_p
 (
c⁄°_åì
);

5263 
åì
 
gë_sc›e_of_de˛¨©‹
 (c⁄° 
˝_de˛¨©‹
 *);

5264 
grok_•ecül_membî_¥›îtõs
 (
åì
);

5265 
grok_˘‹_¥›îtõs
 (
c⁄°_åì
, const_tree);

5266 
boﬁ
 
grok_›_¥›îtõs
 (
åì
, bool);

5267 
åì
 
xªf_èg
 (
èg_ty≥s
,Åªe, 
èg_sc›e
, 
boﬁ
);

5268 
åì
 
xªf_èg_‰om_ty≥
 (åì,Åªe, 
èg_sc›e
);

5269 
boﬁ
 
xªf_ba£ty≥s
 (
åì
,Åree);

5270 
åì
 
°¨t_íum
 (åì,Åªe,Åªe, 
boﬁ
, bool *);

5271 
föish_íum_vÆue_li°
 (
åì
);

5272 
föish_íum
 (
åì
);

5273 
buûd_íumî©‹
 (
åì
,Åªe,Åªe, 
loˇti⁄_t
);

5274 
åì
 
lookup_íumî©‹
 (tree,Åree);

5275 
boﬁ
 
°¨t_¥ï¨£d_fun˘i⁄
 (
åì
,Åree, );

5276 
boﬁ
 
°¨t_fun˘i⁄
 (
˝_de˛_•ecifõr_£q
 *,

5277 c⁄° 
˝_de˛¨©‹
 *, 
åì
);

5278 
åì
 
begö_fun˘i⁄_body
 ();

5279 
föish_fun˘i⁄_body
 (
åì
);

5280 
åì
 
ouãr_cuæy_bø˚_block
 (tree);

5281 
åì
 
föish_fun˘i⁄
 ();

5282 
åì
 
grokmëhod
 (
˝_de˛_•ecifõr_£q
 *, c⁄° 
˝_de˛¨©‹
 *,Åree);

5283 
maybe_ªgi°î_öcom∂ëe_v¨
 (
åì
);

5284 
maybe_comm⁄ize_v¨
 (
åì
);

5285 
com∂ëe_v¨s
 (
åì
);

5286 
åì
 
°©ic_‚_ty≥
 (tree);

5287 
ªvît_°©ic_membî_‚
 (
åì
);

5288 
fixup_™⁄ymous_aggr
 (
åì
);

5289 
åì
 
compuã_¨øy_ödex_ty≥
 (åì,Åªe, 
tsub°_Êags_t
);

5290 
åì
 
check_deÁu…_¨gumít
 (åì,Åªe, 
tsub°_Êags_t
);

5291 (*
	twÆk_«me•a˚s_‚
Ë(
	tåì
, *);

5292 
	`wÆk_«me•a˚s
 (
wÆk_«me•a˚s_‚
,

5294 
	`wøpup_globÆs_f‹_«me•a˚
 (
åì
, *);

5295 
åì
 
	`¸óã_im∂icô_ty≥def
 (tree,Åree);

5296 
	`loˇl_v¨übÀ_p
 (
c⁄°_åì
);

5297 
åì
 
	`ªgi°î_dt‹_‚
 (tree);

5298 
tm∂_•ec_köd
 
	`cuºít_tm∂_•ec_köd
 ();

5299 
åì
 
	`˝_‚ame_öô
 (const *,Åree *);

5300 
åì
 
	`cxx_buûtö_fun˘i⁄
 (åì 
de˛
);

5301 
åì
 
	`cxx_buûtö_fun˘i⁄_ext_sc›e
 (åì 
de˛
);

5302 
åì
 
	`check_ñab‹©ed_ty≥_•ecifõr
 (
èg_ty≥s
,Åªe, 
boﬁ
);

5303 
	`w¨n_exã∫_ªde˛¨ed_°©ic
 (
åì
,Åree);

5304 
åì
 
	`cxx_comd©_group
 (tree);

5305 
boﬁ
 
	`˝_missög_n‹ëu∫_ok_p
 (
åì
);

5306 
	`öôülize_¨tificül_v¨
 (
åì
, 
vec
<
c⁄°ru˘‹_ñt
, 
va_gc
> *);

5307 
åì
 
	`check_v¨_ty≥
 (tree,Åree);

5308 
åì
 
	`ªsh≠e_öô
 (åì,Åªe, 
tsub°_Êags_t
);

5309 
åì
 
	`√xt_öôülizabÀ_fõld
 (tree);

5310 
åì
 
	`‚de˛_de˛¨ed_ªtu∫_ty≥
 (tree);

5311 
boﬁ
 
	`undedu˚d_auto_de˛
 (
åì
);

5312 
	`ªquúe_dedu˚d_ty≥
 (
åì
);

5314 
boﬁ
 
de„r_m¨k_u£d_ˇŒs
;

5315 
	`GTY
(()Ë
vec
<
åì
, 
va_gc
> *
de„ºed_m¨k_u£d_ˇŒs
;

5316 
åì
 
	`föish_ˇ£_œbñ
 (
loˇti⁄_t
,Åree,Åree);

5317 
åì
 
	`cxx_maybe_buûd_˛ónup
 (åì, 
tsub°_Êags_t
);

5320 
boﬁ
 
	`check_java_mëhod
 (
åì
);

5321 
åì
 
	`buûd_mem‚_ty≥
 (åì,Åªe, 
˝_cv_quÆs
, 
˝_ªf_quÆifõr
);

5322 
åì
 
	`buûd_poöãr_±rmem‚_ty≥
 (tree);

5323 
åì
 
	`ch™ge_ªtu∫_ty≥
 (tree,Åree);

5324 
	`maybe_ªåofô_ö_chrg
 (
åì
);

5325 
	`maybe_make_⁄e_⁄ly
 (
åì
);

5326 
boﬁ
 
	`vague_lökage_p
 (
åì
);

5327 
	`grok˛ass‚
 (
åì
,Åree,

5328 
ovîlﬂd_Êags
);

5329 
åì
 
	`grok_¨øy_de˛
 (
loˇti⁄_t
,Åªe,Åªe, 
boﬁ
);

5330 
åì
 
	`dñëe_ßnôy
 (åì,Åªe, 
boﬁ
, , 
tsub°_Êags_t
);

5331 
åì
 
	`check_˛ass‚
 (tree,Åree,Åree);

5332 
	`check_membî_ãm∂©e
 (
åì
);

5333 
åì
 
	`grokfõld
 (c⁄° 
˝_de˛¨©‹
 *, 
˝_de˛_•ecifõr_£q
 *,

5334 
åì
, 
boﬁ
,Åree,Åree);

5335 
åì
 
	`grokbôfõld
 (c⁄° 
˝_de˛¨©‹
 *, 
˝_de˛_•ecifõr_£q
 *,

5336 
åì
,Åree);

5337 
åì
 
	`˝_ªc⁄°ru˘_com∂ex_ty≥
 (tree,Åree);

5338 
boﬁ
 
	`©åibuãs_«mög_ty≥def_ok
 (
åì
);

5339 
	`˝lus_de˛_©åibuãs
 (
åì
 *,Åree, );

5340 
	`föish_™⁄_uni⁄
 (
åì
);

5341 
	`˝_wrôe_globÆ_de˛¨©i⁄s
 ();

5342 
åì
 
	`c€r˚_√w_ty≥
 (tree);

5343 
åì
 
	`c€r˚_dñëe_ty≥
 (tree);

5344 
	`comd©_lökage
 (
åì
);

5345 
	`dëîmöe_visibûôy
 (
åì
);

5346 
	`c⁄°øö_˛ass_visibûôy
 (
åì
);

5347 
	`ª£t_ty≥_lökage
 (
åì
);

5348 
	`ã¡©ive_de˛_lökage
 (
åì
);

5349 
	`imp‹t_exp‹t_de˛
 (
åì
);

5350 
åì
 
	`buûd_˛ónup
 (tree);

5351 
åì
 
	`buûd_off£t_ªf_ˇŒ_‰om_åì
 (åì, 
vec
<åì, 
va_gc
> **,

5352 
tsub°_Êags_t
);

5353 
boﬁ
 
	`de˛_c⁄°™t_v¨_p
 (
åì
);

5354 
boﬁ
 
	`de˛_maybe_c⁄°™t_v¨_p
 (
åì
);

5355 
	`no_lökage_îr‹
 (
åì
);

5356 
	`check_deÁu…_¨gs
 (
åì
);

5357 
boﬁ
 
	`m¨k_u£d
 (
åì
);

5358 
boﬁ
 
	`m¨k_u£d
 (
åì
, 
tsub°_Êags_t
);

5359 
	`föish_°©ic_d©a_membî_de˛
 (
åì
,Åªe, 
boﬁ
,Åree, );

5360 
åì
 
	`˝_buûd_∑rm_de˛
 (tree,Åree);

5361 
åì
 
	`gë_gu¨d
 (tree);

5362 
åì
 
	`gë_gu¨d_c⁄d
 (tree);

5363 
åì
 
	`£t_gu¨d
 (tree);

5364 
åì
 
	`gë_és_wøµî_‚
 (tree);

5365 
	`m¨k_√eded
 (
åì
);

5366 
boﬁ
 
	`de˛_√eded_p
 (
åì
);

5367 
	`nŸe_vague_lökage_‚
 (
åì
);

5368 
	`nŸe_comd©_‚
 (
åì
);

5369 
åì
 
	`buûd_¨tificül_∑rm
 (tree,Åree);

5370 
boﬁ
 
	`possibly_ölöed_p
 (
åì
);

5371 
	`∑rm_ödex
 (
åì
);

5372 
åì
 
	`vtv_°¨t_vîifiˇti⁄_c⁄°ru˘‹_öô_fun˘i⁄
 ();

5373 
åì
 
	`vtv_föish_vîifiˇti⁄_c⁄°ru˘‹_öô_fun˘i⁄
 (tree);

5374 
boﬁ
 
	`˝_omp_m≠∑bÀ_ty≥
 (
åì
);

5377 
	`öô_îr‹
 ();

5378 c⁄° *
	`ty≥_as_°rög
 (
åì
, );

5379 c⁄° *
	`ty≥_as_°rög_å™¶©e
 (
åì
, );

5380 c⁄° *
	`de˛_as_°rög
 (
åì
, );

5381 c⁄° *
	`de˛_as_°rög_å™¶©e
 (
åì
, );

5382 c⁄° *
	`de˛_as_dw¨f_°rög
 (
åì
, );

5383 c⁄° *
	`ex¥_as_°rög
 (
åì
, );

5384 c⁄° *
	`œng_de˛_«me
 (
åì
, , 
boﬁ
);

5385 c⁄° *
	`œng_de˛_dw¨f_«me
 (
åì
, , 
boﬁ
);

5386 c⁄° *
	`œnguage_to_°rög
 (
œnguages
);

5387 c⁄° *
	`˛ass_key_‹_íum_as_°rög
 (
åì
);

5388 
	`¥öt_ö°™tüti⁄_c⁄ãxt
 ();

5389 
	`maybe_w¨n_v¨üdic_ãm∂©es
 ();

5390 
	`maybe_w¨n_˝p0x
 (
˝p0x_w¨n_°r
 
°r
);

5391 
boﬁ
 
	$≥dw¨n_cxx98
 (
loˇti⁄_t
, , c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(3,4);

5392 
loˇti⁄_t
 
	`loˇti⁄_of
 (
åì
);

5393 
	`quÆifõd_«me_lookup_îr‹
 (
åì
,Åree,Åree,

5394 
loˇti⁄_t
);

5397 
	`öô_ex˚±i⁄_¥o˚ssög
 ();

5398 
åì
 
	`ex∑nd_°¨t_ˇtch_block
 (tree);

5399 
	`ex∑nd_íd_ˇtch_block
 ();

5400 
åì
 
	`buûd_exc_±r
 ();

5401 
åì
 
	`buûd_throw
 (tree);

5402 
	`nŸhrow_lib‚_p
 (
c⁄°_åì
);

5403 
	`check_h™dÀrs
 (
åì
);

5404 
åì
 
	`föish_n€x˚±_ex¥
 (åì, 
tsub°_Êags_t
);

5405 
boﬁ
 
	`ex¥_n€x˚±_p
 (
åì
, 
tsub°_Êags_t
);

5406 
	`≥rf‹m_de„ºed_n€x˚±_checks
 ();

5407 
boﬁ
 
	`nŸhrow_•ec_p
 (
c⁄°_åì
);

5408 
boﬁ
 
	`ty≥_n€x˚±_p
 (
c⁄°_åì
);

5409 
boﬁ
 
	`ty≥_throw_Æl_p
 (
c⁄°_åì
);

5410 
åì
 
	`buûd_n€x˚±_•ec
 (tree, );

5411 
	`choo£_≥rs⁄Æôy_routöe
 (
œnguages
);

5412 
åì
 
	`buûd_mu°_nŸ_throw_ex¥
 (tree,tree);

5413 
åì
 
	`eh_ty≥_öfo
 (tree);

5414 
åì
 
	`begö_eh_•ec_block
 ();

5415 
	`föish_eh_•ec_block
 (
åì
,Åree);

5416 
åì
 
	`buûd_eh_ty≥_ty≥
 (tree);

5417 
åì
 
	`˝_¥Ÿe˘_˛ónup_a˘i⁄s
 ();

5418 
åì
 
	`¸óã_åy_ˇtch_ex¥
 (tree,Åree);

5421 
åì
 
	`˝lus_ex∑nd_c⁄°™t
 (tree);

5422 
åì
 
	`m¨k_rvÆue_u£
 (tree);

5423 
åì
 
	`m¨k_lvÆue_u£
 (tree);

5424 
åì
 
	`m¨k_ty≥_u£
 (tree);

5425 
	`m¨k_exp_ªad
 (
åì
);

5428 
	`is_‰õnd
 (
åì
,Åree);

5429 
	`make_‰õnd_˛ass
 (
åì
,Åªe, 
boﬁ
);

5430 
	`add_‰õnd
 (
åì
,Åªe, 
boﬁ
);

5431 
åì
 
	`do_‰õnd
 (åì,Åªe,Åªe,Åªe, 
ovîlﬂd_Êags
, 
boﬁ
);

5434 
åì
 
	`ex∑nd_membî_öô
 (tree);

5435 
	`emô_mem_öôülizîs
 (
åì
);

5436 
åì
 
	`buûd_aggr_öô
 (tree,Åree, ,

5437 
tsub°_Êags_t
);

5438 
	`is_˛ass_ty≥
 (
åì
, );

5439 
åì
 
	`gë_ty≥_vÆue
 (tree);

5440 
åì
 
	`buûd_zîo_öô
 (åì,Åªe, 
boﬁ
);

5441 
åì
 
	`buûd_vÆue_öô
 (åì, 
tsub°_Êags_t
);

5442 
åì
 
	`buûd_vÆue_öô_no˘‹
 (åì, 
tsub°_Êags_t
);

5443 
åì
 
	`gë_nsdmi
 (åì, 
boﬁ
);

5444 
åì
 
	`buûd_off£t_ªf
 (åì,Åªe, 
boﬁ
,

5445 
tsub°_Êags_t
);

5446 
åì
 
	`throw_bad_¨øy_√w_Àngth
 ();

5447 
åì
 
	`throw_bad_¨øy_Àngth
 ();

5448 
åì
 
	`buûd_√w
 (
vec
<åì, 
va_gc
> **,Åree,Åree,

5449 
vec
<
åì
, 
va_gc
> **, ,

5450 
tsub°_Êags_t
);

5451 
åì
 
	`gë_ãmp_ªgv¨
 (tree,Åree);

5452 
åì
 
	`buûd_vec_öô
 (åì,Åªe,Åªe, 
boﬁ
, ,

5453 
tsub°_Êags_t
);

5454 
åì
 
	`buûd_dñëe
 (tree,Åree,

5455 
•ecül_fun˘i⁄_köd
,

5456 , , 
tsub°_Êags_t
);

5457 
	`push_ba£_˛ónups
 ();

5458 
åì
 
	`buûd_vec_dñëe
 (tree,Åree,

5459 
•ecül_fun˘i⁄_köd
, ,

5460 
tsub°_Êags_t
);

5461 
åì
 
	`¸óã_ãmp‹¨y_v¨
 (tree);

5462 
	`öôülize_vtbl_±rs
 (
åì
);

5463 
åì
 
	`buûd_java_˛ass_ªf
 (tree);

5464 
åì
 
	`öãgøl_c⁄°™t_vÆue
 (tree);

5465 
åì
 
	`de˛_c⁄°™t_vÆue_ß„
 (tree);

5466 
	`dügno£_unöôülized_c°_‹_ªf_membî
 (
åì
, 
boﬁ
, bool);

5467 
åì
 
	`buûd_vtbl_addªss
 (tree);

5470 
	`cxx_dup_œng_•ecific_de˛
 (
åì
);

5471 
	`yyungëc
 (, );

5473 
åì
 
	`unquÆifõd_«me_lookup_îr‹
 (tree);

5474 
åì
 
	`unquÆifõd_‚_lookup_îr‹
 (tree);

5475 
åì
 
	`buûd_œng_de˛
 (
åì_code
,Åree,Åree);

5476 
åì
 
	`buûd_œng_de˛_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree);

5477 
	`ªåofô_œng_de˛
 (
åì
);

5478 
åì
 
	`c›y_de˛
 (tree);

5479 
åì
 
	`c›y_ty≥
 (tree);

5480 
åì
 
	`cxx_make_ty≥
 (
åì_code
);

5481 
åì
 
	`make_˛ass_ty≥
 (
åì_code
);

5482 
boﬁ
 
	`cxx_öô
 ();

5483 
	`cxx_föish
 ();

5484 
boﬁ
 
	`ö_maö_öput_c⁄ãxt
 ();

5487 
	`öô_mëhod
 ();

5488 
åì
 
	`make_thunk
 (åì, 
boﬁ
,Åree,Åree);

5489 
	`föish_thunk
 (
åì
);

5490 
	`u£_thunk
 (
åì
, 
boﬁ
);

5491 
boﬁ
 
	`åivül_‚_p
 (
åì
);

5492 
boﬁ
 
	`maybe_ex∂aö_im∂icô_dñëe
 (
åì
);

5493 
	`ex∂aö_im∂icô_n⁄_c⁄°ex¥
 (
åì
);

5494 
	`dedu˚_öhîôög_˘‹
 (
åì
);

5495 
	`sy¡hesize_mëhod
 (
åì
);

5496 
åì
 
	`œzûy_de˛¨e_‚
 (
•ecül_fun˘i⁄_köd
,

5497 
åì
);

5498 
åì
 
	`skù_¨tificül_∑rms_f‹
 (
c⁄°_åì
,Åree);

5499 
	`num_¨tificül_∑rms_f‹
 (
c⁄°_åì
);

5500 
åì
 
	`make_Æüs_f‹
 (tree,Åree);

5501 
åì
 
	`gë_c›y_˘‹
 (åì, 
tsub°_Êags_t
);

5502 
åì
 
	`gë_c›y_assign
 (tree);

5503 
åì
 
	`gë_deÁu…_˘‹
 (tree);

5504 
åì
 
	`gë_dt‹
 (åì, 
tsub°_Êags_t
);

5505 
åì
 
	`gë_öhîôed_˘‹
 (tree);

5506 
åì
 
	`loˇã_˘‹
 (tree);

5507 
åì
 
	`im∂icôly_de˛¨e_‚
 (
•ecül_fun˘i⁄_köd
,Åree,

5508 
boﬁ
, 
åì
,Åree);

5511 
boﬁ
 
	`maybe_˛⁄e_body
 (
åì
);

5514 
boﬁ
 
	`check_ãm∂©e_shadow
 (
åì
);

5515 
åì
 
	`gë_ö√rmo°_ãm∂©e_¨gs
 (tree, );

5516 
	`maybe_begö_membî_ãm∂©e_¥o˚ssög
 (
åì
);

5517 
	`maybe_íd_membî_ãm∂©e_¥o˚ssög
 ();

5518 
åì
 
	`föish_membî_ãm∂©e_de˛
 (tree);

5519 
	`begö_ãm∂©e_∑rm_li°
 ();

5520 
boﬁ
 
	`begö_•ecüliz©i⁄
 ();

5521 
	`ª£t_•ecüliz©i⁄
 ();

5522 
	`íd_•ecüliz©i⁄
 ();

5523 
	`begö_ex∂icô_ö°™tüti⁄
 ();

5524 
	`íd_ex∂icô_ö°™tüti⁄
 ();

5525 
åì
 
	`check_ex∂icô_•ecüliz©i⁄
 (tree,Åree, , );

5526 
	`num_ãm∂©e_hódîs_f‹_˛ass
 (
åì
);

5527 
	`check_ãm∂©e_v¨übÀ
 (
åì
);

5528 
åì
 
	`make_auto
 ();

5529 
åì
 
	`make_de˛ty≥_auto
 ();

5530 
åì
 
	`do_auto_dedu˘i⁄
 (tree,Åree,Åree);

5531 
åì
 
	`ty≥_u£s_auto
 (tree);

5532 
åì
 
	`ty≥_u£s_auto_‹_c⁄˚±
 (tree);

5533 
	`≠≥nd_ty≥_to_ãm∂©e_f‹_ac˚ss_check
 (
åì
,Åree,Åree,

5534 
loˇti⁄_t
);

5535 
åì
 
	`c⁄vît_gíîic_ty≥s_to_∑cks
 (tree, , );

5536 
åì
 
	`•li˚_œã_ªtu∫_ty≥
 (tree,Åree);

5537 
boﬁ
 
	`is_auto
 (
c⁄°_åì
);

5538 
boﬁ
 
	`is_auto_‹_c⁄˚±
 (
c⁄°_åì
);

5539 
åì
 
	`¥o˚ss_ãm∂©e_∑rm
 (åì, 
loˇti⁄_t
,Åree,

5540 
boﬁ
, bool);

5541 
åì
 
	`íd_ãm∂©e_∑rm_li°
 (tree);

5542 
	`íd_ãm∂©e_de˛
 ();

5543 
åì
 
	`maybe_upd©e_de˛_ty≥
 (tree,Åree);

5544 
boﬁ
 
	`check_deÁu…_tm∂_¨gs
 (
åì
,Åree, bool, bool, );

5545 
åì
 
	`push_ãm∂©e_de˛
 (tree);

5546 
åì
 
	`push_ãm∂©e_de˛_ªÆ
 (åì, 
boﬁ
);

5547 
åì
 
	`add_öhîôed_ãm∂©e_∑rms
 (tree,Åree);

5548 
boﬁ
 
	`ªde˛¨e_˛ass_ãm∂©e
 (
åì
,Åree);

5549 
åì
 
	`lookup_ãm∂©e_˛ass
 (tree,Åree,Åree,Åree,

5550 , 
tsub°_Êags_t
);

5551 
åì
 
	`lookup_ãm∂©e_fun˘i⁄
 (tree,Åree);

5552 
	`u£s_ãm∂©e_∑rms
 (
åì
);

5553 
	`u£s_ãm∂©e_∑rms_Àvñ
 (
åì
, );

5554 
boﬁ
 
	`ö_ãm∂©e_fun˘i⁄
 ();

5555 
åì
 
	`ö°™tüã_˛ass_ãm∂©e
 (tree);

5556 
åì
 
	`ö°™tüã_ãm∂©e
 (åì,Åªe, 
tsub°_Êags_t
);

5557 
åì
 
	`‚_ty≥_unifiˇti⁄
 (tree,Åree,Åree,

5558 c⁄° 
åì
 *, ,

5559 
åì
, 
unifiˇti⁄_köd_t
, ,

5560 
boﬁ
, bool);

5561 
	`m¨k_de˛_ö°™tüãd
 (
åì
, );

5562 
	`m‹e_•ecülized_‚
 (
åì
,Åree, );

5563 
	`do_de˛_ö°™tüti⁄
 (
åì
,Åree);

5564 
	`do_ty≥_ö°™tüti⁄
 (
åì
,Åªe, 
tsub°_Êags_t
);

5565 
boﬁ
 
	`Æways_ö°™tüã_p
 (
åì
);

5566 
	`maybe_ö°™tüã_n€x˚±
 (
åì
);

5567 
åì
 
	`ö°™tüã_de˛
 (åì, , 
boﬁ
);

5568 
	`comp_ãm∂©e_∑rms
 (
c⁄°_åì
, const_tree);

5569 
boﬁ
 
	`u£s_∑ømëî_∑cks
 (
åì
);

5570 
boﬁ
 
	`ãm∂©e_∑ømëî_∑ck_p
 (
c⁄°_åì
);

5571 
boﬁ
 
	`fun˘i⁄_∑ømëî_∑ck_p
 (
c⁄°_åì
);

5572 
boﬁ
 
	`fun˘i⁄_∑ømëî_ex∑nded_‰om_∑ck_p
 (
åì
,Åree);

5573 
åì
 
	`make_∑ck_ex∑nsi⁄
 (tree);

5574 
boﬁ
 
	`check_f‹_b¨e_∑ømëî_∑cks
 (
åì
);

5575 
åì
 
	`buûd_ãm∂©e_öfo
 (tree,Åree);

5576 
åì
 
	`gë_ãm∂©e_öfo
 (
c⁄°_åì
);

5577 
vec
<
quÆifõd_ty≥def_ußge_t
, 
va_gc
> *
	`gë_ty≥s_√edög_ac˚ss_check
 (
åì
);

5578 
	`ãm∂©e_˛ass_dïth
 (
åì
);

5579 
	`is_•ecüliz©i⁄_of
 (
åì
,Åree);

5580 
boﬁ
 
	`is_•ecüliz©i⁄_of_‰õnd
 (
åì
,Åree);

5581 
åì
 
	`gë_∑âîn_∑rm
 (tree,Åree);

5582 
	`comp_ãm∂©e_¨gs
 (
åì
,Åree);

5583 
åì
 
	`maybe_¥o˚ss_∑πül_•ecüliz©i⁄
 (tree);

5584 
åì
 
	`mo°_•ecülized_ö°™tüti⁄
 (tree);

5585 
	`¥öt_ˇndid©es
 (
åì
);

5586 
	`ö°™tüã_≥ndög_ãm∂©es
 ();

5587 
åì
 
	`tsub°_deÁu…_¨gumít
 (tree,Åree,Åree,

5588 
tsub°_Êags_t
);

5589 
åì
 
	`tsub°
 (åì,Åªe, 
tsub°_Êags_t
,Åree);

5590 
åì
 
	`tsub°_c›y_™d_buûd
 (åì,Åªe, 
tsub°_Êags_t
,

5591 
åì
, 
boﬁ
, bool);

5592 
åì
 
	`mo°_gíîÆ_ãm∂©e
 (tree);

5593 
åì
 
	`gë_mo°ly_ö°™tüãd_fun˘i⁄_ty≥
 (tree);

5594 
	`¥obÀm©ic_ö°™tüti⁄_ch™ged
 ();

5595 
	`ªc‹d_œ°_¥obÀm©ic_ö°™tüti⁄
 ();

5596 
tö°_Àvñ
 *
	`cuºít_ö°™tüti⁄
();

5597 
åì
 
	`maybe_gë_ãm∂©e_de˛_‰om_ty≥_de˛
 (tree);

5598 
¥o˚ssög_ãm∂©e_∑rmli°
;

5599 
boﬁ
 
	`dïídít_ty≥_p
 (
åì
);

5600 
boﬁ
 
	`dïídít_sc›e_p
 (
åì
);

5601 
boﬁ
 
	`™y_dïídít_ãm∂©e_¨gumíts_p
 (
c⁄°_åì
);

5602 
boﬁ
 
	`dïídít_ãm∂©e_p
 (
åì
);

5603 
boﬁ
 
	`dïídít_ãm∂©e_id_p
 (
åì
,Åree);

5604 
boﬁ
 
	`ty≥_dïídít_ex¥essi⁄_p
 (
åì
);

5605 
boﬁ
 
	`™y_ty≥_dïídít_¨gumíts_p
 (c⁄° 
vec
<
åì
, 
va_gc
> *);

5606 
boﬁ
 
	`™y_ty≥_dïídít_ñemíts_p
 (
c⁄°_åì
);

5607 
boﬁ
 
	`ty≥_dïídít_ex¥essi⁄_p_push
 (
åì
);

5608 
boﬁ
 
	`vÆue_dïídít_ex¥essi⁄_p
 (
åì
);

5609 
boﬁ
 
	`ö°™tüti⁄_dïídít_ex¥essi⁄_p
 (
åì
);

5610 
boﬁ
 
	`™y_vÆue_dïídít_ñemíts_p
 (
c⁄°_åì
);

5611 
boﬁ
 
	`dïídít_omp_f‹_p
 (
åì
,Åree,Åree,Åree);

5612 
åì
 
	`ªsﬁve_ty≥«me_ty≥
 (åì, 
boﬁ
);

5613 
åì
 
	`ãm∂©e_f‹_sub°ôuti⁄
 (tree);

5614 
åì
 
	`buûd_n⁄_dïídít_ex¥
 (tree);

5615 
	`make_¨gs_n⁄_dïídít
 (
vec
<
åì
, 
va_gc
> *);

5616 
boﬁ
 
	`ªªgi°î_•ecüliz©i⁄
 (
åì
,Åree,Åree);

5617 
åì
 
	`fﬁd_n⁄_dïídít_ex¥
 (tree);

5618 
åì
 
	`fﬁd_n⁄_dïídít_ex¥_sfö´
 (åì, 
tsub°_Êags_t
);

5619 
boﬁ
 
	`Æüs_ty≥_‹_ãm∂©e_p
 (
åì
);

5620 
boﬁ
 
	`Æüs_ãm∂©e_•ecüliz©i⁄_p
 (
c⁄°_åì
);

5621 
boﬁ
 
	`ex∂icô_˛ass_•ecüliz©i⁄_p
 (
åì
);

5622 
	`push_tö°_Àvñ
 (
åì
);

5623 
	`p›_tö°_Àvñ
 ();

5624 
tö°_Àvñ
 *
	`ouãrmo°_tö°_Àvñ
();

5625 
	`öô_ãm∂©e_¥o˚ssög
 ();

5626 
	`¥öt_ãm∂©e_°©i°ics
 ();

5627 
boﬁ
 
	`ãm∂©e_ãm∂©e_∑ømëî_p
 (
c⁄°_åì
);

5628 
boﬁ
 
	`ãm∂©e_ty≥_∑ømëî_p
 (
c⁄°_åì
);

5629 
boﬁ
 
	`¥im¨y_ãm∂©e_ö°™tüti⁄_p
 (
c⁄°_åì
);

5630 
åì
 
	`gë_¥im¨y_ãm∂©e_ö√rmo°_∑ømëîs
 (
c⁄°_åì
);

5631 
åì
 
	`gë_ãm∂©e_∑rms_©_Àvñ
 (tree, );

5632 
åì
 
	`gë_ãm∂©e_ö√rmo°_¨gumíts
 (
c⁄°_åì
);

5633 
åì
 
	`gë_ãm∂©e_¨gumít_∑ck_ñems
 (
c⁄°_åì
);

5634 
åì
 
	`gë_fun˘i⁄_ãm∂©e_de˛
 (
c⁄°_åì
);

5635 
åì
 
	`ªsﬁve_n⁄dedu˚d_c⁄ãxt
 (tree);

5636 
hashvÆ_t
 
	`ôî©ive_hash_ãm∂©e_¨g
 (
åì
 
¨g
, hashvÆ_à
vÆ
);

5639 
	`öô_ªpo
 ();

5640 
	`ªpo_emô_p
 (
åì
);

5641 
boﬁ
 
	`ªpo_exp‹t_˛ass_p
 (
c⁄°_åì
);

5642 
	`föish_ªpo
 ();

5646 
	`GTY
(()Ë
vec
<
åì
, 
va_gc
> *
u√môãd_töfo_de˛s
;

5648 
	`öô_πti_¥o˚ssög
 ();

5649 
åì
 
	`buûd_ty≥id
 (åì, 
tsub°_Êags_t
);

5650 
åì
 
	`gë_töfo_de˛
 (tree);

5651 
åì
 
	`gë_ty≥id
 (åì, 
tsub°_Êags_t
);

5652 
åì
 
	`buûd_hódof
 (tree);

5653 
åì
 
	`buûd_dy«mic_ˇ°
 (åì,Åªe, 
tsub°_Êags_t
);

5654 
	`emô_suµ‹t_töfos
 ();

5655 
boﬁ
 
	`emô_töfo_de˛
 (
åì
);

5658 
boﬁ
 
	`ac˚ssibÀ_ba£_p
 (
åì
,Åree, bool);

5659 
åì
 
	`lookup_ba£
 (åì,Åªe, 
ba£_ac˚ss
,

5660 
ba£_köd
 *, 
tsub°_Êags_t
);

5661 
åì
 
	`dˇ°_ba£_höt
 (tree,Åree);

5662 
	`ac˚ssibÀ_p
 (
åì
,Åªe, 
boﬁ
);

5663 
	`ac˚ssibÀ_ö_ãm∂©e_p
 (
åì
,Åree);

5664 
åì
 
	`lookup_fõld_1
 (åì,Åªe, 
boﬁ
);

5665 
åì
 
	`lookup_fõld
 (åì,Åªe, , 
boﬁ
);

5666 
	`lookup_‚fõlds_1
 (
åì
,Åree);

5667 
åì
 
	`lookup_‚fõlds_¶Ÿ
 (tree,Åree);

5668 
åì
 
	`lookup_‚fõlds_¶Ÿ_nﬁazy
 (tree,Åree);

5669 
	`˛ass_mëhod_ödex_f‹_‚
 (
åì
,Åree);

5670 
åì
 
	`lookup_‚fõlds
 (tree,Åree, );

5671 
åì
 
	`lookup_membî
 (åì,Åªe, , 
boﬁ
,

5672 
tsub°_Êags_t
);

5673 
	`look_f‹_ovîrides
 (
åì
,Åree);

5674 
	`gë_puª_vútuÆs
 (
åì
);

5675 
	`maybe_suµªss_debug_öfo
 (
åì
);

5676 
	`nŸe_debug_öfo_√eded
 (
åì
);

5677 
	`¥öt_£¨ch_°©i°ics
 ();

5678 
	`ªöô_£¨ch_°©i°ics
 ();

5679 
åì
 
	`cuºít_sc›e
 ();

5680 
	`©_fun˘i⁄_sc›e_p
 ();

5681 
boﬁ
 
	`©_˛ass_sc›e_p
 ();

5682 
boﬁ
 
	`©_«me•a˚_sc›e_p
 ();

5683 
åì
 
	`c⁄ãxt_f‹_«me_lookup
 (tree);

5684 
åì
 
	`lookup_c⁄vîsi⁄s
 (tree);

5685 
åì
 
	`böfo_‰om_vba£
 (tree);

5686 
åì
 
	`böfo_f‹_vba£
 (tree,Åree);

5687 
åì
 
	`look_f‹_ovîrides_hîe
 (tree,Åree);

5688 
	#dfs_skù_ba£s
 ((
åì
)1)

	)

5689 
åì
 
	`dfs_wÆk_Æl
 (åì, 
	$åì
 (*Ë(
åì
, *),

5690 
	$åì
 (*Ë(
åì
, *), *);

5691 
åì
 
	`dfs_wÆk_⁄˚
 (åì, 
	$åì
 (*Ë(
åì
, *),

5692 
	$åì
 (*Ë(
åì
, *), *);

5693 
åì
 
	`böfo_vü_vútuÆ
 (tree,Åree);

5694 
åì
 
	`buûd_ba£lök
 (tree,Åree,Åree,Åree);

5695 
åì
 
adju°_ªsu…_of_quÆifõd_«me_lookup


5696 (
åì
,Åree,Åree);

5697 
åì
 
	`c›õd_böfo
 (tree,Åree);

5698 
åì
 
	`‹igöÆ_böfo
 (tree,Åree);

5699 
	`sh¨ed_membî_p
 (
åì
);

5703 
	`GTY
(()Ë
	tde„ºed_ac˚ss_check
 {

5705 
åì
 
böfo
;

5707 
åì
 
de˛
;

5709 
åì
 
düg_de˛
;

5711 
loˇti⁄_t
 
loc
;

5712 
	}
} 
	tde„ºed_ac˚ss_check
;

5715 
push_de„ºög_ac˚ss_checks
 (
de„ºög_köd
);

5716 
ªsume_de„ºög_ac˚ss_checks
 ();

5717 
°›_de„ºög_ac˚ss_checks
 ();

5718 
p›_de„ºög_ac˚ss_checks
 ();

5719 
vec
<
de„ºed_ac˚ss_check
, 
va_gc
> *
gë_de„ºed_ac˚ss_checks
 ();

5720 
ª›í_de„ºög_ac˚ss_checks
 (
vec
<
de„ºed_ac˚ss_check
, 
va_gc
> *);

5721 
p›_to_∑ª¡_de„ºög_ac˚ss_checks
 ();

5722 
boﬁ
 
≥rf‹m_ac˚ss_checks
 (
vec
<
de„ºed_ac˚ss_check
, 
va_gc
> *,

5723 
tsub°_Êags_t
);

5724 
boﬁ
 
≥rf‹m_de„ºed_ac˚ss_checks
 (
tsub°_Êags_t
);

5725 
boﬁ
 
≥rf‹m_‹_de„r_ac˚ss_check
 (
åì
,Åree,Åree,

5726 
tsub°_Êags_t
);

5727 
°mts_¨e_fuŒ_ex¥s_p
 ();

5728 
öô_˝_£m™tics
 ();

5729 
åì
 
do_p›Àvñ
 (tree);

5730 
bªak_maybe_öföôe_lo›
 ();

5731 
add_de˛_ex¥
 (
åì
);

5732 
åì
 
maybe_˛ónup_poöt_ex¥_void
 (tree);

5733 
åì
 
föish_ex¥_°mt
 (tree);

5734 
åì
 
begö_if_°mt
 ();

5735 
föish_if_°mt_c⁄d
 (
åì
,Åree);

5736 
åì
 
föish_thí_˛au£
 (tree);

5737 
begö_ñ£_˛au£
 (
åì
);

5738 
föish_ñ£_˛au£
 (
åì
);

5739 
föish_if_°mt
 (
åì
);

5740 
åì
 
begö_whûe_°mt
 ();

5741 
föish_whûe_°mt_c⁄d
 (
åì
,Åªe, 
boﬁ
);

5742 
föish_whûe_°mt
 (
åì
);

5743 
åì
 
begö_do_°mt
 ();

5744 
föish_do_body
 (
åì
);

5745 
föish_do_°mt
 (
åì
,Åªe, 
boﬁ
);

5746 
åì
 
föish_ªtu∫_°mt
 (tree);

5747 
åì
 
begö_f‹_sc›e
 (tree *);

5748 
åì
 
begö_f‹_°mt
 (tree,Åree);

5749 
föish_f‹_öô_°mt
 (
åì
);

5750 
föish_f‹_c⁄d
 (
åì
,Åªe, 
boﬁ
);

5751 
föish_f‹_ex¥
 (
åì
,Åree);

5752 
föish_f‹_°mt
 (
åì
);

5753 
åì
 
begö_ønge_f‹_°mt
 (tree,Åree);

5754 
föish_ønge_f‹_de˛
 (
åì
,Åree,Åree);

5755 
föish_ønge_f‹_°mt
 (
åì
);

5756 
åì
 
föish_bªak_°mt
 ();

5757 
åì
 
föish_c⁄töue_°mt
 ();

5758 
åì
 
begö_swôch_°mt
 ();

5759 
föish_swôch_c⁄d
 (
åì
,Åree);

5760 
föish_swôch_°mt
 (
åì
);

5761 
åì
 
föish_gŸo_°mt
 (tree);

5762 
åì
 
begö_åy_block
 ();

5763 
föish_åy_block
 (
åì
);

5764 
föish_h™dÀr_£quí˚
 (
åì
);

5765 
åì
 
begö_fun˘i⁄_åy_block
 (tree *);

5766 
föish_fun˘i⁄_åy_block
 (
åì
);

5767 
föish_fun˘i⁄_h™dÀr_£quí˚
 (
åì
,Åree);

5768 
föish_˛ónup_åy_block
 (
åì
);

5769 
åì
 
begö_h™dÀr
 ();

5770 
föish_h™dÀr_∑rms
 (
åì
,Åree);

5771 
föish_h™dÀr
 (
åì
);

5772 
föish_˛ónup
 (
åì
,Åree);

5773 
boﬁ
 
lôîÆ_ty≥_p
 (
åì
);

5774 
åì
 
ªgi°î_c⁄°ex¥_fundef
 (tree,Åree);

5775 
boﬁ
 
check_c⁄°ex¥_˘‹_body
 (
åì
,Åree);

5776 
åì
 
ísuª_lôîÆ_ty≥_f‹_c⁄°ex¥_obje˘
 (tree);

5777 
boﬁ
 
pŸítül_c⁄°™t_ex¥essi⁄
 (
åì
);

5778 
boﬁ
 
pŸítül_rvÆue_c⁄°™t_ex¥essi⁄
 (
åì
);

5779 
boﬁ
 
ªquúe_pŸítül_c⁄°™t_ex¥essi⁄
 (
åì
);

5780 
boﬁ
 
ªquúe_pŸítül_rvÆue_c⁄°™t_ex¥essi⁄
 (
åì
);

5781 
åì
 
cxx_c⁄°™t_vÆue
 (tree);

5782 
åì
 
maybe_c⁄°™t_vÆue
 (tree);

5783 
åì
 
maybe_c⁄°™t_öô
 (tree);

5784 
boﬁ
 
is_sub_c⁄°™t_ex¥
 (
åì
);

5785 
boﬁ
 
ªdu˚d_c⁄°™t_ex¥essi⁄_p
 (
åì
);

5786 
ex∂aö_övÆid_c⁄°ex¥_‚
 (
åì
);

5787 
vec
<
åì
> 
cx_îr‹_c⁄ãxt
 ();

5790 
	mBCS_NO_SCOPE
 = 1,

5791 
	mBCS_TRY_BLOCK
 = 2,

5792 
	mBCS_FN_BODY
 = 4

5794 
åì
 
begö_compound_°mt
 ();

5796 
föish_compound_°mt
 (
åì
);

5797 
åì
 
föish_asm_°mt
 (,Åree,Åree,Åree,Åree,

5798 
åì
);

5799 
åì
 
föish_œbñ_°mt
 (tree);

5800 
föish_œbñ_de˛
 (
åì
);

5801 
åì
 
föish_∑ª¡hesized_ex¥
 (tree);

5802 
åì
 
f‹˚_∑ªn_ex¥
 (tree);

5803 
åì
 
föish_n⁄_°©ic_d©a_membî
 (tree,Åree,Åree);

5804 
åì
 
begö_°mt_ex¥
 ();

5805 
åì
 
föish_°mt_ex¥_ex¥
 (tree,Åree);

5806 
åì
 
föish_°mt_ex¥
 (åì, 
boﬁ
);

5807 
åì
 
°mt_ex¥_vÆue_ex¥
 (tree);

5808 
boﬁ
 
em±y_ex¥_°mt_p
 (
åì
);

5809 
åì
 
≥rf‹m_k€nig_lookup
 (åì, 
vec
<åì, 
va_gc
> *,

5810 
tsub°_Êags_t
);

5811 
åì
 
föish_ˇŒ_ex¥
 (åì, 
vec
<åì, 
va_gc
> **, 
boﬁ
,

5812 
boﬁ
, 
tsub°_Êags_t
);

5813 
åì
 
föish_ö¸emít_ex¥
 (åì, 
åì_code
);

5814 
åì
 
föish_this_ex¥
 ();

5815 
åì
 
föish_p£udo_de°ru˘‹_ex¥
 (åì,Åªe,Åªe, 
loˇti⁄_t
);

5816 
åì
 
föish_u«ry_›_ex¥
 (
loˇti⁄_t
, 
åì_code
,Åree,

5817 
tsub°_Êags_t
);

5818 
åì
 
föish_compound_lôîÆ
 (åì,Åªe, 
tsub°_Êags_t
);

5819 
åì
 
föish_‚ame
 (tree);

5820 
föish_å™¶©i⁄_unô
 ();

5821 
åì
 
föish_ãm∂©e_ty≥_∑rm
 (tree,Åree);

5822 
åì
 
föish_ãm∂©e_ãm∂©e_∑rm
 (tree,Åree);

5823 
åì
 
begö_˛ass_deföôi⁄
 (tree);

5824 
föish_ãm∂©e_de˛
 (
åì
);

5825 
åì
 
föish_ãm∂©e_ty≥
 (tree,Åree, );

5826 
åì
 
föish_ba£_•ecifõr
 (åì,Åªe, 
boﬁ
);

5827 
föish_membî_de˛¨©i⁄
 (
åì
);

5828 
åì
 
föish_id_ex¥essi⁄
 (tree,Åree,Åree,

5829 
˝_id_köd
 *,

5830 
boﬁ
, bool, bool *,

5831 
boﬁ
, bool, bool, bool,

5833 
loˇti⁄_t
);

5834 
åì
 
föish_ty≥of
 (tree);

5835 
åì
 
föish_undîlyög_ty≥
 (tree);

5836 
åì
 
ˇlcuœã_ba£s
 (tree);

5837 
åì
 
föish_ba£s
 (åì, 
boﬁ
);

5838 
åì
 
ˇlcuœã_dúe˘_ba£s
 (tree);

5839 
åì
 
föish_off£tof
 (tree);

5840 
föish_de˛_˛ónup
 (
åì
,Åree);

5841 
föish_eh_˛ónup
 (
åì
);

5842 
emô_assocüãd_thunks
 (
åì
);

5843 
föish_mem_öôülizîs
 (
åì
);

5844 
åì
 
check_ãm∂©e_ãm∂©e_deÁu…_¨g
 (tree);

5845 
boﬁ
 
ex∑nd_‹_de„r_‚_1
 (
åì
);

5846 
ex∑nd_‹_de„r_‚
 (
åì
);

5847 
add_ty≥def_to_cuºít_ãm∂©e_f‹_ac˚ss_check
 (
åì
,Åree,

5848 
loˇti⁄_t
);

5849 
check_ac˚ssibûôy_of_quÆifõd_id
 (
åì
,Åree,Åree);

5850 
åì
 
föish_quÆifõd_id_ex¥
 (åì,Åªe, 
boﬁ
, bool,

5851 
boﬁ
, boﬁ, 
tsub°_Êags_t
);

5852 
sim∂ify_aggr_öô_ex¥
 (
åì
 *);

5853 
föÆize_ƒv
 (
åì
 *,Åree,Åree);

5854 
nŸe_de˛_f‹_pch
 (
åì
);

5855 
åì
 
omp_ªdu˘i⁄_id
 (
åì_code
,Åree,Åree);

5856 
åì
 
˝_ªmove_omp_¥iv_˛ónup_°mt
 (tree *, *, *);

5857 
˝_check_omp_de˛¨e_ªdu˘i⁄
 (
åì
);

5858 
åì
 
föish_omp_˛au£s
 (tree);

5859 
föish_omp_thªad¥iv©e
 (
åì
);

5860 
åì
 
begö_omp_°ru˘uªd_block
 ();

5861 
åì
 
föish_omp_°ru˘uªd_block
 (tree);

5862 
åì
 
begö_omp_∑øŒñ
 ();

5863 
åì
 
föish_omp_∑øŒñ
 (tree,Åree);

5864 
åì
 
begö_omp_èsk
 ();

5865 
åì
 
föish_omp_èsk
 (tree,Åree);

5866 
åì
 
föish_omp_f‹
 (
loˇti⁄_t
, 
åì_code
,

5867 
åì
,Åree,Åree,Åree,Åree,

5868 
åì
,Åree);

5869 
föish_omp_©omic
 (
åì_code
, tree_code,

5870 
åì
,Åree,Åree,Åree,Åree,

5871 
boﬁ
);

5872 
föish_omp_b¨rõr
 ();

5873 
föish_omp_Êush
 ();

5874 
föish_omp_èskwaô
 ();

5875 
föish_omp_èskyõld
 ();

5876 
föish_omp_ˇn˚l
 (
åì
);

5877 
föish_omp_ˇn˚Œ©i⁄_poöt
 (
åì
);

5878 
åì
 
begö_å™ß˘i⁄_°mt
 (
loˇti⁄_t
,Åree *, );

5879 
föish_å™ß˘i⁄_°mt
 (
åì
,Åree, ,Åree);

5880 
åì
 
buûd_å™ß˘i⁄_ex¥
 (
loˇti⁄_t
,Åree, ,Åree);

5881 
boﬁ
 
cxx_omp_¸óã_˛au£_öfo
 (
åì
,Åree, bool, bool,

5882 
boﬁ
, bool);

5883 
åì
 
ba£lök_f‹_‚s
 (tree);

5884 
föish_°©ic_as£π
 (
åì
,Åªe, 
loˇti⁄_t
,

5885 
boﬁ
);

5886 
åì
 
föish_de˛ty≥_ty≥
 (åì, 
boﬁ
, 
tsub°_Êags_t
);

5887 
åì
 
föish_åaô_ex¥
 (
˝_åaô_köd
,Åree,Åree);

5888 
åì
 
buûd_œmbda_ex¥
 ();

5889 
åì
 
buûd_œmbda_obje˘
 (tree);

5890 
åì
 
begö_œmbda_ty≥
 (tree);

5891 
åì
 
œmbda_ˇ±uª_fõld_ty≥
 (åì, 
boﬁ
);

5892 
åì
 
œmbda_ªtu∫_ty≥
 (tree);

5893 
åì
 
œmbda_¥oxy_ty≥
 (tree);

5894 
åì
 
œmbda_fun˘i⁄
 (tree);

5895 
≠∂y_dedu˚d_ªtu∫_ty≥
 (
åì
,Åree);

5896 
åì
 
add_ˇ±uª
 (åì,Åªe,Åªe, 
boﬁ
, bool);

5897 
åì
 
add_deÁu…_ˇ±uª
 (tree,Åree,Åree);

5898 
åì
 
buûd_ˇ±uª_¥oxy
 (tree);

5899 
ö£π_ˇ±uª_¥oxy
 (
åì
);

5900 
ö£π_≥ndög_ˇ±uª_¥oxõs
 ();

5901 
boﬁ
 
is_ˇ±uª_¥oxy
 (
åì
);

5902 
boﬁ
 
is_n‹mÆ_ˇ±uª_¥oxy
 (
åì
);

5903 
ªgi°î_ˇ±uª_membîs
 (
åì
);

5904 
åì
 
œmbda_ex¥_this_ˇ±uª
 (tree);

5905 
åì
 
maybe_ªsﬁve_dummy
 (tree);

5906 
åì
 
n⁄œmbda_mëhod_ba£ty≥
 ();

5907 
maybe_add_œmbda_c⁄v_›
 (
åì
);

5908 
boﬁ
 
is_œmbda_ign‹ed_ítôy
 (
åì
);

5911 
˝_åì_›î™d_Àngth
 (
c⁄°_åì
);

5912 
˝_‰ì_œng_d©a
 (
åì
 
t
);

5913 
åì
 
f‹˚_èrgë_ex¥
 (åì,Åªe, 
tsub°_Êags_t
);

5914 
åì
 
buûd_èrgë_ex¥_wôh_ty≥
 (åì,Åªe, 
tsub°_Êags_t
);

5915 
	$œng_check_Áûed
 (const *, ,

5916 c⁄° *Ë
ATTRIBUTE_NORETURN
;

5917 
åì
 
	`°abûize_ex¥
 (tree,Åree *);

5918 
	`°abûize_ˇŒ
 (
åì
,Åree *);

5919 
boﬁ
 
	`°abûize_öô
 (
åì
,Åree *);

5920 
åì
 
	`add_°mt_to_compound
 (tree,Åree);

5921 
	`öô_åì
 ();

5922 
boﬁ
 
	`pod_ty≥_p
 (
c⁄°_åì
);

5923 
boﬁ
 
	`œyout_pod_ty≥_p
 (
c⁄°_åì
);

5924 
boﬁ
 
	`°d_œyout_ty≥_p
 (
c⁄°_åì
);

5925 
boﬁ
 
	`åivül_ty≥_p
 (
c⁄°_åì
);

5926 
boﬁ
 
	`åivüŒy_c›yabÀ_p
 (
c⁄°_åì
);

5927 
boﬁ
 
	`sˇœrish_ty≥_p
 (
c⁄°_åì
);

5928 
boﬁ
 
	`ty≥_has_n⁄åivül_deÁu…_öô
 (
c⁄°_åì
);

5929 
boﬁ
 
	`ty≥_has_n⁄åivül_c›y_öô
 (
c⁄°_åì
);

5930 
boﬁ
 
	`˛ass_tm∂_im∂_•ec_p
 (
c⁄°_åì
);

5931 
	`zîo_öô_p
 (
c⁄°_åì
);

5932 
boﬁ
 
	`check_abi_èg_ªde˛¨©i⁄
 (
c⁄°_åì
, const_tree, const_tree);

5933 
åì
 
	`°rù_ty≥defs
 (tree);

5934 
åì
 
	`°rù_ty≥defs_ex¥
 (tree);

5935 
åì
 
	`c›y_böfo
 (tree,Åree,Åree,

5936 
åì
 *, );

5937 
	`membî_p
 (
c⁄°_åì
);

5938 
˝_lvÆue_köd
 
	`ªÆ_lvÆue_p
 (
c⁄°_åì
);

5939 
˝_lvÆue_köd
 
	`lvÆue_köd
 (
c⁄°_åì
);

5940 
boﬁ
 
	`lvÆue_‹_rvÆue_wôh_addªss_p
 (
c⁄°_åì
);

5941 
boﬁ
 
	`xvÆue_p
 (
c⁄°_åì
);

5942 
boﬁ
 
	`buûtö_vÆid_ö_c⁄°™t_ex¥_p
 (
c⁄°_åì
);

5943 
åì
 
	`buûd_mö
 (
åì_code
,Åree, ...);

5944 
åì
 
	`buûd_mö_¡_loc
 (
loˇti⁄_t
, 
åì_code
,

5946 
åì
 
	`buûd_mö_n⁄_dï
 (
åì_code
,Åree, ...);

5947 
åì
 
	`buûd_mö_n⁄_dï_ˇŒ_vec
 (åì,Åªe, 
vec
<åì, 
va_gc
> *);

5948 
åì
 
	`buûd_˝lus_√w
 (åì,Åªe, 
tsub°_Êags_t
);

5949 
åì
 
	`buûd_aggr_öô_ex¥
 (tree,Åree);

5950 
åì
 
	`gë_èrgë_ex¥
 (tree);

5951 
åì
 
	`gë_èrgë_ex¥_sfö´
 (åì, 
tsub°_Êags_t
);

5952 
åì
 
	`buûd_˝lus_¨øy_ty≥
 (tree,Åree);

5953 
åì
 
	`buûd_¨øy_of_n_ty≥
 (tree, );

5954 
boﬁ
 
	`¨øy_of_ru¡ime_bound_p
 (
åì
);

5955 
åì
 
	`buûd_¨øy_c›y
 (tree);

5956 
åì
 
	`buûd_vec_öô_ex¥
 (åì,Åªe, 
tsub°_Êags_t
);

5957 
	`dügno£_n⁄_c⁄°ex¥_vec_öô
 (
åì
);

5958 
åì
 
	`hash_åì_c⁄s
 (tree,Åree,Åree);

5959 
åì
 
	`hash_åì_chaö
 (tree,Åree);

5960 
åì
 
	`buûd_quÆifõd_«me
 (åì,Åªe,Åªe, 
boﬁ
);

5961 
åì
 
	`buûd_ªf_quÆifõd_ty≥
 (åì, 
˝_ªf_quÆifõr
);

5962 
	`is_ovîlﬂded_‚
 (
åì
);

5963 
åì
 
	`dïídít_«me
 (tree);

5964 
åì
 
	`gë_‚s
 (tree);

5965 
åì
 
	`gë_fú°_‚
 (tree);

5966 
åì
 
	`ovl_c⁄s
 (tree,Åree);

5967 
åì
 
	`buûd_ovîlﬂd
 (tree,Åree);

5968 
åì
 
	`ovl_sc›e
 (tree);

5969 
boﬁ
 
	`n⁄_°©ic_membî_fun˘i⁄_p
 (
åì
);

5970 c⁄° *
	`cxx_¥öèbÀ_«me
 (
åì
, );

5971 c⁄° *
	`cxx_¥öèbÀ_«me_å™¶©e
 (
åì
, );

5972 
åì
 
	`buûd_ex˚±i⁄_v¨ü¡
 (tree,Åree);

5973 
åì
 
	`böd_ãm∂©e_ãm∂©e_∑rm
 (tree,Åree);

5974 
åì
 
	`¨øy_ty≥_√…s_tŸÆ
 (tree);

5975 
åì
 
	`¨øy_ty≥_√…s_t›
 (tree);

5976 
åì
 
	`bªak_out_èrgë_ex¥s
 (tree);

5977 
åì
 
	`gë_ty≥_de˛
 (tree);

5978 
åì
 
	`de˛_«me•a˚_c⁄ãxt
 (tree);

5979 
boﬁ
 
	`de˛_™⁄_ns_mem_p
 (
c⁄°_åì
);

5980 
åì
 
	`lvÆue_ty≥
 (tree);

5981 
åì
 
	`îr‹_ty≥
 (tree);

5982 
	`v¨¨gs_fun˘i⁄_p
 (
c⁄°_åì
);

5983 
boﬁ
 
	`ªÆly_ovîlﬂded_‚
 (
åì
);

5984 
boﬁ
 
	`˝_åì_equÆ
 (
åì
,Åree);

5985 
åì
 
	`no_lökage_check
 (åì, 
boﬁ
);

5986 
	`debug_böfo
 (
åì
);

5987 
åì
 
	`buûd_dummy_obje˘
 (tree);

5988 
åì
 
	`maybe_dummy_obje˘
 (tree,Åree *);

5989 
	`is_dummy_obje˘
 (
c⁄°_åì
);

5990 c⁄° 
©åibuã_•ec
 
cxx_©åibuã_èbÀ
[];

5991 
åì
 
	`make_±rmem_c°
 (tree,Åree);

5992 
åì
 
	`˝_buûd_ty≥_©åibuã_v¨ü¡
 (tree,Åree);

5993 
åì
 
	`˝_buûd_ª„ªn˚_ty≥
 (åì, 
boﬁ
);

5994 
åì
 
	`move
 (tree);

5995 
åì
 
	`˝_buûd_quÆifõd_ty≥_ªÆ
 (åì, , 
tsub°_Êags_t
);

5996 
	#˝_buûd_quÆifõd_ty≥
(
TYPE
, 
QUALS
) \

5997 
	`˝_buûd_quÆifõd_ty≥_ªÆ
 ((
TYPE
), (
QUALS
), 
tf_w¨nög_‹_îr‹
)

	)

5998 
boﬁ
 
	`cv_quÆifõd_p
 (
c⁄°_åì
);

5999 
åì
 
	`cv_unquÆifõd
 (tree);

6000 
•ecül_fun˘i⁄_köd
 
	`•ecül_fun˘i⁄_p
 (
c⁄°_åì
);

6001 
	`cou¡_åìs
 (
åì
);

6002 
	`ch¨_ty≥_p
 (
åì
);

6003 
	`vîify_°mt_åì
 (
åì
);

6004 
lökage_köd
 
	`de˛_lökage
 (
åì
);

6005 
duøti⁄_köd
 
	`de˛_°‹age_duøti⁄
 (
åì
);

6006 
åì
 
	`˝_wÆk_subåìs
 (åì*, *, 
wÆk_åì_‚
,

6007 *, 
poöãr_£t_t
*);

6008 
	#˝_wÆk_åì
(
ç
,
func
,
d©a
,
p£t
) \

6009 
	`wÆk_åì_1
 (
ç
, 
func
, 
d©a
, 
p£t
, 
˝_wÆk_subåìs
)

	)

6010 
	#˝_wÆk_åì_wôhout_du∂iˇãs
(
ç
,
func
,
d©a
) \

6011 
	`wÆk_åì_wôhout_du∂iˇãs_1
 (
ç
, 
func
, 
d©a
, 
˝_wÆk_subåìs
)

	)

6012 
åì
 
	`fﬁd_if_nŸ_ö_ãm∂©e
 (tree);

6013 
åì
 
	`rvÆue
 (tree);

6014 
åì
 
	`c⁄vît_bôfõld_to_de˛¨ed_ty≥
 (tree);

6015 
åì
 
	`˝_ßve_ex¥
 (tree);

6016 
boﬁ
 
	`ˇ°_vÆid_ö_öãgøl_c⁄°™t_ex¥essi⁄_p
 (
åì
);

6017 
boﬁ
 
	`cxx_ty≥_hash_eq
 (
c⁄°_åì
, const_tree);

6019 
	`cxx_¥öt_°©i°ics
 ();

6020 
boﬁ
 
	`maybe_w¨n_zîo_as_nuŒ_poöãr_c⁄°™t
 (
åì
, 
loˇti⁄_t
);

6023 
	`cxx_¥öt_xnode
 (
FILE
 *, 
åì
, );

6024 
	`cxx_¥öt_de˛
 (
FILE
 *, 
åì
, );

6025 
	`cxx_¥öt_ty≥
 (
FILE
 *, 
åì
, );

6026 
	`cxx_¥öt_idítifõr
 (
FILE
 *, 
åì
, );

6027 
	`cxx_¥öt_îr‹_fun˘i⁄
 (
dügno°ic_c⁄ãxt
 *,

6029 
dügno°ic_öfo
 *);

6032 
boﬁ
 
	`cxx_m¨k_addªsßbÀ
 (
åì
);

6033 
	`°rög_c⁄v_p
 (
c⁄°_åì
, const_tree, );

6034 
åì
 
	`˝_åuthvÆue_c⁄vîsi⁄
 (tree);

6035 
åì
 
	`c⁄dôi⁄_c⁄vîsi⁄
 (tree);

6036 
åì
 
	`ªquúe_com∂ëe_ty≥
 (tree);

6037 
åì
 
	`ªquúe_com∂ëe_ty≥_sfö´
 (åì, 
tsub°_Êags_t
);

6038 
åì
 
	`com∂ëe_ty≥
 (tree);

6039 
åì
 
	`com∂ëe_ty≥_‹_ñ£
 (tree,Åree);

6040 
åì
 
	`com∂ëe_ty≥_‹_maybe_com∂aö
 (åì,Åªe, 
tsub°_Êags_t
);

6041 
	`ty≥_unknown_p
 (
c⁄°_åì
);

6042 íum { 
˚_dîived
, 
˚_n‹mÆ
, 
˚_exa˘
 };

6043 
boﬁ
 
	`comp_ex˚±_•ecs
 (
c⁄°_åì
, const_tree, );

6044 
boﬁ
 
	`com±y≥s
 (
åì
,Åree, );

6045 
boﬁ
 
	`ßme_ty≥_ign‹ög_t›_Àvñ_quÆifõrs_p
 (
åì
,Åree);

6046 
boﬁ
 
	`comµ¨ms
 (
c⁄°_åì
, const_tree);

6047 
	`comp_cv_quÆifiˇti⁄
 (
c⁄°_åì
, const_tree);

6048 
	`comp_cv_quÆ_sig«tuª
 (
åì
,Åree);

6049 
åì
 
	`cxx_sizeof_‹_Æignof_ex¥
 (åì, 
åì_code
, 
boﬁ
);

6050 
åì
 
	`cxx_sizeof_‹_Æignof_ty≥
 (åì, 
åì_code
, 
boﬁ
);

6051 
åì
 
	`cxx_Æig«s_ex¥
 (tree);

6052 
åì
 
	`cxx_sizeof_now¨n
 (tree);

6053 
åì
 
	`is_bôfõld_ex¥_wôh_lowîed_ty≥
 (
c⁄°_åì
);

6054 
åì
 
	`u∆owîed_ex¥_ty≥
 (
c⁄°_åì
);

6055 
åì
 
	`deˇy_c⁄vîsi⁄
 (åì, 
tsub°_Êags_t
);

6056 
åì
 
	`buûd_˛ass_membî_ac˚ss_ex¥
 (åì,Åªe,Åªe, 
boﬁ
,

6057 
tsub°_Êags_t
);

6058 
åì
 
	`föish_˛ass_membî_ac˚ss_ex¥
 (åì,Åªe, 
boﬁ
,

6059 
tsub°_Êags_t
);

6060 
åì
 
	`buûd_x_ödúe˘_ªf
 (
loˇti⁄_t
,Åree,

6061 
ªf_›î©‹
, 
tsub°_Êags_t
);

6062 
åì
 
	`˝_buûd_ödúe˘_ªf
 (åì, 
ªf_›î©‹
,

6063 
tsub°_Êags_t
);

6064 
åì
 
	`buûd_¨øy_ªf
 (
loˇti⁄_t
,Åree,Åree);

6065 
åì
 
	`˝_buûd_¨øy_ªf
 (
loˇti⁄_t
,Åree,Åree,

6066 
tsub°_Êags_t
);

6067 
åì
 
	`gë_membî_fun˘i⁄_‰om_±rfunc
 (åì *,Åªe, 
tsub°_Êags_t
);

6068 
åì
 
	`˝_buûd_fun˘i⁄_ˇŒ
 (åì,Åªe, 
tsub°_Êags_t
);

6069 
åì
 
	$˝_buûd_fun˘i⁄_ˇŒ_«ry
 (
åì
, 
tsub°_Êags_t
, ...)

6070 
ATTRIBUTE_SENTINEL
;

6071 
åì
 
	`˝_buûd_fun˘i⁄_ˇŒ_vec
 (åì, 
vec
<åì, 
va_gc
> **,

6072 
tsub°_Êags_t
);

6073 
åì
 
	`buûd_x_bö¨y_›
 (
loˇti⁄_t
,

6074 
åì_code
, 
åì
,

6075 
åì_code
, 
åì
,

6076 
åì_code
, 
åì
 *,

6077 
tsub°_Êags_t
);

6078 
åì
 
	`buûd_x_¨øy_ªf
 (
loˇti⁄_t
,Åree,Åree,

6079 
tsub°_Êags_t
);

6080 
åì
 
	`buûd_x_u«ry_›
 (
loˇti⁄_t
,

6081 
åì_code
, 
åì
,

6082 
tsub°_Êags_t
);

6083 
åì
 
	`˝_buûd_addr_ex¥
 (åì, 
tsub°_Êags_t
);

6084 
åì
 
	`˝_buûd_addr_ex¥_°ri˘
 (åì, 
tsub°_Êags_t
);

6085 
åì
 
	`˝_buûd_u«ry_›
 (
åì_code
,Åree, ,

6086 
tsub°_Êags_t
);

6087 
åì
 
	`u«ry_com∂ex_lvÆue
 (
åì_code
,Åree);

6088 
åì
 
	`buûd_x_c⁄dôi⁄Æ_ex¥
 (
loˇti⁄_t
,Åree,Åree,Åree,

6089 
tsub°_Êags_t
);

6090 
åì
 
	`buûd_x_compound_ex¥_‰om_li°
 (åì, 
ex¥_li°_köd
,

6091 
tsub°_Êags_t
);

6092 
åì
 
	`buûd_x_compound_ex¥_‰om_vec
 (
vec
<åì, 
va_gc
> *,

6093 c⁄° *, 
tsub°_Êags_t
);

6094 
åì
 
	`buûd_x_compound_ex¥
 (
loˇti⁄_t
,Åree,Åree,

6095 
tsub°_Êags_t
);

6096 
åì
 
	`buûd_compound_ex¥
 (
loˇti⁄_t
,Åree,Åree);

6097 
åì
 
	`˝_buûd_compound_ex¥
 (åì,Åªe, 
tsub°_Êags_t
);

6098 
åì
 
	`buûd_°©ic_ˇ°
 (åì,Åªe, 
tsub°_Êags_t
);

6099 
åì
 
	`buûd_ªöãΩªt_ˇ°
 (åì,Åªe, 
tsub°_Êags_t
);

6100 
åì
 
	`buûd_c⁄°_ˇ°
 (åì,Åªe, 
tsub°_Êags_t
);

6101 
åì
 
	`buûd_c_ˇ°
 (
loˇti⁄_t
,Åree,Åree);

6102 
åì
 
	`˝_buûd_c_ˇ°
 (åì,Åªe, 
tsub°_Êags_t
);

6103 
åì
 
	`buûd_x_modify_ex¥
 (
loˇti⁄_t
,Åree,

6104 
åì_code
, 
åì
,

6105 
tsub°_Êags_t
);

6106 
åì
 
	`˝_buûd_modify_ex¥
 (åì, 
åì_code
,Åree,

6107 
tsub°_Êags_t
);

6108 
åì
 
	`c⁄vît_f‹_öôüliz©i⁄
 (tree,Åree,Åree, ,

6109 
im∂_c⁄v_rhs
, 
åì
, ,

6110 
tsub°_Êags_t
);

6111 
	`comp_±r_ây≥s
 (
åì
,Åree);

6112 
boﬁ
 
	`comp_±r_ây≥s_c⁄°
 (
åì
,Åree);

6113 
boﬁ
 
	`îr‹_ty≥_p
 (
c⁄°_åì
);

6114 
boﬁ
 
	`±r_ªas⁄ably_simû¨
 (
c⁄°_åì
, const_tree);

6115 
åì
 
	`buûd_±rmemfunc
 (åì,Åªe, , 
boﬁ
,

6116 
tsub°_Êags_t
);

6117 
	`˝_ty≥_quÆs
 (
c⁄°_åì
);

6118 
	`ty≥_mem‚_quÆs
 (
c⁄°_åì
);

6119 
˝_ªf_quÆifõr
 
	`ty≥_mem‚_rquÆ
 (
c⁄°_åì
);

6120 
åì
 
	`≠∂y_mem‚_quÆs
 (åì, 
˝_cv_quÆs
, 
˝_ªf_quÆifõr
);

6121 
boﬁ
 
	`˝_has_muèbÀ_p
 (
c⁄°_åì
);

6122 
boﬁ
 
	`©_Àa°_as_quÆifõd_p
 (
c⁄°_åì
, const_tree);

6123 
	`˝_≠∂y_ty≥_quÆs_to_de˛
 (, 
åì
);

6124 
åì
 
	`buûd_±rmemfunc1
 (tree,Åree,Åree);

6125 
	`ex∑nd_±rmemfunc_c°
 (
åì
,Åree *,Åree *);

6126 
åì
 
	`ty≥_a·î_usuÆ_¨ôhmëic_c⁄vîsi⁄s
 (tree,Åree);

6127 
åì
 
	`comm⁄_poöãr_ty≥
 (tree,Åree);

6128 
åì
 
	`composôe_poöãr_ty≥
 (tree,Åree,Åree,Åree,

6129 
composôe_poöãr_›î©i⁄
,

6130 
tsub°_Êags_t
);

6131 
åì
 
	`mîge_ty≥s
 (tree,Åree);

6132 
åì
 
	`°rù_¨øy_domaö
 (tree);

6133 
åì
 
	`check_ªtu∫_ex¥
 (åì, 
boﬁ
 *);

6134 
åì
 
	`˝_buûd_bö¨y_›
 (
loˇti⁄_t
,

6135 
åì_code
, 
åì
,Åree,

6136 
tsub°_Êags_t
);

6137 
åì
 
	`buûd_x_vec_≥rm_ex¥
 (
loˇti⁄_t
,

6138 
åì
,Åree,Åree,

6139 
tsub°_Êags_t
);

6140 
	#cxx_sizeof
(
T
Ë
	`cxx_sizeof_‹_Æignof_ty≥
 (T, 
SIZEOF_EXPR
, 
åue
)

	)

6141 
åì
 
	`buûd_sim∂e_comp⁄ít_ªf
 (tree,Åree);

6142 
åì
 
	`buûd_±rmemfunc_ac˚ss_ex¥
 (tree,Åree);

6143 
åì
 
	`buûd_addªss
 (tree);

6144 
åì
 
	`buûd_ty≥d_addªss
 (tree,Åree);

6145 
åì
 
	`buûd_n›
 (tree,Åree);

6146 
åì
 
	`n⁄_ª„ªn˚
 (tree);

6147 
åì
 
	`lookup_™⁄_fõld
 (tree,Åree);

6148 
boﬁ
 
	`övÆid_n⁄°©ic_mem‚_p
 (
åì
, 
tsub°_Êags_t
);

6149 
åì
 
	`c⁄vît_membî_func_to_±r
 (åì,Åªe, 
tsub°_Êags_t
);

6150 
åì
 
	`c⁄vît_±rmem
 (åì,Åªe, 
boﬁ
, bool,

6151 
tsub°_Êags_t
);

6152 
	`lvÆue_‹_ñ£
 (
åì
, 
lvÆue_u£
,

6153 
tsub°_Êags_t
);

6154 
	`check_ãm∂©e_keyw‹d
 (
åì
);

6155 
boﬁ
 
	`check_øw_lôîÆ_›î©‹
 (
c⁄°_åì
 
de˛
);

6156 
boﬁ
 
	`check_lôîÆ_›î©‹_¨gs
 (
c⁄°_åì
, bool *, bool *);

6157 
	`maybe_w¨n_about_u£Àss_ˇ°
 (
åì
,Åªe, 
tsub°_Êags_t
);

6158 
åì
 
	`˝_≥rf‹m_öãgøl_¥omŸi⁄s
 (åì, 
tsub°_Êags_t
);

6161 
	`ªquúe_com∂ëe_eh_•ec_ty≥s
 (
åì
,Åree);

6162 
	`cxx_öcom∂ëe_ty≥_dügno°ic
 (
c⁄°_åì
, c⁄°_åì, 
dügno°ic_t
);

6163 #unde‡
cxx_öcom∂ëe_ty≥_îr‹


6164 
	`cxx_öcom∂ëe_ty≥_îr‹
 (
c⁄°_åì
, const_tree);

6165 
	#cxx_öcom∂ëe_ty≥_îr‹
(
V
,
T
) \

6166 (
	`cxx_öcom∂ëe_ty≥_dügno°ic
 ((
V
), (
T
), 
DK_ERROR
))

	)

6167 
åì
 
	`îr‹_nŸ_ba£_ty≥
 (tree,Åree);

6168 
åì
 
	`böfo_‹_ñ£
 (tree,Åree);

6169 
	`cxx_ªad⁄ly_îr‹
 (
åì
, 
lvÆue_u£
);

6170 
	`com∂ëe_ty≥_check_ab°ø˘
 (
åì
);

6171 
	`ab°ø˘_vútuÆs_îr‹
 (
åì
,Åree);

6172 
	`ab°ø˘_vútuÆs_îr‹
 (
ab°ø˘_˛ass_u£
, 
åì
);

6173 
	`ab°ø˘_vútuÆs_îr‹_sfö´
 (
åì
,Åªe, 
tsub°_Êags_t
);

6174 
	`ab°ø˘_vútuÆs_îr‹_sfö´
 (
ab°ø˘_˛ass_u£
, 
åì
, 
tsub°_Êags_t
);

6176 
åì
 
	`°‹e_öô_vÆue
 (åì,Åªe, 
vec
<åì, 
va_gc
>**, );

6177 
	`check_«ºowög
 (
åì
,Åree);

6178 
åì
 
	`dige°_öô
 (åì,Åªe, 
tsub°_Êags_t
);

6179 
åì
 
	`dige°_öô_Êags
 (tree,Åree, );

6180 
åì
 
	`dige°_nsdmi_öô
 (tree,Åree);

6181 
åì
 
	`buûd_sc›ed_ªf
 (tree,Åree,Åree *);

6182 
åì
 
	`buûd_x_¨row
 (
loˇti⁄_t
,Åree,

6183 
tsub°_Êags_t
);

6184 
åì
 
	`buûd_m_comp⁄ít_ªf
 (åì,Åªe, 
tsub°_Êags_t
);

6185 
åì
 
	`buûd_fun˘i⁄Æ_ˇ°
 (åì,Åªe, 
tsub°_Êags_t
);

6186 
åì
 
	`add_ex˚±i⁄_•ecifõr
 (tree,Åree, );

6187 
åì
 
	`mîge_ex˚±i⁄_•ecifõrs
 (tree,Åree,Åree);

6190 
	`öô_m™gÀ
 ();

6191 
	`m™gÀ_de˛
 (
åì
);

6192 c⁄° *
	`m™gÀ_ty≥_°rög
 (
åì
);

6193 
åì
 
	`m™gÀ_ty≥öfo_f‹_ty≥
 (tree);

6194 
åì
 
	`m™gÀ_ty≥öfo_°rög_f‹_ty≥
 (tree);

6195 
åì
 
	`m™gÀ_vtbl_f‹_ty≥
 (tree);

6196 
åì
 
	`m™gÀ_vâ_f‹_ty≥
 (tree);

6197 
åì
 
	`m™gÀ_˘‹_vtbl_f‹_ty≥
 (tree,Åree);

6198 
åì
 
	`m™gÀ_thunk
 (tree, ,Åree,Åree);

6199 
åì
 
	`m™gÀ_c⁄v_›_«me_f‹_ty≥
 (tree);

6200 
åì
 
	`m™gÀ_gu¨d_v¨übÀ
 (tree);

6201 
åì
 
	`m™gÀ_és_öô_‚
 (tree);

6202 
åì
 
	`m™gÀ_és_wøµî_‚
 (tree);

6203 
boﬁ
 
	`de˛_és_wøµî_p
 (
åì
);

6204 
åì
 
	`m™gÀ_ªf_öô_v¨übÀ
 (tree);

6205 * 
	`gë_m™gÀd_vèbÀ_m≠_v¨_«me
 (
åì
);

6208 
boﬁ
 
	`˝_dump_åì
 (*, 
åì
);

6212 
Æüs_£t_ty≥
 
	`cxx_gë_Æüs_£t
 (
åì
);

6213 
boﬁ
 
	`cxx_w¨n_unu£d_globÆ_de˛
 (
c⁄°_åì
);

6214 
size_t
 
	`˝_åì_size
 (
åì_code
);

6215 
boﬁ
 
	`˝_v¨_mod_ty≥_p
 (
åì
,Åree);

6216 
	`cxx_öôülize_dügno°ics
 (
dügno°ic_c⁄ãxt
 *);

6217 
	`cxx_ty≥s_com∑tibÀ_p
 (
åì
,Åree);

6218 
	`öô_shadowed_v¨_f‹_de˛
 ();

6219 
boﬁ
 
	`cxx_block_may_ÁŒthru
 (
c⁄°_åì
);

6222 
	`˝_gim∂ify_ex¥
 (
åì
 *, 
gim∂e_£q
 *,

6223 
gim∂e_£q
 *);

6224 
	`˝_gíîicize
 (
åì
);

6225 
boﬁ
 
	`cxx_omp_c⁄°_quÆ_no_muèbÀ
 (
åì
);

6226 
omp_˛au£_deÁu…_köd
 
	`cxx_omp_¥edëîmöed_sh¨ög
 (
åì
);

6227 
åì
 
	`cxx_omp_˛au£_deÁu…_˘‹
 (tree,Åree,Åree);

6228 
åì
 
	`cxx_omp_˛au£_c›y_˘‹
 (tree,Åree,Åree);

6229 
åì
 
	`cxx_omp_˛au£_assign_›
 (tree,Åree,Åree);

6230 
åì
 
	`cxx_omp_˛au£_dt‹
 (tree,Åree);

6231 
	`cxx_omp_föish_˛au£
 (
åì
, 
gim∂e_£q
 *);

6232 
boﬁ
 
	`cxx_omp_¥iv©ize_by_ª„ªn˚
 (
c⁄°_åì
);

6235 
	`sugge°_Æã∫©ives_f‹
 (
loˇti⁄_t
, 
åì
);

6236 
åì
 
	`°rù_usög_de˛
 (tree);

6239 
	`vtv_compuã_˛ass_hõørchy_å™sôive_˛osuª
 ();

6240 
	`vtv_gíî©e_öô_routöe
 ();

6241 
	`vtv_ßve_˛ass_öfo
 (
åì
);

6242 
	`vtv_ªcovî_˛ass_öfo
 ();

6243 
	`vtv_buûd_vèbÀ_vîify_‚de˛
 ();

6246 
boﬁ
 
	`˝p_vÆid©e_cûk_∂us_lo›
 (
åì
);

6249 
åì
 
	`ex∑nd_¨øy_nŸ©i⁄_ex¥s
 (tree);

6250 
boﬁ
 
	`cûk∂us_™_åùÀt_ty≥s_ok_p
 (
loˇti⁄_t
, 
åì
,Åree,Åree,

6251 
åì
);

6253 
boﬁ
 
	`cûk_vÆid_•awn
 (
åì
);

	@include/cp/cxx-pretty-print.h

21 #i‚de‡
GCC_CXX_PRETTY_PRINT_H


22 
	#GCC_CXX_PRETTY_PRINT_H


	)

24 
	~"c-Ámûy/c-¥ëty-¥öt.h
"

26 
	ecxx_¥ëty_¥öãr_Êags


29 
	mµ_cxx_Êag_deÁu…_¨gumít
 = 1 << 
µ_c_Êag_œ°_bô


32 
	gcxx_¥ëty_¥öãr
 : 
c_¥ëty_¥öãr


34 
cxx_¥ëty_¥öãr
 ();

36 
c⁄°™t
 (
åì
);

37 
id_ex¥essi⁄
 (
åì
);

38 
¥im¨y_ex¥essi⁄
 (
åì
);

39 
po°fix_ex¥essi⁄
 (
åì
);

40 
u«ry_ex¥essi⁄
 (
åì
);

41 
mu…ùliˇtive_ex¥essi⁄
 (
åì
);

42 
c⁄dôi⁄Æ_ex¥essi⁄
 (
åì
);

43 
assignmít_ex¥essi⁄
 (
åì
);

44 
ex¥essi⁄
 (
åì
);

45 
ty≥_id
 (
åì
);

46 
°©emít
 (
åì
);

47 
de˛¨©i⁄
 (
åì
);

48 
de˛¨©i⁄_•ecifõrs
 (
åì
);

49 
sim∂e_ty≥_•ecifõr
 (
åì
);

50 
fun˘i⁄_•ecifõr
 (
åì
);

51 
de˛¨©‹
 (
åì
);

52 
dúe˘_de˛¨©‹
 (
åì
);

53 
ab°ø˘_de˛¨©‹
 (
åì
);

54 
dúe˘_ab°ø˘_de˛¨©‹
 (
åì
);

57 
åì
 
	gí˛osög_sc›e
;

60 
	#µ_cxx_cv_quÆifõr_£q
(
PP
, 
T
) \

61 
	`µ_c_ty≥_quÆifõr_li°
 (
PP
, 
T
)

	)

62 
	#µ_cxx_cv_quÆifõrs
(
PP
, 
CV
) \

63 
	`µ_c_cv_quÆifõrs
 (
PP
, 
CV
, 
Ál£
)

	)

65 
	#µ_cxx_whôe•a˚
(
PP
Ë
	`µ_c_whôe•a˚
 (PP)

	)

66 
	#µ_cxx_À·_∑ªn
(
PP
Ë
	`µ_c_À·_∑ªn
 (PP)

	)

67 
	#µ_cxx_right_∑ªn
(
PP
Ë
	`µ_c_right_∑ªn
 (PP)

	)

68 
	#µ_cxx_À·_bø˚
(
PP
Ë
	`µ_c_À·_bø˚
 (PP)

	)

69 
	#µ_cxx_right_bø˚
(
PP
Ë
	`µ_c_right_bø˚
 (PP)

	)

70 
	#µ_cxx_À·_bøckë
(
PP
Ë
	`µ_c_À·_bøckë
 (PP)

	)

71 
	#µ_cxx_right_bøckë
(
PP
Ë
	`µ_c_right_bøckë
 (PP)

	)

72 
	#µ_cxx_dŸ
(
PP
Ë
	`µ_c_dŸ
 (PP)

	)

73 
	#µ_cxx_am≥rßnd
(
PP
Ë
	`µ_c_am≥rßnd
 (PP)

	)

74 
	#µ_cxx_°¨
(
PP
Ë
	`µ_c_°¨
 (PP)

	)

75 
	#µ_cxx_¨row
(
PP
Ë
	`µ_c_¨row
 (PP)

	)

76 
	#µ_cxx_£micﬁ⁄
(
PP
Ë
	`µ_c_£micﬁ⁄
 (PP)

	)

77 
	#µ_cxx_com∂emít
(
PP
Ë
	`µ_c_com∂emít
 (PP)

	)

79 
	#µ_cxx_ws_°rög
(
PP
, 
I
Ë
	`µ_c_ws_°rög
 (PP, I)

	)

80 
	#µ_cxx_idítifõr
(
PP
, 
I
Ë
	`µ_c_idítifõr
 (PP, I)

	)

81 
	#µ_cxx_åì_idítifõr
(
PP
, 
T
) \

82 
	`µ_c_åì_idítifõr
 (
PP
, 
T
)

	)

84 
µ_cxx_begö_ãm∂©e_¨gumít_li°
 (
cxx_¥ëty_¥öãr
 *);

85 
µ_cxx_íd_ãm∂©e_¨gumít_li°
 (
cxx_¥ëty_¥öãr
 *);

86 
µ_cxx_cﬁ⁄_cﬁ⁄
 (
cxx_¥ëty_¥öãr
 *);

87 
µ_cxx_£∑øã_wôh
 (
cxx_¥ëty_¥öãr
 *, );

89 
µ_cxx_ˇn⁄iˇl_ãm∂©e_∑ømëî
 (
cxx_¥ëty_¥öãr
 *, 
åì
);

90 
µ_cxx_åaô_ex¥essi⁄
 (
cxx_¥ëty_¥öãr
 *, 
åì
);

91 
µ_cxx_va_¨g_ex¥essi⁄
 (
cxx_¥ëty_¥öãr
 *, 
åì
);

92 
µ_cxx_off£tof_ex¥essi⁄
 (
cxx_¥ëty_¥öãr
 *, 
åì
);

93 
µ_cxx_u£rdef_lôîÆ
 (
cxx_¥ëty_¥öãr
 *, 
åì
);

	@include/cp/name-lookup.h

21 #i‚de‡
GCC_CP_NAME_LOOKUP_H


22 
	#GCC_CP_NAME_LOOKUP_H


	)

24 
	~"c-Ámûy/c-comm⁄.h
"

28 
bödög_èbÀ_s
 *
	tbödög_èbÀ
;

29 
bödög_íåy_s
 *
	tbödög_íåy
;

32 (*
	tbt_f‹óch_¥oc
Ë(
	tbödög_íåy
, *);

34 
	`GTY
(()Ë
bödög_íåy_s
 {

35 
bödög_íåy
 
chaö
;

36 
åì
 
«me
;

37 
åì
 
ty≥
;

38 
	}
};

41 
	#SCOPE_DEFAULT_HT_SIZE
 (1 << 3)

	)

42 
	#CLASS_SCOPE_HT_SIZE
 (1 << 3)

	)

43 
	#NAMESPACE_ORDINARY_HT_SIZE
 (1 << 5)

	)

44 
	#NAMESPACE_STD_HT_SIZE
 (1 << 8)

	)

45 
	#GLOBAL_SCOPE_HT_SIZE
 (1 << 8)

	)

47 
bödög_èbÀ_f‹óch
 (
bödög_èbÀ
, 
bt_f‹óch_¥oc
, *);

48 
bödög_íåy
 
bödög_èbÀ_föd
 (
bödög_èbÀ
, 
åì
);

52 
cxx_bödög
 
	tcxx_bödög
;

55 
˝_bödög_Àvñ
 
	t˝_bödög_Àvñ
;

59 
	#LOCAL_BINDING_P
(
NODE
Ë((NODE)->
is_loˇl
)

	)

63 
	#INHERITED_VALUE_BINDING_P
(
NODE
Ë((NODE)->
vÆue_is_öhîôed
)

	)

65 
GTY
(()Ë
	gcxx_bödög
 {

67 
cxx_bödög
 *
	g¥evious
;

69 
åì
 
	gvÆue
;

71 
åì
 
	gty≥
;

73 
˝_bödög_Àvñ
 *
	gsc›e
;

74 
	gvÆue_is_öhîôed
 : 1;

75 
	gis_loˇl
 : 1;

80 
GTY
(()Ë
	tcxx_ßved_bödög
 {

82 
åì
 
	gidítifõr
;

84 
cxx_bödög
 *
	gbödög
;

85 
åì
 
	gªÆ_ty≥_vÆue
;

86 } 
	tcxx_ßved_bödög
;

89 
åì
 
idítifõr_ty≥_vÆue
 (tree);

90 
£t_idítifõr_ty≥_vÆue
 (
åì
,Åree);

91 
p›_bödög
 (
åì
,Åree);

92 
p›_bödögs_™d_Àave_sc›e
 ();

93 
åì
 
c⁄°ru˘‹_«me
 (tree);

94 
boﬁ
 
c⁄°ru˘‹_«me_p
 (
åì
,Åree);

97 
	esc›e_köd
 {

98 
	msk_block
 = 0,

103 
	msk_˛ónup
,

106 
	msk_åy
,

107 
	msk_ˇtch
,

108 
	msk_f‹
,

110 
	msk_c⁄d
,

112 
	msk_fun˘i⁄_∑rms
,

113 
	msk_˛ass
,

114 
	msk_sc›ed_íum
,

116 
	msk_«me•a˚
,

118 
	msk_ãm∂©e_∑rms
,

119 
	msk_ãm∂©e_•ec
,

123 
	msk_omp


124 } 
	tsc›e_köd
;

127 
	eèg_sc›e
 {

128 
	mts_cuºít
 = 0,

133 
	mts_globÆ
 = 1,

136 
	mts_wôhö_í˛osög_n⁄_˛ass
 = 2,

140 
	mts_œmbda
 = 3

141 } 
	tèg_sc›e
;

143 
GTY
(()Ë
	t˝_˛ass_bödög
 {

144 
cxx_bödög
 *
	gba£
;

146 
åì
 
	gidítifõr
;

147 } 
	t˝_˛ass_bödög
;

150 
GTY
(()Ë
	t˝_œbñ_bödög
 {

152 
åì
 
	gœbñ
;

154 
åì
 
	g¥ev_vÆue
;

155 } 
	t˝_œbñ_bödög
;

182 
GTY
(()Ë
	g˝_bödög_Àvñ
 {

187 
åì
 
	g«mes
;

190 
åì
 
	g«me•a˚s
;

193 
	gvec
<
	gåì
, 
	gva_gc
> *
	g°©ic_de˛s
;

196 
åì
 
	gusögs
;

200 
åì
 
	gusög_dúe˘ives
;

204 
	gvec
<
	g˝_˛ass_bödög
, 
	gva_gc
> *
	g˛ass_shadowed
;

211 
åì
 
	gty≥_shadowed
;

215 
	gvec
<
	g˝_œbñ_bödög
, 
	gva_gc
> *
	gshadowed_œbñs
;

220 
åì
 
	gblocks
;

224 
åì
 
	gthis_ítôy
;

227 
˝_bödög_Àvñ
 *
	gÀvñ_chaö
;

232 
	gvec
<
	gåì
, 
	gva_gc
> *
	gdód_v¨s_‰om_f‹
;

236 
åì
 
	g°©emít_li°
;

239 
	gbödög_dïth
;

244 
ENUM_BITFIELD
 (
sc›e_köd
Ë
	gköd
 : 4;

248 
BOOL_BITFIELD
 
	gex∂icô_•ec_p
 : 1;

251 
	gkìp
 : 1;

255 
	gm‹e_˛ónups_ok
 : 1;

256 
	ghave_˛ónups
 : 1;

263 
	gdeföög_˛ass_p
 : 1;

270 
	#cuºít_bödög_Àvñ
 \

271 (*(
cfun
 && 
˝_fun˘i⁄_chaö
 && cp_fun˘i⁄_chaö->
bödögs
 \

272 ? &
˝_fun˘i⁄_chaö
->
bödögs
 \

273 : &
sc›e_chaö
->
bödögs
))

	)

277 
	#˛ass_bödög_Àvñ
 
sc›e_chaö
->
˛ass_bödögs


	)

280 
GTY
(()Ë
åì
 
globÆ_«me•a˚
;

281 
GTY
(()Ë
åì
 
globÆ_sc›e_«me
;

286 
GTY
(()Ë
åì
 
globÆ_ty≥_node
;

289 
	#globÆ_sc›e_p
(
SCOPE
) \

290 ((
SCOPE
Ë=
	`NAMESPACE_LEVEL
 (
globÆ_«me•a˚
))

	)

292 
˝_bödög_Àvñ
 *
Àave_sc›e
 ();

293 
boﬁ
 
kït_Àvñ_p
 ();

294 
boﬁ
 
globÆ_bödögs_p
 ();

295 
boﬁ
 
t›Àvñ_bödögs_p
 ();

296 
boﬁ
 
«me•a˚_bödögs_p
 ();

297 
boﬁ
 
loˇl_bödögs_p
 ();

298 
boﬁ
 
ãm∂©e_∑rm_sc›e_p
 ();

299 
sc›e_köd
 
ö√rmo°_sc›e_köd
 ();

300 
˝_bödög_Àvñ
 *
begö_sc›e
 (
sc›e_köd
, 
åì
);

301 
¥öt_bödög_°ack
 ();

302 
push_to_t›_Àvñ
 ();

303 
p›_‰om_t›_Àvñ
 ();

304 
p›_evîythög
 ();

305 
kìp_√xt_Àvñ
 (
boﬁ
);

306 
boﬁ
 
is_™˚°‹
 (
åì
,Åree);

307 
åì
 
push_sc›e
 (tree);

308 
p›_sc›e
 (
åì
);

309 
åì
 
push_ö√r_sc›e
 (tree);

310 
p›_ö√r_sc›e
 (
åì
,Åree);

311 
push_bödög_Àvñ
 (
˝_bödög_Àvñ
 *);

313 
push_«me•a˚
 (
åì
);

314 
p›_«me•a˚
 ();

315 
push_√°ed_«me•a˚
 (
åì
);

316 
p›_√°ed_«me•a˚
 (
åì
);

317 
boﬁ
 
h™dÀ_«me•a˚_©ås
 (
åì
,Åree);

318 
pushÀvñ_˛ass
 ();

319 
p›Àvñ_˛ass
 ();

320 
åì
 
pushde˛_wôh_sc›e
 (åì, 
˝_bödög_Àvñ
 *, 
boﬁ
);

321 
åì
 
lookup_«me_¥e„r_ty≥
 (tree, );

322 
åì
 
lookup_«me_ªÆ
 (åì, , , 
boﬁ
, , );

323 
åì
 
lookup_ty≥_sc›e
 (åì, 
èg_sc›e
);

324 
åì
 
«me•a˚_bödög
 (tree,Åree);

325 
£t_«me•a˚_bödög
 (
åì
,Åree,Åree);

326 
boﬁ
 
hiddí_«me_p
 (
åì
);

327 
åì
 
ªmove_hiddí_«mes
 (tree);

328 
åì
 
lookup_quÆifõd_«me
 (åì,Åªe, 
boﬁ
, bool);

329 
åì
 
lookup_«me_n⁄˛ass
 (tree);

330 
åì
 
lookup_«me_ö√rmo°_n⁄˛ass_Àvñ
 (tree);

331 
boﬁ
 
is_loˇl_exã∫
 (
åì
);

332 
åì
 
lookup_fun˘i⁄_n⁄˛ass
 (åì, 
vec
<åì, 
va_gc
> *, 
boﬁ
);

333 
push_loˇl_bödög
 (
åì
,Åree, );

334 
boﬁ
 
pushde˛_˛ass_Àvñ
 (
åì
);

335 
åì
 
pushde˛_«me•a˚_Àvñ
 (åì, 
boﬁ
);

336 
boﬁ
 
push_˛ass_Àvñ_bödög
 (
åì
,Åree);

337 
åì
 
gëde˛s
 ();

338 
fun˘i⁄_∑rm_dïth
 ();

339 
åì
 
˝_«me•a˚_de˛s
 (tree);

340 
£t_de˛_«me•a˚
 (
åì
,Åªe, 
boﬁ
);

341 
push_de˛_«me•a˚
 (
åì
);

342 
p›_de˛_«me•a˚
 ();

343 
do_«me•a˚_Æüs
 (
åì
,Åree);

344 
do_t›Àvñ_usög_de˛
 (
åì
,Åree,Åree);

345 
do_loˇl_usög_de˛
 (
åì
,Åree,Åree);

346 
åì
 
do_˛ass_usög_de˛
 (tree,Åree);

347 
do_usög_dúe˘ive
 (
åì
);

348 
åì
 
lookup_¨g_dïídít
 (åì,Åªe, 
vec
<åì, 
va_gc
> *);

349 
boﬁ
 
is_assocüãd_«me•a˚
 (
åì
,Åree);

350 
∑r£_usög_dúe˘ive
 (
åì
,Åree);

351 
åì
 
ö√rmo°_n⁄_«me•a˚_vÆue
 (tree);

352 
cxx_bödög
 *
ouãr_bödög
 (
åì
, cxx_bödög *, 
boﬁ
);

353 
˝_emô_debug_öfo_f‹_usög
 (
åì
,Åree);

358 
ölöe
 
boﬁ


359 
	$gë_globÆ_vÆue_if_¥e£¡
 (
åì
 
id
,Åªê*
de˛
)

361 
åì
 
globÆ_vÆue
 = 
	`«me•a˚_bödög
 (
id
, 
globÆ_«me•a˚
);

362 i‡(
globÆ_vÆue
)

363 *
de˛
 = 
globÆ_vÆue
;

364  
globÆ_vÆue
 !
NULL
;

365 
	}
}

369 
ölöe
 
boﬁ


370 
	$is_ty≥«me_©_globÆ_sc›e
 (
åì
 
id
)

372 
åì
 
globÆ_vÆue
 = 
	`«me•a˚_bödög
 (
id
, 
globÆ_«me•a˚
);

374  
globÆ_vÆue
 && 
	`TREE_CODE
 (globÆ_vÆueË=
TYPE_DECL
;

375 
	}
}

	@include/cp/type-utils.h

20 #i‚de‡
GCC_CP_TYPE_UTILS_H


21 
	#GCC_CP_TYPE_UTILS_H


	)

33 
ölöe
 
åì


34 
	$föd_ty≥_ußge
 (
åì
 
t
, 
	$boﬁ
 (*
¥ed
Ë(
c⁄°_åì
))

36 
åì_code
 
code
;

37 i‡(
	`¥ed
 (
t
))

38  
t
;

40 
code
 = 
	`TREE_CODE
 (
t
);

42 i‡(
code
 =
POINTER_TYPE
 || codê=
REFERENCE_TYPE


43 || 
code
 =
PARM_DECL
 || codê=
OFFSET_TYPE


44 || 
code
 =
FUNCTION_TYPE
 || codê=
METHOD_TYPE


45 || 
code
 =
ARRAY_TYPE
)

46  
	`föd_ty≥_ußge
 (
	`TREE_TYPE
 (
t
), 
¥ed
);

48 i‡(
	`TYPE_PTRMEMFUNC_P
 (
t
))

49  
föd_ty≥_ußge


50 (
	`TREE_TYPE
 (
	`TYPE_PTRMEMFUNC_FN_TYPE
 (
t
)), 
¥ed
);

52  
NULL_TREE
;

53 
	}
}

	@include/cppdefault.h

21 #i‚de‡
GCC_CPPDEFAULT_H


22 
	#GCC_CPPDEFAULT_H


	)

34 
	sdeÁu…_ö˛ude


36 c⁄° *c⁄° 
	m‚ame
;

37 c⁄° *c⁄° 
	mcomp⁄ít
;

39 c⁄° 
	m˝lu•lus
;

40 c⁄° 
	mcxx_aw¨e
;

43 c⁄° 
	madd_sy§oŸ
;

45 c⁄° 
	mmu…ûib
;

52 c⁄° 
deÁu…_ö˛ude
 
˝p_ö˛ude_deÁu…s
[];

53 c⁄° 
˝p_GCC_INCLUDE_DIR
[];

54 c⁄° 
size_t
 
˝p_GCC_INCLUDE_DIR_Àn
;

58 c⁄° 
˝p_PREFIX
[];

60 c⁄° 
size_t
 
˝p_PREFIX_Àn
;

63 c⁄° 
˝p_EXEC_PREFIX
[];

66 c⁄° *
gcc_exec_¥efix
;

69 
boﬁ
 
˝p_ªloˇãd
 ();

	@include/cpplib.h

22 #i‚de‡
LIBCPP_CPPLIB_H


23 
	#LIBCPP_CPPLIB_H


	)

25 
	~<sys/ty≥s.h
>

26 
	~"symèb.h
"

27 
	~"löe-m≠.h
"

29 
˝p_ªadî
 
	t˝p_ªadî
;

30 
˝p_buf„r
 
	t˝p_buf„r
;

31 
˝p_›ti⁄s
 
	t˝p_›ti⁄s
;

32 
˝p_tokí
 
	t˝p_tokí
;

33 
˝p_°rög
 
	t˝p_°rög
;

34 
˝p_hashnode
 
	t˝p_hashnode
;

35 
˝p_ma¸o
 
	t˝p_ma¸o
;

36 
˝p_ˇŒbacks
 
	t˝p_ˇŒbacks
;

37 
˝p_dú
 
	t˝p_dú
;

39 
	g™swî
;

40 
	g_˝p_fûe
;

53 
	#TTYPE_TABLE
 \

54 
	`OP
(
EQ
, "=") \

55 
	`OP
(
NOT
, "!") \

56 
	`OP
(
GREATER
, ">") \

57 
	`OP
(
LESS
, "<") \

58 
	`OP
(
PLUS
, "+") \

59 
	`OP
(
MINUS
, "-") \

60 
	`OP
(
MULT
, "*") \

61 
	`OP
(
DIV
, "/") \

62 
	`OP
(
MOD
, "%") \

63 
	`OP
(
AND
, "&") \

64 
	`OP
(
OR
, "|") \

65 
	`OP
(
XOR
, "^") \

66 
	`OP
(
RSHIFT
, ">>") \

67 
	`OP
(
LSHIFT
, "<<") \

69 
	`OP
(
COMPL
, "~") \

70 
	`OP
(
AND_AND
, "&&") \

71 
	`OP
(
OR_OR
, "||") \

72 
	`OP
(
QUERY
, "?") \

73 
	`OP
(
COLON
, ":") \

74 
	`OP
(
COMMA
, ",") \

75 
	`OP
(
OPEN_PAREN
, "(") \

76 
	`OP
(
CLOSE_PAREN
, ")") \

77 
	`TK
(
EOF
, 
NONE
) \

78 
	`OP
(
EQ_EQ
, "==") \

79 
	`OP
(
NOT_EQ
, "!=") \

80 
	`OP
(
GREATER_EQ
, ">=") \

81 
	`OP
(
LESS_EQ
, "<=") \

84 
	`OP
(
PLUS_EQ
, "+=") \

85 
	`OP
(
MINUS_EQ
, "-=") \

87 
	`OP
(
MULT_EQ
, "*=") \

88 
	`OP
(
DIV_EQ
, "/=") \

89 
	`OP
(
MOD_EQ
, "%=") \

90 
	`OP
(
AND_EQ
, "&=") \

91 
	`OP
(
OR_EQ
, "|=") \

92 
	`OP
(
XOR_EQ
, "^=") \

93 
	`OP
(
RSHIFT_EQ
, ">>=") \

94 
	`OP
(
LSHIFT_EQ
, "<<=") \

96 
	`OP
(
HASH
, "#") \

97 
	`OP
(
PASTE
, "##") \

98 
	`OP
(
OPEN_SQUARE
, "[") \

99 
	`OP
(
CLOSE_SQUARE
, "]") \

100 
	`OP
(
OPEN_BRACE
, "{") \

101 
	`OP
(
CLOSE_BRACE
, "}") \

103 
	`OP
(
SEMICOLON
, ";") \

104 
	`OP
(
ELLIPSIS
, "...") \

105 
	`OP
(
PLUS_PLUS
, "++") \

106 
	`OP
(
MINUS_MINUS
, "--") \

107 
	`OP
(
DEREF
, "->") \

108 
	`OP
(
DOT
, ".") \

109 
	`OP
(
SCOPE
, "::") \

110 
	`OP
(
DEREF_STAR
, "->*") \

111 
	`OP
(
DOT_STAR
, ".*") \

112 
	`OP
(
ATSIGN
, "@") \

114 
	`TK
(
NAME
, 
IDENT
) \

115 
	`TK
(
AT_NAME
, 
IDENT
) \

116 
	`TK
(
NUMBER
, 
LITERAL
) \

118 
	`TK
(
CHAR
, 
LITERAL
) \

119 
	`TK
(
WCHAR
, 
LITERAL
) \

120 
	`TK
(
CHAR16
, 
LITERAL
) \

121 
	`TK
(
CHAR32
, 
LITERAL
) \

122 
	`TK
(
OTHER
, 
LITERAL
) \

124 
	`TK
(
STRING
, 
LITERAL
) \

125 
	`TK
(
WSTRING
, 
LITERAL
) \

126 
	`TK
(
STRING16
, 
LITERAL
) \

127 
	`TK
(
STRING32
, 
LITERAL
) \

128 
	`TK
(
UTF8STRING
, 
LITERAL
) \

129 
	`TK
(
OBJC_STRING
, 
LITERAL
) \

130 
	`TK
(
HEADER_NAME
, 
LITERAL
) \

132 
	`TK
(
CHAR_USERDEF
, 
LITERAL
) \

133 
	`TK
(
WCHAR_USERDEF
, 
LITERAL
) \

134 
	`TK
(
CHAR16_USERDEF
, 
LITERAL
) \

135 
	`TK
(
CHAR32_USERDEF
, 
LITERAL
) \

136 
	`TK
(
STRING_USERDEF
, 
LITERAL
) \

137 
	`TK
(
WSTRING_USERDEF
, 
LITERAL
) \

138 
	`TK
(
STRING16_USERDEF
, 
LITERAL
) \

139 
	`TK
(
STRING32_USERDEF
, 
LITERAL
) \

140 
	`TK
(
UTF8STRING_USERDEF
,
LITERAL
) \

142 
	`TK
(
COMMENT
, 
LITERAL
) \

144 
	`TK
(
MACRO_ARG
, 
NONE
) \

145 
	`TK
(
PRAGMA
, 
NONE
) \

146 
	`TK
(
PRAGMA_EOL
, 
NONE
) \

147 
	`TK
(
PADDING
, 
NONE
Ë

	)

149 
	#OP
(
e
, 
s
Ë
CPP_
 ##É,

	)

150 
	#TK
(
e
, 
s
Ë
CPP_
 ##É,

	)

151 
	e˝p_ây≥


153 
TTYPE_TABLE


154 
	mN_TTYPES
,

157 
	mCPP_LAST_EQ
 = 
CPP_LSHIFT
,

158 
	mCPP_FIRST_DIGRAPH
 = 
CPP_HASH
,

159 
	mCPP_LAST_PUNCTUATOR

CPP_ATSIGN
,

160 
	mCPP_LAST_CPP_OP
 = 
CPP_LESS_EQ


162 #unde‡
OP


163 #unde‡
TK


166 
	ec_œng
 {
	mCLK_GNUC89
 = 0, 
	mCLK_GNUC99
, 
	mCLK_GNUC11
,

167 
	mCLK_STDC89
, 
	mCLK_STDC94
, 
	mCLK_STDC99
, 
	mCLK_STDC11
,

168 
	mCLK_GNUCXX
, 
	mCLK_CXX98
, 
	mCLK_GNUCXX11
, 
	mCLK_CXX11
,

169 
	mCLK_GNUCXX1Y
, 
	mCLK_CXX1Y
, 
	mCLK_ASM
};

172 
GTY
(()Ë
	g˝p_°rög
 {

173 
	gÀn
;

174 c⁄° *
	gãxt
;

178 
	#PREV_WHITE
 (1 << 0Ë

	)

179 
	#DIGRAPH
 (1 << 1Ë

	)

180 
	#STRINGIFY_ARG
 (1 << 2Ë

	)

181 
	#PASTE_LEFT
 (1 << 3Ë

	)

182 
	#NAMED_OP
 (1 << 4Ë

	)

183 
	#NO_EXPAND
 (1 << 5Ë

	)

184 
	#BOL
 (1 << 6Ë

	)

185 
	#PURE_ZERO
 (1 << 7Ë

	)

187 
	#SP_DIGRAPH
 (1 << 8Ë

	)

188 
	#SP_PREV_WHITE
 (1 << 9Ë

	)

194 
	e˝p_tokí_Êd_köd
 {

195 
	mCPP_TOKEN_FLD_NODE
,

196 
	mCPP_TOKEN_FLD_SOURCE
,

197 
	mCPP_TOKEN_FLD_STR
,

198 
	mCPP_TOKEN_FLD_ARG_NO
,

199 
	mCPP_TOKEN_FLD_TOKEN_NO
,

200 
	mCPP_TOKEN_FLD_PRAGMA
,

201 
	mCPP_TOKEN_FLD_NONE


205 
GTY
(()Ë
	g˝p_ma¸o_¨g
 {

207 
	g¨g_no
;

211 
GTY
(()Ë
	g˝p_idítifõr
 {

213 
˝p_hashnode
 *

214 
GTY
 ((
√°ed_±r
 (
åì_node
,

217 
	gnode
;

222 
GTY
(()Ë
	g˝p_tokí
 {

223 
sour˚_loˇti⁄
 
	g§c_loc
;

224 
ENUM_BITFIELD
(
˝p_ây≥
Ë
	gty≥
 : 
CHAR_BIT
;

225 
	gÊags
;

227 
	u˝p_tokí_u


230 
˝p_idítifõr
 
GTY
 ((
èg
 ("CPP_TOKEN_FLD_NODE"))Ë
	gnode
;

233 
˝p_tokí
 * 
GTY
 ((
èg
 ("CPP_TOKEN_FLD_SOURCE"))Ë
	gsour˚
;

236 
˝p_°rög
 
GTY
 ((
èg
 ("CPP_TOKEN_FLD_STR"))Ë
	g°r
;

239 
˝p_ma¸o_¨g
 
GTY
 ((
èg
 ("CPP_TOKEN_FLD_ARG_NO"))Ë
	gma¸o_¨g
;

243 
GTY
 ((
èg
 ("CPP_TOKEN_FLD_TOKEN_NO"))Ë
	gtokí_no
;

246 
GTY
 ((
èg
 ("CPP_TOKEN_FLD_PRAGMA"))Ë
	g¥agma
;

247 } 
GTY
 ((
desc
 ("˝p_tokí_vÆ_ödex (&%1)"))Ë
	gvÆ
;

251 
˝p_tokí_Êd_köd
 
˝p_tokí_vÆ_ödex
 (c⁄° 
˝p_tokí
 *
tok
);

261 #i‡
CHAR_BIT
 * 
SIZEOF_INT
 >= 32

262 
	#CPPCHAR_SIGNED_T
 

	)

263 #ñi‡
CHAR_BIT
 * 
SIZEOF_LONG
 >= 32

264 
	#CPPCHAR_SIGNED_T
 

	)

268 
	tCPPCHAR_SIGNED_T
 
	t˝pch¨_t
;

269 
CPPCHAR_SIGNED_T
 
	t˝pch¨_sig√d_t
;

272 
	e˝p_dïs_°yÀ
 { 
	mDEPS_NONE
 = 0, 
	mDEPS_USER
, 
	mDEPS_SYSTEM
 };

275 
	e˝p_n‹mÆize_Àvñ
 {

277 
	mn‹mÆized_KC
 = 0,

279 
	mn‹mÆized_C
,

282 
	mn‹mÆized_idítifõr_C
,

284 
	mn‹mÆized_n⁄e


289 
	s˝p_›ti⁄s


292 
	mèb°›
;

295 
c_œng
 
	mœng
;

298 
	m˝lu•lus
;

301 
	m˝lu•lus_commíts
;

306 
	mobjc
;

309 
	mdisˇrd_commíts
;

313 
	mdisˇrd_commíts_ö_ma¸o_exp
;

316 
	måigøphs
;

319 
	mdigøphs
;

322 
	mexãnded_numbîs
;

325 
	mulôîÆs
;

329 
	mæôîÆs
;

332 
	m¥öt_ö˛ude_«mes
;

335 
	m˝p_w¨n_dïªˇãd
;

338 
	mw¨n_commíts
;

341 
	mw¨n_d©e_time
;

345 
	mw¨n_missög_ö˛ude_dús
;

348 
	mw¨n_åigøphs
;

351 
	mw¨n_mu…ich¨
;

355 
	m˝p_w¨n_åadôi⁄Æ
;

358 
	m˝p_w¨n_l⁄g_l⁄g
;

361 
	mw¨n_ídif_œbñs
;

365 
	mw¨n_num_sign_ch™ge
;

369 
	mw¨n_v¨üdic_ma¸os
;

373 
	mw¨n_buûtö_ma¸o_ªdeföed
;

377 
	mªm≠
;

380 
	mdﬁœrs_ö_idít
;

383 
	mexãnded_idítifõrs
;

387 
	mw¨n_dﬁœrs
;

390 
	mw¨n_undef
;

393 
	mw¨n_unu£d_ma¸os
;

396 
	mc99
;

399 
	m°d
;

402 
	m˝p_≥d™tic
;

406 
	m¥ïro˚s£d
;

410 
	mdebug
;

418 
	måack_ma¸o_ex∑nsi⁄
;

421 
	m›î©‹_«mes
;

424 
	mw¨n_cxx_›î©‹_«mes
;

427 
	måadôi⁄Æ
;

430 
	mu£r_lôîÆs
;

434 
	mw¨n_lôîÆ_suffix
;

438 
	mext_numîic_lôîÆs
;

442 
	mc11_idítifõrs
;

445 
	mbö¨y_c⁄°™ts
;

448 
	mdigô_£∑øt‹s
;

451 c⁄° *
	m«ºow_ch¨£t
;

454 c⁄° *
	mwide_ch¨£t
;

457 c⁄° *
	möput_ch¨£t
;

461 
˝p_n‹mÆize_Àvñ
 
	mw¨n_n‹mÆize
;

464 
boﬁ
 
	mw¨n_övÆid_pch
;

467 
boﬁ
 
	mª°‹e_pch_dïs
;

473 
˝p_dïs_°yÀ
 
	m°yÀ
;

476 
boﬁ
 
	mmissög_fûes
;

480 
boﬁ
 
	mph⁄y_èrgës
;

483 
boﬁ
 
	mign‹e_maö_fûe
;

487 
boﬁ
 
	m√ed_¥ïro˚ss‹_ouçut
;

488 } 
	mdïs
;

494 
size_t
 
	m¥ecisi⁄
, 
	mch¨_¥ecisi⁄
, 
	möt_¥ecisi⁄
, 
	mwch¨_¥ecisi⁄
;

497 
boﬁ
 
	munsig√d_ch¨
, 
	munsig√d_wch¨
;

501 
boﬁ
 
	mbyãs_big_ídün
;

504 
	m°dc_0_ö_sy°em_hódîs
;

507 
boﬁ
 
	mdúe˘ives_⁄ly
;

510 
boﬁ
 
	mˇn⁄iˇl_sy°em_hódîs
;

519 c⁄° *(*
	tmissög_hódî_cb
)(
	t˝p_ªadî
 *, c⁄° *
	thódî
, 
	t˝p_dú
 **);

522 
	s˝p_ˇŒbacks


525 (*
	mlöe_ch™ge
Ë(
	m˝p_ªadî
 *, c⁄° 
	m˝p_tokí
 *, );

531 (*
	mfûe_ch™ge
Ë(
	m˝p_ªadî
 *, c⁄° 
	mlöe_m≠
 *);

533 (*
	mdú_ch™ge
Ë(
	m˝p_ªadî
 *, const *);

534 (*
	mö˛ude
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, const *,

535 c⁄° *, , c⁄° 
	m˝p_tokí
 **);

536 (*
	mdeföe
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, 
	m˝p_hashnode
 *);

537 (*
	mundef
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, 
	m˝p_hashnode
 *);

538 (*
	midít
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, c⁄° 
	m˝p_°rög
 *);

539 (*
	mdef_¥agma
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
);

540 (*
	mvÆid_pch
Ë(
	m˝p_ªadî
 *, const *, );

541 (*
	mªad_pch
Ë(
	m˝p_ªadî
 *, const *, , const *);

542 
missög_hódî_cb
 
	mmissög_hódî
;

546 
	m˝p_hashnode
 * (*
	mma¸o_to_ex∑nd
Ë(
	m˝p_ªadî
 *, c⁄° 
	m˝p_tokí
 *);

550 
boﬁ
 (*
îr‹
Ë(
	m˝p_ªadî
 *, , , 
	msour˚_loˇti⁄
, ,

551 c⁄° *, 
	mva_li°
 *)

552 
ATTRIBUTE_FPTR_PRINTF
(6,0);

556 (*
	mu£d_deföe
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, 
	m˝p_hashnode
 *);

557 (*
	mu£d_undef
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, 
	m˝p_hashnode
 *);

560 (*
	mbef‹e_deföe
Ë(
	m˝p_ªadî
 *);

563 (*
	mu£d
Ë(
	m˝p_ªadî
 *, 
	msour˚_loˇti⁄
, 
	m˝p_hashnode
 *);

566 
boﬁ
 (*
u£r_buûtö_ma¸o
Ë(
	m˝p_ªadî
 *, 
	m˝p_hashnode
 *);

569 #ifde‡
VMS


570 
	#INO_T_CPP
 
öo_t
 
öo
[3]

	)

572 
	#INO_T_CPP
 
öo_t
 
öo


	)

576 
	s˝p_dú


579 
˝p_dú
 *
	m√xt
;

582 *
	m«me
;

583 
	mÀn
;

587 
	msy•
;

590 
boﬁ
 
	mu£r_suµlõd_p
;

594 *
	mˇn⁄iˇl_«me
;

598 c⁄° **
	m«me_m≠
;

604 *(*
	mc⁄°ru˘
Ë(c⁄° *
	mhódî
, 
˝p_dú
 *
	mdú
);

608 
	mINO_T_CPP
;

609 
dev_t
 
	mdev
;

625 
	#NODE_OPERATOR
 (1 << 0Ë

	)

626 
	#NODE_POISONED
 (1 << 1Ë

	)

627 
	#NODE_BUILTIN
 (1 << 2Ë

	)

628 
	#NODE_DIAGNOSTIC
 (1 << 3Ë

	)

629 
	#NODE_WARN
 (1 << 4Ë

	)

630 
	#NODE_DISABLED
 (1 << 5Ë

	)

631 
	#NODE_MACRO_ARG
 (1 << 6Ë

	)

632 
	#NODE_USED
 (1 << 7Ë

	)

633 
	#NODE_CONDITIONAL
 (1 << 8Ë

	)

634 
	#NODE_WARN_OPERATOR
 (1 << 9Ë

	)

637 
	enode_ty≥


639 
	mNT_VOID
 = 0,

640 
	mNT_MACRO
,

641 
	mNT_ASSERTION


646 
	e˝p_buûtö_ty≥


648 
	mBT_SPECLINE
 = 0,

649 
	mBT_DATE
,

650 
	mBT_FILE
,

651 
	mBT_BASE_FILE
,

652 
	mBT_INCLUDE_LEVEL
,

653 
	mBT_TIME
,

654 
	mBT_STDC
,

655 
	mBT_PRAGMA
,

656 
	mBT_TIMESTAMP
,

657 
	mBT_COUNTER
,

658 
	mBT_FIRST_USER
,

659 
	mBT_LAST_USER
 = 
BT_FIRST_USER
 + 31

662 
	#CPP_HASHNODE
(
HNODE
Ë((
˝p_hashnode
 *Ë(HNODE))

	)

663 
	#HT_NODE
(
NODE
Ë((
ht_idítifõr
 *Ë(NODE))

	)

664 
	#NODE_LEN
(
NODE
Ë
	`HT_LEN
 (&(NODE)->
idít
)

	)

665 
	#NODE_NAME
(
NODE
Ë
	`HT_STR
 (&(NODE)->
idít
)

	)

670 
	mNTV_MACRO
,

671 
	mNTV_ANSWER
,

672 
	mNTV_BUILTIN
,

673 
	mNTV_ARGUMENT
,

674 
	mNTV_NONE


677 
	#CPP_HASHNODE_VALUE_IDX
(
HNODE
) \

678 ((
HNODE
.
Êags
 & 
NODE_MACRO_ARG
Ë? 
NTV_ARGUMENT
 \

679 : 
HNODE
.
ty≥
 =
NT_MACRO
 ? ((HNODE.
Êags
 & 
NODE_BUILTIN
) \

680 ? 
NTV_BUILTIN
 : 
NTV_MACRO
) \

681 : 
HNODE
.
ty≥
 =
NT_ASSERTION
 ? 
NTV_ANSWER
 \

682 : 
NTV_NONE
)

	)

688 
GTY
(()Ë
	g_˝p_hashnode_vÆue
 {

690 
˝p_ma¸o
 * 
GTY
((
èg
 ("NTV_MACRO"))Ë
	gma¸o
;

692 
™swî
 * 
GTY
 ((
èg
 ("NTV_ANSWER"))Ë
	g™swîs
;

694 
˝p_buûtö_ty≥
 
GTY
 ((
èg
 ("NTV_BUILTIN"))Ë
	gbuûtö
;

696 
GTY
 ((
èg
 ("NTV_ARGUMENT"))Ë
	g¨g_ödex
;

699 
GTY
(()Ë
	g˝p_hashnode
 {

700 
ht_idítifõr
 
	gidít
;

701 
	gis_dúe˘ive
 : 1;

702 
	gdúe˘ive_ödex
 : 7;

705 
	grid_code
;

706 
ENUM_BITFIELD
(
node_ty≥
Ë
	gty≥
 : 6;

707 
	gÊags
 : 10;

709 
_˝p_hashnode_vÆue
 
GTY
 ((
desc
 ("CPP_HASHNODE_VALUE_IDX (%1)"))Ë
	gvÆue
;

718 
˝p_ªadî
 *
˝p_¸óã_ªadî
 (
c_œng
, 
ht
 *,

719 
löe_m≠s
 *);

723 
˝p_£t_löe_m≠
 (
˝p_ªadî
 *, 
löe_m≠s
 *);

727 
˝p_£t_œng
 (
˝p_ªadî
 *, 
c_œng
);

730 
˝p_£t_ö˛ude_chaös
 (
˝p_ªadî
 *, 
˝p_dú
 *, cpp_dir *, );

737 
˝p_›ti⁄s
 *
˝p_gë_›ti⁄s
 (
˝p_ªadî
 *);

738 
˝p_ˇŒbacks
 *
˝p_gë_ˇŒbacks
 (
˝p_ªadî
 *);

739 
˝p_£t_ˇŒbacks
 (
˝p_ªadî
 *, 
˝p_ˇŒbacks
 *);

740 
dïs
 *
˝p_gë_dïs
 (
˝p_ªadî
 *);

747 c⁄° *
˝p_ªad_maö_fûe
 (
˝p_ªadî
 *, const *);

751 
˝p_öô_•ecül_buûtös
 (
˝p_ªadî
 *);

754 
˝p_öô_buûtös
 (
˝p_ªadî
 *, );

758 
˝p_po°_›ti⁄s
 (
˝p_ªadî
 *);

761 
˝p_öô_ic⁄v
 (
˝p_ªadî
 *);

766 
˝p_föish
 (
˝p_ªadî
 *, 
FILE
 *
dïs_°ªam
);

770 
˝p_de°roy
 (
˝p_ªadî
 *);

772 
˝p_tokí_Àn
 (c⁄° 
˝p_tokí
 *);

773 *
˝p_tokí_as_ãxt
 (
˝p_ªadî
 *, c⁄° 
˝p_tokí
 *);

774 *
˝p_•ñl_tokí
 (
˝p_ªadî
 *, c⁄° 
˝p_tokí
 *,

775 *, 
boﬁ
);

776 
˝p_ªgi°î_¥agma
 (
˝p_ªadî
 *, const *, const *,

777 (*Ë(
˝p_ªadî
 *), 
boﬁ
);

778 
	`˝p_ªgi°î_de„ºed_¥agma
 (
˝p_ªadî
 *, const *,

779 c⁄° *, , 
boﬁ
, bool);

780 
	`˝p_avoid_∑°e
 (
˝p_ªadî
 *, c⁄° 
˝p_tokí
 *,

781 c⁄° 
˝p_tokí
 *);

782 c⁄° 
˝p_tokí
 *
	`˝p_gë_tokí
 (
˝p_ªadî
 *);

783 c⁄° 
˝p_tokí
 *
	`˝p_gë_tokí_wôh_loˇti⁄
 (
˝p_ªadî
 *,

784 
sour˚_loˇti⁄
 *);

785 c⁄° *
	`˝p_ma¸o_deföôi⁄
 (
˝p_ªadî
 *,

786 
˝p_hashnode
 *);

787 
	`_˝p_backup_tokís
 (
˝p_ªadî
 *, );

788 c⁄° 
˝p_tokí
 *
	`˝p_≥ek_tokí
 (
˝p_ªadî
 *, );

791 
˝pch¨_t
 
	`˝p_öãΩªt_ch¨c⁄°
 (
˝p_ªadî
 *, c⁄° 
˝p_tokí
 *,

794 
boﬁ
 
	`˝p_öãΩªt_°rög
 (
˝p_ªadî
 *,

795 c⁄° 
˝p_°rög
 *, 
size_t
,

796 
˝p_°rög
 *, 
˝p_ây≥
);

797 
boﬁ
 
	`˝p_öãΩªt_°rög_nŸøn¶©e
 (
˝p_ªadî
 *,

798 c⁄° 
˝p_°rög
 *, 
size_t
,

799 
˝p_°rög
 *, 
˝p_ây≥
);

802 
˝pch¨_t
 
	`˝p_ho°_to_exec_ch¨£t
 (
˝p_ªadî
 *, cppchar_t);

806 
	`˝p_deföe
 (
˝p_ªadî
 *, const *);

807 
	$˝p_deföe_f‹m©ãd
 (
˝p_ªadî
 *
pfûe
,

808 c⁄° *
fmt
, ...Ë
ATTRIBUTE_PRINTF_2
;

809 
	`˝p_as£π
 (
˝p_ªadî
 *, const *);

810 
	`˝p_undef
 (
˝p_ªadî
 *, const *);

811 
	`˝p_u«s£π
 (
˝p_ªadî
 *, const *);

814 
	`˝p_undef_Æl
 (
˝p_ªadî
 *);

816 
˝p_buf„r
 *
	`˝p_push_buf„r
 (
˝p_ªadî
 *, const *,

817 
size_t
, );

818 
	`˝p_deföed
 (
˝p_ªadî
 *, const *, );

822 
	tHOST_WIDE_INT
 
	t˝p_num_∑π
;

823 
˝p_num
 
	t˝p_num
;

824 
	s˝p_num


826 
˝p_num_∑π
 
high
;

827 
˝p_num_∑π
 
low
;

828 
boﬁ
 
unsig√dp
;

829 
boﬁ
 
ovîÊow
;

839 
	#CPP_N_CATEGORY
 0x000F

	)

840 
	#CPP_N_INVALID
 0x0000

	)

841 
	#CPP_N_INTEGER
 0x0001

	)

842 
	#CPP_N_FLOATING
 0x0002

	)

844 
	#CPP_N_WIDTH
 0x00F0

	)

845 
	#CPP_N_SMALL
 0x0010

	)

846 
	#CPP_N_MEDIUM
 0x0020

	)

847 
	#CPP_N_LARGE
 0x0040

	)

850 
	#CPP_N_WIDTH_MD
 0xF0000

	)

851 
	#CPP_N_MD_W
 0x10000

	)

852 
	#CPP_N_MD_Q
 0x20000

	)

854 
	#CPP_N_RADIX
 0x0F00

	)

855 
	#CPP_N_DECIMAL
 0x0100

	)

856 
	#CPP_N_HEX
 0x0200

	)

857 
	#CPP_N_OCTAL
 0x0400

	)

858 
	#CPP_N_BINARY
 0x0800

	)

860 
	#CPP_N_UNSIGNED
 0x1000

	)

861 
	#CPP_N_IMAGINARY
 0x2000

	)

862 
	#CPP_N_DFLOAT
 0x4000

	)

863 
	#CPP_N_DEFAULT
 0x8000

	)

865 
	#CPP_N_FRACT
 0x100000

	)

866 
	#CPP_N_ACCUM
 0x200000

	)

868 
	#CPP_N_USERDEF
 0x1000000

	)

872 
	`˝p_˛assify_numbî
 (
˝p_ªadî
 *, c⁄° 
˝p_tokí
 *,

873 c⁄° **, 
sour˚_loˇti⁄
);

876 
	`˝p_öãΩªt_Êﬂt_suffix
 (
˝p_ªadî
 *, const *,

877 
size_t
);

880 
	`˝p_öãΩªt_öt_suffix
 (
˝p_ªadî
 *, const *,

881 
size_t
);

884 
˝p_num
 
	`˝p_öãΩªt_öãgî
 (
˝p_ªadî
 *, c⁄° 
˝p_tokí
 *,

889 
˝p_num
 
	`˝p_num_sign_exãnd
 (˝p_num, 
size_t
);

897 
CPP_DL_WARNING
 = 0,

899 
CPP_DL_WARNING_SYSHDR
,

901 
CPP_DL_PEDWARN
,

903 
CPP_DL_ERROR
,

906 
CPP_DL_ICE
,

908 
CPP_DL_NOTE
,

910 
CPP_DL_FATAL


916 
CPP_W_NONE
 = 0,

917 
CPP_W_DEPRECATED
,

918 
CPP_W_COMMENTS
,

919 
CPP_W_MISSING_INCLUDE_DIRS
,

920 
CPP_W_TRIGRAPHS
,

921 
CPP_W_MULTICHAR
,

922 
CPP_W_TRADITIONAL
,

923 
CPP_W_LONG_LONG
,

924 
CPP_W_ENDIF_LABELS
,

925 
CPP_W_NUM_SIGN_CHANGE
,

926 
CPP_W_VARIADIC_MACROS
,

927 
CPP_W_BUILTIN_MACRO_REDEFINED
,

928 
CPP_W_DOLLARS
,

929 
CPP_W_UNDEF
,

930 
CPP_W_UNUSED_MACROS
,

931 
CPP_W_CXX_OPERATOR_NAMES
,

932 
CPP_W_NORMALIZE
,

933 
CPP_W_INVALID_PCH
,

934 
CPP_W_WARNING_DIRECTIVE
,

935 
CPP_W_LITERAL_SUFFIX
,

936 
CPP_W_DATE_TIME


940 
boﬁ
 
	$˝p_îr‹
 (
˝p_ªadî
 *, , c⁄° *
msgid
, ...)

941 
ATTRIBUTE_PRINTF_3
;

942 
boﬁ
 
	$˝p_w¨nög
 (
˝p_ªadî
 *, , c⁄° *
msgid
, ...)

943 
ATTRIBUTE_PRINTF_3
;

944 
boﬁ
 
	$˝p_≥dw¨nög
 (
˝p_ªadî
 *, , c⁄° *
msgid
, ...)

945 
ATTRIBUTE_PRINTF_3
;

946 
boﬁ
 
	$˝p_w¨nög_syshdr
 (
˝p_ªadî
 *, , c⁄° *
msgid
, ...)

947 
ATTRIBUTE_PRINTF_3
;

951 
boﬁ
 
	`˝p_î∫o
 (
˝p_ªadî
 *, , c⁄° *
msgid
);

956 
boﬁ
 
	$˝p_îr‹_wôh_löe
 (
˝p_ªadî
 *, , 
sour˚_loˇti⁄
,

957 , c⁄° *
msgid
, ...)

958 
ATTRIBUTE_PRINTF_5
;

959 
boﬁ
 
	$˝p_w¨nög_wôh_löe
 (
˝p_ªadî
 *, , 
sour˚_loˇti⁄
,

960 , c⁄° *
msgid
, ...)

961 
ATTRIBUTE_PRINTF_5
;

962 
boﬁ
 
	$˝p_≥dw¨nög_wôh_löe
 (
˝p_ªadî
 *, , 
sour˚_loˇti⁄
,

963 , c⁄° *
msgid
, ...)

964 
ATTRIBUTE_PRINTF_5
;

965 
boﬁ
 
	$˝p_w¨nög_wôh_löe_syshdr
 (
˝p_ªadî
 *, , 
sour˚_loˇti⁄
,

966 , c⁄° *
msgid
, ...)

967 
ATTRIBUTE_PRINTF_5
;

970 
	`˝p_ideq
 (c⁄° 
˝p_tokí
 *, const *);

971 
	`˝p_ouçut_löe
 (
˝p_ªadî
 *, 
FILE
 *);

972 *
	`˝p_ouçut_löe_to_°rög
 (
˝p_ªadî
 *,

974 
	`˝p_ouçut_tokí
 (c⁄° 
˝p_tokí
 *, 
FILE
 *);

975 c⁄° *
	`˝p_ty≥2«me
 (
˝p_ây≥
, 
Êags
);

981 
˝pch¨_t
 
	`˝p_∑r£_esˇ≥
 (
˝p_ªadî
 *, c⁄° ** 
p°r
,

982 c⁄° *
limô
, 
wide
);

990 *
commít
;

993 
sour˚_loˇti⁄
 
¶oc
;

994 } 
	t˝p_commít
;

1001 
˝p_commít
 *
íåõs
;

1004 
cou¡
;

1007 
Æloˇãd
;

1008 } 
	t˝p_commít_èbÀ
;

1012 
˝p_commít_èbÀ
 *
	`˝p_gë_commíts
 (
˝p_ªadî
 *);

1018 
˝p_hashnode
 *
	`˝p_lookup
 (
˝p_ªadî
 *, const *,

1021 (*
	t˝p_cb
Ë(
	t˝p_ªadî
 *, 
	t˝p_hashnode
 *, *);

1022 
	`˝p_f‹Æl_idítifõrs
 (
˝p_ªadî
 *, 
˝p_cb
, *);

1025 
	`˝p_sˇn_noouçut
 (
˝p_ªadî
 *);

1026 
	`˝p_sys_ma¸o_p
 (
˝p_ªadî
 *);

1027 *
	`˝p_quŸe_°rög
 (*, const *,

1031 
boﬁ
 
	`˝p_ö˛uded
 (
˝p_ªadî
 *, const *);

1032 
boﬁ
 
	`˝p_ö˛uded_bef‹e
 (
˝p_ªadî
 *, c⁄° *, 
sour˚_loˇti⁄
);

1033 
	`˝p_make_sy°em_hódî
 (
˝p_ªadî
 *, , );

1034 
boﬁ
 
	`˝p_push_ö˛ude
 (
˝p_ªadî
 *, const *);

1035 
boﬁ
 
	`˝p_push_deÁu…_ö˛ude
 (
˝p_ªadî
 *, const *);

1036 
	`˝p_ch™ge_fûe
 (
˝p_ªadî
 *, 
lc_ªas⁄
, const *);

1037 c⁄° *
	`˝p_gë_∑th
 (
_˝p_fûe
 *);

1038 
˝p_dú
 *
	`˝p_gë_dú
 (
_˝p_fûe
 *);

1039 
˝p_buf„r
 *
	`˝p_gë_buf„r
 (
˝p_ªadî
 *);

1040 
_˝p_fûe
 *
	`˝p_gë_fûe
 (
˝p_buf„r
 *);

1041 
˝p_buf„r
 *
	`˝p_gë_¥ev
 (cpp_buffer *);

1042 
	`˝p_˛ór_fûe_ˇche
 (
˝p_ªadî
 *);

1045 
ßve_ma¸o_d©a
;

1046 
	`˝p_ßve_°©e
 (
˝p_ªadî
 *, 
FILE
 *);

1047 
	`˝p_wrôe_pch_dïs
 (
˝p_ªadî
 *, 
FILE
 *);

1048 
	`˝p_wrôe_pch_°©e
 (
˝p_ªadî
 *, 
FILE
 *);

1049 
	`˝p_vÆid_°©e
 (
˝p_ªadî
 *, const *, );

1050 
	`˝p_¥ï¨e_°©e
 (
˝p_ªadî
 *, 
ßve_ma¸o_d©a
 **);

1051 
	`˝p_ªad_°©e
 (
˝p_ªadî
 *, c⁄° *, 
FILE
 *,

1052 
ßve_ma¸o_d©a
 *);

1055 
	`˝p_f‹˚_tokí_loˇti⁄s
 (
˝p_ªadî
 *, 
sour˚_loˇti⁄
 *);

1056 
	`˝p_°›_f‹cög_tokí_loˇti⁄s
 (
˝p_ªadî
 *);

1059 
˝p_ây≥
 
˝p_u£rdef_°rög_ªmove_ty≥


1060 (
˝p_ây≥
 
ty≥
);

1061 
˝p_ây≥
 
˝p_u£rdef_°rög_add_ty≥


1062 (
˝p_ây≥
 
ty≥
);

1063 
˝p_ây≥
 
˝p_u£rdef_ch¨_ªmove_ty≥


1064 (
˝p_ây≥
 
ty≥
);

1065 
˝p_ây≥
 
˝p_u£rdef_ch¨_add_ty≥


1066 (
˝p_ây≥
 
ty≥
);

1067 
boﬁ
 
˝p_u£rdef_°rög_p


1068 (
˝p_ây≥
 
ty≥
);

1069 
boﬁ
 
˝p_u£rdef_ch¨_p


1070 (
˝p_ây≥
 
ty≥
);

1071 c⁄° * 
˝p_gë_u£rdef_suffix


1072 (c⁄° 
˝p_tokí
 *);

	@include/debug.h

18 #i‚de‡
GCC_DEBUG_H


19 
	#GCC_DEBUG_H


	)

24 
	sgcc_debug_hooks


28 (* 
	möô
Ë(c⁄° *
	mmaö_fûíame
);

31 (* 
	mföish
Ë(c⁄° *
	mmaö_fûíame
);

35 (* 
	mas£mbly_°¨t
) ();

38 (* 
	mdeföe
Ë(
	mlöe
, c⁄° *
	mãxt
);

41 (* 
	mundef
Ë(
	mlöe
, c⁄° *
	mma¸o
);

45 (* 
	m°¨t_sour˚_fûe
Ë(
	mlöe
, c⁄° *
	mfûe
);

49 (* 
	míd_sour˚_fûe
Ë(
	mlöe
);

53 (* 
	mbegö_block
Ë(
	mlöe
, 
	mn
);

56 (* 
	míd_block
Ë(
	mlöe
, 
	mn
);

63 
boﬁ
 (* 
ign‹e_block
Ë(
	mc⁄°_åì
);

66 (* 
	msour˚_löe
Ë(
	mlöe
, c⁄° *
	mfûe
,

67 
	mdis¸imö©‹
, 
boﬁ
 
	mis_°mt
);

71 (* 
	mbegö_¥ﬁogue
Ë(
	mlöe
, c⁄° *
	mfûe
);

75 (* 
	míd_¥ﬁogue
Ë(
	mlöe
, c⁄° *
	mfûe
);

78 (* 
	mbegö_ïûogue
Ë(
	mlöe
, c⁄° *
	mfûe
);

81 (* 
	míd_ïûogue
Ë(
	mlöe
, c⁄° *
	mfûe
);

84 (* 
	mbegö_fun˘i⁄
Ë(
åì
 
	mde˛
);

87 (* 
	míd_fun˘i⁄
Ë(
	mlöe
);

93 (* 
	mfun˘i⁄_de˛
Ë(
åì
 
	mde˛
);

97 (* 
	mglobÆ_de˛
Ë(
åì
 
	mde˛
);

105 (* 
	mty≥_de˛
Ë(
åì
 
	mde˛
, 
	mloˇl
);

108 (* 
	mimp‹ãd_moduÀ_‹_de˛
Ë(
åì
 
	mde˛
,Åªê
	m«me
,

109 
åì
 
	mc⁄ãxt
, 
boﬁ
 
	mchûd
);

113 (* 
	mde„ºed_ölöe_fun˘i⁄
Ë(
åì
 
	mde˛
);

118 (* 
	mouéöög_ölöe_fun˘i⁄
Ë(
åì
 
	mde˛
);

122 (* 
	mœbñ
Ë(
	mπx
);

126 (* 
	mh™dÀ_pch
) ();

129 (* 
	mv¨_loˇti⁄
Ë(
	mπx
);

133 (* 
	mswôch_ãxt_£˘i⁄
) ();

137 (* 
	m£t_«me
Ë(
	måì
,Åree);

141 
	m°¨t_íd_maö_sour˚_fûe
;

145 
	måì_ty≥_symèb_fõld
;

148 c⁄° 
gcc_debug_hooks
 *
debug_hooks
;

151 
debug_nŸhög_void
 ();

152 
debug_nŸhög_ch¨°¨
 (const *);

153 
debug_nŸhög_öt_ch¨°¨
 (, const *);

154 
debug_nŸhög_öt_ch¨°¨_öt_boﬁ
 (, const *,

155 , 
boﬁ
);

156 
debug_nŸhög_öt
 ();

157 
debug_nŸhög_öt_öt
 (, );

158 
debug_nŸhög_åì
 (
åì
);

159 
debug_nŸhög_åì_åì
 (
åì
,Åree);

160 
debug_nŸhög_åì_öt
 (
åì
, );

161 
debug_nŸhög_åì_åì_åì_boﬁ
 (
åì
,Åªe,Åªe, 
boﬁ
);

162 
boﬁ
 
debug_åue_c⁄°_åì
 (
c⁄°_åì
);

163 
debug_nŸhög_πx
 (
πx
);

164 
debug_nŸhög_πx_πx
 (
πx
,Ñtx);

167 c⁄° 
gcc_debug_hooks
 
do_nŸhög_debug_hooks
;

168 c⁄° 
gcc_debug_hooks
 
dbx_debug_hooks
;

169 c⁄° 
gcc_debug_hooks
 
sdb_debug_hooks
;

170 c⁄° 
gcc_debug_hooks
 
xcoff_debug_hooks
;

171 c⁄° 
gcc_debug_hooks
 
dw¨f2_debug_hooks
;

172 c⁄° 
gcc_debug_hooks
 
vmsdbg_debug_hooks
;

176 
dw¨f2out_begö_¥ﬁogue
 (, const *);

177 
dw¨f2out_vms_íd_¥ﬁogue
 (, const *);

178 
dw¨f2out_vms_begö_ïûogue
 (, const *);

179 
dw¨f2out_íd_ïûogue
 (, const *);

180 
dw¨f2out_‰ame_föish
 ();

183 
boﬁ
 
dw¨f2out_do_‰ame
 ();

184 
boﬁ
 
dw¨f2out_do_cfi_asm
 ();

185 
dw¨f2out_swôch_ãxt_£˘i⁄
 ();

187 c⁄° *
ªm≠_debug_fûíame
 (const *);

188 
add_debug_¥efix_m≠
 (const *);

192 c⁄° 
gcc_debug_hooks
 *

193 
dump_go_•ec_öô
 (c⁄° *, c⁄° 
gcc_debug_hooks
 *);

	@include/defaults.h

26 #i‚de‡
GCC_DEFAULTS_H


27 
	#GCC_DEFAULTS_H


	)

30 #i‚de‡
ASM_COMMENT_START


31 
	#ASM_COMMENT_START
 ";#"

	)

38 #i‚de‡
ASM_PN_FORMAT


39 #i‚de‡
NO_DOT_IN_LABEL


40 
	#ASM_PN_FORMAT
 "%s.%lu"

	)

42 #i‚de‡
NO_DOLLAR_IN_LABEL


43 
	#ASM_PN_FORMAT
 "%s$%lu"

	)

45 
	#ASM_PN_FORMAT
 "__%s_%lu"

	)

50 #i‚de‡
ASM_FORMAT_PRIVATE_NAME


51 
	#ASM_FORMAT_PRIVATE_NAME
(
OUTPUT
, 
NAME
, 
LABELNO
) \

52 dÿ{ c⁄° *c⁄° 
«me_
 = (
NAME
); \

53 *c⁄° 
ouçut_
 = (
OUTPUT
) = \

54 (*Ë
	`Æloˇ
 (
	`°æí
 (
«me_
) + 32); \

55 
	`•rötf
 (
ouçut_
, 
ASM_PN_FORMAT
, 
«me_
, ()(
LABELNO
)); \

56 } 0)

	)

61 #i‚de‡
ASM_OUTPUT_ASCII


62 
	#ASM_OUTPUT_ASCII
(
MYFILE
, 
MYSTRING
, 
MYLENGTH
) \

64 
FILE
 *
_hide_asm_out_fûe
 = (
MYFILE
); \

65 c⁄° *
_hide_p
 = (c⁄° *Ë(
MYSTRING
); \

66 
_hide_thissize
 = (
MYLENGTH
); \

68 
FILE
 *
asm_out_fûe
 = 
_hide_asm_out_fûe
; \

69 c⁄° *
p
 = 
_hide_p
; \

70 
thissize
 = 
_hide_thissize
; \

71 
i
; \

72 
	`Ârötf
 (
asm_out_fûe
, "\t.ascii \""); \

74 
i
 = 0; i < 
thissize
; i++) \

76 
c
 = 
p
[
i
]; \

77 i‡(
c
 == '\"' || c == '\\') \

78 
	`putc
 ('\\', 
asm_out_fûe
); \

79 i‡(
	`ISPRINT
 (
c
)) \

80 
	`putc
 (
c
, 
asm_out_fûe
); \

83 
	`Ârötf
 (
asm_out_fûe
, "\\%o", 
c
); \

89 i‡(
i
 < 
thissize
 - 1 && 
	`ISDIGIT
 (
p
[i + 1])) \

90 
	`Ârötf
 (
asm_out_fûe
, "\"\n\t.ascii \""); \

93 
	`Ârötf
 (
asm_out_fûe
, "\"\n"); \

96 0)

	)

100 #ifde‡
SET_ASM_OP


101 #i‚de‡
ASM_OUTPUT_DEF


102 
	#ASM_OUTPUT_DEF
(
FILE
,
LABEL1
,
LABEL2
) \

103 dÿ{ 
	`Ârötf
 ((
FILE
), "%s", 
SET_ASM_OP
); \

104 
	`as£mbÀ_«me
 (
FILE
, 
LABEL1
); \

105 
	`Ârötf
 (
FILE
, ","); \

106 
	`as£mbÀ_«me
 (
FILE
, 
LABEL2
); \

107 
	`Ârötf
 (
FILE
, "\n"); \

108 } 0)

	)

112 #i‚de‡
IFUNC_ASM_TYPE


113 
	#IFUNC_ASM_TYPE
 "gnu_ödúe˘_fun˘i⁄"

	)

116 #i‚de‡
TLS_COMMON_ASM_OP


117 
	#TLS_COMMON_ASM_OP
 ".és_comm⁄"

	)

120 #i‡
deföed
 (
HAVE_AS_TLS
Ë&& !deföed (
ASM_OUTPUT_TLS_COMMON
)

121 
	#ASM_OUTPUT_TLS_COMMON
(
FILE
, 
DECL
, 
NAME
, 
SIZE
) \

124 
	`Ârötf
 ((
FILE
), "\t%s\t", 
TLS_COMMON_ASM_OP
); \

125 
	`as£mbÀ_«me
 ((
FILE
), (
NAME
)); \

126 
	`Ârötf
 ((
FILE
), ","
HOST_WIDE_INT_PRINT_UNSIGNED
",%u\n", \

127 (
SIZE
), 
	`DECL_ALIGN
 (
DECL
Ë/ 
BITS_PER_UNIT
); \

129 0)

	)

134 #i‚de‡
TARGET_DEFERRED_OUTPUT_DEFS


135 
	#TARGET_DEFERRED_OUTPUT_DEFS
(
DECL
,
TARGET
Ë
Ál£


	)

141 #i‚de‡
ASM_OUTPUT_LABEL


142 
	#ASM_OUTPUT_LABEL
(
FILE
,
NAME
) \

144 
	`as£mbÀ_«me
 ((
FILE
), (
NAME
)); \

145 
	`Âuts
 (":\n", (
FILE
)); \

146 } 0)

	)

152 #i‚de‡
ASM_OUTPUT_FUNCTION_LABEL


153 
	#ASM_OUTPUT_FUNCTION_LABEL
(
FILE
, 
NAME
, 
DECL
) \

154 
	`ASM_OUTPUT_LABEL
 ((
FILE
), (
NAME
))

	)

158 #i‚de‡
ASM_OUTPUT_INTERNAL_LABEL


159 
	#ASM_OUTPUT_INTERNAL_LABEL
(
FILE
,
NAME
) \

161 
	`as£mbÀ_«me_øw
 ((
FILE
), (
NAME
)); \

162 
	`Âuts
 (":\n", (
FILE
)); \

163 } 0)

	)

168 #i‚de‡
ASM_OUTPUT_LABELREF


169 
	#ASM_OUTPUT_LABELREF
(
FILE
,
NAME
) \

171 
	`Âuts
 (
u£r_œbñ_¥efix
, (
FILE
)); \

172 
	`Âuts
 ((
NAME
), (
FILE
)); \

173 } 0);

	)

180 #i‚de‡
ASM_OUTPUT_DEBUG_LABEL


181 
	#ASM_OUTPUT_DEBUG_LABEL
(
FILE
, 
PREFIX
, 
NUM
) \

182 (*
èrgëm
.
asm_out
.
öã∫Æ_œbñ
Ë(
FILE
, 
PREFIX
, 
NUM
)

	)

186 #i‚de‡
ASM_OUTPUT_WEAK_ALIAS


187 #i‡
deföed
 (
ASM_WEAKEN_LABEL
Ë&& deföed (
ASM_OUTPUT_DEF
)

188 
	#ASM_OUTPUT_WEAK_ALIAS
(
STREAM
, 
NAME
, 
VALUE
) \

191 
	`ASM_WEAKEN_LABEL
 (
STREAM
, 
NAME
); \

192 i‡(
VALUE
) \

193 
	`ASM_OUTPUT_DEF
 (
STREAM
, 
NAME
, 
VALUE
); \

195 0)

	)

205 #i‚de‡
ASM_OUTPUT_WEAKREF


206 #i‡
deföed
 
HAVE_GAS_WEAKREF


207 
	#ASM_OUTPUT_WEAKREF
(
FILE
, 
DECL
, 
NAME
, 
VALUE
) \

210 
	`Ârötf
 ((
FILE
), "\t.weakref\t"); \

211 
	`as£mbÀ_«me
 ((
FILE
), (
NAME
)); \

212 
	`Ârötf
 ((
FILE
), ","); \

213 
	`as£mbÀ_«me
 ((
FILE
), (
VALUE
)); \

214 
	`Ârötf
 ((
FILE
), "\n"); \

216 0)

	)

221 #i‚de‡
ASM_OUTPUT_TYPE_DIRECTIVE


222 #i‡
deföed
 
TYPE_ASM_OP
 && deföed 
TYPE_OPERAND_FMT


223 
	#ASM_OUTPUT_TYPE_DIRECTIVE
(
STREAM
, 
NAME
, 
TYPE
) \

226 
	`Âuts
 (
TYPE_ASM_OP
, 
STREAM
); \

227 
	`as£mbÀ_«me
 (
STREAM
, 
NAME
); \

228 
	`Âuts
 (", ", 
STREAM
); \

229 
	`Ârötf
 (
STREAM
, 
TYPE_OPERAND_FMT
, 
TYPE
); \

230 
	`putc
 ('\n', 
STREAM
); \

232 0)

	)

237 #i‚de‡
ASM_OUTPUT_SIZE_DIRECTIVE


238 #ifde‡
SIZE_ASM_OP


239 
	#ASM_OUTPUT_SIZE_DIRECTIVE
(
STREAM
, 
NAME
, 
SIZE
) \

242 
HOST_WIDE_INT
 
size_
 = (
SIZE
); \

243 
	`Âuts
 (
SIZE_ASM_OP
, 
STREAM
); \

244 
	`as£mbÀ_«me
 (
STREAM
, 
NAME
); \

245 
	`Ârötf
 (
STREAM
, ", " 
HOST_WIDE_INT_PRINT_DEC
 "\n", 
size_
); \

247 0)

	)

249 
	#ASM_OUTPUT_MEASURED_SIZE
(
STREAM
, 
NAME
) \

252 
	`Âuts
 (
SIZE_ASM_OP
, 
STREAM
); \

253 
	`as£mbÀ_«me
 (
STREAM
, 
NAME
); \

254 
	`Âuts
 (", .-", 
STREAM
); \

255 
	`as£mbÀ_«me
 (
STREAM
, 
NAME
); \

256 
	`putc
 ('\n', 
STREAM
); \

258 0)

	)

265 #i‚de‡
SUPPORTS_WEAK


266 #i‡
deföed
 (
ASM_WEAKEN_LABEL
Ë|| deföed (
ASM_WEAKEN_DECL
)

267 
	#SUPPORTS_WEAK
 1

	)

269 
	#SUPPORTS_WEAK
 0

	)

275 #i‚de‡
TARGET_SUPPORTS_WEAK


276 
	#TARGET_SUPPORTS_WEAK
 (
SUPPORTS_WEAK
)

	)

281 #i‚de‡
SUPPORTS_DISCRIMINATOR


282 #ifde‡
HAVE_GAS_DISCRIMINATOR


283 
	#SUPPORTS_DISCRIMINATOR
 1

	)

285 
	#SUPPORTS_DISCRIMINATOR
 0

	)

290 #i‚de‡
SUPPORTS_ONE_ONLY


291 #ifde‡
MAKE_DECL_ONE_ONLY


292 
	#SUPPORTS_ONE_ONLY
 1

	)

294 
	#SUPPORTS_ONE_ONLY
 0

	)

303 #i‚de‡
TARGET_WEAK_NOT_IN_ARCHIVE_TOC


304 
	#TARGET_WEAK_NOT_IN_ARCHIVE_TOC
 0

	)

308 #i‚de‡
TARGET_USES_WEAK_UNWIND_INFO


309 
	#TARGET_USES_WEAK_UNWIND_INFO
 0

	)

313 #i‚de‡
USER_LABEL_PREFIX


314 
	#USER_LABEL_PREFIX
 ""

	)

325 #i‚de‡
TARGET_ATTRIBUTE_WEAK


326 #i‡
SUPPORTS_WEAK


327 
	#TARGET_ATTRIBUTE_WEAK
 
	`__©åibuã__
 ((
wók
))

	)

329 
	#TARGET_ATTRIBUTE_WEAK


	)

335 #i‚de‡
MULTIPLE_SYMBOL_SPACES


336 
	#MULTIPLE_SYMBOL_SPACES
 0

	)

341 #i‚de‡
SUPPORTS_INIT_PRIORITY


342 
	#SUPPORTS_INIT_PRIORITY
 1

	)

347 #i‡!
deföed
 (
DWARF2_UNWIND_INFO
Ë&& deföed (
INCOMING_RETURN_ADDR_RTX
)

348 
	#DWARF2_UNWIND_INFO
 1

	)

353 #i‡
deföed
 (
TARGET_ASM_NAMED_SECTION
Ë&& 
DWARF2_UNWIND_INFO
 \

354 && !
	$deföed
 (
EH_FRAME_IN_DATA_SECTION
)

355 #i‚de‡
EH_FRAME_SECTION_NAME


356 
	#EH_FRAME_SECTION_NAME
 ".eh_‰ame"

	)

372 #i‚de‡
EH_TABLES_CAN_BE_READ_ONLY


373 #ifde‡
HAVE_LD_RO_RW_SECTION_MIXING


374 
	#EH_TABLES_CAN_BE_READ_ONLY
 1

	)

376 
	#EH_TABLES_CAN_BE_READ_ONLY
 0

	)

383 #i‡
	`deföed
 (
TARGET_ASM_NAMED_SECTION
Ë&& 
SUPPORTS_WEAK


384 #i‚de‡
JCR_SECTION_NAME


385 
	#JCR_SECTION_NAME
 ".j¸"

	)

393 #i‚de‡
TARGET_USE_JCR_SECTION


394 #ifde‡
JCR_SECTION_NAME


395 
	#TARGET_USE_JCR_SECTION
 1

	)

397 
	#TARGET_USE_JCR_SECTION
 0

	)

404 #i‚de‡
DWARF_FRAME_REGISTERS


405 
	#DWARF_FRAME_REGISTERS
 
FIRST_PSEUDO_REGISTER


	)

409 #i‚de‡
DWARF_CIE_DATA_ALIGNMENT


410 #ifde‡
STACK_GROWS_DOWNWARD


411 
	#DWARF_CIE_DATA_ALIGNMENT
 (-((Ë
UNITS_PER_WORD
))

	)

413 
	#DWARF_CIE_DATA_ALIGNMENT
 ((Ë
UNITS_PER_WORD
)

	)

420 #i‚de‡
DWARF_FRAME_RETURN_COLUMN


421 #ifde‡
PC_REGNUM


422 
	#DWARF_FRAME_RETURN_COLUMN
 
	`DWARF_FRAME_REGNUM
 (
PC_REGNUM
)

	)

424 
	#DWARF_FRAME_RETURN_COLUMN
 
DWARF_FRAME_REGISTERS


	)

431 #i‚de‡
DBX_REGISTER_NUMBER


432 
	#DBX_REGISTER_NUMBER
(
REGNO
Ë(REGNO)

	)

437 #i‚de‡
DWARF_FRAME_REGNUM


438 
	#DWARF_FRAME_REGNUM
(
REG
Ë
	`DBX_REGISTER_NUMBER
 (REG)

	)

444 #i‚de‡
DWARF2_FRAME_REG_OUT


445 
	#DWARF2_FRAME_REG_OUT
(
REGNO
, 
FOR_EH
Ë(REGNO)

	)

453 #i‚de‡
DWARF2_ADDR_SIZE


454 
	#DWARF2_ADDR_SIZE
 (
POINTER_SIZE
 / 
BITS_PER_UNIT
)

	)

461 #i‚de‡
DWARF_OFFSET_SIZE


462 
	#DWARF_OFFSET_SIZE
 4

	)

466 #i‚de‡
DWARF_TYPE_SIGNATURE_SIZE


467 
	#DWARF_TYPE_SIGNATURE_SIZE
 8

	)

474 #i‚de‡
BITS_PER_WORD


475 
	#BITS_PER_WORD
 (
BITS_PER_UNIT
 * 
UNITS_PER_WORD
)

	)

478 #i‚de‡
CHAR_TYPE_SIZE


479 
	#CHAR_TYPE_SIZE
 
BITS_PER_UNIT


	)

482 #i‚de‡
BOOL_TYPE_SIZE


484 
	#BOOL_TYPE_SIZE
 
CHAR_TYPE_SIZE


	)

487 #i‚de‡
SHORT_TYPE_SIZE


488 
	#SHORT_TYPE_SIZE
 (
BITS_PER_UNIT
 * 
	`MIN
 ((
UNITS_PER_WORD
 + 1Ë/ 2, 2))

	)

491 #i‚de‡
INT_TYPE_SIZE


492 
	#INT_TYPE_SIZE
 
BITS_PER_WORD


	)

495 #i‚de‡
LONG_TYPE_SIZE


496 
	#LONG_TYPE_SIZE
 
BITS_PER_WORD


	)

499 #i‚de‡
LONG_LONG_TYPE_SIZE


500 
	#LONG_LONG_TYPE_SIZE
 (
BITS_PER_WORD
 * 2)

	)

503 #i‚de‡
WCHAR_TYPE_SIZE


504 
	#WCHAR_TYPE_SIZE
 
INT_TYPE_SIZE


	)

507 #i‚de‡
FLOAT_TYPE_SIZE


508 
	#FLOAT_TYPE_SIZE
 
BITS_PER_WORD


	)

511 #i‚de‡
DOUBLE_TYPE_SIZE


512 
	#DOUBLE_TYPE_SIZE
 (
BITS_PER_WORD
 * 2)

	)

515 #i‚de‡
LONG_DOUBLE_TYPE_SIZE


516 
	#LONG_DOUBLE_TYPE_SIZE
 (
BITS_PER_WORD
 * 2)

	)

519 #i‚de‡
DECIMAL32_TYPE_SIZE


520 
	#DECIMAL32_TYPE_SIZE
 32

	)

523 #i‚de‡
DECIMAL64_TYPE_SIZE


524 
	#DECIMAL64_TYPE_SIZE
 64

	)

527 #i‚de‡
DECIMAL128_TYPE_SIZE


528 
	#DECIMAL128_TYPE_SIZE
 128

	)

531 #i‚de‡
SHORT_FRACT_TYPE_SIZE


532 
	#SHORT_FRACT_TYPE_SIZE
 
BITS_PER_UNIT


	)

535 #i‚de‡
FRACT_TYPE_SIZE


536 
	#FRACT_TYPE_SIZE
 (
BITS_PER_UNIT
 * 2)

	)

539 #i‚de‡
LONG_FRACT_TYPE_SIZE


540 
	#LONG_FRACT_TYPE_SIZE
 (
BITS_PER_UNIT
 * 4)

	)

543 #i‚de‡
LONG_LONG_FRACT_TYPE_SIZE


544 
	#LONG_LONG_FRACT_TYPE_SIZE
 (
BITS_PER_UNIT
 * 8)

	)

547 #i‚de‡
SHORT_ACCUM_TYPE_SIZE


548 
	#SHORT_ACCUM_TYPE_SIZE
 (
SHORT_FRACT_TYPE_SIZE
 * 2)

	)

551 #i‚de‡
ACCUM_TYPE_SIZE


552 
	#ACCUM_TYPE_SIZE
 (
FRACT_TYPE_SIZE
 * 2)

	)

555 #i‚de‡
LONG_ACCUM_TYPE_SIZE


556 
	#LONG_ACCUM_TYPE_SIZE
 (
LONG_FRACT_TYPE_SIZE
 * 2)

	)

559 #i‚de‡
LONG_LONG_ACCUM_TYPE_SIZE


560 
	#LONG_LONG_ACCUM_TYPE_SIZE
 (
LONG_LONG_FRACT_TYPE_SIZE
 * 2)

	)

569 #i‚de‡
SIZE_TYPE


570 
	#SIZE_TYPE
 "l⁄g unsig√d i¡"

	)

573 #i‚de‡
SIZETYPE


574 
	#SIZETYPE
 
SIZE_TYPE


	)

577 #i‚de‡
PID_TYPE


578 
	#PID_TYPE
 "öt"

	)

587 #ifde‡
UINT_LEAST16_TYPE


588 
	#CHAR16_TYPE
 
UINT_LEAST16_TYPE


	)

590 
	#CHAR16_TYPE
 "sh‹àunsig√d i¡"

	)

593 #ifde‡
UINT_LEAST32_TYPE


594 
	#CHAR32_TYPE
 
UINT_LEAST32_TYPE


	)

596 
	#CHAR32_TYPE
 "unsig√d i¡"

	)

599 #i‚de‡
WCHAR_TYPE


600 
	#WCHAR_TYPE
 "öt"

	)

604 
	#MODIFIED_WCHAR_TYPE
 \

605 (
Êag_sh‹t_wch¨
 ? "sh‹àunsig√d i¡" : 
WCHAR_TYPE
)

	)

607 #i‚de‡
PTRDIFF_TYPE


608 
	#PTRDIFF_TYPE
 "l⁄g i¡"

	)

611 #i‚de‡
WINT_TYPE


612 
	#WINT_TYPE
 "unsig√d i¡"

	)

615 #i‚de‡
INTMAX_TYPE


616 
	#INTMAX_TYPE
 ((
INT_TYPE_SIZE
 =
LONG_LONG_TYPE_SIZE
) \

618 : ((
LONG_TYPE_SIZE
 =
LONG_LONG_TYPE_SIZE
) \

620 : "l⁄gÜ⁄g i¡"))

	)

623 #i‚de‡
UINTMAX_TYPE


624 
	#UINTMAX_TYPE
 ((
INT_TYPE_SIZE
 =
LONG_LONG_TYPE_SIZE
) \

626 : ((
LONG_TYPE_SIZE
 =
LONG_LONG_TYPE_SIZE
) \

628 : "l⁄gÜ⁄g unsig√d i¡"))

	)

634 #i‚de‡
SIG_ATOMIC_TYPE


635 
	#SIG_ATOMIC_TYPE
 ((c⁄° *Ë
NULL
)

	)

638 #i‚de‡
INT8_TYPE


639 
	#INT8_TYPE
 ((c⁄° *Ë
NULL
)

	)

642 #i‚de‡
INT16_TYPE


643 
	#INT16_TYPE
 ((c⁄° *Ë
NULL
)

	)

646 #i‚de‡
INT32_TYPE


647 
	#INT32_TYPE
 ((c⁄° *Ë
NULL
)

	)

650 #i‚de‡
INT64_TYPE


651 
	#INT64_TYPE
 ((c⁄° *Ë
NULL
)

	)

654 #i‚de‡
UINT8_TYPE


655 
	#UINT8_TYPE
 ((c⁄° *Ë
NULL
)

	)

658 #i‚de‡
UINT16_TYPE


659 
	#UINT16_TYPE
 ((c⁄° *Ë
NULL
)

	)

662 #i‚de‡
UINT32_TYPE


663 
	#UINT32_TYPE
 ((c⁄° *Ë
NULL
)

	)

666 #i‚de‡
UINT64_TYPE


667 
	#UINT64_TYPE
 ((c⁄° *Ë
NULL
)

	)

670 #i‚de‡
INT_LEAST8_TYPE


671 
	#INT_LEAST8_TYPE
 ((c⁄° *Ë
NULL
)

	)

674 #i‚de‡
INT_LEAST16_TYPE


675 
	#INT_LEAST16_TYPE
 ((c⁄° *Ë
NULL
)

	)

678 #i‚de‡
INT_LEAST32_TYPE


679 
	#INT_LEAST32_TYPE
 ((c⁄° *Ë
NULL
)

	)

682 #i‚de‡
INT_LEAST64_TYPE


683 
	#INT_LEAST64_TYPE
 ((c⁄° *Ë
NULL
)

	)

686 #i‚de‡
UINT_LEAST8_TYPE


687 
	#UINT_LEAST8_TYPE
 ((c⁄° *Ë
NULL
)

	)

690 #i‚de‡
UINT_LEAST16_TYPE


691 
	#UINT_LEAST16_TYPE
 ((c⁄° *Ë
NULL
)

	)

694 #i‚de‡
UINT_LEAST32_TYPE


695 
	#UINT_LEAST32_TYPE
 ((c⁄° *Ë
NULL
)

	)

698 #i‚de‡
UINT_LEAST64_TYPE


699 
	#UINT_LEAST64_TYPE
 ((c⁄° *Ë
NULL
)

	)

702 #i‚de‡
INT_FAST8_TYPE


703 
	#INT_FAST8_TYPE
 ((c⁄° *Ë
NULL
)

	)

706 #i‚de‡
INT_FAST16_TYPE


707 
	#INT_FAST16_TYPE
 ((c⁄° *Ë
NULL
)

	)

710 #i‚de‡
INT_FAST32_TYPE


711 
	#INT_FAST32_TYPE
 ((c⁄° *Ë
NULL
)

	)

714 #i‚de‡
INT_FAST64_TYPE


715 
	#INT_FAST64_TYPE
 ((c⁄° *Ë
NULL
)

	)

718 #i‚de‡
UINT_FAST8_TYPE


719 
	#UINT_FAST8_TYPE
 ((c⁄° *Ë
NULL
)

	)

722 #i‚de‡
UINT_FAST16_TYPE


723 
	#UINT_FAST16_TYPE
 ((c⁄° *Ë
NULL
)

	)

726 #i‚de‡
UINT_FAST32_TYPE


727 
	#UINT_FAST32_TYPE
 ((c⁄° *Ë
NULL
)

	)

730 #i‚de‡
UINT_FAST64_TYPE


731 
	#UINT_FAST64_TYPE
 ((c⁄° *Ë
NULL
)

	)

734 #i‚de‡
INTPTR_TYPE


735 
	#INTPTR_TYPE
 ((c⁄° *Ë
NULL
)

	)

738 #i‚de‡
UINTPTR_TYPE


739 
	#UINTPTR_TYPE
 ((c⁄° *Ë
NULL
)

	)

743 #i‚de‡
POINTER_SIZE


744 
	#POINTER_SIZE
 
BITS_PER_WORD


	)

747 #i‚de‡
PIC_OFFSET_TABLE_REGNUM


748 
	#PIC_OFFSET_TABLE_REGNUM
 
INVALID_REGNUM


	)

751 #i‚de‡
PIC_OFFSET_TABLE_REG_CALL_CLOBBERED


752 
	#PIC_OFFSET_TABLE_REG_CALL_CLOBBERED
 0

	)

755 #i‚de‡
TARGET_DLLIMPORT_DECL_ATTRIBUTES


756 
	#TARGET_DLLIMPORT_DECL_ATTRIBUTES
 0

	)

759 #i‚de‡
TARGET_DECLSPEC


760 #i‡
TARGET_DLLIMPORT_DECL_ATTRIBUTES


763 
	#TARGET_DECLSPEC
 1

	)

765 
	#TARGET_DECLSPEC
 0

	)

771 #i‚de‡
CPLUSPLUS_CPP_SPEC


772 #ifde‡
CPP_SPEC


773 
	#CPLUSPLUS_CPP_SPEC
 
CPP_SPEC


	)

777 #i‚de‡
ACCUMULATE_OUTGOING_ARGS


778 
	#ACCUMULATE_OUTGOING_ARGS
 0

	)

782 #i‚de‡
NEXT_OBJC_RUNTIME


783 
	#NEXT_OBJC_RUNTIME
 0

	)

787 #i‚de‡
PUSH_ARGS


788 #ifde‡
PUSH_ROUNDING


789 
	#PUSH_ARGS
 !
ACCUMULATE_OUTGOING_ARGS


	)

791 
	#PUSH_ARGS
 0

	)

801 #ifde‡
PUSH_ROUNDING


803 #i‚de‡
PUSH_ARGS_REVERSED


804 #i‡
	`deföed
 (
STACK_GROWS_DOWNWARD
Ë!deföed (
ARGS_GROW_DOWNWARD
)

805 
	#PUSH_ARGS_REVERSED
 
PUSH_ARGS


	)

811 #i‚de‡
PUSH_ARGS_REVERSED


812 
	#PUSH_ARGS_REVERSED
 0

	)

817 #i‚de‡
MALLOC_ABI_ALIGNMENT


818 
	#MALLOC_ABI_ALIGNMENT
 
BITS_PER_WORD


	)

823 #i‚de‡
PREFERRED_STACK_BOUNDARY


824 
	#PREFERRED_STACK_BOUNDARY
 
STACK_BOUNDARY


	)

829 #i‚de‡
INCOMING_STACK_BOUNDARY


830 
	#INCOMING_STACK_BOUNDARY
 
PREFERRED_STACK_BOUNDARY


	)

833 #i‚de‡
TARGET_DEFAULT_PACK_STRUCT


834 
	#TARGET_DEFAULT_PACK_STRUCT
 0

	)

841 #i‚de‡
TARGET_VTABLE_ENTRY_ALIGN


842 
	#TARGET_VTABLE_ENTRY_ALIGN
 
POINTER_SIZE


	)

849 #i‚de‡
TARGET_VTABLE_DATA_ENTRY_DISTANCE


850 
	#TARGET_VTABLE_DATA_ENTRY_DISTANCE
 1

	)

855 #i‚de‡
TARGET_USE_LOCAL_THUNK_ALIAS_P


856 #ifde‡
ASM_OUTPUT_DEF


857 
	#TARGET_USE_LOCAL_THUNK_ALIAS_P
(
DECL
Ë1

	)

859 
	#TARGET_USE_LOCAL_THUNK_ALIAS_P
(
DECL
Ë0

	)

866 #i‚de‡
ASM_PREFERRED_EH_DATA_FORMAT


867 
	#ASM_PREFERRED_EH_DATA_FORMAT
(
CODE
,
GLOBAL
Ë
DW_EH_PE_ab•å


	)

875 #i‚de‡
TARGET_PTRMEMFUNC_VBIT_LOCATION


876 
	#TARGET_PTRMEMFUNC_VBIT_LOCATION
 \

877 (
FUNCTION_BOUNDARY
 >2 * 
BITS_PER_UNIT
 \

878 ? 
±rmemfunc_vbô_ö_p‚
 : 
±rmemfunc_vbô_ö_dñè
)

	)

881 #i‚de‡
DEFAULT_GDB_EXTENSIONS


882 
	#DEFAULT_GDB_EXTENSIONS
 1

	)

888 #i‡1 < (
	`deföed
 (
DBX_DEBUGGING_INFO
Ë+ deföed (
SDB_DEBUGGING_INFO
) \

889 + 
	`deföed
 (
DWARF2_DEBUGGING_INFO
Ë+ deföed (
XCOFF_DEBUGGING_INFO
) \

890 + 
	$deföed
 (
VMS_DEBUGGING_INFO
))

891 #i‚de‡
PREFERRED_DEBUGGING_TYPE


892 #îr‹ 
You
 
mu°
 
deföe
 
PREFERRED_DEBUGGING_TYPE


897 #ñi‡
deföed
 
DBX_DEBUGGING_INFO


898 
	#PREFERRED_DEBUGGING_TYPE
 
DBX_DEBUG


	)

900 #ñi‡
deföed
 
SDB_DEBUGGING_INFO


901 
	#PREFERRED_DEBUGGING_TYPE
 
SDB_DEBUG


	)

903 #ñi‡
deföed
 
DWARF2_DEBUGGING_INFO


904 
	#PREFERRED_DEBUGGING_TYPE
 
DWARF2_DEBUG


	)

906 #ñi‡
deföed
 
VMS_DEBUGGING_INFO


907 
	#PREFERRED_DEBUGGING_TYPE
 
VMS_AND_DWARF2_DEBUG


	)

909 #ñi‡
deföed
 
XCOFF_DEBUGGING_INFO


910 
	#PREFERRED_DEBUGGING_TYPE
 
XCOFF_DEBUG


	)

914 
	#PREFERRED_DEBUGGING_TYPE
 
NO_DEBUG


	)

917 #i‚de‡
LARGEST_EXPONENT_IS_NORMAL


918 
	#LARGEST_EXPONENT_IS_NORMAL
(
SIZE
Ë0

	)

921 #i‚de‡
ROUND_TOWARDS_ZERO


922 
	#ROUND_TOWARDS_ZERO
 0

	)

925 #i‚de‡
FLOAT_LIB_COMPARE_RETURNS_BOOL


926 
	#FLOAT_LIB_COMPARE_RETURNS_BOOL
(
MODE
, 
COMPARISON
Ë
Ál£


	)

932 #i‚de‡
TARGET_LIB_INT_CMP_BIASED


933 
	#TARGET_LIB_INT_CMP_BIASED
 (
åue
)

	)

938 #i‚de‡
FLOAT_WORDS_BIG_ENDIAN


939 
	#FLOAT_WORDS_BIG_ENDIAN
 
WORDS_BIG_ENDIAN


	)

942 #i‚de‡
REG_WORDS_BIG_ENDIAN


943 
	#REG_WORDS_BIG_ENDIAN
 
WORDS_BIG_ENDIAN


	)

946 #ifde‡
TARGET_FLT_EVAL_METHOD


947 
	#TARGET_FLT_EVAL_METHOD_NON_DEFAULT
 1

	)

949 
	#TARGET_FLT_EVAL_METHOD
 0

	)

950 
	#TARGET_FLT_EVAL_METHOD_NON_DEFAULT
 0

	)

953 #i‚de‡
TARGET_DEC_EVAL_METHOD


954 
	#TARGET_DEC_EVAL_METHOD
 2

	)

957 #i‚de‡
HAS_LONG_COND_BRANCH


958 
	#HAS_LONG_COND_BRANCH
 0

	)

961 #i‚de‡
HAS_LONG_UNCOND_BRANCH


962 
	#HAS_LONG_UNCOND_BRANCH
 0

	)

967 #i‚de‡
DEFAULT_USE_CXA_ATEXIT


968 
	#DEFAULT_USE_CXA_ATEXIT
 0

	)

975 #i‡ !
deföed
 
CONSTRAINT_LEN
 \

976 && !
deföed
 
REG_CLASS_FROM_LETTER
 \

977 && !
deföed
 
REG_CLASS_FROM_CONSTRAINT
 \

978 && !
deföed
 
CONST_OK_FOR_LETTER_P
 \

979 && !
deföed
 
CONST_OK_FOR_CONSTRAINT_P
 \

980 && !
deföed
 
CONST_DOUBLE_OK_FOR_LETTER_P
 \

981 && !
deföed
 
CONST_DOUBLE_OK_FOR_CONSTRAINT_P
 \

982 && !
deföed
 
EXTRA_CONSTRAINT
 \

983 && !
deföed
 
EXTRA_CONSTRAINT_STR
 \

984 && !
deföed
 
EXTRA_MEMORY_CONSTRAINT
 \

985 && !
deföed
 
EXTRA_ADDRESS_CONSTRAINT


987 
	#USE_MD_CONSTRAINTS


	)

989 #i‡
GCC_VERSION
 >3000 && 
deföed
 
IN_GCC


992 #¥agm®
GCC
 
pois⁄
 
REG_CLASS_FROM_LETTER
 
CONST_OK_FOR_LETTER_P
 \

993 
CONST_DOUBLE_OK_FOR_LETTER_P
 
EXTRA_CONSTRAINT


1000 #i‚de‡
EXTRA_MEMORY_CONSTRAINT


1001 
	#EXTRA_MEMORY_CONSTRAINT
(
C
,
STR
Ë0

	)

1006 #i‚de‡
EXTRA_ADDRESS_CONSTRAINT


1007 
	#EXTRA_ADDRESS_CONSTRAINT
(
C
,
STR
Ë0

	)

1014 
	#DEFAULT_CONSTRAINT_LEN
(
C
,
STR
Ë1

	)

1016 #i‚de‡
CONSTRAINT_LEN


1017 
	#CONSTRAINT_LEN
(
C
,
STR
Ë
	`DEFAULT_CONSTRAINT_LEN
 (C, STR)

	)

1020 #i‡
	`deföed
 (
CONST_OK_FOR_LETTER_P
Ë&& ! deföed (
CONST_OK_FOR_CONSTRAINT_P
)

1021 
	#CONST_OK_FOR_CONSTRAINT_P
(
VAL
,
C
,
STR
Ë
	`CONST_OK_FOR_LETTER_P
 (VAL, C)

	)

1024 #i‡
	`deföed
 (
CONST_DOUBLE_OK_FOR_LETTER_P
Ë&& ! deföed (
CONST_DOUBLE_OK_FOR_CONSTRAINT_P
)

1025 
	#CONST_DOUBLE_OK_FOR_CONSTRAINT_P
(
OP
,
C
,
STR
) \

1026 
	`CONST_DOUBLE_OK_FOR_LETTER_P
 (
OP
, 
C
)

	)

1029 #i‚de‡
REG_CLASS_FROM_CONSTRAINT


1030 
	#REG_CLASS_FROM_CONSTRAINT
(
C
,
STR
Ë
	`REG_CLASS_FROM_LETTER
 (C)

	)

1033 #i‡
	`deföed
 (
EXTRA_CONSTRAINT
Ë&& ! deföed (
EXTRA_CONSTRAINT_STR
)

1034 
	#EXTRA_CONSTRAINT_STR
(
OP
, 
C
,
STR
Ë
	`EXTRA_CONSTRAINT
 (OP, C)

	)

1040 #i‚de‡
TARGET_HAS_BIONIC


1041 
	#TARGET_HAS_BIONIC
 0

	)

1045 #i‚de‡
CLZ_DEFINED_VALUE_AT_ZERO


1046 
	#CLZ_DEFINED_VALUE_AT_ZERO
(
MODE
, 
VALUE
Ë0

	)

1048 #i‚de‡
CTZ_DEFINED_VALUE_AT_ZERO


1049 
	#CTZ_DEFINED_VALUE_AT_ZERO
(
MODE
, 
VALUE
Ë0

	)

1053 #i‚de‡
STORE_FLAG_VALUE


1054 
	#STORE_FLAG_VALUE
 1

	)

1064 #i‚de‡
MOVE_MAX_PIECES


1065 
	#MOVE_MAX_PIECES
 
MOVE_MAX


	)

1068 #i‚de‡
MAX_MOVE_MAX


1069 
	#MAX_MOVE_MAX
 
MOVE_MAX


	)

1072 #i‚de‡
MIN_UNITS_PER_WORD


1073 
	#MIN_UNITS_PER_WORD
 
UNITS_PER_WORD


	)

1076 #i‚de‡
MAX_BITS_PER_WORD


1077 
	#MAX_BITS_PER_WORD
 
BITS_PER_WORD


	)

1080 #i‚de‡
STACK_POINTER_OFFSET


1081 
	#STACK_POINTER_OFFSET
 0

	)

1084 #i‚de‡
LOCAL_REGNO


1085 
	#LOCAL_REGNO
(
REGNO
Ë0

	)

1091 #i‚de‡
EXIT_IGNORE_STACK


1092 
	#EXIT_IGNORE_STACK
 0

	)

1096 #i‚de‡
CASE_VECTOR_PC_RELATIVE


1097 
	#CASE_VECTOR_PC_RELATIVE
 0

	)

1101 #i‚de‡
TRAMPOLINE_ALIGNMENT


1102 
	#TRAMPOLINE_ALIGNMENT
 
FUNCTION_BOUNDARY


	)

1106 #i‚de‡
INCOMING_REGNO


1107 
	#INCOMING_REGNO
(
N
Ë(N)

	)

1110 #i‚de‡
OUTGOING_REGNO


1111 
	#OUTGOING_REGNO
(
N
Ë(N)

	)

1114 #i‚de‡
SHIFT_COUNT_TRUNCATED


1115 
	#SHIFT_COUNT_TRUNCATED
 0

	)

1118 #i‚de‡
LEGITIMATE_PIC_OPERAND_P


1119 
	#LEGITIMATE_PIC_OPERAND_P
(
X
Ë1

	)

1122 #i‚de‡
TARGET_MEM_CONSTRAINT


1123 
	#TARGET_MEM_CONSTRAINT
 'm'

	)

1126 #i‚de‡
REVERSIBLE_CC_MODE


1127 
	#REVERSIBLE_CC_MODE
(
MODE
Ë0

	)

1131 #i‚de‡
MAX_OFILE_ALIGNMENT


1132 
	#MAX_OFILE_ALIGNMENT
 
BIGGEST_ALIGNMENT


	)

1135 #i‚de‡
FRAME_GROWS_DOWNWARD


1136 
	#FRAME_GROWS_DOWNWARD
 0

	)

1140 #i‚de‡
ARG_POINTER_CFA_OFFSET


1141 
	#ARG_POINTER_CFA_OFFSET
(
FNDECL
) \

1142 (
	`FIRST_PARM_OFFSET
 (
FNDECL
Ë+ 
¸é
->
¨gs
.
¥ëíd_¨gs_size
)

	)

1146 #i‚de‡
CFA_FRAME_BASE_OFFSET


1147 
	#CFA_FRAME_BASE_OFFSET
(
FNDECL
Ë0

	)

1152 #i‚de‡
INCOMING_FRAME_SP_OFFSET


1153 
	#INCOMING_FRAME_SP_OFFSET
 0

	)

1156 #i‚de‡
HARD_REGNO_NREGS_HAS_PADDING


1157 
	#HARD_REGNO_NREGS_HAS_PADDING
(
REGNO
, 
MODE
Ë0

	)

1158 
	#HARD_REGNO_NREGS_WITH_PADDING
(
REGNO
, 
MODE
Ë-1

	)

1161 #i‚de‡
OUTGOING_REG_PARM_STACK_SPACE


1162 
	#OUTGOING_REG_PARM_STACK_SPACE
(
FNTYPE
Ë0

	)

1171 #ifde‡
MAX_STACK_ALIGNMENT


1172 
	#MAX_SUPPORTED_STACK_ALIGNMENT
 
MAX_STACK_ALIGNMENT


	)

1174 
	#MAX_STACK_ALIGNMENT
 
STACK_BOUNDARY


	)

1175 
	#MAX_SUPPORTED_STACK_ALIGNMENT
 
PREFERRED_STACK_BOUNDARY


	)

1178 
	#SUPPORTS_STACK_ALIGNMENT
 (
MAX_STACK_ALIGNMENT
 > 
STACK_BOUNDARY
)

	)

1180 #i‚de‡
LOCAL_ALIGNMENT


1181 
	#LOCAL_ALIGNMENT
(
TYPE
, 
ALIGNMENT
Ë
	)
ALIGNMENT

1184 #i‚de‡
STACK_SLOT_ALIGNMENT


1185 
	#STACK_SLOT_ALIGNMENT
(
TYPE
,
MODE
,
ALIGN
) \

1186 ((
TYPE
Ë? 
	`LOCAL_ALIGNMENT
 ((TYPE), (
ALIGN
)Ë: (ALIGN))

	)

1189 #i‚de‡
LOCAL_DECL_ALIGNMENT


1190 
	#LOCAL_DECL_ALIGNMENT
(
DECL
) \

1191 
	`LOCAL_ALIGNMENT
 (
	`TREE_TYPE
 (
DECL
), 
	`DECL_ALIGN
 (DECL))

	)

1194 #i‚de‡
MINIMUM_ALIGNMENT


1195 
	#MINIMUM_ALIGNMENT
(
EXP
,
MODE
,
ALIGN
Ë(ALIGN)

	)

1199 #i‚de‡
ATTRIBUTE_ALIGNED_VALUE


1200 
	#ATTRIBUTE_ALIGNED_VALUE
 
BIGGEST_ALIGNMENT


	)

1203 #i‚de‡
SLOW_UNALIGNED_ACCESS


1204 
	#SLOW_UNALIGNED_ACCESS
(
MODE
, 
ALIGN
Ë
STRICT_ALIGNMENT


	)

1209 #i‚de‡
CONSTANT_ADDRESS_P


1210 
	#CONSTANT_ADDRESS_P
(
X
Ë(
	`CONSTANT_P
 (XË&& 
	`GET_CODE
 (XË!
CONST_DOUBLE
)

	)

1213 #i‚de‡
MAX_FIXED_MODE_SIZE


1214 
	#MAX_FIXED_MODE_SIZE
 
	`GET_MODE_BITSIZE
 (
DImode
)

	)

1222 #i‚de‡
DEFAULT_PCC_STRUCT_RETURN


1223 
	#DEFAULT_PCC_STRUCT_RETURN
 1

	)

1226 #ifde‡
GCC_INSN_FLAGS_H


1245 #i‚de‡
BRANCH_COST


1246 
	#BRANCH_COST
(
•ìd_p
, 
¥edi˘abÀ_p
Ë1

	)

1252 #i‚de‡
MOVE_RATIO


1253 #i‡
	`deföed
 (
HAVE_movmemqi
Ë|| deföed (
HAVE_movmemhi
Ë|| deföed (
HAVE_movmemsi
Ë|| deföed (
HAVE_movmemdi
Ë|| deföed (
HAVE_movmemti
)

1254 
	#MOVE_RATIO
(
•ìd
Ë2

	)

1257 
	#MOVE_RATIO
(
•ìd
Ë((•ìdË? 15 : 3)

	)

1264 #i‚de‡
CLEAR_RATIO


1265 #i‡
	`deföed
 (
HAVE_£tmemqi
Ë|| deföed (
HAVE_£tmemhi
Ë|| deföed (
HAVE_£tmemsi
Ë|| deföed (
HAVE_£tmemdi
Ë|| deföed (
HAVE_£tmemti
)

1266 
	#CLEAR_RATIO
(
•ìd
Ë2

	)

1269 
	#CLEAR_RATIO
(
•ìd
Ë((•ìdË? 15 :3)

	)

1276 #i‚de‡
SET_RATIO


1277 
	#SET_RATIO
(
•ìd
Ë
	`MOVE_RATIO
 (•ìd)

	)

1284 
	#DEFAULT_FUNCTION_ARG_PADDING
(
MODE
, 
TYPE
) \

1285 (! 
BYTES_BIG_ENDIAN
 \

1286 ? 
upw¨d
 \

1287 : (((
MODE
Ë=
BLKmode
 \

1288 ? ((
TYPE
Ë&& 
	`TREE_CODE
 (
	`TYPE_SIZE
 (TYPE)Ë=
INTEGER_CST
 \

1289 && 
	`öt_size_ö_byãs
 (
TYPE
Ë< (
PARM_BOUNDARY
 / 
BITS_PER_UNIT
)) \

1290 : 
	`GET_MODE_BITSIZE
 (
MODE
Ë< 
PARM_BOUNDARY
) \

1291 ? 
downw¨d
 : 
upw¨d
))

	)

1293 #i‚de‡
FUNCTION_ARG_PADDING


1294 
	#FUNCTION_ARG_PADDING
(
MODE
, 
TYPE
) \

1295 
	`DEFAULT_FUNCTION_ARG_PADDING
 ((
MODE
), (
TYPE
))

	)

1301 #i‚de‡
STACK_SAVEAREA_MODE


1302 
	#STACK_SAVEAREA_MODE
(
LEVEL
Ë
Pmode


	)

1308 #i‚de‡
STACK_SIZE_MODE


1309 
	#STACK_SIZE_MODE
 
w‹d_mode


	)

1315 #i‚de‡
STACK_CHECK_BUILTIN


1316 
	#STACK_CHECK_BUILTIN
 0

	)

1320 #i‚de‡
STACK_CHECK_STATIC_BUILTIN


1321 
	#STACK_CHECK_STATIC_BUILTIN
 0

	)

1325 #i‚de‡
STACK_CHECK_PROBE_INTERVAL_EXP


1326 
	#STACK_CHECK_PROBE_INTERVAL_EXP
 12

	)

1330 #i‚de‡
STACK_CHECK_MOVING_SP


1331 
	#STACK_CHECK_MOVING_SP
 0

	)

1339 #ifde‡
STACK_CHECK_PROTECT


1340 
	#STACK_OLD_CHECK_PROTECT
 
STACK_CHECK_PROTECT


	)

1342 
	#STACK_OLD_CHECK_PROTECT
 \

1343 (
èrgëm_comm⁄
.
	`ex˚±_unwöd_öfo
 (&
globÆ_›ti⁄s
Ë=
UI_SJLJ
 \

1344 ? 75 * 
UNITS_PER_WORD
 \

1345 : 8 * 1024)

	)

1351 #i‚de‡
STACK_CHECK_PROTECT


1352 
	#STACK_CHECK_PROTECT
 \

1353 (
èrgëm_comm⁄
.
	`ex˚±_unwöd_öfo
 (&
globÆ_›ti⁄s
Ë=
UI_SJLJ
 \

1354 ? 75 * 
UNITS_PER_WORD
 \

1355 : 12 * 1024)

	)

1360 #i‚de‡
STACK_CHECK_MAX_FRAME_SIZE


1361 
	#STACK_CHECK_MAX_FRAME_SIZE
 \

1362 ((1 << 
STACK_CHECK_PROBE_INTERVAL_EXP
Ë- 
UNITS_PER_WORD
)

	)

1366 #i‚de‡
STACK_CHECK_FIXED_FRAME_SIZE


1367 
	#STACK_CHECK_FIXED_FRAME_SIZE
 (4 * 
UNITS_PER_WORD
)

	)

1373 #i‚de‡
STACK_CHECK_MAX_VAR_SIZE


1374 
	#STACK_CHECK_MAX_VAR_SIZE
 (
STACK_CHECK_MAX_FRAME_SIZE
 / 100)

	)

1383 #i‚de‡
TARGET_VTABLE_USES_DESCRIPTORS


1384 
	#TARGET_VTABLE_USES_DESCRIPTORS
 0

	)

1387 #i‚de‡
SWITCHABLE_TARGET


1388 
	#SWITCHABLE_TARGET
 0

	)

	@include/df.h

25 #i‚de‡
GCC_DF_H


26 
	#GCC_DF_H


	)

28 
	~"bôm≠.h
"

29 
	~"ªg£t.h
"

30 
	~"sbôm≠.h
"

31 
	~"basic-block.h
"

32 
	~"Æloc-poﬁ.h
"

33 
	~"timev¨.h
"

35 
	gd©aÊow
;

36 
	gdf_d
;

37 
	gdf_¥obÀm
;

38 
	gdf_lök
;

39 
	gdf_ö¢_öfo
;

40 
	gdf_ªf_d
;

49 
	#DF_SCAN
 0

	)

50 
	#DF_LR
 1

	)

51 
	#DF_LIVE
 2

	)

52 
	#DF_RD
 3

	)

53 
	#DF_CHAIN
 4

	)

54 
	#DF_WORD_LR
 5

	)

55 
	#DF_NOTE
 6

	)

56 
	#DF_MD
 7

	)

58 
	#DF_LAST_PROBLEM_PLUS1
 (
DF_MD
 + 1)

	)

61 
	edf_Êow_dú


63 
	mDF_NONE
,

64 
	mDF_FORWARD
,

65 
	mDF_BACKWARD


69 
	edf_ªf_˛ass
 {
	mDF_REF_BASE
, 
	mDF_REF_ARTIFICIAL
, 
	mDF_REF_REGULAR
};

74 
	edf_ªf_ty≥
 {
	mDF_REF_REG_DEF
, 
	mDF_REF_REG_USE
,

75 
	mDF_REF_REG_MEM_LOAD
, 
	mDF_REF_REG_MEM_STORE
};

77 
	edf_ªf_Êags


81 
	mDF_REF_CONDITIONAL
 = 1 << 0,

87 
	mDF_REF_AT_TOP
 = 1 << 1,

91 
	mDF_REF_IN_NOTE
 = 1 << 2,

95 
	mDF_HARD_REG_LIVE
 = 1 << 3,

100 
	mDF_REF_PARTIAL
 = 1 << 4,

105 
	mDF_REF_READ_WRITE
 = 1 << 5,

112 
	mDF_REF_MAY_CLOBBER
 = 1 << 6,

123 
	mDF_REF_MUST_CLOBBER
 = 1 << 7,

131 
	mDF_REF_SIGN_EXTRACT
 = 1 << 8,

134 
	mDF_REF_ZERO_EXTRACT
 = 1 << 9,

137 
	mDF_REF_STRICT_LOW_PART
 = 1 << 10,

140 
	mDF_REF_SUBREG
 = 1 << 11,

144 
	mDF_REF_MW_HARDREG
 = 1 << 12,

148 
	mDF_REF_CALL_STACK_USAGE
 = 1 << 13,

151 
	mDF_REF_REG_MARKER
 = 1 << 14,

154 
	mDF_REF_PRE_POST_MODIFY
 = 1 << 15

159 
	edf_ªf_‹dî


162 
	mDF_REF_ORDER_NO_TABLE
,

166 
	mDF_REF_ORDER_UNORDERED
,

167 
	mDF_REF_ORDER_UNORDERED_WITH_NOTES
,

172 
	mDF_REF_ORDER_BY_REG
,

176 
	mDF_REF_ORDER_BY_REG_WITH_NOTES
,

180 
	mDF_REF_ORDER_BY_INSN
,

184 
	mDF_REF_ORDER_BY_INSN_WITH_NOTES


190 (*
	tdf_Æloc_fun˘i⁄
Ë(
	tbôm≠
);

198 (*
	tdf_ª£t_fun˘i⁄
Ë(
	tbôm≠
);

202 (*
	tdf_‰ì_bb_fun˘i⁄
Ë(
	tbasic_block
, *);

205 (*
	tdf_loˇl_compuã_fun˘i⁄
Ë(
	tbôm≠
);

208 (*
	tdf_öô_fun˘i⁄
Ë(
	tbôm≠
);

211 (*
	tdf_d©aÊow_fun˘i⁄
Ë(
	td©aÊow
 *, 
	tbôm≠
, *, );

214 (*
	tdf_c⁄Êuí˚_fun˘i⁄_0
Ë(
	tbasic_block
);

218 
	$boﬁ
 (*
	tdf_c⁄Êuí˚_fun˘i⁄_n
Ë(
	tedge
);

222 
	$boﬁ
 (*
	tdf_å™s„r_fun˘i⁄
) ();

225 (*
	tdf_föÆizî_fun˘i⁄
Ë(
	tbôm≠
);

228 (*
	tdf_‰ì_fun˘i⁄
) ();

233 (*
	tdf_ªmove_¥obÀm_fun˘i⁄
) ();

236 (*
	tdf_dump_¥obÀm_fun˘i⁄
Ë(
	tFILE
 *);

239 (*
	tdf_dump_bb_¥obÀm_fun˘i⁄
Ë(
	tbasic_block
, 
	tFILE
 *);

242 (*
	tdf_dump_ö¢_¥obÀm_fun˘i⁄
Ë(
	tc⁄°_πx
, 
	tFILE
 *);

245 (*
	tdf_vîify_sﬁuti⁄_°¨t
) ();

248 (*
	tdf_vîify_sﬁuti⁄_íd
) ();

253 
	sdf_¥obÀm
 {

256 
id
;

257 
df_Êow_dú
 
dú
;

258 
df_Æloc_fun˘i⁄
 
Æloc_fun
;

259 
df_ª£t_fun˘i⁄
 
ª£t_fun
;

260 
df_‰ì_bb_fun˘i⁄
 
‰ì_bb_fun
;

261 
df_loˇl_compuã_fun˘i⁄
 
loˇl_compuã_fun
;

262 
df_öô_fun˘i⁄
 
öô_fun
;

263 
df_d©aÊow_fun˘i⁄
 
d©aÊow_fun
;

264 
df_c⁄Êuí˚_fun˘i⁄_0
 
c⁄_fun_0
;

265 
df_c⁄Êuí˚_fun˘i⁄_n
 
c⁄_fun_n
;

266 
df_å™s„r_fun˘i⁄
 
å™s_fun
;

267 
df_föÆizî_fun˘i⁄
 
föÆize_fun
;

268 
df_‰ì_fun˘i⁄
 
‰ì_fun
;

269 
df_ªmove_¥obÀm_fun˘i⁄
 
ªmove_¥obÀm_fun
;

270 
df_dump_¥obÀm_fun˘i⁄
 
dump_°¨t_fun
;

271 
df_dump_bb_¥obÀm_fun˘i⁄
 
dump_t›_fun
;

272 
df_dump_bb_¥obÀm_fun˘i⁄
 
dump_bŸtom_fun
;

273 
df_dump_ö¢_¥obÀm_fun˘i⁄
 
dump_ö¢_t›_fun
;

274 
df_dump_ö¢_¥obÀm_fun˘i⁄
 
dump_ö¢_bŸtom_fun
;

275 
df_vîify_sﬁuti⁄_°¨t
 
vîify_°¨t_fun
;

276 
df_vîify_sﬁuti⁄_íd
 
vîify_íd_fun
;

277 
df_¥obÀm
 *
dïídít_¥obÀm
;

278 
block_öfo_ñt_size
;

281 
timev¨_id_t
 
tv_id
;

285 
boﬁ
 
‰ì_blocks_⁄_£t_blocks
;

290 
	sd©aÊow


292 
df_¥obÀm
 *
¥obÀm
;

296 *
block_öfo
;

297 
block_öfo_size
;

300 
Æloc_poﬁ
 
block_poﬁ
;

307 
bôm≠
 
out_of_d©e_å™s„r_fun˘i⁄s
;

313 *
¥obÀm_d©a
;

316 
loˇl_Êags
;

322 
boﬁ
 
compuãd
;

327 
boﬁ
 
sﬁuti⁄s_dúty
;

332 
boﬁ
 
›ti⁄Æ_p
;

340 
	sdf_mw_h¨dªg


342 
πx
 
mw_ªg
;

345 
	`ENUM_BITFIELD
(
df_ªf_ty≥
Ë
ty≥
 : 16;

347 
Êags
 : 16;

348 
°¨t_ªgno
;

349 
íd_ªgno
;

350 
mw_‹dî
;

357 
	sdf_ba£_ªf


361 
	`ENUM_BITFIELD
(
df_ªf_˛ass
Ë
˛
 : 8;

363 
	`ENUM_BITFIELD
(
df_ªf_ty≥
Ë
ty≥
 : 8;

365 
Êags
 : 16;

366 
ªgno
;

367 
πx
 
ªg
;

368 
df_lök
 *
chaö
;

372 
df_ö¢_öfo
 *
ö¢_öfo
;

376 
df_ªf_d
 *
√xt_ªg
;

377 
df_ªf_d
 *
¥ev_ªg
;

380 
id
;

383 
ªf_‹dî
;

389 
	sdf_¨tificül_ªf


391 
df_ba£_ªf
 
ba£
;

395 
basic_block
 
bb
;

399 
	sdf_ªguœr_ªf


401 
df_ba£_ªf
 
ba£
;

406 
πx
 *
loc
;

410 
	udf_ªf_d


412 
df_ba£_ªf
 
ba£
;

413 
df_ªguœr_ªf
 
ªguœr_ªf
;

414 
df_¨tificül_ªf
 
¨tificül_ªf
;

416 
df_ªf_d
 *
	tdf_ªf
;

420 
	sdf_ö¢_öfo


422 
πx
 
ö¢
;

423 
df_ªf
 *
defs
;

424 
df_ªf
 *
u£s
;

426 
df_ªf
 *
eq_u£s
;

427 
df_mw_h¨dªg
 **
mw_h¨dªgs
;

431 
luid
;

436 
	sdf_lök


438 
df_ªf
 
ªf
;

439 
df_lök
 *
√xt
;

443 
	edf_chaö_Êags


446 
DF_DU_CHAIN
 = 1,

447 
DF_UD_CHAIN
 = 2

450 
	edf_ch™góbÀ_Êags


454 
DF_LR_RUN_DCE
 = 1 << 0,

455 
DF_NO_HARD_REGS
 = 1 << 1,

457 
DF_EQ_NOTES
 = 1 << 2,

458 
DF_NO_REGS_EVER_LIVE
 = 1 << 3,

463 
DF_NO_INSN_RESCAN
 = 1 << 4,

468 
DF_DEFER_INSN_RESCAN
 = 1 << 5,

473 
DF_RD_PRUNE_DEAD_DEFS
 = 1 << 6,

475 
DF_VERIFY_SCHEDULED
 = 1 << 7

481 
	sdf_ªf_öfo


483 
df_ªf
 *
ªfs
;

484 *
begö
;

485 *
cou¡
;

486 
ªfs_size
;

494 
èbÀ_size
;

495 
tŸÆ_size
;

497 
df_ªf_‹dî
 
ªf_‹dî
;

502 
	sdf_ªg_öfo


505 
df_ªf
 
ªg_chaö
;

507 
n_ªfs
;

517 
	sdf_d


528 
d©aÊow
 *
¥obÀms_ö_‹dî
[
DF_LAST_PROBLEM_PLUS1
];

529 
d©aÊow
 *
¥obÀms_by_ödex
[
DF_LAST_PROBLEM_PLUS1
];

535 
bôm≠
 
blocks_to_™Æyze
;

540 
df_ªf_öfo
 
def_öfo
;

541 
df_ªf_öfo
 
u£_öfo
;

545 
df_ªg_öfo
 **
def_ªgs
;

546 
df_ªg_öfo
 **
u£_ªgs
;

547 
df_ªg_öfo
 **
eq_u£_ªgs
;

548 
ªgs_size
;

549 
ªgs_öôed
;

552 
df_ö¢_öfo
 **
ö¢s
;

553 
ö¢s_size
;

555 
num_¥obÀms_deföed
;

557 
bôm≠_hód
 
h¨dw¨e_ªgs_u£d
;

560 
bôm≠_hód
 
ªguœr_block_¨tificül_u£s
;

563 
bôm≠_hód
 
eh_block_¨tificül_u£s
;

565 
bôm≠
 
íåy_block_defs
;

566 
bôm≠
 
exô_block_u£s
;

570 
bôm≠_hód
 
ö¢s_to_dñëe
;

571 
bôm≠_hód
 
ö¢s_to_ªsˇn
;

572 
bôm≠_hód
 
ö¢s_to_nŸes_ªsˇn
;

573 *
po°‹dî
;

575 *
po°‹dî_övîãd
;

577 
n_blocks
;

578 
n_blocks_övîãd
;

591 *
h¨d_ªgs_live_cou¡
;

595 
ªf_‹dî
;

599 
ch™góbÀ_Êags
 : 8;

603 
boﬁ
 
™Æyze_sub£t
;

607 
boﬁ
 
ªdo_íåy_™d_exô
;

610 
	#DF_SCAN_BB_INFO
(
BB
Ë(
	`df_sˇn_gë_bb_öfo
 ((BB)->
ödex
))

	)

611 
	#DF_RD_BB_INFO
(
BB
Ë(
	`df_rd_gë_bb_öfo
 ((BB)->
ödex
))

	)

612 
	#DF_LR_BB_INFO
(
BB
Ë(
	`df_Ã_gë_bb_öfo
 ((BB)->
ödex
))

	)

613 
	#DF_LIVE_BB_INFO
(
BB
Ë(
	`df_live_gë_bb_öfo
 ((BB)->
ödex
))

	)

614 
	#DF_WORD_LR_BB_INFO
(
BB
Ë(
	`df_w‹d_Ã_gë_bb_öfo
 ((BB)->
ödex
))

	)

615 
	#DF_MD_BB_INFO
(
BB
Ë(
	`df_md_gë_bb_öfo
 ((BB)->
ödex
))

	)

619 
	#DF_LIVE_IN
(
BB
Ë(&
	`DF_LIVE_BB_INFO
 (BB)->
ö
)

	)

620 
	#DF_LIVE_OUT
(
BB
Ë(&
	`DF_LIVE_BB_INFO
 (BB)->
out
)

	)

625 
	#DF_LR_IN
(
BB
Ë(&
	`DF_LR_BB_INFO
 (BB)->
ö
)

	)

626 
	#DF_LR_OUT
(
BB
Ë(&
	`DF_LR_BB_INFO
 (BB)->
out
)

	)

631 
	#DF_WORD_LR_IN
(
BB
Ë(&
	`DF_WORD_LR_BB_INFO
 (BB)->
ö
)

	)

632 
	#DF_WORD_LR_OUT
(
BB
Ë(&
	`DF_WORD_LR_BB_INFO
 (BB)->
out
)

	)

637 
	#DF_REF_REAL_REG
(
REF
Ë(
	`GET_CODE
 ((REF)->
ba£
.
ªg
Ë=
SUBREG
 \

638 ? 
	`SUBREG_REG
 ((
REF
)->
ba£
.
ªg
Ë: ((REF)->ba£.ªg))

	)

639 
	#DF_REF_REGNO
(
REF
Ë((REF)->
ba£
.
ªgno
)

	)

640 
	#DF_REF_REAL_LOC
(
REF
Ë(
	`GET_CODE
 (*((REF)->
ªguœr_ªf
.
loc
)Ë=
SUBREG
 \

641 ? &
	`SUBREG_REG
 (*((
REF
)->
ªguœr_ªf
.
loc
)Ë: ((REF)->ªguœr_ªf.loc))

	)

642 
	#DF_REF_REG
(
REF
Ë((REF)->
ba£
.
ªg
)

	)

643 
	#DF_REF_LOC
(
REF
Ë(
	`DF_REF_CLASS
 (REFË=
DF_REF_REGULAR
 ? \

644 (
REF
)->
ªguœr_ªf
.
loc
 : 
NULL
)

	)

645 
	#DF_REF_BB
(
REF
Ë(
	`DF_REF_IS_ARTIFICIAL
 (REF) \

646 ? (
REF
)->
¨tificül_ªf
.
bb
 \

647 : 
	`BLOCK_FOR_INSN
 (
	`DF_REF_INSN
 (
REF
)))

	)

648 
	#DF_REF_BBNO
(
REF
Ë(
	`DF_REF_BB
 (REF)->
ödex
)

	)

649 
	#DF_REF_INSN_INFO
(
REF
Ë((REF)->
ba£
.
ö¢_öfo
)

	)

650 
	#DF_REF_INSN
(
REF
Ë((REF)->
ba£
.
ö¢_öfo
->
ö¢
)

	)

651 
	#DF_REF_INSN_UID
(
REF
Ë(
	`INSN_UID
 (
	`DF_REF_INSN
(REF)))

	)

652 
	#DF_REF_CLASS
(
REF
Ë((REF)->
ba£
.
˛
)

	)

653 
	#DF_REF_TYPE
(
REF
Ë((REF)->
ba£
.
ty≥
)

	)

654 
	#DF_REF_CHAIN
(
REF
Ë((REF)->
ba£
.
chaö
)

	)

655 
	#DF_REF_ID
(
REF
Ë((REF)->
ba£
.
id
)

	)

656 
	#DF_REF_FLAGS
(
REF
Ë((REF)->
ba£
.
Êags
)

	)

657 
	#DF_REF_FLAGS_IS_SET
(
REF
, 
v
Ë((
	`DF_REF_FLAGS
 (REFË& (v)Ë!0)

	)

658 
	#DF_REF_FLAGS_SET
(
REF
, 
v
Ë(
	`DF_REF_FLAGS
 (REFË|(v))

	)

659 
	#DF_REF_FLAGS_CLEAR
(
REF
, 
v
Ë(
	`DF_REF_FLAGS
 (REFË&~(v))

	)

660 
	#DF_REF_ORDER
(
REF
Ë((REF)->
ba£
.
ªf_‹dî
)

	)

664 
	#DF_REF_IS_ARTIFICIAL
(
REF
Ë(
	`DF_REF_CLASS
 (REFË=
DF_REF_ARTIFICIAL
)

	)

665 
	#DF_REF_REG_MARK
(
REF
Ë(
	`DF_REF_FLAGS_SET
 ((REF),
DF_REF_REG_MARKER
))

	)

666 
	#DF_REF_REG_UNMARK
(
REF
Ë(
	`DF_REF_FLAGS_CLEAR
 ((REF),
DF_REF_REG_MARKER
))

	)

667 
	#DF_REF_IS_REG_MARKED
(
REF
Ë(
	`DF_REF_FLAGS_IS_SET
 ((REF),
DF_REF_REG_MARKER
))

	)

668 
	#DF_REF_NEXT_REG
(
REF
Ë((REF)->
ba£
.
√xt_ªg
)

	)

669 
	#DF_REF_PREV_REG
(
REF
Ë((REF)->
ba£
.
¥ev_ªg
)

	)

672 
	#DF_REF_EXTRACT_WIDTH
(
REF
Ë((REF)->
exåa˘_ªf
.
width
)

	)

673 
	#DF_REF_EXTRACT_OFFSET
(
REF
Ë((REF)->
exåa˘_ªf
.
off£t
)

	)

674 
	#DF_REF_EXTRACT_MODE
(
REF
Ë((REF)->
exåa˘_ªf
.
mode
)

	)

677 
	#DF_REF_REG_DEF_P
(
REF
Ë(
	`DF_REF_TYPE
 (REFË=
DF_REF_REG_DEF
)

	)

678 
	#DF_REF_REG_USE_P
(
REF
Ë((REFË&& !
	`DF_REF_REG_DEF_P
 (REF))

	)

679 
	#DF_REF_REG_MEM_STORE_P
(
REF
Ë(
	`DF_REF_TYPE
 (REFË=
DF_REF_REG_MEM_STORE
)

	)

680 
	#DF_REF_REG_MEM_LOAD_P
(
REF
Ë(
	`DF_REF_TYPE
 (REFË=
DF_REF_REG_MEM_LOAD
)

	)

681 
	#DF_REF_REG_MEM_P
(
REF
Ë(
	`DF_REF_REG_MEM_STORE_P
 (REF) \

682 || 
	`DF_REF_REG_MEM_LOAD_P
 (
REF
))

	)

684 
	#DF_MWS_REG_DEF_P
(
MREF
Ë(
	`DF_MWS_TYPE
 (MREFË=
DF_REF_REG_DEF
)

	)

685 
	#DF_MWS_REG_USE_P
(
MREF
Ë((MREFË&& !
	`DF_MWS_REG_DEF_P
 (MREF))

	)

686 
	#DF_MWS_TYPE
(
MREF
Ë((MREF)->
ty≥
)

	)

699 
	#DF_DEFS_TABLE_SIZE
(Ë(
df
->
def_öfo
.
èbÀ_size
)

	)

700 
	#DF_DEFS_GET
(
ID
Ë(
df
->
def_öfo
.
ªfs
[(ID)])

	)

701 
	#DF_DEFS_SET
(
ID
,
VAL
Ë(
df
->
def_öfo
.
ªfs
[(ID)]=(VAL))

	)

702 
	#DF_DEFS_COUNT
(
ID
Ë(
df
->
def_öfo
.
cou¡
[(ID)])

	)

703 
	#DF_DEFS_BEGIN
(
ID
Ë(
df
->
def_öfo
.
begö
[(ID)])

	)

704 
	#DF_USES_TABLE_SIZE
(Ë(
df
->
u£_öfo
.
èbÀ_size
)

	)

705 
	#DF_USES_GET
(
ID
Ë(
df
->
u£_öfo
.
ªfs
[(ID)])

	)

706 
	#DF_USES_SET
(
ID
,
VAL
Ë(
df
->
u£_öfo
.
ªfs
[(ID)]=(VAL))

	)

707 
	#DF_USES_COUNT
(
ID
Ë(
df
->
u£_öfo
.
cou¡
[(ID)])

	)

708 
	#DF_USES_BEGIN
(
ID
Ë(
df
->
u£_öfo
.
begö
[(ID)])

	)

712 
	#DF_REG_SIZE
(
DF
Ë(
df
->
ªgs_öôed
)

	)

713 
	#DF_REG_DEF_GET
(
REG
Ë(
df
->
def_ªgs
[(REG)])

	)

714 
	#DF_REG_DEF_CHAIN
(
REG
Ë(
df
->
def_ªgs
[(REG)]->
ªg_chaö
)

	)

715 
	#DF_REG_DEF_COUNT
(
REG
Ë(
df
->
def_ªgs
[(REG)]->
n_ªfs
)

	)

716 
	#DF_REG_USE_GET
(
REG
Ë(
df
->
u£_ªgs
[(REG)])

	)

717 
	#DF_REG_USE_CHAIN
(
REG
Ë(
df
->
u£_ªgs
[(REG)]->
ªg_chaö
)

	)

718 
	#DF_REG_USE_COUNT
(
REG
Ë(
df
->
u£_ªgs
[(REG)]->
n_ªfs
)

	)

719 
	#DF_REG_EQ_USE_GET
(
REG
Ë(
df
->
eq_u£_ªgs
[(REG)])

	)

720 
	#DF_REG_EQ_USE_CHAIN
(
REG
Ë(
df
->
eq_u£_ªgs
[(REG)]->
ªg_chaö
)

	)

721 
	#DF_REG_EQ_USE_COUNT
(
REG
Ë(
df
->
eq_u£_ªgs
[(REG)]->
n_ªfs
)

	)

725 
	#DF_REGNO_FIRST_DEF
(
REGNUM
) \

726 (
	`DF_REG_DEF_GET
(
REGNUM
Ë? DF_REG_DEF_GET (REGNUMË: 0)

	)

727 
	#DF_REGNO_LAST_USE
(
REGNUM
) \

728 (
	`DF_REG_USE_GET
(
REGNUM
Ë? DF_REG_USE_GET (REGNUMË: 0)

	)

732 
	#DF_INSN_SIZE
(Ë((
df
)->
ö¢s_size
)

	)

733 
	#DF_INSN_INFO_GET
(
INSN
Ë(
df
->
ö¢s
[(
	`INSN_UID
 (INSN))])

	)

734 
	#DF_INSN_INFO_SET
(
INSN
,
VAL
Ë(
df
->
ö¢s
[(
	`INSN_UID
 (INSN))]=(VAL))

	)

735 
	#DF_INSN_INFO_LUID
(
II
Ë((II)->
luid
)

	)

736 
	#DF_INSN_INFO_DEFS
(
II
Ë((II)->
defs
)

	)

737 
	#DF_INSN_INFO_USES
(
II
Ë((II)->
u£s
)

	)

738 
	#DF_INSN_INFO_EQ_USES
(
II
Ë((II)->
eq_u£s
)

	)

740 
	#DF_INSN_LUID
(
INSN
Ë(
	`DF_INSN_INFO_LUID
 (
	`DF_INSN_INFO_GET
 (INSN)))

	)

741 
	#DF_INSN_DEFS
(
INSN
Ë(
	`DF_INSN_INFO_DEFS
 (
	`DF_INSN_INFO_GET
 (INSN)))

	)

742 
	#DF_INSN_USES
(
INSN
Ë(
	`DF_INSN_INFO_USES
 (
	`DF_INSN_INFO_GET
 (INSN)))

	)

743 
	#DF_INSN_EQ_USES
(
INSN
Ë(
	`DF_INSN_INFO_EQ_USES
 (
	`DF_INSN_INFO_GET
 (INSN)))

	)

745 
	#DF_INSN_UID_GET
(
UID
Ë(
df
->
ö¢s
[(UID)])

	)

746 
	#DF_INSN_UID_SET
(
UID
,
VAL
Ë(
df
->
ö¢s
[(UID)]=(VAL))

	)

747 
	#DF_INSN_UID_SAFE_GET
(
UID
Ë((()(UIDË< 
	`DF_INSN_SIZE
 ()) \

748 ? 
	`DF_INSN_UID_GET
 (
UID
) \

749 : 
NULL
)

	)

750 
	#DF_INSN_UID_LUID
(
INSN
Ë(
	`DF_INSN_UID_GET
 (INSN)->
luid
)

	)

751 
	#DF_INSN_UID_DEFS
(
INSN
Ë(
	`DF_INSN_UID_GET
 (INSN)->
defs
)

	)

752 
	#DF_INSN_UID_USES
(
INSN
Ë(
	`DF_INSN_UID_GET
 (INSN)->
u£s
)

	)

753 
	#DF_INSN_UID_EQ_USES
(
INSN
Ë(
	`DF_INSN_UID_GET
 (INSN)->
eq_u£s
)

	)

754 
	#DF_INSN_UID_MWS
(
INSN
Ë(
	`DF_INSN_UID_GET
 (INSN)->
mw_h¨dªgs
)

	)

760 
bôm≠_ob°ack
 
df_bôm≠_ob°ack
;

764 
	sdf_sˇn_bb_öfo


775 
df_ªf
 *
¨tificül_defs
;

781 
df_ªf
 *
¨tificül_u£s
;

789 
	sdf_rd_bb_öfo


792 
bôm≠_hód
 
kûl
;

793 
bôm≠_hód
 
•¨£_kûl
;

794 
bôm≠_hód
 
gí
;

797 
bôm≠_hód
 
ö
;

798 
bôm≠_hód
 
out
;

805 
	sdf_md_bb_öfo


808 
bôm≠_hód
 
gí
;

809 
bôm≠_hód
 
kûl
;

810 
bôm≠_hód
 
öô
;

813 
bôm≠_hód
 
ö
;

814 
bôm≠_hód
 
out
;

821 
	sdf_Ã_bb_öfo


824 
bôm≠_hód
 
def
;

826 
bôm≠_hód
 
u£
;

829 
bôm≠_hód
 
ö
;

830 
bôm≠_hód
 
out
;

838 
	sdf_live_bb_öfo


841 
bôm≠_hód
 
kûl
;

843 
bôm≠_hód
 
gí
;

846 
bôm≠_hód
 
ö
;

847 
bôm≠_hód
 
out
;

856 
	sdf_w‹d_Ã_bb_öfo


859 
bôm≠_hód
 
def
;

861 
bôm≠_hód
 
u£
;

864 
bôm≠_hód
 
ö
;

865 
bôm≠_hód
 
out
;

872 
df_d
 *
df
;

873 
	#df_sˇn
 (
df
->
¥obÀms_by_ödex
[
DF_SCAN
])

	)

874 
	#df_rd
 (
df
->
¥obÀms_by_ödex
[
DF_RD
])

	)

875 
	#df_Ã
 (
df
->
¥obÀms_by_ödex
[
DF_LR
])

	)

876 
	#df_live
 (
df
->
¥obÀms_by_ödex
[
DF_LIVE
])

	)

877 
	#df_chaö
 (
df
->
¥obÀms_by_ödex
[
DF_CHAIN
])

	)

878 
	#df_w‹d_Ã
 (
df
->
¥obÀms_by_ödex
[
DF_WORD_LR
])

	)

879 
	#df_nŸe
 (
df
->
¥obÀms_by_ödex
[
DF_NOTE
])

	)

880 
	#df_md
 (
df
->
¥obÀms_by_ödex
[
DF_MD
])

	)

890 
	#DF_DEBUG_CFG


	)

896 
	`df_add_¥obÀm
 (
df_¥obÀm
 *);

897 
	`df_£t_Êags
 ();

898 
	`df_˛ór_Êags
 ();

899 
	`df_£t_blocks
 (
bôm≠
);

900 
	`df_ªmove_¥obÀm
 (
d©aÊow
 *);

901 
	`df_föish_∑ss
 (
boﬁ
);

902 
	`df_™Æyze_¥obÀm
 (
d©aÊow
 *, 
bôm≠
, *, );

903 
	`df_™Æyze
 ();

904 
	`df_™Æyze_lo›
 (
lo›
 *);

905 
	`df_gë_n_blocks
 (
df_Êow_dú
);

906 *
	`df_gë_po°‹dî
 (
df_Êow_dú
);

907 
	`df_sim∂e_d©aÊow
 (
df_Êow_dú
, 
df_öô_fun˘i⁄
,

908 
df_c⁄Êuí˚_fun˘i⁄_0
, 
df_c⁄Êuí˚_fun˘i⁄_n
,

909 
df_å™s„r_fun˘i⁄
, 
bôm≠
, *, );

910 
	`df_m¨k_sﬁuti⁄s_dúty
 ();

911 
boﬁ
 
	`df_gë_bb_dúty
 (
basic_block
);

912 
	`df_£t_bb_dúty
 (
basic_block
);

913 
	`df_com∑˘_blocks
 ();

914 
	`df_bb_ª∂a˚
 (, 
basic_block
);

915 
	`df_bb_dñëe
 ();

916 
	`df_vîify
 ();

917 #ifde‡
DF_DEBUG_CFG


918 
	`df_check_cfg_˛ón
 ();

920 
df_ªf
 
	`df_bb_ªgno_fú°_def_föd
 (
basic_block
, );

921 
df_ªf
 
	`df_bb_ªgno_œ°_def_föd
 (
basic_block
, );

922 
df_ªf
 
	`df_föd_def
 (
πx
,Ñtx);

923 
boﬁ
 
	`df_ªg_deföed
 (
πx
,Ñtx);

924 
df_ªf
 
	`df_föd_u£
 (
πx
,Ñtx);

925 
boﬁ
 
	`df_ªg_u£d
 (
πx
,Ñtx);

926 
	`df_w‹kli°_d©aÊow
 (
d©aÊow
 *,
bôm≠
, *, );

927 
	`df_¥öt_ªg£t
 (
FILE
 *
fûe
, 
bôm≠
 
r
);

928 
	`df_¥öt_w‹d_ªg£t
 (
FILE
 *
fûe
, 
bôm≠
 
r
);

929 
	`df_dump
 (
FILE
 *);

930 
	`df_dump_ªgi⁄
 (
FILE
 *);

931 
	`df_dump_°¨t
 (
FILE
 *);

932 
	`df_dump_t›
 (
basic_block
, 
FILE
 *);

933 
	`df_dump_bŸtom
 (
basic_block
, 
FILE
 *);

934 
	`df_dump_ö¢_t›
 (
c⁄°_πx
, 
FILE
 *);

935 
	`df_dump_ö¢_bŸtom
 (
c⁄°_πx
, 
FILE
 *);

936 
	`df_ªfs_chaö_dump
 (
df_ªf
 *, 
boﬁ
, 
FILE
 *);

937 
	`df_ªgs_chaö_dump
 (
df_ªf
, 
FILE
 *);

938 
	`df_ö¢_debug
 (
πx
, 
boﬁ
, 
FILE
 *);

939 
	`df_ö¢_debug_ªgno
 (
πx
, 
FILE
 *);

940 
	`df_ªgno_debug
 (, 
FILE
 *);

941 
	`df_ªf_debug
 (
df_ªf
, 
FILE
 *);

942 
	`debug_df_ö¢
 (
πx
);

943 
	`debug_df_ªgno
 ();

944 
	`debug_df_ªg
 (
πx
);

945 
	`debug_df_de‚o
 ();

946 
	`debug_df_u£no
 ();

947 
	`debug_df_ªf
 (
df_ªf
);

948 
	`debug_df_chaö
 (
df_lök
 *);

952 
df_lök
 *
	`df_chaö_¸óã
 (
df_ªf
, df_ref);

953 
	`df_chaö_u∆ök
 (
df_ªf
);

954 
	`df_chaö_c›y
 (
df_ªf
, 
df_lök
 *);

955 
	`df_grow_bb_öfo
 (
d©aÊow
 *);

956 
	`df_chaö_dump
 (
df_lök
 *, 
FILE
 *);

957 
	`df_¥öt_bb_ödex
 (
basic_block
 
bb
, 
FILE
 *
fûe
);

958 
	`df_rd_add_¥obÀm
 ();

959 
	`df_rd_simuœã_¨tificül_defs_©_t›
 (
basic_block
, 
bôm≠
);

960 
	`df_rd_simuœã_⁄e_ö¢
 (
basic_block
, 
πx
, 
bôm≠
);

961 
	`df_Ã_add_¥obÀm
 ();

962 
	`df_Ã_vîify_å™s„r_fun˘i⁄s
 ();

963 
	`df_live_vîify_å™s„r_fun˘i⁄s
 ();

964 
	`df_live_add_¥obÀm
 ();

965 
	`df_live_£t_Æl_dúty
 ();

966 
	`df_chaö_add_¥obÀm
 ();

967 
	`df_w‹d_Ã_add_¥obÀm
 ();

968 
boﬁ
 
	`df_w‹d_Ã_m¨k_ªf
 (
df_ªf
, boﬁ, 
bôm≠
);

969 
boﬁ
 
	`df_w‹d_Ã_simuœã_defs
 (
πx
, 
bôm≠
);

970 
	`df_w‹d_Ã_simuœã_u£s
 (
πx
, 
bôm≠
);

971 
	`df_w‹d_Ã_simuœã_¨tificül_ªfs_©_t›
 (
basic_block
, 
bôm≠
);

972 
	`df_w‹d_Ã_simuœã_¨tificül_ªfs_©_íd
 (
basic_block
, 
bôm≠
);

973 
	`df_nŸe_add_¥obÀm
 ();

974 
	`df_md_add_¥obÀm
 ();

975 
	`df_md_simuœã_¨tificül_defs_©_t›
 (
basic_block
, 
bôm≠
);

976 
	`df_md_simuœã_⁄e_ö¢
 (
basic_block
, 
πx
, 
bôm≠
);

977 
	`df_simuœã_föd_no˛obbî_defs
 (
πx
, 
bôm≠
);

978 
	`df_simuœã_föd_defs
 (
πx
, 
bôm≠
);

979 
	`df_simuœã_defs
 (
πx
, 
bôm≠
);

980 
	`df_simuœã_u£s
 (
πx
, 
bôm≠
);

981 
	`df_simuœã_öôülize_backw¨ds
 (
basic_block
, 
bôm≠
);

982 
	`df_simuœã_⁄e_ö¢_backw¨ds
 (
basic_block
, 
πx
, 
bôm≠
);

983 
	`df_simuœã_föÆize_backw¨ds
 (
basic_block
, 
bôm≠
);

984 
	`df_simuœã_öôülize_f‹w¨ds
 (
basic_block
, 
bôm≠
);

985 
	`df_simuœã_⁄e_ö¢_f‹w¨ds
 (
basic_block
, 
πx
, 
bôm≠
);

986 
	`simuœã_backw¨ds_to_poöt
 (
basic_block
, 
ªg£t
, 
πx
);

987 
boﬁ
 
	`ˇn_move_ö¢s_a¸oss
 (
πx
,Ñtx,Ñtx,Ñtx, 
basic_block
, 
ªg£t
,

988 
ªg£t
, 
πx
 *);

991 
	`df_sˇn_Æloc
 (
bôm≠
);

992 
	`df_sˇn_add_¥obÀm
 ();

993 
	`df_grow_ªg_öfo
 ();

994 
	`df_grow_ö¢_öfo
 ();

995 
	`df_sˇn_blocks
 ();

996 
df_ªf
 
	`df_ªf_¸óã
 (
πx
,Ñtx *,Ñtx,
basic_block
,

997 
df_ªf_ty≥
, 
ªf_Êags
);

998 
	`df_u£s_¸óã
 (
πx
 *,Ñtx, );

999 
	`df_ªf_ªmove
 (
df_ªf
);

1000 
df_ö¢_öfo
 * 
	`df_ö¢_¸óã_ö¢_ªc‹d
 (
πx
);

1001 
	`df_ö¢_dñëe
 (
πx
);

1002 
	`df_bb_ªfs_ªc‹d
 (, 
boﬁ
);

1003 
boﬁ
 
	`df_ö¢_ªsˇn
 (
πx
);

1004 
boﬁ
 
	`df_ö¢_ªsˇn_debug_öã∫Æ
 (
πx
);

1005 
	`df_ö¢_ªsˇn_Æl
 ();

1006 
	`df_¥o˚ss_de„ºed_ªsˇns
 ();

1007 
	`df_ªcompuã_luids
 (
basic_block
);

1008 
	`df_ö¢_ch™ge_bb
 (
πx
, 
basic_block
);

1009 
	`df_maybe_ª‹g™ize_u£_ªfs
 (
df_ªf_‹dî
);

1010 
	`df_maybe_ª‹g™ize_def_ªfs
 (
df_ªf_‹dî
);

1011 
	`df_ªf_ch™ge_ªg_wôh_loc
 (, , 
πx
);

1012 
	`df_nŸes_ªsˇn
 (
πx
);

1013 
	`df_h¨d_ªg_öô
 ();

1014 
	`df_upd©e_íåy_block_defs
 ();

1015 
	`df_upd©e_exô_block_u£s
 ();

1016 
	`df_upd©e_íåy_exô_™d_ˇŒs
 ();

1017 
boﬁ
 
	`df_h¨d_ªg_u£d_p
 ();

1018 
	`df_h¨d_ªg_u£d_cou¡
 ();

1019 
boﬁ
 
	`df_ªgs_evî_live_p
 ();

1020 
	`df_£t_ªgs_evî_live
 (, 
boﬁ
);

1021 
	`df_compuã_ªgs_evî_live
 (
boﬁ
);

1022 
boﬁ
 
	`df_ªad_modify_subªg_p
 (
πx
);

1023 
	`df_sˇn_vîify
 ();

1030 
ölöe
 
df_sˇn_bb_öfo
 *

1031 
	$df_sˇn_gë_bb_öfo
 (
ödex
)

1033 i‡(
ödex
 < 
df_sˇn
->
block_öfo_size
)

1034  &((
df_sˇn_bb_öfo
 *Ë
df_sˇn
->
block_öfo
)[
ödex
];

1036  
NULL
;

1037 
	}
}

1039 
ölöe
 
df_rd_bb_öfo
 *

1040 
	$df_rd_gë_bb_öfo
 (
ödex
)

1042 i‡(
ödex
 < 
df_rd
->
block_öfo_size
)

1043  &((
df_rd_bb_öfo
 *Ë
df_rd
->
block_öfo
)[
ödex
];

1045  
NULL
;

1046 
	}
}

1048 
ölöe
 
df_Ã_bb_öfo
 *

1049 
	$df_Ã_gë_bb_öfo
 (
ödex
)

1051 i‡(
ödex
 < 
df_Ã
->
block_öfo_size
)

1052  &((
df_Ã_bb_öfo
 *Ë
df_Ã
->
block_öfo
)[
ödex
];

1054  
NULL
;

1055 
	}
}

1057 
ölöe
 
df_md_bb_öfo
 *

1058 
	$df_md_gë_bb_öfo
 (
ödex
)

1060 i‡(
ödex
 < 
df_md
->
block_öfo_size
)

1061  &((
df_md_bb_öfo
 *Ë
df_md
->
block_öfo
)[
ödex
];

1063  
NULL
;

1064 
	}
}

1066 
ölöe
 
df_live_bb_öfo
 *

1067 
	$df_live_gë_bb_öfo
 (
ödex
)

1069 i‡(
ödex
 < 
df_live
->
block_öfo_size
)

1070  &((
df_live_bb_öfo
 *Ë
df_live
->
block_öfo
)[
ödex
];

1072  
NULL
;

1073 
	}
}

1075 
ölöe
 
df_w‹d_Ã_bb_öfo
 *

1076 
	$df_w‹d_Ã_gë_bb_öfo
 (
ödex
)

1078 i‡(
ödex
 < 
df_w‹d_Ã
->
block_öfo_size
)

1079  &((
df_w‹d_Ã_bb_öfo
 *Ë
df_w‹d_Ã
->
block_öfo
)[
ödex
];

1081  
NULL
;

1082 
	}
}

1089 
ölöe
 
bôm≠


1090 
	$df_gë_live_out
 (
basic_block
 
bb
)

1092 
	`gcc_checkög_as£π
 (
df_Ã
);

1094 i‡(
df_live
)

1095  
	`DF_LIVE_OUT
 (
bb
);

1097  
	`DF_LR_OUT
 (
bb
);

1098 
	}
}

1105 
ölöe
 
bôm≠


1106 
	$df_gë_live_ö
 (
basic_block
 
bb
)

1108 
	`gcc_checkög_as£π
 (
df_Ã
);

1110 i‡(
df_live
)

1111  
	`DF_LIVE_IN
 (
bb
);

1113  
	`DF_LR_IN
 (
bb
);

1114 
	}
}

1119 
ölöe
 
df_ªf
 *

1120 
	$df_gë_¨tificül_defs
 (
bb_ödex
)

1122  
	`df_sˇn_gë_bb_öfo
 (
bb_ödex
)->
¨tificül_defs
;

1123 
	}
}

1128 
ölöe
 
df_ªf
 *

1129 
	$df_gë_¨tificül_u£s
 (
bb_ödex
)

1131  
	`df_sˇn_gë_bb_öfo
 (
bb_ödex
)->
¨tificül_u£s
;

1132 
	}
}

1137 ˛as†
	cweb_íåy_ba£


1139 
	m¥iv©e
:

1141 
web_íåy_ba£
 *
¥ed_pvt
;

1143 
	mpublic
:

1145 
web_íåy_ba£
 *
	$¥ed
 (Ë{  
¥ed_pvt
; }

1146 
	$£t_¥ed
 (
web_íåy_ba£
 *
p
Ë{ 
¥ed_pvt
 =Ö; 
	}
}

1149 
web_íåy_ba£
 *
uni⁄föd_roŸ
 ();

1152 
‰õnd
 
boﬁ
 
uni⁄föd_uni⁄
 (
web_íåy_ba£
 *
fú°
, web_íåy_ba£ *
£c⁄d
);

	@include/diagnostic-color.h

41 #i‚de‡
GCC_DIAGNOSTIC_COLOR_H


42 
	#GCC_DIAGNOSTIC_COLOR_H


	)

51 
	mDIAGNOSTICS_COLOR_NO
 = 0,

52 
	mDIAGNOSTICS_COLOR_YES
 = 1,

53 
	mDIAGNOSTICS_COLOR_AUTO
 = 2

54 } 
	tdügno°ic_cﬁ‹_ruÀ_t
;

56 c⁄° *
cﬁ‹ize_°¨t
 (
boﬁ
, c⁄° *, 
size_t
);

57 c⁄° *
cﬁ‹ize_°›
 (
boﬁ
);

58 
boﬁ
 
cﬁ‹ize_öô
 (
dügno°ic_cﬁ‹_ruÀ_t
);

60 
ölöe
 const *

61 
	$cﬁ‹ize_°¨t
 (
boﬁ
 
show_cﬁ‹
, c⁄° *
«me
)

63  
	`cﬁ‹ize_°¨t
 (
show_cﬁ‹
, 
«me
, 
	`°æí
 (name));

64 
	}
}

	@include/diagnostic-core.h

22 #i‚de‡
GCC_DIAGNOSTIC_CORE_H


23 
	#GCC_DIAGNOSTIC_CORE_H


	)

25 
	~"öput.h
"

26 
	~"bvîsi⁄.h
"

31 
	#DEFINE_DIAGNOSTIC_KIND
(
K
, 
msgid
, 
C
ËK,

	)

32 
	~"dügno°ic.def
"

33 #unde‡
DEFINE_DIAGNOSTIC_KIND


34 
	mDK_LAST_DIAGNOSTIC_KIND
,

37 
	mDK_POP


38 } 
	tdügno°ic_t
;

40 c⁄° *
¥og«me
;

42 c⁄° *
åim_fûíame
 (const *);

46 #i‚de‡
GCC_DIAG_STYLE


47 
	#GCC_DIAG_STYLE
 
__gcc_tdüg__


	)

52 #i‡(
ENABLE_CHECKING
 && 
GCC_VERSION
 >4001Ë|| GCC_VERSION =
BUILDING_GCC_VERSION


53 
	#ATTRIBUTE_GCC_DIAG
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
GCC_DIAG_STYLE
, m,Ç))Ë
	`ATTRIBUTE_NONNULL
(m)

	)

55 
	#ATTRIBUTE_GCC_DIAG
(
m
, 
n
Ë
	`ATTRIBUTE_NONNULL
(m)

	)

57 
	$öã∫Æ_îr‹
 (c⁄° *, ...Ë
	$ATTRIBUTE_GCC_DIAG
(1,2)

58 
ATTRIBUTE_NORETURN
;

60 
boﬁ
 
	$w¨nög
 (, c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(2,3);

61 
boﬁ
 
	$w¨nög_©
 (
loˇti⁄_t
, , const *, ...)

62 
	`ATTRIBUTE_GCC_DIAG
(3,4);

63 
	$îr‹
 (c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(1,2);

64 
	$îr‹_n
 (
loˇti⁄_t
, , const *, const *, ...)

65 
	$ATTRIBUTE_GCC_DIAG
(3,5Ë
	`ATTRIBUTE_GCC_DIAG
(4,5);

66 
	$îr‹_©
 (
loˇti⁄_t
, c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(2,3);

67 
	$Áèl_îr‹
 (c⁄° *, ...Ë
	$ATTRIBUTE_GCC_DIAG
(1,2)

68 
ATTRIBUTE_NORETURN
;

70 
boﬁ
 
	$≥dw¨n
 (
loˇti⁄_t
, , const *, ...)

71 
	`ATTRIBUTE_GCC_DIAG
(3,4);

72 
boﬁ
 
	$≥rmîr‹
 (
loˇti⁄_t
, c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(2,3);

73 
	$s‹ry
 (c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(1,2);

74 
	$öf‹m
 (
loˇti⁄_t
, c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(2,3);

75 
	$öf‹m_n
 (
loˇti⁄_t
, , const *, const *, ...)

76 
	$ATTRIBUTE_GCC_DIAG
(3,5Ë
	`ATTRIBUTE_GCC_DIAG
(4,5);

77 
	$vîb©im
 (c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(1,2);

78 
boﬁ
 
	$emô_dügno°ic
 (
dügno°ic_t
, 
loˇti⁄_t
, ,

79 c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(4,5);

80 
boﬁ
 
	`£í_îr‹
 ();

82 #ifde‡
BUFSIZ


85 
	$‚Ÿi˚
 (
FILE
 *, const *, ...)

86 
ATTRIBUTE_PRINTF_2
;

	@include/diagnostic.h

21 #i‚de‡
GCC_DIAGNOSTIC_H


22 
	#GCC_DIAGNOSTIC_H


	)

24 
	~"¥ëty-¥öt.h
"

25 
	~"dügno°ic-c‹e.h
"

30 
	sdügno°ic_öfo


32 
ãxt_öfo
 
	mmesßge
;

33 
loˇti⁄_t
 
	mloˇti⁄
;

34 
	movîride_cﬁumn
;

36 *
	mx_d©a
;

38 
dügno°ic_t
 
	mköd
;

40 
	m›ti⁄_ödex
;

46 
	sdügno°ic_˛assifiˇti⁄_ch™ge_t


48 
loˇti⁄_t
 
	mloˇti⁄
;

49 
	m›ti⁄
;

50 
dügno°ic_t
 
	mköd
;

54 (*
	tdügno°ic_°¨ãr_‚
Ë(
	tdügno°ic_c⁄ãxt
 *,

55 
	tdügno°ic_öfo
 *);

56 
dügno°ic_°¨ãr_‚
 
	tdügno°ic_föÆizî_‚
;

60 
	sdügno°ic_c⁄ãxt


63 
¥ëty_¥öãr
 *
¥öãr
;

66 
dügno°ic_cou¡
[
DK_LAST_DIAGNOSTIC_KIND
];

70 
boﬁ
 
some_w¨nögs_¨e_îr‹s
;

73 
boﬁ
 
w¨nög_as_îr‹_ªque°ed
;

77 
n_›ts
;

85 
dügno°ic_t
 *
˛assify_dügno°ic
;

92 
dügno°ic_˛assifiˇti⁄_ch™ge_t
 *
˛assifiˇti⁄_hi°‹y
;

95 
n_˛assifiˇti⁄_hi°‹y
;

98 *
push_li°
;

99 
n_push
;

103 
boﬁ
 
show_ˇªt
;

106 
ˇªt_max_width
;

110 
boﬁ
 
show_›ti⁄_ªque°ed
;

113 
boﬁ
 
ab‹t_⁄_îr‹
;

116 
boﬁ
 
show_cﬁumn
;

119 
boﬁ
 
≥d™tic_îr‹s
;

122 
boﬁ
 
≥rmissive
;

126 
›t_≥rmissive
;

129 
boﬁ
 
Áèl_îr‹s
;

132 
boﬁ
 
dc_öhibô_w¨nögs
;

135 
boﬁ
 
dc_w¨n_sy°em_hódîs
;

138 
max_îr‹s
;

147 
dügno°ic_°¨ãr_‚
 
begö_dügno°ic
;

150 
dügno°ic_föÆizî_‚
 
íd_dügno°ic
;

153 (*
öã∫Æ_îr‹
Ë(
dügno°ic_c⁄ãxt
 *, c⁄° *, 
va_li°
 *);

157 (*
›ti⁄_íabÀd
) (, *);

161 *
›ti⁄_°©e
;

169 *(*
›ti⁄_«me
Ë(
dügno°ic_c⁄ãxt
 *, , 
dügno°ic_t
, diagnostic_t);

172 *
x_d©a
;

175 
loˇti⁄_t
 
œ°_loˇti⁄
;

179 c⁄° 
löe_m≠
 *
œ°_moduÀ
;

181 
lock
;

183 
boﬁ
 
öhibô_nŸes_p
;

186 
ölöe
 

187 
	$dügno°ic_öhibô_nŸes
 (
dügno°ic_c⁄ãxt
 * 
c⁄ãxt
)

189 
c⁄ãxt
->
öhibô_nŸes_p
 = 
åue
;

190 
	}
}

194 
	#dügno°ic_°¨ãr
(
DC
Ë(DC)->
begö_dügno°ic


	)

198 
	#dügno°ic_föÆizî
(
DC
Ë(DC)->
íd_dügno°ic


	)

201 
	#dügno°ic_c⁄ãxt_auxûüry_d©a
(
DC
Ë(DC)->
x_d©a


	)

202 
	#dügno°ic_öfo_auxûüry_d©a
(
DI
Ë(DI)->
x_d©a


	)

205 
	#dügno°ic_f‹m©_decodî
(
DC
Ë((DC)->
¥öãr
->
f‹m©_decodî
)

	)

208 
	#dügno°ic_¥efixög_ruÀ
(
DC
Ë((DC)->
¥öãr
->
wøµög
.
ruÀ
)

	)

212 
	#dügno°ic_löe_cutoff
(
DC
Ë((DC)->
¥öãr
->
wøµög
.
löe_cutoff
)

	)

214 
	#dügno°ic_Êush_buf„r
(
DC
Ë
	`µ_Êush
 ((DC)->
¥öãr
)

	)

218 
	#dügno°ic_œ°_moduÀ_ch™ged
(
DC
, 
MAP
) \

219 ((
DC
)->
œ°_moduÀ
 !
MAP
)

	)

223 
	#dügno°ic_£t_œ°_moduÀ
(
DC
, 
MAP
) \

224 (
DC
)->
œ°_moduÀ
 = 
MAP


	)

227 
	#dügno°ic_ab‹t_⁄_îr‹
(
DC
) \

228 (
DC
)->
ab‹t_⁄_îr‹
 = 
åue


	)

233 
dügno°ic_c⁄ãxt
 *
globÆ_dc
;

236 
	#dügno°ic_köd_cou¡
(
DC
, 
DK
Ë(DC)->
dügno°ic_cou¡
[(Ë(DK)]

	)

240 
	#îr‹cou¡
 
	`dügno°ic_köd_cou¡
 (
globÆ_dc
, 
DK_ERROR
)

	)

242 
	#w¨nögcou¡
 
	`dügno°ic_köd_cou¡
 (
globÆ_dc
, 
DK_WARNING
)

	)

244 
	#wîr‹cou¡
 
	`dügno°ic_köd_cou¡
 (
globÆ_dc
, 
DK_WERROR
)

	)

246 
	#s‹rycou¡
 
	`dügno°ic_köd_cou¡
 (
globÆ_dc
, 
DK_SORRY
)

	)

249 
	#dügno°ic_ªp‹t_w¨nögs_p
(
DC
, 
LOC
) \

250 (!(
DC
)->
dc_öhibô_w¨nögs
 \

251 && !(
	`ö_sy°em_hódî_©
 (
LOC
Ë&& !(
DC
)->
dc_w¨n_sy°em_hódîs
))

	)

253 
	#ªp‹t_dügno°ic
(
D
Ë
	`dügno°ic_ªp‹t_dügno°ic
 (
globÆ_dc
, D)

	)

257 
	#dügno°ic_ovîride_cﬁumn
(
DI
, 
COL
Ë(DI)->
ovîride_cﬁumn
 = (COL)

	)

261 
	#dügno°ic_ovîride_›ti⁄_ödex
(
DI
, 
OPTIDX
) \

262 ((
DI
)->
›ti⁄_ödex
 = (
OPTIDX
))

	)

265 
dügno°ic_öôülize
 (
dügno°ic_c⁄ãxt
 *, );

266 
dügno°ic_föish
 (
dügno°ic_c⁄ãxt
 *);

267 
dügno°ic_ªp‹t_cuºít_moduÀ
 (
dügno°ic_c⁄ãxt
 *, 
loˇti⁄_t
);

268 
dügno°ic_show_locus
 (
dügno°ic_c⁄ãxt
 *, c⁄° 
dügno°ic_öfo
 *);

271 
dügno°ic_t
 
dügno°ic_˛assify_dügno°ic
 (
dügno°ic_c⁄ãxt
 *,

273 
dügno°ic_t
 ,

274 
loˇti⁄_t
);

275 
dügno°ic_push_dügno°ics
 (
dügno°ic_c⁄ãxt
 *, 
loˇti⁄_t
);

276 
dügno°ic_p›_dügno°ics
 (
dügno°ic_c⁄ãxt
 *, 
loˇti⁄_t
);

277 
boﬁ
 
dügno°ic_ªp‹t_dügno°ic
 (
dügno°ic_c⁄ãxt
 *,

278 
dügno°ic_öfo
 *);

279 #ifde‡
ATTRIBUTE_GCC_DIAG


280 
	$dügno°ic_£t_öfo
 (
dügno°ic_öfo
 *, c⁄° *, 
va_li°
 *,

281 
loˇti⁄_t
, 
dügno°ic_t
Ë
	`ATTRIBUTE_GCC_DIAG
(2,0);

282 
	$dügno°ic_£t_öfo_å™¶©ed
 (
dügno°ic_öfo
 *, const *,

283 
va_li°
 *, 
loˇti⁄_t
,

284 
dügno°ic_t
)

285 
	`ATTRIBUTE_GCC_DIAG
(2,0);

286 
	$dügno°ic_≠≥nd_nŸe
 (
dügno°ic_c⁄ãxt
 *, 
loˇti⁄_t
,

287 c⁄° *, ...Ë
	`ATTRIBUTE_GCC_DIAG
(3,4);

289 *
	`dügno°ic_buûd_¥efix
 (
dügno°ic_c⁄ãxt
 *, c⁄° 
dügno°ic_öfo
 *);

290 
	`deÁu…_dügno°ic_°¨ãr
 (
dügno°ic_c⁄ãxt
 *, 
dügno°ic_öfo
 *);

291 
	`deÁu…_dügno°ic_föÆizî
 (
dügno°ic_c⁄ãxt
 *, 
dügno°ic_öfo
 *);

292 
	`dügno°ic_£t_ˇªt_max_width
 (
dügno°ic_c⁄ãxt
 *
c⁄ãxt
, 
vÆue
);

294 
	`dügno°ic_fûe_ˇche_föi
 ();

297 *
	`fûe_«me_as_¥efix
 (
dügno°ic_c⁄ãxt
 *, const *);

	@include/double-int.h

20 #i‚de‡
DOUBLE_INT_H


21 
	#DOUBLE_INT_H


	)

49 
	sdoubÀ_öt


58 
doubÀ_öt
 
‰om_uhwi
 (
HOST_WIDE_INT
 
c°
);

59 
doubÀ_öt
 
‰om_shwi
 (
HOST_WIDE_INT
 
c°
);

60 
doubÀ_öt
 
‰om_∑ú
 (
HOST_WIDE_INT
 
high
, HOST_WIDE_INT 
low
);

64 
doubÀ_öt
 
‰om_buf„r
 (c⁄° *
buf„r
, 
Àn
);

70 
doubÀ_öt
 
mask
 (
¥ec
);

71 
doubÀ_öt
 
max_vÆue
 (
¥ec
, 
boﬁ
 
uns
);

72 
doubÀ_öt
 
mö_vÆue
 (
¥ec
, 
boﬁ
 
uns
);

76 
	mdoubÀ_öt
 &
	m›î©‹
 ++ ();

77 
	mdoubÀ_öt
 &
	m›î©‹
 -- ();

78 
	mdoubÀ_öt
 &
	m›î©‹
 *(
doubÀ_öt
);

79 
	mdoubÀ_öt
 &
	m›î©‹
 +(
doubÀ_öt
);

80 
	mdoubÀ_öt
 &
	m›î©‹
 -(
doubÀ_öt
);

81 
	mdoubÀ_öt
 &
	m›î©‹
 &(
doubÀ_öt
);

82 
	mdoubÀ_öt
 &
	m›î©‹
 ^(
doubÀ_öt
);

83 
	mdoubÀ_öt
 &
	m›î©‹
 |(
doubÀ_öt
);

89 
HOST_WIDE_INT
 
to_shwi
 () const;

90 
HOST_WIDE_INT
 
to_uhwi
 () const;

94 
boﬁ
 
fôs_uhwi
 () const;

95 
boﬁ
 
fôs_shwi
 () const;

96 
boﬁ
 
fôs_hwi
 (boﬁ 
uns
) const;

100 
åaûög_zîos
 () const;

101 
p›cou¡
 () const;

105 
boﬁ
 
mu…ùÀ_of
 (
doubÀ_öt
, bool, double_int *) const;

113 
doubÀ_öt
 
£t_bô
 () const;

114 
doubÀ_öt
 
mul_wôh_sign
 (doubÀ_öt, 
boﬁ
 
unsig√d_p
, boﬁ *
ovîÊow
) const;

115 
doubÀ_öt
 
wide_mul_wôh_sign
 (doubÀ_öt, 
boﬁ
 
unsig√d_p
,

116 
doubÀ_öt
 *
highî
, 
boﬁ
 *
ovîÊow
) const;

117 
doubÀ_öt
 
add_wôh_sign
 (doubÀ_öt, 
boﬁ
 
unsig√d_p
, boﬁ *
ovîÊow
) const;

118 
doubÀ_öt
 
sub_wôh_ovîÊow
 (doubÀ_öt, 
boﬁ
 *
ovîÊow
) const;

119 
doubÀ_öt
 
√g_wôh_ovîÊow
 (
boﬁ
 *
ovîÊow
) const;

121 
doubÀ_öt
 
	m›î©‹
 * (
	mdoubÀ_öt
) const;

122 
doubÀ_öt
 
	m›î©‹
 + (
	mdoubÀ_öt
) const;

123 
doubÀ_öt
 
	m›î©‹
 - (
	mdoubÀ_öt
) const;

124 
doubÀ_öt
 
	m›î©‹
 - () const;

125 
doubÀ_öt
 
	m›î©‹
 ~ () const;

126 
doubÀ_öt
 
	m›î©‹
 & (
	mdoubÀ_öt
) const;

127 
doubÀ_öt
 
	m›î©‹
 | (
	mdoubÀ_öt
) const;

128 
doubÀ_öt
 
	m›î©‹
 ^ (
	mdoubÀ_öt
) const;

129 
doubÀ_öt
 
™d_nŸ
 (double_int) const;

131 
doubÀ_öt
 
lshi·
 (
HOST_WIDE_INT
 
cou¡
) const;

132 
doubÀ_öt
 
lshi·
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
, 
boﬁ
 
¨ôh
) const;

133 
doubÀ_öt
 
rshi·
 (
HOST_WIDE_INT
 
cou¡
) const;

134 
doubÀ_öt
 
rshi·
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
, 
boﬁ
 
¨ôh
) const;

135 
doubÀ_öt
 
Æshi·
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
) const;

136 
doubÀ_öt
 
¨shi·
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
) const;

137 
doubÀ_öt
 
Œshi·
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
) const;

138 
doubÀ_öt
 
Ãshi·
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
) const;

139 
doubÀ_öt
 
ÃŸ©e
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
) const;

140 
doubÀ_öt
 
ºŸ©e
 (
HOST_WIDE_INT
 
cou¡
, 
¥ec
) const;

146 
doubÀ_öt
 
div
 (doubÀ_öt, 
boﬁ
, ) const;

147 
doubÀ_öt
 
sdiv
 (double_int, ) const;

148 
doubÀ_öt
 
udiv
 (double_int, ) const;

149 
doubÀ_öt
 
mod
 (doubÀ_öt, 
boﬁ
, ) const;

150 
doubÀ_öt
 
smod
 (double_int, ) const;

151 
doubÀ_öt
 
umod
 (double_int, ) const;

152 
doubÀ_öt
 
divmod_wôh_ovîÊow
 (doubÀ_öt, 
boﬁ
, ,

153 
doubÀ_öt
 *, 
boﬁ
 *) const;

154 
doubÀ_öt
 
divmod
 (doubÀ_öt, 
boﬁ
, , double_int *) const;

155 
doubÀ_öt
 
sdivmod
 (double_int, , double_int *) const;

156 
doubÀ_öt
 
udivmod
 (double_int, , double_int *) const;

160 
doubÀ_öt
 
ext
 (
¥ec
, 
boﬁ
 
uns
) const;

161 
doubÀ_öt
 
zext
 (
¥ec
) const;

162 
doubÀ_öt
 
£xt
 (
¥ec
) const;

166 
boﬁ
 
is_zîo
 () const;

167 
boﬁ
 
is_⁄e
 () const;

168 
boﬁ
 
is_möus_⁄e
 () const;

169 
boﬁ
 
is_√g©ive
 () const;

171 
cmp
 (
doubÀ_öt
 
b
, 
boﬁ
 
uns
) const;

172 
ucmp
 (
doubÀ_öt
 
b
) const;

173 
scmp
 (
doubÀ_öt
 
b
) const;

175 
boﬁ
 
u…
 (
doubÀ_öt
 
b
) const;

176 
boﬁ
 
uÀ
 (
doubÀ_öt
 
b
) const;

177 
boﬁ
 
ugt
 (
doubÀ_öt
 
b
) const;

178 
boﬁ
 
¶t
 (
doubÀ_öt
 
b
) const;

179 
boﬁ
 
¶e
 (
doubÀ_öt
 
b
) const;

180 
boﬁ
 
sgt
 (
doubÀ_öt
 
b
) const;

182 
doubÀ_öt
 
max
 (doubÀ_öà
b
, 
boﬁ
 
uns
);

183 
doubÀ_öt
 
smax
 (doubÀ_öà
b
);

184 
doubÀ_öt
 
umax
 (doubÀ_öà
b
);

186 
doubÀ_öt
 
mö
 (doubÀ_öà
b
, 
boﬁ
 
uns
);

187 
doubÀ_öt
 
smö
 (doubÀ_öà
b
);

188 
doubÀ_öt
 
umö
 (doubÀ_öà
b
);

190 
boﬁ
 
	m›î©‹
 =(
doubÀ_öt
 
c°2
) const;

191 
boﬁ
 
	m›î©‹
 !(
doubÀ_öt
 
c°2
) const;

195 
HOST_WIDE_INT
 
	mlow
;

196 
HOST_WIDE_INT
 
	mhigh
;

200 
	#HOST_BITS_PER_DOUBLE_INT
 (2 * 
HOST_BITS_PER_WIDE_INT
)

	)

207 
ölöe
 
doubÀ_öt


208 
	gdoubÀ_öt
::
	$‰om_shwi
 (
HOST_WIDE_INT
 
c°
)

210 
doubÀ_öt
 
r
;

211 
r
.
low
 = (
HOST_WIDE_INT
Ë
c°
;

212 
r
.
high
 = 
c°
 < 0 ? -1 : 0;

213  
r
;

214 
	}
}

221 
	#doubÀ_öt_möus_⁄e
 (
doubÀ_öt
::
	`‰om_shwi
 (-1))

	)

222 
	#doubÀ_öt_zîo
 (
doubÀ_öt
::
	`‰om_shwi
 (0))

	)

223 
	#doubÀ_öt_⁄e
 (
doubÀ_öt
::
	`‰om_shwi
 (1))

	)

224 
	#doubÀ_öt_two
 (
doubÀ_öt
::
	`‰om_shwi
 (2))

	)

225 
	#doubÀ_öt_ãn
 (
doubÀ_öt
::
	`‰om_shwi
 (10))

	)

230 
ölöe
 
doubÀ_öt


231 
	gdoubÀ_öt
::
	$‰om_uhwi
 (
HOST_WIDE_INT
 
c°
)

233 
doubÀ_öt
 
r
;

234 
r
.
low
 = 
c°
;

235 
r
.
high
 = 0;

236  
r
;

237 
	}
}

239 
ölöe
 
doubÀ_öt


240 
	gdoubÀ_öt
::
	$‰om_∑ú
 (
HOST_WIDE_INT
 
high
, HOST_WIDE_INT 
low
)

242 
doubÀ_öt
 
r
;

243 
r
.
low
 =Üow;

244 
r
.
high
 = high;

245  
r
;

246 
	}
}

248 
ölöe
 
	gdoubÀ_öt
 &

249 
	gdoubÀ_öt
::
›î©‹
 ++ ()

251 *
this
 +
doubÀ_öt_⁄e
;

252  *
	gthis
;

255 
ölöe
 
	gdoubÀ_öt
 &

256 
	gdoubÀ_öt
::
›î©‹
 -- ()

258 *
this
 -
doubÀ_öt_⁄e
;

259  *
	gthis
;

262 
ölöe
 
	gdoubÀ_öt
 &

263 
	gdoubÀ_öt
::
›î©‹
 &(
doubÀ_öt
 
b
)

265 *
this
 = *thi†& 
b
;

266  *
	gthis
;

269 
ölöe
 
	gdoubÀ_öt
 &

270 
	gdoubÀ_öt
::
›î©‹
 ^(
doubÀ_öt
 
b
)

272 *
this
 = *thi†^ 
b
;

273  *
	gthis
;

276 
ölöe
 
	gdoubÀ_öt
 &

277 
	gdoubÀ_öt
::
›î©‹
 |(
doubÀ_öt
 
b
)

279 *
this
 = *thi†| 
b
;

280  *
	gthis
;

286 
ölöe
 
HOST_WIDE_INT


287 
	gdoubÀ_öt
::
	$to_shwi
 () const

289  (
HOST_WIDE_INT
Ë
low
;

290 
	}
}

295 
ölöe
 
HOST_WIDE_INT


296 
	gdoubÀ_öt
::
	$to_uhwi
 () const

298  
low
;

299 
	}
}

303 
ölöe
 
boﬁ


304 
	gdoubÀ_öt
::
	$fôs_uhwi
 () const

306  
high
 == 0;

307 
	}
}

313 
ölöe
 
doubÀ_öt


314 
	gdoubÀ_öt
::
›î©‹
 ~ () const

316 
doubÀ_öt
 
ªsu…
;

317 
	gªsu…
.
	glow
 = ~
low
;

318 
	gªsu…
.
	ghigh
 = ~
high
;

319  
	gªsu…
;

324 
ölöe
 
doubÀ_öt


325 
	gdoubÀ_öt
::
›î©‹
 | (
doubÀ_öt
 
b
) const

327 
doubÀ_öt
 
ªsu…
;

328 
	gªsu…
.
	glow
 = 
low
 | 
b
.low;

329 
	gªsu…
.
	ghigh
 = 
high
 | 
b
.high;

330  
	gªsu…
;

335 
ölöe
 
doubÀ_öt


336 
	gdoubÀ_öt
::
›î©‹
 & (
doubÀ_öt
 
b
) const

338 
doubÀ_öt
 
ªsu…
;

339 
	gªsu…
.
	glow
 = 
low
 & 
b
.low;

340 
	gªsu…
.
	ghigh
 = 
high
 & 
b
.high;

341  
	gªsu…
;

346 
ölöe
 
doubÀ_öt


347 
	gdoubÀ_öt
::
	$™d_nŸ
 (
doubÀ_öt
 
b
) const

349 
doubÀ_öt
 
ªsu…
;

350 
ªsu…
.
low
 =Üow & ~
b
.low;

351 
ªsu…
.
high
 = high & ~
b
.high;

352  
ªsu…
;

353 
	}
}

357 
ölöe
 
doubÀ_öt


358 
	gdoubÀ_öt
::
›î©‹
 ^ (
doubÀ_öt
 
b
) const

360 
doubÀ_öt
 
ªsu…
;

361 
	gªsu…
.
	glow
 = 
low
 ^ 
b
.low;

362 
	gªsu…
.
	ghigh
 = 
high
 ^ 
b
.high;

363  
	gªsu…
;

366 
dump_doubÀ_öt
 (
FILE
 *, 
doubÀ_öt
, 
boﬁ
);

368 
	#ALL_ONES
 (~((
HOST_WIDE_INT
Ë0))

	)

376 
ölöe
 
boﬁ


377 
	gdoubÀ_öt
::
	$is_zîo
 () const

379  
low
 =0 && 
high
 == 0;

380 
	}
}

384 
ölöe
 
boﬁ


385 
	gdoubÀ_öt
::
	$is_⁄e
 () const

387  
low
 =1 && 
high
 == 0;

388 
	}
}

392 
ölöe
 
boﬁ


393 
	gdoubÀ_öt
::
	$is_möus_⁄e
 () const

395  
low
 =
ALL_ONES
 && 
high
 == -1;

396 
	}
}

400 
ölöe
 
boﬁ


401 
	gdoubÀ_öt
::
	$is_√g©ive
 () const

403  
high
 < 0;

404 
	}
}

408 
ölöe
 
boﬁ


409 
	gdoubÀ_öt
::
›î©‹
 =(
doubÀ_öt
 
c°2
) const

411  
low
 =
c°2
.low && 
high
 == cst2.high;

416 
ölöe
 
boﬁ


417 
	gdoubÀ_öt
::
›î©‹
 !(
doubÀ_öt
 
c°2
) const

419  
low
 !
c°2
.low || 
high
 != cst2.high;

424 
ölöe
 

425 
	gdoubÀ_öt
::
	$p›cou¡
 () const

427  
	`p›cou¡_hwi
 (
high
Ë+Ö›cou¡_hwò(
low
);

428 
	}
}

431 #i‚de‡
GENERATOR_FILE


434 
mpz_£t_doubÀ_öt
 (
mpz_t
, 
doubÀ_öt
, 
boﬁ
);

435 
doubÀ_öt
 
mpz_gë_doubÀ_öt
 (
c⁄°_åì
, 
mpz_t
, 
boﬁ
);

	@include/dumpfile.h

21 #i‚de‡
GCC_DUMPFILE_H


22 
	#GCC_DUMPFILE_H
 1

	)

24 
	~"löe-m≠.h
"

28 
	eåì_dump_ödex


30 
	mTDI_n⁄e
,

31 
	mTDI_cgøph
,

32 
	mTDI_öhîô™˚
,

33 
	mTDI_tu
,

34 
	mTDI_˛ass
,

35 
	mTDI_‹igöÆ
,

36 
	mTDI_gíîic
,

37 
	mTDI_√°ed
,

38 
	mTDI_åì_Æl
,

39 
	mTDI_πl_Æl
,

40 
	mTDI_ùa_Æl
,

42 
	mTDI_íd


50 
	#TDF_ADDRESS
 (1 << 0Ë

	)

51 
	#TDF_SLIM
 (1 << 1Ë

	)

52 
	#TDF_RAW
 (1 << 2Ë

	)

53 
	#TDF_DETAILS
 (1 << 3Ë

	)

55 
	#TDF_STATS
 (1 << 4Ë

	)

57 
	#TDF_BLOCKS
 (1 << 5Ë

	)

58 
	#TDF_VOPS
 (1 << 6Ë

	)

59 
	#TDF_LINENO
 (1 << 7Ë

	)

60 
	#TDF_UID
 (1 << 8Ë

	)

62 
	#TDF_TREE
 (1 << 9Ë

	)

63 
	#TDF_RTL
 (1 << 10Ë

	)

64 
	#TDF_IPA
 (1 << 11Ë

	)

65 
	#TDF_STMTADDR
 (1 << 12Ë

	)

67 
	#TDF_GRAPH
 (1 << 13Ë

	)

68 
	#TDF_MEMSYMS
 (1 << 14Ë

	)

71 
	#TDF_DIAGNOSTIC
 (1 << 15Ë

	)

73 
	#TDF_VERBOSE
 (1 << 16Ë

	)

75 
	#TDF_RHS_ONLY
 (1 << 17Ë

	)

77 
	#TDF_ASMNAME
 (1 << 18Ë

	)

78 
	#TDF_EH
 (1 << 19Ë

	)

80 
	#TDF_NOUID
 (1 << 20Ë

	)

81 
	#TDF_ALIAS
 (1 << 21Ë

	)

82 
	#TDF_ENUMERATE_LOCALS
 (1 << 22Ë

	)

83 
	#TDF_CSELIB
 (1 << 23Ë

	)

84 
	#TDF_SCEV
 (1 << 24Ë

	)

85 
	#TDF_COMMENT
 (1 << 25Ë

	)

86 
	#MSG_OPTIMIZED_LOCATIONS
 (1 << 26Ë

	)

87 
	#MSG_MISSED_OPTIMIZATION
 (1 << 27Ë

	)

88 
	#MSG_NOTE
 (1 << 28Ë

	)

89 
	#MSG_ALL
 (
MSG_OPTIMIZED_LOCATIONS
 | 
MSG_MISSED_OPTIMIZATION
 \

90 | 
MSG_NOTE
)

	)

96 
	#OPTGROUP_NONE
 (0)

	)

97 
	#OPTGROUP_IPA
 (1 << 1Ë

	)

98 
	#OPTGROUP_LOOP
 (1 << 2Ë

	)

99 
	#OPTGROUP_INLINE
 (1 << 3Ë

	)

100 
	#OPTGROUP_VEC
 (1 << 4Ë

	)

101 
	#OPTGROUP_OTHER
 (1 << 5Ë

	)

102 
	#OPTGROUP_ALL
 (
OPTGROUP_IPA
 | 
OPTGROUP_LOOP
 | 
OPTGROUP_INLINE
 \

103 | 
OPTGROUP_VEC
 | 
OPTGROUP_OTHER
)

	)

106 
	sdump_fûe_öfo


108 c⁄° *
	msuffix
;

109 c⁄° *
	mswtch
;

110 c⁄° *
	mglob
;

111 c⁄° *
	mpfûíame
;

112 c⁄° *
	mÆt_fûíame
;

113 
FILE
 *
	mp°ªam
;

114 
FILE
 *
	mÆt_°ªam
;

115 
	mpÊags
;

116 
	m›tgroup_Êags
;

117 
	mÆt_Êags
;

118 
	mp°©e
;

119 
	mÆt_°©e
;

120 
	mnum
;

124 
FILE
 *
dump_begö
 (, *);

125 
dump_íd
 (, 
FILE
 *);

126 
›t_öfo_swôch_p
 (const *);

127 c⁄° *
dump_Êag_«me
 ();

128 
	$dump_¥ötf
 (, c⁄° *, ...Ë
ATTRIBUTE_PRINTF_2
;

129 
	$dump_¥ötf_loc
 (, 
sour˚_loˇti⁄
,

130 c⁄° *, ...Ë
ATTRIBUTE_PRINTF_3
;

131 
	`dump_basic_block
 (, 
basic_block
, );

132 
	`dump_gíîic_ex¥_loc
 (, 
sour˚_loˇti⁄
, , 
åì
);

133 
	`dump_gíîic_ex¥
 (, , 
åì
);

134 
	`dump_gim∂e_°mt_loc
 (, 
sour˚_loˇti⁄
, , 
gim∂e
, );

135 
	`dump_gim∂e_°mt
 (, , 
gim∂e
, );

136 
	`¥öt_comböe_tŸÆ_°©s
 ();

137 
boﬁ
 
	`íabÀ_πl_dump_fûe
 ();

140 
	`dump_node
 (
c⁄°_åì
, , 
FILE
 *);

143 
	`dump_comböe_tŸÆ_°©s
 (
FILE
 *);

145 
	`dump_bb
 (
FILE
 *, 
basic_block
, , );

148 
FILE
 *
dump_fûe
;

149 
FILE
 *
Æt_dump_fûe
;

150 
dump_Êags
;

151 c⁄° *
dump_fûe_«me
;

154 
ölöe
 
boﬁ


155 
	$dump_íabÀd_p
 ()

157  (
dump_fûe
 || 
Æt_dump_fûe
);

158 
	}
}

160 
«me•a˚
 
	ggcc
 {

162 ˛as†
	cdump_m™agî


164 
	gpublic
:

166 
dump_m™agî
 ();

169 
dump_ªgi°î
 (c⁄° *
suffix
, c⁄° *
swtch
, c⁄° *
glob
,

170 
Êags
, 
›tgroup_Êags
);

173 
dump_fûe_öfo
 *

174 
gë_dump_fûe_öfo
 (
pha£
) const;

179 
gë_dump_fûe_«me
 (
pha£
) const;

182 
dump_swôch_p
 (c⁄° *
¨g
);

190 
dump_°¨t
 (
pha£
, *
Êag_±r
);

195 
dump_föish
 (
pha£
);

197 
FILE
 *

198 
dump_begö
 (
pha£
, *
Êag_±r
);

202 
dump_öôülized_p
 (
pha£
) const;

206 
dump_Êag_«me
 (
pha£
) const;

208 
	g¥iv©e
:

211 
dump_pha£_íabÀd_p
 (
pha£
) const;

214 
dump_swôch_p_1
 (c⁄° *
¨g
, 
dump_fûe_öfo
 *
dfi
, 
boﬁ
 
doglob
);

217 
dump_íabÀ_Æl
 (
Êags
, c⁄° *
fûíame
);

220 
›t_öfo_íabÀ_∑s£s
 (
›tgroup_Êags
, 
Êags
, c⁄° *
fûíame
);

222 
	g¥iv©e
:

225 
m_√xt_dump
;

226 
dump_fûe_öfo
 *
	gm_exåa_dump_fûes
;

227 
size_t
 
	gm_exåa_dump_fûes_ö_u£
;

228 
size_t
 
	gm_exåa_dump_fûes_Ælo˚d
;

231 
‰õnd
 
	gboﬁ
 ::
íabÀ_πl_dump_fûe
 ();

234 
‰õnd
 ::
›t_öfo_swôch_p
 (c⁄° *
¨g
);

	@include/emit-rtl.h

20 #i‚de‡
GCC_EMIT_RTL_H


21 
	#GCC_EMIT_RTL_H


	)

24 
boﬁ
 
mem_©ås_eq_p
 (c⁄° 
mem_©ås
 *, const mem_attrs *);

27 
£t_mem_Æüs_£t
 (
πx
, 
Æüs_£t_ty≥
);

30 
£t_mem_Æign
 (
πx
, );

33 
£t_mem_addr_•a˚
 (
πx
, 
addr_•a˚_t
);

36 
£t_mem_ex¥
 (
πx
, 
åì
);

39 
£t_mem_off£t
 (
πx
, 
HOST_WIDE_INT
);

42 
˛ór_mem_off£t
 (
πx
);

45 
£t_mem_size
 (
πx
, 
HOST_WIDE_INT
);

48 
˛ór_mem_size
 (
πx
);

51 
£t_mem_©ås_f‹_•ûl
 (
πx
);

52 
åì
 
gë_•ûl_¶Ÿ_de˛
 (
boﬁ
);

58 
πx
 
ª∂a˚_equiv_addªss
 (rtx,Ñtx);

61 
πx
 
ª∂a˚_equiv_addªss_nv
 (rtx,Ñtx);

63 
πx
 
gí_blockage
 ();

64 
πvec
 
gí_πvec
 (, ...);

65 
πx
 
c›y_ö¢_1
 (rtx);

66 
πx
 
c›y_ö¢
 (rtx);

67 
πx
 
c›y_dñay_¶Ÿ_ö¢
 (rtx);

68 
πx
 
gí_öt_mode
 (
HOST_WIDE_INT
, 
machöe_mode
);

69 
πx
 
emô_c›y_of_ö¢_a·î
 (rtx,Ñtx);

70 
£t_ªg_©ås_‰om_vÆue
 (
πx
,Ñtx);

71 
£t_ªg_©ås_f‹_∑rm
 (
πx
,Ñtx);

72 
£t_ªg_©ås_f‹_de˛_πl
 (
åì
 
t
, 
πx
 
x
);

73 
adju°_ªg_mode
 (
πx
, 
machöe_mode
);

74 
mem_ex¥_equÆ_p
 (
c⁄°_åì
, const_tree);

76 
boﬁ
 
√ed_©omic_b¨rõr_p
 (
memmodñ
, bool);

80 
ölöe
 
πx


81 
	$gë_ö¢s
 ()

83  
¸é
->
emô
.
x_fú°_ö¢
;

84 
	}
}

88 
ölöe
 

89 
	$£t_fú°_ö¢
 (
πx
 
ö¢
)

91 
	`gcc_checkög_as£π
 (!
ö¢
 || !
	`PREV_INSN
 (insn));

92 
¸é
->
emô
.
x_fú°_ö¢
 = 
ö¢
;

93 
	}
}

97 
ölöe
 
πx


98 
	$gë_œ°_ö¢
 ()

100  
¸é
->
emô
.
x_œ°_ö¢
;

101 
	}
}

105 
ölöe
 

106 
	$£t_œ°_ö¢
 (
πx
 
ö¢
)

108 
	`gcc_checkög_as£π
 (!
ö¢
 || !
	`NEXT_INSN
 (insn));

109 
¸é
->
emô
.
x_œ°_ö¢
 = 
ö¢
;

110 
	}
}

114 
ölöe
 

115 
	$gë_max_uid
 ()

117  
¸é
->
emô
.
x_cur_ö¢_uid
;

118 
	}
}

120 
£t_de˛_öcomög_πl
 (
åì
, 
πx
, 
boﬁ
);

	@include/except.h

24 #i‚de‡
GCC_EXCEPT_H


25 
	#GCC_EXCEPT_H


	)

28 
	~"hashèb.h
"

30 
	gfun˘i⁄
;

31 
	geh_ªgi⁄_d
;

32 
	gpoöãr_m≠_t
;

35 
	eeh_ªgi⁄_ty≥


42 
	mERT_CLEANUP
,

49 
	mERT_TRY
,

56 
	mERT_ALLOWED_EXCEPTIONS
,

65 
	mERT_MUST_NOT_THROW


72 
GTY
(()Ë
	geh_œndög_∑d_d


75 
eh_œndög_∑d_d
 *
	g√xt_Õ
;

78 
eh_ªgi⁄_d
 *
	gªgi⁄
;

83 
åì
 
	gpo°_œndög_∑d
;

90 
πx
 
	gœndög_∑d
;

93 
	gödex
;

98 
GTY
(()Ë
	geh_ˇtch_d


101 
eh_ˇtch_d
 *
	g√xt_ˇtch
;

102 
eh_ˇtch_d
 *
	g¥ev_ˇtch
;

106 
åì
 
	gty≥_li°
;

111 
åì
 
	gfûãr_li°
;

116 
åì
 
	gœbñ
;

121 
GTY
(()Ë
	geh_ªgi⁄_d


124 
eh_ªgi⁄_d
 *
	gouãr
;

127 
eh_ªgi⁄_d
 *
	gö√r
;

128 
eh_ªgi⁄_d
 *
	g√xt_≥î
;

131 
	gödex
;

134 
eh_ªgi⁄_ty≥
 
	gty≥
;

137 
	ueh_ªgi⁄_u
 {

138 
	seh_ªgi⁄_u_åy
 {

140 
eh_ˇtch_d
 *
	gfú°_ˇtch
;

141 
eh_ˇtch_d
 *
	gœ°_ˇtch
;

142 } 
GTY
 ((
èg
 ("ERT_TRY"))Ë
	geh_åy
;

144 
	seh_ªgi⁄_u_Ælowed
 {

146 
åì
 
	gty≥_li°
;

150 
åì
 
	gœbñ
;

155 
	gfûãr
;

156 } 
GTY
 ((
èg
 ("ERT_ALLOWED_EXCEPTIONS"))Ë
	gÆlowed
;

158 
	seh_ªgi⁄_u_mu°_nŸ_throw
 {

166 
åì
 
	gÁûuª_de˛
;

168 
loˇti⁄_t
 
	gÁûuª_loc
;

169 } 
GTY
 ((
èg
 ("ERT_MUST_NOT_THROW"))Ë
	gmu°_nŸ_throw
;

170 } 
GTY
 ((
desc
 ("%0.ty≥"))Ë
	gu
;

173 
eh_œndög_∑d_d
 *
	gœndög_∑ds
;

178 
πx
 
	gexc_±r_ªg
, 
	gfûãr_ªg
;

182 
boﬁ
 
	gu£_cxa_íd_˛ónup
;

185 
eh_œndög_∑d_d
 *
	teh_œndög_∑d
;

186 
eh_ˇtch_d
 *
	teh_ˇtch
;

187 
eh_ªgi⁄_d
 *
	teh_ªgi⁄
;

194 
GTY
(()Ë
	geh_°©us


197 
eh_ªgi⁄
 
	gªgi⁄_åì
;

200 
	gvec
<
	geh_ªgi⁄
, 
	gva_gc
> *
	gªgi⁄_¨øy
;

203 
	gvec
<
	geh_œndög_∑d
, 
	gva_gc
> *
	gÕ_¨øy
;

207 
hèb_t
 
GTY
((
∑øm_is
 (
throw_°mt_node
))Ë
	gthrow_°mt_èbÀ
;

211 
	gvec
<
	gåì
, 
	gva_gc
> *
	gây≥_d©a
;

217 
	ueh_°©us_u
 {

218 
	gvec
<
	gåì
, 
	gva_gc
> *
GTY
((
èg
 ("1"))Ë
	g¨m_óbi
;

219 
	gvec
<
	guch¨
, 
	gva_gc
> *
GTY
((
èg
 ("0"))Ë
	gŸhî
;

220 } 
GTY
 ((
desc
 ("èrgëm.¨m_óbi_unwödî"))Ë
	geh•ec_d©a
;

226 
f‹_óch_eh_œbñ
 ((*Ë(
πx
));

228 
	`öô_eh_f‹_fun˘i⁄
 ();

230 
	`ªmove_eh_œndög_∑d
 (
eh_œndög_∑d
);

231 
	`ªmove_eh_h™dÀr
 (
eh_ªgi⁄
);

232 
	`ªmove_uƒóchabÀ_eh_ªgi⁄s
 (
sbôm≠
);

234 
boﬁ
 
	`cuºít_fun˘i⁄_has_ex˚±i⁄_h™dÀrs
 ();

235 
	`ouçut_fun˘i⁄_ex˚±i⁄_èbÀ
 (const *);

237 
πx
 
	`ex∑nd_buûtö_eh_poöãr
 (
åì
);

238 
πx
 
	`ex∑nd_buûtö_eh_fûãr
 (
åì
);

239 
πx
 
	`ex∑nd_buûtö_eh_c›y_vÆues
 (
åì
);

240 
	`ex∑nd_buûtö_unwöd_öô
 ();

241 
πx
 
	`ex∑nd_buûtö_eh_ªtu∫_d©a_ªgno
 (
åì
);

242 
πx
 
	`ex∑nd_buûtö_exåa˘_ªtu∫_addr
 (
åì
);

243 
	`ex∑nd_buûtö_öô_dw¨f_ªg_sizes
 (
åì
);

244 
πx
 
	`ex∑nd_buûtö_‰ob_ªtu∫_addr
 (
åì
);

245 
πx
 
	`ex∑nd_buûtö_dw¨f_•_cﬁumn
 ();

246 
	`ex∑nd_buûtö_eh_ªtu∫
 (
åì
,Åree);

247 
	`ex∑nd_eh_ªtu∫
 ();

248 
πx
 
	`ex∑nd_buûtö_exãnd_poöãr
 (
åì
);

249 
	`ex∑nd_dw2_œndög_∑d_f‹_ªgi⁄
 (
eh_ªgi⁄
);

251 
	$åì
 (*
	tdu∂iˇã_eh_ªgi⁄s_m≠
Ë(
	tåì
, *);

252 
poöãr_m≠_t
 *
du∂iˇã_eh_ªgi⁄s


253 (
fun˘i⁄
 *, 
eh_ªgi⁄
, , 
du∂iˇã_eh_ªgi⁄s_m≠
, *);

255 
	`sjlj_emô_fun˘i⁄_exô_a·î
 (
πx
);

257 
eh_ªgi⁄
 
	`gí_eh_ªgi⁄_˛ónup
 (eh_region);

258 
eh_ªgi⁄
 
	`gí_eh_ªgi⁄_åy
 (eh_region);

259 
eh_ªgi⁄
 
	`gí_eh_ªgi⁄_Ælowed
 (eh_ªgi⁄, 
åì
);

260 
eh_ªgi⁄
 
	`gí_eh_ªgi⁄_mu°_nŸ_throw
 (eh_region);

262 
eh_ˇtch
 
	`gí_eh_ªgi⁄_ˇtch
 (
eh_ªgi⁄
, 
åì
);

263 
eh_œndög_∑d
 
	`gí_eh_œndög_∑d
 (
eh_ªgi⁄
);

265 
eh_ªgi⁄
 
	`gë_eh_ªgi⁄_‰om_numbî_‚
 (
fun˘i⁄
 *, );

266 
eh_ªgi⁄
 
	`gë_eh_ªgi⁄_‰om_numbî
 ();

267 
eh_œndög_∑d
 
	`gë_eh_œndög_∑d_‰om_numbî_‚
 (
fun˘i⁄
*,);

268 
eh_œndög_∑d
 
	`gë_eh_œndög_∑d_‰om_numbî
 ();

269 
eh_ªgi⁄
 
	`gë_eh_ªgi⁄_‰om_Õ_numbî_‚
 (
fun˘i⁄
 *, );

270 
eh_ªgi⁄
 
	`gë_eh_ªgi⁄_‰om_Õ_numbî
 ();

272 
eh_ªgi⁄
 
	`eh_ªgi⁄_ouãrmo°
 (
fun˘i⁄
 *,Éh_region,Éh_region);

274 
	`make_ªg_eh_ªgi⁄_nŸe
 (
πx
 
ö¢
, 
ecf_Êags
, 
Õ_ƒ
);

275 
	`make_ªg_eh_ªgi⁄_nŸe_nŸhrow_n⁄⁄loˇl
 (
πx
);

277 
	`vîify_eh_åì
 (
fun˘i⁄
 *);

278 
	`dump_eh_åì
 (
FILE
 *, 
fun˘i⁄
 *);

279 
	`debug_eh_åì
 (
fun˘i⁄
 *);

280 
	`add_ty≥_f‹_ru¡ime
 (
åì
);

281 
åì
 
	`lookup_ty≥_f‹_ru¡ime
 (tree);

282 
	`assign_fûãr_vÆues
 ();

284 
eh_ªgi⁄
 
	`gë_eh_ªgi⁄_‰om_πx
 (
c⁄°_πx
);

285 
eh_œndög_∑d
 
	`gë_eh_œndög_∑d_‰om_πx
 (
c⁄°_πx
);

287 
	`föish_eh_gíî©i⁄
 ();

289 
	`GTY
(()Ë
throw_°mt_node
 {

290 
gim∂e
 
°mt
;

291 
Õ_ƒ
;

292 
	}
};

294 
hèb
 *
gë_eh_throw_°mt_èbÀ
 (
fun˘i⁄
 *);

295 
£t_eh_throw_°mt_èbÀ
 (
fun˘i⁄
 *, 
hèb
 *);

297 
	eeh_≥rs⁄Æôy_köd
 {

298 
	meh_≥rs⁄Æôy_n⁄e
,

299 
	meh_≥rs⁄Æôy_™y
,

300 
	meh_≥rs⁄Æôy_œng


303 
eh_≥rs⁄Æôy_köd


304 
fun˘i⁄_√eds_eh_≥rs⁄Æôy
 (
fun˘i⁄
 *);

308 
ölöe
 
eh_ªgi⁄


309 
	$ehr_√xt
 (
eh_ªgi⁄
 
r
,Éh_ªgi⁄ 
°¨t
)

311 i‡(
r
->
ö√r
)

312 
r
 =Ñ->
ö√r
;

313 i‡(
r
->
√xt_≥î
 &&Ñ !
°¨t
)

314 
r
 =Ñ->
√xt_≥î
;

319 
r
 =Ñ->
ouãr
;

320 i‡(
r
 =
°¨t
)

321  
NULL
;

323 
r
->
√xt_≥î
 =
NULL
);

324 
r
 =Ñ->
√xt_≥î
;

326  
r
;

327 
	}
}

329 
	#FOR_ALL_EH_REGION_AT
(
R
, 
START
) \

330 (
R
Ë(
START
); (RË!
NULL
; (RË
	`ehr_√xt
 (R, START))

	)

332 
	#FOR_ALL_EH_REGION_FN
(
R
, 
FN
) \

333 (
R
Ë(
FN
)->
eh
->
ªgi⁄_åì
; (RË!
NULL
; (RË
	`ehr_√xt
 (R, NULL))

	)

335 
	#FOR_ALL_EH_REGION
(
R
Ë
	`FOR_ALL_EH_REGION_FN
 (R, 
cfun
)

	)

	@include/filenames.h

26 #i‚de‡
FILENAMES_H


27 
	#FILENAMES_H


	)

29 
	~"hashèb.h
"

31 #ifde‡
__˝lu•lus


35 #i‡
deföed
(
__MSDOS__
Ë|| deföed(
_WIN32
Ë|| deföed(
__OS2__
Ë|| deföed (
__CYGWIN__
)

36 #i‚de‡
HAVE_DOS_BASED_FILE_SYSTEM


37 
	#HAVE_DOS_BASED_FILE_SYSTEM
 1

	)

39 #i‚de‡
HAVE_CASE_INSENSITIVE_FILE_SYSTEM


40 
	#HAVE_CASE_INSENSITIVE_FILE_SYSTEM
 1

	)

42 
	#HAS_DRIVE_SPEC
(
f
Ë
	`HAS_DOS_DRIVE_SPEC
 (f)

	)

43 
	#IS_DIR_SEPARATOR
(
c
Ë
	`IS_DOS_DIR_SEPARATOR
 (c)

	)

44 
	#IS_ABSOLUTE_PATH
(
f
Ë
	`IS_DOS_ABSOLUTE_PATH
 (f)

	)

46 #i‡
deföed
(
__APPLE__
)

47 #i‚de‡
HAVE_CASE_INSENSITIVE_FILE_SYSTEM


48 
	#HAVE_CASE_INSENSITIVE_FILE_SYSTEM
 1

	)

51 
	#HAS_DRIVE_SPEC
(
f
Ë(0)

	)

52 
	#IS_DIR_SEPARATOR
(
c
Ë
	`IS_UNIX_DIR_SEPARATOR
 (c)

	)

53 
	#IS_ABSOLUTE_PATH
(
f
Ë
	`IS_UNIX_ABSOLUTE_PATH
 (f)

	)

56 
	#IS_DIR_SEPARATOR_1
(
dos_ba£d
, 
c
) \

57 (((
c
) == '/') \

58 || (((
c
Ë='\\'Ë&& (
dos_ba£d
)))

	)

60 
	#HAS_DRIVE_SPEC_1
(
dos_ba£d
, 
f
) \

61 ((
f
)[0] && ((f)[1] =':'Ë&& (
dos_ba£d
))

	)

65 
	#STRIP_DRIVE_SPEC
(
f
Ë((fË+ 2)

	)

67 
	#IS_DOS_DIR_SEPARATOR
(
c
Ë
	`IS_DIR_SEPARATOR_1
 (1, c)

	)

68 
	#IS_DOS_ABSOLUTE_PATH
(
f
Ë
	`IS_ABSOLUTE_PATH_1
 (1, f)

	)

69 
	#HAS_DOS_DRIVE_SPEC
(
f
Ë
	`HAS_DRIVE_SPEC_1
 (1, f)

	)

71 
	#IS_UNIX_DIR_SEPARATOR
(
c
Ë
	`IS_DIR_SEPARATOR_1
 (0, c)

	)

72 
	#IS_UNIX_ABSOLUTE_PATH
(
f
Ë
	`IS_ABSOLUTE_PATH_1
 (0, f)

	)

79 
	#IS_ABSOLUTE_PATH_1
(
dos_ba£d
, 
f
) \

80 (
	`IS_DIR_SEPARATOR_1
 (
dos_ba£d
, (
f
)[0]) \

81 || 
	`HAS_DRIVE_SPEC_1
 (
dos_ba£d
, 
f
))

	)

83 
fûíame_cmp
 (c⁄° *
s1
, c⁄° *
s2
);

84 
	#FILENAME_CMP
(
s1
, 
s2
Ë
	`fûíame_cmp
(s1, s2)

	)

86 
fûíame_ncmp
 (c⁄° *
s1
, c⁄° *
s2
,

87 
size_t
 
n
);

89 
hashvÆ_t
 
fûíame_hash
 (c⁄° *
s
);

91 
fûíame_eq
 (c⁄° *
s1
, c⁄° *
s2
);

93 #ifde‡
__˝lu•lus


	@include/fixed-value.h

20 #i‚de‡
GCC_FIXED_VALUE_H


21 
	#GCC_FIXED_VALUE_H


	)

23 
	~"machmode.h
"

24 
	~"ªÆ.h
"

25 
	~"doubÀ-öt.h
"

27 
GTY
(()Ë
	gfixed_vÆue


29 
doubÀ_öt
 
	gd©a
;

30 
machöe_mode
 
	gmode
;

33 
	#FIXED_VALUE_TYPE
 
fixed_vÆue


	)

35 
	#MAX_FCONST0
 18

	)

37 
	#MAX_FCONST1
 8

	)

40 
FIXED_VALUE_TYPE
 
fc⁄°0
[
MAX_FCONST0
];

41 
FIXED_VALUE_TYPE
 
fc⁄°1
[
MAX_FCONST1
];

44 
	#FCONST0
(
mode
Ë
fc⁄°0
[modê- 
QQmode
]

	)

45 
	#FCONST1
(
mode
Ë
fc⁄°1
[modê- 
HAmode
]

	)

48 
	#CONST_FIXED_FROM_FIXED_VALUE
(
r
, 
m
) \

49 
	`c⁄°_fixed_‰om_fixed_vÆue
 (
r
, 
m
)

	)

50 
πx
 
c⁄°_fixed_‰om_fixed_vÆue
 (
FIXED_VALUE_TYPE
, 
machöe_mode
);

54 
FIXED_VALUE_TYPE
 
fixed_‰om_doubÀ_öt
 (
doubÀ_öt
,

55 
machöe_mode
);

59 
ölöe
 
πx


60 
	$c⁄°_fixed_‰om_doubÀ_öt
 (
doubÀ_öt
 
∑ylﬂd
,

61 
machöe_mode
 
mode
)

64 
	`c⁄°_fixed_‰om_fixed_vÆue
 (
	`fixed_‰om_doubÀ_öt
 (
∑ylﬂd
, 
mode
),

65 
mode
);

66 
	}
}

69 
fixed_‰om_°rög
 (
FIXED_VALUE_TYPE
 *, const *,

70 
machöe_mode
);

73 
åì
 
buûd_fixed
 (åì, 
FIXED_VALUE_TYPE
);

76 
boﬁ
 
fixed_c⁄vît
 (
FIXED_VALUE_TYPE
 *, 
machöe_mode
,

77 c⁄° 
FIXED_VALUE_TYPE
 *, 
boﬁ
);

80 
boﬁ
 
fixed_c⁄vît_‰om_öt
 (
FIXED_VALUE_TYPE
 *, 
machöe_mode
,

81 
doubÀ_öt
, 
boﬁ
, bool);

84 
boﬁ
 
fixed_c⁄vît_‰om_ªÆ
 (
FIXED_VALUE_TYPE
 *, 
machöe_mode
,

85 c⁄° 
REAL_VALUE_TYPE
 *, 
boﬁ
);

88 
ªÆ_c⁄vît_‰om_fixed
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

89 c⁄° 
FIXED_VALUE_TYPE
 *);

92 
boﬁ
 
fixed_idítiˇl
 (c⁄° 
FIXED_VALUE_TYPE
 *, const FIXED_VALUE_TYPE *);

95 
fixed_hash
 (c⁄° 
FIXED_VALUE_TYPE
 *);

97 
	#FIXED_VALUES_IDENTICAL
(
x
, 
y
Ë
	`fixed_idítiˇl
 (&(x), &(y))

	)

100 
	#FIXED_VALUE_NEGATIVE
(
x
Ë
	`fixed_i¢eg
 (&(x))

	)

103 
fixed_to_decimÆ
 (*
°r
, c⁄° 
FIXED_VALUE_TYPE
 *, 
size_t
);

106 
boﬁ
 
fixed_¨ôhmëic
 (
FIXED_VALUE_TYPE
 *, , const FIXED_VALUE_TYPE *,

107 c⁄° 
FIXED_VALUE_TYPE
 *, 
boﬁ
);

110 
boﬁ
 
fixed_com∑ª
 (, c⁄° 
FIXED_VALUE_TYPE
 *,

111 c⁄° 
FIXED_VALUE_TYPE
 *);

114 
boﬁ
 
fixed_i¢eg
 (c⁄° 
FIXED_VALUE_TYPE
 *);

	@include/flag-types.h

20 #i‚de‡
GCC_FLAG_TYPES_H


21 
	#GCC_FLAG_TYPES_H


	)

23 
	edebug_öfo_ty≥


25 
	mNO_DEBUG
,

26 
	mDBX_DEBUG
,

27 
	mSDB_DEBUG
,

28 
	mDWARF2_DEBUG
,

29 
	mXCOFF_DEBUG
,

30 
	mVMS_DEBUG
,

31 
	mVMS_AND_DWARF2_DEBUG


35 
	edebug_öfo_Àvñs


37 
	mDINFO_LEVEL_NONE
,

38 
	mDINFO_LEVEL_TERSE
,

39 
	mDINFO_LEVEL_NORMAL
,

40 
	mDINFO_LEVEL_VERBOSE


51 
	edebug_öfo_ußge


53 
	mDINFO_USAGE_DFN
,

54 
	mDINFO_USAGE_DIR_USE
,

55 
	mDINFO_USAGE_IND_USE
,

56 
	mDINFO_USAGE_NUM_ENUMS


84 
	edebug_°ru˘_fûe


86 
	mDINFO_STRUCT_FILE_NONE
,

87 
	mDINFO_STRUCT_FILE_BASE
,

89 
	mDINFO_STRUCT_FILE_SYS
,

91 
	mDINFO_STRUCT_FILE_ANY


96 #i‚de‡
SYMBOL_VISIBILITY_DEFINED


97 
	#SYMBOL_VISIBILITY_DEFINED


	)

98 
	esymbﬁ_visibûôy


100 
	mVISIBILITY_DEFAULT
,

101 
	mVISIBILITY_PROTECTED
,

102 
	mVISIBILITY_HIDDEN
,

103 
	mVISIBILITY_INTERNAL


108 
	e°ack_ªu£_Àvñ


110 
	mSR_NONE
,

111 
	mSR_NAMED_VARS
,

112 
	mSR_ALL


116 
	eúa_Æg‹ôhm


118 
	mIRA_ALGORITHM_CB
,

119 
	mIRA_ALGORITHM_PRIORITY


123 
	eúa_ªgi⁄


125 
	mIRA_REGION_ONE
,

126 
	mIRA_REGION_ALL
,

127 
	mIRA_REGION_MIXED
,

131 
	mIRA_REGION_AUTODETECT


135 
	eex˚ss_¥ecisi⁄


137 
	mEXCESS_PRECISION_DEFAULT
,

138 
	mEXCESS_PRECISION_FAST
,

139 
	mEXCESS_PRECISION_STANDARD


143 
	e°ack_check_ty≥


146 
	mNO_STACK_CHECK
 = 0,

150 
	mGENERIC_STACK_CHECK
,

155 
	mSTATIC_BUILTIN_STACK_CHECK
,

159 
	mFULL_BUILTIN_STACK_CHECK


165 
	ew¨n_°ri˘_ovîÊow_code


170 
	mWARN_STRICT_OVERFLOW_ALL
 = 1,

175 
	mWARN_STRICT_OVERFLOW_CONDITIONAL
 = 2,

178 
	mWARN_STRICT_OVERFLOW_COMPARISON
 = 3,

181 
	mWARN_STRICT_OVERFLOW_MISC
 = 4,

184 
	mWARN_STRICT_OVERFLOW_MAGNITUDE
 = 5

188 
	eÂ_c⁄åa˘_mode
 {

189 
	mFP_CONTRACT_OFF
 = 0,

190 
	mFP_CONTRACT_ON
 = 1,

191 
	mFP_CONTRACT_FAST
 = 2

195 
	eve˘_co°_modñ
 {

196 
	mVECT_COST_MODEL_UNLIMITED
 = 0,

197 
	mVECT_COST_MODEL_CHEAP
 = 1,

198 
	mVECT_COST_MODEL_DYNAMIC
 = 2,

199 
	mVECT_COST_MODEL_DEFAULT
 = 3

204 
	eßnôize_code
 {

206 
	mSANITIZE_ADDRESS
 = 1 << 0,

207 
	mSANITIZE_USER_ADDRESS
 = 1 << 1,

208 
	mSANITIZE_KERNEL_ADDRESS
 = 1 << 2,

210 
	mSANITIZE_THREAD
 = 1 << 3,

212 
	mSANITIZE_LEAK
 = 1 << 4,

214 
	mSANITIZE_SHIFT
 = 1 << 5,

215 
	mSANITIZE_DIVIDE
 = 1 << 6,

216 
	mSANITIZE_UNREACHABLE
 = 1 << 7,

217 
	mSANITIZE_VLA
 = 1 << 8,

218 
	mSANITIZE_NULL
 = 1 << 9,

219 
	mSANITIZE_RETURN
 = 1 << 10,

220 
	mSANITIZE_SI_OVERFLOW
 = 1 << 11,

221 
	mSANITIZE_BOOL
 = 1 << 12,

222 
	mSANITIZE_ENUM
 = 1 << 13,

223 
	mSANITIZE_UNDEFINED
 = 
SANITIZE_SHIFT
 | 
SANITIZE_DIVIDE
 | 
SANITIZE_UNREACHABLE


224 | 
SANITIZE_VLA
 | 
SANITIZE_NULL
 | 
SANITIZE_RETURN


225 | 
SANITIZE_SI_OVERFLOW
 | 
SANITIZE_BOOL
 | 
SANITIZE_ENUM


229 
	evtv_¥i‹ôy
 {

230 
	mVTV_NO_PRIORITY
 = 0,

231 
	mVTV_STANDARD_PRIORITY
 = 1,

232 
	mVTV_PREINIT_PRIORITY
 = 2

	@include/flags.h

20 #i‚de‡
GCC_FLAGS_H


21 
	#GCC_FLAGS_H


	)

23 
	~"Êag-ty≥s.h
"

24 
	~"›ti⁄s.h
"

26 #i‡!
deföed
(
IN_LIBGCC2
Ë&& !deföed(
IN_TARGET_LIBS
Ë&& !deföed(
IN_RTS
)

29 c⁄° *c⁄° 
debug_ty≥_«mes
[];

31 
°rù_off_ídög
 (*, );

32 
ba£_of_∑th
 (c⁄° *
∑th
, c⁄° **
ba£_out
);

35 
boﬁ
 
Á°_m©h_Êags_£t_p
 (c⁄° 
gcc_›ti⁄s
 *);

36 
boﬁ
 
Á°_m©h_Êags_°ru˘_£t_p
 (
˛_›timiz©i⁄
 *);

43 
boﬁ
 
föÆ_ö¢s_dump_p
;

49 
	sèrgë_Êag_°©e
 {

54 
	mx_Æign_lo›s_log
;

55 
	mx_Æign_lo›s_max_skù
;

56 
	mx_Æign_jumps_log
;

57 
	mx_Æign_jumps_max_skù
;

58 
	mx_Æign_œbñs_log
;

59 
	mx_Æign_œbñs_max_skù
;

60 
	mx_Æign_fun˘i⁄s_log
;

63 
ex˚ss_¥ecisi⁄
 
	mx_Êag_ex˚ss_¥ecisi⁄
;

66 
èrgë_Êag_°©e
 
deÁu…_èrgë_Êag_°©e
;

67 #i‡
SWITCHABLE_TARGET


68 
èrgë_Êag_°©e
 *
this_èrgë_Êag_°©e
;

70 
	#this_èrgë_Êag_°©e
 (&
deÁu…_èrgë_Êag_°©e
)

	)

73 
	#Æign_lo›s_log
 \

74 (
this_èrgë_Êag_°©e
->
x_Æign_lo›s_log
)

	)

75 
	#Æign_lo›s_max_skù
 \

76 (
this_èrgë_Êag_°©e
->
x_Æign_lo›s_max_skù
)

	)

77 
	#Æign_jumps_log
 \

78 (
this_èrgë_Êag_°©e
->
x_Æign_jumps_log
)

	)

79 
	#Æign_jumps_max_skù
 \

80 (
this_èrgë_Êag_°©e
->
x_Æign_jumps_max_skù
)

	)

81 
	#Æign_œbñs_log
 \

82 (
this_èrgë_Êag_°©e
->
x_Æign_œbñs_log
)

	)

83 
	#Æign_œbñs_max_skù
 \

84 (
this_èrgë_Êag_°©e
->
x_Æign_œbñs_max_skù
)

	)

85 
	#Æign_fun˘i⁄s_log
 \

86 (
this_èrgë_Êag_°©e
->
x_Æign_fun˘i⁄s_log
)

	)

87 
	#Êag_ex˚ss_¥ecisi⁄
 \

88 (
this_èrgë_Êag_°©e
->
x_Êag_ex˚ss_¥ecisi⁄
)

	)

93 
	#abi_vîsi⁄_©_Àa°
(
N
) \

94 (
Êag_abi_vîsi⁄
 =0 || fœg_abi_vîsi⁄ >(
N
))

	)

97 
	#issue_°ri˘_ovîÊow_w¨nög
(
c
Ë(
w¨n_°ri˘_ovîÊow
 >(Ë(c))

	)

	@include/fold-const.h

20 #i‚de‡
GCC_FOLD_CONST_H


21 
	#GCC_FOLD_CONST_H


	)

25 
fﬁdög_öôülizî
;

28 
«tive_ícode_ex¥
 (
c⁄°_åì
, *, );

29 
åì
 
«tive_öãΩªt_ex¥
 (tree, const *, );

37 
åì
 
fﬁd
 (tree);

38 
	#fﬁd_u«ry
(
CODE
,
T1
,
T2
)\

39 
	`fﬁd_u«ry_loc
 (
UNKNOWN_LOCATION
, 
CODE
, 
T1
, 
T2
)

	)

40 
åì
 
fﬁd_u«ry_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree);

41 
	#fﬁd_u«ry_ign‹e_ovîÊow
(
CODE
,
T1
,
T2
)\

42 
	`fﬁd_u«ry_ign‹e_ovîÊow_loc
 (
UNKNOWN_LOCATION
, 
CODE
, 
T1
, 
T2
)

	)

43 
åì
 
fﬁd_u«ry_ign‹e_ovîÊow_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree);

44 
	#fﬁd_bö¨y
(
CODE
,
T1
,
T2
,
T3
)\

45 
	`fﬁd_bö¨y_loc
 (
UNKNOWN_LOCATION
, 
CODE
, 
T1
, 
T2
, 
T3
)

	)

46 
åì
 
fﬁd_bö¨y_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree);

47 
	#fﬁd_ã∫¨y
(
CODE
,
T1
,
T2
,
T3
,
T4
)\

48 
	`fﬁd_ã∫¨y_loc
 (
UNKNOWN_LOCATION
, 
CODE
, 
T1
, 
T2
, 
T3
, 
T4
)

	)

49 
åì
 
fﬁd_ã∫¨y_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree,Åree);

50 
	#fﬁd_buûd1
(
c
,
t1
,
t2
)\

51 
	`fﬁd_buûd1_°©_loc
 (
UNKNOWN_LOCATION
, 
c
, 
t1
, 
t2
 
MEM_STAT_INFO
)

	)

52 
	#fﬁd_buûd1_loc
(
l
,
c
,
t1
,
t2
)\

53 
	`fﬁd_buûd1_°©_loc
 (
l
, 
c
, 
t1
, 
t2
 
MEM_STAT_INFO
)

	)

54 
åì
 
fﬁd_buûd1_°©_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,

55 
åì
 
MEM_STAT_DECL
);

56 
	#fﬁd_buûd2
(
c
,
t1
,
t2
,
t3
)\

57 
	`fﬁd_buûd2_°©_loc
 (
UNKNOWN_LOCATION
, 
c
, 
t1
, 
t2
, 
t3
 
MEM_STAT_INFO
)

	)

58 
	#fﬁd_buûd2_loc
(
l
,
c
,
t1
,
t2
,
t3
)\

59 
	`fﬁd_buûd2_°©_loc
 (
l
, 
c
, 
t1
, 
t2
, 
t3
 
MEM_STAT_INFO
)

	)

60 
åì
 
fﬁd_buûd2_°©_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,

61 
åì
 
MEM_STAT_DECL
);

62 
	#fﬁd_buûd3
(
c
,
t1
,
t2
,
t3
,
t4
)\

63 
	`fﬁd_buûd3_°©_loc
 (
UNKNOWN_LOCATION
, 
c
, 
t1
, 
t2
, 
t3
, 
t4
 
MEM_STAT_INFO
)

	)

64 
	#fﬁd_buûd3_loc
(
l
,
c
,
t1
,
t2
,
t3
,
t4
)\

65 
	`fﬁd_buûd3_°©_loc
 (
l
, 
c
, 
t1
, 
t2
, 
t3
, 
t4
 
MEM_STAT_INFO
)

	)

66 
åì
 
fﬁd_buûd3_°©_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree,

67 
åì
 
MEM_STAT_DECL
);

68 
åì
 
fﬁd_buûd1_öôülizî_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree);

69 
åì
 
fﬁd_buûd2_öôülizî_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree);

70 
	#fﬁd_buûd_ˇŒ_¨øy
(
T1
,
T2
,
N
,
T4
)\

71 
	`fﬁd_buûd_ˇŒ_¨øy_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
, 
N
, 
T4
)

	)

72 
åì
 
fﬁd_buûd_ˇŒ_¨øy_loc
 (
loˇti⁄_t
,Åree,Åree, ,Åree *);

73 
	#fﬁd_buûd_ˇŒ_¨øy_öôülizî
(
T1
,
T2
,
N
,
T4
)\

74 
	`fﬁd_buûd_ˇŒ_¨øy_öôülizî_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
, 
N
, 
T4
)

	)

75 
åì
 
fﬁd_buûd_ˇŒ_¨øy_öôülizî_loc
 (
loˇti⁄_t
,Åree,Åree, ,Åree *);

76 
boﬁ
 
fﬁd_c⁄vîtibÀ_p
 (
c⁄°_åì
, const_tree);

77 
	#fﬁd_c⁄vît
(
T1
,
T2
)\

78 
	`fﬁd_c⁄vît_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
)

	)

79 
åì
 
fﬁd_c⁄vît_loc
 (
loˇti⁄_t
,Åree,Åree);

80 
åì
 
fﬁd_sögÀ_bô_ã°
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree);

81 
åì
 
fﬁd_ign‹ed_ªsu…
 (tree);

82 
åì
 
fﬁd_abs_c⁄°
 (tree,Åree);

83 
åì
 
fﬁd_ödúe˘_ªf_1
 (
loˇti⁄_t
,Åree,Åree);

84 
fﬁd_de„r_ovîÊow_w¨nögs
 ();

85 
fﬁd_unde„r_ovîÊow_w¨nögs
 (
boﬁ
, 
c⁄°_gim∂e
, );

86 
fﬁd_unde„r_™d_ign‹e_ovîÊow_w¨nögs
 ();

87 
boﬁ
 
fﬁd_de„ºög_ovîÊow_w¨nögs_p
 ();

88 
åì
 
fﬁd_fma
 (
loˇti⁄_t
,Åree,Åree,Åree,Åree);

89 
›î™d_equÆ_p
 (
c⁄°_åì
, const_tree, );

90 
mu…ùÀ_of_p
 (
åì
, 
c⁄°_åì
, const_tree);

91 
	#omô_⁄e_›î™d
(
T1
,
T2
,
T3
)\

92 
	`omô_⁄e_›î™d_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
, 
T3
)

	)

93 
åì
 
omô_⁄e_›î™d_loc
 (
loˇti⁄_t
,Åree,Åree,Åree);

94 
	#omô_two_›î™ds
(
T1
,
T2
,
T3
,
T4
)\

95 
	`omô_two_›î™ds_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
, 
T3
, 
T4
)

	)

96 
åì
 
omô_two_›î™ds_loc
 (
loˇti⁄_t
,Åree,Åree,Åree,Åree);

97 
	#övît_åuthvÆue
(
T
)\

98 
	`övît_åuthvÆue_loc
 (
UNKNOWN_LOCATION
, 
T
)

	)

99 
åì
 
övît_åuthvÆue_loc
 (
loˇti⁄_t
,Åree);

100 
åì
 
fﬁd_u«ry_to_c⁄°™t
 (
åì_code
,Åree,Åree);

101 
åì
 
fﬁd_bö¨y_to_c⁄°™t
 (
åì_code
,Åree,Åree,Åree);

102 
åì
 
fﬁd_ªad_‰om_c⁄°™t_°rög
 (tree);

103 
åì
 
öt_c⁄°_bö›
 (
åì_code
, 
c⁄°_åì
, const_tree);

104 
	#buûd_fﬁd_addr_ex¥
(
T
)\

105 
	`buûd_fﬁd_addr_ex¥_loc
 (
UNKNOWN_LOCATION
, (
T
))

	)

106 
åì
 
buûd_fﬁd_addr_ex¥_loc
 (
loˇti⁄_t
,Åree);

107 
	#buûd_fﬁd_addr_ex¥_wôh_ty≥
(
T
,
TYPE
)\

108 
	`buûd_fﬁd_addr_ex¥_wôh_ty≥_loc
 (
UNKNOWN_LOCATION
, (
T
), 
TYPE
)

	)

109 
åì
 
buûd_fﬁd_addr_ex¥_wôh_ty≥_loc
 (
loˇti⁄_t
,Åree,Åree);

110 
åì
 
fﬁd_buûd_˛ónup_poöt_ex¥
 (åì 
ty≥
,Åªê
ex¥
);

111 
åì
 
fﬁd_°rù_sign_›s
 (tree);

112 
	#buûd_fﬁd_ödúe˘_ªf
(
T
)\

113 
	`buûd_fﬁd_ödúe˘_ªf_loc
 (
UNKNOWN_LOCATION
, 
T
)

	)

114 
åì
 
buûd_fﬁd_ödúe˘_ªf_loc
 (
loˇti⁄_t
,Åree);

115 
	#fﬁd_ödúe˘_ªf
(
T
)\

116 
	`fﬁd_ödúe˘_ªf_loc
 (
UNKNOWN_LOCATION
, 
T
)

	)

117 
åì
 
fﬁd_ödúe˘_ªf_loc
 (
loˇti⁄_t
,Åree);

118 
åì
 
buûd_sim∂e_mem_ªf_loc
 (
loˇti⁄_t
,Åree);

119 
	#buûd_sim∂e_mem_ªf
(
T
)\

120 
	`buûd_sim∂e_mem_ªf_loc
 (
UNKNOWN_LOCATION
, 
T
)

	)

121 
doubÀ_öt
 
mem_ªf_off£t
 (
c⁄°_åì
);

122 
åì
 
buûd_öv¨ü¡_addªss
 (åì,Åªe, 
HOST_WIDE_INT
);

123 
åì
 
c⁄°™t_boﬁón_node
 (
boﬁ
,Åree);

124 
åì
 
div_if_zîo_ªmaödî
 (
åì_code
, 
c⁄°_åì
, const_tree);

126 
boﬁ
 
åì_sw≠_›î™ds_p
 (
c⁄°_åì
, const_tree, bool);

127 
åì_code
 
sw≠_åì_com∑ris⁄
 (tree_code);

129 
boﬁ
 
±r_dif„ªn˚_c⁄°
 (
åì
,Åªe, 
HOST_WIDE_INT
 *);

130 
åì_code
 
övît_åì_com∑ris⁄
 (åì_code, 
boﬁ
);

132 
boﬁ
 
åì_u«ry_n⁄zîo_w¨nv_p
 (
åì_code
, 
åì
,Åree, bool *);

133 
boﬁ
 
åì_bö¨y_n⁄zîo_w¨nv_p
 (
åì_code
, 
åì
,Åªe,Åªê
›1
,

134 
boﬁ
 *);

135 
boﬁ
 
åì_sögÀ_n⁄zîo_w¨nv_p
 (
åì
, bool *);

136 
boﬁ
 
åì_u«ry_n⁄√g©ive_w¨nv_p
 (
åì_code
, 
åì
,Åree, bool *);

137 
boﬁ
 
åì_bö¨y_n⁄√g©ive_w¨nv_p
 (
åì_code
, 
åì
,Åree,Åree,

138 
boﬁ
 *);

139 
boﬁ
 
åì_sögÀ_n⁄√g©ive_w¨nv_p
 (
åì
 
t
, boﬁ *
°ri˘_ovîÊow_p
);

140 
boﬁ
 
åì_ˇŒ_n⁄√g©ive_w¨nv_p
 (
åì
,Åree,Åree,Åree, bool *);

142 
boﬁ
 
fﬁd_ªÆ_zîo_addôi⁄_p
 (
c⁄°_åì
, const_tree, );

143 
åì
 
comböe_com∑ris⁄s
 (
loˇti⁄_t
, 
åì_code
, tree_code,

144 
åì_code
, 
åì
,Åree,Åree);

145 
debug_fﬁd_checksum
 (
c⁄°_åì
);

146 
boﬁ
 
may_√g©e_wôhout_ovîÊow_p
 (
c⁄°_åì
);

147 
	#round_up
(
T
,
N
Ë
	`round_up_loc
 (
UNKNOWN_LOCATION
, T, N)

	)

148 
åì
 
round_up_loc
 (
loˇti⁄_t
,Åree, );

149 
	#round_down
(
T
,
N
Ë
	`round_down_loc
 (
UNKNOWN_LOCATION
, T, N)

	)

150 
åì
 
round_down_loc
 (
loˇti⁄_t
,Åree, );

151 
åì
 
size_öt_köd
 (
HOST_WIDE_INT
, 
size_ty≥_köd
);

152 
	#size_bö›
(
CODE
,
T1
,
T2
)\

153 
	`size_bö›_loc
 (
UNKNOWN_LOCATION
, 
CODE
, 
T1
, 
T2
)

	)

154 
åì
 
size_bö›_loc
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree);

155 
	#size_diff›
(
T1
,
T2
)\

156 
	`size_diff›_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
)

	)

157 
åì
 
size_diff›_loc
 (
loˇti⁄_t
,Åree,Åree);

160 
	#n⁄_lvÆue
(
T
Ë
	`n⁄_lvÆue_loc
 (
UNKNOWN_LOCATION
, T)

	)

161 
åì
 
n⁄_lvÆue_loc
 (
loˇti⁄_t
,Åree);

163 
boﬁ
 
åì_ex¥_n⁄√g©ive_p
 (
åì
);

164 
boﬁ
 
åì_ex¥_n⁄√g©ive_w¨nv_p
 (
åì
, bool *);

165 
åì
 
make_ønge
 (åì, *,Åªê*,Åªê*, 
boﬁ
 *);

166 
åì
 
make_ønge_°ï
 (
loˇti⁄_t
, 
åì_code
,Åree,Åree,Åree,

167 
åì
 *,Åªê*, *, 
boﬁ
 *);

168 
åì
 
buûd_ønge_check
 (
loˇti⁄_t
,Åree,Åree, ,Åree,Åree);

169 
boﬁ
 
mîge_ønges
 (*, 
åì
 *,Åree *, ,Åree,Åree, ,

170 
åì
,Åree);

	@include/function.h

20 #i‚de‡
GCC_FUNCTION_H


21 
	#GCC_FUNCTION_H


	)

23 
	~"hashèb.h
"

24 
	~"vec.h
"

25 
	~"machmode.h
"

26 
	~"tm.h
"

27 
	~"h¨d-ªg-£t.h
"

28 
	~"öput.h
"

35 
GTY
(()Ë
	g£quí˚_°ack
 {

37 
πx
 
	gfú°
;

38 
πx
 
	gœ°
;

39 
£quí˚_°ack
 *
	g√xt
;

42 
GTY
(()Ë
	gemô_°©us
 {

45 
	gx_ªg_πx_no
;

48 
	gx_fú°_œbñ_num
;

55 
πx
 
	gx_fú°_ö¢
;

56 
πx
 
	gx_œ°_ö¢
;

62 
£quí˚_°ack
 *
	g£quí˚_°ack
;

66 
	gx_cur_ö¢_uid
;

70 
	gx_cur_debug_ö¢_uid
;

76 
	gªgno_poöãr_Æign_Àngth
;

81 * 
GTY
((
skù
)Ë
	gªgno_poöãr_Æign
;

93 
GTY
 ((
Àngth
 ("¸é->emô.x_ªg_πx_no"))Ë
πx
 * 
ªgno_ªg_πx
;

96 
	#ªg_πx_no
 (
¸é
->
emô
.
x_ªg_πx_no
)

	)

97 
	#£q_°ack
 (
¸é
->
emô
.
£quí˚_°ack
)

	)

99 
	#REGNO_POINTER_ALIGN
(
REGNO
Ë(
¸é
->
emô
.
ªgno_poöãr_Æign
[REGNO])

	)

101 
GTY
(()Ë
	gex¥_°©us
 {

104 
	gx_≥ndög_°ack_adju°
;

121 
	gx_öhibô_de„r_p›
;

127 
	gx_°ack_poöãr_dñè
;

132 
πx
 
	gx_ßvîegs_vÆue
;

135 
πx
 
	gx_≠∂y_¨gs_vÆue
;

138 
πx
 
	gx_f‹˚d_œbñs
;

141 
ˇŒ_sôe_ªc‹d_d
 *
	tˇŒ_sôe_ªc‹d
;

144 
GTY
(()Ë
	gπl_eh
 {

145 
πx
 
	gehr_°ackadj
;

146 
πx
 
	gehr_h™dÀr
;

147 
πx
 
	gehr_œbñ
;

149 
πx
 
	gsjlj_fc
;

150 
πx
 
	gsjlj_exô_a·î
;

152 
	gvec
<
	guch¨
, 
	gva_gc
> *
	ga˘i⁄_ªc‹d_d©a
;

154 
	gvec
<
	gˇŒ_sôe_ªc‹d
, 
	gva_gc
> *
	gˇŒ_sôe_ªc‹d_v
[2];

157 
	#≥ndög_°ack_adju°
 (
¸é
->
ex¥
.
x_≥ndög_°ack_adju°
)

	)

158 
	#öhibô_de„r_p›
 (
¸é
->
ex¥
.
x_öhibô_de„r_p›
)

	)

159 
	#ßvîegs_vÆue
 (
¸é
->
ex¥
.
x_ßvîegs_vÆue
)

	)

160 
	#≠∂y_¨gs_vÆue
 (
¸é
->
ex¥
.
x_≠∂y_¨gs_vÆue
)

	)

161 
	#f‹˚d_œbñs
 (
¸é
->
ex¥
.
x_f‹˚d_œbñs
)

	)

162 
	#°ack_poöãr_dñè
 (
¸é
->
ex¥
.
x_°ack_poöãr_dñè
)

	)

164 
	ggim∂e_df
;

165 
	gãmp_¶Ÿ
;

166 
ãmp_¶Ÿ
 *
	tãmp_¶Ÿ_p
;

167 
	gˇŒ_sôe_ªc‹d_d
;

168 
	gdw_fde_node
;

170 
˛ass
 
	gùa_›t_∑ss_d
;

171 
ùa_›t_∑ss_d
 *
	tùa_›t_∑ss
;

174 
GTY
(()Ë
	gv¨asm_°©us
 {

176 
πx_c⁄°™t_poﬁ
 *
	gpoﬁ
;

180 
	gde„ºed_c⁄°™ts
;

184 
GTY
(()Ë
	göcomög_¨gs
 {

188 
	gp›s_¨gs
;

193 
	gsize
;

198 
	g¥ëíd_¨gs_size
;

202 
πx
 
	g¨g_off£t_πx
;

206 
CUMULATIVE_ARGS
 
	göfo
;

209 
πx
 
	göã∫Æ_¨g_poöãr
;

213 
GTY
(()Ë
	gfun˘i⁄_sub£˘i⁄s
 {

218 c⁄° *
	ghŸ_£˘i⁄_œbñ
;

219 c⁄° *
	gcﬁd_£˘i⁄_œbñ
;

220 c⁄° *
	ghŸ_£˘i⁄_íd_œbñ
;

221 c⁄° *
	gcﬁd_£˘i⁄_íd_œbñ
;

227 
GTY
(()Ë
	g‰ame_•a˚


229 
‰ame_•a˚
 *
	g√xt
;

231 
HOST_WIDE_INT
 
	g°¨t
;

232 
HOST_WIDE_INT
 
	gÀngth
;

236 
GTY
(()Ë
	gπl_d©a
 {

237 
ex¥_°©us
 
	gex¥
;

238 
emô_°©us
 
	gemô
;

239 
v¨asm_°©us
 
	gv¨asm
;

240 
öcomög_¨gs
 
	g¨gs
;

241 
fun˘i⁄_sub£˘i⁄s
 
	gsub£˘i⁄s
;

242 
πl_eh
 
	geh
;

248 
	goutgoög_¨gs_size
;

254 
πx
 
	gªtu∫_πx
;

261 
öôül_vÆue_°ru˘
 *
	gh¨d_ªg_öôül_vÆs
;

265 
åì
 
	g°ack_¥Ÿe˘_gu¨d
;

269 
πx
 
	gx_n⁄loˇl_gŸo_h™dÀr_œbñs
;

274 
πx
 
	gx_ªtu∫_œbñ
;

279 
πx
 
	gx_«ked_ªtu∫_œbñ
;

283 
πx
 
	gx_°ack_¶Ÿ_li°
;

286 
‰ame_•a˚
 *
	g‰ame_•a˚_li°
;

289 
πx
 
	gx_°ack_check_¥obe_nŸe
;

295 
πx
 
	gx_¨g_poöãr_ßve_¨ó
;

298 
πx
 
	gdøp_ªg
;

303 
HOST_WIDE_INT
 
	gx_‰ame_off£t
;

306 
πx
 
	gx_∑rm_búth_ö¢
;

309 
	gvec
<
	gãmp_¶Ÿ_p
, 
	gva_gc
> *
	gx_u£d_ãmp_¶Ÿs
;

312 
ãmp_¶Ÿ
 *
	gx_avaû_ãmp_¶Ÿs
;

315 
	gx_ãmp_¶Ÿ_Àvñ
;

319 
	g°ack_Æignmít_√eded
;

323 
	g¥e„ºed_°ack_bound¨y
;

326 
	g∑rm_°ack_bound¨y
;

329 
	gmax_u£d_°ack_¶Ÿ_Æignmít
;

338 
	g°ack_Æignmít_e°im©ed
;

344 
boﬁ
 
	gac˚s£s_¥i‹_‰ames
;

347 
boﬁ
 
	gˇŒs_eh_ªtu∫
;

351 
boﬁ
 
	gßves_Æl_ªgi°îs
;

355 
boﬁ
 
	ghas_n⁄loˇl_gŸo
;

358 
boﬁ
 
	ghas_asm_°©emít
;

365 
boﬁ
 
	gÆl_throwîs_¨e_sibˇŒs
;

369 
boﬁ
 
	glimô_°ack
;

372 
boﬁ
 
	g¥ofûe
;

375 
boﬁ
 
	gu£s_c⁄°_poﬁ
;

378 
boﬁ
 
	gu£s_pic_off£t_èbÀ
;

381 
boﬁ
 
	gu£s_eh_lsda
;

384 
boﬁ
 
	gèû_ˇŒ_emô
;

387 
boﬁ
 
	g¨g_poöãr_ßve_¨ó_öô
;

392 
boﬁ
 
	g‰ame_poöãr_√eded
;

395 
boﬁ
 
	gmaybe_hŸ_ö¢_p
;

402 
boﬁ
 
	g°ack_ªÆign_√eded
;

407 
boﬁ
 
	g°ack_ªÆign_åõd
;

411 
boﬁ
 
	g√ed_døp
;

416 
boﬁ
 
	g°ack_ªÆign_¥o˚s£d
;

420 
boﬁ
 
	g°ack_ªÆign_föÆized
;

423 
boﬁ
 
	gdbr_scheduÀd_p
;

428 
boﬁ
 
	gnŸhrow
;

431 
boﬁ
 
	gshrök_wøµed
;

436 
boﬁ
 
	g•_is_unch™gög
;

442 
boﬁ
 
	gis_Àaf
;

447 
boﬁ
 
	gu£s_⁄ly_Àaf_ªgs
;

452 
boﬁ
 
	ghas_bb_∑πôi⁄
;

456 
boﬁ
 
	gbb_ª‹dî_com∂ëe
;

462 
HARD_REG_SET
 
	gasm_˛obbîs
;

465 
	#ªtu∫_œbñ
 (
¸é
->
x_ªtu∫_œbñ
)

	)

466 
	#«ked_ªtu∫_œbñ
 (
¸é
->
x_«ked_ªtu∫_œbñ
)

	)

467 
	#°ack_¶Ÿ_li°
 (
¸é
->
x_°ack_¶Ÿ_li°
)

	)

468 
	#∑rm_búth_ö¢
 (
¸é
->
x_∑rm_búth_ö¢
)

	)

469 
	#‰ame_off£t
 (
¸é
->
x_‰ame_off£t
)

	)

470 
	#°ack_check_¥obe_nŸe
 (
¸é
->
x_°ack_check_¥obe_nŸe
)

	)

471 
	#¨g_poöãr_ßve_¨ó
 (
¸é
->
x_¨g_poöãr_ßve_¨ó
)

	)

472 
	#u£d_ãmp_¶Ÿs
 (
¸é
->
x_u£d_ãmp_¶Ÿs
)

	)

473 
	#avaû_ãmp_¶Ÿs
 (
¸é
->
x_avaû_ãmp_¶Ÿs
)

	)

474 
	#ãmp_¶Ÿ_Àvñ
 (
¸é
->
x_ãmp_¶Ÿ_Àvñ
)

	)

475 
	#n⁄loˇl_gŸo_h™dÀr_œbñs
 (
¸é
->
x_n⁄loˇl_gŸo_h™dÀr_œbñs
)

	)

476 
	#‰ame_poöãr_√eded
 (
¸é
->
‰ame_poöãr_√eded
)

	)

477 
	#°ack_ªÆign_Â
 (
¸é
->
°ack_ªÆign_√eded
 && !¸é->
√ed_døp
)

	)

478 
	#°ack_ªÆign_døp
 (
¸é
->
°ack_ªÆign_√eded
 && cπl->
√ed_døp
)

	)

480 
GTY
(()Ë
πl_d©a
 
x_πl
;

485 
	#¸é
 (&
x_πl
)

	)

487 
GTY
(()Ë
	g°ack_ußge


490 
HOST_WIDE_INT
 
	g°©ic_°ack_size
;

494 
HOST_WIDE_INT
 
	gdy«mic_°ack_size
;

498 
	gpushed_°ack_size
;

502 
	ghas_unbounded_dy«mic_°ack_size
 : 1;

505 
	#cuºít_fun˘i⁄_°©ic_°ack_size
 (
cfun
->
su
->
°©ic_°ack_size
)

	)

506 
	#cuºít_fun˘i⁄_dy«mic_°ack_size
 (
cfun
->
su
->
dy«mic_°ack_size
)

	)

507 
	#cuºít_fun˘i⁄_pushed_°ack_size
 (
cfun
->
su
->
pushed_°ack_size
)

	)

508 
	#cuºít_fun˘i⁄_has_unbounded_dy«mic_°ack_size
 \

509 (
cfun
->
su
->
has_unbounded_dy«mic_°ack_size
)

	)

510 
	#cuºít_fun˘i⁄_Æloˇãs_dy«mic_°ack_•a˚
 \

511 (
cuºít_fun˘i⁄_dy«mic_°ack_size
 != 0 \

512 || 
cuºít_fun˘i⁄_has_unbounded_dy«mic_°ack_size
)

	)

517 
GTY
(()Ë
	gfun˘i⁄
 {

518 
eh_°©us
 *
	geh
;

521 
c⁄åﬁ_Êow_gøph
 *
	gcfg
;

524 
gim∂e_£q
 
	ggim∂e_body
;

527 
gim∂e_df
 *
	ggim∂e_df
;

530 
lo›s
 *
	gx_cuºít_lo›s
;

533 
°ack_ußge
 *
	gsu
;

536 
hèb_t
 
GTY
((
skù
)Ë
	gvÆue_hi°ogøms
;

541 
åì
 
	gde˛
;

545 
åì
 
	g°©ic_chaö_de˛
;

550 
åì
 
	gn⁄loˇl_gŸo_ßve_¨ó
;

553 
	gvec
<
	gåì
, 
	gva_gc
> *
	gloˇl_de˛s
;

556 
åì
 
	gcûk_‰ame_de˛
;

561 
machöe_fun˘i⁄
 * 
GTY
 ((
maybe_undef
)Ë
	gmachöe
;

564 
œnguage_fun˘i⁄
 * 
	gœnguage
;

567 
hèb_t
 
GTY
 ((
∑øm_is
 (
åì_node
))Ë
	gu£d_ty≥s_hash
;

572 
dw_fde_node
 *
	gfde
;

575 
	gœ°_°mt_uid
;

578 
	gfuncdef_no
;

581 
loˇti⁄_t
 
	gfun˘i⁄_°¨t_locus
;

584 
loˇti⁄_t
 
	gfun˘i⁄_íd_locus
;

587 
	gcuº_¥›îtõs
;

588 
	gœ°_vîifõd
;

593 c⁄° * 
GTY
((
skù
)Ë
	gˇ¬Ÿ_be_c›õd_ªas⁄
;

600 
	gva_li°_g¥_size
 : 8;

604 
	gva_li°_Âr_size
 : 8;

607 
	gˇŒs_£tjmp
 : 1;

611 
	gˇŒs_Æloˇ
 : 1;

614 
	gis_cûk_fun˘i⁄
 : 1;

617 
	gˇŒs_cûk_•awn
 : 1;

621 
	ghas_n⁄loˇl_œbñ
 : 1;

626 
	gˇ¬Ÿ_be_c›õd_£t
 : 1;

629 
	g°d¨g
 : 1;

631 
	ga·î_ölöög
 : 1;

632 
	gÆways_ölöe_fun˘i⁄s_ölöed
 : 1;

636 
	gˇn_throw_n⁄_ˇŒ_ex˚±i⁄s
 : 1;

640 
	gˇn_dñëe_dód_ex˚±i⁄s
 : 1;

647 
	gªtu∫s_°ru˘
 : 1;

651 
	gªtu∫s_pcc_°ru˘
 : 1;

655 
	ghas_loˇl_ex∂icô_ªg_v¨s
 : 1;

661 
	gis_thunk
 : 1;

665 
	ghas_f‹˚_ve˘_lo›s
 : 1;

669 
	ghas_simduid_lo›s
 : 1;

672 
	gèû_ˇŒ_m¨ked
 : 1;

677 
add_loˇl_de˛
 (
fun˘i⁄
 *
fun
, 
åì
 
d
);

679 
	#FOR_EACH_LOCAL_DECL
(
FUN
, 
I
, 
D
) \

680 
	`FOR_EACH_VEC_SAFE_ELT_REVERSE
 ((
FUN
)->
loˇl_de˛s
, 
I
, 
D
)

	)

684 
	#VA_LIST_MAX_GPR_SIZE
 255

	)

685 
	#VA_LIST_MAX_FPR_SIZE
 255

	)

688 
GTY
(()Ë
fun˘i⁄
 *
cfun
;

693 
	#cfun
 (
cfun
 + 0)

	)

696 
vútuÆs_ö°™tüãd
;

699 
åampﬁöes_¸óãd
;

701 
GTY
(()Ë
	gty≥s_u£d_by_v¨s_íåy
 {

702 
åì
 
	gty≥
;

703 
åì
 
	gv¨_de˛
;

711 
GTY
((
	$∑øm_is
 (
ty≥s_u£d_by_v¨s_íåy
))Ë
hèb_t


712 
ty≥s_u£d_by_v¨s_hash
;

714 
hashvÆ_t
 
	`ty≥s_u£d_by_v¨s_do_hash
 (const *);

715 
	`ty≥s_u£d_by_v¨s_eq
 (const *, const *);

716 
	`ty≥s_u£d_by_v¨_de˛_ö£π
 (
åì
 
ty≥
,Åªê
v¨_de˛
);

720 
	`GTY
(()Ë
vec
<
åì
, 
va_gc
> *
ty≥s_u£d_by_cur_v¨_de˛
;

723 
	`£t_cfun
 (
fun˘i⁄
 *
√w_cfun
);

724 
	`push_cfun
 (
fun˘i⁄
 *
√w_cfun
);

725 
	`p›_cfun
 ();

726 
	`ö°™tüã_de˛_πl
 (
πx
 
x
);

730 
ölöe
 
lo›s
 *

731 
	$lo›s_f‹_‚
 (
fun˘i⁄
 *
‚
)

733  
‚
->
x_cuºít_lo›s
;

734 
	}
}

738 
ölöe
 

739 
	$£t_lo›s_f‹_‚
 (
fun˘i⁄
 *
‚
, 
lo›s
 *loops)

741 
	`gcc_checkög_as£π
 (
‚
->
x_cuºít_lo›s
 =
NULL
 || 
lo›s
 == NULL);

742 
‚
->
x_cuºít_lo›s
 = 
lo›s
;

743 
	}
}

746 
	#cuºít_fun˘i⁄_funcdef_no
 (
cfun
->
funcdef_no
)

	)

748 
	#cuºít_lo›s
 (
cfun
->
x_cuºít_lo›s
)

	)

749 
	#dom_compuãd
 (
cfun
->
cfg
->
x_dom_compuãd
)

	)

750 
	#n_bbs_ö_dom_åì
 (
cfun
->
cfg
->
x_n_bbs_ö_dom_åì
)

	)

751 
	#VALUE_HISTOGRAMS
(
fun
Ë(fun)->
vÆue_hi°ogøms


	)

755 
ª‹dî_blocks
 ();

758 
numbî_blocks
 (
åì
);

760 
˛ór_block_m¨ks
 (
åì
);

761 
åì
 
blocks_ƒevî£
 (tree);

762 
åì
 
block_chaö⁄
 (tree,Åree);

767 
HOST_WIDE_INT
 
gë_‰ame_size
 ();

772 
boﬁ
 
‰ame_off£t_ovîÊow
 (
HOST_WIDE_INT
, 
åì
);

776 
machöe_fun˘i⁄
 * (*
öô_machöe_°©us
) ();

779 
‰ì_a·î_∑rsög
 (
fun˘i⁄
 *);

780 
‰ì_a·î_compû©i⁄
 (
fun˘i⁄
 *);

782 
öô_v¨asm_°©us
 ();

784 #ifde‡
RTX_CODE


785 
diddÀ_ªtu∫_vÆue
 ((*)(
πx
, *), *);

786 
	`˛obbî_ªtu∫_ªgi°î
 ();

789 
πx
 
	`gë_¨g_poöãr_ßve_¨ó
 ();

792 c⁄° *
	`‚de˛_«me
 (
åì
);

793 c⁄° *
	`fun˘i⁄_«me
 (
fun˘i⁄
 *);

794 c⁄° *
	`cuºít_fun˘i⁄_«me
 ();

796 
	`do_w¨n_unu£d_∑ømëî
 (
åì
);

798 
boﬁ
 
	`∑ss_by_ª„ªn˚
 (
CUMULATIVE_ARGS
 *, 
machöe_mode
,

799 
åì
, 
boﬁ
);

800 
boﬁ
 
	`ª„ªn˚_ˇŒì_c›õd
 (
CUMULATIVE_ARGS
 *, 
machöe_mode
,

801 
åì
, 
boﬁ
);

803 
	`u£d_ty≥s_ö£π
 (
åì
);

805 
	`gë_√xt_funcdef_no
 ();

806 
	`gë_œ°_funcdef_no
 ();

808 #ifde‡
HAVE_sim∂e_ªtu∫


809 
boﬁ
 
	`ªquúes_°ack_‰ame_p
 (
πx
, 
HARD_REG_SET
, HARD_REG_SET);

812 
πx
 
	`gë_h¨d_ªg_öôül_vÆ
 (
machöe_mode
, );

813 
πx
 
	`has_h¨d_ªg_öôül_vÆ
 (
machöe_mode
, );

814 
πx
 
	`gë_h¨d_ªg_öôül_ªg
 (rtx);

815 
boﬁ
 
	`öôül_vÆue_íåy
 (
i
, 
πx
 *,Ñtx *);

818 
	`emô_öôül_vÆue_£ts
 ();

821 
boﬁ
 
	`›timize_fun˘i⁄_f‹_size_p
 (
fun˘i⁄
 *);

822 
boﬁ
 
	`›timize_fun˘i⁄_f‹_•ìd_p
 (
fun˘i⁄
 *);

825 
	`ex∑nd_fun˘i⁄_íd
 ();

826 
	`ex∑nd_fun˘i⁄_°¨t
 (
åì
);

827 
	`°ack_¥Ÿe˘_ïûogue
 ();

828 
	`öô_dummy_fun˘i⁄_°¨t
 ();

829 
	`ex∑nd_dummy_fun˘i⁄_íd
 ();

830 
	`Æloˇã_°ru˘_fun˘i⁄
 (
åì
, 
boﬁ
);

831 
	`push_°ru˘_fun˘i⁄
 (
åì
 
‚de˛
);

832 
	`öô_fun˘i⁄_°¨t
 (
åì
);

833 
boﬁ
 
	`u£_ªgi°î_f‹_de˛
 (
c⁄°_åì
);

834 
	`gíî©e_£tjmp_w¨nögs
 ();

835 
	`öô_ãmp_¶Ÿs
 ();

836 
	`‰ì_ãmp_¶Ÿs
 ();

837 
	`p›_ãmp_¶Ÿs
 ();

838 
	`push_ãmp_¶Ÿs
 ();

839 
	`¥e£rve_ãmp_¶Ÿs
 (
πx
);

840 
	`aggªg©e_vÆue_p
 (
c⁄°_åì
, const_tree);

841 
	`push_fun˘i⁄_c⁄ãxt
 ();

842 
	`p›_fun˘i⁄_c⁄ãxt
 ();

843 
gim∂e_£q
 
	`gim∂ify_∑ømëîs
 ();

	@include/gcc-plugin.h

20 #i‚de‡
GCC_PLUGIN_H


21 
	#GCC_PLUGIN_H


	)

23 #i‚de‡
IN_GCC


24 
	#IN_GCC


	)

27 
	~"c⁄fig.h
"

28 
	~"sy°em.h
"

29 
	~"c‹ëy≥s.h
"

30 
	~"highÀv-∂ugö-comm⁄.h
"

31 
	~"hashèb.h
"

34 
	e∂ugö_evít


36 
	#DEFEVENT
(
NAME
ËNAME,

	)

37 
	~"∂ugö.def
"

38 #unde‡
DEFEVENT


39 
	mPLUGIN_EVENT_FIRST_DYNAMIC


44 #ifde‡
__˝lu•lus


48 c⁄° **
∂ugö_evít_«me
;

50 
	s∂ugö_¨gumít


52 *
	gkey
;

53 *
	gvÆue
;

58 
	s∂ugö_öfo


60 c⁄° *
	gvîsi⁄
;

61 c⁄° *
	ghñp
;

66 
	s∂ugö_gcc_vîsi⁄


68 c⁄° *
	gba£vî
;

69 c⁄° *
	gd©e°amp
;

70 c⁄° *
	gdevpha£
;

71 c⁄° *
	gªvisi⁄
;

72 c⁄° *
	gc⁄figuøti⁄_¨gumíts
;

76 
	s∂ugö_«me_¨gs


78 *
	gba£_«me
;

80 c⁄° *
	gfuŒ_«me
;

82 
	g¨gc
;

84 
∂ugö_¨gumít
 *
	g¨gv
;

85 c⁄° *
	gvîsi⁄
;

86 c⁄° *
	ghñp
;

91 
boﬁ
 
∂ugö_deÁu…_vîsi⁄_check
 (
∂ugö_gcc_vîsi⁄
 *,

92 
∂ugö_gcc_vîsi⁄
 *);

103 (*
	g∂ugö_öô_func
Ë(
	t∂ugö_«me_¨gs
 *
	t∂ugö_öfo
,

104 
	t∂ugö_gcc_vîsi⁄
 *
	tvîsi⁄
);

108 
∂ugö_öô
 (
∂ugö_«me_¨gs
 *
∂ugö_öfo
,

109 
∂ugö_gcc_vîsi⁄
 *
vîsi⁄
);

116 (*
	g∂ugö_ˇŒback_func
Ë(*
	tgcc_d©a
, *
	tu£r_d©a
);

129 
gë_evít_œ°
 ();

131 
gë_«med_evít_id
 (c⁄° *
«me
, 
ö£π_›ti⁄
 
ö£π
);

138 
ªgi°î_ˇŒback
 (c⁄° *
∂ugö_«me
,

139 
evít
,

140 
∂ugö_ˇŒback_func
 
ˇŒback
,

141 *
u£r_d©a
);

143 
uƒegi°î_ˇŒback
 (c⁄° *
∂ugö_«me
, 
evít
);

149 c⁄° * 
deÁu…_∂ugö_dú_«me
 ();

151 #ifde‡
__˝lu•lus


158 #ifde‡
__˝lu•lus


161 
∂ugö_is_GPL_com∑tibÀ
;

162 #ifde‡
__˝lu•lus


	@include/gcc-symtab.h

23 #i‚de‡
GCC_SYMTAB_H


24 
	#GCC_SYMTAB_H


	)

26 
ch™ge_de˛_as£mbÀr_«me
 (
åì
,Åree);

	@include/genrtl.h

3 #i‚de‡
GCC_GENRTL_H


4 
	#GCC_GENRTL_H


	)

6 
	~"°©i°ics.h
"

8 
ölöe
 
πx


9 
	$gí_πx_fmt_0_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
 
MEM_STAT_DECL
)

11 
πx
 
π
;

12 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

14 
	`PUT_MODE
 (
π
, 
mode
);

15 
	`X0EXP
 (
π
, 0Ë
NULL_RTX
;

17  
π
;

18 
	}
}

20 
	#gí_πx_fmt_0
(
c
, 
m
)\

21 
	`gí_πx_fmt_0_°©
 (
c
, 
m
 
MEM_STAT_INFO
)

	)

23 
ölöe
 
πx


24 
	$gí_πx_fmt_ì_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

25 
πx
 
¨g0
,

26 
πx
 
¨g1
 
MEM_STAT_DECL
)

28 
πx
 
π
;

29 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

31 
	`PUT_MODE
 (
π
, 
mode
);

32 
	`XEXP
 (
π
, 0Ë
¨g0
;

33 
	`XEXP
 (
π
, 1Ë
¨g1
;

35  
π
;

36 
	}
}

38 
	#gí_πx_fmt_ì
(
c
, 
m
, 
p0
, 
p1
)\

39 
	`gí_πx_fmt_ì_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

41 
ölöe
 
πx


42 
	$gí_πx_fmt_ue_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

43 
πx
 
¨g0
,

44 
πx
 
¨g1
 
MEM_STAT_DECL
)

46 
πx
 
π
;

47 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

49 
	`PUT_MODE
 (
π
, 
mode
);

50 
	`XEXP
 (
π
, 0Ë
¨g0
;

51 
	`XEXP
 (
π
, 1Ë
¨g1
;

53  
π
;

54 
	}
}

56 
	#gí_πx_fmt_ue
(
c
, 
m
, 
p0
, 
p1
)\

57 
	`gí_πx_fmt_ue_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

59 
ölöe
 
πx


60 
	$gí_πx_fmt_õ_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

61 
¨g0
,

62 
πx
 
¨g1
 
MEM_STAT_DECL
)

64 
πx
 
π
;

65 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

67 
	`PUT_MODE
 (
π
, 
mode
);

68 
	`XINT
 (
π
, 0Ë
¨g0
;

69 
	`XEXP
 (
π
, 1Ë
¨g1
;

71  
π
;

72 
	}
}

74 
	#gí_πx_fmt_õ
(
c
, 
m
, 
p0
, 
p1
)\

75 
	`gí_πx_fmt_õ_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

77 
ölöe
 
πx


78 
	$gí_πx_fmt_E_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

79 
πvec
 
¨g0
 
MEM_STAT_DECL
)

81 
πx
 
π
;

82 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

84 
	`PUT_MODE
 (
π
, 
mode
);

85 
	`XVEC
 (
π
, 0Ë
¨g0
;

87  
π
;

88 
	}
}

90 
	#gí_πx_fmt_E
(
c
, 
m
, 
p0
)\

91 
	`gí_πx_fmt_E_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

93 
ölöe
 
πx


94 
	$gí_πx_fmt_i_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

95 
¨g0
 
MEM_STAT_DECL
)

97 
πx
 
π
;

98 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

100 
	`PUT_MODE
 (
π
, 
mode
);

101 
	`XINT
 (
π
, 0Ë
¨g0
;

103  
π
;

104 
	}
}

106 
	#gí_πx_fmt_i
(
c
, 
m
, 
p0
)\

107 
	`gí_πx_fmt_i_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

109 
ölöe
 
πx


110 
	$gí_πx_fmt_iuuBeiõ_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

111 
¨g0
,

112 
πx
 
¨g1
,

113 
πx
 
¨g2
,

114 
basic_block
 
¨g3
,

115 
πx
 
¨g4
,

116 
¨g5
,

117 
¨g6
,

118 
πx
 
¨g7
 
MEM_STAT_DECL
)

120 
πx
 
π
;

121 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

123 
	`PUT_MODE
 (
π
, 
mode
);

124 
	`XINT
 (
π
, 0Ë
¨g0
;

125 
	`XEXP
 (
π
, 1Ë
¨g1
;

126 
	`XEXP
 (
π
, 2Ë
¨g2
;

127 
	`XBBDEF
 (
π
, 3Ë
¨g3
;

128 
	`XEXP
 (
π
, 4Ë
¨g4
;

129 
	`XINT
 (
π
, 5Ë
¨g5
;

130 
	`XINT
 (
π
, 6Ë
¨g6
;

131 
	`XEXP
 (
π
, 7Ë
¨g7
;

133  
π
;

134 
	}
}

136 
	#gí_πx_fmt_iuuBeiõ
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
)\

137 
	`gí_πx_fmt_iuuBeiõ_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
 
MEM_STAT_INFO
)

	)

139 
ölöe
 
πx


140 
	$gí_πx_fmt_iuuBeiõ0_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

141 
¨g0
,

142 
πx
 
¨g1
,

143 
πx
 
¨g2
,

144 
basic_block
 
¨g3
,

145 
πx
 
¨g4
,

146 
¨g5
,

147 
¨g6
,

148 
πx
 
¨g7
 
MEM_STAT_DECL
)

150 
πx
 
π
;

151 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

153 
	`PUT_MODE
 (
π
, 
mode
);

154 
	`XINT
 (
π
, 0Ë
¨g0
;

155 
	`XEXP
 (
π
, 1Ë
¨g1
;

156 
	`XEXP
 (
π
, 2Ë
¨g2
;

157 
	`XBBDEF
 (
π
, 3Ë
¨g3
;

158 
	`XEXP
 (
π
, 4Ë
¨g4
;

159 
	`XINT
 (
π
, 5Ë
¨g5
;

160 
	`XINT
 (
π
, 6Ë
¨g6
;

161 
	`XEXP
 (
π
, 7Ë
¨g7
;

162 
	`X0EXP
 (
π
, 8Ë
NULL_RTX
;

164  
π
;

165 
	}
}

167 
	#gí_πx_fmt_iuuBeiõ0
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
)\

168 
	`gí_πx_fmt_iuuBeiõ0_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
 
MEM_STAT_INFO
)

	)

170 
ölöe
 
πx


171 
	$gí_πx_fmt_iuuBeiõe_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

172 
¨g0
,

173 
πx
 
¨g1
,

174 
πx
 
¨g2
,

175 
basic_block
 
¨g3
,

176 
πx
 
¨g4
,

177 
¨g5
,

178 
¨g6
,

179 
πx
 
¨g7
,

180 
πx
 
¨g8
 
MEM_STAT_DECL
)

182 
πx
 
π
;

183 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

185 
	`PUT_MODE
 (
π
, 
mode
);

186 
	`XINT
 (
π
, 0Ë
¨g0
;

187 
	`XEXP
 (
π
, 1Ë
¨g1
;

188 
	`XEXP
 (
π
, 2Ë
¨g2
;

189 
	`XBBDEF
 (
π
, 3Ë
¨g3
;

190 
	`XEXP
 (
π
, 4Ë
¨g4
;

191 
	`XINT
 (
π
, 5Ë
¨g5
;

192 
	`XINT
 (
π
, 6Ë
¨g6
;

193 
	`XEXP
 (
π
, 7Ë
¨g7
;

194 
	`XEXP
 (
π
, 8Ë
¨g8
;

196  
π
;

197 
	}
}

199 
	#gí_πx_fmt_iuuBeiõe
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
, 
p8
)\

200 
	`gí_πx_fmt_iuuBeiõe_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
, 
p8
 
MEM_STAT_INFO
)

	)

202 
ölöe
 
πx


203 
	$gí_πx_fmt_iuuBe0000_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

204 
¨g0
,

205 
πx
 
¨g1
,

206 
πx
 
¨g2
,

207 
basic_block
 
¨g3
,

208 
πx
 
¨g4
 
MEM_STAT_DECL
)

210 
πx
 
π
;

211 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

213 
	`PUT_MODE
 (
π
, 
mode
);

214 
	`XINT
 (
π
, 0Ë
¨g0
;

215 
	`XEXP
 (
π
, 1Ë
¨g1
;

216 
	`XEXP
 (
π
, 2Ë
¨g2
;

217 
	`XBBDEF
 (
π
, 3Ë
¨g3
;

218 
	`XEXP
 (
π
, 4Ë
¨g4
;

219 
	`X0EXP
 (
π
, 5Ë
NULL_RTX
;

220 
	`X0EXP
 (
π
, 6Ë
NULL_RTX
;

221 
	`X0EXP
 (
π
, 7Ë
NULL_RTX
;

222 
	`X0EXP
 (
π
, 8Ë
NULL_RTX
;

224  
π
;

225 
	}
}

227 
	#gí_πx_fmt_iuuBe0000
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
)\

228 
	`gí_πx_fmt_iuuBe0000_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
 
MEM_STAT_INFO
)

	)

230 
ölöe
 
πx


231 
	$gí_πx_fmt_iuu00000_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

232 
¨g0
,

233 
πx
 
¨g1
,

234 
πx
 
¨g2
 
MEM_STAT_DECL
)

236 
πx
 
π
;

237 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

239 
	`PUT_MODE
 (
π
, 
mode
);

240 
	`XINT
 (
π
, 0Ë
¨g0
;

241 
	`XEXP
 (
π
, 1Ë
¨g1
;

242 
	`XEXP
 (
π
, 2Ë
¨g2
;

243 
	`X0EXP
 (
π
, 3Ë
NULL_RTX
;

244 
	`X0EXP
 (
π
, 4Ë
NULL_RTX
;

245 
	`X0EXP
 (
π
, 5Ë
NULL_RTX
;

246 
	`X0EXP
 (
π
, 6Ë
NULL_RTX
;

247 
	`X0EXP
 (
π
, 7Ë
NULL_RTX
;

249  
π
;

250 
	}
}

252 
	#gí_πx_fmt_iuu00000
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

253 
	`gí_πx_fmt_iuu00000_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

255 
ölöe
 
πx


256 
	$gí_πx_fmt_iuuB00is_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

257 
¨g0
,

258 
πx
 
¨g1
,

259 
πx
 
¨g2
,

260 
basic_block
 
¨g3
,

261 
¨g4
,

262 c⁄° *
¨g5
 
MEM_STAT_DECL
)

264 
πx
 
π
;

265 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

267 
	`PUT_MODE
 (
π
, 
mode
);

268 
	`XINT
 (
π
, 0Ë
¨g0
;

269 
	`XEXP
 (
π
, 1Ë
¨g1
;

270 
	`XEXP
 (
π
, 2Ë
¨g2
;

271 
	`XBBDEF
 (
π
, 3Ë
¨g3
;

272 
	`X0EXP
 (
π
, 4Ë
NULL_RTX
;

273 
	`X0EXP
 (
π
, 5Ë
NULL_RTX
;

274 
	`XINT
 (
π
, 6Ë
¨g4
;

275 
	`XSTR
 (
π
, 7Ë
¨g5
;

277  
π
;

278 
	}
}

280 
	#gí_πx_fmt_iuuB00is
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
)\

281 
	`gí_πx_fmt_iuuB00is_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
 
MEM_STAT_INFO
)

	)

283 
ölöe
 
πx


284 
	$gí_πx_fmt_si_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

285 c⁄° *
¨g0
,

286 
¨g1
 
MEM_STAT_DECL
)

288 
πx
 
π
;

289 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

291 
	`PUT_MODE
 (
π
, 
mode
);

292 
	`XSTR
 (
π
, 0Ë
¨g0
;

293 
	`XINT
 (
π
, 1Ë
¨g1
;

295  
π
;

296 
	}
}

298 
	#gí_πx_fmt_si
(
c
, 
m
, 
p0
, 
p1
)\

299 
	`gí_πx_fmt_si_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

301 
ölöe
 
πx


302 
	$gí_πx_fmt_ssiEEEi_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

303 c⁄° *
¨g0
,

304 c⁄° *
¨g1
,

305 
¨g2
,

306 
πvec
 
¨g3
,

307 
πvec
 
¨g4
,

308 
πvec
 
¨g5
,

309 
¨g6
 
MEM_STAT_DECL
)

311 
πx
 
π
;

312 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

314 
	`PUT_MODE
 (
π
, 
mode
);

315 
	`XSTR
 (
π
, 0Ë
¨g0
;

316 
	`XSTR
 (
π
, 1Ë
¨g1
;

317 
	`XINT
 (
π
, 2Ë
¨g2
;

318 
	`XVEC
 (
π
, 3Ë
¨g3
;

319 
	`XVEC
 (
π
, 4Ë
¨g4
;

320 
	`XVEC
 (
π
, 5Ë
¨g5
;

321 
	`XINT
 (
π
, 6Ë
¨g6
;

323  
π
;

324 
	}
}

326 
	#gí_πx_fmt_ssiEEEi
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
)\

327 
	`gí_πx_fmt_ssiEEEi_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
 
MEM_STAT_INFO
)

	)

329 
ölöe
 
πx


330 
	$gí_πx_fmt_Ei_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

331 
πvec
 
¨g0
,

332 
¨g1
 
MEM_STAT_DECL
)

334 
πx
 
π
;

335 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

337 
	`PUT_MODE
 (
π
, 
mode
);

338 
	`XVEC
 (
π
, 0Ë
¨g0
;

339 
	`XINT
 (
π
, 1Ë
¨g1
;

341  
π
;

342 
	}
}

344 
	#gí_πx_fmt_Ei
(
c
, 
m
, 
p0
, 
p1
)\

345 
	`gí_πx_fmt_Ei_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

347 
ölöe
 
πx


348 
	$gí_πx_fmt_eEì0_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

349 
πx
 
¨g0
,

350 
πvec
 
¨g1
,

351 
πx
 
¨g2
,

352 
πx
 
¨g3
 
MEM_STAT_DECL
)

354 
πx
 
π
;

355 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

357 
	`PUT_MODE
 (
π
, 
mode
);

358 
	`XEXP
 (
π
, 0Ë
¨g0
;

359 
	`XVEC
 (
π
, 1Ë
¨g1
;

360 
	`XEXP
 (
π
, 2Ë
¨g2
;

361 
	`XEXP
 (
π
, 3Ë
¨g3
;

362 
	`X0EXP
 (
π
, 4Ë
NULL_RTX
;

364  
π
;

365 
	}
}

367 
	#gí_πx_fmt_eEì0
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
)\

368 
	`gí_πx_fmt_eEì0_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
 
MEM_STAT_INFO
)

	)

370 
ölöe
 
πx


371 
	$gí_πx_fmt_ìe_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

372 
πx
 
¨g0
,

373 
πx
 
¨g1
,

374 
πx
 
¨g2
 
MEM_STAT_DECL
)

376 
πx
 
π
;

377 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

379 
	`PUT_MODE
 (
π
, 
mode
);

380 
	`XEXP
 (
π
, 0Ë
¨g0
;

381 
	`XEXP
 (
π
, 1Ë
¨g1
;

382 
	`XEXP
 (
π
, 2Ë
¨g2
;

384  
π
;

385 
	}
}

387 
	#gí_πx_fmt_ìe
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

388 
	`gí_πx_fmt_ìe_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

390 
ölöe
 
πx


391 
	$gí_πx_fmt_e_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

392 
πx
 
¨g0
 
MEM_STAT_DECL
)

394 
πx
 
π
;

395 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

397 
	`PUT_MODE
 (
π
, 
mode
);

398 
	`XEXP
 (
π
, 0Ë
¨g0
;

400  
π
;

401 
	}
}

403 
	#gí_πx_fmt_e
(
c
, 
m
, 
p0
)\

404 
	`gí_πx_fmt_e_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

406 
ölöe
 
πx


407 
	$gí_πx_fmt__°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
 
MEM_STAT_DECL
)

409 
πx
 
π
;

410 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

412 
	`PUT_MODE
 (
π
, 
mode
);

414  
π
;

415 
	}
}

417 
	#gí_πx_fmt_
(
c
, 
m
)\

418 
	`gí_πx_fmt__°©
 (
c
, 
m
 
MEM_STAT_INFO
)

	)

420 
ölöe
 
πx


421 
	$gí_πx_fmt_w_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

422 
HOST_WIDE_INT
 
¨g0
 
MEM_STAT_DECL
)

424 
πx
 
π
;

425 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

427 
	`PUT_MODE
 (
π
, 
mode
);

428 
	`XWINT
 (
π
, 0Ë
¨g0
;

430  
π
;

431 
	}
}

433 
	#gí_πx_fmt_w
(
c
, 
m
, 
p0
)\

434 
	`gí_πx_fmt_w_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

436 
ölöe
 
πx


437 
	$gí_πx_fmt_www_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

438 
HOST_WIDE_INT
 
¨g0
,

439 
HOST_WIDE_INT
 
¨g1
,

440 
HOST_WIDE_INT
 
¨g2
 
MEM_STAT_DECL
)

442 
πx
 
π
;

443 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

445 
	`PUT_MODE
 (
π
, 
mode
);

446 
	`XWINT
 (
π
, 0Ë
¨g0
;

447 
	`XWINT
 (
π
, 1Ë
¨g1
;

448 
	`XWINT
 (
π
, 2Ë
¨g2
;

450  
π
;

451 
	}
}

453 
	#gí_πx_fmt_www
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

454 
	`gí_πx_fmt_www_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

456 
ölöe
 
πx


457 
	$gí_πx_fmt_s_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

458 c⁄° *
¨g0
 
MEM_STAT_DECL
)

460 
πx
 
π
;

461 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

463 
	`PUT_MODE
 (
π
, 
mode
);

464 
	`XSTR
 (
π
, 0Ë
¨g0
;

466  
π
;

467 
	}
}

469 
	#gí_πx_fmt_s
(
c
, 
m
, 
p0
)\

470 
	`gí_πx_fmt_s_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

472 
ölöe
 
πx


473 
	$gí_πx_fmt_i00_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

474 
¨g0
 
MEM_STAT_DECL
)

476 
πx
 
π
;

477 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

479 
	`PUT_MODE
 (
π
, 
mode
);

480 
	`XINT
 (
π
, 0Ë
¨g0
;

481 
	`X0EXP
 (
π
, 1Ë
NULL_RTX
;

482 
	`X0EXP
 (
π
, 2Ë
NULL_RTX
;

484  
π
;

485 
	}
}

487 
	#gí_πx_fmt_i00
(
c
, 
m
, 
p0
)\

488 
	`gí_πx_fmt_i00_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

490 
ölöe
 
πx


491 
	$gí_πx_fmt_ei_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

492 
πx
 
¨g0
,

493 
¨g1
 
MEM_STAT_DECL
)

495 
πx
 
π
;

496 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

498 
	`PUT_MODE
 (
π
, 
mode
);

499 
	`XEXP
 (
π
, 0Ë
¨g0
;

500 
	`XINT
 (
π
, 1Ë
¨g1
;

502  
π
;

503 
	}
}

505 
	#gí_πx_fmt_ei
(
c
, 
m
, 
p0
, 
p1
)\

506 
	`gí_πx_fmt_ei_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

508 
ölöe
 
πx


509 
	$gí_πx_fmt_e0_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

510 
πx
 
¨g0
 
MEM_STAT_DECL
)

512 
πx
 
π
;

513 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

515 
	`PUT_MODE
 (
π
, 
mode
);

516 
	`XEXP
 (
π
, 0Ë
¨g0
;

517 
	`X0EXP
 (
π
, 1Ë
NULL_RTX
;

519  
π
;

520 
	}
}

522 
	#gí_πx_fmt_e0
(
c
, 
m
, 
p0
)\

523 
	`gí_πx_fmt_e0_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

525 
ölöe
 
πx


526 
	$gí_πx_fmt_u_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

527 
πx
 
¨g0
 
MEM_STAT_DECL
)

529 
πx
 
π
;

530 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

532 
	`PUT_MODE
 (
π
, 
mode
);

533 
	`XEXP
 (
π
, 0Ë
¨g0
;

535  
π
;

536 
	}
}

538 
	#gí_πx_fmt_u
(
c
, 
m
, 
p0
)\

539 
	`gí_πx_fmt_u_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

541 
ölöe
 
πx


542 
	$gí_πx_fmt_s00_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

543 c⁄° *
¨g0
 
MEM_STAT_DECL
)

545 
πx
 
π
;

546 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

548 
	`PUT_MODE
 (
π
, 
mode
);

549 
	`XSTR
 (
π
, 0Ë
¨g0
;

550 
	`X0EXP
 (
π
, 1Ë
NULL_RTX
;

551 
	`X0EXP
 (
π
, 2Ë
NULL_RTX
;

553  
π
;

554 
	}
}

556 
	#gí_πx_fmt_s00
(
c
, 
m
, 
p0
)\

557 
	`gí_πx_fmt_s00_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

559 
ölöe
 
πx


560 
	$gí_πx_fmt_ãi_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

561 
åì
 
¨g0
,

562 
πx
 
¨g1
,

563 
¨g2
 
MEM_STAT_DECL
)

565 
πx
 
π
;

566 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

568 
	`PUT_MODE
 (
π
, 
mode
);

569 
	`XTREE
 (
π
, 0Ë
¨g0
;

570 
	`XEXP
 (
π
, 1Ë
¨g1
;

571 
	`XINT
 (
π
, 2Ë
¨g2
;

573  
π
;

574 
	}
}

576 
	#gí_πx_fmt_ãi
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

577 
	`gí_πx_fmt_ãi_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

579 
ölöe
 
πx


580 
	$gí_πx_fmt_t_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

581 
åì
 
¨g0
 
MEM_STAT_DECL
)

583 
πx
 
π
;

584 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

586 
	`PUT_MODE
 (
π
, 
mode
);

587 
	`XTREE
 (
π
, 0Ë
¨g0
;

589  
π
;

590 
	}
}

592 
	#gí_πx_fmt_t
(
c
, 
m
, 
p0
)\

593 
	`gí_πx_fmt_t_°©
 (
c
, 
m
, 
p0
 
MEM_STAT_INFO
)

	)

595 
ölöe
 
πx


596 
	$gí_πx_fmt_iss_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

597 
¨g0
,

598 c⁄° *
¨g1
,

599 c⁄° *
¨g2
 
MEM_STAT_DECL
)

601 
πx
 
π
;

602 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

604 
	`PUT_MODE
 (
π
, 
mode
);

605 
	`XINT
 (
π
, 0Ë
¨g0
;

606 
	`XSTR
 (
π
, 1Ë
¨g1
;

607 
	`XSTR
 (
π
, 2Ë
¨g2
;

609  
π
;

610 
	}
}

612 
	#gí_πx_fmt_iss
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

613 
	`gí_πx_fmt_iss_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

615 
ölöe
 
πx


616 
	$gí_πx_fmt_is_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

617 
¨g0
,

618 c⁄° *
¨g1
 
MEM_STAT_DECL
)

620 
πx
 
π
;

621 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

623 
	`PUT_MODE
 (
π
, 
mode
);

624 
	`XINT
 (
π
, 0Ë
¨g0
;

625 
	`XSTR
 (
π
, 1Ë
¨g1
;

627  
π
;

628 
	}
}

630 
	#gí_πx_fmt_is
(
c
, 
m
, 
p0
, 
p1
)\

631 
	`gí_πx_fmt_is_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

633 
ölöe
 
πx


634 
	$gí_πx_fmt_isE_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

635 
¨g0
,

636 c⁄° *
¨g1
,

637 
πvec
 
¨g2
 
MEM_STAT_DECL
)

639 
πx
 
π
;

640 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

642 
	`PUT_MODE
 (
π
, 
mode
);

643 
	`XINT
 (
π
, 0Ë
¨g0
;

644 
	`XSTR
 (
π
, 1Ë
¨g1
;

645 
	`XVEC
 (
π
, 2Ë
¨g2
;

647  
π
;

648 
	}
}

650 
	#gí_πx_fmt_isE
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

651 
	`gí_πx_fmt_isE_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

653 
ölöe
 
πx


654 
	$gí_πx_fmt_iE_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

655 
¨g0
,

656 
πvec
 
¨g1
 
MEM_STAT_DECL
)

658 
πx
 
π
;

659 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

661 
	`PUT_MODE
 (
π
, 
mode
);

662 
	`XINT
 (
π
, 0Ë
¨g0
;

663 
	`XVEC
 (
π
, 1Ë
¨g1
;

665  
π
;

666 
	}
}

668 
	#gí_πx_fmt_iE
(
c
, 
m
, 
p0
, 
p1
)\

669 
	`gí_πx_fmt_iE_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

671 
ölöe
 
πx


672 
	$gí_πx_fmt_ss_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

673 c⁄° *
¨g0
,

674 c⁄° *
¨g1
 
MEM_STAT_DECL
)

676 
πx
 
π
;

677 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

679 
	`PUT_MODE
 (
π
, 
mode
);

680 
	`XSTR
 (
π
, 0Ë
¨g0
;

681 
	`XSTR
 (
π
, 1Ë
¨g1
;

683  
π
;

684 
	}
}

686 
	#gí_πx_fmt_ss
(
c
, 
m
, 
p0
, 
p1
)\

687 
	`gí_πx_fmt_ss_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

689 
ölöe
 
πx


690 
	$gí_πx_fmt_eE_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

691 
πx
 
¨g0
,

692 
πvec
 
¨g1
 
MEM_STAT_DECL
)

694 
πx
 
π
;

695 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

697 
	`PUT_MODE
 (
π
, 
mode
);

698 
	`XEXP
 (
π
, 0Ë
¨g0
;

699 
	`XVEC
 (
π
, 1Ë
¨g1
;

701  
π
;

702 
	}
}

704 
	#gí_πx_fmt_eE
(
c
, 
m
, 
p0
, 
p1
)\

705 
	`gí_πx_fmt_eE_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

707 
ölöe
 
πx


708 
	$gí_πx_fmt_£s_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

709 c⁄° *
¨g0
,

710 
πx
 
¨g1
,

711 c⁄° *
¨g2
 
MEM_STAT_DECL
)

713 
πx
 
π
;

714 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

716 
	`PUT_MODE
 (
π
, 
mode
);

717 
	`XSTR
 (
π
, 0Ë
¨g0
;

718 
	`XEXP
 (
π
, 1Ë
¨g1
;

719 
	`XSTR
 (
π
, 2Ë
¨g2
;

721  
π
;

722 
	}
}

724 
	#gí_πx_fmt_£s
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

725 
	`gí_πx_fmt_£s_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

727 
ölöe
 
πx


728 
	$gí_πx_fmt_sss_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

729 c⁄° *
¨g0
,

730 c⁄° *
¨g1
,

731 c⁄° *
¨g2
 
MEM_STAT_DECL
)

733 
πx
 
π
;

734 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

736 
	`PUT_MODE
 (
π
, 
mode
);

737 
	`XSTR
 (
π
, 0Ë
¨g0
;

738 
	`XSTR
 (
π
, 1Ë
¨g1
;

739 
	`XSTR
 (
π
, 2Ë
¨g2
;

741  
π
;

742 
	}
}

744 
	#gí_πx_fmt_sss
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

745 
	`gí_πx_fmt_sss_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

747 
ölöe
 
πx


748 
	$gí_πx_fmt_s£_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

749 c⁄° *
¨g0
,

750 c⁄° *
¨g1
,

751 
πx
 
¨g2
 
MEM_STAT_DECL
)

753 
πx
 
π
;

754 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

756 
	`PUT_MODE
 (
π
, 
mode
);

757 
	`XSTR
 (
π
, 0Ë
¨g0
;

758 
	`XSTR
 (
π
, 1Ë
¨g1
;

759 
	`XEXP
 (
π
, 2Ë
¨g2
;

761  
π
;

762 
	}
}

764 
	#gí_πx_fmt_s£
(
c
, 
m
, 
p0
, 
p1
, 
p2
)\

765 
	`gí_πx_fmt_s£_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
 
MEM_STAT_INFO
)

	)

767 
ölöe
 
πx


768 
	$gí_πx_fmt_sõs_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

769 c⁄° *
¨g0
,

770 
¨g1
,

771 
πx
 
¨g2
,

772 c⁄° *
¨g3
 
MEM_STAT_DECL
)

774 
πx
 
π
;

775 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

777 
	`PUT_MODE
 (
π
, 
mode
);

778 
	`XSTR
 (
π
, 0Ë
¨g0
;

779 
	`XINT
 (
π
, 1Ë
¨g1
;

780 
	`XEXP
 (
π
, 2Ë
¨g2
;

781 
	`XSTR
 (
π
, 3Ë
¨g3
;

783  
π
;

784 
	}
}

786 
	#gí_πx_fmt_sõs
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
)\

787 
	`gí_πx_fmt_sõs_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
 
MEM_STAT_INFO
)

	)

789 
ölöe
 
πx


790 
	$gí_πx_fmt_sE_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

791 c⁄° *
¨g0
,

792 
πvec
 
¨g1
 
MEM_STAT_DECL
)

794 
πx
 
π
;

795 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

797 
	`PUT_MODE
 (
π
, 
mode
);

798 
	`XSTR
 (
π
, 0Ë
¨g0
;

799 
	`XVEC
 (
π
, 1Ë
¨g1
;

801  
π
;

802 
	}
}

804 
	#gí_πx_fmt_sE
(
c
, 
m
, 
p0
, 
p1
)\

805 
	`gí_πx_fmt_sE_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

807 
ölöe
 
πx


808 
	$gí_πx_fmt_ii_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

809 
¨g0
,

810 
¨g1
 
MEM_STAT_DECL
)

812 
πx
 
π
;

813 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

815 
	`PUT_MODE
 (
π
, 
mode
);

816 
	`XINT
 (
π
, 0Ë
¨g0
;

817 
	`XINT
 (
π
, 1Ë
¨g1
;

819  
π
;

820 
	}
}

822 
	#gí_πx_fmt_ii
(
c
, 
m
, 
p0
, 
p1
)\

823 
	`gí_πx_fmt_ii_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

825 
ölöe
 
πx


826 
	$gí_πx_fmt_Ee_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

827 
πvec
 
¨g0
,

828 
πx
 
¨g1
 
MEM_STAT_DECL
)

830 
πx
 
π
;

831 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

833 
	`PUT_MODE
 (
π
, 
mode
);

834 
	`XVEC
 (
π
, 0Ë
¨g0
;

835 
	`XEXP
 (
π
, 1Ë
¨g1
;

837  
π
;

838 
	}
}

840 
	#gí_πx_fmt_Ee
(
c
, 
m
, 
p0
, 
p1
)\

841 
	`gí_πx_fmt_Ee_°©
 (
c
, 
m
, 
p0
, 
p1
 
MEM_STAT_INFO
)

	)

843 
ölöe
 
πx


844 
	$gí_πx_fmt_sEsE_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

845 c⁄° *
¨g0
,

846 
πvec
 
¨g1
,

847 c⁄° *
¨g2
,

848 
πvec
 
¨g3
 
MEM_STAT_DECL
)

850 
πx
 
π
;

851 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

853 
	`PUT_MODE
 (
π
, 
mode
);

854 
	`XSTR
 (
π
, 0Ë
¨g0
;

855 
	`XVEC
 (
π
, 1Ë
¨g1
;

856 
	`XSTR
 (
π
, 2Ë
¨g2
;

857 
	`XVEC
 (
π
, 3Ë
¨g3
;

859  
π
;

860 
	}
}

862 
	#gí_πx_fmt_sEsE
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
)\

863 
	`gí_πx_fmt_sEsE_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
 
MEM_STAT_INFO
)

	)

865 
ölöe
 
πx


866 
	$gí_πx_fmt_ssss_°©
 (
RTX_CODE
 
code
, 
machöe_mode
 
mode
,

867 c⁄° *
¨g0
,

868 c⁄° *
¨g1
,

869 c⁄° *
¨g2
,

870 c⁄° *
¨g3
 
MEM_STAT_DECL
)

872 
πx
 
π
;

873 
π
 = 
	`πx_Æloc_°©
 (
code
 
PASS_MEM_STAT
);

875 
	`PUT_MODE
 (
π
, 
mode
);

876 
	`XSTR
 (
π
, 0Ë
¨g0
;

877 
	`XSTR
 (
π
, 1Ë
¨g1
;

878 
	`XSTR
 (
π
, 2Ë
¨g2
;

879 
	`XSTR
 (
π
, 3Ë
¨g3
;

881  
π
;

882 
	}
}

884 
	#gí_πx_fmt_ssss
(
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
)\

885 
	`gí_πx_fmt_ssss_°©
 (
c
, 
m
, 
p0
, 
p1
, 
p2
, 
p3
 
MEM_STAT_INFO
)

	)

888 
	#gí_πx_VALUE
(
MODE
) \

889 
	`gí_πx_fmt_0
 (
VALUE
, (
MODE
))

	)

890 
	#gí_πx_DEBUG_EXPR
(
MODE
) \

891 
	`gí_πx_fmt_0
 (
DEBUG_EXPR
, (
MODE
))

	)

892 
	#gí_πx_EXPR_LIST
(
MODE
, 
ARG0
, 
ARG1
) \

893 
	`gí_πx_fmt_ì
 (
EXPR_LIST
, (
MODE
), (
ARG0
), (
ARG1
))

	)

894 
	#gí_πx_INSN_LIST
(
MODE
, 
ARG0
, 
ARG1
) \

895 
	`gí_πx_fmt_ue
 (
INSN_LIST
, (
MODE
), (
ARG0
), (
ARG1
))

	)

896 
	#gí_πx_INT_LIST
(
MODE
, 
ARG0
, 
ARG1
) \

897 
	`gí_πx_fmt_õ
 (
INT_LIST
, (
MODE
), (
ARG0
), (
ARG1
))

	)

898 
	#gí_πx_SEQUENCE
(
MODE
, 
ARG0
) \

899 
	`gí_πx_fmt_E
 (
SEQUENCE
, (
MODE
), (
ARG0
))

	)

900 
	#gí_πx_ADDRESS
(
MODE
, 
ARG0
) \

901 
	`gí_πx_fmt_i
 (
ADDRESS
, (
MODE
), (
ARG0
))

	)

902 
	#gí_πx_DEBUG_INSN
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
, 
ARG5
, 
ARG6
, 
ARG7
) \

903 
	`gí_πx_fmt_iuuBeiõ
 (
DEBUG_INSN
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
), (
ARG5
), (
ARG6
), (
ARG7
))

	)

904 
	#gí_πx_INSN
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
, 
ARG5
, 
ARG6
, 
ARG7
) \

905 
	`gí_πx_fmt_iuuBeiõ
 (
INSN
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
), (
ARG5
), (
ARG6
), (
ARG7
))

	)

906 
	#gí_πx_JUMP_INSN
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
, 
ARG5
, 
ARG6
, 
ARG7
) \

907 
	`gí_πx_fmt_iuuBeiõ0
 (
JUMP_INSN
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
), (
ARG5
), (
ARG6
), (
ARG7
))

	)

908 
	#gí_πx_CALL_INSN
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
, 
ARG5
, 
ARG6
, 
ARG7
, 
ARG8
) \

909 
	`gí_πx_fmt_iuuBeiõe
 (
CALL_INSN
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
), (
ARG5
), (
ARG6
), (
ARG7
), (
ARG8
))

	)

910 
	#gí_πx_JUMP_TABLE_DATA
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
) \

911 
	`gí_πx_fmt_iuuBe0000
 (
JUMP_TABLE_DATA
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
))

	)

912 
	#gí_πx_BARRIER
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

913 
	`gí_πx_fmt_iuu00000
 (
BARRIER
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

914 
	#gí_πx_CODE_LABEL
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
, 
ARG5
) \

915 
	`gí_πx_fmt_iuuB00is
 (
CODE_LABEL
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
), (
ARG5
))

	)

916 
	#gí_πx_COND_EXEC
(
MODE
, 
ARG0
, 
ARG1
) \

917 
	`gí_πx_fmt_ì
 (
COND_EXEC
, (
MODE
), (
ARG0
), (
ARG1
))

	)

918 
	#gí_πx_PARALLEL
(
MODE
, 
ARG0
) \

919 
	`gí_πx_fmt_E
 (
PARALLEL
, (
MODE
), (
ARG0
))

	)

920 
	#gí_πx_ASM_INPUT
(
MODE
, 
ARG0
, 
ARG1
) \

921 
	`gí_πx_fmt_si
 (
ASM_INPUT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

922 
	#gí_πx_ASM_OPERANDS
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
, 
ARG4
, 
ARG5
, 
ARG6
) \

923 
	`gí_πx_fmt_ssiEEEi
 (
ASM_OPERANDS
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
), (
ARG4
), (
ARG5
), (
ARG6
))

	)

924 
	#gí_πx_UNSPEC
(
MODE
, 
ARG0
, 
ARG1
) \

925 
	`gí_πx_fmt_Ei
 (
UNSPEC
, (
MODE
), (
ARG0
), (
ARG1
))

	)

926 
	#gí_πx_UNSPEC_VOLATILE
(
MODE
, 
ARG0
, 
ARG1
) \

927 
	`gí_πx_fmt_Ei
 (
UNSPEC_VOLATILE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

928 
	#gí_πx_ADDR_VEC
(
MODE
, 
ARG0
) \

929 
	`gí_πx_fmt_E
 (
ADDR_VEC
, (
MODE
), (
ARG0
))

	)

930 
	#gí_πx_ADDR_DIFF_VEC
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
) \

931 
	`gí_πx_fmt_eEì0
 (
ADDR_DIFF_VEC
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
))

	)

932 
	#gí_πx_PREFETCH
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

933 
	`gí_πx_fmt_ìe
 (
PREFETCH
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

934 
	#gí_πx_SET
(
MODE
, 
ARG0
, 
ARG1
) \

935 
	`gí_πx_fmt_ì
 (
SET
, (
MODE
), (
ARG0
), (
ARG1
))

	)

936 
	#gí_πx_USE
(
MODE
, 
ARG0
) \

937 
	`gí_πx_fmt_e
 (
USE
, (
MODE
), (
ARG0
))

	)

938 
	#gí_πx_CLOBBER
(
MODE
, 
ARG0
) \

939 
	`gí_πx_fmt_e
 (
CLOBBER
, (
MODE
), (
ARG0
))

	)

940 
	#gí_πx_CALL
(
MODE
, 
ARG0
, 
ARG1
) \

941 
	`gí_πx_fmt_ì
 (
CALL
, (
MODE
), (
ARG0
), (
ARG1
))

	)

942 
	#gí_πx_øw_RETURN
(
MODE
) \

943 
	`gí_πx_fmt_
 (
RETURN
, (
MODE
))

	)

944 
	#gí_πx_øw_SIMPLE_RETURN
(
MODE
) \

945 
	`gí_πx_fmt_
 (
SIMPLE_RETURN
, (
MODE
))

	)

946 
	#gí_πx_EH_RETURN
(
MODE
) \

947 
	`gí_πx_fmt_
 (
EH_RETURN
, (
MODE
))

	)

948 
	#gí_πx_TRAP_IF
(
MODE
, 
ARG0
, 
ARG1
) \

949 
	`gí_πx_fmt_ì
 (
TRAP_IF
, (
MODE
), (
ARG0
), (
ARG1
))

	)

950 
	#gí_πx_øw_CONST_INT
(
MODE
, 
ARG0
) \

951 
	`gí_πx_fmt_w
 (
CONST_INT
, (
MODE
), (
ARG0
))

	)

952 
	#gí_πx_øw_CONST_VECTOR
(
MODE
, 
ARG0
) \

953 
	`gí_πx_fmt_E
 (
CONST_VECTOR
, (
MODE
), (
ARG0
))

	)

954 
	#gí_πx_CONST_STRING
(
MODE
, 
ARG0
) \

955 
	`gí_πx_fmt_s
 (
CONST_STRING
, (
MODE
), (
ARG0
))

	)

956 
	#gí_πx_CONST
(
MODE
, 
ARG0
) \

957 
	`gí_πx_fmt_e
 (
CONST
, (
MODE
), (
ARG0
))

	)

958 
	#gí_πx_øw_PC
(
MODE
) \

959 
	`gí_πx_fmt_
 (
PC
, (
MODE
))

	)

960 
	#gí_πx_øw_REG
(
MODE
, 
ARG0
) \

961 
	`gí_πx_fmt_i00
 (
REG
, (
MODE
), (
ARG0
))

	)

962 
	#gí_πx_SCRATCH
(
MODE
) \

963 
	`gí_πx_fmt_0
 (
SCRATCH
, (
MODE
))

	)

964 
	#gí_πx_øw_SUBREG
(
MODE
, 
ARG0
, 
ARG1
) \

965 
	`gí_πx_fmt_ei
 (
SUBREG
, (
MODE
), (
ARG0
), (
ARG1
))

	)

966 
	#gí_πx_STRICT_LOW_PART
(
MODE
, 
ARG0
) \

967 
	`gí_πx_fmt_e
 (
STRICT_LOW_PART
, (
MODE
), (
ARG0
))

	)

968 
	#gí_πx_CONCAT
(
MODE
, 
ARG0
, 
ARG1
) \

969 
	`gí_πx_fmt_ì
 (
CONCAT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

970 
	#gí_πx_CONCATN
(
MODE
, 
ARG0
) \

971 
	`gí_πx_fmt_E
 (
CONCATN
, (
MODE
), (
ARG0
))

	)

972 
	#gí_πx_øw_MEM
(
MODE
, 
ARG0
) \

973 
	`gí_πx_fmt_e0
 (
MEM
, (
MODE
), (
ARG0
))

	)

974 
	#gí_πx_LABEL_REF
(
MODE
, 
ARG0
) \

975 
	`gí_πx_fmt_u
 (
LABEL_REF
, (
MODE
), (
ARG0
))

	)

976 
	#gí_πx_SYMBOL_REF
(
MODE
, 
ARG0
) \

977 
	`gí_πx_fmt_s00
 (
SYMBOL_REF
, (
MODE
), (
ARG0
))

	)

978 
	#gí_πx_øw_CC0
(
MODE
) \

979 
	`gí_πx_fmt_
 (
CC0
, (
MODE
))

	)

980 
	#gí_πx_IF_THEN_ELSE
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

981 
	`gí_πx_fmt_ìe
 (
IF_THEN_ELSE
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

982 
	#gí_πx_COMPARE
(
MODE
, 
ARG0
, 
ARG1
) \

983 
	`gí_πx_fmt_ì
 (
COMPARE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

984 
	#gí_πx_PLUS
(
MODE
, 
ARG0
, 
ARG1
) \

985 
	`gí_πx_fmt_ì
 (
PLUS
, (
MODE
), (
ARG0
), (
ARG1
))

	)

986 
	#gí_πx_MINUS
(
MODE
, 
ARG0
, 
ARG1
) \

987 
	`gí_πx_fmt_ì
 (
MINUS
, (
MODE
), (
ARG0
), (
ARG1
))

	)

988 
	#gí_πx_NEG
(
MODE
, 
ARG0
) \

989 
	`gí_πx_fmt_e
 (
NEG
, (
MODE
), (
ARG0
))

	)

990 
	#gí_πx_MULT
(
MODE
, 
ARG0
, 
ARG1
) \

991 
	`gí_πx_fmt_ì
 (
MULT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

992 
	#gí_πx_SS_MULT
(
MODE
, 
ARG0
, 
ARG1
) \

993 
	`gí_πx_fmt_ì
 (
SS_MULT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

994 
	#gí_πx_US_MULT
(
MODE
, 
ARG0
, 
ARG1
) \

995 
	`gí_πx_fmt_ì
 (
US_MULT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

996 
	#gí_πx_DIV
(
MODE
, 
ARG0
, 
ARG1
) \

997 
	`gí_πx_fmt_ì
 (
DIV
, (
MODE
), (
ARG0
), (
ARG1
))

	)

998 
	#gí_πx_SS_DIV
(
MODE
, 
ARG0
, 
ARG1
) \

999 
	`gí_πx_fmt_ì
 (
SS_DIV
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1000 
	#gí_πx_US_DIV
(
MODE
, 
ARG0
, 
ARG1
) \

1001 
	`gí_πx_fmt_ì
 (
US_DIV
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1002 
	#gí_πx_MOD
(
MODE
, 
ARG0
, 
ARG1
) \

1003 
	`gí_πx_fmt_ì
 (
MOD
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1004 
	#gí_πx_UDIV
(
MODE
, 
ARG0
, 
ARG1
) \

1005 
	`gí_πx_fmt_ì
 (
UDIV
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1006 
	#gí_πx_UMOD
(
MODE
, 
ARG0
, 
ARG1
) \

1007 
	`gí_πx_fmt_ì
 (
UMOD
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1008 
	#gí_πx_AND
(
MODE
, 
ARG0
, 
ARG1
) \

1009 
	`gí_πx_fmt_ì
 (
AND
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1010 
	#gí_πx_IOR
(
MODE
, 
ARG0
, 
ARG1
) \

1011 
	`gí_πx_fmt_ì
 (
IOR
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1012 
	#gí_πx_XOR
(
MODE
, 
ARG0
, 
ARG1
) \

1013 
	`gí_πx_fmt_ì
 (
XOR
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1014 
	#gí_πx_NOT
(
MODE
, 
ARG0
) \

1015 
	`gí_πx_fmt_e
 (
NOT
, (
MODE
), (
ARG0
))

	)

1016 
	#gí_πx_ASHIFT
(
MODE
, 
ARG0
, 
ARG1
) \

1017 
	`gí_πx_fmt_ì
 (
ASHIFT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1018 
	#gí_πx_ROTATE
(
MODE
, 
ARG0
, 
ARG1
) \

1019 
	`gí_πx_fmt_ì
 (
ROTATE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1020 
	#gí_πx_ASHIFTRT
(
MODE
, 
ARG0
, 
ARG1
) \

1021 
	`gí_πx_fmt_ì
 (
ASHIFTRT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1022 
	#gí_πx_LSHIFTRT
(
MODE
, 
ARG0
, 
ARG1
) \

1023 
	`gí_πx_fmt_ì
 (
LSHIFTRT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1024 
	#gí_πx_ROTATERT
(
MODE
, 
ARG0
, 
ARG1
) \

1025 
	`gí_πx_fmt_ì
 (
ROTATERT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1026 
	#gí_πx_SMIN
(
MODE
, 
ARG0
, 
ARG1
) \

1027 
	`gí_πx_fmt_ì
 (
SMIN
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1028 
	#gí_πx_SMAX
(
MODE
, 
ARG0
, 
ARG1
) \

1029 
	`gí_πx_fmt_ì
 (
SMAX
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1030 
	#gí_πx_UMIN
(
MODE
, 
ARG0
, 
ARG1
) \

1031 
	`gí_πx_fmt_ì
 (
UMIN
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1032 
	#gí_πx_UMAX
(
MODE
, 
ARG0
, 
ARG1
) \

1033 
	`gí_πx_fmt_ì
 (
UMAX
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1034 
	#gí_πx_PRE_DEC
(
MODE
, 
ARG0
) \

1035 
	`gí_πx_fmt_e
 (
PRE_DEC
, (
MODE
), (
ARG0
))

	)

1036 
	#gí_πx_PRE_INC
(
MODE
, 
ARG0
) \

1037 
	`gí_πx_fmt_e
 (
PRE_INC
, (
MODE
), (
ARG0
))

	)

1038 
	#gí_πx_POST_DEC
(
MODE
, 
ARG0
) \

1039 
	`gí_πx_fmt_e
 (
POST_DEC
, (
MODE
), (
ARG0
))

	)

1040 
	#gí_πx_POST_INC
(
MODE
, 
ARG0
) \

1041 
	`gí_πx_fmt_e
 (
POST_INC
, (
MODE
), (
ARG0
))

	)

1042 
	#gí_πx_PRE_MODIFY
(
MODE
, 
ARG0
, 
ARG1
) \

1043 
	`gí_πx_fmt_ì
 (
PRE_MODIFY
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1044 
	#gí_πx_POST_MODIFY
(
MODE
, 
ARG0
, 
ARG1
) \

1045 
	`gí_πx_fmt_ì
 (
POST_MODIFY
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1046 
	#gí_πx_NE
(
MODE
, 
ARG0
, 
ARG1
) \

1047 
	`gí_πx_fmt_ì
 (
NE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1048 
	#gí_πx_EQ
(
MODE
, 
ARG0
, 
ARG1
) \

1049 
	`gí_πx_fmt_ì
 (
EQ
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1050 
	#gí_πx_GE
(
MODE
, 
ARG0
, 
ARG1
) \

1051 
	`gí_πx_fmt_ì
 (
GE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1052 
	#gí_πx_GT
(
MODE
, 
ARG0
, 
ARG1
) \

1053 
	`gí_πx_fmt_ì
 (
GT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1054 
	#gí_πx_LE
(
MODE
, 
ARG0
, 
ARG1
) \

1055 
	`gí_πx_fmt_ì
 (
LE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1056 
	#gí_πx_LT
(
MODE
, 
ARG0
, 
ARG1
) \

1057 
	`gí_πx_fmt_ì
 (
LT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1058 
	#gí_πx_GEU
(
MODE
, 
ARG0
, 
ARG1
) \

1059 
	`gí_πx_fmt_ì
 (
GEU
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1060 
	#gí_πx_GTU
(
MODE
, 
ARG0
, 
ARG1
) \

1061 
	`gí_πx_fmt_ì
 (
GTU
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1062 
	#gí_πx_LEU
(
MODE
, 
ARG0
, 
ARG1
) \

1063 
	`gí_πx_fmt_ì
 (
LEU
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1064 
	#gí_πx_LTU
(
MODE
, 
ARG0
, 
ARG1
) \

1065 
	`gí_πx_fmt_ì
 (
LTU
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1066 
	#gí_πx_UNORDERED
(
MODE
, 
ARG0
, 
ARG1
) \

1067 
	`gí_πx_fmt_ì
 (
UNORDERED
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1068 
	#gí_πx_ORDERED
(
MODE
, 
ARG0
, 
ARG1
) \

1069 
	`gí_πx_fmt_ì
 (
ORDERED
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1070 
	#gí_πx_UNEQ
(
MODE
, 
ARG0
, 
ARG1
) \

1071 
	`gí_πx_fmt_ì
 (
UNEQ
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1072 
	#gí_πx_UNGE
(
MODE
, 
ARG0
, 
ARG1
) \

1073 
	`gí_πx_fmt_ì
 (
UNGE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1074 
	#gí_πx_UNGT
(
MODE
, 
ARG0
, 
ARG1
) \

1075 
	`gí_πx_fmt_ì
 (
UNGT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1076 
	#gí_πx_UNLE
(
MODE
, 
ARG0
, 
ARG1
) \

1077 
	`gí_πx_fmt_ì
 (
UNLE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1078 
	#gí_πx_UNLT
(
MODE
, 
ARG0
, 
ARG1
) \

1079 
	`gí_πx_fmt_ì
 (
UNLT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1080 
	#gí_πx_LTGT
(
MODE
, 
ARG0
, 
ARG1
) \

1081 
	`gí_πx_fmt_ì
 (
LTGT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1082 
	#gí_πx_SIGN_EXTEND
(
MODE
, 
ARG0
) \

1083 
	`gí_πx_fmt_e
 (
SIGN_EXTEND
, (
MODE
), (
ARG0
))

	)

1084 
	#gí_πx_ZERO_EXTEND
(
MODE
, 
ARG0
) \

1085 
	`gí_πx_fmt_e
 (
ZERO_EXTEND
, (
MODE
), (
ARG0
))

	)

1086 
	#gí_πx_TRUNCATE
(
MODE
, 
ARG0
) \

1087 
	`gí_πx_fmt_e
 (
TRUNCATE
, (
MODE
), (
ARG0
))

	)

1088 
	#gí_πx_FLOAT_EXTEND
(
MODE
, 
ARG0
) \

1089 
	`gí_πx_fmt_e
 (
FLOAT_EXTEND
, (
MODE
), (
ARG0
))

	)

1090 
	#gí_πx_FLOAT_TRUNCATE
(
MODE
, 
ARG0
) \

1091 
	`gí_πx_fmt_e
 (
FLOAT_TRUNCATE
, (
MODE
), (
ARG0
))

	)

1092 
	#gí_πx_FLOAT
(
MODE
, 
ARG0
) \

1093 
	`gí_πx_fmt_e
 (
FLOAT
, (
MODE
), (
ARG0
))

	)

1094 
	#gí_πx_FIX
(
MODE
, 
ARG0
) \

1095 
	`gí_πx_fmt_e
 (
FIX
, (
MODE
), (
ARG0
))

	)

1096 
	#gí_πx_UNSIGNED_FLOAT
(
MODE
, 
ARG0
) \

1097 
	`gí_πx_fmt_e
 (
UNSIGNED_FLOAT
, (
MODE
), (
ARG0
))

	)

1098 
	#gí_πx_UNSIGNED_FIX
(
MODE
, 
ARG0
) \

1099 
	`gí_πx_fmt_e
 (
UNSIGNED_FIX
, (
MODE
), (
ARG0
))

	)

1100 
	#gí_πx_FRACT_CONVERT
(
MODE
, 
ARG0
) \

1101 
	`gí_πx_fmt_e
 (
FRACT_CONVERT
, (
MODE
), (
ARG0
))

	)

1102 
	#gí_πx_UNSIGNED_FRACT_CONVERT
(
MODE
, 
ARG0
) \

1103 
	`gí_πx_fmt_e
 (
UNSIGNED_FRACT_CONVERT
, (
MODE
), (
ARG0
))

	)

1104 
	#gí_πx_SAT_FRACT
(
MODE
, 
ARG0
) \

1105 
	`gí_πx_fmt_e
 (
SAT_FRACT
, (
MODE
), (
ARG0
))

	)

1106 
	#gí_πx_UNSIGNED_SAT_FRACT
(
MODE
, 
ARG0
) \

1107 
	`gí_πx_fmt_e
 (
UNSIGNED_SAT_FRACT
, (
MODE
), (
ARG0
))

	)

1108 
	#gí_πx_ABS
(
MODE
, 
ARG0
) \

1109 
	`gí_πx_fmt_e
 (
ABS
, (
MODE
), (
ARG0
))

	)

1110 
	#gí_πx_SQRT
(
MODE
, 
ARG0
) \

1111 
	`gí_πx_fmt_e
 (
SQRT
, (
MODE
), (
ARG0
))

	)

1112 
	#gí_πx_BSWAP
(
MODE
, 
ARG0
) \

1113 
	`gí_πx_fmt_e
 (
BSWAP
, (
MODE
), (
ARG0
))

	)

1114 
	#gí_πx_FFS
(
MODE
, 
ARG0
) \

1115 
	`gí_πx_fmt_e
 (
FFS
, (
MODE
), (
ARG0
))

	)

1116 
	#gí_πx_CLRSB
(
MODE
, 
ARG0
) \

1117 
	`gí_πx_fmt_e
 (
CLRSB
, (
MODE
), (
ARG0
))

	)

1118 
	#gí_πx_CLZ
(
MODE
, 
ARG0
) \

1119 
	`gí_πx_fmt_e
 (
CLZ
, (
MODE
), (
ARG0
))

	)

1120 
	#gí_πx_CTZ
(
MODE
, 
ARG0
) \

1121 
	`gí_πx_fmt_e
 (
CTZ
, (
MODE
), (
ARG0
))

	)

1122 
	#gí_πx_POPCOUNT
(
MODE
, 
ARG0
) \

1123 
	`gí_πx_fmt_e
 (
POPCOUNT
, (
MODE
), (
ARG0
))

	)

1124 
	#gí_πx_PARITY
(
MODE
, 
ARG0
) \

1125 
	`gí_πx_fmt_e
 (
PARITY
, (
MODE
), (
ARG0
))

	)

1126 
	#gí_πx_SIGN_EXTRACT
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1127 
	`gí_πx_fmt_ìe
 (
SIGN_EXTRACT
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1128 
	#gí_πx_ZERO_EXTRACT
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1129 
	`gí_πx_fmt_ìe
 (
ZERO_EXTRACT
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1130 
	#gí_πx_HIGH
(
MODE
, 
ARG0
) \

1131 
	`gí_πx_fmt_e
 (
HIGH
, (
MODE
), (
ARG0
))

	)

1132 
	#gí_πx_LO_SUM
(
MODE
, 
ARG0
, 
ARG1
) \

1133 
	`gí_πx_fmt_ì
 (
LO_SUM
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1134 
	#gí_πx_VEC_MERGE
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1135 
	`gí_πx_fmt_ìe
 (
VEC_MERGE
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1136 
	#gí_πx_VEC_SELECT
(
MODE
, 
ARG0
, 
ARG1
) \

1137 
	`gí_πx_fmt_ì
 (
VEC_SELECT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1138 
	#gí_πx_VEC_CONCAT
(
MODE
, 
ARG0
, 
ARG1
) \

1139 
	`gí_πx_fmt_ì
 (
VEC_CONCAT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1140 
	#gí_πx_VEC_DUPLICATE
(
MODE
, 
ARG0
) \

1141 
	`gí_πx_fmt_e
 (
VEC_DUPLICATE
, (
MODE
), (
ARG0
))

	)

1142 
	#gí_πx_SS_PLUS
(
MODE
, 
ARG0
, 
ARG1
) \

1143 
	`gí_πx_fmt_ì
 (
SS_PLUS
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1144 
	#gí_πx_US_PLUS
(
MODE
, 
ARG0
, 
ARG1
) \

1145 
	`gí_πx_fmt_ì
 (
US_PLUS
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1146 
	#gí_πx_SS_MINUS
(
MODE
, 
ARG0
, 
ARG1
) \

1147 
	`gí_πx_fmt_ì
 (
SS_MINUS
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1148 
	#gí_πx_SS_NEG
(
MODE
, 
ARG0
) \

1149 
	`gí_πx_fmt_e
 (
SS_NEG
, (
MODE
), (
ARG0
))

	)

1150 
	#gí_πx_US_NEG
(
MODE
, 
ARG0
) \

1151 
	`gí_πx_fmt_e
 (
US_NEG
, (
MODE
), (
ARG0
))

	)

1152 
	#gí_πx_SS_ABS
(
MODE
, 
ARG0
) \

1153 
	`gí_πx_fmt_e
 (
SS_ABS
, (
MODE
), (
ARG0
))

	)

1154 
	#gí_πx_SS_ASHIFT
(
MODE
, 
ARG0
, 
ARG1
) \

1155 
	`gí_πx_fmt_ì
 (
SS_ASHIFT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1156 
	#gí_πx_US_ASHIFT
(
MODE
, 
ARG0
, 
ARG1
) \

1157 
	`gí_πx_fmt_ì
 (
US_ASHIFT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1158 
	#gí_πx_US_MINUS
(
MODE
, 
ARG0
, 
ARG1
) \

1159 
	`gí_πx_fmt_ì
 (
US_MINUS
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1160 
	#gí_πx_SS_TRUNCATE
(
MODE
, 
ARG0
) \

1161 
	`gí_πx_fmt_e
 (
SS_TRUNCATE
, (
MODE
), (
ARG0
))

	)

1162 
	#gí_πx_US_TRUNCATE
(
MODE
, 
ARG0
) \

1163 
	`gí_πx_fmt_e
 (
US_TRUNCATE
, (
MODE
), (
ARG0
))

	)

1164 
	#gí_πx_FMA
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1165 
	`gí_πx_fmt_ìe
 (
FMA
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1166 
	#gí_πx_VAR_LOCATION
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1167 
	`gí_πx_fmt_ãi
 (
VAR_LOCATION
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1168 
	#gí_πx_DEBUG_IMPLICIT_PTR
(
MODE
, 
ARG0
) \

1169 
	`gí_πx_fmt_t
 (
DEBUG_IMPLICIT_PTR
, (
MODE
), (
ARG0
))

	)

1170 
	#gí_πx_ENTRY_VALUE
(
MODE
) \

1171 
	`gí_πx_fmt_0
 (
ENTRY_VALUE
, (
MODE
))

	)

1172 
	#gí_πx_DEBUG_PARAMETER_REF
(
MODE
, 
ARG0
) \

1173 
	`gí_πx_fmt_t
 (
DEBUG_PARAMETER_REF
, (
MODE
), (
ARG0
))

	)

1174 
	#gí_πx_MATCH_OPERAND
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1175 
	`gí_πx_fmt_iss
 (
MATCH_OPERAND
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1176 
	#gí_πx_MATCH_SCRATCH
(
MODE
, 
ARG0
, 
ARG1
) \

1177 
	`gí_πx_fmt_is
 (
MATCH_SCRATCH
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1178 
	#gí_πx_MATCH_OPERATOR
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1179 
	`gí_πx_fmt_isE
 (
MATCH_OPERATOR
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1180 
	#gí_πx_MATCH_PARALLEL
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1181 
	`gí_πx_fmt_isE
 (
MATCH_PARALLEL
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1182 
	#gí_πx_MATCH_DUP
(
MODE
, 
ARG0
) \

1183 
	`gí_πx_fmt_i
 (
MATCH_DUP
, (
MODE
), (
ARG0
))

	)

1184 
	#gí_πx_MATCH_OP_DUP
(
MODE
, 
ARG0
, 
ARG1
) \

1185 
	`gí_πx_fmt_iE
 (
MATCH_OP_DUP
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1186 
	#gí_πx_MATCH_PAR_DUP
(
MODE
, 
ARG0
, 
ARG1
) \

1187 
	`gí_πx_fmt_iE
 (
MATCH_PAR_DUP
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1188 
	#gí_πx_MATCH_CODE
(
MODE
, 
ARG0
, 
ARG1
) \

1189 
	`gí_πx_fmt_ss
 (
MATCH_CODE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1190 
	#gí_πx_MATCH_TEST
(
MODE
, 
ARG0
) \

1191 
	`gí_πx_fmt_s
 (
MATCH_TEST
, (
MODE
), (
ARG0
))

	)

1192 
	#gí_πx_DEFINE_DELAY
(
MODE
, 
ARG0
, 
ARG1
) \

1193 
	`gí_πx_fmt_eE
 (
DEFINE_DELAY
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1194 
	#gí_πx_DEFINE_PREDICATE
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1195 
	`gí_πx_fmt_£s
 (
DEFINE_PREDICATE
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1196 
	#gí_πx_DEFINE_SPECIAL_PREDICATE
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1197 
	`gí_πx_fmt_£s
 (
DEFINE_SPECIAL_PREDICATE
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1198 
	#gí_πx_DEFINE_REGISTER_CONSTRAINT
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1199 
	`gí_πx_fmt_sss
 (
DEFINE_REGISTER_CONSTRAINT
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1200 
	#gí_πx_DEFINE_CONSTRAINT
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1201 
	`gí_πx_fmt_s£
 (
DEFINE_CONSTRAINT
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1202 
	#gí_πx_DEFINE_MEMORY_CONSTRAINT
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1203 
	`gí_πx_fmt_s£
 (
DEFINE_MEMORY_CONSTRAINT
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1204 
	#gí_πx_DEFINE_ADDRESS_CONSTRAINT
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1205 
	`gí_πx_fmt_s£
 (
DEFINE_ADDRESS_CONSTRAINT
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1206 
	#gí_πx_EXCLUSION_SET
(
MODE
, 
ARG0
, 
ARG1
) \

1207 
	`gí_πx_fmt_ss
 (
EXCLUSION_SET
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1208 
	#gí_πx_PRESENCE_SET
(
MODE
, 
ARG0
, 
ARG1
) \

1209 
	`gí_πx_fmt_ss
 (
PRESENCE_SET
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1210 
	#gí_πx_FINAL_PRESENCE_SET
(
MODE
, 
ARG0
, 
ARG1
) \

1211 
	`gí_πx_fmt_ss
 (
FINAL_PRESENCE_SET
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1212 
	#gí_πx_ABSENCE_SET
(
MODE
, 
ARG0
, 
ARG1
) \

1213 
	`gí_πx_fmt_ss
 (
ABSENCE_SET
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1214 
	#gí_πx_FINAL_ABSENCE_SET
(
MODE
, 
ARG0
, 
ARG1
) \

1215 
	`gí_πx_fmt_ss
 (
FINAL_ABSENCE_SET
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1216 
	#gí_πx_DEFINE_AUTOMATON
(
MODE
, 
ARG0
) \

1217 
	`gí_πx_fmt_s
 (
DEFINE_AUTOMATON
, (
MODE
), (
ARG0
))

	)

1218 
	#gí_πx_AUTOMATA_OPTION
(
MODE
, 
ARG0
) \

1219 
	`gí_πx_fmt_s
 (
AUTOMATA_OPTION
, (
MODE
), (
ARG0
))

	)

1220 
	#gí_πx_DEFINE_RESERVATION
(
MODE
, 
ARG0
, 
ARG1
) \

1221 
	`gí_πx_fmt_ss
 (
DEFINE_RESERVATION
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1222 
	#gí_πx_DEFINE_INSN_RESERVATION
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
) \

1223 
	`gí_πx_fmt_sõs
 (
DEFINE_INSN_RESERVATION
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
))

	)

1224 
	#gí_πx_DEFINE_ATTR
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1225 
	`gí_πx_fmt_s£
 (
DEFINE_ATTR
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1226 
	#gí_πx_DEFINE_ENUM_ATTR
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
) \

1227 
	`gí_πx_fmt_s£
 (
DEFINE_ENUM_ATTR
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
))

	)

1228 
	#gí_πx_ATTR
(
MODE
, 
ARG0
) \

1229 
	`gí_πx_fmt_s
 (
ATTR
, (
MODE
), (
ARG0
))

	)

1230 
	#gí_πx_SET_ATTR
(
MODE
, 
ARG0
, 
ARG1
) \

1231 
	`gí_πx_fmt_ss
 (
SET_ATTR
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1232 
	#gí_πx_SET_ATTR_ALTERNATIVE
(
MODE
, 
ARG0
, 
ARG1
) \

1233 
	`gí_πx_fmt_sE
 (
SET_ATTR_ALTERNATIVE
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1234 
	#gí_πx_EQ_ATTR
(
MODE
, 
ARG0
, 
ARG1
) \

1235 
	`gí_πx_fmt_ss
 (
EQ_ATTR
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1236 
	#gí_πx_EQ_ATTR_ALT
(
MODE
, 
ARG0
, 
ARG1
) \

1237 
	`gí_πx_fmt_ii
 (
EQ_ATTR_ALT
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1238 
	#gí_πx_ATTR_FLAG
(
MODE
, 
ARG0
) \

1239 
	`gí_πx_fmt_s
 (
ATTR_FLAG
, (
MODE
), (
ARG0
))

	)

1240 
	#gí_πx_COND
(
MODE
, 
ARG0
, 
ARG1
) \

1241 
	`gí_πx_fmt_Ee
 (
COND
, (
MODE
), (
ARG0
), (
ARG1
))

	)

1242 
	#gí_πx_DEFINE_SUBST
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
) \

1243 
	`gí_πx_fmt_sEsE
 (
DEFINE_SUBST
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
))

	)

1244 
	#gí_πx_DEFINE_SUBST_ATTR
(
MODE
, 
ARG0
, 
ARG1
, 
ARG2
, 
ARG3
) \

1245 
	`gí_πx_fmt_ssss
 (
DEFINE_SUBST_ATTR
, (
MODE
), (
ARG0
), (
ARG1
), (
ARG2
), (
ARG3
))

	)

	@include/ggc.h

21 #i‚de‡
GCC_GGC_H


22 
	#GCC_GGC_H


	)

23 
	~"°©i°ics.h
"

29 c⁄° 
em±y_°rög
[];

34 
	~"gty≥-desc.h
"

39 (*
	tgt_nŸe_poöãrs
Ë(*, *, 
	tgt_poöãr_›î©‹
,

47 (*
	tgt_h™dÀ_ª‹dî
Ë(*, *, 
	tgt_poöãr_›î©‹
,

51 
	`gt_pch_nŸe_obje˘
 (*, *, 
gt_nŸe_poöãrs
);

55 
	`gt_pch_nŸe_ª‹dî
 (*, *, 
gt_h™dÀ_ª‹dî
);

58 (*
	tgt_poöãr_wÆkî
) (*);

62 
	sggc_roŸ_èb
 {

63 *
ba£
;

64 
size_t
 
√…
;

65 
size_t
 
°ride
;

66 
gt_poöãr_wÆkî
 
cb
;

67 
gt_poöãr_wÆkî
 
pchw
;

69 
	#LAST_GGC_ROOT_TAB
 { 
NULL
, 0, 0, NULL, NULL 
	}

	)
}

71 c⁄° 
ggc_roŸ_èb
 * c⁄° 
gt_ggc_πab
[];

72 c⁄° 
ggc_roŸ_èb
 * c⁄° 
gt_ggc_dñëabÀ_πab
[];

73 c⁄° 
ggc_roŸ_èb
 * c⁄° 
gt_pch_ˇche_πab
[];

74 c⁄° 
ggc_roŸ_èb
 * c⁄° 
gt_pch_sˇœr_πab
[];

77 
	ghèb
;

78 
	sggc_ˇche_èb
 {

79 
hèb
 * *
	mba£
;

80 
size_t
 
	m√…
;

81 
size_t
 
	m°ride
;

82 
gt_poöãr_wÆkî
 
	mcb
;

83 
gt_poöãr_wÆkî
 
	mpchw
;

84 (*
	mm¨ked_p
) (const *);

86 
	#LAST_GGC_CACHE_TAB
 { 
NULL
, 0, 0, NULL, NULL, NULL }

	)

88 c⁄° 
ggc_ˇche_èb
 * c⁄° 
gt_ggc_ˇche_πab
[];

92 
	#ggc_ã°_™d_£t_m¨k
(
EXPR
) \

93 ((
EXPR
Ë!
NULL
 && ((*Ë(EXPR)Ë!(*Ë1 && ! 
	`ggc_£t_m¨k
 (EXPR))

	)

95 
	#ggc_m¨k
(
EXPR
) \

97 c⁄° *c⁄° 
a__
 = (
EXPR
); \

98 i‡(
a__
 !
NULL
 &&á__ != (*) 1) \

99 
	`ggc_£t_m¨k
 (
a__
); \

100 } 0)

	)

107 
ggc_£t_m¨k
 (const *);

112 
ggc_m¨ked_p
 (const *);

115 
gt_pch_n_S
 (const *);

116 
gt_ggc_m_S
 (const *);

121 
öô_°rögpoﬁ
 ();

124 
öô_ggc
 ();

130 
boﬁ
 
ggc_¥Ÿe˘_idítifõrs
;

133 
gt_pch_ßve
 (
FILE
 *
f
);

139 *
	$ggc_öã∫Æ_Æloc_°©
 (
size_t
 
MEM_STAT_DECL
)

140 
ATTRIBUTE_MALLOC
;

142 
size_t
 
	`ggc_round_Æloc_size
 (size_à
ªque°ed_size
);

144 
	#ggc_öã∫Æ_Æloc
(
s
Ë
	`ggc_öã∫Æ_Æloc_°©
 (†
MEM_STAT_INFO
)

	)

147 *
	$ggc_öã∫Æ_˛óªd_Æloc_°©
 (
size_t
 
MEM_STAT_DECL
)

148 
ATTRIBUTE_MALLOC
;

149 
	#ggc_öã∫Æ_˛óªd_Æloc
(
s
Ë
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (†
MEM_STAT_INFO
)

	)

152 *
	`ggc_ªÆloc_°©
 (*, 
size_t
 
MEM_STAT_DECL
);

155 
	`ggc_‰ì
 (*);

157 
	`dump_ggc_loc_°©i°ics
 (
boﬁ
);

160 
	#GGC_RESIZEVEC
(
T
, 
P
, 
N
) \

161 ((
T
 *Ë
	`ggc_ªÆloc_°©
 ((
P
), (
N
Ë*  (TË
MEM_STAT_INFO
))

	)

163 
	#GGC_RESIZEVAR
(
T
, 
P
, 
N
) \

164 ((
T
 *Ë
	`ggc_ªÆloc_°©
 ((
P
), (
N
Ë
MEM_STAT_INFO
))

	)

166 
ölöe
 *

167 
	$ggc_öã∫Æ_vec_Æloc_°©
 (
size_t
 
s
, size_à
c
 
MEM_STAT_DECL
)

169  
	`ggc_öã∫Æ_Æloc_°©
 (
c
 * 
s
 
PASS_MEM_STAT
);

170 
	}
}

172 
ölöe
 *

173 
	$ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (
size_t
 
s
, size_à
c
 
MEM_STAT_DECL
)

175  
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (
c
 * 
s
 
PASS_MEM_STAT
);

176 
	}
}

178 
	#ggc_öã∫Æ_˛óªd_vec_Æloc
(
s
, 
c
) \

179 (
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ((
s
), (
c
Ë
MEM_STAT_INFO
))

	)

181 
ölöe
 *

182 
	$ggc_Æloc_©omic_°©
 (
size_t
 
s
 
MEM_STAT_DECL
)

184  
	`ggc_öã∫Æ_Æloc_°©
 (
s
 
PASS_MEM_STAT
);

185 
	}
}

187 
	#ggc_Æloc_©omic
(
S
Ë(
	`ggc_Æloc_©omic_°©
 ((SË
MEM_STAT_INFO
))

	)

189 
	#ggc_Æloc_˛óªd_©omic
(
S
) \

190 (
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ((
S
Ë
MEM_STAT_INFO
))

	)

192 *
	$ggc_˛óªd_Æloc_hèb_ign‹e_¨gs
 (
size_t
, size_t)

193 
ATTRIBUTE_MALLOC
;

195 *
	$ggc_˛óªd_Æloc_±r_¨øy_two_¨gs
 (
size_t
, size_t)

196 
ATTRIBUTE_MALLOC
;

198 
	#hèb_¸óã_ggc
(
SIZE
, 
HASH
, 
EQ
, 
DEL
) \

199 
	`hèb_¸óã_ty≥d_Æloc
 (
SIZE
, 
HASH
, 
EQ
, 
DEL
, \

200 
ggc_˛óªd_Æloc_hèb_ign‹e_¨gs
, \

201 
ggc_˛óªd_Æloc_±r_¨øy_two_¨gs
, \

202 
ggc_‰ì
)

	)

204 
	#•œy_åì_√w_ggc
(
COMPARE
, 
ALLOC_TREE
, 
ALLOC_NODE
) \

205 
	`•œy_åì_√w_ty≥d_Æloc
 (
COMPARE
, 
NULL
, NULL, &
ALLOC_TREE
, &
ALLOC_NODE
, \

206 &
ggc_•œy_d⁄t_‰ì
, 
NULL
)

	)

208 *
	$ggc_•œy_Æloc
 (, *)

209 
ATTRIBUTE_MALLOC
;

211 
	`ggc_•œy_d⁄t_‰ì
 (*, *);

216 c⁄° *
	`ggc_Æloc_°rög_°©
 (c⁄° *
c⁄ã¡s
, 
Àngth


217 
MEM_STAT_DECL
);

219 
	#ggc_Æloc_°rög
(
c
, 
l
Ë
	`ggc_Æloc_°rög_°©
 (c,Ü 
MEM_STAT_INFO
)

	)

222 
	#ggc_°rdup
(
S
Ë
	`ggc_Æloc_°rög_°©
 ((S), -1 
MEM_STAT_INFO
)

	)

226 
	`ggc_cﬁÀ˘
 ();

230 
	`ggc_ªgi°î_roŸ_èb
 (c⁄° 
ggc_roŸ_èb
 *);

234 
	`ggc_ªgi°î_ˇche_èb
 (c⁄° 
ggc_ˇche_èb
 *);

237 
	`gt_pch_ª°‹e
 (
FILE
 *
f
);

242 
	`ggc_¥öt_°©i°ics
 ();

244 
	`°rögpoﬁ_°©i°ics
 ();

247 
	`öô_ggc_heuri°ics
 ();

249 
	#ggc_Æloc_πvec_sized
(
NELT
) \

250 
	`ggc_Æloc_πvec_def
 ( (
πvec_def
) \

251 + ((
NELT
Ë- 1Ë*  (
πx
)) \

252 

	)

255 
ölöe
 
πx_def
 *

256 
	$ggc_Æloc_πx_def_°©
 (
size_t
 
s
 
MEM_STAT_DECL
)

258  (
πx_def
 *Ë
	`ggc_öã∫Æ_Æloc_°©
 (
s
 
PASS_MEM_STAT
);

259 
	}
}

261 
ölöe
 
åì_node
 *

262 
	$ggc_Æloc_åì_node_°©
 (
size_t
 
s
 
MEM_STAT_DECL
)

264  (
åì_node
 *Ë
	`ggc_öã∫Æ_Æloc_°©
 (
s
 
PASS_MEM_STAT
);

265 
	}
}

267 
ölöe
 
åì_node
 *

268 
	$ggc_Æloc_˛óªd_åì_node_°©
 (
size_t
 
s
 
MEM_STAT_DECL
)

270  (
åì_node
 *Ë
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (
s
 
PASS_MEM_STAT
);

271 
	}
}

273 
ölöe
 
gim∂e_°©emít_ba£
 *

274 
	$ggc_Æloc_˛óªd_gim∂e_°©emít_°©
 (
size_t
 
s
 
MEM_STAT_DECL
)

276  (
gim∂e_°©emít_ba£
 *)

277 
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (
s
 
PASS_MEM_STAT
);

278 
	}
}

280 
ölöe
 
simd_˛⁄e
 *

281 
	$ggc_Æloc_˛óªd_simd_˛⁄e_°©
 (
size_t
 
s
 
MEM_STAT_DECL
)

283  (
simd_˛⁄e
 *)

284 
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (
s
 
PASS_MEM_STAT
);

285 
	}
}

	@include/gimple-builder.h

21 #i‚de‡
GCC_GIMPLE_BUILDER_H


22 
	#GCC_GIMPLE_BUILDER_H


	)

24 
gim∂e
 
buûd_assign
 (
åì_code
, 
åì
, ,Åªê
lhs
 = 
NULL_TREE
);

25 
gim∂e
 
buûd_assign
 (
åì_code
, gim∂e, , 
åì
 
lhs
 = 
NULL_TREE
);

26 
gim∂e
 
buûd_assign
 (
åì_code
, 
åì
,Åªe,Åªê
lhs
 = 
NULL_TREE
);

27 
gim∂e
 
buûd_assign
 (
åì_code
, gim∂e, 
åì
,Åªê
lhs
 = 
NULL_TREE
);

28 
gim∂e
 
buûd_assign
 (
åì_code
, 
åì
, gim∂e,Åªê
lhs
 = 
NULL_TREE
);

29 
gim∂e
 
buûd_assign
 (
åì_code
, gim∂e, gim∂e, 
åì
 
lhs
 = 
NULL_TREE
);

30 
gim∂e
 
buûd_ty≥_ˇ°
 (
åì
,Åªe,Åªê
lhs
 = 
NULL_TREE
);

31 
gim∂e
 
buûd_ty≥_ˇ°
 (
åì
, gim∂e,Åªê
lhs
 = 
NULL_TREE
);

	@include/gimple-expr.h

20 #i‚de‡
GCC_GIMPLE_EXPR_H


21 
	#GCC_GIMPLE_EXPR_H


	)

23 
boﬁ
 
u£Àss_ty≥_c⁄vîsi⁄_p
 (
åì
,Åree);

26 
gim∂e_£t_body
 (
åì
, 
gim∂e_£q
);

27 
gim∂e_£q
 
gim∂e_body
 (
åì
);

28 
boﬁ
 
gim∂e_has_body_p
 (
åì
);

29 c⁄° *
gim∂e_de˛_¥öèbÀ_«me
 (
åì
, );

30 
åì
 
c›y_v¨_de˛
 (tree,Åree,Åree);

31 
boﬁ
 
gim∂e_ˇn_cﬂÀs˚_p
 (
åì
,Åree);

32 
åì
 
¸óã_tmp_v¨_«me
 (const *);

33 
åì
 
¸óã_tmp_v¨_øw
 (tree, const *);

34 
åì
 
¸óã_tmp_v¨
 (tree, const *);

35 
åì
 
¸óã_tmp_ªg
 (tree, const *);

36 
åì
 
¸óã_tmp_ªg_‚
 (
fun˘i⁄
 *,Åree, const *);

39 
exåa˘_›s_‰om_åì_1
 (
åì
, 
åì_code
 *,Åree *,Åree *,

40 
åì
 *);

41 
gim∂e_c⁄d_gë_›s_‰om_åì
 (
åì
, 
åì_code
 *,Åree *,

42 
åì
 *);

43 
boﬁ
 
is_gim∂e_lvÆue
 (
åì
);

44 
boﬁ
 
is_gim∂e_c⁄dex¥
 (
åì
);

45 
boﬁ
 
is_gim∂e_addªss
 (
c⁄°_åì
);

46 
boﬁ
 
is_gim∂e_öv¨ü¡_addªss
 (
c⁄°_åì
);

47 
boﬁ
 
is_gim∂e_ù_öv¨ü¡_addªss
 (
c⁄°_åì
);

48 
boﬁ
 
is_gim∂e_mö_öv¨ü¡
 (
c⁄°_åì
);

49 
boﬁ
 
is_gim∂e_ù_öv¨ü¡
 (
c⁄°_åì
);

50 
boﬁ
 
is_gim∂e_ªg
 (
åì
);

51 
boﬁ
 
is_gim∂e_vÆ
 (
åì
);

52 
boﬁ
 
is_gim∂e_asm_vÆ
 (
åì
);

53 
boﬁ
 
is_gim∂e_mö_lvÆ
 (
åì
);

54 
boﬁ
 
is_gim∂e_ˇŒ_addr
 (
åì
);

55 
boﬁ
 
is_gim∂e_mem_ªf_addr
 (
åì
);

56 
m¨k_addªsßbÀ
 (
åì
);

57 
boﬁ
 
is_gim∂e_ªg_rhs
 (
åì
);

62 
ölöe
 
boﬁ


63 
	$ty≥s_com∑tibÀ_p
 (
åì
 
ty≥1
,Åªê
ty≥2
)

65  (
ty≥1
 =
ty≥2


66 || (
	`u£Àss_ty≥_c⁄vîsi⁄_p
 (
ty≥1
, 
ty≥2
)

67 && 
	`u£Àss_ty≥_c⁄vîsi⁄_p
 (
ty≥2
, 
ty≥1
)));

68 
	}
}

72 
ölöe
 
boﬁ


73 
	$is_gim∂e_ªg_ty≥
 (
åì
 
ty≥
)

75  !
	`AGGREGATE_TYPE_P
 (
ty≥
);

76 
	}
}

80 
ölöe
 
boﬁ


81 
	$is_gim∂e_v¨übÀ
 (
åì
 
t
)

83  (
	`TREE_CODE
 (
t
Ë=
VAR_DECL


84 || 
	`TREE_CODE
 (
t
Ë=
PARM_DECL


85 || 
	`TREE_CODE
 (
t
Ë=
RESULT_DECL


86 || 
	`TREE_CODE
 (
t
Ë=
SSA_NAME
);

87 
	}
}

91 
ölöe
 
boﬁ


92 
	$is_gim∂e_id
 (
åì
 
t
)

94  (
	`is_gim∂e_v¨übÀ
 (
t
)

95 || 
	`TREE_CODE
 (
t
Ë=
FUNCTION_DECL


96 || 
	`TREE_CODE
 (
t
Ë=
LABEL_DECL


97 || 
	`TREE_CODE
 (
t
Ë=
CONST_DECL


99 || 
	`TREE_CODE
 (
t
Ë=
STRING_CST
);

100 
	}
}

104 
ölöe
 
boﬁ


105 
	$vútuÆ_›î™d_p
 (
åì
 
›
)

107 i‡(
	`TREE_CODE
 (
›
Ë=
SSA_NAME
)

109 
›
 = 
	`SSA_NAME_VAR
 (op);

110 i‡(!
›
)

111  
Ál£
;

114 i‡(
	`TREE_CODE
 (
›
Ë=
VAR_DECL
)

115  
	`VAR_DECL_IS_VIRTUAL_OPERAND
 (
›
);

117  
Ál£
;

118 
	}
}

122 
ölöe
 
boﬁ


123 
	$is_gim∂e_addªsßbÀ
 (
åì
 
t
)

125  (
	`is_gim∂e_id
 (
t
Ë|| 
	`h™dÀd_comp⁄ít_p
 (t)

126 || 
	`TREE_CODE
 (
t
Ë=
MEM_REF
);

127 
	}
}

131 
ölöe
 
boﬁ


132 
	$is_gim∂e_c⁄°™t
 (
c⁄°_åì
 
t
)

134 
	`TREE_CODE
 (
t
))

136 
INTEGER_CST
:

137 
REAL_CST
:

138 
FIXED_CST
:

139 
STRING_CST
:

140 
COMPLEX_CST
:

141 
VECTOR_CST
:

142  
åue
;

145  
Ál£
;

147 
	}
}

152 
ölöe
 

153 
	$exåa˘_›s_‰om_åì
 (
åì
 
ex¥
, 
åì_code
 *
code
,Åªê*
›0
,

154 
åì
 *
›1
)

156 
åì
 
›2
;

157 
	`exåa˘_›s_‰om_åì_1
 (
ex¥
, 
code
, 
›0
, 
›1
, &
›2
);

158 
	`gcc_as£π
 (
›2
 =
NULL_TREE
);

159 
	}
}

164 
ölöe
 
åì


165 
	$gim∂e_ˇŒ_addr_‚de˛
 (
c⁄°_åì
 
‚
)

167 i‡(
‚
 && 
	`TREE_CODE
 (‚Ë=
ADDR_EXPR
)

169 
åì
 
‚de˛
 = 
	`TREE_OPERAND
 (
‚
, 0);

170 i‡(
	`TREE_CODE
 (
‚de˛
Ë=
MEM_REF


171 && 
	`TREE_CODE
 (
	`TREE_OPERAND
 (
‚de˛
, 0)Ë=
ADDR_EXPR


172 && 
	`öãgî_zî›
 (
	`TREE_OPERAND
 (
‚de˛
, 1)))

173 
‚de˛
 = 
	`TREE_OPERAND
 (TREE_OPERAND (fndecl, 0), 0);

174 i‡(
	`TREE_CODE
 (
‚de˛
Ë=
FUNCTION_DECL
)

175  
‚de˛
;

177  
NULL_TREE
;

178 
	}
}

	@include/gimple-fold.h

22 #i‚de‡
GCC_GIMPLE_FOLD_H


23 
	#GCC_GIMPLE_FOLD_H


	)

25 
åì
 
ˇn⁄iˇlize_c⁄°ru˘‹_vÆ
 (tree,Åree);

26 
åì
 
gë_symbﬁ_c⁄°™t_vÆue
 (tree);

27 
gim∂ify_™d_upd©e_ˇŒ_‰om_åì
 (
gim∂e_°mt_ôî©‹
 *, 
åì
);

28 
åì
 
gim∂e_fﬁd_buûtö
 (
gim∂e
);

29 
boﬁ
 
fﬁd_°mt
 (
gim∂e_°mt_ôî©‹
 *);

30 
boﬁ
 
fﬁd_°mt_ö∂a˚
 (
gim∂e_°mt_ôî©‹
 *);

31 
åì
 
maybe_fﬁd_™d_com∑ris⁄s
 (
åì_code
,Åree,Åree,

32 
åì_code
, 
åì
,Åree);

33 
åì
 
maybe_fﬁd_‹_com∑ris⁄s
 (
åì_code
,Åree,Åree,

34 
åì_code
, 
åì
,Åree);

35 
åì
 
gim∂e_fﬁd_°mt_to_c⁄°™t_1
 (
gim∂e
, 
	$åì
 (*Ë(
åì
));

36 
åì
 
	`gim∂e_fﬁd_°mt_to_c⁄°™t
 (
gim∂e
, 
	$åì
 (*Ë(
åì
));

37 
åì
 
	`fﬁd_c⁄°_aggªg©e_ªf_1
 (åì, 
	$åì
 (*Ë(
åì
));

38 
åì
 
	`fﬁd_c⁄°_aggªg©e_ªf
 (tree);

39 
åì
 
	`gim∂e_gë_vút_mëhod_f‹_böfo
 (
HOST_WIDE_INT
,Åree,

40 
boﬁ
 *
ˇn_ª„r
 = 
NULL
);

41 
åì
 
	`gim∂e_gë_vút_mëhod_f‹_vèbÀ
 (
HOST_WIDE_INT
,Åree,

42 
HOST_WIDE_INT
,

43 
boﬁ
 *
ˇn_ª„r
 = 
NULL
);

44 
boﬁ
 
	`gim∂e_vÆ_n⁄√g©ive_ªÆ_p
 (
åì
);

45 
åì
 
	`gim∂e_fﬁd_ödúe˘_ªf
 (tree);

46 
boﬁ
 
	`¨ôh_code_wôh_undeföed_sig√d_ovîÊow
 (
åì_code
);

47 
gim∂e_£q
 
	`ªwrôe_to_deföed_ovîÊow
 (
gim∂e
);

	@include/gimple-iterator.h

20 #i‚de‡
GCC_GIMPLE_ITERATOR_H


21 
	#GCC_GIMPLE_ITERATOR_H


	)

25 
	sgim∂e_°mt_ôî©‹


28 
gim∂e_£q_node
 
	m±r
;

34 
gim∂e_£q
 *
	m£q
;

35 
basic_block
 
	mbb
;

38 
	egsi_ôî©‹_upd©e


40 
	mGSI_NEW_STMT
,

42 
	mGSI_SAME_STMT
,

43 
	mGSI_CONTINUE_LINKING


48 
gsi_ö£π_£q_bef‹e_wôhout_upd©e
 (
gim∂e_°mt_ôî©‹
 *,

49 
gim∂e_£q
,

50 
gsi_ôî©‹_upd©e
);

51 
gsi_ö£π_£q_bef‹e
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e_£q
,

52 
gsi_ôî©‹_upd©e
);

53 
gsi_ö£π_£q_a·î_wôhout_upd©e
 (
gim∂e_°mt_ôî©‹
 *,

54 
gim∂e_£q
,

55 
gsi_ôî©‹_upd©e
);

56 
gsi_ö£π_£q_a·î
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e_£q
,

57 
gsi_ôî©‹_upd©e
);

58 
gim∂e_£q
 
gsi_•lô_£q_a·î
 (
gim∂e_°mt_ôî©‹
);

59 
gsi_£t_°mt
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e
);

60 
gsi_•lô_£q_bef‹e
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e_£q
 *);

61 
gsi_ª∂a˚
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e
, 
boﬁ
);

62 
gsi_ª∂a˚_wôh_£q
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e_£q
, 
boﬁ
);

63 
gsi_ö£π_bef‹e_wôhout_upd©e
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e
,

64 
gsi_ôî©‹_upd©e
);

65 
gsi_ö£π_bef‹e
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e
,

66 
gsi_ôî©‹_upd©e
);

67 
gsi_ö£π_a·î_wôhout_upd©e
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e
,

68 
gsi_ôî©‹_upd©e
);

69 
gsi_ö£π_a·î
 (
gim∂e_°mt_ôî©‹
 *, 
gim∂e
,

70 
gsi_ôî©‹_upd©e
);

71 
boﬁ
 
gsi_ªmove
 (
gim∂e_°mt_ôî©‹
 *, bool);

72 
gim∂e_°mt_ôî©‹
 
gsi_f‹_°mt
 (
gim∂e
);

73 
gsi_move_a·î
 (
gim∂e_°mt_ôî©‹
 *, gimple_stmt_iterator *);

74 
gsi_move_bef‹e
 (
gim∂e_°mt_ôî©‹
 *, gimple_stmt_iterator *);

75 
gsi_move_to_bb_íd
 (
gim∂e_°mt_ôî©‹
 *, 
basic_block
);

76 
gsi_ö£π_⁄_edge
 (
edge
, 
gim∂e
);

77 
gsi_ö£π_£q_⁄_edge
 (
edge
, 
gim∂e_£q
);

78 
basic_block
 
gsi_ö£π_⁄_edge_immedüã
 (
edge
, 
gim∂e
);

79 
basic_block
 
gsi_ö£π_£q_⁄_edge_immedüã
 (
edge
, 
gim∂e_£q
);

80 
gsi_commô_edge_ö£πs
 ();

81 
gsi_commô_⁄e_edge_ö£π
 (
edge
, 
basic_block
 *);

82 
gim∂e_°mt_ôî©‹
 
gsi_°¨t_phis
 (
basic_block
);

86 
ölöe
 
gim∂e_°mt_ôî©‹


87 
	$gsi_°¨t_1
 (
gim∂e_£q
 *
£q
)

89 
gim∂e_°mt_ôî©‹
 
i
;

91 
i
.
±r
 = 
	`gim∂e_£q_fú°
 (*
£q
);

92 
i
.
£q
 = seq;

93 
i
.
bb
 = i.
±r
 ? 
	`gim∂e_bb
 (i.±rË: 
NULL
;

95  
i
;

96 
	}
}

98 
	#gsi_°¨t
(
x
Ë
	`gsi_°¨t_1
 (&(x))

	)

100 
ölöe
 
gim∂e_°mt_ôî©‹


101 
	$gsi_n⁄e
 ()

103 
gim∂e_°mt_ôî©‹
 
i
;

104 
i
.
±r
 = 
NULL
;

105 
i
.
£q
 = 
NULL
;

106 
i
.
bb
 = 
NULL
;

107  
i
;

108 
	}
}

112 
ölöe
 
gim∂e_°mt_ôî©‹


113 
	$gsi_°¨t_bb
 (
basic_block
 
bb
)

115 
gim∂e_°mt_ôî©‹
 
i
;

116 
gim∂e_£q
 *
£q
;

118 
£q
 = 
	`bb_£q_addr
 (
bb
);

119 
i
.
±r
 = 
	`gim∂e_£q_fú°
 (*
£q
);

120 
i
.
£q
 = seq;

121 
i
.
bb
 = bb;

123  
i
;

124 
	}
}

128 
ölöe
 
gim∂e_°mt_ôî©‹


129 
	$gsi_œ°_1
 (
gim∂e_£q
 *
£q
)

131 
gim∂e_°mt_ôî©‹
 
i
;

133 
i
.
±r
 = 
	`gim∂e_£q_œ°
 (*
£q
);

134 
i
.
£q
 = seq;

135 
i
.
bb
 = i.
±r
 ? 
	`gim∂e_bb
 (i.±rË: 
NULL
;

137  
i
;

138 
	}
}

140 
	#gsi_œ°
(
x
Ë
	`gsi_œ°_1
 (&(x))

	)

144 
ölöe
 
gim∂e_°mt_ôî©‹


145 
	$gsi_œ°_bb
 (
basic_block
 
bb
)

147 
gim∂e_°mt_ôî©‹
 
i
;

148 
gim∂e_£q
 *
£q
;

150 
£q
 = 
	`bb_£q_addr
 (
bb
);

151 
i
.
±r
 = 
	`gim∂e_£q_œ°
 (*
£q
);

152 
i
.
£q
 = seq;

153 
i
.
bb
 = bb;

155  
i
;

156 
	}
}

160 
ölöe
 
boﬁ


161 
	$gsi_íd_p
 (
gim∂e_°mt_ôî©‹
 
i
)

163  
i
.
±r
 =
NULL
;

164 
	}
}

168 
ölöe
 
boﬁ


169 
	$gsi_⁄e_bef‹e_íd_p
 (
gim∂e_°mt_ôî©‹
 
i
)

171  
i
.
±r
 !
NULL
 && i.±r->
√xt
 == NULL;

172 
	}
}

176 
ölöe
 

177 
	$gsi_√xt
 (
gim∂e_°mt_ôî©‹
 *
i
)

179 
i
->
±r
 = i->±r->
√xt
;

180 
	}
}

184 
ölöe
 

185 
	$gsi_¥ev
 (
gim∂e_°mt_ôî©‹
 *
i
)

187 
gim∂e
 
¥ev
 = 
i
->
±r
->prev;

188 i‡(
¥ev
->
√xt
)

189 
i
->
±r
 = 
¥ev
;

191 
i
->
±r
 = 
NULL
;

192 
	}
}

196 
ölöe
 
gim∂e


197 
	$gsi_°mt
 (
gim∂e_°mt_ôî©‹
 
i
)

199  
i
.
±r
;

200 
	}
}

205 
ölöe
 
gim∂e_°mt_ôî©‹


206 
	$gsi_a·î_œbñs
 (
basic_block
 
bb
)

208 
gim∂e_°mt_ôî©‹
 
gsi
 = 
	`gsi_°¨t_bb
 (
bb
);

210 !
	`gsi_íd_p
 (
gsi
Ë&& 
	`gim∂e_code
 (
	`gsi_°mt
 (gsi)Ë=
GIMPLE_LABEL
)

211 
	`gsi_√xt
 (&
gsi
);

213  
gsi
;

214 
	}
}

218 
ölöe
 

219 
	$gsi_√xt_n⁄debug
 (
gim∂e_°mt_ôî©‹
 *
i
)

223 
	`gsi_√xt
 (
i
);

225 !
	`gsi_íd_p
 (*
i
Ë&& 
	`is_gim∂e_debug
 (
	`gsi_°mt
 (*i)));

226 
	}
}

230 
ölöe
 

231 
	$gsi_¥ev_n⁄debug
 (
gim∂e_°mt_ôî©‹
 *
i
)

235 
	`gsi_¥ev
 (
i
);

237 !
	`gsi_íd_p
 (*
i
Ë&& 
	`is_gim∂e_debug
 (
	`gsi_°mt
 (*i)));

238 
	}
}

243 
ölöe
 
gim∂e_°mt_ôî©‹


244 
	$gsi_°¨t_n⁄debug_bb
 (
basic_block
 
bb
)

246 
gim∂e_°mt_ôî©‹
 
i
 = 
	`gsi_°¨t_bb
 (
bb
);

248 i‡(!
	`gsi_íd_p
 (
i
Ë&& 
	`is_gim∂e_debug
 (
	`gsi_°mt
 (i)))

249 
	`gsi_√xt_n⁄debug
 (&
i
);

251  
i
;

252 
	}
}

257 
ölöe
 
gim∂e_°mt_ôî©‹


258 
	$gsi_°¨t_n⁄debug_a·î_œbñs_bb
 (
basic_block
 
bb
)

260 
gim∂e_°mt_ôî©‹
 
i
 = 
	`gsi_a·î_œbñs
 (
bb
);

262 i‡(!
	`gsi_íd_p
 (
i
Ë&& 
	`is_gim∂e_debug
 (
	`gsi_°mt
 (i)))

263 
	`gsi_√xt_n⁄debug
 (&
i
);

265  
i
;

266 
	}
}

271 
ölöe
 
gim∂e_°mt_ôî©‹


272 
	$gsi_œ°_n⁄debug_bb
 (
basic_block
 
bb
)

274 
gim∂e_°mt_ôî©‹
 
i
 = 
	`gsi_œ°_bb
 (
bb
);

276 i‡(!
	`gsi_íd_p
 (
i
Ë&& 
	`is_gim∂e_debug
 (
	`gsi_°mt
 (i)))

277 
	`gsi_¥ev_n⁄debug
 (&
i
);

279  
i
;

280 
	}
}

284 
ölöe
 
basic_block


285 
	$gsi_bb
 (
gim∂e_°mt_ôî©‹
 
i
)

287  
i
.
bb
;

288 
	}
}

292 
ölöe
 
gim∂e_£q


293 
	$gsi_£q
 (
gim∂e_°mt_ôî©‹
 
i
)

295  *
i
.
£q
;

296 
	}
}

	@include/gimple-low.h

20 #i‚de‡
GCC_GIMPLE_LOW_H


21 
	#GCC_GIMPLE_LOW_H


	)

23 
boﬁ
 
gim∂e_°mt_may_ÁŒthru
 (
gim∂e
);

24 
boﬁ
 
gim∂e_£q_may_ÁŒthru
 (
gim∂e_£q
);

25 
ªc‹d_v¨s_öto
 (
åì
,Åree);

26 
ªc‹d_v¨s
 (
åì
);

	@include/gimple-pretty-print.h

21 #i‚de‡
GCC_GIMPLE_PRETTY_PRINT_H


22 
	#GCC_GIMPLE_PRETTY_PRINT_H


	)

24 
	~"¥ëty-¥öt.h
"

25 
	~"åì-¥ëty-¥öt.h
"

28 
debug_gim∂e_°mt
 (
gim∂e
);

29 
debug_gim∂e_£q
 (
gim∂e_£q
);

30 
¥öt_gim∂e_£q
 (
FILE
 *, 
gim∂e_£q
, , );

31 
¥öt_gim∂e_°mt
 (
FILE
 *, 
gim∂e
, , );

32 
debug
 (
gim∂e_°©emít_ba£
 &
ªf
);

33 
debug
 (
gim∂e_°©emít_ba£
 *
±r
);

34 
¥öt_gim∂e_ex¥
 (
FILE
 *, 
gim∂e
, , );

35 
µ_gim∂e_°mt_1
 (
¥ëty_¥öãr
 *, 
gim∂e
, , );

36 
gim∂e_dump_bb
 (
FILE
 *, 
basic_block
, , );

37 
gim∂e_dump_bb_f‹_gøph
 (
¥ëty_¥öãr
 *, 
basic_block
);

	@include/gimple-ssa.h

21 #i‚de‡
GCC_GIMPLE_SSA_H


22 
	#GCC_GIMPLE_SSA_H


	)

24 
	~"åì-sß-›î™ds.h
"

29 
GTY
(()Ë
	gtm_ª°¨t_node
 {

30 
gim∂e
 
	g°mt
;

31 
åì
 
	gœbñ_‹_li°
;

37 
GTY
(()Ë
	ggim∂e_df
 {

43 
	gvec
<
	ggim∂e
, 
	gva_gc
> *
	gmodifõd_n‹ëu∫_ˇŒs
;

46 
	gvec
<
	gåì
, 
	gva_gc
> *
	gsß_«mes
;

49 
åì
 
	gv›
;

52 
±_sﬁuti⁄
 
	gesˇ≥d
;

56 
poöãr_m≠_t
 * 
GTY
((
skù
(""))Ë
	gde˛s_to_poöãrs
;

59 
	gvec
<
	gåì
, 
	gva_gc
> *
	g‰ì_sß«mes
;

65 
hèb_t
 
GTY
((
∑øm_is
 (
åì_node
))Ë
	gdeÁu…_defs
;

68 
	gsß_ª«mög_√eded
 : 1;

71 
	gª«me_v›s
 : 1;

74 
	gö_sß_p
 : 1;

77 
	gùa_±a
 : 1;

79 
sß_›î™ds
 
	gsß_›î™ds
;

83 
hèb_t
 
GTY
 ((
∑øm_is
 (
tm_ª°¨t_node
))Ë
	gtm_ª°¨t
;

91 
ölöe
 
boﬁ


92 
	$gim∂e_ö_sß_p
 (c⁄° 
fun˘i⁄
 *
fun
)

94  
fun
 && fun->
gim∂e_df
 && fun->gim∂e_df->
ö_sß_p
;

95 
	}
}

98 
ölöe
 
åì


99 
	$gim∂e_v›
 (c⁄° 
fun˘i⁄
 *
fun
)

101 
	`gcc_checkög_as£π
 (
fun
 && fun->
gim∂e_df
);

102  
fun
->
gim∂e_df
->
v›
;

103 
	}
}

107 
ölöe
 
u£_›î™d_p


108 
	$gim∂e_vu£_›
 (
c⁄°_gim∂e
 
g
)

110 
u£_›ty≥_d
 *
›s
;

111 c⁄° 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

112 
dyn_ˇ°
 <c⁄° 
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

113 i‡(!
mem_›s_°mt
)

114  
NULL_USE_OPERAND_P
;

115 
›s
 = 
mem_›s_°mt
->
u£_›s
;

116 i‡(
›s


117 && 
	`USE_OP_PTR
 (
›s
)->
u£
 =&
mem_›s_°mt
->
vu£
)

118  
	`USE_OP_PTR
 (
›s
);

119  
NULL_USE_OPERAND_P
;

120 
	}
}

124 
ölöe
 
def_›î™d_p


125 
	$gim∂e_vdef_›
 (
gim∂e
 
g
)

127 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

128 
dyn_ˇ°
 <
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

129 i‡(!
mem_›s_°mt
)

130  
NULL_DEF_OPERAND_P
;

131 i‡(
mem_›s_°mt
->
vdef
)

132  &
mem_›s_°mt
->
vdef
;

133  
NULL_DEF_OPERAND_P
;

134 
	}
}

138 
ölöe
 

139 
	$upd©e_°mt
 (
gim∂e
 
s
)

141 i‡(
	`gim∂e_has_›s
 (
s
))

143 
	`gim∂e_£t_modifõd
 (
s
, 
åue
);

144 
	`upd©e_°mt_›î™ds
 (
cfun
, 
s
);

146 
	}
}

150 
ölöe
 

151 
	$upd©e_°mt_if_modifõd
 (
gim∂e
 
s
)

153 i‡(
	`gim∂e_modifõd_p
 (
s
))

154 
	`upd©e_°mt_›î™ds
 (
cfun
, 
s
);

155 
	}
}

159 
ölöe
 

160 
	$upd©e_°mt_‚
 (
fun˘i⁄
 *
‚
, 
gim∂e
 
s
)

162 i‡(
	`gim∂e_has_›s
 (
s
))

164 
	`gim∂e_£t_modifõd
 (
s
, 
åue
);

165 
	`upd©e_°mt_›î™ds
 (
‚
, 
s
);

167 
	}
}

	@include/gimple-walk.h

20 #i‚de‡
GCC_GIMPLE_WALK_H


21 
	#GCC_GIMPLE_WALK_H


	)

27 
	swÆk_°mt_öfo


30 
gim∂e_°mt_ôî©‹
 
	mgsi
;

34 *
	möfo
;

39 
poöãr_£t_t
 *
	mp£t
;

45 
åì
 
	mˇŒback_ªsu…
;

59 
BOOL_BITFIELD
 
	mvÆ_⁄ly
 : 1;

62 
BOOL_BITFIELD
 
	mis_lhs
 : 1;

66 
BOOL_BITFIELD
 
	mch™ged
 : 1;

69 
BOOL_BITFIELD
 
	mw™t_loˇti⁄s
 : 1;

72 
BOOL_BITFIELD
 
	mªmoved_°mt
 : 1;

82 
	$åì
 (*
	twÆk_°mt_‚
Ë(
	tgim∂e_°mt_ôî©‹
 *, 
	tboﬁ
 *,

83 
	twÆk_°mt_öfo
 *);

85 
gim∂e
 
	`wÆk_gim∂e_£q_mod
 (
gim∂e_£q
 *, 
wÆk_°mt_‚
, 
wÆk_åì_‚
,

86 
wÆk_°mt_öfo
 *);

87 
gim∂e
 
	`wÆk_gim∂e_£q
 (
gim∂e_£q
, 
wÆk_°mt_‚
, 
wÆk_åì_‚
,

88 
wÆk_°mt_öfo
 *);

89 
åì
 
	`wÆk_gim∂e_›
 (
gim∂e
, 
wÆk_åì_‚
, 
wÆk_°mt_öfo
 *);

90 
åì
 
	`wÆk_gim∂e_°mt
 (
gim∂e_°mt_ôî©‹
 *, 
wÆk_°mt_‚
,

91 
wÆk_åì_‚
, 
wÆk_°mt_öfo
 *);

92 
	$boﬁ
 (*
	twÆk_°mt_lﬂd_°‹e_addr_‚
Ë(
	tgim∂e
, 
	tåì
,Åree, *);

93 
boﬁ
 
	`wÆk_°mt_lﬂd_°‹e_addr_›s
 (
gim∂e
, *,

94 
wÆk_°mt_lﬂd_°‹e_addr_‚
,

95 
wÆk_°mt_lﬂd_°‹e_addr_‚
,

96 
wÆk_°mt_lﬂd_°‹e_addr_‚
);

97 
boﬁ
 
	`wÆk_°mt_lﬂd_°‹e_›s
 (
gim∂e
, *,

98 
wÆk_°mt_lﬂd_°‹e_addr_‚
,

99 
wÆk_°mt_lﬂd_°‹e_addr_‚
);

	@include/gimple.h

22 #i‚de‡
GCC_GIMPLE_H


23 
	#GCC_GIMPLE_H


	)

25 
gim∂e
 
	tgim∂e_£q_node
;

29 
	gvec
<
	tgim∂e
> 
	tgim∂e_vec
;

31 
	egim∂e_code
 {

32 
	#DEFGSCODE
(
SYM
, 
STRING
, 
STRUCT
ËSYM,

	)

33 
	~"gim∂e.def
"

34 #unde‡
DEFGSCODE


35 
	mLAST_AND_UNUSED_GIMPLE_CODE


38 c⁄° *c⁄° 
gim∂e_code_«me
[];

39 c⁄° 
gim∂e_rhs_˛ass_èbÀ
[];

42 #i‡
deföed
 
ENABLE_GIMPLE_CHECKING


43 
	#gcc_gim∂e_checkög_as£π
(
EXPR
Ë
	`gcc_as£π
 (EXPR)

	)

44 
gim∂e_check_Áûed
 (
c⁄°_gim∂e
, const *, , \

45 c⁄° *, 
gim∂e_code
, \

46 
åì_code
Ë
ATTRIBUTE_NORETURN
;

48 
	#GIMPLE_CHECK
(
GS
, 
CODE
) \

50 
c⁄°_gim∂e
 
__gs
 = (
GS
); \

51 i‡(
	`gim∂e_code
 (
__gs
Ë!(
CODE
)) \

52 
	`gim∂e_check_Áûed
 (
__gs
, 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

53 (
CODE
), 
ERROR_MARK
); \

54 } 0)

	)

56 
	#gcc_gim∂e_checkög_as£π
(
EXPR
Ë(()(0 && (EXPR)))

	)

57 
	#GIMPLE_CHECK
(
GS
, 
CODE
Ë()0

	)

62 
	egim∂e_rhs_˛ass


64 
	mGIMPLE_INVALID_RHS
,

65 
	mGIMPLE_TERNARY_RHS
,

66 
	mGIMPLE_BINARY_RHS
,

67 
	mGIMPLE_UNARY_RHS
,

68 
	mGIMPLE_SINGLE_RHS


83 
	egf_mask
 {

84 
	mGF_ASM_INPUT
 = 1 << 0,

85 
	mGF_ASM_VOLATILE
 = 1 << 1,

86 
	mGF_CALL_FROM_THUNK
 = 1 << 0,

87 
	mGF_CALL_RETURN_SLOT_OPT
 = 1 << 1,

88 
	mGF_CALL_TAILCALL
 = 1 << 2,

89 
	mGF_CALL_VA_ARG_PACK
 = 1 << 3,

90 
	mGF_CALL_NOTHROW
 = 1 << 4,

91 
	mGF_CALL_ALLOCA_FOR_VAR
 = 1 << 5,

92 
	mGF_CALL_INTERNAL
 = 1 << 6,

93 
	mGF_CALL_CTRL_ALTERING
 = 1 << 7,

94 
	mGF_OMP_PARALLEL_COMBINED
 = 1 << 0,

95 
	mGF_OMP_FOR_KIND_MASK
 = 3 << 0,

96 
	mGF_OMP_FOR_KIND_FOR
 = 0 << 0,

97 
	mGF_OMP_FOR_KIND_DISTRIBUTE
 = 1 << 0,

98 
	mGF_OMP_FOR_KIND_SIMD
 = 2 << 0,

99 
	mGF_OMP_FOR_KIND_CILKSIMD
 = 3 << 0,

100 
	mGF_OMP_FOR_COMBINED
 = 1 << 2,

101 
	mGF_OMP_FOR_COMBINED_INTO
 = 1 << 3,

102 
	mGF_OMP_TARGET_KIND_MASK
 = 3 << 0,

103 
	mGF_OMP_TARGET_KIND_REGION
 = 0 << 0,

104 
	mGF_OMP_TARGET_KIND_DATA
 = 1 << 0,

105 
	mGF_OMP_TARGET_KIND_UPDATE
 = 2 << 0,

111 
	mGF_OMP_RETURN_NOWAIT
 = 1 << 0,

113 
	mGF_OMP_SECTION_LAST
 = 1 << 0,

114 
	mGF_OMP_ATOMIC_NEED_VALUE
 = 1 << 0,

115 
	mGF_OMP_ATOMIC_SEQ_CST
 = 1 << 1,

116 
	mGF_PREDICT_TAKEN
 = 1 << 15

123 
	egim∂e_debug_subcode
 {

124 
	mGIMPLE_DEBUG_BIND
 = 0,

125 
	mGIMPLE_DEBUG_SOURCE_BIND
 = 1

130 
	e∂f_mask
 {

131 
	mGF_PLF_1
 = 1 << 0,

132 
	mGF_PLF_2
 = 1 << 1

138 
GTY
((
desc
 ("gim∂e_°©emít_°ru˘uª (&%h)"), 
èg
 ("GSS_BASE"),

139 
chaö_√xt
 ("%h.√xt"), 
v¨übÀ_size
))

140 
	ggim∂e_°©emít_ba£


144 
ENUM_BITFIELD
(
gim∂e_code
Ë
	gcode
 : 8;

147 
	gno_w¨nög
 : 1;

151 
	gvisôed
 : 1;

154 
	gn⁄ãmp‹Æ_move
 : 1;

161 
	g∂f
 : 2;

165 
	gmodifõd
 : 1;

168 
	ghas_vﬁ©ûe_›s
 : 1;

171 
	g∑d
 : 1;

177 
	gsubcode
 : 16;

182 
	guid
;

186 
loˇti⁄_t
 
	gloˇti⁄
;

189 
	gnum_›s
;

193 
basic_block
 
	gbb
;

201 
gim∂e
 
	g√xt
;

202 
gim∂e
 
GTY
((
skù
)Ë
	g¥ev
;

209 
GTY
(())

210 
	ggim∂e_°©emít_wôh_›s_ba£
 : 
public
 
gim∂e_°©emít_ba£


219 
u£_›ty≥_d
 
GTY
((
skù
 (""))Ë*
u£_›s
;

225 
GTY
((
èg
("GSS_WITH_OPS")))

226 
	ggim∂e_°©emít_wôh_›s
 : 
public
 
gim∂e_°©emít_wôh_›s_ba£


234 
åì
 
GTY
((
Àngth
 ("%h.num_›s"))Ë
›
[1];

240 
GTY
((
èg
("GSS_WITH_MEM_OPS_BASE")))

241 
	ggim∂e_°©emít_wôh_mem‹y_›s_ba£
 : 
public
 
gim∂e_°©emít_wôh_›s_ba£


248 
åì
 
GTY
((
skù
 (""))Ë
vdef
;

249 
åì
 
GTY
((
skù
 (""))Ë
	gvu£
;

255 
GTY
((
èg
("GSS_WITH_MEM_OPS")))

256 
	ggim∂e_°©emít_wôh_mem‹y_›s
 :

257 
public
 
gim∂e_°©emít_wôh_mem‹y_›s_ba£


265 
åì
 
GTY
((
Àngth
 ("%h.num_›s"))Ë
›
[1];

271 
GTY
((
èg
("GSS_CALL")))

272 
	ggim∂e_°©emít_ˇŒ
 : 
public
 
gim∂e_°©emít_wôh_mem‹y_›s_ba£


277 
±_sﬁuti⁄
 
ˇŒ_u£d
;

278 
±_sﬁuti⁄
 
	gˇŒ_˛obbîed
;

281 
GTY
 ((
desc
 ("%1.subcode & GF_CALL_INTERNAL"))) {

282 
åì
 
GTY
 ((
èg
 ("0"))Ë
	g‚ty≥
;

283 
öã∫Æ_‚
 
GTY
 ((
èg
 ("GF_CALL_INTERNAL"))Ë
	göã∫Æ_‚
;

284 } 
	gu
;

290 
åì
 
GTY
((
Àngth
 ("%h.num_›s"))Ë
	g›
[1];

296 
GTY
((
èg
("GSS_OMP")))

297 
	ggim∂e_°©emít_omp
 : 
public
 
gim∂e_°©emít_ba£


302 
gim∂e_£q
 
body
;

308 
GTY
((
èg
("GSS_BIND")))

309 
	ggim∂e_°©emít_böd
 : 
public
 
gim∂e_°©emít_ba£


315 
åì
 
v¨s
;

323 
åì
 
	gblock
;

326 
gim∂e_£q
 
	gbody
;

332 
GTY
((
èg
("GSS_CATCH")))

333 
	ggim∂e_°©emít_ˇtch
 : 
public
 
gim∂e_°©emít_ba£


338 
åì
 
ty≥s
;

341 
gim∂e_£q
 
	gh™dÀr
;

347 
GTY
((
èg
("GSS_EH_FILTER")))

348 
	ggim∂e_°©emít_eh_fûãr
 : 
public
 
gim∂e_°©emít_ba£


354 
åì
 
ty≥s
;

358 
gim∂e_£q
 
	gÁûuª
;

363 
GTY
((
èg
("GSS_EH_ELSE")))

364 
	ggim∂e_°©emít_eh_ñ£
 : 
public
 
gim∂e_°©emít_ba£


369 
gim∂e_£q
 
n_body
, 
	ge_body
;

374 
GTY
((
èg
("GSS_EH_MNT")))

375 
	ggim∂e_°©emít_eh_m¡
 : 
public
 
gim∂e_°©emít_ba£


380 
åì
 
‚de˛
;

385 
GTY
((
èg
("GSS_PHI")))

386 
	ggim∂e_°©emít_phi
 : 
public
 
gim∂e_°©emít_ba£


391 
ˇ∑côy
;

392 
	g«rgs
;

395 
åì
 
	gªsu…
;

398 
phi_¨g_d
 
GTY
 ((
Àngth
 ("%h.«rgs"))Ë
	g¨gs
[1];

404 
GTY
((
èg
("GSS_EH_CTRL")))

405 
	ggim∂e_°©emít_eh_˘æ
 : 
public
 
gim∂e_°©emít_ba£


411 
ªgi⁄
;

414 
GTY
((
èg
("GSS_EH_CTRL")))

415 
	ggim∂e_°©emít_ªsx
 : 
public
 
gim∂e_°©emít_eh_˘æ


421 
GTY
((
èg
("GSS_EH_CTRL")))

422 
	ggim∂e_°©emít_eh_di•©ch
 : 
public
 
gim∂e_°©emít_eh_˘æ


431 
GTY
((
èg
("GSS_TRY")))

432 
	ggim∂e_°©emít_åy
 : 
public
 
gim∂e_°©emít_ba£


438 
gim∂e_£q
 
evÆ
;

442 
gim∂e_£q
 
	g˛ónup
;

446 
	egim∂e_åy_Êags


449 
	mGIMPLE_TRY_CATCH
 = 1 << 0,

452 
	mGIMPLE_TRY_FINALLY
 = 1 << 1,

453 
	mGIMPLE_TRY_KIND
 = 
GIMPLE_TRY_CATCH
 | 
GIMPLE_TRY_FINALLY
,

456 
	mGIMPLE_TRY_CATCH_IS_CLEANUP
 = 1 << 2

461 
GTY
((
èg
("GSS_WCE")))

462 
	ggim∂e_°©emít_w˚
 : 
public
 
gim∂e_°©emít_ba£


473 
gim∂e_£q
 
˛ónup
;

479 
GTY
((
èg
("GSS_ASM")))

480 
	ggim∂e_°©emít_asm
 : 
public
 
gim∂e_°©emít_wôh_mem‹y_›s_ba£


486 c⁄° *
°rög
;

490 
	gni
;

491 
	gno
;

492 
	gnc
;

493 
	g∆
;

499 
åì
 
GTY
((
Àngth
 ("%h.num_›s"))Ë
	g›
[1];

504 
GTY
((
èg
("GSS_OMP_CRITICAL")))

505 
	ggim∂e_°©emít_omp_¸ôiˇl
 : 
public
 
gim∂e_°©emít_omp


511 
åì
 
«me
;

515 
GTY
(()Ë
	ggim∂e_omp_f‹_ôî
 {

517 
åì_code
 
	gc⁄d
;

520 
åì
 
	gödex
;

523 
åì
 
	göôül
;

526 
åì
 
	gföÆ
;

529 
åì
 
	gö¸
;

534 
GTY
((
èg
("GSS_OMP_FOR")))

535 
	ggim∂e_°©emít_omp_f‹
 : 
public
 
gim∂e_°©emít_omp


540 
åì
 
˛au£s
;

544 
size_t
 
	gcﬁœp£
;

547 
gim∂e_omp_f‹_ôî
 * 
GTY
((
Àngth
 ("%h.cﬁœp£"))Ë
	gôî
;

551 
gim∂e_£q
 
	g¥e_body
;

556 
GTY
((
èg
("GSS_OMP_PARALLEL_LAYOUT")))

557 
	ggim∂e_°©emít_omp_∑øŒñ_œyout
 : 
public
 
gim∂e_°©emít_omp


563 
åì
 
˛au£s
;

567 
åì
 
	gchûd_‚
;

571 
åì
 
	gd©a_¨g
;

575 
GTY
((
èg
("GSS_OMP_PARALLEL_LAYOUT")))

576 
	ggim∂e_°©emít_omp_èskªg
 : 
public
 
gim∂e_°©emít_omp_∑øŒñ_œyout


585 
GTY
((
èg
("GSS_OMP_PARALLEL_LAYOUT")))

586 
	ggim∂e_°©emít_omp_∑øŒñ
 : 
public
 
gim∂e_°©emít_omp_èskªg


592 
GTY
((
èg
("GSS_OMP_PARALLEL_LAYOUT")))

593 
	ggim∂e_°©emít_omp_èrgë
 : 
public
 
gim∂e_°©emít_omp_∑øŒñ_œyout


601 
GTY
((
èg
("GSS_OMP_TASK")))

602 
	ggim∂e_°©emít_omp_èsk
 : 
public
 
gim∂e_°©emít_omp_èskªg


608 
åì
 
c›y_‚
;

612 
åì
 
	g¨g_size
;

613 
åì
 
	g¨g_Æign
;

623 
GTY
((
èg
("GSS_OMP_SECTIONS")))

624 
	ggim∂e_°©emít_omp_£˘i⁄s
 : 
public
 
gim∂e_°©emít_omp


629 
åì
 
˛au£s
;

634 
åì
 
	gc⁄åﬁ
;

642 
GTY
((
èg
("GSS_OMP_CONTINUE")))

643 
	ggim∂e_°©emít_omp_c⁄töue
 : 
public
 
gim∂e_°©emít_ba£


648 
åì
 
c⁄åﬁ_def
;

651 
åì
 
	gc⁄åﬁ_u£
;

656 
GTY
((
èg
("GSS_OMP_SINGLE_LAYOUT")))

657 
	ggim∂e_°©emít_omp_sögÀ_œyout
 : 
public
 
gim∂e_°©emít_omp


662 
åì
 
˛au£s
;

665 
GTY
((
èg
("GSS_OMP_SINGLE_LAYOUT")))

666 
	ggim∂e_°©emít_omp_sögÀ
 : 
public
 
gim∂e_°©emít_omp_sögÀ_œyout


672 
GTY
((
èg
("GSS_OMP_SINGLE_LAYOUT")))

673 
	ggim∂e_°©emít_omp_ãams
 : 
public
 
gim∂e_°©emít_omp_sögÀ_œyout


684 
GTY
((
èg
("GSS_OMP_ATOMIC_LOAD")))

685 
	ggim∂e_°©emít_omp_©omic_lﬂd
 : 
public
 
gim∂e_°©emít_ba£


690 
åì
 
rhs
, 
	glhs
;

696 
GTY
((
èg
("GSS_OMP_ATOMIC_STORE_LAYOUT")))

697 
	ggim∂e_°©emít_omp_©omic_°‹e_œyout
 : 
public
 
gim∂e_°©emít_ba£


702 
åì
 
vÆ
;

705 
GTY
((
èg
("GSS_OMP_ATOMIC_STORE_LAYOUT")))

706 
	ggim∂e_°©emít_omp_©omic_°‹e
 :

707 
public
 
gim∂e_°©emít_omp_©omic_°‹e_œyout


713 
GTY
((
èg
("GSS_OMP_ATOMIC_STORE_LAYOUT")))

714 
	ggim∂e_°©emít_omp_ªtu∫
 :

715 
public
 
gim∂e_°©emít_omp_©omic_°‹e_œyout


727 
	#GTMA_IS_OUTER
 (1u << 0)

	)

728 
	#GTMA_IS_RELAXED
 (1u << 1)

	)

729 
	#GTMA_DECLARATION_MASK
 (
GTMA_IS_OUTER
 | 
GTMA_IS_RELAXED
)

	)

732 
	#GTMA_HAVE_ABORT
 (1u << 2)

	)

734 
	#GTMA_HAVE_LOAD
 (1u << 3)

	)

735 
	#GTMA_HAVE_STORE
 (1u << 4)

	)

737 
	#GTMA_MAY_ENTER_IRREVOCABLE
 (1u << 5)

	)

744 
	#GTMA_DOES_GO_IRREVOCABLE
 (1u << 6)

	)

747 
	#GTMA_HAS_NO_INSTRUMENTATION
 (1u << 7)

	)

749 
GTY
((
èg
("GSS_TRANSACTION")))

750 
	ggim∂e_°©emít_å™ß˘i⁄
 : 
public
 
gim∂e_°©emít_wôh_mem‹y_›s_ba£


755 
gim∂e_£q
 
body
;

758 
åì
 
	gœbñ
;

761 
	#DEFGSSTRUCT
(
SYM
, 
STRUCT
, 
HAS_TREE_OP
ËSYM,

	)

762 
	egim∂e_°©emít_°ru˘uª_íum
 {

763 
	~"gs°ru˘.def
"

764 
	mLAST_GSS_ENUM


766 #unde‡
DEFGSSTRUCT


768 
	gãm∂©e
 <>

769 
	gãm∂©e
 <>

770 
ölöe
 
boﬁ


771 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_asm
>::
	$ã°
 (
gim∂e
 
gs
)

773  
gs
->
code
 =
GIMPLE_ASM
;

774 
	}
}

776 
	gãm∂©e
 <>

777 
	gãm∂©e
 <>

778 
ölöe
 
boﬁ


779 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_böd
>::
	$ã°
 (
gim∂e
 
gs
)

781  
gs
->
code
 =
GIMPLE_BIND
;

782 
	}
}

784 
	gãm∂©e
 <>

785 
	gãm∂©e
 <>

786 
ölöe
 
boﬁ


787 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_ˇŒ
>::
	$ã°
 (
gim∂e
 
gs
)

789  
gs
->
code
 =
GIMPLE_CALL
;

790 
	}
}

792 
	gãm∂©e
 <>

793 
	gãm∂©e
 <>

794 
ölöe
 
boﬁ


795 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_ˇtch
>::
	$ã°
 (
gim∂e
 
gs
)

797  
gs
->
code
 =
GIMPLE_CATCH
;

798 
	}
}

800 
	gãm∂©e
 <>

801 
	gãm∂©e
 <>

802 
ölöe
 
boﬁ


803 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_ªsx
>::
	$ã°
 (
gim∂e
 
gs
)

805  
gs
->
code
 =
GIMPLE_RESX
;

806 
	}
}

808 
	gãm∂©e
 <>

809 
	gãm∂©e
 <>

810 
ölöe
 
boﬁ


811 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_eh_di•©ch
>::
	$ã°
 (
gim∂e
 
gs
)

813  
gs
->
code
 =
GIMPLE_EH_DISPATCH
;

814 
	}
}

816 
	gãm∂©e
 <>

817 
	gãm∂©e
 <>

818 
ölöe
 
boﬁ


819 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_eh_ñ£
>::
	$ã°
 (
gim∂e
 
gs
)

821  
gs
->
code
 =
GIMPLE_EH_ELSE
;

822 
	}
}

824 
	gãm∂©e
 <>

825 
	gãm∂©e
 <>

826 
ölöe
 
boﬁ


827 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_eh_fûãr
>::
	$ã°
 (
gim∂e
 
gs
)

829  
gs
->
code
 =
GIMPLE_EH_FILTER
;

830 
	}
}

832 
	gãm∂©e
 <>

833 
	gãm∂©e
 <>

834 
ölöe
 
boﬁ


835 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_eh_m¡
>::
	$ã°
 (
gim∂e
 
gs
)

837  
gs
->
code
 =
GIMPLE_EH_MUST_NOT_THROW
;

838 
	}
}

840 
	gãm∂©e
 <>

841 
	gãm∂©e
 <>

842 
ölöe
 
boﬁ


843 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_©omic_lﬂd
>::
	$ã°
 (
gim∂e
 
gs
)

845  
gs
->
code
 =
GIMPLE_OMP_ATOMIC_LOAD
;

846 
	}
}

848 
	gãm∂©e
 <>

849 
	gãm∂©e
 <>

850 
ölöe
 
boﬁ


851 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_©omic_°‹e
>::
	$ã°
 (
gim∂e
 
gs
)

853  
gs
->
code
 =
GIMPLE_OMP_ATOMIC_STORE
;

854 
	}
}

856 
	gãm∂©e
 <>

857 
	gãm∂©e
 <>

858 
ölöe
 
boﬁ


859 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_ªtu∫
>::
	$ã°
 (
gim∂e
 
gs
)

861  
gs
->
code
 =
GIMPLE_OMP_RETURN
;

862 
	}
}

864 
	gãm∂©e
 <>

865 
	gãm∂©e
 <>

866 
ölöe
 
boﬁ


867 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_c⁄töue
>::
	$ã°
 (
gim∂e
 
gs
)

869  
gs
->
code
 =
GIMPLE_OMP_CONTINUE
;

870 
	}
}

872 
	gãm∂©e
 <>

873 
	gãm∂©e
 <>

874 
ölöe
 
boﬁ


875 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_¸ôiˇl
>::
	$ã°
 (
gim∂e
 
gs
)

877  
gs
->
code
 =
GIMPLE_OMP_CRITICAL
;

878 
	}
}

880 
	gãm∂©e
 <>

881 
	gãm∂©e
 <>

882 
ölöe
 
boﬁ


883 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_f‹
>::
	$ã°
 (
gim∂e
 
gs
)

885  
gs
->
code
 =
GIMPLE_OMP_FOR
;

886 
	}
}

888 
	gãm∂©e
 <>

889 
	gãm∂©e
 <>

890 
ölöe
 
boﬁ


891 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_èskªg
>::
	$ã°
 (
gim∂e
 
gs
)

893  
gs
->
code
 =
GIMPLE_OMP_PARALLEL
 || gs->codê=
GIMPLE_OMP_TASK
;

894 
	}
}

896 
	gãm∂©e
 <>

897 
	gãm∂©e
 <>

898 
ölöe
 
boﬁ


899 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_∑øŒñ
>::
	$ã°
 (
gim∂e
 
gs
)

901  
gs
->
code
 =
GIMPLE_OMP_PARALLEL
;

902 
	}
}

904 
	gãm∂©e
 <>

905 
	gãm∂©e
 <>

906 
ölöe
 
boﬁ


907 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_èrgë
>::
	$ã°
 (
gim∂e
 
gs
)

909  
gs
->
code
 =
GIMPLE_OMP_TARGET
;

910 
	}
}

912 
	gãm∂©e
 <>

913 
	gãm∂©e
 <>

914 
ölöe
 
boﬁ


915 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_£˘i⁄s
>::
	$ã°
 (
gim∂e
 
gs
)

917  
gs
->
code
 =
GIMPLE_OMP_SECTIONS
;

918 
	}
}

920 
	gãm∂©e
 <>

921 
	gãm∂©e
 <>

922 
ölöe
 
boﬁ


923 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_sögÀ
>::
	$ã°
 (
gim∂e
 
gs
)

925  
gs
->
code
 =
GIMPLE_OMP_SINGLE
;

926 
	}
}

928 
	gãm∂©e
 <>

929 
	gãm∂©e
 <>

930 
ölöe
 
boﬁ


931 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_ãams
>::
	$ã°
 (
gim∂e
 
gs
)

933  
gs
->
code
 =
GIMPLE_OMP_TEAMS
;

934 
	}
}

936 
	gãm∂©e
 <>

937 
	gãm∂©e
 <>

938 
ölöe
 
boﬁ


939 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_omp_èsk
>::
	$ã°
 (
gim∂e
 
gs
)

941  
gs
->
code
 =
GIMPLE_OMP_TASK
;

942 
	}
}

944 
	gãm∂©e
 <>

945 
	gãm∂©e
 <>

946 
ölöe
 
boﬁ


947 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_phi
>::
	$ã°
 (
gim∂e
 
gs
)

949  
gs
->
code
 =
GIMPLE_PHI
;

950 
	}
}

952 
	gãm∂©e
 <>

953 
	gãm∂©e
 <>

954 
ölöe
 
boﬁ


955 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_å™ß˘i⁄
>::
	$ã°
 (
gim∂e
 
gs
)

957  
gs
->
code
 =
GIMPLE_TRANSACTION
;

958 
	}
}

960 
	gãm∂©e
 <>

961 
	gãm∂©e
 <>

962 
ölöe
 
boﬁ


963 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_åy
>::
	$ã°
 (
gim∂e
 
gs
)

965  
gs
->
code
 =
GIMPLE_TRY
;

966 
	}
}

968 
	gãm∂©e
 <>

969 
	gãm∂©e
 <>

970 
ölöe
 
boﬁ


971 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_w˚
>::
	$ã°
 (
gim∂e
 
gs
)

973  
gs
->
code
 =
GIMPLE_WITH_CLEANUP_EXPR
;

974 
	}
}

976 
	gãm∂©e
 <>

977 
	gãm∂©e
 <>

978 
ölöe
 
boﬁ


979 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_asm
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

981  
gs
->
code
 =
GIMPLE_ASM
;

982 
	}
}

984 
	gãm∂©e
 <>

985 
	gãm∂©e
 <>

986 
ölöe
 
boﬁ


987 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_böd
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

989  
gs
->
code
 =
GIMPLE_BIND
;

990 
	}
}

992 
	gãm∂©e
 <>

993 
	gãm∂©e
 <>

994 
ölöe
 
boﬁ


995 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_ˇŒ
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

997  
gs
->
code
 =
GIMPLE_CALL
;

998 
	}
}

1000 
	gãm∂©e
 <>

1001 
	gãm∂©e
 <>

1002 
ölöe
 
boﬁ


1003 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_ˇtch
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1005  
gs
->
code
 =
GIMPLE_CATCH
;

1006 
	}
}

1008 
	gãm∂©e
 <>

1009 
	gãm∂©e
 <>

1010 
ölöe
 
boﬁ


1011 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_ªsx
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1013  
gs
->
code
 =
GIMPLE_RESX
;

1014 
	}
}

1016 
	gãm∂©e
 <>

1017 
	gãm∂©e
 <>

1018 
ölöe
 
boﬁ


1019 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_eh_di•©ch
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1021  
gs
->
code
 =
GIMPLE_EH_DISPATCH
;

1022 
	}
}

1024 
	gãm∂©e
 <>

1025 
	gãm∂©e
 <>

1026 
ölöe
 
boﬁ


1027 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_eh_fûãr
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1029  
gs
->
code
 =
GIMPLE_EH_FILTER
;

1030 
	}
}

1032 
	gãm∂©e
 <>

1033 
	gãm∂©e
 <>

1034 
ölöe
 
boﬁ


1035 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_©omic_lﬂd
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1037  
gs
->
code
 =
GIMPLE_OMP_ATOMIC_LOAD
;

1038 
	}
}

1040 
	gãm∂©e
 <>

1041 
	gãm∂©e
 <>

1042 
ölöe
 
boﬁ


1043 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_©omic_°‹e
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1045  
gs
->
code
 =
GIMPLE_OMP_ATOMIC_STORE
;

1046 
	}
}

1048 
	gãm∂©e
 <>

1049 
	gãm∂©e
 <>

1050 
ölöe
 
boﬁ


1051 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_ªtu∫
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1053  
gs
->
code
 =
GIMPLE_OMP_RETURN
;

1054 
	}
}

1056 
	gãm∂©e
 <>

1057 
	gãm∂©e
 <>

1058 
ölöe
 
boﬁ


1059 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_c⁄töue
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1061  
gs
->
code
 =
GIMPLE_OMP_CONTINUE
;

1062 
	}
}

1064 
	gãm∂©e
 <>

1065 
	gãm∂©e
 <>

1066 
ölöe
 
boﬁ


1067 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_¸ôiˇl
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1069  
gs
->
code
 =
GIMPLE_OMP_CRITICAL
;

1070 
	}
}

1072 
	gãm∂©e
 <>

1073 
	gãm∂©e
 <>

1074 
ölöe
 
boﬁ


1075 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_f‹
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1077  
gs
->
code
 =
GIMPLE_OMP_FOR
;

1078 
	}
}

1080 
	gãm∂©e
 <>

1081 
	gãm∂©e
 <>

1082 
ölöe
 
boﬁ


1083 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_èskªg
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1085  
gs
->
code
 =
GIMPLE_OMP_PARALLEL
 || gs->codê=
GIMPLE_OMP_TASK
;

1086 
	}
}

1088 
	gãm∂©e
 <>

1089 
	gãm∂©e
 <>

1090 
ölöe
 
boﬁ


1091 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_∑øŒñ
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1093  
gs
->
code
 =
GIMPLE_OMP_PARALLEL
;

1094 
	}
}

1096 
	gãm∂©e
 <>

1097 
	gãm∂©e
 <>

1098 
ölöe
 
boﬁ


1099 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_èrgë
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1101  
gs
->
code
 =
GIMPLE_OMP_TARGET
;

1102 
	}
}

1104 
	gãm∂©e
 <>

1105 
	gãm∂©e
 <>

1106 
ölöe
 
boﬁ


1107 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_£˘i⁄s
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1109  
gs
->
code
 =
GIMPLE_OMP_SECTIONS
;

1110 
	}
}

1112 
	gãm∂©e
 <>

1113 
	gãm∂©e
 <>

1114 
ölöe
 
boﬁ


1115 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_sögÀ
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1117  
gs
->
code
 =
GIMPLE_OMP_SINGLE
;

1118 
	}
}

1120 
	gãm∂©e
 <>

1121 
	gãm∂©e
 <>

1122 
ölöe
 
boﬁ


1123 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_ãams
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1125  
gs
->
code
 =
GIMPLE_OMP_TEAMS
;

1126 
	}
}

1128 
	gãm∂©e
 <>

1129 
	gãm∂©e
 <>

1130 
ölöe
 
boﬁ


1131 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_omp_èsk
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1133  
gs
->
code
 =
GIMPLE_OMP_TASK
;

1134 
	}
}

1136 
	gãm∂©e
 <>

1137 
	gãm∂©e
 <>

1138 
ölöe
 
boﬁ


1139 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_phi
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1141  
gs
->
code
 =
GIMPLE_PHI
;

1142 
	}
}

1144 
	gãm∂©e
 <>

1145 
	gãm∂©e
 <>

1146 
ölöe
 
boﬁ


1147 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_å™ß˘i⁄
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1149  
gs
->
code
 =
GIMPLE_TRANSACTION
;

1150 
	}
}

1154 
size_t
 c⁄° 
gim∂e_›s_off£t_
[];

1157 
gim∂e_°©emít_°ru˘uª_íum
 c⁄° 
gss_f‹_code_
[];

1161 
gim∂e
 
cuºíéy_ex∑ndög_gim∂e_°mt
;

1163 
	#gim∂e_Æloc
(
c
, 
n
Ë
	`gim∂e_Æloc_°©
 (c,Ç 
MEM_STAT_INFO
)

	)

1164 
gim∂e
 
gim∂e_Æloc_°©
 (
gim∂e_code
, 
MEM_STAT_DECL
);

1165 
gim∂e
 
gim∂e_buûd_ªtu∫
 (
åì
);

1166 
gim∂e_ˇŒ_ª£t_Æüs_öfo
 (
gim∂e
);

1167 
gim∂e
 
gim∂e_buûd_ˇŒ_vec
 (
åì
, 
vec
<tree> );

1168 
gim∂e
 
gim∂e_buûd_ˇŒ
 (
åì
, , ...);

1169 
gim∂e
 
gim∂e_buûd_ˇŒ_vÆi°
 (
åì
, , 
va_li°
);

1170 
gim∂e
 
gim∂e_buûd_ˇŒ_öã∫Æ
 (
öã∫Æ_‚
, , ...);

1171 
gim∂e
 
gim∂e_buûd_ˇŒ_öã∫Æ_vec
 (
öã∫Æ_‚
, 
vec
<
åì
> );

1172 
gim∂e
 
gim∂e_buûd_ˇŒ_‰om_åì
 (
åì
);

1173 
gim∂e
 
gim∂e_buûd_assign_°©
 (
åì
,Åªê
MEM_STAT_DECL
);

1174 
	#gim∂e_buûd_assign
(
l
,
r
Ë
	`gim∂e_buûd_assign_°©
 (l,Ñ 
MEM_STAT_INFO
)

	)

1175 
gim∂e
 
gim∂e_buûd_assign_wôh_›s
 (
åì_code
, 
åì
,

1176 
åì
,Åªe,Åªê
CXX_MEM_STAT_INFO
);

1177 
gim∂e
 
gim∂e_buûd_assign_wôh_›s
 (
åì_code
, 
åì
,

1178 
åì
,Åªê
CXX_MEM_STAT_INFO
);

1179 
gim∂e
 
gim∂e_buûd_c⁄d
 (
åì_code
, 
åì
,Åree,Åree,Åree);

1180 
gim∂e
 
gim∂e_buûd_c⁄d_‰om_åì
 (
åì
,Åree,Åree);

1181 
gim∂e_c⁄d_£t_c⁄dôi⁄_‰om_åì
 (
gim∂e
, 
åì
);

1182 
gim∂e
 
gim∂e_buûd_œbñ
 (
åì
 
œbñ
);

1183 
gim∂e
 
gim∂e_buûd_gŸo
 (
åì
 
de°
);

1184 
gim∂e
 
gim∂e_buûd_n›
 ();

1185 
gim∂e
 
gim∂e_buûd_böd
 (
åì
, 
gim∂e_£q
,Åree);

1186 
gim∂e
 
gim∂e_buûd_asm_vec
 (c⁄° *, 
vec
<
åì
, 
va_gc
> *,

1187 
vec
<
åì
, 
va_gc
> *, vec<tree, va_gc> *,

1188 
vec
<
åì
, 
va_gc
> *);

1189 
gim∂e
 
gim∂e_buûd_ˇtch
 (
åì
, 
gim∂e_£q
);

1190 
gim∂e
 
gim∂e_buûd_eh_fûãr
 (
åì
, 
gim∂e_£q
);

1191 
gim∂e
 
gim∂e_buûd_eh_mu°_nŸ_throw
 (
åì
);

1192 
gim∂e
 
gim∂e_buûd_eh_ñ£
 (
gim∂e_£q
, gimple_seq);

1193 
gim∂e_°©emít_åy
 *
gim∂e_buûd_åy
 (
gim∂e_£q
, gimple_seq,

1194 
gim∂e_åy_Êags
);

1195 
gim∂e
 
gim∂e_buûd_w˚
 (
gim∂e_£q
);

1196 
gim∂e
 
gim∂e_buûd_ªsx
 ();

1197 
gim∂e
 
gim∂e_buûd_swôch_∆abñs
 (, 
åì
,Åree);

1198 
gim∂e
 
gim∂e_buûd_swôch
 (
åì
,Åªe, 
vec
<tree> );

1199 
gim∂e
 
gim∂e_buûd_eh_di•©ch
 ();

1200 
gim∂e
 
gim∂e_buûd_debug_böd_°©
 (
åì
,Åªe, gim∂ê
MEM_STAT_DECL
);

1201 
	#gim∂e_buûd_debug_böd
(
v¨
,
vÆ
,
°mt
) \

1202 
	`gim∂e_buûd_debug_böd_°©
 ((
v¨
), (
vÆ
), (
°mt
Ë
MEM_STAT_INFO
)

	)

1203 
gim∂e
 
gim∂e_buûd_debug_sour˚_böd_°©
 (
åì
,Åªe, gim∂ê
MEM_STAT_DECL
);

1204 
	#gim∂e_buûd_debug_sour˚_böd
(
v¨
,
vÆ
,
°mt
) \

1205 
	`gim∂e_buûd_debug_sour˚_böd_°©
 ((
v¨
), (
vÆ
), (
°mt
Ë
MEM_STAT_INFO
)

	)

1206 
gim∂e
 
gim∂e_buûd_omp_¸ôiˇl
 (
gim∂e_£q
, 
åì
);

1207 
gim∂e
 
gim∂e_buûd_omp_f‹
 (
gim∂e_£q
, , 
åì
, 
size_t
, gimple_seq);

1208 
gim∂e
 
gim∂e_buûd_omp_∑øŒñ
 (
gim∂e_£q
, 
åì
,Åree,Åree);

1209 
gim∂e
 
gim∂e_buûd_omp_èsk
 (
gim∂e_£q
, 
åì
,Åree,Åree,Åree,Åree,Åree);

1210 
gim∂e
 
gim∂e_buûd_omp_£˘i⁄
 (
gim∂e_£q
);

1211 
gim∂e
 
gim∂e_buûd_omp_ma°î
 (
gim∂e_£q
);

1212 
gim∂e
 
gim∂e_buûd_omp_èskgroup
 (
gim∂e_£q
);

1213 
gim∂e
 
gim∂e_buûd_omp_c⁄töue
 (
åì
,Åree);

1214 
gim∂e
 
gim∂e_buûd_omp_‹dîed
 (
gim∂e_£q
);

1215 
gim∂e
 
gim∂e_buûd_omp_ªtu∫
 (
boﬁ
);

1216 
gim∂e
 
gim∂e_buûd_omp_£˘i⁄s
 (
gim∂e_£q
, 
åì
);

1217 
gim∂e
 
gim∂e_buûd_omp_£˘i⁄s_swôch
 ();

1218 
gim∂e
 
gim∂e_buûd_omp_sögÀ
 (
gim∂e_£q
, 
åì
);

1219 
gim∂e
 
gim∂e_buûd_omp_èrgë
 (
gim∂e_£q
, , 
åì
);

1220 
gim∂e
 
gim∂e_buûd_omp_ãams
 (
gim∂e_£q
, 
åì
);

1221 
gim∂e
 
gim∂e_buûd_omp_©omic_lﬂd
 (
åì
,Åree);

1222 
gim∂e
 
gim∂e_buûd_omp_©omic_°‹e
 (
åì
);

1223 
gim∂e
 
gim∂e_buûd_å™ß˘i⁄
 (
gim∂e_£q
, 
åì
);

1224 
gim∂e
 
gim∂e_buûd_¥edi˘
 (
br_¥edi˘‹
, 
¥edi˘i⁄
);

1225 
gim∂e_£q_add_°mt
 (
gim∂e_£q
 *, 
gim∂e
);

1226 
gim∂e_£q_add_°mt_wôhout_upd©e
 (
gim∂e_£q
 *, 
gim∂e
);

1227 
gim∂e_£q_add_£q
 (
gim∂e_£q
 *, gimple_seq);

1228 
™nŸ©e_Æl_wôh_loˇti⁄_a·î
 (
gim∂e_£q
, 
gim∂e_°mt_ôî©‹
,

1229 
loˇti⁄_t
);

1230 
™nŸ©e_Æl_wôh_loˇti⁄
 (
gim∂e_£q
, 
loˇti⁄_t
);

1231 
boﬁ
 
em±y_body_p
 (
gim∂e_£q
);

1232 
gim∂e_£q
 
gim∂e_£q_c›y
 (gimple_seq);

1233 
boﬁ
 
gim∂e_ˇŒ_ßme_èrgë_p
 (
c⁄°_gim∂e
, const_gimple);

1234 
gim∂e_ˇŒ_Êags
 (
c⁄°_gim∂e
);

1235 
gim∂e_ˇŒ_¨g_Êags
 (
c⁄°_gim∂e
, );

1236 
gim∂e_ˇŒ_ªtu∫_Êags
 (
c⁄°_gim∂e
);

1237 
boﬁ
 
gim∂e_assign_c›y_p
 (
gim∂e
);

1238 
boﬁ
 
gim∂e_assign_sß_«me_c›y_p
 (
gim∂e
);

1239 
boﬁ
 
gim∂e_assign_u«ry_n›_p
 (
gim∂e
);

1240 
gim∂e_£t_bb
 (
gim∂e
, 
basic_block
);

1241 
gim∂e_assign_£t_rhs_‰om_åì
 (
gim∂e_°mt_ôî©‹
 *, 
åì
);

1242 
gim∂e_assign_£t_rhs_wôh_›s_1
 (
gim∂e_°mt_ôî©‹
 *, 
åì_code
,

1243 
åì
,Åree,Åree);

1244 
åì
 
gim∂e_gë_lhs
 (
c⁄°_gim∂e
);

1245 
gim∂e_£t_lhs
 (
gim∂e
, 
åì
);

1246 
gim∂e
 
gim∂e_c›y
 (gimple);

1247 
boﬁ
 
gim∂e_has_side_ef„˘s
 (
c⁄°_gim∂e
);

1248 
boﬁ
 
gim∂e_could_å≠_p_1
 (
gim∂e
, bool, bool);

1249 
boﬁ
 
gim∂e_could_å≠_p
 (
gim∂e
);

1250 
boﬁ
 
gim∂e_assign_rhs_could_å≠_p
 (
gim∂e
);

1251 
dump_gim∂e_°©i°ics
 ();

1252 
gë_gim∂e_rhs_num_›s
 (
åì_code
);

1253 
åì
 
ˇn⁄iˇlize_c⁄d_ex¥_c⁄d
 (tree);

1254 
gim∂e
 
gim∂e_ˇŒ_c›y_skù_¨gs
 (gim∂e, 
bôm≠
);

1255 
boﬁ
 
gim∂e_com∑ª_fõld_off£t
 (
åì
,Åree);

1256 
åì
 
gim∂e_unsig√d_ty≥
 (tree);

1257 
åì
 
gim∂e_sig√d_ty≥
 (tree);

1258 
Æüs_£t_ty≥
 
gim∂e_gë_Æüs_£t
 (
åì
);

1259 
boﬁ
 
gim∂e_i‹_addªs£s_èkí
 (
bôm≠
, 
gim∂e
);

1260 
boﬁ
 
gim∂e_buûtö_ˇŒ_ty≥s_com∑tibÀ_p
 (
gim∂e
, 
åì
);

1261 
boﬁ
 
gim∂e_ˇŒ_buûtö_p
 (
gim∂e
);

1262 
boﬁ
 
gim∂e_ˇŒ_buûtö_p
 (
gim∂e
, 
buût_ö_˛ass
);

1263 
boﬁ
 
gim∂e_ˇŒ_buûtö_p
 (
gim∂e
, 
buût_ö_fun˘i⁄
);

1264 
boﬁ
 
gim∂e_asm_˛obbîs_mem‹y_p
 (
c⁄°_gim∂e
);

1265 
dump_de˛_£t
 (
FILE
 *, 
bôm≠
);

1266 
boﬁ
 
n⁄‰ìög_ˇŒ_p
 (
gim∂e
);

1267 
boﬁ
 
ö„r_n⁄nuŒ_ønge
 (
gim∂e
, 
åì
, bool, bool);

1268 
s‹t_ˇ£_œbñs
 (
vec
<
åì
> );

1269 
¥ïro˚ss_ˇ£_œbñ_vec_f‹_gim∂e
 (
vec
<
åì
> ,Åree,Åree *);

1270 
gim∂e_£q_£t_loˇti⁄
 (
gim∂e_£q
 , 
loˇti⁄_t
);

1275 
	sgim∂e_ãmp_hash_ñt


1277 
åì
 
	mvÆ
;

1278 
åì
 
	mãmp
;

1279 } 
	tñt_t
;

1282 
ölöe
 

1283 
	$gim∂e_°mt_max_uid
 (
fun˘i⁄
 *
‚
)

1285  
‚
->
œ°_°mt_uid
;

1286 
	}
}

1289 
ölöe
 

1290 
	$£t_gim∂e_°mt_max_uid
 (
fun˘i⁄
 *
‚
, 
maxid
)

1292 
‚
->
œ°_°mt_uid
 = 
maxid
;

1293 
	}
}

1296 
ölöe
 

1297 
	$öc_gim∂e_°mt_max_uid
 (
fun˘i⁄
 *
‚
)

1299  
‚
->
œ°_°mt_uid
++;

1300 
	}
}

1304 
ölöe
 
gim∂e_£q_node


1305 
	$gim∂e_£q_fú°
 (
gim∂e_£q
 
s
)

1307  
s
;

1308 
	}
}

1313 
ölöe
 
gim∂e


1314 
	$gim∂e_£q_fú°_°mt
 (
gim∂e_£q
 
s
)

1316 
gim∂e_£q_node
 
n
 = 
	`gim∂e_£q_fú°
 (
s
);

1317  
n
;

1318 
	}
}

1323 
ölöe
 
gim∂e_£q_node


1324 
	$gim∂e_£q_œ°
 (
gim∂e_£q
 
s
)

1326  
s
 ? s->
¥ev
 : 
NULL
;

1327 
	}
}

1332 
ölöe
 
gim∂e


1333 
	$gim∂e_£q_œ°_°mt
 (
gim∂e_£q
 
s
)

1335 
gim∂e_£q_node
 
n
 = 
	`gim∂e_£q_œ°
 (
s
);

1336  
n
;

1337 
	}
}

1342 
ölöe
 

1343 
	$gim∂e_£q_£t_œ°
 (
gim∂e_£q
 *
ps
, 
gim∂e_£q_node
 
œ°
)

1345 (*
ps
)->
¥ev
 = 
œ°
;

1346 
	}
}

1351 
ölöe
 

1352 
	$gim∂e_£q_£t_fú°
 (
gim∂e_£q
 *
ps
, 
gim∂e_£q_node
 
fú°
)

1354 *
ps
 = 
fú°
;

1355 
	}
}

1360 
ölöe
 
boﬁ


1361 
	$gim∂e_£q_em±y_p
 (
gim∂e_£q
 
s
)

1363  
s
 =
NULL
;

1364 
	}
}

1368 
ölöe
 
gim∂e_£q


1369 
	$gim∂e_£q_Æloc_wôh_°mt
 (
gim∂e
 
°mt
)

1371 
gim∂e_£q
 
£q
 = 
NULL
;

1372 
	`gim∂e_£q_add_°mt
 (&
£q
, 
°mt
);

1373  
£q
;

1374 
	}
}

1379 
ölöe
 
gim∂e_£q


1380 
	$bb_£q
 (
c⁄°_basic_block
 
bb
)

1382  (!(
bb
->
Êags
 & 
BB_RTL
)Ë? bb->
û
.
gim∂e
.
£q
 : 
NULL
;

1383 
	}
}

1385 
ölöe
 
gim∂e_£q
 *

1386 
	$bb_£q_addr
 (
basic_block
 
bb
)

1388  (!(
bb
->
Êags
 & 
BB_RTL
)Ë? &bb->
û
.
gim∂e
.
£q
 : 
NULL
;

1389 
	}
}

1393 
ölöe
 

1394 
	$£t_bb_£q
 (
basic_block
 
bb
, 
gim∂e_£q
 
£q
)

1396 
	`gcc_checkög_as£π
 (!(
bb
->
Êags
 & 
BB_RTL
));

1397 
bb
->
û
.
gim∂e
.
£q
 = seq;

1398 
	}
}

1403 
ölöe
 
gim∂e_code


1404 
	$gim∂e_code
 (
c⁄°_gim∂e
 
g
)

1406  
g
->
code
;

1407 
	}
}

1412 
ölöe
 
gim∂e_°©emít_°ru˘uª_íum


1413 
	$gss_f‹_code
 (
gim∂e_code
 
code
)

1415 
	`gcc_gim∂e_checkög_as£π
 (()
code
 < 
LAST_AND_UNUSED_GIMPLE_CODE
);

1416  
gss_f‹_code_
[
code
];

1417 
	}
}

1422 
ölöe
 
gim∂e_°©emít_°ru˘uª_íum


1423 
	$gim∂e_°©emít_°ru˘uª
 (
gim∂e
 
gs
)

1425  
	`gss_f‹_code
 (
	`gim∂e_code
 (
gs
));

1426 
	}
}

1432 
ölöe
 
boﬁ


1433 
	$gim∂e_has_sub°©emíts
 (
gim∂e
 
g
)

1435 
	`gim∂e_code
 (
g
))

1437 
GIMPLE_BIND
:

1438 
GIMPLE_CATCH
:

1439 
GIMPLE_EH_FILTER
:

1440 
GIMPLE_EH_ELSE
:

1441 
GIMPLE_TRY
:

1442 
GIMPLE_OMP_FOR
:

1443 
GIMPLE_OMP_MASTER
:

1444 
GIMPLE_OMP_TASKGROUP
:

1445 
GIMPLE_OMP_ORDERED
:

1446 
GIMPLE_OMP_SECTION
:

1447 
GIMPLE_OMP_PARALLEL
:

1448 
GIMPLE_OMP_TASK
:

1449 
GIMPLE_OMP_SECTIONS
:

1450 
GIMPLE_OMP_SINGLE
:

1451 
GIMPLE_OMP_TARGET
:

1452 
GIMPLE_OMP_TEAMS
:

1453 
GIMPLE_OMP_CRITICAL
:

1454 
GIMPLE_WITH_CLEANUP_EXPR
:

1455 
GIMPLE_TRANSACTION
:

1456  
åue
;

1459  
Ál£
;

1461 
	}
}

1466 
ölöe
 
basic_block


1467 
	$gim∂e_bb
 (
c⁄°_gim∂e
 
g
)

1469  
g
->
bb
;

1470 
	}
}

1475 
ölöe
 
åì


1476 
	$gim∂e_block
 (
c⁄°_gim∂e
 
g
)

1478  
	`LOCATION_BLOCK
 (
g
->
loˇti⁄
);

1479 
	}
}

1484 
ölöe
 

1485 
	$gim∂e_£t_block
 (
gim∂e
 
g
, 
åì
 
block
)

1487 i‡(
block
)

1488 
g
->
loˇti⁄
 =

1489 
	`COMBINE_LOCATION_DATA
 (
löe_èbÀ
, 
g
->
loˇti⁄
, 
block
);

1491 
g
->
loˇti⁄
 = 
	`LOCATION_LOCUS
 (g->location);

1492 
	}
}

1497 
ölöe
 
loˇti⁄_t


1498 
	$gim∂e_loˇti⁄
 (
c⁄°_gim∂e
 
g
)

1500  
g
->
loˇti⁄
;

1501 
	}
}

1505 
ölöe
 c⁄° 
loˇti⁄_t
 *

1506 
	$gim∂e_loˇti⁄_±r
 (
c⁄°_gim∂e
 
g
)

1508  &
g
->
loˇti⁄
;

1509 
	}
}

1514 
ölöe
 

1515 
	$gim∂e_£t_loˇti⁄
 (
gim∂e
 
g
, 
loˇti⁄_t
 
loˇti⁄
)

1517 
g
->
loˇti⁄
 =Üocation;

1518 
	}
}

1523 
ölöe
 
boﬁ


1524 
	$gim∂e_has_loˇti⁄
 (
c⁄°_gim∂e
 
g
)

1526  
	`LOCATION_LOCUS
 (
	`gim∂e_loˇti⁄
 (
g
)Ë!
UNKNOWN_LOCATION
;

1527 
	}
}

1532 
ölöe
 const *

1533 
	$gim∂e_fûíame
 (
c⁄°_gim∂e
 
°mt
)

1535  
	`LOCATION_FILE
 (
	`gim∂e_loˇti⁄
 (
°mt
));

1536 
	}
}

1541 
ölöe
 

1542 
	$gim∂e_löío
 (
c⁄°_gim∂e
 
°mt
)

1544  
	`LOCATION_LINE
 (
	`gim∂e_loˇti⁄
 (
°mt
));

1545 
	}
}

1550 
ölöe
 
boﬁ


1551 
	$gim∂e_£q_sögÀt⁄_p
 (
gim∂e_£q
 
£q
)

1553  ((
	`gim∂e_£q_fú°
 (
£q
Ë!
NULL
)

1554 && (
	`gim∂e_£q_fú°
 (
£q
Ë=
	`gim∂e_£q_œ°
 (seq)));

1555 
	}
}

1559 
ölöe
 
boﬁ


1560 
	$gim∂e_no_w¨nög_p
 (
c⁄°_gim∂e
 
°mt
)

1562  
°mt
->
no_w¨nög
;

1563 
	}
}

1567 
ölöe
 

1568 
	$gim∂e_£t_no_w¨nög
 (
gim∂e
 
°mt
, 
boﬁ
 
no_w¨nög
)

1570 
°mt
->
no_w¨nög
 = ()Ço_warning;

1571 
	}
}

1575 
ölöe
 

1576 
	$gim∂e_£t_visôed
 (
gim∂e
 
°mt
, 
boﬁ
 
visôed_p
)

1578 
°mt
->
visôed
 = (Ë
visôed_p
;

1579 
	}
}

1584 
ölöe
 
boﬁ


1585 
	$gim∂e_visôed_p
 (
gim∂e
 
°mt
)

1587  
°mt
->
visôed
;

1588 
	}
}

1593 
ölöe
 

1594 
	$gim∂e_£t_∂f
 (
gim∂e
 
°mt
, 
∂f_mask
 
∂f
, 
boﬁ
 
vÆ_p
)

1596 i‡(
vÆ_p
)

1597 
°mt
->
∂f
 |= ()Ölf;

1599 
°mt
->
∂f
 &= ~(()Ölf);

1600 
	}
}

1605 
ölöe
 

1606 
	$gim∂e_∂f
 (
gim∂e
 
°mt
, 
∂f_mask
 
∂f
)

1608  
°mt
->
∂f
 & (()Ölf);

1609 
	}
}

1614 
ölöe
 

1615 
	$gim∂e_£t_uid
 (
gim∂e
 
g
, 
uid
)

1617 
g
->
uid
 = uid;

1618 
	}
}

1623 
ölöe
 

1624 
	$gim∂e_uid
 (
c⁄°_gim∂e
 
g
)

1626  
g
->
uid
;

1627 
	}
}

1632 
ölöe
 

1633 
	$gim∂e_öô_sögÀt⁄
 (
gim∂e
 
g
)

1635 
g
->
√xt
 = 
NULL
;

1636 
g
->
¥ev
 = g;

1637 
	}
}

1642 
ölöe
 
boﬁ


1643 
	$gim∂e_has_›s
 (
c⁄°_gim∂e
 
g
)

1645  
	`gim∂e_code
 (
g
Ë>
GIMPLE_COND
 && gim∂e_codê(gË<
GIMPLE_RETURN
;

1646 
	}
}

1648 
	gãm∂©e
 <>

1649 
	gãm∂©e
 <>

1650 
ölöe
 
boﬁ


1651 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_wôh_›s
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1653  
	`gim∂e_has_›s
 (
gs
);

1654 
	}
}

1656 
	gãm∂©e
 <>

1657 
	gãm∂©e
 <>

1658 
ölöe
 
boﬁ


1659 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_wôh_›s
>::
	$ã°
 (
gim∂e
 
gs
)

1661  
	`gim∂e_has_›s
 (
gs
);

1662 
	}
}

1666 
ölöe
 
boﬁ


1667 
	$gim∂e_has_mem_›s
 (
c⁄°_gim∂e
 
g
)

1669  
	`gim∂e_code
 (
g
Ë>
GIMPLE_ASSIGN
 && gim∂e_codê(gË<
GIMPLE_RETURN
;

1670 
	}
}

1672 
	gãm∂©e
 <>

1673 
	gãm∂©e
 <>

1674 
ölöe
 
boﬁ


1675 
	gis_a_hñ≥r
 <c⁄° 
	ggim∂e_°©emít_wôh_mem‹y_›s
>::
	$ã°
 (
c⁄°_gim∂e
 
gs
)

1677  
	`gim∂e_has_mem_›s
 (
gs
);

1678 
	}
}

1680 
	gãm∂©e
 <>

1681 
	gãm∂©e
 <>

1682 
ölöe
 
boﬁ


1683 
	gis_a_hñ≥r
 <
	ggim∂e_°©emít_wôh_mem‹y_›s
>::
	$ã°
 (
gim∂e
 
gs
)

1685  
	`gim∂e_has_mem_›s
 (
gs
);

1686 
	}
}

1690 
ölöe
 
u£_›ty≥_d
 *

1691 
	$gim∂e_u£_›s
 (
c⁄°_gim∂e
 
g
)

1693 c⁄° 
gim∂e_°©emít_wôh_›s
 *
›s_°mt
 =

1694 
dyn_ˇ°
 <c⁄° 
gim∂e_°©emít_wôh_›s
> (
g
);

1695 i‡(!
›s_°mt
)

1696  
NULL
;

1697  
›s_°mt
->
u£_›s
;

1698 
	}
}

1703 
ölöe
 

1704 
	$gim∂e_£t_u£_›s
 (
gim∂e
 
g
, 
u£_›ty≥_d
 *
u£
)

1706 
gim∂e_°©emít_wôh_›s
 *
›s_°mt
 =

1707 
as_a
 <
gim∂e_°©emít_wôh_›s
> (
g
);

1708 
›s_°mt
->
u£_›s
 = 
u£
;

1709 
	}
}

1714 
ölöe
 
åì


1715 
	$gim∂e_vu£
 (
c⁄°_gim∂e
 
g
)

1717 c⁄° 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

1718 
dyn_ˇ°
 <c⁄° 
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

1719 i‡(!
mem_›s_°mt
)

1720  
NULL_TREE
;

1721  
mem_›s_°mt
->
vu£
;

1722 
	}
}

1726 
ölöe
 
åì


1727 
	$gim∂e_vdef
 (
c⁄°_gim∂e
 
g
)

1729 c⁄° 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

1730 
dyn_ˇ°
 <c⁄° 
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

1731 i‡(!
mem_›s_°mt
)

1732  
NULL_TREE
;

1733  
mem_›s_°mt
->
vdef
;

1734 
	}
}

1738 
ölöe
 
åì
 *

1739 
	$gim∂e_vu£_±r
 (
gim∂e
 
g
)

1741 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

1742 
dyn_ˇ°
 <
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

1743 i‡(!
mem_›s_°mt
)

1744  
NULL
;

1745  &
mem_›s_°mt
->
vu£
;

1746 
	}
}

1750 
ölöe
 
åì
 *

1751 
	$gim∂e_vdef_±r
 (
gim∂e
 
g
)

1753 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

1754 
dyn_ˇ°
 <
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

1755 i‡(!
mem_›s_°mt
)

1756  
NULL
;

1757  &
mem_›s_°mt
->
vdef
;

1758 
	}
}

1762 
ölöe
 

1763 
	$gim∂e_£t_vu£
 (
gim∂e
 
g
, 
åì
 
vu£
)

1765 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

1766 
as_a
 <
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

1767 
mem_›s_°mt
->
vu£
 = vuse;

1768 
	}
}

1772 
ölöe
 

1773 
	$gim∂e_£t_vdef
 (
gim∂e
 
g
, 
åì
 
vdef
)

1775 
gim∂e_°©emít_wôh_mem‹y_›s
 *
mem_›s_°mt
 =

1776 
as_a
 <
gim∂e_°©emít_wôh_mem‹y_›s
> (
g
);

1777 
mem_›s_°mt
->
vdef
 = vdef;

1778 
	}
}

1784 
ölöe
 
boﬁ


1785 
	$gim∂e_modifõd_p
 (
c⁄°_gim∂e
 
g
)

1787  (
	`gim∂e_has_›s
 (
g
)Ë? (
boﬁ
Ëg->
modifõd
 : 
Ál£
;

1788 
	}
}

1794 
ölöe
 

1795 
	$gim∂e_£t_modifõd
 (
gim∂e
 
s
, 
boﬁ
 
modifõdp
)

1797 i‡(
	`gim∂e_has_›s
 (
s
))

1798 
s
->
modifõd
 = (Ë
modifõdp
;

1799 
	}
}

1808 
ölöe
 
åì_code


1809 
	$gim∂e_ex¥_code
 (
c⁄°_gim∂e
 
°mt
)

1811 
gim∂e_code
 
code
 = 
	`gim∂e_code
 (
°mt
);

1812 i‡(
code
 =
GIMPLE_ASSIGN
 || codê=
GIMPLE_COND
)

1813  (
åì_code
Ë
°mt
->
subcode
;

1816 
	`gcc_gim∂e_checkög_as£π
 (
code
 =
GIMPLE_CALL
);

1817  
CALL_EXPR
;

1819 
	}
}

1824 
ölöe
 
boﬁ


1825 
	$gim∂e_has_vﬁ©ûe_›s
 (
c⁄°_gim∂e
 
°mt
)

1827 i‡(
	`gim∂e_has_mem_›s
 (
°mt
))

1828  
°mt
->
has_vﬁ©ûe_›s
;

1830  
Ál£
;

1831 
	}
}

1836 
ölöe
 

1837 
	$gim∂e_£t_has_vﬁ©ûe_›s
 (
gim∂e
 
°mt
, 
boﬁ
 
vﬁ©ûï
)

1839 i‡(
	`gim∂e_has_mem_›s
 (
°mt
))

1840 
°mt
->
has_vﬁ©ûe_›s
 = (Ë
vﬁ©ûï
;

1841 
	}
}

1845 
ölöe
 
boﬁ


1846 
	$gim∂e_ö_å™ß˘i⁄
 (
gim∂e
 
°mt
)

1848  
	`bb_ö_å™ß˘i⁄
 (
	`gim∂e_bb
 (
°mt
));

1849 
	}
}

1853 
ölöe
 
boﬁ


1854 
	$gim∂e_ª„ªn˚s_mem‹y_p
 (
gim∂e
 
°mt
)

1856  
	`gim∂e_has_mem_›s
 (
°mt
Ë&& 
	`gim∂e_vu£
 (stmt);

1857 
	}
}

1862 
ölöe
 

1863 
	$gim∂e_omp_subcode
 (
c⁄°_gim∂e
 
s
)

1865 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_code
 (
s
Ë>
GIMPLE_OMP_ATOMIC_LOAD


1866 && 
	`gim∂e_code
 (
s
Ë<
GIMPLE_OMP_TEAMS
);

1867  
s
->
subcode
;

1868 
	}
}

1872 
ölöe
 

1873 
	$gim∂e_omp_£t_subcode
 (
gim∂e
 
s
, 
subcode
)

1877 
	`gcc_gim∂e_checkög_as£π
 (
subcode
 < (1 << 16));

1878 
s
->
subcode
 = subcode;

1879 
	}
}

1883 
ölöe
 

1884 
	$gim∂e_omp_ªtu∫_£t_nowaô
 (
gim∂e
 
s
)

1886 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_OMP_RETURN
);

1887 
s
->
subcode
 |
GF_OMP_RETURN_NOWAIT
;

1888 
	}
}

1894 
ölöe
 
boﬁ


1895 
	$gim∂e_omp_ªtu∫_nowaô_p
 (
c⁄°_gim∂e
 
g
)

1897 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_RETURN
);

1898  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_RETURN_NOWAIT
) != 0;

1899 
	}
}

1904 
ölöe
 

1905 
	$gim∂e_omp_ªtu∫_£t_lhs
 (
gim∂e
 
g
, 
åì
 
lhs
)

1907 
gim∂e_°©emít_omp_ªtu∫
 *
omp_ªtu∫_°mt
 =

1908 
as_a
 <
gim∂e_°©emít_omp_ªtu∫
> (
g
);

1909 
omp_ªtu∫_°mt
->
vÆ
 = 
lhs
;

1910 
	}
}

1915 
ölöe
 
åì


1916 
	$gim∂e_omp_ªtu∫_lhs
 (
c⁄°_gim∂e
 
g
)

1918 c⁄° 
gim∂e_°©emít_omp_ªtu∫
 *
omp_ªtu∫_°mt
 =

1919 
as_a
 <c⁄° 
gim∂e_°©emít_omp_ªtu∫
> (
g
);

1920  
omp_ªtu∫_°mt
->
vÆ
;

1921 
	}
}

1926 
ölöe
 
åì
 *

1927 
	$gim∂e_omp_ªtu∫_lhs_±r
 (
gim∂e
 
g
)

1929 
gim∂e_°©emít_omp_ªtu∫
 *
omp_ªtu∫_°mt
 =

1930 
as_a
 <
gim∂e_°©emít_omp_ªtu∫
> (
g
);

1931  &
omp_ªtu∫_°mt
->
vÆ
;

1932 
	}
}

1938 
ölöe
 
boﬁ


1939 
	$gim∂e_omp_£˘i⁄_œ°_p
 (
c⁄°_gim∂e
 
g
)

1941 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_SECTION
);

1942  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_SECTION_LAST
) != 0;

1943 
	}
}

1948 
ölöe
 

1949 
	$gim∂e_omp_£˘i⁄_£t_œ°
 (
gim∂e
 
g
)

1951 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_SECTION
);

1952 
g
->
subcode
 |
GF_OMP_SECTION_LAST
;

1953 
	}
}

1959 
ölöe
 
boﬁ


1960 
	$gim∂e_omp_∑øŒñ_comböed_p
 (
c⁄°_gim∂e
 
g
)

1962 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_PARALLEL
);

1963  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_PARALLEL_COMBINED
) != 0;

1964 
	}
}

1970 
ölöe
 

1971 
	$gim∂e_omp_∑øŒñ_£t_comböed_p
 (
gim∂e
 
g
, 
boﬁ
 
comböed_p
)

1973 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_PARALLEL
);

1974 i‡(
comböed_p
)

1975 
g
->
subcode
 |
GF_OMP_PARALLEL_COMBINED
;

1977 
g
->
subcode
 &~
GF_OMP_PARALLEL_COMBINED
;

1978 
	}
}

1984 
ölöe
 
boﬁ


1985 
	$gim∂e_omp_©omic_√ed_vÆue_p
 (
c⁄°_gim∂e
 
g
)

1987 i‡(
	`gim∂e_code
 (
g
Ë!
GIMPLE_OMP_ATOMIC_LOAD
)

1988 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_ATOMIC_STORE
);

1989  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_ATOMIC_NEED_VALUE
) != 0;

1990 
	}
}

1995 
ölöe
 

1996 
	$gim∂e_omp_©omic_£t_√ed_vÆue
 (
gim∂e
 
g
)

1998 i‡(
	`gim∂e_code
 (
g
Ë!
GIMPLE_OMP_ATOMIC_LOAD
)

1999 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_ATOMIC_STORE
);

2000 
g
->
subcode
 |
GF_OMP_ATOMIC_NEED_VALUE
;

2001 
	}
}

2007 
ölöe
 
boﬁ


2008 
	$gim∂e_omp_©omic_£q_c°_p
 (
c⁄°_gim∂e
 
g
)

2010 i‡(
	`gim∂e_code
 (
g
Ë!
GIMPLE_OMP_ATOMIC_LOAD
)

2011 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_ATOMIC_STORE
);

2012  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_ATOMIC_SEQ_CST
) != 0;

2013 
	}
}

2018 
ölöe
 

2019 
	$gim∂e_omp_©omic_£t_£q_c°
 (
gim∂e
 
g
)

2021 i‡(
	`gim∂e_code
 (
g
Ë!
GIMPLE_OMP_ATOMIC_LOAD
)

2022 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_ATOMIC_STORE
);

2023 
g
->
subcode
 |
GF_OMP_ATOMIC_SEQ_CST
;

2024 
	}
}

2029 
ölöe
 

2030 
	$gim∂e_num_›s
 (
c⁄°_gim∂e
 
gs
)

2032  
gs
->
num_›s
;

2033 
	}
}

2038 
ölöe
 

2039 
	$gim∂e_£t_num_›s
 (
gim∂e
 
gs
, 
num_›s
)

2041 
gs
->
num_›s
 =Çum_ops;

2042 
	}
}

2047 
ölöe
 
åì
 *

2048 
	$gim∂e_›s
 (
gim∂e
 
gs
)

2050 
size_t
 
off
;

2055 
off
 = 
gim∂e_›s_off£t_
[
	`gim∂e_°©emít_°ru˘uª
 (
gs
)];

2056 
	`gcc_gim∂e_checkög_as£π
 (
off
 != 0);

2058  (
åì
 *Ë((*Ë
gs
 + 
off
);

2059 
	}
}

2064 
ölöe
 
åì


2065 
	$gim∂e_›
 (
c⁄°_gim∂e
 
gs
, 
i
)

2067 i‡(
	`gim∂e_has_›s
 (
gs
))

2069 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
	`gim∂e_num_›s
 (
gs
));

2070  
	`gim∂e_›s
 (
	`CONST_CAST_GIMPLE
 (
gs
))[
i
];

2073  
NULL_TREE
;

2074 
	}
}

2078 
ölöe
 
åì
 *

2079 
	$gim∂e_›_±r
 (
c⁄°_gim∂e
 
gs
, 
i
)

2081 i‡(
	`gim∂e_has_›s
 (
gs
))

2083 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
	`gim∂e_num_›s
 (
gs
));

2084  
	`gim∂e_›s
 (
	`CONST_CAST_GIMPLE
 (
gs
)Ë+ 
i
;

2087  
NULL
;

2088 
	}
}

2092 
ölöe
 

2093 
	$gim∂e_£t_›
 (
gim∂e
 
gs
, 
i
, 
åì
 
›
)

2095 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_has_›s
 (
gs
Ë&& 
i
 < 
	`gim∂e_num_›s
 (gs));

2101 
	`gim∂e_›s
 (
gs
)[
i
] = 
›
;

2102 
	}
}

2106 
ölöe
 
boﬁ


2107 
	$is_gim∂e_assign
 (
c⁄°_gim∂e
 
gs
)

2109  
	`gim∂e_code
 (
gs
Ë=
GIMPLE_ASSIGN
;

2110 
	}
}

2115 
ölöe
 
gim∂e_rhs_˛ass


2116 
	$gë_gim∂e_rhs_˛ass
 (
åì_code
 
code
)

2118  (
gim∂e_rhs_˛ass
Ë
gim∂e_rhs_˛ass_èbÀ
[(Ë
code
];

2119 
	}
}

2123 
ölöe
 
åì


2124 
	$gim∂e_assign_lhs
 (
c⁄°_gim∂e
 
gs
)

2126 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2127  
	`gim∂e_›
 (
gs
, 0);

2128 
	}
}

2133 
ölöe
 
åì
 *

2134 
	$gim∂e_assign_lhs_±r
 (
c⁄°_gim∂e
 
gs
)

2136 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2137  
	`gim∂e_›_±r
 (
gs
, 0);

2138 
	}
}

2143 
ölöe
 

2144 
	$gim∂e_assign_£t_lhs
 (
gim∂e
 
gs
, 
åì
 
lhs
)

2146 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2147 
	`gim∂e_£t_›
 (
gs
, 0, 
lhs
);

2149 i‡(
lhs
 && 
	`TREE_CODE
 (lhsË=
SSA_NAME
)

2150 
	`SSA_NAME_DEF_STMT
 (
lhs
Ë
gs
;

2151 
	}
}

2156 
ölöe
 
åì


2157 
	$gim∂e_assign_rhs1
 (
c⁄°_gim∂e
 
gs
)

2159 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2160  
	`gim∂e_›
 (
gs
, 1);

2161 
	}
}

2167 
ölöe
 
åì
 *

2168 
	$gim∂e_assign_rhs1_±r
 (
c⁄°_gim∂e
 
gs
)

2170 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2171  
	`gim∂e_›_±r
 (
gs
, 1);

2172 
	}
}

2176 
ölöe
 

2177 
	$gim∂e_assign_£t_rhs1
 (
gim∂e
 
gs
, 
åì
 
rhs
)

2179 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2181 
	`gim∂e_£t_›
 (
gs
, 1, 
rhs
);

2182 
	}
}

2188 
ölöe
 
åì


2189 
	$gim∂e_assign_rhs2
 (
c⁄°_gim∂e
 
gs
)

2191 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2193 i‡(
	`gim∂e_num_›s
 (
gs
) >= 3)

2194  
	`gim∂e_›
 (
gs
, 2);

2196  
NULL_TREE
;

2197 
	}
}

2203 
ölöe
 
åì
 *

2204 
	$gim∂e_assign_rhs2_±r
 (
c⁄°_gim∂e
 
gs
)

2206 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2207  
	`gim∂e_›_±r
 (
gs
, 2);

2208 
	}
}

2213 
ölöe
 

2214 
	$gim∂e_assign_£t_rhs2
 (
gim∂e
 
gs
, 
åì
 
rhs
)

2216 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2218 
	`gim∂e_£t_›
 (
gs
, 2, 
rhs
);

2219 
	}
}

2224 
ölöe
 
åì


2225 
	$gim∂e_assign_rhs3
 (
c⁄°_gim∂e
 
gs
)

2227 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2229 i‡(
	`gim∂e_num_›s
 (
gs
) >= 4)

2230  
	`gim∂e_›
 (
gs
, 3);

2232  
NULL_TREE
;

2233 
	}
}

2238 
ölöe
 
åì
 *

2239 
	$gim∂e_assign_rhs3_±r
 (
c⁄°_gim∂e
 
gs
)

2241 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2242  
	`gim∂e_›_±r
 (
gs
, 3);

2243 
	}
}

2248 
ölöe
 

2249 
	$gim∂e_assign_£t_rhs3
 (
gim∂e
 
gs
, 
åì
 
rhs
)

2251 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2253 
	`gim∂e_£t_›
 (
gs
, 3, 
rhs
);

2254 
	}
}

2259 
ölöe
 

2260 
	$gim∂e_assign_£t_rhs_wôh_›s
 (
gim∂e_°mt_ôî©‹
 *
gsi
, 
åì_code
 
code
,

2261 
åì
 
›1
,Åªê
›2
)

2263 
	`gim∂e_assign_£t_rhs_wôh_›s_1
 (
gsi
, 
code
, 
›1
, 
›2
, 
NULL
);

2264 
	}
}

2268 
ölöe
 
boﬁ


2269 
	$gim∂e_assign_n⁄ãmp‹Æ_move_p
 (
c⁄°_gim∂e
 
gs
)

2271 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2272  
gs
->
n⁄ãmp‹Æ_move
;

2273 
	}
}

2277 
ölöe
 

2278 
	$gim∂e_assign_£t_n⁄ãmp‹Æ_move
 (
gim∂e
 
gs
, 
boﬁ
 
n⁄ãmp‹Æ
)

2280 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2281 
gs
->
n⁄ãmp‹Æ_move
 = 
n⁄ãmp‹Æ
;

2282 
	}
}

2289 
ölöe
 
åì_code


2290 
	$gim∂e_assign_rhs_code
 (
c⁄°_gim∂e
 
gs
)

2292 
åì_code
 
code
;

2293 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASSIGN
);

2295 
code
 = (
åì_code
Ë
gs
->
subcode
;

2299 i‡(
	`gë_gim∂e_rhs_˛ass
 (
code
Ë=
GIMPLE_SINGLE_RHS
)

2300 
code
 = 
	`TREE_CODE
 (
	`gim∂e_assign_rhs1
 (
gs
));

2302  
code
;

2303 
	}
}

2309 
ölöe
 

2310 
	$gim∂e_assign_£t_rhs_code
 (
gim∂e
 
s
, 
åì_code
 
code
)

2312 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_ASSIGN
);

2313 
s
->
subcode
 = 
code
;

2314 
	}
}

2321 
ölöe
 
gim∂e_rhs_˛ass


2322 
	$gim∂e_assign_rhs_˛ass
 (
c⁄°_gim∂e
 
gs
)

2324  
	`gë_gim∂e_rhs_˛ass
 (
	`gim∂e_assign_rhs_code
 (
gs
));

2325 
	}
}

2333 
ölöe
 
boﬁ


2334 
	$gim∂e_assign_sögÀ_p
 (
gim∂e
 
gs
)

2336  (
	`is_gim∂e_assign
 (
gs
)

2337 && 
	`gim∂e_assign_rhs_˛ass
 (
gs
Ë=
GIMPLE_SINGLE_RHS
);

2338 
	}
}

2342 
ölöe
 
boﬁ


2343 
	$gim∂e_°‹e_p
 (
gim∂e
 
gs
)

2345 
åì
 
lhs
 = 
	`gim∂e_gë_lhs
 (
gs
);

2346  
lhs
 && !
	`is_gim∂e_ªg
 (lhs);

2347 
	}
}

2351 
ölöe
 
boﬁ


2352 
	$gim∂e_assign_lﬂd_p
 (
gim∂e
 
gs
)

2354 
åì
 
rhs
;

2355 i‡(!
	`gim∂e_assign_sögÀ_p
 (
gs
))

2356  
Ál£
;

2357 
rhs
 = 
	`gim∂e_assign_rhs1
 (
gs
);

2358 i‡(
	`TREE_CODE
 (
rhs
Ë=
WITH_SIZE_EXPR
)

2359  
åue
;

2360 
rhs
 = 
	`gë_ba£_addªss
 (rhs);

2361  (
	`DECL_P
 (
rhs
)

2362 || 
	`TREE_CODE
 (
rhs
Ë=
MEM_REF
 || TREE_CODE (rhsË=
TARGET_MEM_REF
);

2363 
	}
}

2368 
ölöe
 
boﬁ


2369 
	$gim∂e_assign_ˇ°_p
 (
gim∂e
 
s
)

2371 i‡(
	`is_gim∂e_assign
 (
s
))

2373 
åì_code
 
sc
 = 
	`gim∂e_assign_rhs_code
 (
s
);

2374  
	`CONVERT_EXPR_CODE_P
 (
sc
)

2375 || 
sc
 =
VIEW_CONVERT_EXPR


2376 || 
sc
 =
FIX_TRUNC_EXPR
;

2379  
Ál£
;

2380 
	}
}

2384 
ölöe
 
boﬁ


2385 
	$gim∂e_˛obbî_p
 (
gim∂e
 
s
)

2387  
	`gim∂e_assign_sögÀ_p
 (
s
)

2388 && 
	`TREE_CLOBBER_P
 (
	`gim∂e_assign_rhs1
 (
s
));

2389 
	}
}

2393 
ölöe
 
boﬁ


2394 
	$is_gim∂e_ˇŒ
 (
c⁄°_gim∂e
 
gs
)

2396  
	`gim∂e_code
 (
gs
Ë=
GIMPLE_CALL
;

2397 
	}
}

2401 
ölöe
 
åì


2402 
	$gim∂e_ˇŒ_lhs
 (
c⁄°_gim∂e
 
gs
)

2404 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2405  
	`gim∂e_›
 (
gs
, 0);

2406 
	}
}

2411 
ölöe
 
åì
 *

2412 
	$gim∂e_ˇŒ_lhs_±r
 (
c⁄°_gim∂e
 
gs
)

2414 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2415  
	`gim∂e_›_±r
 (
gs
, 0);

2416 
	}
}

2421 
ölöe
 

2422 
	$gim∂e_ˇŒ_£t_lhs
 (
gim∂e
 
gs
, 
åì
 
lhs
)

2424 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2425 
	`gim∂e_£t_›
 (
gs
, 0, 
lhs
);

2426 i‡(
lhs
 && 
	`TREE_CODE
 (lhsË=
SSA_NAME
)

2427 
	`SSA_NAME_DEF_STMT
 (
lhs
Ë
gs
;

2428 
	}
}

2434 
ölöe
 
boﬁ


2435 
	$gim∂e_ˇŒ_öã∫Æ_p
 (
c⁄°_gim∂e
 
gs
)

2437 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2438  (
gs
->
subcode
 & 
GF_CALL_INTERNAL
) != 0;

2439 
	}
}

2444 
ölöe
 
öã∫Æ_‚


2445 
	$gim∂e_ˇŒ_öã∫Æ_‚
 (
c⁄°_gim∂e
 
gs
)

2447 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_ˇŒ_öã∫Æ_p
 (
gs
));

2448  
°©ic_ˇ°
 <c⁄° 
gim∂e_°©emít_ˇŒ
 *> (
gs
)->
u
.
öã∫Æ_‚
;

2449 
	}
}

2454 
ölöe
 

2455 
	$gim∂e_ˇŒ_£t_˘æ_Æãrög
 (
gim∂e
 
s
, 
boﬁ
 
˘æ_Æãrög_p
)

2457 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2458 i‡(
˘æ_Æãrög_p
)

2459 
s
->
subcode
 |
GF_CALL_CTRL_ALTERING
;

2461 
s
->
subcode
 &~
GF_CALL_CTRL_ALTERING
;

2462 
	}
}

2467 
ölöe
 
boﬁ


2468 
	$gim∂e_ˇŒ_˘æ_Æãrög_p
 (
c⁄°_gim∂e
 
gs
)

2470 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2471  (
gs
->
subcode
 & 
GF_CALL_CTRL_ALTERING
) != 0;

2472 
	}
}

2477 
ölöe
 
åì


2478 
	$gim∂e_ˇŒ_‚ty≥
 (
c⁄°_gim∂e
 
gs
)

2480 c⁄° 
gim∂e_°©emít_ˇŒ
 *
ˇŒ_°mt
 =

2481 
as_a
 <c⁄° 
gim∂e_°©emít_ˇŒ
> (
gs
);

2482 i‡(
	`gim∂e_ˇŒ_öã∫Æ_p
 (
gs
))

2483  
NULL_TREE
;

2484  
ˇŒ_°mt
->
u
.
‚ty≥
;

2485 
	}
}

2489 
ölöe
 

2490 
	$gim∂e_ˇŒ_£t_‚ty≥
 (
gim∂e
 
gs
, 
åì
 
‚ty≥
)

2492 
gim∂e_°©emít_ˇŒ
 *
ˇŒ_°mt
 = 
as_a
 <gim∂e_°©emít_ˇŒ> (
gs
);

2493 
	`gcc_gim∂e_checkög_as£π
 (!
	`gim∂e_ˇŒ_öã∫Æ_p
 (
gs
));

2494 
ˇŒ_°mt
->
u
.
‚ty≥
 = fntype;

2495 
	}
}

2501 
ölöe
 
åì


2502 
	$gim∂e_ˇŒ_‚
 (
c⁄°_gim∂e
 
gs
)

2504 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2505  
	`gim∂e_›
 (
gs
, 1);

2506 
	}
}

2511 
ölöe
 
åì
 *

2512 
	$gim∂e_ˇŒ_‚_±r
 (
c⁄°_gim∂e
 
gs
)

2514 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2515  
	`gim∂e_›_±r
 (
gs
, 1);

2516 
	}
}

2521 
ölöe
 

2522 
	$gim∂e_ˇŒ_£t_‚
 (
gim∂e
 
gs
, 
åì
 
‚
)

2524 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2525 
	`gcc_gim∂e_checkög_as£π
 (!
	`gim∂e_ˇŒ_öã∫Æ_p
 (
gs
));

2526 
	`gim∂e_£t_›
 (
gs
, 1, 
‚
);

2527 
	}
}

2532 
ölöe
 

2533 
	$gim∂e_ˇŒ_£t_‚de˛
 (
gim∂e
 
gs
, 
åì
 
de˛
)

2535 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2536 
	`gcc_gim∂e_checkög_as£π
 (!
	`gim∂e_ˇŒ_öã∫Æ_p
 (
gs
));

2537 
	`gim∂e_£t_›
 (
gs
, 1, 
	`buûd_fﬁd_addr_ex¥_loc
 (
	`gim∂e_loˇti⁄
 (gs), 
de˛
));

2538 
	}
}

2543 
ölöe
 

2544 
	$gim∂e_ˇŒ_£t_öã∫Æ_‚
 (
gim∂e
 
gs
, 
öã∫Æ_‚
 
‚
)

2546 
gim∂e_°©emít_ˇŒ
 *
ˇŒ_°mt
 = 
as_a
 <gim∂e_°©emít_ˇŒ> (
gs
);

2547 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_ˇŒ_öã∫Æ_p
 (
gs
));

2548 
ˇŒ_°mt
->
u
.
öã∫Æ_‚
 = 
‚
;

2549 
	}
}

2556 
ölöe
 
åì


2557 
	$gim∂e_ˇŒ_‚de˛
 (
c⁄°_gim∂e
 
gs
)

2559  
	`gim∂e_ˇŒ_addr_‚de˛
 (
	`gim∂e_ˇŒ_‚
 (
gs
));

2560 
	}
}

2565 
ölöe
 
åì


2566 
	$gim∂e_ˇŒ_ªtu∫_ty≥
 (
c⁄°_gim∂e
 
gs
)

2568 
åì
 
ty≥
 = 
	`gim∂e_ˇŒ_‚ty≥
 (
gs
);

2570 i‡(
ty≥
 =
NULL_TREE
)

2571  
	`TREE_TYPE
 (
	`gim∂e_ˇŒ_lhs
 (
gs
));

2575  
	`TREE_TYPE
 (
ty≥
);

2576 
	}
}

2581 
ölöe
 
åì


2582 
	$gim∂e_ˇŒ_chaö
 (
c⁄°_gim∂e
 
gs
)

2584 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2585  
	`gim∂e_›
 (
gs
, 2);

2586 
	}
}

2591 
ölöe
 
åì
 *

2592 
	$gim∂e_ˇŒ_chaö_±r
 (
c⁄°_gim∂e
 
gs
)

2594 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2595  
	`gim∂e_›_±r
 (
gs
, 2);

2596 
	}
}

2600 
ölöe
 

2601 
	$gim∂e_ˇŒ_£t_chaö
 (
gim∂e
 
gs
, 
åì
 
chaö
)

2603 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2605 
	`gim∂e_£t_›
 (
gs
, 2, 
chaö
);

2606 
	}
}

2611 
ölöe
 

2612 
	$gim∂e_ˇŒ_num_¨gs
 (
c⁄°_gim∂e
 
gs
)

2614 
num_›s
;

2615 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2616 
num_›s
 = 
	`gim∂e_num_›s
 (
gs
);

2617  
num_›s
 - 3;

2618 
	}
}

2623 
ölöe
 
åì


2624 
	$gim∂e_ˇŒ_¨g
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

2626 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2627  
	`gim∂e_›
 (
gs
, 
ödex
 + 3);

2628 
	}
}

2634 
ölöe
 
åì
 *

2635 
	$gim∂e_ˇŒ_¨g_±r
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

2637 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2638  
	`gim∂e_›_±r
 (
gs
, 
ödex
 + 3);

2639 
	}
}

2644 
ölöe
 

2645 
	$gim∂e_ˇŒ_£t_¨g
 (
gim∂e
 
gs
, 
ödex
, 
åì
 
¨g
)

2647 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_CALL
);

2648 
	`gim∂e_£t_›
 (
gs
, 
ödex
 + 3, 
¨g
);

2649 
	}
}

2656 
ölöe
 

2657 
	$gim∂e_ˇŒ_£t_èû
 (
gim∂e
 
s
, 
boﬁ
 
èû_p
)

2659 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2660 i‡(
èû_p
)

2661 
s
->
subcode
 |
GF_CALL_TAILCALL
;

2663 
s
->
subcode
 &~
GF_CALL_TAILCALL
;

2664 
	}
}

2669 
ölöe
 
boﬁ


2670 
	$gim∂e_ˇŒ_èû_p
 (
gim∂e
 
s
)

2672 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2673  (
s
->
subcode
 & 
GF_CALL_TAILCALL
) != 0;

2674 
	}
}

2681 
ölöe
 

2682 
	$gim∂e_ˇŒ_£t_ªtu∫_¶Ÿ_›t
 (
gim∂e
 
s
, 
boﬁ
 
ªtu∫_¶Ÿ_›t_p
)

2684 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2685 i‡(
ªtu∫_¶Ÿ_›t_p
)

2686 
s
->
subcode
 |
GF_CALL_RETURN_SLOT_OPT
;

2688 
s
->
subcode
 &~
GF_CALL_RETURN_SLOT_OPT
;

2689 
	}
}

2694 
ölöe
 
boﬁ


2695 
	$gim∂e_ˇŒ_ªtu∫_¶Ÿ_›t_p
 (
gim∂e
 
s
)

2697 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2698  (
s
->
subcode
 & 
GF_CALL_RETURN_SLOT_OPT
) != 0;

2699 
	}
}

2705 
ölöe
 

2706 
	$gim∂e_ˇŒ_£t_‰om_thunk
 (
gim∂e
 
s
, 
boﬁ
 
‰om_thunk_p
)

2708 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2709 i‡(
‰om_thunk_p
)

2710 
s
->
subcode
 |
GF_CALL_FROM_THUNK
;

2712 
s
->
subcode
 &~
GF_CALL_FROM_THUNK
;

2713 
	}
}

2718 
ölöe
 
boﬁ


2719 
	$gim∂e_ˇŒ_‰om_thunk_p
 (
gim∂e
 
s
)

2721 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2722  (
s
->
subcode
 & 
GF_CALL_FROM_THUNK
) != 0;

2723 
	}
}

2729 
ölöe
 

2730 
	$gim∂e_ˇŒ_£t_va_¨g_∑ck
 (
gim∂e
 
s
, 
boﬁ
 
∑ss_¨g_∑ck_p
)

2732 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2733 i‡(
∑ss_¨g_∑ck_p
)

2734 
s
->
subcode
 |
GF_CALL_VA_ARG_PACK
;

2736 
s
->
subcode
 &~
GF_CALL_VA_ARG_PACK
;

2737 
	}
}

2743 
ölöe
 
boﬁ


2744 
	$gim∂e_ˇŒ_va_¨g_∑ck_p
 (
gim∂e
 
s
)

2746 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2747  (
s
->
subcode
 & 
GF_CALL_VA_ARG_PACK
) != 0;

2748 
	}
}

2753 
ölöe
 
boﬁ


2754 
	$gim∂e_ˇŒ_n‹ëu∫_p
 (
gim∂e
 
s
)

2756 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2757  (
	`gim∂e_ˇŒ_Êags
 (
s
Ë& 
ECF_NORETURN
) != 0;

2758 
	}
}

2764 
ölöe
 

2765 
	$gim∂e_ˇŒ_£t_nŸhrow
 (
gim∂e
 
s
, 
boﬁ
 
nŸhrow_p
)

2767 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2768 i‡(
nŸhrow_p
)

2769 
s
->
subcode
 |
GF_CALL_NOTHROW
;

2771 
s
->
subcode
 &~
GF_CALL_NOTHROW
;

2772 
	}
}

2776 
ölöe
 
boﬁ


2777 
	$gim∂e_ˇŒ_nŸhrow_p
 (
gim∂e
 
s
)

2779 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2780  (
	`gim∂e_ˇŒ_Êags
 (
s
Ë& 
ECF_NOTHROW
) != 0;

2781 
	}
}

2788 
ölöe
 

2789 
	$gim∂e_ˇŒ_£t_Æloˇ_f‹_v¨
 (
gim∂e
 
s
, 
boﬁ
 
f‹_v¨
)

2791 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2792 i‡(
f‹_v¨
)

2793 
s
->
subcode
 |
GF_CALL_ALLOCA_FOR_VAR
;

2795 
s
->
subcode
 &~
GF_CALL_ALLOCA_FOR_VAR
;

2796 
	}
}

2800 
ölöe
 
boﬁ


2801 
	$gim∂e_ˇŒ_Æloˇ_f‹_v¨_p
 (
gim∂e
 
s
)

2803 
	`GIMPLE_CHECK
 (
s
, 
GIMPLE_CALL
);

2804  (
s
->
subcode
 & 
GF_CALL_ALLOCA_FOR_VAR
) != 0;

2805 
	}
}

2809 
ölöe
 

2810 
	$gim∂e_ˇŒ_c›y_Êags
 (
gim∂e
 
de°_ˇŒ
, gim∂ê
‹ig_ˇŒ
)

2812 
	`GIMPLE_CHECK
 (
de°_ˇŒ
, 
GIMPLE_CALL
);

2813 
	`GIMPLE_CHECK
 (
‹ig_ˇŒ
, 
GIMPLE_CALL
);

2814 
de°_ˇŒ
->
subcode
 = 
‹ig_ˇŒ
->subcode;

2815 
	}
}

2821 
ölöe
 
±_sﬁuti⁄
 *

2822 
	$gim∂e_ˇŒ_u£_£t
 (
gim∂e
 
ˇŒ
)

2824 
gim∂e_°©emít_ˇŒ
 *
ˇŒ_°mt
 = 
as_a
 <gim∂e_°©emít_ˇŒ> (
ˇŒ
);

2825  &
ˇŒ_°mt
->
ˇŒ_u£d
;

2826 
	}
}

2832 
ölöe
 
±_sﬁuti⁄
 *

2833 
	$gim∂e_ˇŒ_˛obbî_£t
 (
gim∂e
 
ˇŒ
)

2835 
gim∂e_°©emít_ˇŒ
 *
ˇŒ_°mt
 = 
as_a
 <gim∂e_°©emít_ˇŒ> (
ˇŒ
);

2836  &
ˇŒ_°mt
->
ˇŒ_˛obbîed
;

2837 
	}
}

2843 
ölöe
 
boﬁ


2844 
	$gim∂e_has_lhs
 (
gim∂e
 
°mt
)

2846  (
	`is_gim∂e_assign
 (
°mt
)

2847 || (
	`is_gim∂e_ˇŒ
 (
°mt
)

2848 && 
	`gim∂e_ˇŒ_lhs
 (
°mt
Ë!
NULL_TREE
));

2849 
	}
}

2854 
ölöe
 
åì_code


2855 
	$gim∂e_c⁄d_code
 (
c⁄°_gim∂e
 
gs
)

2857 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2858  (
åì_code
Ë
gs
->
subcode
;

2859 
	}
}

2864 
ölöe
 

2865 
	$gim∂e_c⁄d_£t_code
 (
gim∂e
 
gs
, 
åì_code
 
code
)

2867 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2868 
gs
->
subcode
 = 
code
;

2869 
	}
}

2874 
ölöe
 
åì


2875 
	$gim∂e_c⁄d_lhs
 (
c⁄°_gim∂e
 
gs
)

2877 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2878  
	`gim∂e_›
 (
gs
, 0);

2879 
	}
}

2884 
ölöe
 
åì
 *

2885 
	$gim∂e_c⁄d_lhs_±r
 (
c⁄°_gim∂e
 
gs
)

2887 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2888  
	`gim∂e_›_±r
 (
gs
, 0);

2889 
	}
}

2894 
ölöe
 

2895 
	$gim∂e_c⁄d_£t_lhs
 (
gim∂e
 
gs
, 
åì
 
lhs
)

2897 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2898 
	`gim∂e_£t_›
 (
gs
, 0, 
lhs
);

2899 
	}
}

2904 
ölöe
 
åì


2905 
	$gim∂e_c⁄d_rhs
 (
c⁄°_gim∂e
 
gs
)

2907 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2908  
	`gim∂e_›
 (
gs
, 1);

2909 
	}
}

2914 
ölöe
 
åì
 *

2915 
	$gim∂e_c⁄d_rhs_±r
 (
c⁄°_gim∂e
 
gs
)

2917 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2918  
	`gim∂e_›_±r
 (
gs
, 1);

2919 
	}
}

2925 
ölöe
 

2926 
	$gim∂e_c⁄d_£t_rhs
 (
gim∂e
 
gs
, 
åì
 
rhs
)

2928 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2929 
	`gim∂e_£t_›
 (
gs
, 1, 
rhs
);

2930 
	}
}

2936 
ölöe
 
åì


2937 
	$gim∂e_c⁄d_åue_œbñ
 (
c⁄°_gim∂e
 
gs
)

2939 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2940  
	`gim∂e_›
 (
gs
, 2);

2941 
	}
}

2947 
ölöe
 

2948 
	$gim∂e_c⁄d_£t_åue_œbñ
 (
gim∂e
 
gs
, 
åì
 
œbñ
)

2950 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2951 
	`gim∂e_£t_›
 (
gs
, 2, 
œbñ
);

2952 
	}
}

2958 
ölöe
 

2959 
	$gim∂e_c⁄d_£t_Ál£_œbñ
 (
gim∂e
 
gs
, 
åì
 
œbñ
)

2961 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2962 
	`gim∂e_£t_›
 (
gs
, 3, 
œbñ
);

2963 
	}
}

2969 
ölöe
 
åì


2970 
	$gim∂e_c⁄d_Ál£_œbñ
 (
c⁄°_gim∂e
 
gs
)

2972 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_COND
);

2973  
	`gim∂e_›
 (
gs
, 3);

2974 
	}
}

2979 
ölöe
 

2980 
	$gim∂e_c⁄d_make_Ál£
 (
gim∂e
 
gs
)

2982 
	`gim∂e_c⁄d_£t_lhs
 (
gs
, 
boﬁón_åue_node
);

2983 
	`gim∂e_c⁄d_£t_rhs
 (
gs
, 
boﬁón_Ál£_node
);

2984 
gs
->
subcode
 = 
EQ_EXPR
;

2985 
	}
}

2990 
ölöe
 

2991 
	$gim∂e_c⁄d_make_åue
 (
gim∂e
 
gs
)

2993 
	`gim∂e_c⁄d_£t_lhs
 (
gs
, 
boﬁón_åue_node
);

2994 
	`gim∂e_c⁄d_£t_rhs
 (
gs
, 
boﬁón_åue_node
);

2995 
gs
->
subcode
 = 
EQ_EXPR
;

2996 
	}
}

3001 
ölöe
 
boﬁ


3002 
	$gim∂e_c⁄d_åue_p
 (
c⁄°_gim∂e
 
gs
)

3004 
åì
 
lhs
 = 
	`gim∂e_c⁄d_lhs
 (
gs
);

3005 
åì
 
rhs
 = 
	`gim∂e_c⁄d_rhs
 (
gs
);

3006 
åì_code
 
code
 = 
	`gim∂e_c⁄d_code
 (
gs
);

3008 i‡(
lhs
 !
boﬁón_åue_node
 &&Üh†!
boﬁón_Ál£_node
)

3009  
Ál£
;

3011 i‡(
rhs
 !
boﬁón_åue_node
 &&Ñh†!
boﬁón_Ál£_node
)

3012  
Ál£
;

3014 i‡(
code
 =
NE_EXPR
 && 
lhs
 !
rhs
)

3015  
åue
;

3017 i‡(
code
 =
EQ_EXPR
 && 
lhs
 =
rhs
)

3018  
åue
;

3020  
Ál£
;

3021 
	}
}

3026 
ölöe
 
boﬁ


3027 
	$gim∂e_c⁄d_Ál£_p
 (
c⁄°_gim∂e
 
gs
)

3029 
åì
 
lhs
 = 
	`gim∂e_c⁄d_lhs
 (
gs
);

3030 
åì
 
rhs
 = 
	`gim∂e_c⁄d_rhs
 (
gs
);

3031 
åì_code
 
code
 = 
	`gim∂e_c⁄d_code
 (
gs
);

3033 i‡(
lhs
 !
boﬁón_åue_node
 &&Üh†!
boﬁón_Ál£_node
)

3034  
Ál£
;

3036 i‡(
rhs
 !
boﬁón_åue_node
 &&Ñh†!
boﬁón_Ál£_node
)

3037  
Ál£
;

3039 i‡(
code
 =
NE_EXPR
 && 
lhs
 =
rhs
)

3040  
åue
;

3042 i‡(
code
 =
EQ_EXPR
 && 
lhs
 !
rhs
)

3043  
åue
;

3045  
Ál£
;

3046 
	}
}

3050 
ölöe
 

3051 
	$gim∂e_c⁄d_£t_c⁄dôi⁄
 (
gim∂e
 
°mt
, 
åì_code
 
code
, 
åì
 
lhs
,Åªê
rhs
)

3053 
	`gim∂e_c⁄d_£t_code
 (
°mt
, 
code
);

3054 
	`gim∂e_c⁄d_£t_lhs
 (
°mt
, 
lhs
);

3055 
	`gim∂e_c⁄d_£t_rhs
 (
°mt
, 
rhs
);

3056 
	}
}

3060 
ölöe
 
åì


3061 
	$gim∂e_œbñ_œbñ
 (
c⁄°_gim∂e
 
gs
)

3063 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_LABEL
);

3064  
	`gim∂e_›
 (
gs
, 0);

3065 
	}
}

3071 
ölöe
 

3072 
	$gim∂e_œbñ_£t_œbñ
 (
gim∂e
 
gs
, 
åì
 
œbñ
)

3074 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_LABEL
);

3075 
	`gim∂e_£t_›
 (
gs
, 0, 
œbñ
);

3076 
	}
}

3081 
ölöe
 
åì


3082 
	$gim∂e_gŸo_de°
 (
c⁄°_gim∂e
 
gs
)

3084 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_GOTO
);

3085  
	`gim∂e_›
 (
gs
, 0);

3086 
	}
}

3091 
ölöe
 

3092 
	$gim∂e_gŸo_£t_de°
 (
gim∂e
 
gs
, 
åì
 
de°
)

3094 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_GOTO
);

3095 
	`gim∂e_£t_›
 (
gs
, 0, 
de°
);

3096 
	}
}

3101 
ölöe
 
åì


3102 
	$gim∂e_böd_v¨s
 (
c⁄°_gim∂e
 
gs
)

3104 c⁄° 
gim∂e_°©emít_böd
 *
böd_°mt
 =

3105 
as_a
 <c⁄° 
gim∂e_°©emít_böd
> (
gs
);

3106  
böd_°mt
->
v¨s
;

3107 
	}
}

3113 
ölöe
 

3114 
	$gim∂e_böd_£t_v¨s
 (
gim∂e
 
gs
, 
åì
 
v¨s
)

3116 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3117 
böd_°mt
->
v¨s
 = vars;

3118 
	}
}

3124 
ölöe
 

3125 
	$gim∂e_böd_≠≥nd_v¨s
 (
gim∂e
 
gs
, 
åì
 
v¨s
)

3127 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3128 
böd_°mt
->
v¨s
 = 
	`chaö⁄
 (bind_stmt->vars, vars);

3129 
	}
}

3132 
ölöe
 
gim∂e_£q
 *

3133 
	$gim∂e_böd_body_±r
 (
gim∂e
 
gs
)

3135 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3136  &
böd_°mt
->
body
;

3137 
	}
}

3141 
ölöe
 
gim∂e_£q


3142 
	$gim∂e_böd_body
 (
gim∂e
 
gs
)

3144  *
	`gim∂e_böd_body_±r
 (
gs
);

3145 
	}
}

3151 
ölöe
 

3152 
	$gim∂e_böd_£t_body
 (
gim∂e
 
gs
, 
gim∂e_£q
 
£q
)

3154 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3155 
böd_°mt
->
body
 = 
£q
;

3156 
	}
}

3161 
ölöe
 

3162 
	$gim∂e_böd_add_°mt
 (
gim∂e
 
gs
, gim∂ê
°mt
)

3164 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3165 
	`gim∂e_£q_add_°mt
 (&
böd_°mt
->
body
, 
°mt
);

3166 
	}
}

3171 
ölöe
 

3172 
	$gim∂e_böd_add_£q
 (
gim∂e
 
gs
, 
gim∂e_£q
 
£q
)

3174 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3175 
	`gim∂e_£q_add_£q
 (&
böd_°mt
->
body
, 
£q
);

3176 
	}
}

3182 
ölöe
 
åì


3183 
	$gim∂e_böd_block
 (
c⁄°_gim∂e
 
gs
)

3185 c⁄° 
gim∂e_°©emít_böd
 *
böd_°mt
 =

3186 
as_a
 <c⁄° 
gim∂e_°©emít_böd
> (
gs
);

3187  
böd_°mt
->
block
;

3188 
	}
}

3194 
ölöe
 

3195 
	$gim∂e_böd_£t_block
 (
gim∂e
 
gs
, 
åì
 
block
)

3197 
gim∂e_°©emít_böd
 *
böd_°mt
 = 
as_a
 <gim∂e_°©emít_böd> (
gs
);

3198 
	`gcc_gim∂e_checkög_as£π
 (
block
 =
NULL_TREE


3199 || 
	`TREE_CODE
 (
block
Ë=
BLOCK
);

3200 
böd_°mt
->
block
 = block;

3201 
	}
}

3206 
ölöe
 

3207 
	$gim∂e_asm_nöputs
 (
c⁄°_gim∂e
 
gs
)

3209 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3210 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3211  
asm_°mt
->
ni
;

3212 
	}
}

3217 
ölöe
 

3218 
	$gim∂e_asm_nouçuts
 (
c⁄°_gim∂e
 
gs
)

3220 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3221 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3222  
asm_°mt
->
no
;

3223 
	}
}

3228 
ölöe
 

3229 
	$gim∂e_asm_n˛obbîs
 (
c⁄°_gim∂e
 
gs
)

3231 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3232 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3233  
asm_°mt
->
nc
;

3234 
	}
}

3238 
ölöe
 

3239 
	$gim∂e_asm_∆abñs
 (
c⁄°_gim∂e
 
gs
)

3241 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3242 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3243  
asm_°mt
->
∆
;

3244 
	}
}

3248 
ölöe
 
åì


3249 
	$gim∂e_asm_öput_›
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

3251 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3252 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3253 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
ni
);

3254  
	`gim∂e_›
 (
gs
, 
ödex
 + 
asm_°mt
->
no
);

3255 
	}
}

3259 
ölöe
 
åì
 *

3260 
	$gim∂e_asm_öput_›_±r
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

3262 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3263 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3264 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
ni
);

3265  
	`gim∂e_›_±r
 (
gs
, 
ödex
 + 
asm_°mt
->
no
);

3266 
	}
}

3271 
ölöe
 

3272 
	$gim∂e_asm_£t_öput_›
 (
gim∂e
 
gs
, 
ödex
, 
åì
 
ö_›
)

3274 
gim∂e_°©emít_asm
 *
asm_°mt
 = 
as_a
 <gim∂e_°©emít_asm> (
gs
);

3275 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
ni


3276 && 
	`TREE_CODE
 (
ö_›
Ë=
TREE_LIST
);

3277 
	`gim∂e_£t_›
 (
gs
, 
ödex
 + 
asm_°mt
->
no
, 
ö_›
);

3278 
	}
}

3283 
ölöe
 
åì


3284 
	$gim∂e_asm_ouçut_›
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

3286 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3287 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3288 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
no
);

3289  
	`gim∂e_›
 (
gs
, 
ödex
);

3290 
	}
}

3294 
ölöe
 
åì
 *

3295 
	$gim∂e_asm_ouçut_›_±r
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

3297 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3298 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3299 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
no
);

3300  
	`gim∂e_›_±r
 (
gs
, 
ödex
);

3301 
	}
}

3306 
ölöe
 

3307 
	$gim∂e_asm_£t_ouçut_›
 (
gim∂e
 
gs
, 
ödex
, 
åì
 
out_›
)

3309 
gim∂e_°©emít_asm
 *
asm_°mt
 = 
as_a
 <gim∂e_°©emít_asm> (
gs
);

3310 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
no


3311 && 
	`TREE_CODE
 (
out_›
Ë=
TREE_LIST
);

3312 
	`gim∂e_£t_›
 (
gs
, 
ödex
, 
out_›
);

3313 
	}
}

3318 
ölöe
 
åì


3319 
	$gim∂e_asm_˛obbî_›
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

3321 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3322 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3323 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
nc
);

3324  
	`gim∂e_›
 (
gs
, 
ödex
 + 
asm_°mt
->
ni
 +ásm_°mt->
no
);

3325 
	}
}

3330 
ölöe
 

3331 
	$gim∂e_asm_£t_˛obbî_›
 (
gim∂e
 
gs
, 
ödex
, 
åì
 
˛obbî_›
)

3333 
gim∂e_°©emít_asm
 *
asm_°mt
 = 
as_a
 <gim∂e_°©emít_asm> (
gs
);

3334 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
nc


3335 && 
	`TREE_CODE
 (
˛obbî_›
Ë=
TREE_LIST
);

3336 
	`gim∂e_£t_›
 (
gs
, 
ödex
 + 
asm_°mt
->
ni
 +ásm_°mt->
no
, 
˛obbî_›
);

3337 
	}
}

3341 
ölöe
 
åì


3342 
	$gim∂e_asm_œbñ_›
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

3344 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3345 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3346 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
∆
);

3347  
	`gim∂e_›
 (
gs
, 
ödex
 + 
asm_°mt
->
ni
 +ásm_°mt->
nc
);

3348 
	}
}

3352 
ölöe
 

3353 
	$gim∂e_asm_£t_œbñ_›
 (
gim∂e
 
gs
, 
ödex
, 
åì
 
œbñ_›
)

3355 
gim∂e_°©emít_asm
 *
asm_°mt
 = 
as_a
 <gim∂e_°©emít_asm> (
gs
);

3356 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 < 
asm_°mt
->
∆


3357 && 
	`TREE_CODE
 (
œbñ_›
Ë=
TREE_LIST
);

3358 
	`gim∂e_£t_›
 (
gs
, 
ödex
 + 
asm_°mt
->
ni
 +ásm_°mt->
nc
, 
œbñ_›
);

3359 
	}
}

3364 
ölöe
 const *

3365 
	$gim∂e_asm_°rög
 (
c⁄°_gim∂e
 
gs
)

3367 c⁄° 
gim∂e_°©emít_asm
 *
asm_°mt
 =

3368 
as_a
 <c⁄° 
gim∂e_°©emít_asm
> (
gs
);

3369  
asm_°mt
->
°rög
;

3370 
	}
}

3375 
ölöe
 
boﬁ


3376 
	$gim∂e_asm_vﬁ©ûe_p
 (
c⁄°_gim∂e
 
gs
)

3378 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASM
);

3379  (
gs
->
subcode
 & 
GF_ASM_VOLATILE
) != 0;

3380 
	}
}

3385 
ölöe
 

3386 
	$gim∂e_asm_£t_vﬁ©ûe
 (
gim∂e
 
gs
, 
boﬁ
 
vﬁ©ûe_p
)

3388 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASM
);

3389 i‡(
vﬁ©ûe_p
)

3390 
gs
->
subcode
 |
GF_ASM_VOLATILE
;

3392 
gs
->
subcode
 &~
GF_ASM_VOLATILE
;

3393 
	}
}

3398 
ölöe
 

3399 
	$gim∂e_asm_£t_öput
 (
gim∂e
 
gs
, 
boﬁ
 
öput_p
)

3401 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASM
);

3402 i‡(
öput_p
)

3403 
gs
->
subcode
 |
GF_ASM_INPUT
;

3405 
gs
->
subcode
 &~
GF_ASM_INPUT
;

3406 
	}
}

3411 
ölöe
 
boﬁ


3412 
	$gim∂e_asm_öput_p
 (
c⁄°_gim∂e
 
gs
)

3414 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_ASM
);

3415  (
gs
->
subcode
 & 
GF_ASM_INPUT
) != 0;

3416 
	}
}

3421 
ölöe
 
åì


3422 
	$gim∂e_ˇtch_ty≥s
 (
c⁄°_gim∂e
 
gs
)

3424 c⁄° 
gim∂e_°©emít_ˇtch
 *
ˇtch_°mt
 =

3425 
as_a
 <c⁄° 
gim∂e_°©emít_ˇtch
> (
gs
);

3426  
ˇtch_°mt
->
ty≥s
;

3427 
	}
}

3432 
ölöe
 
åì
 *

3433 
	$gim∂e_ˇtch_ty≥s_±r
 (
gim∂e
 
gs
)

3435 
gim∂e_°©emít_ˇtch
 *
ˇtch_°mt
 = 
as_a
 <gim∂e_°©emít_ˇtch> (
gs
);

3436  &
ˇtch_°mt
->
ty≥s
;

3437 
	}
}

3443 
ölöe
 
gim∂e_£q
 *

3444 
	$gim∂e_ˇtch_h™dÀr_±r
 (
gim∂e
 
gs
)

3446 
gim∂e_°©emít_ˇtch
 *
ˇtch_°mt
 = 
as_a
 <gim∂e_°©emít_ˇtch> (
gs
);

3447  &
ˇtch_°mt
->
h™dÀr
;

3448 
	}
}

3454 
ölöe
 
gim∂e_£q


3455 
	$gim∂e_ˇtch_h™dÀr
 (
gim∂e
 
gs
)

3457  *
	`gim∂e_ˇtch_h™dÀr_±r
 (
gs
);

3458 
	}
}

3463 
ölöe
 

3464 
	$gim∂e_ˇtch_£t_ty≥s
 (
gim∂e
 
gs
, 
åì
 
t
)

3466 
gim∂e_°©emít_ˇtch
 *
ˇtch_°mt
 = 
as_a
 <gim∂e_°©emít_ˇtch> (
gs
);

3467 
ˇtch_°mt
->
ty≥s
 = 
t
;

3468 
	}
}

3473 
ölöe
 

3474 
	$gim∂e_ˇtch_£t_h™dÀr
 (
gim∂e
 
gs
, 
gim∂e_£q
 
h™dÀr
)

3476 
gim∂e_°©emít_ˇtch
 *
ˇtch_°mt
 = 
as_a
 <gim∂e_°©emít_ˇtch> (
gs
);

3477 
ˇtch_°mt
->
h™dÀr
 = handler;

3478 
	}
}

3483 
ölöe
 
åì


3484 
	$gim∂e_eh_fûãr_ty≥s
 (
c⁄°_gim∂e
 
gs
)

3486 c⁄° 
gim∂e_°©emít_eh_fûãr
 *
eh_fûãr_°mt
 =

3487 
as_a
 <c⁄° 
gim∂e_°©emít_eh_fûãr
> (
gs
);

3488  
eh_fûãr_°mt
->
ty≥s
;

3489 
	}
}

3495 
ölöe
 
åì
 *

3496 
	$gim∂e_eh_fûãr_ty≥s_±r
 (
gim∂e
 
gs
)

3498 
gim∂e_°©emít_eh_fûãr
 *
eh_fûãr_°mt
 =

3499 
as_a
 <
gim∂e_°©emít_eh_fûãr
> (
gs
);

3500  &
eh_fûãr_°mt
->
ty≥s
;

3501 
	}
}

3507 
ölöe
 
gim∂e_£q
 *

3508 
	$gim∂e_eh_fûãr_Áûuª_±r
 (
gim∂e
 
gs
)

3510 
gim∂e_°©emít_eh_fûãr
 *
eh_fûãr_°mt
 =

3511 
as_a
 <
gim∂e_°©emít_eh_fûãr
> (
gs
);

3512  &
eh_fûãr_°mt
->
Áûuª
;

3513 
	}
}

3519 
ölöe
 
gim∂e_£q


3520 
	$gim∂e_eh_fûãr_Áûuª
 (
gim∂e
 
gs
)

3522  *
	`gim∂e_eh_fûãr_Áûuª_±r
 (
gs
);

3523 
	}
}

3528 
ölöe
 

3529 
	$gim∂e_eh_fûãr_£t_ty≥s
 (
gim∂e
 
gs
, 
åì
 
ty≥s
)

3531 
gim∂e_°©emít_eh_fûãr
 *
eh_fûãr_°mt
 =

3532 
as_a
 <
gim∂e_°©emít_eh_fûãr
> (
gs
);

3533 
eh_fûãr_°mt
->
ty≥s
 =Åypes;

3534 
	}
}

3540 
ölöe
 

3541 
	$gim∂e_eh_fûãr_£t_Áûuª
 (
gim∂e
 
gs
, 
gim∂e_£q
 
Áûuª
)

3543 
gim∂e_°©emít_eh_fûãr
 *
eh_fûãr_°mt
 =

3544 
as_a
 <
gim∂e_°©emít_eh_fûãr
> (
gs
);

3545 
eh_fûãr_°mt
->
Áûuª
 = failure;

3546 
	}
}

3550 
ölöe
 
åì


3551 
	$gim∂e_eh_mu°_nŸ_throw_‚de˛
 (
gim∂e
 
gs
)

3553 
gim∂e_°©emít_eh_m¡
 *
eh_m¡_°mt
 = 
as_a
 <gim∂e_°©emít_eh_m¡> (
gs
);

3554  
eh_m¡_°mt
->
‚de˛
;

3555 
	}
}

3559 
ölöe
 

3560 
	$gim∂e_eh_mu°_nŸ_throw_£t_‚de˛
 (
gim∂e
 
gs
, 
åì
 
de˛
)

3562 
gim∂e_°©emít_eh_m¡
 *
eh_m¡_°mt
 = 
as_a
 <gim∂e_°©emít_eh_m¡> (
gs
);

3563 
eh_m¡_°mt
->
‚de˛
 = 
de˛
;

3564 
	}
}

3568 
ölöe
 
gim∂e_£q
 *

3569 
	$gim∂e_eh_ñ£_n_body_±r
 (
gim∂e
 
gs
)

3571 
gim∂e_°©emít_eh_ñ£
 *
eh_ñ£_°mt
 =

3572 
as_a
 <
gim∂e_°©emít_eh_ñ£
> (
gs
);

3573  &
eh_ñ£_°mt
->
n_body
;

3574 
	}
}

3576 
ölöe
 
gim∂e_£q


3577 
	$gim∂e_eh_ñ£_n_body
 (
gim∂e
 
gs
)

3579  *
	`gim∂e_eh_ñ£_n_body_±r
 (
gs
);

3580 
	}
}

3582 
ölöe
 
gim∂e_£q
 *

3583 
	$gim∂e_eh_ñ£_e_body_±r
 (
gim∂e
 
gs
)

3585 
gim∂e_°©emít_eh_ñ£
 *
eh_ñ£_°mt
 =

3586 
as_a
 <
gim∂e_°©emít_eh_ñ£
> (
gs
);

3587  &
eh_ñ£_°mt
->
e_body
;

3588 
	}
}

3590 
ölöe
 
gim∂e_£q


3591 
	$gim∂e_eh_ñ£_e_body
 (
gim∂e
 
gs
)

3593  *
	`gim∂e_eh_ñ£_e_body_±r
 (
gs
);

3594 
	}
}

3596 
ölöe
 

3597 
	$gim∂e_eh_ñ£_£t_n_body
 (
gim∂e
 
gs
, 
gim∂e_£q
 
£q
)

3599 
gim∂e_°©emít_eh_ñ£
 *
eh_ñ£_°mt
 =

3600 
as_a
 <
gim∂e_°©emít_eh_ñ£
> (
gs
);

3601 
eh_ñ£_°mt
->
n_body
 = 
£q
;

3602 
	}
}

3604 
ölöe
 

3605 
	$gim∂e_eh_ñ£_£t_e_body
 (
gim∂e
 
gs
, 
gim∂e_£q
 
£q
)

3607 
gim∂e_°©emít_eh_ñ£
 *
eh_ñ£_°mt
 =

3608 
as_a
 <
gim∂e_°©emít_eh_ñ£
> (
gs
);

3609 
eh_ñ£_°mt
->
e_body
 = 
£q
;

3610 
	}
}

3617 
ölöe
 
gim∂e_åy_Êags


3618 
	$gim∂e_åy_köd
 (
c⁄°_gim∂e
 
gs
)

3620 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_TRY
);

3621  (
gim∂e_åy_Êags
Ë(
gs
->
subcode
 & 
GIMPLE_TRY_KIND
);

3622 
	}
}

3627 
ölöe
 

3628 
	$gim∂e_åy_£t_köd
 (
gim∂e
 
gs
, 
gim∂e_åy_Êags
 
köd
)

3630 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_TRY
);

3631 
	`gcc_gim∂e_checkög_as£π
 (
köd
 =
GIMPLE_TRY_CATCH


3632 || 
köd
 =
GIMPLE_TRY_FINALLY
);

3633 i‡(
	`gim∂e_åy_köd
 (
gs
Ë!
köd
)

3634 
gs
->
subcode
 = (Ë
köd
;

3635 
	}
}

3640 
ölöe
 
boﬁ


3641 
	$gim∂e_åy_ˇtch_is_˛ónup
 (
c⁄°_gim∂e
 
gs
)

3643 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_åy_köd
 (
gs
Ë=
GIMPLE_TRY_CATCH
);

3644  (
gs
->
subcode
 & 
GIMPLE_TRY_CATCH_IS_CLEANUP
) != 0;

3645 
	}
}

3651 
ölöe
 
gim∂e_£q
 *

3652 
	$gim∂e_åy_evÆ_±r
 (
gim∂e
 
gs
)

3654 
gim∂e_°©emít_åy
 *
åy_°mt
 = 
as_a
 <gim∂e_°©emít_åy> (
gs
);

3655  &
åy_°mt
->
evÆ
;

3656 
	}
}

3661 
ölöe
 
gim∂e_£q


3662 
	$gim∂e_åy_evÆ
 (
gim∂e
 
gs
)

3664  *
	`gim∂e_åy_evÆ_±r
 (
gs
);

3665 
	}
}

3671 
ölöe
 
gim∂e_£q
 *

3672 
	$gim∂e_åy_˛ónup_±r
 (
gim∂e
 
gs
)

3674 
gim∂e_°©emít_åy
 *
åy_°mt
 = 
as_a
 <gim∂e_°©emít_åy> (
gs
);

3675  &
åy_°mt
->
˛ónup
;

3676 
	}
}

3682 
ölöe
 
gim∂e_£q


3683 
	$gim∂e_åy_˛ónup
 (
gim∂e
 
gs
)

3685  *
	`gim∂e_åy_˛ónup_±r
 (
gs
);

3686 
	}
}

3691 
ölöe
 

3692 
	$gim∂e_åy_£t_ˇtch_is_˛ónup
 (
gim∂e
 
g
, 
boﬁ
 
ˇtch_is_˛ónup
)

3694 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_åy_köd
 (
g
Ë=
GIMPLE_TRY_CATCH
);

3695 i‡(
ˇtch_is_˛ónup
)

3696 
g
->
subcode
 |
GIMPLE_TRY_CATCH_IS_CLEANUP
;

3698 
g
->
subcode
 &~
GIMPLE_TRY_CATCH_IS_CLEANUP
;

3699 
	}
}

3705 
ölöe
 

3706 
	$gim∂e_åy_£t_evÆ
 (
gim∂e
 
gs
, 
gim∂e_£q
 
evÆ
)

3708 
gim∂e_°©emít_åy
 *
åy_°mt
 = 
as_a
 <gim∂e_°©emít_åy> (
gs
);

3709 
åy_°mt
->
evÆ
 =Éval;

3710 
	}
}

3716 
ölöe
 

3717 
	$gim∂e_åy_£t_˛ónup
 (
gim∂e
 
gs
, 
gim∂e_£q
 
˛ónup
)

3719 
gim∂e_°©emít_åy
 *
åy_°mt
 = 
as_a
 <gim∂e_°©emít_åy> (
gs
);

3720 
åy_°mt
->
˛ónup
 = cleanup;

3721 
	}
}

3726 
ölöe
 
gim∂e_£q
 *

3727 
	$gim∂e_w˚_˛ónup_±r
 (
gim∂e
 
gs
)

3729 
gim∂e_°©emít_w˚
 *
w˚_°mt
 = 
as_a
 <gim∂e_°©emít_w˚> (
gs
);

3730  &
w˚_°mt
->
˛ónup
;

3731 
	}
}

3736 
ölöe
 
gim∂e_£q


3737 
	$gim∂e_w˚_˛ónup
 (
gim∂e
 
gs
)

3739  *
	`gim∂e_w˚_˛ónup_±r
 (
gs
);

3740 
	}
}

3745 
ölöe
 

3746 
	$gim∂e_w˚_£t_˛ónup
 (
gim∂e
 
gs
, 
gim∂e_£q
 
˛ónup
)

3748 
gim∂e_°©emít_w˚
 *
w˚_°mt
 = 
as_a
 <gim∂e_°©emít_w˚> (
gs
);

3749 
w˚_°mt
->
˛ónup
 = cleanup;

3750 
	}
}

3755 
ölöe
 
boﬁ


3756 
	$gim∂e_w˚_˛ónup_eh_⁄ly
 (
c⁄°_gim∂e
 
gs
)

3758 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_WITH_CLEANUP_EXPR
);

3759  
gs
->
subcode
 != 0;

3760 
	}
}

3765 
ölöe
 

3766 
	$gim∂e_w˚_£t_˛ónup_eh_⁄ly
 (
gim∂e
 
gs
, 
boﬁ
 
eh_⁄ly_p
)

3768 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_WITH_CLEANUP_EXPR
);

3769 
gs
->
subcode
 = (Ë
eh_⁄ly_p
;

3770 
	}
}

3775 
ölöe
 

3776 
	$gim∂e_phi_ˇ∑côy
 (
c⁄°_gim∂e
 
gs
)

3778 c⁄° 
gim∂e_°©emít_phi
 *
phi_°mt
 =

3779 
as_a
 <c⁄° 
gim∂e_°©emít_phi
> (
gs
);

3780  
phi_°mt
->
ˇ∑côy
;

3781 
	}
}

3788 
ölöe
 

3789 
	$gim∂e_phi_num_¨gs
 (
c⁄°_gim∂e
 
gs
)

3791 c⁄° 
gim∂e_°©emít_phi
 *
phi_°mt
 =

3792 
as_a
 <c⁄° 
gim∂e_°©emít_phi
> (
gs
);

3793  
phi_°mt
->
«rgs
;

3794 
	}
}

3799 
ölöe
 
åì


3800 
	$gim∂e_phi_ªsu…
 (
c⁄°_gim∂e
 
gs
)

3802 c⁄° 
gim∂e_°©emít_phi
 *
phi_°mt
 =

3803 
as_a
 <c⁄° 
gim∂e_°©emít_phi
> (
gs
);

3804  
phi_°mt
->
ªsu…
;

3805 
	}
}

3809 
ölöe
 
åì
 *

3810 
	$gim∂e_phi_ªsu…_±r
 (
gim∂e
 
gs
)

3812 
gim∂e_°©emít_phi
 *
phi_°mt
 = 
as_a
 <gim∂e_°©emít_phi> (
gs
);

3813  &
phi_°mt
->
ªsu…
;

3814 
	}
}

3818 
ölöe
 

3819 
	$gim∂e_phi_£t_ªsu…
 (
gim∂e
 
gs
, 
åì
 
ªsu…
)

3821 
gim∂e_°©emít_phi
 *
phi_°mt
 = 
as_a
 <gim∂e_°©emít_phi> (
gs
);

3822 
phi_°mt
->
ªsu…
 =Ñesult;

3823 i‡(
ªsu…
 && 
	`TREE_CODE
 (ªsu…Ë=
SSA_NAME
)

3824 
	`SSA_NAME_DEF_STMT
 (
ªsu…
Ë
gs
;

3825 
	}
}

3831 
ölöe
 
phi_¨g_d
 *

3832 
	$gim∂e_phi_¨g
 (
gim∂e
 
gs
, 
ödex
)

3834 
gim∂e_°©emít_phi
 *
phi_°mt
 = 
as_a
 <gim∂e_°©emít_phi> (
gs
);

3835 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 <
phi_°mt
->
ˇ∑côy
);

3836  &(
phi_°mt
->
¨gs
[
ödex
]);

3837 
	}
}

3842 
ölöe
 

3843 
	$gim∂e_phi_£t_¨g
 (
gim∂e
 
gs
, 
ödex
, 
phi_¨g_d
 * 
phürg
)

3845 
gim∂e_°©emít_phi
 *
phi_°mt
 = 
as_a
 <gim∂e_°©emít_phi> (
gs
);

3846 
	`gcc_gim∂e_checkög_as£π
 (
ödex
 <
phi_°mt
->
«rgs
);

3847 
phi_°mt
->
¨gs
[
ödex
] = *
phürg
;

3848 
	}
}

3853 
ölöe
 
gim∂e_£q


3854 
	$phi_nodes
 (
c⁄°_basic_block
 
bb
)

3856 
	`gcc_checkög_as£π
 (!(
bb
->
Êags
 & 
BB_RTL
));

3857  
bb
->
û
.
gim∂e
.
phi_nodes
;

3858 
	}
}

3862 
ölöe
 
gim∂e_£q
 *

3863 
	$phi_nodes_±r
 (
basic_block
 
bb
)

3865 
	`gcc_checkög_as£π
 (!(
bb
->
Êags
 & 
BB_RTL
));

3866  &
bb
->
û
.
gim∂e
.
phi_nodes
;

3867 
	}
}

3871 
ölöe
 
åì


3872 
	$gim∂e_phi_¨g_def
 (
gim∂e
 
gs
, 
size_t
 
ödex
)

3874  
	`gim∂e_phi_¨g
 (
gs
, 
ödex
)->
def
;

3875 
	}
}

3880 
ölöe
 
åì
 *

3881 
	$gim∂e_phi_¨g_def_±r
 (
gim∂e
 
gs
, 
size_t
 
ödex
)

3883  &
	`gim∂e_phi_¨g
 (
gs
, 
ödex
)->
def
;

3884 
	}
}

3888 
ölöe
 
edge


3889 
	$gim∂e_phi_¨g_edge
 (
gim∂e
 
gs
, 
size_t
 
i
)

3891  
	`EDGE_PRED
 (
	`gim∂e_bb
 (
gs
), 
i
);

3892 
	}
}

3896 
ölöe
 
sour˚_loˇti⁄


3897 
	$gim∂e_phi_¨g_loˇti⁄
 (
gim∂e
 
gs
, 
size_t
 
i
)

3899  
	`gim∂e_phi_¨g
 (
gs
, 
i
)->
locus
;

3900 
	}
}

3904 
ölöe
 
sour˚_loˇti⁄


3905 
	$gim∂e_phi_¨g_loˇti⁄_‰om_edge
 (
gim∂e
 
gs
, 
edge
 
e
)

3907  
	`gim∂e_phi_¨g
 (
gs
, 
e
->
de°_idx
)->
locus
;

3908 
	}
}

3912 
ölöe
 

3913 
	$gim∂e_phi_¨g_£t_loˇti⁄
 (
gim∂e
 
gs
, 
size_t
 
i
, 
sour˚_loˇti⁄
 
loc
)

3915 
	`gim∂e_phi_¨g
 (
gs
, 
i
)->
locus
 = 
loc
;

3916 
	}
}

3920 
ölöe
 
boﬁ


3921 
	$gim∂e_phi_¨g_has_loˇti⁄
 (
gim∂e
 
gs
, 
size_t
 
i
)

3923  
	`gim∂e_phi_¨g_loˇti⁄
 (
gs
, 
i
Ë!
UNKNOWN_LOCATION
;

3924 
	}
}

3929 
ölöe
 

3930 
	$gim∂e_ªsx_ªgi⁄
 (
c⁄°_gim∂e
 
gs
)

3932 c⁄° 
gim∂e_°©emít_ªsx
 *
ªsx_°mt
 =

3933 
as_a
 <c⁄° 
gim∂e_°©emít_ªsx
> (
gs
);

3934  
ªsx_°mt
->
ªgi⁄
;

3935 
	}
}

3939 
ölöe
 

3940 
	$gim∂e_ªsx_£t_ªgi⁄
 (
gim∂e
 
gs
, 
ªgi⁄
)

3942 
gim∂e_°©emít_ªsx
 *
ªsx_°mt
 = 
as_a
 <gim∂e_°©emít_ªsx> (
gs
);

3943 
ªsx_°mt
->
ªgi⁄
 =Ñegion;

3944 
	}
}

3948 
ölöe
 

3949 
	$gim∂e_eh_di•©ch_ªgi⁄
 (
c⁄°_gim∂e
 
gs
)

3951 c⁄° 
gim∂e_°©emít_eh_di•©ch
 *
eh_di•©ch_°mt
 =

3952 
as_a
 <c⁄° 
gim∂e_°©emít_eh_di•©ch
> (
gs
);

3953  
eh_di•©ch_°mt
->
ªgi⁄
;

3954 
	}
}

3958 
ölöe
 

3959 
	$gim∂e_eh_di•©ch_£t_ªgi⁄
 (
gim∂e
 
gs
, 
ªgi⁄
)

3961 
gim∂e_°©emít_eh_di•©ch
 *
eh_di•©ch_°mt
 =

3962 
as_a
 <
gim∂e_°©emít_eh_di•©ch
> (
gs
);

3963 
eh_di•©ch_°mt
->
ªgi⁄
 =Ñegion;

3964 
	}
}

3968 
ölöe
 

3969 
	$gim∂e_swôch_num_œbñs
 (
c⁄°_gim∂e
 
gs
)

3971 
num_›s
;

3972 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_SWITCH
);

3973 
num_›s
 = 
	`gim∂e_num_›s
 (
gs
);

3974 
	`gcc_gim∂e_checkög_as£π
 (
num_›s
 > 1);

3975  
num_›s
 - 1;

3976 
	}
}

3981 
ölöe
 

3982 
	$gim∂e_swôch_£t_num_œbñs
 (
gim∂e
 
g
, 
∆abñs
)

3984 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_SWITCH
);

3985 
	`gim∂e_£t_num_›s
 (
g
, 
∆abñs
 + 1);

3986 
	}
}

3991 
ölöe
 
åì


3992 
	$gim∂e_swôch_ödex
 (
c⁄°_gim∂e
 
gs
)

3994 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_SWITCH
);

3995  
	`gim∂e_›
 (
gs
, 0);

3996 
	}
}

4001 
ölöe
 
åì
 *

4002 
	$gim∂e_swôch_ödex_±r
 (
c⁄°_gim∂e
 
gs
)

4004 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_SWITCH
);

4005  
	`gim∂e_›_±r
 (
gs
, 0);

4006 
	}
}

4011 
ölöe
 

4012 
	$gim∂e_swôch_£t_ödex
 (
gim∂e
 
gs
, 
åì
 
ödex
)

4014 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_SWITCH
);

4015 
	`gcc_gim∂e_checkög_as£π
 (
	`SSA_VAR_P
 (
ödex
Ë|| 
	`CONSTANT_CLASS_P
 (index));

4016 
	`gim∂e_£t_›
 (
gs
, 0, 
ödex
);

4017 
	}
}

4023 
ölöe
 
åì


4024 
	$gim∂e_swôch_œbñ
 (
c⁄°_gim∂e
 
gs
, 
ödex
)

4026 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_SWITCH
);

4027 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_num_›s
 (
gs
Ë> 
ödex
 + 1);

4028  
	`gim∂e_›
 (
gs
, 
ödex
 + 1);

4029 
	}
}

4033 
ölöe
 

4034 
	$gim∂e_swôch_£t_œbñ
 (
gim∂e
 
gs
, 
ödex
, 
åì
 
œbñ
)

4036 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_SWITCH
);

4037 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_num_›s
 (
gs
Ë> 
ödex
 + 1

4038 && (
œbñ
 =
NULL_TREE


4039 || 
	`TREE_CODE
 (
œbñ
Ë=
CASE_LABEL_EXPR
));

4040 
	`gim∂e_£t_›
 (
gs
, 
ödex
 + 1, 
œbñ
);

4041 
	}
}

4045 
ölöe
 
åì


4046 
	$gim∂e_swôch_deÁu…_œbñ
 (
c⁄°_gim∂e
 
gs
)

4048 
åì
 
œbñ
 = 
	`gim∂e_swôch_œbñ
 (
gs
, 0);

4049 
	`gcc_checkög_as£π
 (!
	`CASE_LOW
 (
œbñ
Ë&& !
	`CASE_HIGH
 (label));

4050  
œbñ
;

4051 
	}
}

4055 
ölöe
 

4056 
	$gim∂e_swôch_£t_deÁu…_œbñ
 (
gim∂e
 
gs
, 
åì
 
œbñ
)

4058 
	`gcc_checkög_as£π
 (!
	`CASE_LOW
 (
œbñ
Ë&& !
	`CASE_HIGH
 (label));

4059 
	`gim∂e_swôch_£t_œbñ
 (
gs
, 0, 
œbñ
);

4060 
	}
}

4064 
ölöe
 
boﬁ


4065 
	$is_gim∂e_debug
 (
c⁄°_gim∂e
 
gs
)

4067  
	`gim∂e_code
 (
gs
Ë=
GIMPLE_DEBUG
;

4068 
	}
}

4072 
ölöe
 
boﬁ


4073 
	$gim∂e_debug_böd_p
 (
c⁄°_gim∂e
 
s
)

4075 i‡(
	`is_gim∂e_debug
 (
s
))

4076  
s
->
subcode
 =
GIMPLE_DEBUG_BIND
;

4078  
Ál£
;

4079 
	}
}

4083 
ölöe
 
åì


4084 
	$gim∂e_debug_böd_gë_v¨
 (
gim∂e
 
dbg
)

4086 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4087 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4088  
	`gim∂e_›
 (
dbg
, 0);

4089 
	}
}

4094 
ölöe
 
åì


4095 
	$gim∂e_debug_böd_gë_vÆue
 (
gim∂e
 
dbg
)

4097 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4098 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4099  
	`gim∂e_›
 (
dbg
, 1);

4100 
	}
}

4105 
ölöe
 
åì
 *

4106 
	$gim∂e_debug_böd_gë_vÆue_±r
 (
gim∂e
 
dbg
)

4108 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4109 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4110  
	`gim∂e_›_±r
 (
dbg
, 1);

4111 
	}
}

4115 
ölöe
 

4116 
	$gim∂e_debug_böd_£t_v¨
 (
gim∂e
 
dbg
, 
åì
 
v¨
)

4118 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4119 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4120 
	`gim∂e_£t_›
 (
dbg
, 0, 
v¨
);

4121 
	}
}

4126 
ölöe
 

4127 
	$gim∂e_debug_böd_£t_vÆue
 (
gim∂e
 
dbg
, 
åì
 
vÆue
)

4129 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4130 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4131 
	`gim∂e_£t_›
 (
dbg
, 1, 
vÆue
);

4132 
	}
}

4136 
	#GIMPLE_DEBUG_BIND_NOVALUE
 
NULL_TREE


	)

4141 
ölöe
 

4142 
	$gim∂e_debug_böd_ª£t_vÆue
 (
gim∂e
 
dbg
)

4144 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4145 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4146 
	`gim∂e_£t_›
 (
dbg
, 1, 
GIMPLE_DEBUG_BIND_NOVALUE
);

4147 
	}
}

4152 
ölöe
 
boﬁ


4153 
	$gim∂e_debug_böd_has_vÆue_p
 (
gim∂e
 
dbg
)

4155 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4156 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_böd_p
 (
dbg
));

4157  
	`gim∂e_›
 (
dbg
, 1Ë!
GIMPLE_DEBUG_BIND_NOVALUE
;

4158 
	}
}

4160 #unde‡
GIMPLE_DEBUG_BIND_NOVALUE


4164 
ölöe
 
boﬁ


4165 
	$gim∂e_debug_sour˚_böd_p
 (
c⁄°_gim∂e
 
s
)

4167 i‡(
	`is_gim∂e_debug
 (
s
))

4168  
s
->
subcode
 =
GIMPLE_DEBUG_SOURCE_BIND
;

4170  
Ál£
;

4171 
	}
}

4175 
ölöe
 
åì


4176 
	$gim∂e_debug_sour˚_böd_gë_v¨
 (
gim∂e
 
dbg
)

4178 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4179 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_sour˚_böd_p
 (
dbg
));

4180  
	`gim∂e_›
 (
dbg
, 0);

4181 
	}
}

4186 
ölöe
 
åì


4187 
	$gim∂e_debug_sour˚_böd_gë_vÆue
 (
gim∂e
 
dbg
)

4189 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4190 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_sour˚_böd_p
 (
dbg
));

4191  
	`gim∂e_›
 (
dbg
, 1);

4192 
	}
}

4197 
ölöe
 
åì
 *

4198 
	$gim∂e_debug_sour˚_böd_gë_vÆue_±r
 (
gim∂e
 
dbg
)

4200 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4201 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_sour˚_böd_p
 (
dbg
));

4202  
	`gim∂e_›_±r
 (
dbg
, 1);

4203 
	}
}

4207 
ölöe
 

4208 
	$gim∂e_debug_sour˚_böd_£t_v¨
 (
gim∂e
 
dbg
, 
åì
 
v¨
)

4210 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4211 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_sour˚_böd_p
 (
dbg
));

4212 
	`gim∂e_£t_›
 (
dbg
, 0, 
v¨
);

4213 
	}
}

4218 
ölöe
 

4219 
	$gim∂e_debug_sour˚_böd_£t_vÆue
 (
gim∂e
 
dbg
, 
åì
 
vÆue
)

4221 
	`GIMPLE_CHECK
 (
dbg
, 
GIMPLE_DEBUG
);

4222 
	`gcc_gim∂e_checkög_as£π
 (
	`gim∂e_debug_sour˚_böd_p
 (
dbg
));

4223 
	`gim∂e_£t_›
 (
dbg
, 1, 
vÆue
);

4224 
	}
}

4228 
ölöe
 

4229 
	$gë_löío
 (
c⁄°_gim∂e
 
°mt
)

4231 
loˇti⁄_t
 
loc
;

4233 i‡(!
°mt
)

4236 
loc
 = 
	`gim∂e_loˇti⁄
 (
°mt
);

4237 i‡(
loc
 =
UNKNOWN_LOCATION
)

4240  
	`LOCATION_LINE
 (
loc
);

4241 
	}
}

4245 
ölöe
 
gim∂e_£q
 *

4246 
	$gim∂e_omp_body_±r
 (
gim∂e
 
gs
)

4248  &
°©ic_ˇ°
 <
gim∂e_°©emít_omp
 *> (
gs
)->
body
;

4249 
	}
}

4253 
ölöe
 
gim∂e_£q


4254 
	$gim∂e_omp_body
 (
gim∂e
 
gs
)

4256  *
	`gim∂e_omp_body_±r
 (
gs
);

4257 
	}
}

4261 
ölöe
 

4262 
	$gim∂e_omp_£t_body
 (
gim∂e
 
gs
, 
gim∂e_£q
 
body
)

4264 
°©ic_ˇ°
 <
gim∂e_°©emít_omp
 *> (
gs
)->
body
 = body;

4265 
	}
}

4270 
ölöe
 
åì


4271 
	$gim∂e_omp_¸ôiˇl_«me
 (
c⁄°_gim∂e
 
gs
)

4273 c⁄° 
gim∂e_°©emít_omp_¸ôiˇl
 *
omp_¸ôiˇl_°mt
 =

4274 
as_a
 <c⁄° 
gim∂e_°©emít_omp_¸ôiˇl
> (
gs
);

4275  
omp_¸ôiˇl_°mt
->
«me
;

4276 
	}
}

4281 
ölöe
 
åì
 *

4282 
	$gim∂e_omp_¸ôiˇl_«me_±r
 (
gim∂e
 
gs
)

4284 
gim∂e_°©emít_omp_¸ôiˇl
 *
omp_¸ôiˇl_°mt
 =

4285 
as_a
 <
gim∂e_°©emít_omp_¸ôiˇl
> (
gs
);

4286  &
omp_¸ôiˇl_°mt
->
«me
;

4287 
	}
}

4292 
ölöe
 

4293 
	$gim∂e_omp_¸ôiˇl_£t_«me
 (
gim∂e
 
gs
, 
åì
 
«me
)

4295 
gim∂e_°©emít_omp_¸ôiˇl
 *
omp_¸ôiˇl_°mt
 =

4296 
as_a
 <
gim∂e_°©emít_omp_¸ôiˇl
> (
gs
);

4297 
omp_¸ôiˇl_°mt
->
«me
 =Çame;

4298 
	}
}

4303 
ölöe
 

4304 
	$gim∂e_omp_f‹_köd
 (
c⁄°_gim∂e
 
g
)

4306 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_FOR
);

4307  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_FOR_KIND_MASK
);

4308 
	}
}

4313 
ölöe
 

4314 
	$gim∂e_omp_f‹_£t_köd
 (
gim∂e
 
g
, 
köd
)

4316 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_FOR
);

4317 
g
->
subcode
 = (g->subcodê& ~
GF_OMP_FOR_KIND_MASK
)

4318 | (
köd
 & 
GF_OMP_FOR_KIND_MASK
);

4319 
	}
}

4325 
ölöe
 
boﬁ


4326 
	$gim∂e_omp_f‹_comböed_p
 (
c⁄°_gim∂e
 
g
)

4328 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_FOR
);

4329  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_FOR_COMBINED
) != 0;

4330 
	}
}

4336 
ölöe
 

4337 
	$gim∂e_omp_f‹_£t_comböed_p
 (
gim∂e
 
g
, 
boﬁ
 
comböed_p
)

4339 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_FOR
);

4340 i‡(
comböed_p
)

4341 
g
->
subcode
 |
GF_OMP_FOR_COMBINED
;

4343 
g
->
subcode
 &~
GF_OMP_FOR_COMBINED
;

4344 
	}
}

4350 
ölöe
 
boﬁ


4351 
	$gim∂e_omp_f‹_comböed_öto_p
 (
c⁄°_gim∂e
 
g
)

4353 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_FOR
);

4354  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_FOR_COMBINED_INTO
) != 0;

4355 
	}
}

4361 
ölöe
 

4362 
	$gim∂e_omp_f‹_£t_comböed_öto_p
 (
gim∂e
 
g
, 
boﬁ
 
comböed_p
)

4364 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_FOR
);

4365 i‡(
comböed_p
)

4366 
g
->
subcode
 |
GF_OMP_FOR_COMBINED_INTO
;

4368 
g
->
subcode
 &~
GF_OMP_FOR_COMBINED_INTO
;

4369 
	}
}

4374 
ölöe
 
åì


4375 
	$gim∂e_omp_f‹_˛au£s
 (
c⁄°_gim∂e
 
gs
)

4377 c⁄° 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4378 
as_a
 <c⁄° 
gim∂e_°©emít_omp_f‹
> (
gs
);

4379  
omp_f‹_°mt
->
˛au£s
;

4380 
	}
}

4385 
ölöe
 
åì
 *

4386 
	$gim∂e_omp_f‹_˛au£s_±r
 (
gim∂e
 
gs
)

4388 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4389 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4390  &
omp_f‹_°mt
->
˛au£s
;

4391 
	}
}

4396 
ölöe
 

4397 
	$gim∂e_omp_f‹_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

4399 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4400 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4401 
omp_f‹_°mt
->
˛au£s
 = clauses;

4402 
	}
}

4407 
ölöe
 
size_t


4408 
	$gim∂e_omp_f‹_cﬁœp£
 (
gim∂e
 
gs
)

4410 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4411 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4412  
omp_f‹_°mt
->
cﬁœp£
;

4413 
	}
}

4418 
ölöe
 
åì


4419 
	$gim∂e_omp_f‹_ödex
 (
c⁄°_gim∂e
 
gs
, 
size_t
 
i
)

4421 c⁄° 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4422 
as_a
 <c⁄° 
gim∂e_°©emít_omp_f‹
> (
gs
);

4423 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4424  
omp_f‹_°mt
->
ôî
[
i
].
ödex
;

4425 
	}
}

4430 
ölöe
 
åì
 *

4431 
	$gim∂e_omp_f‹_ödex_±r
 (
gim∂e
 
gs
, 
size_t
 
i
)

4433 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4434 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4435 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4436  &
omp_f‹_°mt
->
ôî
[
i
].
ödex
;

4437 
	}
}

4442 
ölöe
 

4443 
	$gim∂e_omp_f‹_£t_ödex
 (
gim∂e
 
gs
, 
size_t
 
i
, 
åì
 
ödex
)

4445 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4446 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4447 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4448 
omp_f‹_°mt
->
ôî
[
i
].
ödex
 = index;

4449 
	}
}

4454 
ölöe
 
åì


4455 
	$gim∂e_omp_f‹_öôül
 (
c⁄°_gim∂e
 
gs
, 
size_t
 
i
)

4457 c⁄° 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4458 
as_a
 <c⁄° 
gim∂e_°©emít_omp_f‹
> (
gs
);

4459 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4460  
omp_f‹_°mt
->
ôî
[
i
].
öôül
;

4461 
	}
}

4466 
ölöe
 
åì
 *

4467 
	$gim∂e_omp_f‹_öôül_±r
 (
gim∂e
 
gs
, 
size_t
 
i
)

4469 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4470 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4471 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4472  &
omp_f‹_°mt
->
ôî
[
i
].
öôül
;

4473 
	}
}

4478 
ölöe
 

4479 
	$gim∂e_omp_f‹_£t_öôül
 (
gim∂e
 
gs
, 
size_t
 
i
, 
åì
 
öôül
)

4481 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4482 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4483 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4484 
omp_f‹_°mt
->
ôî
[
i
].
öôül
 = initial;

4485 
	}
}

4490 
ölöe
 
åì


4491 
	$gim∂e_omp_f‹_föÆ
 (
c⁄°_gim∂e
 
gs
, 
size_t
 
i
)

4493 c⁄° 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4494 
as_a
 <c⁄° 
gim∂e_°©emít_omp_f‹
> (
gs
);

4495 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4496  
omp_f‹_°mt
->
ôî
[
i
].
föÆ
;

4497 
	}
}

4502 
ölöe
 
åì
 *

4503 
	$gim∂e_omp_f‹_föÆ_±r
 (
gim∂e
 
gs
, 
size_t
 
i
)

4505 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4506 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4507 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4508  &
omp_f‹_°mt
->
ôî
[
i
].
föÆ
;

4509 
	}
}

4514 
ölöe
 

4515 
	$gim∂e_omp_f‹_£t_föÆ
 (
gim∂e
 
gs
, 
size_t
 
i
, 
åì
 
föÆ
)

4517 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4518 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4519 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4520 
omp_f‹_°mt
->
ôî
[
i
].
föÆ
 = final;

4521 
	}
}

4526 
ölöe
 
åì


4527 
	$gim∂e_omp_f‹_ö¸
 (
c⁄°_gim∂e
 
gs
, 
size_t
 
i
)

4529 c⁄° 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4530 
as_a
 <c⁄° 
gim∂e_°©emít_omp_f‹
> (
gs
);

4531 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4532  
omp_f‹_°mt
->
ôî
[
i
].
ö¸
;

4533 
	}
}

4538 
ölöe
 
åì
 *

4539 
	$gim∂e_omp_f‹_ö¸_±r
 (
gim∂e
 
gs
, 
size_t
 
i
)

4541 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4542 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4543 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4544  &
omp_f‹_°mt
->
ôî
[
i
].
ö¸
;

4545 
	}
}

4550 
ölöe
 

4551 
	$gim∂e_omp_f‹_£t_ö¸
 (
gim∂e
 
gs
, 
size_t
 
i
, 
åì
 
ö¸
)

4553 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4554 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4555 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

4556 
omp_f‹_°mt
->
ôî
[
i
].
ö¸
 = incr;

4557 
	}
}

4563 
ölöe
 
gim∂e_£q
 *

4564 
	$gim∂e_omp_f‹_¥e_body_±r
 (
gim∂e
 
gs
)

4566 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4567 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4568  &
omp_f‹_°mt
->
¥e_body
;

4569 
	}
}

4575 
ölöe
 
gim∂e_£q


4576 
	$gim∂e_omp_f‹_¥e_body
 (
gim∂e
 
gs
)

4578  *
	`gim∂e_omp_f‹_¥e_body_±r
 (
gs
);

4579 
	}
}

4585 
ölöe
 

4586 
	$gim∂e_omp_f‹_£t_¥e_body
 (
gim∂e
 
gs
, 
gim∂e_£q
 
¥e_body
)

4588 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

4589 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

4590 
omp_f‹_°mt
->
¥e_body
 =Öre_body;

4591 
	}
}

4596 
ölöe
 
åì


4597 
	$gim∂e_omp_∑øŒñ_˛au£s
 (
c⁄°_gim∂e
 
gs
)

4599 c⁄° 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4600 
as_a
 <c⁄° 
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4601  
omp_∑øŒñ_°mt
->
˛au£s
;

4602 
	}
}

4607 
ölöe
 
åì
 *

4608 
	$gim∂e_omp_∑øŒñ_˛au£s_±r
 (
gim∂e
 
gs
)

4610 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4611 
as_a
 <
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4612  &
omp_∑øŒñ_°mt
->
˛au£s
;

4613 
	}
}

4619 
ölöe
 

4620 
	$gim∂e_omp_∑øŒñ_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

4622 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4623 
as_a
 <
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4624 
omp_∑øŒñ_°mt
->
˛au£s
 = clauses;

4625 
	}
}

4630 
ölöe
 
åì


4631 
	$gim∂e_omp_∑øŒñ_chûd_‚
 (
c⁄°_gim∂e
 
gs
)

4633 c⁄° 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4634 
as_a
 <c⁄° 
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4635  
omp_∑øŒñ_°mt
->
chûd_‚
;

4636 
	}
}

4641 
ölöe
 
åì
 *

4642 
	$gim∂e_omp_∑øŒñ_chûd_‚_±r
 (
gim∂e
 
gs
)

4644 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4645 
as_a
 <
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4646  &
omp_∑øŒñ_°mt
->
chûd_‚
;

4647 
	}
}

4652 
ölöe
 

4653 
	$gim∂e_omp_∑øŒñ_£t_chûd_‚
 (
gim∂e
 
gs
, 
åì
 
chûd_‚
)

4655 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4656 
as_a
 <
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4657 
omp_∑øŒñ_°mt
->
chûd_‚
 = child_fn;

4658 
	}
}

4664 
ölöe
 
åì


4665 
	$gim∂e_omp_∑øŒñ_d©a_¨g
 (
c⁄°_gim∂e
 
gs
)

4667 c⁄° 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4668 
as_a
 <c⁄° 
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4669  
omp_∑øŒñ_°mt
->
d©a_¨g
;

4670 
	}
}

4675 
ölöe
 
åì
 *

4676 
	$gim∂e_omp_∑øŒñ_d©a_¨g_±r
 (
gim∂e
 
gs
)

4678 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4679 
as_a
 <
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4680  &
omp_∑øŒñ_°mt
->
d©a_¨g
;

4681 
	}
}

4686 
ölöe
 

4687 
	$gim∂e_omp_∑øŒñ_£t_d©a_¨g
 (
gim∂e
 
gs
, 
åì
 
d©a_¨g
)

4689 
gim∂e_°©emít_omp_∑øŒñ
 *
omp_∑øŒñ_°mt
 =

4690 
as_a
 <
gim∂e_°©emít_omp_∑øŒñ
> (
gs
);

4691 
omp_∑øŒñ_°mt
->
d©a_¨g
 = data_arg;

4692 
	}
}

4697 
ölöe
 
åì


4698 
	$gim∂e_omp_èsk_˛au£s
 (
c⁄°_gim∂e
 
gs
)

4700 c⁄° 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4701 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èsk
> (
gs
);

4702  
omp_èsk_°mt
->
˛au£s
;

4703 
	}
}

4708 
ölöe
 
åì
 *

4709 
	$gim∂e_omp_èsk_˛au£s_±r
 (
gim∂e
 
gs
)

4711 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4712 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4713  &
omp_èsk_°mt
->
˛au£s
;

4714 
	}
}

4720 
ölöe
 

4721 
	$gim∂e_omp_èsk_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

4723 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4724 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4725 
omp_èsk_°mt
->
˛au£s
 = clauses;

4726 
	}
}

4731 
ölöe
 
åì


4732 
	$gim∂e_omp_èsk_chûd_‚
 (
c⁄°_gim∂e
 
gs
)

4734 c⁄° 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4735 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èsk
> (
gs
);

4736  
omp_èsk_°mt
->
chûd_‚
;

4737 
	}
}

4742 
ölöe
 
åì
 *

4743 
	$gim∂e_omp_èsk_chûd_‚_±r
 (
gim∂e
 
gs
)

4745 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4746 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4747  &
omp_èsk_°mt
->
chûd_‚
;

4748 
	}
}

4753 
ölöe
 

4754 
	$gim∂e_omp_èsk_£t_chûd_‚
 (
gim∂e
 
gs
, 
åì
 
chûd_‚
)

4756 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4757 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4758 
omp_èsk_°mt
->
chûd_‚
 = child_fn;

4759 
	}
}

4765 
ölöe
 
åì


4766 
	$gim∂e_omp_èsk_d©a_¨g
 (
c⁄°_gim∂e
 
gs
)

4768 c⁄° 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4769 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èsk
> (
gs
);

4770  
omp_èsk_°mt
->
d©a_¨g
;

4771 
	}
}

4776 
ölöe
 
åì
 *

4777 
	$gim∂e_omp_èsk_d©a_¨g_±r
 (
gim∂e
 
gs
)

4779 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4780 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4781  &
omp_èsk_°mt
->
d©a_¨g
;

4782 
	}
}

4787 
ölöe
 

4788 
	$gim∂e_omp_èsk_£t_d©a_¨g
 (
gim∂e
 
gs
, 
åì
 
d©a_¨g
)

4790 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4791 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4792 
omp_èsk_°mt
->
d©a_¨g
 = data_arg;

4793 
	}
}

4798 
ölöe
 
åì


4799 
	$gim∂e_omp_èskªg_˛au£s
 (
c⁄°_gim∂e
 
gs
)

4801 c⁄° 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4802 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èskªg
> (
gs
);

4803  
omp_èskªg_°mt
->
˛au£s
;

4804 
	}
}

4809 
ölöe
 
åì
 *

4810 
	$gim∂e_omp_èskªg_˛au£s_±r
 (
gim∂e
 
gs
)

4812 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4813 
as_a
 <
gim∂e_°©emít_omp_èskªg
> (
gs
);

4814  &
omp_èskªg_°mt
->
˛au£s
;

4815 
	}
}

4821 
ölöe
 

4822 
	$gim∂e_omp_èskªg_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

4824 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4825 
as_a
 <
gim∂e_°©emít_omp_èskªg
> (
gs
);

4826 
omp_èskªg_°mt
->
˛au£s
 = clauses;

4827 
	}
}

4832 
ölöe
 
åì


4833 
	$gim∂e_omp_èskªg_chûd_‚
 (
c⁄°_gim∂e
 
gs
)

4835 c⁄° 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4836 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èskªg
> (
gs
);

4837  
omp_èskªg_°mt
->
chûd_‚
;

4838 
	}
}

4843 
ölöe
 
åì
 *

4844 
	$gim∂e_omp_èskªg_chûd_‚_±r
 (
gim∂e
 
gs
)

4846 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4847 
as_a
 <
gim∂e_°©emít_omp_èskªg
> (
gs
);

4848  &
omp_èskªg_°mt
->
chûd_‚
;

4849 
	}
}

4854 
ölöe
 

4855 
	$gim∂e_omp_èskªg_£t_chûd_‚
 (
gim∂e
 
gs
, 
åì
 
chûd_‚
)

4857 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4858 
as_a
 <
gim∂e_°©emít_omp_èskªg
> (
gs
);

4859 
omp_èskªg_°mt
->
chûd_‚
 = child_fn;

4860 
	}
}

4866 
ölöe
 
åì


4867 
	$gim∂e_omp_èskªg_d©a_¨g
 (
c⁄°_gim∂e
 
gs
)

4869 c⁄° 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4870 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èskªg
> (
gs
);

4871  
omp_èskªg_°mt
->
d©a_¨g
;

4872 
	}
}

4877 
ölöe
 
åì
 *

4878 
	$gim∂e_omp_èskªg_d©a_¨g_±r
 (
gim∂e
 
gs
)

4880 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4881 
as_a
 <
gim∂e_°©emít_omp_èskªg
> (
gs
);

4882  &
omp_èskªg_°mt
->
d©a_¨g
;

4883 
	}
}

4888 
ölöe
 

4889 
	$gim∂e_omp_èskªg_£t_d©a_¨g
 (
gim∂e
 
gs
, 
åì
 
d©a_¨g
)

4891 
gim∂e_°©emít_omp_èskªg
 *
omp_èskªg_°mt
 =

4892 
as_a
 <
gim∂e_°©emít_omp_èskªg
> (
gs
);

4893 
omp_èskªg_°mt
->
d©a_¨g
 = data_arg;

4894 
	}
}

4899 
ölöe
 
åì


4900 
	$gim∂e_omp_èsk_c›y_‚
 (
c⁄°_gim∂e
 
gs
)

4902 c⁄° 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4903 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èsk
> (
gs
);

4904  
omp_èsk_°mt
->
c›y_‚
;

4905 
	}
}

4910 
ölöe
 
åì
 *

4911 
	$gim∂e_omp_èsk_c›y_‚_±r
 (
gim∂e
 
gs
)

4913 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4914 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4915  &
omp_èsk_°mt
->
c›y_‚
;

4916 
	}
}

4921 
ölöe
 

4922 
	$gim∂e_omp_èsk_£t_c›y_‚
 (
gim∂e
 
gs
, 
åì
 
c›y_‚
)

4924 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4925 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4926 
omp_èsk_°mt
->
c›y_‚
 = copy_fn;

4927 
	}
}

4932 
ölöe
 
åì


4933 
	$gim∂e_omp_èsk_¨g_size
 (
c⁄°_gim∂e
 
gs
)

4935 c⁄° 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4936 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èsk
> (
gs
);

4937  
omp_èsk_°mt
->
¨g_size
;

4938 
	}
}

4943 
ölöe
 
åì
 *

4944 
	$gim∂e_omp_èsk_¨g_size_±r
 (
gim∂e
 
gs
)

4946 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4947 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4948  &
omp_èsk_°mt
->
¨g_size
;

4949 
	}
}

4954 
ölöe
 

4955 
	$gim∂e_omp_èsk_£t_¨g_size
 (
gim∂e
 
gs
, 
åì
 
¨g_size
)

4957 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4958 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4959 
omp_èsk_°mt
->
¨g_size
 =árg_size;

4960 
	}
}

4965 
ölöe
 
åì


4966 
	$gim∂e_omp_èsk_¨g_Æign
 (
c⁄°_gim∂e
 
gs
)

4968 c⁄° 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4969 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èsk
> (
gs
);

4970  
omp_èsk_°mt
->
¨g_Æign
;

4971 
	}
}

4976 
ölöe
 
åì
 *

4977 
	$gim∂e_omp_èsk_¨g_Æign_±r
 (
gim∂e
 
gs
)

4979 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4980 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4981  &
omp_èsk_°mt
->
¨g_Æign
;

4982 
	}
}

4987 
ölöe
 

4988 
	$gim∂e_omp_èsk_£t_¨g_Æign
 (
gim∂e
 
gs
, 
åì
 
¨g_Æign
)

4990 
gim∂e_°©emít_omp_èsk
 *
omp_èsk_°mt
 =

4991 
as_a
 <
gim∂e_°©emít_omp_èsk
> (
gs
);

4992 
omp_èsk_°mt
->
¨g_Æign
 =árg_align;

4993 
	}
}

4998 
ölöe
 
åì


4999 
	$gim∂e_omp_sögÀ_˛au£s
 (
c⁄°_gim∂e
 
gs
)

5001 c⁄° 
gim∂e_°©emít_omp_sögÀ
 *
omp_sögÀ_°mt
 =

5002 
as_a
 <c⁄° 
gim∂e_°©emít_omp_sögÀ
> (
gs
);

5003  
omp_sögÀ_°mt
->
˛au£s
;

5004 
	}
}

5009 
ölöe
 
åì
 *

5010 
	$gim∂e_omp_sögÀ_˛au£s_±r
 (
gim∂e
 
gs
)

5012 
gim∂e_°©emít_omp_sögÀ
 *
omp_sögÀ_°mt
 =

5013 
as_a
 <
gim∂e_°©emít_omp_sögÀ
> (
gs
);

5014  &
omp_sögÀ_°mt
->
˛au£s
;

5015 
	}
}

5020 
ölöe
 

5021 
	$gim∂e_omp_sögÀ_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

5023 
gim∂e_°©emít_omp_sögÀ
 *
omp_sögÀ_°mt
 =

5024 
as_a
 <
gim∂e_°©emít_omp_sögÀ
> (
gs
);

5025 
omp_sögÀ_°mt
->
˛au£s
 = clauses;

5026 
	}
}

5031 
ölöe
 
åì


5032 
	$gim∂e_omp_èrgë_˛au£s
 (
c⁄°_gim∂e
 
gs
)

5034 c⁄° 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5035 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èrgë
> (
gs
);

5036  
omp_èrgë_°mt
->
˛au£s
;

5037 
	}
}

5042 
ölöe
 
åì
 *

5043 
	$gim∂e_omp_èrgë_˛au£s_±r
 (
gim∂e
 
gs
)

5045 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5046 
as_a
 <
gim∂e_°©emít_omp_èrgë
> (
gs
);

5047  &
omp_èrgë_°mt
->
˛au£s
;

5048 
	}
}

5053 
ölöe
 

5054 
	$gim∂e_omp_èrgë_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

5056 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5057 
as_a
 <
gim∂e_°©emít_omp_èrgë
> (
gs
);

5058 
omp_èrgë_°mt
->
˛au£s
 = clauses;

5059 
	}
}

5064 
ölöe
 

5065 
	$gim∂e_omp_èrgë_köd
 (
c⁄°_gim∂e
 
g
)

5067 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_TARGET
);

5068  (
	`gim∂e_omp_subcode
 (
g
Ë& 
GF_OMP_TARGET_KIND_MASK
);

5069 
	}
}

5074 
ölöe
 

5075 
	$gim∂e_omp_èrgë_£t_köd
 (
gim∂e
 
g
, 
köd
)

5077 
	`GIMPLE_CHECK
 (
g
, 
GIMPLE_OMP_TARGET
);

5078 
g
->
subcode
 = (g->subcodê& ~
GF_OMP_TARGET_KIND_MASK
)

5079 | (
köd
 & 
GF_OMP_TARGET_KIND_MASK
);

5080 
	}
}

5085 
ölöe
 
åì


5086 
	$gim∂e_omp_èrgë_chûd_‚
 (
c⁄°_gim∂e
 
gs
)

5088 c⁄° 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5089 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èrgë
> (
gs
);

5090  
omp_èrgë_°mt
->
chûd_‚
;

5091 
	}
}

5096 
ölöe
 
åì
 *

5097 
	$gim∂e_omp_èrgë_chûd_‚_±r
 (
gim∂e
 
gs
)

5099 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5100 
as_a
 <
gim∂e_°©emít_omp_èrgë
> (
gs
);

5101  &
omp_èrgë_°mt
->
chûd_‚
;

5102 
	}
}

5107 
ölöe
 

5108 
	$gim∂e_omp_èrgë_£t_chûd_‚
 (
gim∂e
 
gs
, 
åì
 
chûd_‚
)

5110 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5111 
as_a
 <
gim∂e_°©emít_omp_èrgë
> (
gs
);

5112 
omp_èrgë_°mt
->
chûd_‚
 = child_fn;

5113 
	}
}

5119 
ölöe
 
åì


5120 
	$gim∂e_omp_èrgë_d©a_¨g
 (
c⁄°_gim∂e
 
gs
)

5122 c⁄° 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5123 
as_a
 <c⁄° 
gim∂e_°©emít_omp_èrgë
> (
gs
);

5124  
omp_èrgë_°mt
->
d©a_¨g
;

5125 
	}
}

5130 
ölöe
 
åì
 *

5131 
	$gim∂e_omp_èrgë_d©a_¨g_±r
 (
gim∂e
 
gs
)

5133 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5134 
as_a
 <
gim∂e_°©emít_omp_èrgë
> (
gs
);

5135  &
omp_èrgë_°mt
->
d©a_¨g
;

5136 
	}
}

5141 
ölöe
 

5142 
	$gim∂e_omp_èrgë_£t_d©a_¨g
 (
gim∂e
 
gs
, 
åì
 
d©a_¨g
)

5144 
gim∂e_°©emít_omp_èrgë
 *
omp_èrgë_°mt
 =

5145 
as_a
 <
gim∂e_°©emít_omp_èrgë
> (
gs
);

5146 
omp_èrgë_°mt
->
d©a_¨g
 = data_arg;

5147 
	}
}

5152 
ölöe
 
åì


5153 
	$gim∂e_omp_ãams_˛au£s
 (
c⁄°_gim∂e
 
gs
)

5155 c⁄° 
gim∂e_°©emít_omp_ãams
 *
omp_ãams_°mt
 =

5156 
as_a
 <c⁄° 
gim∂e_°©emít_omp_ãams
> (
gs
);

5157  
omp_ãams_°mt
->
˛au£s
;

5158 
	}
}

5163 
ölöe
 
åì
 *

5164 
	$gim∂e_omp_ãams_˛au£s_±r
 (
gim∂e
 
gs
)

5166 
gim∂e_°©emít_omp_ãams
 *
omp_ãams_°mt
 =

5167 
as_a
 <
gim∂e_°©emít_omp_ãams
> (
gs
);

5168  &
omp_ãams_°mt
->
˛au£s
;

5169 
	}
}

5174 
ölöe
 

5175 
	$gim∂e_omp_ãams_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

5177 
gim∂e_°©emít_omp_ãams
 *
omp_ãams_°mt
 =

5178 
as_a
 <
gim∂e_°©emít_omp_ãams
> (
gs
);

5179 
omp_ãams_°mt
->
˛au£s
 = clauses;

5180 
	}
}

5185 
ölöe
 
åì


5186 
	$gim∂e_omp_£˘i⁄s_˛au£s
 (
c⁄°_gim∂e
 
gs
)

5188 c⁄° 
gim∂e_°©emít_omp_£˘i⁄s
 *
omp_£˘i⁄s_°mt
 =

5189 
as_a
 <c⁄° 
gim∂e_°©emít_omp_£˘i⁄s
> (
gs
);

5190  
omp_£˘i⁄s_°mt
->
˛au£s
;

5191 
	}
}

5196 
ölöe
 
åì
 *

5197 
	$gim∂e_omp_£˘i⁄s_˛au£s_±r
 (
gim∂e
 
gs
)

5199 
gim∂e_°©emít_omp_£˘i⁄s
 *
omp_£˘i⁄s_°mt
 =

5200 
as_a
 <
gim∂e_°©emít_omp_£˘i⁄s
> (
gs
);

5201  &
omp_£˘i⁄s_°mt
->
˛au£s
;

5202 
	}
}

5208 
ölöe
 

5209 
	$gim∂e_omp_£˘i⁄s_£t_˛au£s
 (
gim∂e
 
gs
, 
åì
 
˛au£s
)

5211 
gim∂e_°©emít_omp_£˘i⁄s
 *
omp_£˘i⁄s_°mt
 =

5212 
as_a
 <
gim∂e_°©emít_omp_£˘i⁄s
> (
gs
);

5213 
omp_£˘i⁄s_°mt
->
˛au£s
 = clauses;

5214 
	}
}

5220 
ölöe
 
åì


5221 
	$gim∂e_omp_£˘i⁄s_c⁄åﬁ
 (
c⁄°_gim∂e
 
gs
)

5223 c⁄° 
gim∂e_°©emít_omp_£˘i⁄s
 *
omp_£˘i⁄s_°mt
 =

5224 
as_a
 <c⁄° 
gim∂e_°©emít_omp_£˘i⁄s
> (
gs
);

5225  
omp_£˘i⁄s_°mt
->
c⁄åﬁ
;

5226 
	}
}

5232 
ölöe
 
åì
 *

5233 
	$gim∂e_omp_£˘i⁄s_c⁄åﬁ_±r
 (
gim∂e
 
gs
)

5235 
gim∂e_°©emít_omp_£˘i⁄s
 *
omp_£˘i⁄s_°mt
 =

5236 
as_a
 <
gim∂e_°©emít_omp_£˘i⁄s
> (
gs
);

5237  &
omp_£˘i⁄s_°mt
->
c⁄åﬁ
;

5238 
	}
}

5244 
ölöe
 

5245 
	$gim∂e_omp_£˘i⁄s_£t_c⁄åﬁ
 (
gim∂e
 
gs
, 
åì
 
c⁄åﬁ
)

5247 
gim∂e_°©emít_omp_£˘i⁄s
 *
omp_£˘i⁄s_°mt
 =

5248 
as_a
 <
gim∂e_°©emít_omp_£˘i⁄s
> (
gs
);

5249 
omp_£˘i⁄s_°mt
->
c⁄åﬁ
 = control;

5250 
	}
}

5255 
ölöe
 

5256 
	$gim∂e_omp_f‹_£t_c⁄d
 (
gim∂e
 
gs
, 
size_t
 
i
, 
åì_code
 
c⁄d
)

5258 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

5259 
as_a
 <
gim∂e_°©emít_omp_f‹
> (
gs
);

5260 
	`gcc_gim∂e_checkög_as£π
 (
	`TREE_CODE_CLASS
 (
c⁄d
Ë=
tcc_com∑ris⁄


5261 && 
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

5262 
omp_f‹_°mt
->
ôî
[
i
].
c⁄d
 = cond;

5263 
	}
}

5268 
ölöe
 
åì_code


5269 
	$gim∂e_omp_f‹_c⁄d
 (
c⁄°_gim∂e
 
gs
, 
size_t
 
i
)

5271 c⁄° 
gim∂e_°©emít_omp_f‹
 *
omp_f‹_°mt
 =

5272 
as_a
 <c⁄° 
gim∂e_°©emít_omp_f‹
> (
gs
);

5273 
	`gcc_gim∂e_checkög_as£π
 (
i
 < 
omp_f‹_°mt
->
cﬁœp£
);

5274  
omp_f‹_°mt
->
ôî
[
i
].
c⁄d
;

5275 
	}
}

5280 
ölöe
 

5281 
	$gim∂e_omp_©omic_°‹e_£t_vÆ
 (
gim∂e
 
g
, 
åì
 
vÆ
)

5283 
gim∂e_°©emít_omp_©omic_°‹e
 *
omp_©omic_°‹e_°mt
 =

5284 
as_a
 <
gim∂e_°©emít_omp_©omic_°‹e
> (
g
);

5285 
omp_©omic_°‹e_°mt
->
vÆ
 = val;

5286 
	}
}

5291 
ölöe
 
åì


5292 
	$gim∂e_omp_©omic_°‹e_vÆ
 (
c⁄°_gim∂e
 
g
)

5294 c⁄° 
gim∂e_°©emít_omp_©omic_°‹e
 *
omp_©omic_°‹e_°mt
 =

5295 
as_a
 <c⁄° 
gim∂e_°©emít_omp_©omic_°‹e
> (
g
);

5296  
omp_©omic_°‹e_°mt
->
vÆ
;

5297 
	}
}

5302 
ölöe
 
åì
 *

5303 
	$gim∂e_omp_©omic_°‹e_vÆ_±r
 (
gim∂e
 
g
)

5305 
gim∂e_°©emít_omp_©omic_°‹e
 *
omp_©omic_°‹e_°mt
 =

5306 
as_a
 <
gim∂e_°©emít_omp_©omic_°‹e
> (
g
);

5307  &
omp_©omic_°‹e_°mt
->
vÆ
;

5308 
	}
}

5313 
ölöe
 

5314 
	$gim∂e_omp_©omic_lﬂd_£t_lhs
 (
gim∂e
 
g
, 
åì
 
lhs
)

5316 
gim∂e_°©emít_omp_©omic_lﬂd
 *
omp_©omic_lﬂd_°mt
 =

5317 
as_a
 <
gim∂e_°©emít_omp_©omic_lﬂd
> (
g
);

5318 
omp_©omic_lﬂd_°mt
->
lhs
 =Ühs;

5319 
	}
}

5324 
ölöe
 
åì


5325 
	$gim∂e_omp_©omic_lﬂd_lhs
 (
c⁄°_gim∂e
 
g
)

5327 c⁄° 
gim∂e_°©emít_omp_©omic_lﬂd
 *
omp_©omic_lﬂd_°mt
 =

5328 
as_a
 <c⁄° 
gim∂e_°©emít_omp_©omic_lﬂd
> (
g
);

5329  
omp_©omic_lﬂd_°mt
->
lhs
;

5330 
	}
}

5335 
ölöe
 
åì
 *

5336 
	$gim∂e_omp_©omic_lﬂd_lhs_±r
 (
gim∂e
 
g
)

5338 
gim∂e_°©emít_omp_©omic_lﬂd
 *
omp_©omic_lﬂd_°mt
 =

5339 
as_a
 <
gim∂e_°©emít_omp_©omic_lﬂd
> (
g
);

5340  &
omp_©omic_lﬂd_°mt
->
lhs
;

5341 
	}
}

5346 
ölöe
 

5347 
	$gim∂e_omp_©omic_lﬂd_£t_rhs
 (
gim∂e
 
g
, 
åì
 
rhs
)

5349 
gim∂e_°©emít_omp_©omic_lﬂd
 *
omp_©omic_lﬂd_°mt
 =

5350 
as_a
 <
gim∂e_°©emít_omp_©omic_lﬂd
> (
g
);

5351 
omp_©omic_lﬂd_°mt
->
rhs
 =Ñhs;

5352 
	}
}

5357 
ölöe
 
åì


5358 
	$gim∂e_omp_©omic_lﬂd_rhs
 (
c⁄°_gim∂e
 
g
)

5360 c⁄° 
gim∂e_°©emít_omp_©omic_lﬂd
 *
omp_©omic_lﬂd_°mt
 =

5361 
as_a
 <c⁄° 
gim∂e_°©emít_omp_©omic_lﬂd
> (
g
);

5362  
omp_©omic_lﬂd_°mt
->
rhs
;

5363 
	}
}

5368 
ölöe
 
åì
 *

5369 
	$gim∂e_omp_©omic_lﬂd_rhs_±r
 (
gim∂e
 
g
)

5371 
gim∂e_°©emít_omp_©omic_lﬂd
 *
omp_©omic_lﬂd_°mt
 =

5372 
as_a
 <
gim∂e_°©emít_omp_©omic_lﬂd
> (
g
);

5373  &
omp_©omic_lﬂd_°mt
->
rhs
;

5374 
	}
}

5379 
ölöe
 
åì


5380 
	$gim∂e_omp_c⁄töue_c⁄åﬁ_def
 (
c⁄°_gim∂e
 
g
)

5382 c⁄° 
gim∂e_°©emít_omp_c⁄töue
 *
omp_c⁄töue_°mt
 =

5383 
as_a
 <c⁄° 
gim∂e_°©emít_omp_c⁄töue
> (
g
);

5384  
omp_c⁄töue_°mt
->
c⁄åﬁ_def
;

5385 
	}
}

5389 
ölöe
 
åì
 *

5390 
	$gim∂e_omp_c⁄töue_c⁄åﬁ_def_±r
 (
gim∂e
 
g
)

5392 
gim∂e_°©emít_omp_c⁄töue
 *
omp_c⁄töue_°mt
 =

5393 
as_a
 <
gim∂e_°©emít_omp_c⁄töue
> (
g
);

5394  &
omp_c⁄töue_°mt
->
c⁄åﬁ_def
;

5395 
	}
}

5399 
ölöe
 

5400 
	$gim∂e_omp_c⁄töue_£t_c⁄åﬁ_def
 (
gim∂e
 
g
, 
åì
 
def
)

5402 
gim∂e_°©emít_omp_c⁄töue
 *
omp_c⁄töue_°mt
 =

5403 
as_a
 <
gim∂e_°©emít_omp_c⁄töue
> (
g
);

5404 
omp_c⁄töue_°mt
->
c⁄åﬁ_def
 = 
def
;

5405 
	}
}

5410 
ölöe
 
åì


5411 
	$gim∂e_omp_c⁄töue_c⁄åﬁ_u£
 (
c⁄°_gim∂e
 
g
)

5413 c⁄° 
gim∂e_°©emít_omp_c⁄töue
 *
omp_c⁄töue_°mt
 =

5414 
as_a
 <c⁄° 
gim∂e_°©emít_omp_c⁄töue
> (
g
);

5415  
omp_c⁄töue_°mt
->
c⁄åﬁ_u£
;

5416 
	}
}

5421 
ölöe
 
åì
 *

5422 
	$gim∂e_omp_c⁄töue_c⁄åﬁ_u£_±r
 (
gim∂e
 
g
)

5424 
gim∂e_°©emít_omp_c⁄töue
 *
omp_c⁄töue_°mt
 =

5425 
as_a
 <
gim∂e_°©emít_omp_c⁄töue
> (
g
);

5426  &
omp_c⁄töue_°mt
->
c⁄åﬁ_u£
;

5427 
	}
}

5432 
ölöe
 

5433 
	$gim∂e_omp_c⁄töue_£t_c⁄åﬁ_u£
 (
gim∂e
 
g
, 
åì
 
u£
)

5435 
gim∂e_°©emít_omp_c⁄töue
 *
omp_c⁄töue_°mt
 =

5436 
as_a
 <
gim∂e_°©emít_omp_c⁄töue
> (
g
);

5437 
omp_c⁄töue_°mt
->
c⁄åﬁ_u£
 = 
u£
;

5438 
	}
}

5442 
ölöe
 
gim∂e_£q
 *

5443 
	$gim∂e_å™ß˘i⁄_body_±r
 (
gim∂e
 
gs
)

5445 
gim∂e_°©emít_å™ß˘i⁄
 *
å™ß˘i⁄_°mt
 =

5446 
as_a
 <
gim∂e_°©emít_å™ß˘i⁄
> (
gs
);

5447  &
å™ß˘i⁄_°mt
->
body
;

5448 
	}
}

5452 
ölöe
 
gim∂e_£q


5453 
	$gim∂e_å™ß˘i⁄_body
 (
gim∂e
 
gs
)

5455  *
	`gim∂e_å™ß˘i⁄_body_±r
 (
gs
);

5456 
	}
}

5460 
ölöe
 
åì


5461 
	$gim∂e_å™ß˘i⁄_œbñ
 (
c⁄°_gim∂e
 
gs
)

5463 c⁄° 
gim∂e_°©emít_å™ß˘i⁄
 *
å™ß˘i⁄_°mt
 =

5464 
as_a
 <c⁄° 
gim∂e_°©emít_å™ß˘i⁄
> (
gs
);

5465  
å™ß˘i⁄_°mt
->
œbñ
;

5466 
	}
}

5468 
ölöe
 
åì
 *

5469 
	$gim∂e_å™ß˘i⁄_œbñ_±r
 (
gim∂e
 
gs
)

5471 
gim∂e_°©emít_å™ß˘i⁄
 *
å™ß˘i⁄_°mt
 =

5472 
as_a
 <
gim∂e_°©emít_å™ß˘i⁄
> (
gs
);

5473  &
å™ß˘i⁄_°mt
->
œbñ
;

5474 
	}
}

5478 
ölöe
 

5479 
	$gim∂e_å™ß˘i⁄_subcode
 (
c⁄°_gim∂e
 
gs
)

5481 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_TRANSACTION
);

5482  
gs
->
subcode
;

5483 
	}
}

5487 
ölöe
 

5488 
	$gim∂e_å™ß˘i⁄_£t_body
 (
gim∂e
 
gs
, 
gim∂e_£q
 
body
)

5490 
gim∂e_°©emít_å™ß˘i⁄
 *
å™ß˘i⁄_°mt
 =

5491 
as_a
 <
gim∂e_°©emít_å™ß˘i⁄
> (
gs
);

5492 
å™ß˘i⁄_°mt
->
body
 = body;

5493 
	}
}

5497 
ölöe
 

5498 
	$gim∂e_å™ß˘i⁄_£t_œbñ
 (
gim∂e
 
gs
, 
åì
 
œbñ
)

5500 
gim∂e_°©emít_å™ß˘i⁄
 *
å™ß˘i⁄_°mt
 =

5501 
as_a
 <
gim∂e_°©emít_å™ß˘i⁄
> (
gs
);

5502 
å™ß˘i⁄_°mt
->
œbñ
 =Üabel;

5503 
	}
}

5507 
ölöe
 

5508 
	$gim∂e_å™ß˘i⁄_£t_subcode
 (
gim∂e
 
gs
, 
subcode
)

5510 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_TRANSACTION
);

5511 
gs
->
subcode
 = subcode;

5512 
	}
}

5517 
ölöe
 
åì
 *

5518 
	$gim∂e_ªtu∫_ªtvÆ_±r
 (
c⁄°_gim∂e
 
gs
)

5520 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_RETURN
);

5521  
	`gim∂e_›_±r
 (
gs
, 0);

5522 
	}
}

5526 
ölöe
 
åì


5527 
	$gim∂e_ªtu∫_ªtvÆ
 (
c⁄°_gim∂e
 
gs
)

5529 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_RETURN
);

5530  
	`gim∂e_›
 (
gs
, 0);

5531 
	}
}

5536 
ölöe
 

5537 
	$gim∂e_ªtu∫_£t_ªtvÆ
 (
gim∂e
 
gs
, 
åì
 
ªtvÆ
)

5539 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_RETURN
);

5540 
	`gim∂e_£t_›
 (
gs
, 0, 
ªtvÆ
);

5541 
	}
}

5546 
	#CASE_GIMPLE_OMP
 \

5547 
GIMPLE_OMP_PARALLEL
: \

5548 
GIMPLE_OMP_TASK
: \

5549 
GIMPLE_OMP_FOR
: \

5550 
GIMPLE_OMP_SECTIONS
: \

5551 
GIMPLE_OMP_SECTIONS_SWITCH
: \

5552 
GIMPLE_OMP_SINGLE
: \

5553 
GIMPLE_OMP_TARGET
: \

5554 
GIMPLE_OMP_TEAMS
: \

5555 
GIMPLE_OMP_SECTION
: \

5556 
GIMPLE_OMP_MASTER
: \

5557 
GIMPLE_OMP_TASKGROUP
: \

5558 
GIMPLE_OMP_ORDERED
: \

5559 
GIMPLE_OMP_CRITICAL
: \

5560 
GIMPLE_OMP_RETURN
: \

5561 
GIMPLE_OMP_ATOMIC_LOAD
: \

5562 
GIMPLE_OMP_ATOMIC_STORE
: \

5563 
GIMPLE_OMP_CONTINUE


	)

5565 
ölöe
 
boﬁ


5566 
	$is_gim∂e_omp
 (
c⁄°_gim∂e
 
°mt
)

5568 
	`gim∂e_code
 (
°mt
))

5570 
CASE_GIMPLE_OMP
:

5571  
åue
;

5573  
Ál£
;

5575 
	}
}

5580 
ölöe
 
boﬁ


5581 
	$gim∂e_n›_p
 (
c⁄°_gim∂e
 
g
)

5583  
	`gim∂e_code
 (
g
Ë=
GIMPLE_NOP
;

5584 
	}
}

5589 
ölöe
 
boﬁ


5590 
	$is_gim∂e_ªsx
 (
c⁄°_gim∂e
 
gs
)

5592  
	`gim∂e_code
 (
gs
Ë=
GIMPLE_RESX
;

5593 
	}
}

5597 
ölöe
 
br_¥edi˘‹


5598 
	$gim∂e_¥edi˘_¥edi˘‹
 (
gim∂e
 
gs
)

5600 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_PREDICT
);

5601  (
br_¥edi˘‹
Ë(
gs
->
subcode
 & ~
GF_PREDICT_TAKEN
);

5602 
	}
}

5607 
ölöe
 

5608 
	$gim∂e_¥edi˘_£t_¥edi˘‹
 (
gim∂e
 
gs
, 
br_¥edi˘‹
 
¥edi˘‹
)

5610 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_PREDICT
);

5611 
gs
->
subcode
 = (gs->subcodê& 
GF_PREDICT_TAKEN
)

5612 | (Ë
¥edi˘‹
;

5613 
	}
}

5618 
ölöe
 
¥edi˘i⁄


5619 
	$gim∂e_¥edi˘_outcome
 (
gim∂e
 
gs
)

5621 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_PREDICT
);

5622  (
gs
->
subcode
 & 
GF_PREDICT_TAKEN
Ë? 
TAKEN
 : 
NOT_TAKEN
;

5623 
	}
}

5628 
ölöe
 

5629 
	$gim∂e_¥edi˘_£t_outcome
 (
gim∂e
 
gs
, 
¥edi˘i⁄
 
outcome
)

5631 
	`GIMPLE_CHECK
 (
gs
, 
GIMPLE_PREDICT
);

5632 i‡(
outcome
 =
TAKEN
)

5633 
gs
->
subcode
 |
GF_PREDICT_TAKEN
;

5635 
gs
->
subcode
 &~
GF_PREDICT_TAKEN
;

5636 
	}
}

5642 
ölöe
 
åì


5643 
	$gim∂e_ex¥_ty≥
 (
c⁄°_gim∂e
 
°mt
)

5645 
gim∂e_code
 
code
 = 
	`gim∂e_code
 (
°mt
);

5647 i‡(
code
 =
GIMPLE_ASSIGN
 || codê=
GIMPLE_CALL
)

5649 
åì
 
ty≥
;

5654 i‡(
code
 =
GIMPLE_CALL
)

5656 i‡(
	`gim∂e_ˇŒ_öã∫Æ_p
 (
°mt
)

5657 && 
	`gim∂e_ˇŒ_öã∫Æ_‚
 (
°mt
Ë=
IFN_MASK_STORE
)

5658 
ty≥
 = 
	`TREE_TYPE
 (
	`gim∂e_ˇŒ_¨g
 (
°mt
, 3));

5660 
ty≥
 = 
	`gim∂e_ˇŒ_ªtu∫_ty≥
 (
°mt
);

5663 
	`gim∂e_assign_rhs_code
 (
°mt
))

5665 
POINTER_PLUS_EXPR
:

5666 
ty≥
 = 
	`TREE_TYPE
 (
	`gim∂e_assign_rhs1
 (
°mt
));

5671 
ty≥
 = 
	`TREE_TYPE
 (
	`gim∂e_gë_lhs
 (
°mt
));

5674  
ty≥
;

5676 i‡(
code
 =
GIMPLE_COND
)

5677  
boﬁón_ty≥_node
;

5679  
void_ty≥_node
;

5680 
	}
}

5684 
	egim∂e_Æloc_köd


5686 
	mgim∂e_Æloc_köd_assign
,

5687 
	mgim∂e_Æloc_köd_phi
,

5688 
	mgim∂e_Æloc_köd_c⁄d
,

5689 
	mgim∂e_Æloc_köd_ª°
,

5690 
	mgim∂e_Æloc_köd_Æl


5693 
gim∂e_Æloc_cou¡s
[];

5694 
gim∂e_Æloc_sizes
[];

5697 
ölöe
 
gim∂e_Æloc_köd


5698 
	$gim∂e_Æloc_köd
 (
gim∂e_code
 
code
)

5700 
code
)

5702 
GIMPLE_ASSIGN
:

5703  
gim∂e_Æloc_köd_assign
;

5704 
GIMPLE_PHI
:

5705  
gim∂e_Æloc_köd_phi
;

5706 
GIMPLE_COND
:

5707  
gim∂e_Æloc_köd_c⁄d
;

5709  
gim∂e_Æloc_köd_ª°
;

5711 
	}
}

5716 
ölöe
 
boﬁ


5717 
	$gim∂e_do_nŸ_emô_loˇti⁄_p
 (
gim∂e
 
g
)

5719  
	`gim∂e_∂f
 (
g
, 
GF_PLF_1
);

5720 
	}
}

5725 
ölöe
 

5726 
	$gim∂e_£t_do_nŸ_emô_loˇti⁄
 (
gim∂e
 
g
)

5730 
	`gim∂e_£t_∂f
 (
g
, 
GF_PLF_1
, 
åue
);

5731 
	}
}

5735 
	#SCALE
(
x
) (() ((x) < 1024*10 \

5736 ? (
x
) \

5737 : ((
x
) < 1024*1024*10 \

5738 ? (
x
) / 1024 \

5739 : (
x
Ë/ (1024*1024))))

	)

5741 
	#LABEL
(
x
Ë((xË< 1024*10 ? 'b' : ((xË< 1024*1024*10 ? 'k' : 'M'))

	)

	@include/gimplify-me.h

20 #i‚de‡
GCC_GIMPLIFY_ME_H


21 
	#GCC_GIMPLIFY_ME_H


	)

26 
	$boﬁ
 (*
	tgim∂e_¥ediˇã
)(
	tåì
);

28 
åì
 
	`f‹˚_gim∂e_›î™d_1
 (åì, 
gim∂e_£q
 *, 
gim∂e_¥ediˇã
,Åree);

29 
åì
 
	`f‹˚_gim∂e_›î™d
 (åì, 
gim∂e_£q
 *, 
boﬁ
,Åree);

30 
åì
 
	`f‹˚_gim∂e_›î™d_gsi_1
 (
gim∂e_°mt_ôî©‹
 *,Åree,

31 
gim∂e_¥ediˇã
, 
åì
,

32 
boﬁ
, 
gsi_ôî©‹_upd©e
);

33 
åì
 
	`f‹˚_gim∂e_›î™d_gsi
 (
gim∂e_°mt_ôî©‹
 *,Åªe, 
boﬁ
,Åree,

34 
boﬁ
, 
gsi_ôî©‹_upd©e
);

35 
	`gim∂e_ªgim∂ify_›î™ds
 (
gim∂e
, 
gim∂e_°mt_ôî©‹
 *);

	@include/gimplify.h

20 #i‚de‡
GCC_GIMPLIFY_H


21 
	#GCC_GIMPLIFY_H


	)

26 
	$boﬁ
 (*
	tgim∂e_¥ediˇã
)(
	tåì
);

29 
	eÁŒback
 {

30 
fb_n⁄e
 = 0,

32 
fb_rvÆue
 = 1,

35 
fb_lvÆue
 = 2,

38 
fb_mayÁû
 = 4,

40 
fb_eôhî

fb_rvÆue
 | 
fb_lvÆue


43 
	tÁŒback_t
;

45 
	egim∂ify_°©us
 {

46 
GS_ERROR
 = -2,

47 
GS_UNHANDLED
 = -1,

48 
GS_OK
 = 0,

49 
GS_ALL_DONE
 = 1

52 
	`‰ì_gim∂ify_°ack
 ();

53 
	`push_gim∂ify_c⁄ãxt
 (
boﬁ
 
ö_sß
 = 
Ál£
,

54 
boﬁ
 
rhs_c⁄d_ok
 = 
Ál£
);

55 
	`p›_gim∂ify_c⁄ãxt
 (
gim∂e
);

56 
gim∂e
 
	`gim∂e_cuºít_böd_ex¥
 ();

57 
vec
<
gim∂e
> 
	`gim∂e_böd_ex¥_°ack
 ();

58 
	`gim∂ify_™d_add
 (
åì
, 
gim∂e_£q
 *);

59 
åì
 
	`gë_f‹mÆ_tmp_v¨
 (åì, 
gim∂e_£q
 *);

60 
åì
 
	`gë_öôülized_tmp_v¨
 (åì, 
gim∂e_£q
 *, gimple_seq *);

61 
	`de˛¨e_v¨s
 (
åì
, 
gim∂e
, 
boﬁ
);

62 
	`gim∂e_add_tmp_v¨
 (
åì
);

63 
	`gim∂e_add_tmp_v¨_‚
 (
fun˘i⁄
 *, 
åì
);

64 
åì
 
	`unsh¨e_ex¥
 (tree);

65 
åì
 
	`unsh¨e_ex¥_wôhout_loˇti⁄
 (tree);

66 
åì
 
	`voidify_wøµî_ex¥
 (tree,Åree);

67 
åì
 
	`buûd_™d_jump
 (tree *);

68 
gim∂ify_°©us
 
	`gim∂ify_£lf_mod_ex¥
 (
åì
 *, 
gim∂e_£q
 *,

69 
gim∂e_£q
 *, 
boﬁ
, 
åì
);

70 
åì
 
	`gim∂e_boﬁify
 (tree);

71 
gim∂e_¥ediˇã
 
	`rhs_¥ediˇã_f‹
 (
åì
);

72 
boﬁ
 
	`gim∂ify_°mt
 (
åì
 *, 
gim∂e_£q
 *);

73 
	`omp_fú°¥iv©ize_v¨übÀ
 (
gim∂ify_omp_˘x
 *, 
åì
);

74 
gim∂ify_°©us
 
	`gim∂ify_ex¥
 (
åì
 *, 
gim∂e_£q
 *, gimple_seq *,

75 
	$boﬁ
 (*Ë(
åì
), 
ÁŒback_t
);

77 
	`gim∂ify_ty≥_sizes
 (
åì
, 
gim∂e_£q
 *);

78 
	`gim∂ify_⁄e_sizïos
 (
åì
 *, 
gim∂e_£q
 *);

79 
gim∂e
 
	`gim∂ify_body
 (
åì
, 
boﬁ
);

80 
gim∂ify_°©us
 
	`gim∂ify_¨g
 (
åì
 *, 
gim∂e_£q
 *, 
loˇti⁄_t
);

81 
	`gim∂ify_fun˘i⁄_åì
 (
åì
);

82 
gim∂ify_°©us
 
	`gim∂ify_va_¨g_ex¥
 (
åì
 *, 
gim∂e_£q
 *,

83 
gim∂e_£q
 *);

84 
gim∂e
 
	`gim∂ify_assign
 (
åì
,Åªe, 
gim∂e_£q
 *);

90 
ölöe
 
boﬁ


91 
	$is_gim∂e_sizïos
 (
åì
 
ex¥
)

99  (
ex¥
 =
NULL_TREE


100 || 
	`TREE_CONSTANT
 (
ex¥
)

101 || 
	`TREE_CODE
 (
ex¥
Ë=
VAR_DECL


102 || 
	`CONTAINS_PLACEHOLDER_P
 (
ex¥
));

103 
	}
}

	@include/gtype-desc.h

24 
	#ggc_Æloc_vec_iv¨ªf_íåy_va_gc_
(Ë((
vec
<
iv¨ªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<iv¨ªf_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

25 
	#ggc_Æloc_˛óªd_vec_iv¨ªf_íåy_va_gc_
(Ë((
vec
<
iv¨ªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<iv¨ªf_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

26 
	#ggc_Æloc_vec_vec_iv¨ªf_íåy_va_gc_
(
n
Ë((
vec
<
iv¨ªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<iv¨ªf_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

27 
	#ggc_Æloc_˛óªd_vec_vec_iv¨ªf_íåy_va_gc_
(
n
Ë((
vec
<
iv¨ªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<iv¨ªf_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

28 
	#ggc_Æloc_iv¨ªf_íåy
(Ë((
iv¨ªf_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (iv¨ªf_íåyË
MEM_STAT_INFO
)))

	)

29 
	#ggc_Æloc_˛óªd_iv¨ªf_íåy
(Ë((
iv¨ªf_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (iv¨ªf_íåyË
MEM_STAT_INFO
)))

	)

30 
	#ggc_Æloc_vec_iv¨ªf_íåy
(
n
Ë((
iv¨ªf_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (iv¨ªf_íåy),Ç 
MEM_STAT_INFO
)))

	)

31 
	#ggc_Æloc_˛óªd_vec_iv¨ªf_íåy
(
n
Ë((
iv¨ªf_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (iv¨ªf_íåy),Ç 
MEM_STAT_INFO
)))

	)

32 
	#ggc_Æloc_vec_¥Ÿ_li°_íåy_va_gc_
(Ë((
vec
<
¥Ÿ_li°_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<¥Ÿ_li°_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

33 
	#ggc_Æloc_˛óªd_vec_¥Ÿ_li°_íåy_va_gc_
(Ë((
vec
<
¥Ÿ_li°_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<¥Ÿ_li°_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

34 
	#ggc_Æloc_vec_vec_¥Ÿ_li°_íåy_va_gc_
(
n
Ë((
vec
<
¥Ÿ_li°_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<¥Ÿ_li°_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

35 
	#ggc_Æloc_˛óªd_vec_vec_¥Ÿ_li°_íåy_va_gc_
(
n
Ë((
vec
<
¥Ÿ_li°_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<¥Ÿ_li°_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

36 
	#ggc_Æloc_¥Ÿ_li°_íåy
(Ë((
¥Ÿ_li°_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (¥Ÿ_li°_íåyË
MEM_STAT_INFO
)))

	)

37 
	#ggc_Æloc_˛óªd_¥Ÿ_li°_íåy
(Ë((
¥Ÿ_li°_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (¥Ÿ_li°_íåyË
MEM_STAT_INFO
)))

	)

38 
	#ggc_Æloc_vec_¥Ÿ_li°_íåy
(
n
Ë((
¥Ÿ_li°_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (¥Ÿ_li°_íåy),Ç 
MEM_STAT_INFO
)))

	)

39 
	#ggc_Æloc_˛óªd_vec_¥Ÿ_li°_íåy
(
n
Ë((
¥Ÿ_li°_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (¥Ÿ_li°_íåy),Ç 
MEM_STAT_INFO
)))

	)

40 
	#ggc_Æloc_vec_msgªf_íåy_va_gc_
(Ë((
vec
<
msgªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<msgªf_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

41 
	#ggc_Æloc_˛óªd_vec_msgªf_íåy_va_gc_
(Ë((
vec
<
msgªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<msgªf_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

42 
	#ggc_Æloc_vec_vec_msgªf_íåy_va_gc_
(
n
Ë((
vec
<
msgªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<msgªf_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

43 
	#ggc_Æloc_˛óªd_vec_vec_msgªf_íåy_va_gc_
(
n
Ë((
vec
<
msgªf_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<msgªf_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

44 
	#ggc_Æloc_msgªf_íåy
(Ë((
msgªf_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (msgªf_íåyË
MEM_STAT_INFO
)))

	)

45 
	#ggc_Æloc_˛óªd_msgªf_íåy
(Ë((
msgªf_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (msgªf_íåyË
MEM_STAT_INFO
)))

	)

46 
	#ggc_Æloc_vec_msgªf_íåy
(
n
Ë((
msgªf_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (msgªf_íåy),Ç 
MEM_STAT_INFO
)))

	)

47 
	#ggc_Æloc_˛óªd_vec_msgªf_íåy
(
n
Ë((
msgªf_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (msgªf_íåy),Ç 
MEM_STAT_INFO
)))

	)

48 
	#ggc_Æloc_vec_idít_d©a_tu∂e_va_gc_
(Ë((
vec
<
idít_d©a_tu∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<idít_d©a_tu∂e,va_gc>Ë
MEM_STAT_INFO
)))

	)

49 
	#ggc_Æloc_˛óªd_vec_idít_d©a_tu∂e_va_gc_
(Ë((
vec
<
idít_d©a_tu∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<idít_d©a_tu∂e,va_gc>Ë
MEM_STAT_INFO
)))

	)

50 
	#ggc_Æloc_vec_vec_idít_d©a_tu∂e_va_gc_
(
n
Ë((
vec
<
idít_d©a_tu∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<idít_d©a_tu∂e,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

51 
	#ggc_Æloc_˛óªd_vec_vec_idít_d©a_tu∂e_va_gc_
(
n
Ë((
vec
<
idít_d©a_tu∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<idít_d©a_tu∂e,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

52 
	#ggc_Æloc_idít_d©a_tu∂e
(Ë((
idít_d©a_tu∂e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (idít_d©a_tu∂eË
MEM_STAT_INFO
)))

	)

53 
	#ggc_Æloc_˛óªd_idít_d©a_tu∂e
(Ë((
idít_d©a_tu∂e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (idít_d©a_tu∂eË
MEM_STAT_INFO
)))

	)

54 
	#ggc_Æloc_vec_idít_d©a_tu∂e
(
n
Ë((
idít_d©a_tu∂e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (idít_d©a_tu∂e),Ç 
MEM_STAT_INFO
)))

	)

55 
	#ggc_Æloc_˛óªd_vec_idít_d©a_tu∂e
(
n
Ë((
idít_d©a_tu∂e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (idít_d©a_tu∂e),Ç 
MEM_STAT_INFO
)))

	)

56 
	#ggc_Æloc_°rög_des¸ùt‹
(Ë((
°rög_des¸ùt‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°rög_des¸ùt‹Ë
MEM_STAT_INFO
)))

	)

57 
	#ggc_Æloc_˛óªd_°rög_des¸ùt‹
(Ë((
°rög_des¸ùt‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°rög_des¸ùt‹Ë
MEM_STAT_INFO
)))

	)

58 
	#ggc_Æloc_vec_°rög_des¸ùt‹
(
n
Ë((
°rög_des¸ùt‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°rög_des¸ùt‹),Ç 
MEM_STAT_INFO
)))

	)

59 
	#ggc_Æloc_˛óªd_vec_°rög_des¸ùt‹
(
n
Ë((
°rög_des¸ùt‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°rög_des¸ùt‹),Ç 
MEM_STAT_INFO
)))

	)

60 
	#ggc_Æloc_imp_íåy
(Ë((
imp_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (imp_íåyË
MEM_STAT_INFO
)))

	)

61 
	#ggc_Æloc_˛óªd_imp_íåy
(Ë((
imp_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (imp_íåyË
MEM_STAT_INFO
)))

	)

62 
	#ggc_Æloc_vec_imp_íåy
(
n
Ë((
imp_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (imp_íåy),Ç 
MEM_STAT_INFO
)))

	)

63 
	#ggc_Æloc_˛óªd_vec_imp_íåy
(
n
Ë((
imp_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (imp_íåy),Ç 
MEM_STAT_INFO
)))

	)

64 
	#ggc_Æloc_hashed_©åibuã
(Ë((
hashed_©åibuã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (hashed_©åibuãË
MEM_STAT_INFO
)))

	)

65 
	#ggc_Æloc_˛óªd_hashed_©åibuã
(Ë((
hashed_©åibuã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (hashed_©åibuãË
MEM_STAT_INFO
)))

	)

66 
	#ggc_Æloc_vec_hashed_©åibuã
(
n
Ë((
hashed_©åibuã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (hashed_©åibuã),Ç 
MEM_STAT_INFO
)))

	)

67 
	#ggc_Æloc_˛óªd_vec_hashed_©åibuã
(
n
Ë((
hashed_©åibuã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (hashed_©åibuã),Ç 
MEM_STAT_INFO
)))

	)

68 
	#ggc_Æloc_hashed_íåy
(Ë((
hashed_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (hashed_íåyË
MEM_STAT_INFO
)))

	)

69 
	#ggc_Æloc_˛óªd_hashed_íåy
(Ë((
hashed_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (hashed_íåyË
MEM_STAT_INFO
)))

	)

70 
	#ggc_Æloc_vec_hashed_íåy
(
n
Ë((
hashed_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (hashed_íåy),Ç 
MEM_STAT_INFO
)))

	)

71 
	#ggc_Æloc_˛óªd_vec_hashed_íåy
(
n
Ë((
hashed_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (hashed_íåy),Ç 
MEM_STAT_INFO
)))

	)

72 
	#ggc_Æloc_objc_m≠_¥iv©e
(Ë((
objc_m≠_¥iv©e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (objc_m≠_¥iv©eË
MEM_STAT_INFO
)))

	)

73 
	#ggc_Æloc_˛óªd_objc_m≠_¥iv©e
(Ë((
objc_m≠_¥iv©e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (objc_m≠_¥iv©eË
MEM_STAT_INFO
)))

	)

74 
	#ggc_Æloc_vec_objc_m≠_¥iv©e
(
n
Ë((
objc_m≠_¥iv©e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (objc_m≠_¥iv©e),Ç 
MEM_STAT_INFO
)))

	)

75 
	#ggc_Æloc_˛óªd_vec_objc_m≠_¥iv©e
(
n
Ë((
objc_m≠_¥iv©e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (objc_m≠_¥iv©e),Ç 
MEM_STAT_INFO
)))

	)

76 
	#ggc_Æloc_buûtö_ªc‹d
(Ë((
buûtö_ªc‹d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (buûtö_ªc‹dË
MEM_STAT_INFO
)))

	)

77 
	#ggc_Æloc_˛óªd_buûtö_ªc‹d
(Ë((
buûtö_ªc‹d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (buûtö_ªc‹dË
MEM_STAT_INFO
)))

	)

78 
	#ggc_Æloc_vec_buûtö_ªc‹d
(
n
Ë((
buûtö_ªc‹d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (buûtö_ªc‹d),Ç 
MEM_STAT_INFO
)))

	)

79 
	#ggc_Æloc_˛óªd_vec_buûtö_ªc‹d
(
n
Ë((
buûtö_ªc‹d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (buûtö_ªc‹d),Ç 
MEM_STAT_INFO
)))

	)

80 
	#ggc_Æloc_°rög_‹_åì
(Ë((
°rög_‹_åì
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°rög_‹_åìË
MEM_STAT_INFO
)))

	)

81 
	#ggc_Æloc_˛óªd_°rög_‹_åì
(Ë((
°rög_‹_åì
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°rög_‹_åìË
MEM_STAT_INFO
)))

	)

82 
	#ggc_Æloc_vec_°rög_‹_åì
(
n
Ë((
°rög_‹_åì
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°rög_‹_åì),Ç 
MEM_STAT_INFO
)))

	)

83 
	#ggc_Æloc_˛óªd_vec_°rög_‹_åì
(
n
Ë((
°rög_‹_åì
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°rög_‹_åì),Ç 
MEM_STAT_INFO
)))

	)

84 
	#ggc_Æloc_BoŸ°øpMëhods
(Ë((
BoŸ°øpMëhods
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (BoŸ°øpMëhodsË
MEM_STAT_INFO
)))

	)

85 
	#ggc_Æloc_˛óªd_BoŸ°øpMëhods
(Ë((
BoŸ°øpMëhods
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (BoŸ°øpMëhodsË
MEM_STAT_INFO
)))

	)

86 
	#ggc_Æloc_vec_BoŸ°øpMëhods
(
n
Ë((
BoŸ°øpMëhods
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (BoŸ°øpMëhods),Ç 
MEM_STAT_INFO
)))

	)

87 
	#ggc_Æloc_˛óªd_vec_BoŸ°øpMëhods
(
n
Ë((
BoŸ°øpMëhods
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (BoŸ°øpMëhods),Ç 
MEM_STAT_INFO
)))

	)

88 
	#ggc_Æloc_boŸ°øp_mëhod
(Ë((
boŸ°øp_mëhod
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (boŸ°øp_mëhodË
MEM_STAT_INFO
)))

	)

89 
	#ggc_Æloc_˛óªd_boŸ°øp_mëhod
(Ë((
boŸ°øp_mëhod
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (boŸ°øp_mëhodË
MEM_STAT_INFO
)))

	)

90 
	#ggc_Æloc_vec_boŸ°øp_mëhod
(
n
Ë((
boŸ°øp_mëhod
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (boŸ°øp_mëhod),Ç 
MEM_STAT_INFO
)))

	)

91 
	#ggc_Æloc_˛óªd_vec_boŸ°øp_mëhod
(
n
Ë((
boŸ°øp_mëhod
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (boŸ°øp_mëhod),Ç 
MEM_STAT_INFO
)))

	)

92 
	#ggc_Æloc_˝oﬁ_íåy
(
SIZE
Ë((
˝oﬁ_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

93 
	#ggc_Æloc_˛óªd_˝oﬁ_íåy
(
SIZE
Ë((
˝oﬁ_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

94 
	#ggc_Æloc_vec_˝oﬁ_íåy
(
SIZE
, 
n
Ë((
˝oﬁ_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

95 
	#ggc_Æloc_˛óªd_vec_˝oﬁ_íåy
(
SIZE
, 
n
Ë((
˝oﬁ_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

96 
	#ggc_Æloc_vec_mëhod_íåy_va_gc_
(Ë((
vec
<
mëhod_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<mëhod_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

97 
	#ggc_Æloc_˛óªd_vec_mëhod_íåy_va_gc_
(Ë((
vec
<
mëhod_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<mëhod_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

98 
	#ggc_Æloc_vec_vec_mëhod_íåy_va_gc_
(
n
Ë((
vec
<
mëhod_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<mëhod_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

99 
	#ggc_Æloc_˛óªd_vec_vec_mëhod_íåy_va_gc_
(
n
Ë((
vec
<
mëhod_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<mëhod_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

100 
	#ggc_Æloc_mëhod_íåy_d
(Ë((
mëhod_íåy_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (mëhod_íåy_dË
MEM_STAT_INFO
)))

	)

101 
	#ggc_Æloc_˛óªd_mëhod_íåy_d
(Ë((
mëhod_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (mëhod_íåy_dË
MEM_STAT_INFO
)))

	)

102 
	#ggc_Æloc_vec_mëhod_íåy_d
(
n
Ë((
mëhod_íåy_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (mëhod_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

103 
	#ggc_Æloc_˛óªd_vec_mëhod_íåy_d
(
n
Ë((
mëhod_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (mëhod_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

104 
	#ggc_Æloc_œng_de˛_v¨
(Ë((
œng_de˛_v¨
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_v¨Ë
MEM_STAT_INFO
)))

	)

105 
	#ggc_Æloc_˛óªd_œng_de˛_v¨
(Ë((
œng_de˛_v¨
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_v¨Ë
MEM_STAT_INFO
)))

	)

106 
	#ggc_Æloc_vec_œng_de˛_v¨
(
n
Ë((
œng_de˛_v¨
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_v¨),Ç 
MEM_STAT_INFO
)))

	)

107 
	#ggc_Æloc_˛óªd_vec_œng_de˛_v¨
(
n
Ë((
œng_de˛_v¨
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_v¨),Ç 
MEM_STAT_INFO
)))

	)

108 
	#ggc_Æloc_ty≥_as£πi⁄
(Ë((
ty≥_as£πi⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ty≥_as£πi⁄Ë
MEM_STAT_INFO
)))

	)

109 
	#ggc_Æloc_˛óªd_ty≥_as£πi⁄
(Ë((
ty≥_as£πi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ty≥_as£πi⁄Ë
MEM_STAT_INFO
)))

	)

110 
	#ggc_Æloc_vec_ty≥_as£πi⁄
(
n
Ë((
ty≥_as£πi⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ty≥_as£πi⁄),Ç 
MEM_STAT_INFO
)))

	)

111 
	#ggc_Æloc_˛óªd_vec_ty≥_as£πi⁄
(
n
Ë((
ty≥_as£πi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ty≥_as£πi⁄),Ç 
MEM_STAT_INFO
)))

	)

112 
	#ggc_Æloc_œng_de˛_func
(Ë((
œng_de˛_func
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_funcË
MEM_STAT_INFO
)))

	)

113 
	#ggc_Æloc_˛óªd_œng_de˛_func
(Ë((
œng_de˛_func
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_funcË
MEM_STAT_INFO
)))

	)

114 
	#ggc_Æloc_vec_œng_de˛_func
(
n
Ë((
œng_de˛_func
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_func),Ç 
MEM_STAT_INFO
)))

	)

115 
	#ggc_Æloc_˛óªd_vec_œng_de˛_func
(
n
Ë((
œng_de˛_func
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_func),Ç 
MEM_STAT_INFO
)))

	)

116 
	#ggc_Æloc_åìåìhash_íåy
(Ë((
åìåìhash_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åìåìhash_íåyË
MEM_STAT_INFO
)))

	)

117 
	#ggc_Æloc_˛óªd_åìåìhash_íåy
(Ë((
åìåìhash_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åìåìhash_íåyË
MEM_STAT_INFO
)))

	)

118 
	#ggc_Æloc_vec_åìåìhash_íåy
(
n
Ë((
åìåìhash_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åìåìhash_íåy),Ç 
MEM_STAT_INFO
)))

	)

119 
	#ggc_Æloc_˛óªd_vec_åìåìhash_íåy
(
n
Ë((
åìåìhash_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åìåìhash_íåy),Ç 
MEM_STAT_INFO
)))

	)

120 
	#ggc_Æloc_CPoﬁ
(Ë((
CPoﬁ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (CPoﬁË
MEM_STAT_INFO
)))

	)

121 
	#ggc_Æloc_˛óªd_CPoﬁ
(Ë((
CPoﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (CPoﬁË
MEM_STAT_INFO
)))

	)

122 
	#ggc_Æloc_vec_CPoﬁ
(
n
Ë((
CPoﬁ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (CPoﬁ),Ç 
MEM_STAT_INFO
)))

	)

123 
	#ggc_Æloc_˛óªd_vec_CPoﬁ
(
n
Ë((
CPoﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (CPoﬁ),Ç 
MEM_STAT_INFO
)))

	)

124 
	#ggc_Æloc_JCF
(Ë((
JCF
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (JCFË
MEM_STAT_INFO
)))

	)

125 
	#ggc_Æloc_˛óªd_JCF
(Ë((
JCF
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (JCFË
MEM_STAT_INFO
)))

	)

126 
	#ggc_Æloc_vec_JCF
(
n
Ë((
JCF
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (JCF),Ç 
MEM_STAT_INFO
)))

	)

127 
	#ggc_Æloc_˛óªd_vec_JCF
(
n
Ë((
JCF
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (JCF),Ç 
MEM_STAT_INFO
)))

	)

128 
	#ggc_Æloc_gfc_powde˛_li°
(Ë((
gfc_powde˛_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gfc_powde˛_li°Ë
MEM_STAT_INFO
)))

	)

129 
	#ggc_Æloc_˛óªd_gfc_powde˛_li°
(Ë((
gfc_powde˛_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gfc_powde˛_li°Ë
MEM_STAT_INFO
)))

	)

130 
	#ggc_Æloc_vec_gfc_powde˛_li°
(
n
Ë((
gfc_powde˛_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gfc_powde˛_li°),Ç 
MEM_STAT_INFO
)))

	)

131 
	#ggc_Æloc_˛óªd_vec_gfc_powde˛_li°
(
n
Ë((
gfc_powde˛_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gfc_powde˛_li°),Ç 
MEM_STAT_INFO
)))

	)

132 
	#ggc_Æloc_gfc_°_∑ømëî
(Ë((
gfc_°_∑ømëî
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gfc_°_∑ømëîË
MEM_STAT_INFO
)))

	)

133 
	#ggc_Æloc_˛óªd_gfc_°_∑ømëî
(Ë((
gfc_°_∑ømëî
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gfc_°_∑ømëîË
MEM_STAT_INFO
)))

	)

134 
	#ggc_Æloc_vec_gfc_°_∑ømëî
(
n
Ë((
gfc_°_∑ømëî
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gfc_°_∑ømëî),Ç 
MEM_STAT_INFO
)))

	)

135 
	#ggc_Æloc_˛óªd_vec_gfc_°_∑ømëî
(
n
Ë((
gfc_°_∑ømëî
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gfc_°_∑ømëî),Ç 
MEM_STAT_INFO
)))

	)

136 
	#ggc_Æloc_gfc_°_∑ømëî_fõld
(Ë((
gfc_°_∑ømëî_fõld
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gfc_°_∑ømëî_fõldË
MEM_STAT_INFO
)))

	)

137 
	#ggc_Æloc_˛óªd_gfc_°_∑ømëî_fõld
(Ë((
gfc_°_∑ømëî_fõld
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gfc_°_∑ømëî_fõldË
MEM_STAT_INFO
)))

	)

138 
	#ggc_Æloc_vec_gfc_°_∑ømëî_fõld
(
n
Ë((
gfc_°_∑ømëî_fõld
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gfc_°_∑ømëî_fõld),Ç 
MEM_STAT_INFO
)))

	)

139 
	#ggc_Æloc_˛óªd_vec_gfc_°_∑ømëî_fõld
(
n
Ë((
gfc_°_∑ømëî_fõld
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gfc_°_∑ømëî_fõld),Ç 
MEM_STAT_INFO
)))

	)

140 
	#ggc_Æloc_gfc_öåösic_m≠_t
(Ë((
gfc_öåösic_m≠_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gfc_öåösic_m≠_tË
MEM_STAT_INFO
)))

	)

141 
	#ggc_Æloc_˛óªd_gfc_öåösic_m≠_t
(Ë((
gfc_öåösic_m≠_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gfc_öåösic_m≠_tË
MEM_STAT_INFO
)))

	)

142 
	#ggc_Æloc_vec_gfc_öåösic_m≠_t
(
n
Ë((
gfc_öåösic_m≠_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gfc_öåösic_m≠_t),Ç 
MEM_STAT_INFO
)))

	)

143 
	#ggc_Æloc_˛óªd_vec_gfc_öåösic_m≠_t
(
n
Ë((
gfc_öåösic_m≠_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gfc_öåösic_m≠_t),Ç 
MEM_STAT_INFO
)))

	)

144 
	#ggc_Æloc_moduÀ_hèb_íåy
(Ë((
moduÀ_hèb_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (moduÀ_hèb_íåyË
MEM_STAT_INFO
)))

	)

145 
	#ggc_Æloc_˛óªd_moduÀ_hèb_íåy
(Ë((
moduÀ_hèb_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (moduÀ_hèb_íåyË
MEM_STAT_INFO
)))

	)

146 
	#ggc_Æloc_vec_moduÀ_hèb_íåy
(
n
Ë((
moduÀ_hèb_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (moduÀ_hèb_íåy),Ç 
MEM_STAT_INFO
)))

	)

147 
	#ggc_Æloc_˛óªd_vec_moduÀ_hèb_íåy
(
n
Ë((
moduÀ_hèb_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (moduÀ_hèb_íåy),Ç 
MEM_STAT_INFO
)))

	)

148 
	#ggc_Æloc_bödög_Àvñ
(Ë((
bödög_Àvñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bödög_ÀvñË
MEM_STAT_INFO
)))

	)

149 
	#ggc_Æloc_˛óªd_bödög_Àvñ
(Ë((
bödög_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bödög_ÀvñË
MEM_STAT_INFO
)))

	)

150 
	#ggc_Æloc_vec_bödög_Àvñ
(
n
Ë((
bödög_Àvñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bödög_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

151 
	#ggc_Æloc_˛óªd_vec_bödög_Àvñ
(
n
Ë((
bödög_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bödög_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

152 
	#ggc_Æloc_vec_≥ndög_n€x˚±_va_gc_
(Ë((
vec
<
≥ndög_n€x˚±
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<≥ndög_n€x˚±,va_gc>Ë
MEM_STAT_INFO
)))

	)

153 
	#ggc_Æloc_˛óªd_vec_≥ndög_n€x˚±_va_gc_
(Ë((
vec
<
≥ndög_n€x˚±
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<≥ndög_n€x˚±,va_gc>Ë
MEM_STAT_INFO
)))

	)

154 
	#ggc_Æloc_vec_vec_≥ndög_n€x˚±_va_gc_
(
n
Ë((
vec
<
≥ndög_n€x˚±
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<≥ndög_n€x˚±,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

155 
	#ggc_Æloc_˛óªd_vec_vec_≥ndög_n€x˚±_va_gc_
(
n
Ë((
vec
<
≥ndög_n€x˚±
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<≥ndög_n€x˚±,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

156 
	#ggc_Æloc_≥ndög_n€x˚±
(Ë((
≥ndög_n€x˚±
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_n€x˚±Ë
MEM_STAT_INFO
)))

	)

157 
	#ggc_Æloc_˛óªd_≥ndög_n€x˚±
(Ë((
≥ndög_n€x˚±
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_n€x˚±Ë
MEM_STAT_INFO
)))

	)

158 
	#ggc_Æloc_vec_≥ndög_n€x˚±
(
n
Ë((
≥ndög_n€x˚±
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_n€x˚±),Ç 
MEM_STAT_INFO
)))

	)

159 
	#ggc_Æloc_˛óªd_vec_≥ndög_n€x˚±
(
n
Ë((
≥ndög_n€x˚±
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_n€x˚±),Ç 
MEM_STAT_INFO
)))

	)

160 
	#ggc_Æloc_≥ndög_ab°ø˘_ty≥
(Ë((
≥ndög_ab°ø˘_ty≥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_ab°ø˘_ty≥Ë
MEM_STAT_INFO
)))

	)

161 
	#ggc_Æloc_˛óªd_≥ndög_ab°ø˘_ty≥
(Ë((
≥ndög_ab°ø˘_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_ab°ø˘_ty≥Ë
MEM_STAT_INFO
)))

	)

162 
	#ggc_Æloc_vec_≥ndög_ab°ø˘_ty≥
(
n
Ë((
≥ndög_ab°ø˘_ty≥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_ab°ø˘_ty≥),Ç 
MEM_STAT_INFO
)))

	)

163 
	#ggc_Æloc_˛óªd_vec_≥ndög_ab°ø˘_ty≥
(
n
Ë((
≥ndög_ab°ø˘_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_ab°ø˘_ty≥),Ç 
MEM_STAT_INFO
)))

	)

164 
	#ggc_Æloc_vec_åì_öt_va_gc_
(Ë((
vec
<
åì_öt
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<åì_öt,va_gc>Ë
MEM_STAT_INFO
)))

	)

165 
	#ggc_Æloc_˛óªd_vec_åì_öt_va_gc_
(Ë((
vec
<
åì_öt
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<åì_öt,va_gc>Ë
MEM_STAT_INFO
)))

	)

166 
	#ggc_Æloc_vec_vec_åì_öt_va_gc_
(
n
Ë((
vec
<
åì_öt
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<åì_öt,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

167 
	#ggc_Æloc_˛óªd_vec_vec_åì_öt_va_gc_
(
n
Ë((
vec
<
åì_öt
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<åì_öt,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

168 
	#ggc_Æloc_åì_öt
(Ë((
åì_öt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ötË
MEM_STAT_INFO
)))

	)

169 
	#ggc_Æloc_˛óªd_åì_öt
(Ë((
åì_öt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ötË
MEM_STAT_INFO
)))

	)

170 
	#ggc_Æloc_vec_åì_öt
(
n
Ë((
åì_öt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_öt),Ç 
MEM_STAT_INFO
)))

	)

171 
	#ggc_Æloc_˛óªd_vec_åì_öt
(
n
Ë((
åì_öt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_öt),Ç 
MEM_STAT_INFO
)))

	)

172 
	#ggc_Æloc_˝_∑r£r
(Ë((
˝_∑r£r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_∑r£rË
MEM_STAT_INFO
)))

	)

173 
	#ggc_Æloc_˛óªd_˝_∑r£r
(Ë((
˝_∑r£r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_∑r£rË
MEM_STAT_INFO
)))

	)

174 
	#ggc_Æloc_vec_˝_∑r£r
(
n
Ë((
˝_∑r£r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_∑r£r),Ç 
MEM_STAT_INFO
)))

	)

175 
	#ggc_Æloc_˛óªd_vec_˝_∑r£r
(
n
Ë((
˝_∑r£r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_∑r£r),Ç 
MEM_STAT_INFO
)))

	)

176 
	#ggc_Æloc_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
(Ë((
vec
<
˝_u≈¨£d_fun˘i⁄s_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<˝_u≈¨£d_fun˘i⁄s_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

177 
	#ggc_Æloc_˛óªd_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
(Ë((
vec
<
˝_u≈¨£d_fun˘i⁄s_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<˝_u≈¨£d_fun˘i⁄s_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

178 
	#ggc_Æloc_vec_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
(
n
Ë((
vec
<
˝_u≈¨£d_fun˘i⁄s_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<˝_u≈¨£d_fun˘i⁄s_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

179 
	#ggc_Æloc_˛óªd_vec_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
(
n
Ë((
vec
<
˝_u≈¨£d_fun˘i⁄s_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<˝_u≈¨£d_fun˘i⁄s_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

180 
	#ggc_Æloc_˝_∑r£r_c⁄ãxt
(Ë((
˝_∑r£r_c⁄ãxt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_∑r£r_c⁄ãxtË
MEM_STAT_INFO
)))

	)

181 
	#ggc_Æloc_˛óªd_˝_∑r£r_c⁄ãxt
(Ë((
˝_∑r£r_c⁄ãxt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_∑r£r_c⁄ãxtË
MEM_STAT_INFO
)))

	)

182 
	#ggc_Æloc_vec_˝_∑r£r_c⁄ãxt
(
n
Ë((
˝_∑r£r_c⁄ãxt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_∑r£r_c⁄ãxt),Ç 
MEM_STAT_INFO
)))

	)

183 
	#ggc_Æloc_˛óªd_vec_˝_∑r£r_c⁄ãxt
(
n
Ë((
˝_∑r£r_c⁄ãxt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_∑r£r_c⁄ãxt),Ç 
MEM_STAT_INFO
)))

	)

184 
	#ggc_Æloc_˝_u≈¨£d_fun˘i⁄s_íåy_d
(Ë((
˝_u≈¨£d_fun˘i⁄s_íåy_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåy_dË
MEM_STAT_INFO
)))

	)

185 
	#ggc_Æloc_˛óªd_˝_u≈¨£d_fun˘i⁄s_íåy_d
(Ë((
˝_u≈¨£d_fun˘i⁄s_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåy_dË
MEM_STAT_INFO
)))

	)

186 
	#ggc_Æloc_vec_˝_u≈¨£d_fun˘i⁄s_íåy_d
(
n
Ë((
˝_u≈¨£d_fun˘i⁄s_íåy_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

187 
	#ggc_Æloc_˛óªd_vec_˝_u≈¨£d_fun˘i⁄s_íåy_d
(
n
Ë((
˝_u≈¨£d_fun˘i⁄s_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

188 
	#ggc_Æloc_vec_˝_deÁu…_¨g_íåy_va_gc_
(Ë((
vec
<
˝_deÁu…_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<˝_deÁu…_¨g_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

189 
	#ggc_Æloc_˛óªd_vec_˝_deÁu…_¨g_íåy_va_gc_
(Ë((
vec
<
˝_deÁu…_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<˝_deÁu…_¨g_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

190 
	#ggc_Æloc_vec_vec_˝_deÁu…_¨g_íåy_va_gc_
(
n
Ë((
vec
<
˝_deÁu…_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<˝_deÁu…_¨g_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

191 
	#ggc_Æloc_˛óªd_vec_vec_˝_deÁu…_¨g_íåy_va_gc_
(
n
Ë((
vec
<
˝_deÁu…_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<˝_deÁu…_¨g_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

192 
	#ggc_Æloc_˝_deÁu…_¨g_íåy_d
(Ë((
˝_deÁu…_¨g_íåy_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_deÁu…_¨g_íåy_dË
MEM_STAT_INFO
)))

	)

193 
	#ggc_Æloc_˛óªd_˝_deÁu…_¨g_íåy_d
(Ë((
˝_deÁu…_¨g_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_deÁu…_¨g_íåy_dË
MEM_STAT_INFO
)))

	)

194 
	#ggc_Æloc_vec_˝_deÁu…_¨g_íåy_d
(
n
Ë((
˝_deÁu…_¨g_íåy_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_deÁu…_¨g_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

195 
	#ggc_Æloc_˛óªd_vec_˝_deÁu…_¨g_íåy_d
(
n
Ë((
˝_deÁu…_¨g_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_deÁu…_¨g_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

196 
	#ggc_Æloc_˝_Àxî
(Ë((
˝_Àxî
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_ÀxîË
MEM_STAT_INFO
)))

	)

197 
	#ggc_Æloc_˛óªd_˝_Àxî
(Ë((
˝_Àxî
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_ÀxîË
MEM_STAT_INFO
)))

	)

198 
	#ggc_Æloc_vec_˝_Àxî
(
n
Ë((
˝_Àxî
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_Àxî),Ç 
MEM_STAT_INFO
)))

	)

199 
	#ggc_Æloc_˛óªd_vec_˝_Àxî
(
n
Ë((
˝_Àxî
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_Àxî),Ç 
MEM_STAT_INFO
)))

	)

200 
	#ggc_Æloc_vec_˝_tokí_va_gc_
(Ë((
vec
<
˝_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<˝_tokí,va_gc>Ë
MEM_STAT_INFO
)))

	)

201 
	#ggc_Æloc_˛óªd_vec_˝_tokí_va_gc_
(Ë((
vec
<
˝_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<˝_tokí,va_gc>Ë
MEM_STAT_INFO
)))

	)

202 
	#ggc_Æloc_vec_vec_˝_tokí_va_gc_
(
n
Ë((
vec
<
˝_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<˝_tokí,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

203 
	#ggc_Æloc_˛óªd_vec_vec_˝_tokí_va_gc_
(
n
Ë((
vec
<
˝_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<˝_tokí,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

204 
	#ggc_Æloc_˝_tokí
(Ë((
˝_tokí
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_tokíË
MEM_STAT_INFO
)))

	)

205 
	#ggc_Æloc_˛óªd_˝_tokí
(Ë((
˝_tokí
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_tokíË
MEM_STAT_INFO
)))

	)

206 
	#ggc_Æloc_vec_˝_tokí
(
n
Ë((
˝_tokí
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_tokí),Ç 
MEM_STAT_INFO
)))

	)

207 
	#ggc_Æloc_˛óªd_vec_˝_tokí
(
n
Ë((
˝_tokí
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_tokí),Ç 
MEM_STAT_INFO
)))

	)

208 
	#ggc_Æloc_˝_tokí_vÆue
(Ë((
˝_tokí_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_tokí_vÆueË
MEM_STAT_INFO
)))

	)

209 
	#ggc_Æloc_˛óªd_˝_tokí_vÆue
(Ë((
˝_tokí_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_tokí_vÆueË
MEM_STAT_INFO
)))

	)

210 
	#ggc_Æloc_vec_˝_tokí_vÆue
(
n
Ë((
˝_tokí_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_tokí_vÆue),Ç 
MEM_STAT_INFO
)))

	)

211 
	#ggc_Æloc_˛óªd_vec_˝_tokí_vÆue
(
n
Ë((
˝_tokí_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_tokí_vÆue),Ç 
MEM_STAT_INFO
)))

	)

212 
	#ggc_Æloc_åì_check
(Ë((
åì_check
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_checkË
MEM_STAT_INFO
)))

	)

213 
	#ggc_Æloc_˛óªd_åì_check
(Ë((
åì_check
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_checkË
MEM_STAT_INFO
)))

	)

214 
	#ggc_Æloc_vec_åì_check
(
n
Ë((
åì_check
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_check),Ç 
MEM_STAT_INFO
)))

	)

215 
	#ggc_Æloc_˛óªd_vec_åì_check
(
n
Ë((
åì_check
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_check),Ç 
MEM_STAT_INFO
)))

	)

216 
	#ggc_Æloc_c⁄°ex¥_ˇŒ
(Ë((
c⁄°ex¥_ˇŒ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°ex¥_ˇŒË
MEM_STAT_INFO
)))

	)

217 
	#ggc_Æloc_˛óªd_c⁄°ex¥_ˇŒ
(Ë((
c⁄°ex¥_ˇŒ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°ex¥_ˇŒË
MEM_STAT_INFO
)))

	)

218 
	#ggc_Æloc_vec_c⁄°ex¥_ˇŒ
(
n
Ë((
c⁄°ex¥_ˇŒ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°ex¥_ˇŒ),Ç 
MEM_STAT_INFO
)))

	)

219 
	#ggc_Æloc_˛óªd_vec_c⁄°ex¥_ˇŒ
(
n
Ë((
c⁄°ex¥_ˇŒ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°ex¥_ˇŒ),Ç 
MEM_STAT_INFO
)))

	)

220 
	#ggc_Æloc_c⁄°ex¥_fundef
(Ë((
c⁄°ex¥_fundef
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°ex¥_fundefË
MEM_STAT_INFO
)))

	)

221 
	#ggc_Æloc_˛óªd_c⁄°ex¥_fundef
(Ë((
c⁄°ex¥_fundef
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°ex¥_fundefË
MEM_STAT_INFO
)))

	)

222 
	#ggc_Æloc_vec_c⁄°ex¥_fundef
(
n
Ë((
c⁄°ex¥_fundef
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°ex¥_fundef),Ç 
MEM_STAT_INFO
)))

	)

223 
	#ggc_Æloc_˛óªd_vec_c⁄°ex¥_fundef
(
n
Ë((
c⁄°ex¥_fundef
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°ex¥_fundef),Ç 
MEM_STAT_INFO
)))

	)

224 
	#ggc_Æloc_vec_de„ºed_ac˚ss_va_gc_
(Ë((
vec
<
de„ºed_ac˚ss
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<de„ºed_ac˚ss,va_gc>Ë
MEM_STAT_INFO
)))

	)

225 
	#ggc_Æloc_˛óªd_vec_de„ºed_ac˚ss_va_gc_
(Ë((
vec
<
de„ºed_ac˚ss
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<de„ºed_ac˚ss,va_gc>Ë
MEM_STAT_INFO
)))

	)

226 
	#ggc_Æloc_vec_vec_de„ºed_ac˚ss_va_gc_
(
n
Ë((
vec
<
de„ºed_ac˚ss
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<de„ºed_ac˚ss,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

227 
	#ggc_Æloc_˛óªd_vec_vec_de„ºed_ac˚ss_va_gc_
(
n
Ë((
vec
<
de„ºed_ac˚ss
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<de„ºed_ac˚ss,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

228 
	#ggc_Æloc_de„ºed_ac˚ss
(Ë((
de„ºed_ac˚ss
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (de„ºed_ac˚ssË
MEM_STAT_INFO
)))

	)

229 
	#ggc_Æloc_˛óªd_de„ºed_ac˚ss
(Ë((
de„ºed_ac˚ss
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (de„ºed_ac˚ssË
MEM_STAT_INFO
)))

	)

230 
	#ggc_Æloc_vec_de„ºed_ac˚ss
(
n
Ë((
de„ºed_ac˚ss
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (de„ºed_ac˚ss),Ç 
MEM_STAT_INFO
)))

	)

231 
	#ggc_Æloc_˛óªd_vec_de„ºed_ac˚ss
(
n
Ë((
de„ºed_ac˚ss
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (de„ºed_ac˚ss),Ç 
MEM_STAT_INFO
)))

	)

232 
	#ggc_Æloc_vec_de„ºed_ac˚ss_check_va_gc_
(Ë((
vec
<
de„ºed_ac˚ss_check
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<de„ºed_ac˚ss_check,va_gc>Ë
MEM_STAT_INFO
)))

	)

233 
	#ggc_Æloc_˛óªd_vec_de„ºed_ac˚ss_check_va_gc_
(Ë((
vec
<
de„ºed_ac˚ss_check
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<de„ºed_ac˚ss_check,va_gc>Ë
MEM_STAT_INFO
)))

	)

234 
	#ggc_Æloc_vec_vec_de„ºed_ac˚ss_check_va_gc_
(
n
Ë((
vec
<
de„ºed_ac˚ss_check
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<de„ºed_ac˚ss_check,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

235 
	#ggc_Æloc_˛óªd_vec_vec_de„ºed_ac˚ss_check_va_gc_
(
n
Ë((
vec
<
de„ºed_ac˚ss_check
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<de„ºed_ac˚ss_check,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

236 
	#ggc_Æloc_•ec_íåy
(Ë((
•ec_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (•ec_íåyË
MEM_STAT_INFO
)))

	)

237 
	#ggc_Æloc_˛óªd_•ec_íåy
(Ë((
•ec_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (•ec_íåyË
MEM_STAT_INFO
)))

	)

238 
	#ggc_Æloc_vec_•ec_íåy
(
n
Ë((
•ec_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (•ec_íåy),Ç 
MEM_STAT_INFO
)))

	)

239 
	#ggc_Æloc_˛óªd_vec_•ec_íåy
(
n
Ë((
•ec_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (•ec_íåy),Ç 
MEM_STAT_INFO
)))

	)

240 
	#ggc_Æloc_≥ndög_ãm∂©e
(Ë((
≥ndög_ãm∂©e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_ãm∂©eË
MEM_STAT_INFO
)))

	)

241 
	#ggc_Æloc_˛óªd_≥ndög_ãm∂©e
(Ë((
≥ndög_ãm∂©e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_ãm∂©eË
MEM_STAT_INFO
)))

	)

242 
	#ggc_Æloc_vec_≥ndög_ãm∂©e
(
n
Ë((
≥ndög_ãm∂©e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_ãm∂©e),Ç 
MEM_STAT_INFO
)))

	)

243 
	#ggc_Æloc_˛óªd_vec_≥ndög_ãm∂©e
(
n
Ë((
≥ndög_ãm∂©e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_ãm∂©e),Ç 
MEM_STAT_INFO
)))

	)

244 
	#ggc_Æloc_vec_öcom∂ëe_v¨_va_gc_
(Ë((
vec
<
öcom∂ëe_v¨
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<öcom∂ëe_v¨,va_gc>Ë
MEM_STAT_INFO
)))

	)

245 
	#ggc_Æloc_˛óªd_vec_öcom∂ëe_v¨_va_gc_
(Ë((
vec
<
öcom∂ëe_v¨
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<öcom∂ëe_v¨,va_gc>Ë
MEM_STAT_INFO
)))

	)

246 
	#ggc_Æloc_vec_vec_öcom∂ëe_v¨_va_gc_
(
n
Ë((
vec
<
öcom∂ëe_v¨
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<öcom∂ëe_v¨,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

247 
	#ggc_Æloc_˛óªd_vec_vec_öcom∂ëe_v¨_va_gc_
(
n
Ë((
vec
<
öcom∂ëe_v¨
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<öcom∂ëe_v¨,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

248 
	#ggc_Æloc_öcom∂ëe_v¨_d
(Ë((
öcom∂ëe_v¨_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (öcom∂ëe_v¨_dË
MEM_STAT_INFO
)))

	)

249 
	#ggc_Æloc_˛óªd_öcom∂ëe_v¨_d
(Ë((
öcom∂ëe_v¨_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (öcom∂ëe_v¨_dË
MEM_STAT_INFO
)))

	)

250 
	#ggc_Æloc_vec_öcom∂ëe_v¨_d
(
n
Ë((
öcom∂ëe_v¨_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (öcom∂ëe_v¨_d),Ç 
MEM_STAT_INFO
)))

	)

251 
	#ggc_Æloc_˛óªd_vec_öcom∂ëe_v¨_d
(
n
Ë((
öcom∂ëe_v¨_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (öcom∂ëe_v¨_d),Ç 
MEM_STAT_INFO
)))

	)

252 
	#ggc_Æloc_«med_œbñ_u£_íåy
(Ë((
«med_œbñ_u£_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( («med_œbñ_u£_íåyË
MEM_STAT_INFO
)))

	)

253 
	#ggc_Æloc_˛óªd_«med_œbñ_u£_íåy
(Ë((
«med_œbñ_u£_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( («med_œbñ_u£_íåyË
MEM_STAT_INFO
)))

	)

254 
	#ggc_Æloc_vec_«med_œbñ_u£_íåy
(
n
Ë((
«med_œbñ_u£_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( («med_œbñ_u£_íåy),Ç 
MEM_STAT_INFO
)))

	)

255 
	#ggc_Æloc_˛óªd_vec_«med_œbñ_u£_íåy
(
n
Ë((
«med_œbñ_u£_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( («med_œbñ_u£_íåy),Ç 
MEM_STAT_INFO
)))

	)

256 
	#ggc_Æloc_de„ºed_ac˚ss_check
(Ë((
de„ºed_ac˚ss_check
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (de„ºed_ac˚ss_checkË
MEM_STAT_INFO
)))

	)

257 
	#ggc_Æloc_˛óªd_de„ºed_ac˚ss_check
(Ë((
de„ºed_ac˚ss_check
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (de„ºed_ac˚ss_checkË
MEM_STAT_INFO
)))

	)

258 
	#ggc_Æloc_vec_de„ºed_ac˚ss_check
(
n
Ë((
de„ºed_ac˚ss_check
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (de„ºed_ac˚ss_check),Ç 
MEM_STAT_INFO
)))

	)

259 
	#ggc_Æloc_˛óªd_vec_de„ºed_ac˚ss_check
(
n
Ë((
de„ºed_ac˚ss_check
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (de„ºed_ac˚ss_check),Ç 
MEM_STAT_INFO
)))

	)

260 
	#ggc_Æloc_›î©‹_«me_öfo_t
(Ë((
›î©‹_«me_öfo_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (›î©‹_«me_öfo_tË
MEM_STAT_INFO
)))

	)

261 
	#ggc_Æloc_˛óªd_›î©‹_«me_öfo_t
(Ë((
›î©‹_«me_öfo_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (›î©‹_«me_öfo_tË
MEM_STAT_INFO
)))

	)

262 
	#ggc_Æloc_vec_›î©‹_«me_öfo_t
(
n
Ë((
›î©‹_«me_öfo_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (›î©‹_«me_öfo_t),Ç 
MEM_STAT_INFO
)))

	)

263 
	#ggc_Æloc_˛óªd_vec_›î©‹_«me_öfo_t
(
n
Ë((
›î©‹_«me_öfo_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (›î©‹_«me_öfo_t),Ç 
MEM_STAT_INFO
)))

	)

264 
	#ggc_Æloc_œng_de˛_u
(Ë((
œng_de˛_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_uË
MEM_STAT_INFO
)))

	)

265 
	#ggc_Æloc_˛óªd_œng_de˛_u
(Ë((
œng_de˛_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_uË
MEM_STAT_INFO
)))

	)

266 
	#ggc_Æloc_vec_œng_de˛_u
(
n
Ë((
œng_de˛_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_u),Ç 
MEM_STAT_INFO
)))

	)

267 
	#ggc_Æloc_˛óªd_vec_œng_de˛_u
(
n
Ë((
œng_de˛_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_u),Ç 
MEM_STAT_INFO
)))

	)

268 
	#ggc_Æloc_œng_de˛_∑rm
(Ë((
œng_de˛_∑rm
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_∑rmË
MEM_STAT_INFO
)))

	)

269 
	#ggc_Æloc_˛óªd_œng_de˛_∑rm
(Ë((
œng_de˛_∑rm
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_∑rmË
MEM_STAT_INFO
)))

	)

270 
	#ggc_Æloc_vec_œng_de˛_∑rm
(
n
Ë((
œng_de˛_∑rm
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_∑rm),Ç 
MEM_STAT_INFO
)))

	)

271 
	#ggc_Æloc_˛óªd_vec_œng_de˛_∑rm
(
n
Ë((
œng_de˛_∑rm
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_∑rm),Ç 
MEM_STAT_INFO
)))

	)

272 
	#ggc_Æloc_œng_de˛_ns
(Ë((
œng_de˛_ns
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_nsË
MEM_STAT_INFO
)))

	)

273 
	#ggc_Æloc_˛óªd_œng_de˛_ns
(Ë((
œng_de˛_ns
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_nsË
MEM_STAT_INFO
)))

	)

274 
	#ggc_Æloc_vec_œng_de˛_ns
(
n
Ë((
œng_de˛_ns
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_ns),Ç 
MEM_STAT_INFO
)))

	)

275 
	#ggc_Æloc_˛óªd_vec_œng_de˛_ns
(
n
Ë((
œng_de˛_ns
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_ns),Ç 
MEM_STAT_INFO
)))

	)

276 
	#ggc_Æloc_œng_de˛_‚
(Ë((
œng_de˛_‚
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_‚Ë
MEM_STAT_INFO
)))

	)

277 
	#ggc_Æloc_˛óªd_œng_de˛_‚
(Ë((
œng_de˛_‚
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_‚Ë
MEM_STAT_INFO
)))

	)

278 
	#ggc_Æloc_vec_œng_de˛_‚
(
n
Ë((
œng_de˛_‚
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_‚),Ç 
MEM_STAT_INFO
)))

	)

279 
	#ggc_Æloc_˛óªd_vec_œng_de˛_‚
(
n
Ë((
œng_de˛_‚
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_‚),Ç 
MEM_STAT_INFO
)))

	)

280 
	#ggc_Æloc_œng_de˛_u3
(Ë((
œng_de˛_u3
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_u3Ë
MEM_STAT_INFO
)))

	)

281 
	#ggc_Æloc_˛óªd_œng_de˛_u3
(Ë((
œng_de˛_u3
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_u3Ë
MEM_STAT_INFO
)))

	)

282 
	#ggc_Æloc_vec_œng_de˛_u3
(
n
Ë((
œng_de˛_u3
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_u3),Ç 
MEM_STAT_INFO
)))

	)

283 
	#ggc_Æloc_˛óªd_vec_œng_de˛_u3
(
n
Ë((
œng_de˛_u3
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_u3),Ç 
MEM_STAT_INFO
)))

	)

284 
	#ggc_Æloc_œng_de˛_u5
(Ë((
œng_de˛_u5
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_u5Ë
MEM_STAT_INFO
)))

	)

285 
	#ggc_Æloc_˛óªd_œng_de˛_u5
(Ë((
œng_de˛_u5
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_u5Ë
MEM_STAT_INFO
)))

	)

286 
	#ggc_Æloc_vec_œng_de˛_u5
(
n
Ë((
œng_de˛_u5
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_u5),Ç 
MEM_STAT_INFO
)))

	)

287 
	#ggc_Æloc_˛óªd_vec_œng_de˛_u5
(
n
Ë((
œng_de˛_u5
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_u5),Ç 
MEM_STAT_INFO
)))

	)

288 
	#ggc_Æloc_œng_de˛_mö
(Ë((
œng_de˛_mö
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_möË
MEM_STAT_INFO
)))

	)

289 
	#ggc_Æloc_˛óªd_œng_de˛_mö
(Ë((
œng_de˛_mö
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_möË
MEM_STAT_INFO
)))

	)

290 
	#ggc_Æloc_vec_œng_de˛_mö
(
n
Ë((
œng_de˛_mö
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_mö),Ç 
MEM_STAT_INFO
)))

	)

291 
	#ggc_Æloc_˛óªd_vec_œng_de˛_mö
(
n
Ë((
œng_de˛_mö
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_mö),Ç 
MEM_STAT_INFO
)))

	)

292 
	#ggc_Æloc_œng_de˛_u2
(Ë((
œng_de˛_u2
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_u2Ë
MEM_STAT_INFO
)))

	)

293 
	#ggc_Æloc_˛óªd_œng_de˛_u2
(Ë((
œng_de˛_u2
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_u2Ë
MEM_STAT_INFO
)))

	)

294 
	#ggc_Æloc_vec_œng_de˛_u2
(
n
Ë((
œng_de˛_u2
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_u2),Ç 
MEM_STAT_INFO
)))

	)

295 
	#ggc_Æloc_˛óªd_vec_œng_de˛_u2
(
n
Ë((
œng_de˛_u2
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_u2),Ç 
MEM_STAT_INFO
)))

	)

296 
	#ggc_Æloc_œng_de˛_ba£
(Ë((
œng_de˛_ba£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_de˛_ba£Ë
MEM_STAT_INFO
)))

	)

297 
	#ggc_Æloc_˛óªd_œng_de˛_ba£
(Ë((
œng_de˛_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_de˛_ba£Ë
MEM_STAT_INFO
)))

	)

298 
	#ggc_Æloc_vec_œng_de˛_ba£
(
n
Ë((
œng_de˛_ba£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_de˛_ba£),Ç 
MEM_STAT_INFO
)))

	)

299 
	#ggc_Æloc_˛óªd_vec_œng_de˛_ba£
(
n
Ë((
œng_de˛_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_de˛_ba£),Ç 
MEM_STAT_INFO
)))

	)

300 
	#ggc_Æloc_œng_ty≥_u
(Ë((
œng_ty≥_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_ty≥_uË
MEM_STAT_INFO
)))

	)

301 
	#ggc_Æloc_˛óªd_œng_ty≥_u
(Ë((
œng_ty≥_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_ty≥_uË
MEM_STAT_INFO
)))

	)

302 
	#ggc_Æloc_vec_œng_ty≥_u
(
n
Ë((
œng_ty≥_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_ty≥_u),Ç 
MEM_STAT_INFO
)))

	)

303 
	#ggc_Æloc_˛óªd_vec_œng_ty≥_u
(
n
Ë((
œng_ty≥_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_ty≥_u),Ç 
MEM_STAT_INFO
)))

	)

304 
	#ggc_Æloc_œng_ty≥_±rmem
(Ë((
œng_ty≥_±rmem
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_ty≥_±rmemË
MEM_STAT_INFO
)))

	)

305 
	#ggc_Æloc_˛óªd_œng_ty≥_±rmem
(Ë((
œng_ty≥_±rmem
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_ty≥_±rmemË
MEM_STAT_INFO
)))

	)

306 
	#ggc_Æloc_vec_œng_ty≥_±rmem
(
n
Ë((
œng_ty≥_±rmem
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_ty≥_±rmem),Ç 
MEM_STAT_INFO
)))

	)

307 
	#ggc_Æloc_˛óªd_vec_œng_ty≥_±rmem
(
n
Ë((
œng_ty≥_±rmem
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_ty≥_±rmem),Ç 
MEM_STAT_INFO
)))

	)

308 
	#ggc_Æloc_œng_ty≥_˛ass
(Ë((
œng_ty≥_˛ass
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_ty≥_˛assË
MEM_STAT_INFO
)))

	)

309 
	#ggc_Æloc_˛óªd_œng_ty≥_˛ass
(Ë((
œng_ty≥_˛ass
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_ty≥_˛assË
MEM_STAT_INFO
)))

	)

310 
	#ggc_Æloc_vec_œng_ty≥_˛ass
(
n
Ë((
œng_ty≥_˛ass
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_ty≥_˛ass),Ç 
MEM_STAT_INFO
)))

	)

311 
	#ggc_Æloc_˛óªd_vec_œng_ty≥_˛ass
(
n
Ë((
œng_ty≥_˛ass
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_ty≥_˛ass),Ç 
MEM_STAT_INFO
)))

	)

312 
	#ggc_Æloc_vec_åì_∑ú_s_va_gc_
(Ë((
vec
<
åì_∑ú_s
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<åì_∑ú_s,va_gc>Ë
MEM_STAT_INFO
)))

	)

313 
	#ggc_Æloc_˛óªd_vec_åì_∑ú_s_va_gc_
(Ë((
vec
<
åì_∑ú_s
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<åì_∑ú_s,va_gc>Ë
MEM_STAT_INFO
)))

	)

314 
	#ggc_Æloc_vec_vec_åì_∑ú_s_va_gc_
(
n
Ë((
vec
<
åì_∑ú_s
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<åì_∑ú_s,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

315 
	#ggc_Æloc_˛óªd_vec_vec_åì_∑ú_s_va_gc_
(
n
Ë((
vec
<
åì_∑ú_s
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<åì_∑ú_s,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

316 
	#ggc_Æloc_œng_ty≥_hódî
(Ë((
œng_ty≥_hódî
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_ty≥_hódîË
MEM_STAT_INFO
)))

	)

317 
	#ggc_Æloc_˛óªd_œng_ty≥_hódî
(Ë((
œng_ty≥_hódî
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_ty≥_hódîË
MEM_STAT_INFO
)))

	)

318 
	#ggc_Æloc_vec_œng_ty≥_hódî
(
n
Ë((
œng_ty≥_hódî
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_ty≥_hódî),Ç 
MEM_STAT_INFO
)))

	)

319 
	#ggc_Æloc_˛óªd_vec_œng_ty≥_hódî
(
n
Ë((
œng_ty≥_hódî
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_ty≥_hódî),Ç 
MEM_STAT_INFO
)))

	)

320 
	#ggc_Æloc_åì_∑ú_s
(Ë((
åì_∑ú_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_∑ú_sË
MEM_STAT_INFO
)))

	)

321 
	#ggc_Æloc_˛óªd_åì_∑ú_s
(Ë((
åì_∑ú_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_∑ú_sË
MEM_STAT_INFO
)))

	)

322 
	#ggc_Æloc_vec_åì_∑ú_s
(
n
Ë((
åì_∑ú_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_∑ú_s),Ç 
MEM_STAT_INFO
)))

	)

323 
	#ggc_Æloc_˛óªd_vec_åì_∑ú_s
(
n
Ë((
åì_∑ú_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_∑ú_s),Ç 
MEM_STAT_INFO
)))

	)

324 
	#ggc_Æloc_«med_œbñ_íåy
(Ë((
«med_œbñ_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( («med_œbñ_íåyË
MEM_STAT_INFO
)))

	)

325 
	#ggc_Æloc_˛óªd_«med_œbñ_íåy
(Ë((
«med_œbñ_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( («med_œbñ_íåyË
MEM_STAT_INFO
)))

	)

326 
	#ggc_Æloc_vec_«med_œbñ_íåy
(
n
Ë((
«med_œbñ_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( («med_œbñ_íåy),Ç 
MEM_STAT_INFO
)))

	)

327 
	#ggc_Æloc_˛óªd_vec_«med_œbñ_íåy
(
n
Ë((
«med_œbñ_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( («med_œbñ_íåy),Ç 
MEM_STAT_INFO
)))

	)

328 
	#ggc_Æloc_vec_cxx_ßved_bödög_va_gc_
(Ë((
vec
<
cxx_ßved_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<cxx_ßved_bödög,va_gc>Ë
MEM_STAT_INFO
)))

	)

329 
	#ggc_Æloc_˛óªd_vec_cxx_ßved_bödög_va_gc_
(Ë((
vec
<
cxx_ßved_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<cxx_ßved_bödög,va_gc>Ë
MEM_STAT_INFO
)))

	)

330 
	#ggc_Æloc_vec_vec_cxx_ßved_bödög_va_gc_
(
n
Ë((
vec
<
cxx_ßved_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<cxx_ßved_bödög,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

331 
	#ggc_Æloc_˛óªd_vec_vec_cxx_ßved_bödög_va_gc_
(
n
Ë((
vec
<
cxx_ßved_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<cxx_ßved_bödög,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

332 
	#ggc_Æloc_åì_ãm∂©e_öfo
(Ë((
åì_ãm∂©e_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ãm∂©e_öfoË
MEM_STAT_INFO
)))

	)

333 
	#ggc_Æloc_˛óªd_åì_ãm∂©e_öfo
(Ë((
åì_ãm∂©e_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ãm∂©e_öfoË
MEM_STAT_INFO
)))

	)

334 
	#ggc_Æloc_vec_åì_ãm∂©e_öfo
(
n
Ë((
åì_ãm∂©e_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ãm∂©e_öfo),Ç 
MEM_STAT_INFO
)))

	)

335 
	#ggc_Æloc_˛óªd_vec_åì_ãm∂©e_öfo
(
n
Ë((
åì_ãm∂©e_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ãm∂©e_öfo),Ç 
MEM_STAT_INFO
)))

	)

336 
	#ggc_Æloc_vec_quÆifõd_ty≥def_ußge_t_va_gc_
(Ë((
vec
<
quÆifõd_ty≥def_ußge_t
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<quÆifõd_ty≥def_ußge_t,va_gc>Ë
MEM_STAT_INFO
)))

	)

337 
	#ggc_Æloc_˛óªd_vec_quÆifõd_ty≥def_ußge_t_va_gc_
(Ë((
vec
<
quÆifõd_ty≥def_ußge_t
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<quÆifõd_ty≥def_ußge_t,va_gc>Ë
MEM_STAT_INFO
)))

	)

338 
	#ggc_Æloc_vec_vec_quÆifõd_ty≥def_ußge_t_va_gc_
(
n
Ë((
vec
<
quÆifõd_ty≥def_ußge_t
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<quÆifõd_ty≥def_ußge_t,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

339 
	#ggc_Æloc_˛óªd_vec_vec_quÆifõd_ty≥def_ußge_t_va_gc_
(
n
Ë((
vec
<
quÆifõd_ty≥def_ußge_t
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<quÆifõd_ty≥def_ußge_t,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

340 
	#ggc_Æloc_quÆifõd_ty≥def_ußge_s
(Ë((
quÆifõd_ty≥def_ußge_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_sË
MEM_STAT_INFO
)))

	)

341 
	#ggc_Æloc_˛óªd_quÆifõd_ty≥def_ußge_s
(Ë((
quÆifõd_ty≥def_ußge_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_sË
MEM_STAT_INFO
)))

	)

342 
	#ggc_Æloc_vec_quÆifõd_ty≥def_ußge_s
(
n
Ë((
quÆifõd_ty≥def_ußge_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_s),Ç 
MEM_STAT_INFO
)))

	)

343 
	#ggc_Æloc_˛óªd_vec_quÆifõd_ty≥def_ußge_s
(
n
Ë((
quÆifõd_ty≥def_ußge_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_s),Ç 
MEM_STAT_INFO
)))

	)

344 
	#ggc_Æloc_åì_œmbda_ex¥
(Ë((
åì_œmbda_ex¥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_œmbda_ex¥Ë
MEM_STAT_INFO
)))

	)

345 
	#ggc_Æloc_˛óªd_åì_œmbda_ex¥
(Ë((
åì_œmbda_ex¥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_œmbda_ex¥Ë
MEM_STAT_INFO
)))

	)

346 
	#ggc_Æloc_vec_åì_œmbda_ex¥
(
n
Ë((
åì_œmbda_ex¥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_œmbda_ex¥),Ç 
MEM_STAT_INFO
)))

	)

347 
	#ggc_Æloc_˛óªd_vec_åì_œmbda_ex¥
(
n
Ë((
åì_œmbda_ex¥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_œmbda_ex¥),Ç 
MEM_STAT_INFO
)))

	)

348 
	#ggc_Æloc_åì_åaô_ex¥
(Ë((
åì_åaô_ex¥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_åaô_ex¥Ë
MEM_STAT_INFO
)))

	)

349 
	#ggc_Æloc_˛óªd_åì_åaô_ex¥
(Ë((
åì_åaô_ex¥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_åaô_ex¥Ë
MEM_STAT_INFO
)))

	)

350 
	#ggc_Æloc_vec_åì_åaô_ex¥
(
n
Ë((
åì_åaô_ex¥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_åaô_ex¥),Ç 
MEM_STAT_INFO
)))

	)

351 
	#ggc_Æloc_˛óªd_vec_åì_åaô_ex¥
(
n
Ë((
åì_åaô_ex¥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_åaô_ex¥),Ç 
MEM_STAT_INFO
)))

	)

352 
	#ggc_Æloc_åì_¨gumít_∑ck_£À˘
(Ë((
åì_¨gumít_∑ck_£À˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_¨gumít_∑ck_£À˘Ë
MEM_STAT_INFO
)))

	)

353 
	#ggc_Æloc_˛óªd_åì_¨gumít_∑ck_£À˘
(Ë((
åì_¨gumít_∑ck_£À˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_¨gumít_∑ck_£À˘Ë
MEM_STAT_INFO
)))

	)

354 
	#ggc_Æloc_vec_åì_¨gumít_∑ck_£À˘
(
n
Ë((
åì_¨gumít_∑ck_£À˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_¨gumít_∑ck_£À˘),Ç 
MEM_STAT_INFO
)))

	)

355 
	#ggc_Æloc_˛óªd_vec_åì_¨gumít_∑ck_£À˘
(
n
Ë((
åì_¨gumít_∑ck_£À˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_¨gumít_∑ck_£À˘),Ç 
MEM_STAT_INFO
)))

	)

356 
	#ggc_Æloc_åì_°©ic_as£π
(Ë((
åì_°©ic_as£π
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_°©ic_as£πË
MEM_STAT_INFO
)))

	)

357 
	#ggc_Æloc_˛óªd_åì_°©ic_as£π
(Ë((
åì_°©ic_as£π
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_°©ic_as£πË
MEM_STAT_INFO
)))

	)

358 
	#ggc_Æloc_vec_åì_°©ic_as£π
(
n
Ë((
åì_°©ic_as£π
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_°©ic_as£π),Ç 
MEM_STAT_INFO
)))

	)

359 
	#ggc_Æloc_˛óªd_vec_åì_°©ic_as£π
(
n
Ë((
åì_°©ic_as£π
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_°©ic_as£π),Ç 
MEM_STAT_INFO
)))

	)

360 
	#ggc_Æloc_åì_de„ºed_n€x˚±
(Ë((
åì_de„ºed_n€x˚±
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de„ºed_n€x˚±Ë
MEM_STAT_INFO
)))

	)

361 
	#ggc_Æloc_˛óªd_åì_de„ºed_n€x˚±
(Ë((
åì_de„ºed_n€x˚±
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de„ºed_n€x˚±Ë
MEM_STAT_INFO
)))

	)

362 
	#ggc_Æloc_vec_åì_de„ºed_n€x˚±
(
n
Ë((
åì_de„ºed_n€x˚±
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de„ºed_n€x˚±),Ç 
MEM_STAT_INFO
)))

	)

363 
	#ggc_Æloc_˛óªd_vec_åì_de„ºed_n€x˚±
(
n
Ë((
åì_de„ºed_n€x˚±
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de„ºed_n€x˚±),Ç 
MEM_STAT_INFO
)))

	)

364 
	#ggc_Æloc_åì_deÁu…_¨g
(Ë((
åì_deÁu…_¨g
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_deÁu…_¨gË
MEM_STAT_INFO
)))

	)

365 
	#ggc_Æloc_˛óªd_åì_deÁu…_¨g
(Ë((
åì_deÁu…_¨g
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_deÁu…_¨gË
MEM_STAT_INFO
)))

	)

366 
	#ggc_Æloc_vec_åì_deÁu…_¨g
(
n
Ë((
åì_deÁu…_¨g
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_deÁu…_¨g),Ç 
MEM_STAT_INFO
)))

	)

367 
	#ggc_Æloc_˛óªd_vec_åì_deÁu…_¨g
(
n
Ë((
åì_deÁu…_¨g
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_deÁu…_¨g),Ç 
MEM_STAT_INFO
)))

	)

368 
	#ggc_Æloc_˝_tokí_ˇche
(Ë((
˝_tokí_ˇche
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_tokí_ˇcheË
MEM_STAT_INFO
)))

	)

369 
	#ggc_Æloc_˛óªd_˝_tokí_ˇche
(Ë((
˝_tokí_ˇche
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_tokí_ˇcheË
MEM_STAT_INFO
)))

	)

370 
	#ggc_Æloc_vec_˝_tokí_ˇche
(
n
Ë((
˝_tokí_ˇche
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_tokí_ˇche),Ç 
MEM_STAT_INFO
)))

	)

371 
	#ggc_Æloc_˛óªd_vec_˝_tokí_ˇche
(
n
Ë((
˝_tokí_ˇche
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_tokí_ˇche),Ç 
MEM_STAT_INFO
)))

	)

372 
	#ggc_Æloc_åì_ba£lök
(Ë((
åì_ba£lök
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ba£lökË
MEM_STAT_INFO
)))

	)

373 
	#ggc_Æloc_˛óªd_åì_ba£lök
(Ë((
åì_ba£lök
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ba£lökË
MEM_STAT_INFO
)))

	)

374 
	#ggc_Æloc_vec_åì_ba£lök
(
n
Ë((
åì_ba£lök
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ba£lök),Ç 
MEM_STAT_INFO
)))

	)

375 
	#ggc_Æloc_˛óªd_vec_åì_ba£lök
(
n
Ë((
åì_ba£lök
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ba£lök),Ç 
MEM_STAT_INFO
)))

	)

376 
	#ggc_Æloc_åì_ovîlﬂd
(Ë((
åì_ovîlﬂd
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ovîlﬂdË
MEM_STAT_INFO
)))

	)

377 
	#ggc_Æloc_˛óªd_åì_ovîlﬂd
(Ë((
åì_ovîlﬂd
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ovîlﬂdË
MEM_STAT_INFO
)))

	)

378 
	#ggc_Æloc_vec_åì_ovîlﬂd
(
n
Ë((
åì_ovîlﬂd
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ovîlﬂd),Ç 
MEM_STAT_INFO
)))

	)

379 
	#ggc_Æloc_˛óªd_vec_åì_ovîlﬂd
(
n
Ë((
åì_ovîlﬂd
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ovîlﬂd),Ç 
MEM_STAT_INFO
)))

	)

380 
	#ggc_Æloc_±rmem_c°
(Ë((
±rmem_c°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (±rmem_c°Ë
MEM_STAT_INFO
)))

	)

381 
	#ggc_Æloc_˛óªd_±rmem_c°
(Ë((
±rmem_c°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (±rmem_c°Ë
MEM_STAT_INFO
)))

	)

382 
	#ggc_Æloc_vec_±rmem_c°
(
n
Ë((
±rmem_c°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (±rmem_c°),Ç 
MEM_STAT_INFO
)))

	)

383 
	#ggc_Æloc_˛óªd_vec_±rmem_c°
(
n
Ë((
±rmem_c°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (±rmem_c°),Ç 
MEM_STAT_INFO
)))

	)

384 
	#ggc_Æloc_ãm∂©e_∑rm_ödex_s
(Ë((
ãm∂©e_∑rm_ödex_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ãm∂©e_∑rm_ödex_sË
MEM_STAT_INFO
)))

	)

385 
	#ggc_Æloc_˛óªd_ãm∂©e_∑rm_ödex_s
(Ë((
ãm∂©e_∑rm_ödex_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ãm∂©e_∑rm_ödex_sË
MEM_STAT_INFO
)))

	)

386 
	#ggc_Æloc_vec_ãm∂©e_∑rm_ödex_s
(
n
Ë((
ãm∂©e_∑rm_ödex_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ãm∂©e_∑rm_ödex_s),Ç 
MEM_STAT_INFO
)))

	)

387 
	#ggc_Æloc_˛óªd_vec_ãm∂©e_∑rm_ödex_s
(
n
Ë((
ãm∂©e_∑rm_ödex_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ãm∂©e_∑rm_ödex_s),Ç 
MEM_STAT_INFO
)))

	)

388 
	#ggc_Æloc_ßved_sc›e
(Ë((
ßved_sc›e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ßved_sc›eË
MEM_STAT_INFO
)))

	)

389 
	#ggc_Æloc_˛óªd_ßved_sc›e
(Ë((
ßved_sc›e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ßved_sc›eË
MEM_STAT_INFO
)))

	)

390 
	#ggc_Æloc_vec_ßved_sc›e
(
n
Ë((
ßved_sc›e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ßved_sc›e),Ç 
MEM_STAT_INFO
)))

	)

391 
	#ggc_Æloc_˛óªd_vec_ßved_sc›e
(
n
Ë((
ßved_sc›e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ßved_sc›e),Ç 
MEM_STAT_INFO
)))

	)

392 
	#ggc_Æloc_cxx_öt_åì_m≠
(Ë((
cxx_öt_åì_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cxx_öt_åì_m≠Ë
MEM_STAT_INFO
)))

	)

393 
	#ggc_Æloc_˛óªd_cxx_öt_åì_m≠
(Ë((
cxx_öt_åì_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cxx_öt_åì_m≠Ë
MEM_STAT_INFO
)))

	)

394 
	#ggc_Æloc_vec_cxx_öt_åì_m≠
(
n
Ë((
cxx_öt_åì_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cxx_öt_åì_m≠),Ç 
MEM_STAT_INFO
)))

	)

395 
	#ggc_Æloc_˛óªd_vec_cxx_öt_åì_m≠
(
n
Ë((
cxx_öt_åì_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cxx_öt_åì_m≠),Ç 
MEM_STAT_INFO
)))

	)

396 
	#ggc_Æloc_vec_˝_œbñ_bödög_va_gc_
(Ë((
vec
<
˝_œbñ_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<˝_œbñ_bödög,va_gc>Ë
MEM_STAT_INFO
)))

	)

397 
	#ggc_Æloc_˛óªd_vec_˝_œbñ_bödög_va_gc_
(Ë((
vec
<
˝_œbñ_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<˝_œbñ_bödög,va_gc>Ë
MEM_STAT_INFO
)))

	)

398 
	#ggc_Æloc_vec_vec_˝_œbñ_bödög_va_gc_
(
n
Ë((
vec
<
˝_œbñ_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<˝_œbñ_bödög,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

399 
	#ggc_Æloc_˛óªd_vec_vec_˝_œbñ_bödög_va_gc_
(
n
Ë((
vec
<
˝_œbñ_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<˝_œbñ_bödög,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

400 
	#ggc_Æloc_vec_˝_˛ass_bödög_va_gc_
(Ë((
vec
<
˝_˛ass_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<˝_˛ass_bödög,va_gc>Ë
MEM_STAT_INFO
)))

	)

401 
	#ggc_Æloc_˛óªd_vec_˝_˛ass_bödög_va_gc_
(Ë((
vec
<
˝_˛ass_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<˝_˛ass_bödög,va_gc>Ë
MEM_STAT_INFO
)))

	)

402 
	#ggc_Æloc_vec_vec_˝_˛ass_bödög_va_gc_
(
n
Ë((
vec
<
˝_˛ass_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<˝_˛ass_bödög,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

403 
	#ggc_Æloc_˛óªd_vec_vec_˝_˛ass_bödög_va_gc_
(
n
Ë((
vec
<
˝_˛ass_bödög
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<˝_˛ass_bödög,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

404 
	#ggc_Æloc_˝_œbñ_bödög
(Ë((
˝_œbñ_bödög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_œbñ_bödögË
MEM_STAT_INFO
)))

	)

405 
	#ggc_Æloc_˛óªd_˝_œbñ_bödög
(Ë((
˝_œbñ_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_œbñ_bödögË
MEM_STAT_INFO
)))

	)

406 
	#ggc_Æloc_vec_˝_œbñ_bödög
(
n
Ë((
˝_œbñ_bödög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_œbñ_bödög),Ç 
MEM_STAT_INFO
)))

	)

407 
	#ggc_Æloc_˛óªd_vec_˝_œbñ_bödög
(
n
Ë((
˝_œbñ_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_œbñ_bödög),Ç 
MEM_STAT_INFO
)))

	)

408 
	#ggc_Æloc_˝_˛ass_bödög
(Ë((
˝_˛ass_bödög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_˛ass_bödögË
MEM_STAT_INFO
)))

	)

409 
	#ggc_Æloc_˛óªd_˝_˛ass_bödög
(Ë((
˝_˛ass_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_˛ass_bödögË
MEM_STAT_INFO
)))

	)

410 
	#ggc_Æloc_vec_˝_˛ass_bödög
(
n
Ë((
˝_˛ass_bödög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_˛ass_bödög),Ç 
MEM_STAT_INFO
)))

	)

411 
	#ggc_Æloc_˛óªd_vec_˝_˛ass_bödög
(
n
Ë((
˝_˛ass_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_˛ass_bödög),Ç 
MEM_STAT_INFO
)))

	)

412 
	#ggc_Æloc_cxx_ßved_bödög
(Ë((
cxx_ßved_bödög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cxx_ßved_bödögË
MEM_STAT_INFO
)))

	)

413 
	#ggc_Æloc_˛óªd_cxx_ßved_bödög
(Ë((
cxx_ßved_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cxx_ßved_bödögË
MEM_STAT_INFO
)))

	)

414 
	#ggc_Æloc_vec_cxx_ßved_bödög
(
n
Ë((
cxx_ßved_bödög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cxx_ßved_bödög),Ç 
MEM_STAT_INFO
)))

	)

415 
	#ggc_Æloc_˛óªd_vec_cxx_ßved_bödög
(
n
Ë((
cxx_ßved_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cxx_ßved_bödög),Ç 
MEM_STAT_INFO
)))

	)

416 
	#ggc_Æloc_˝_bödög_Àvñ
(Ë((
˝_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_bödög_ÀvñË
MEM_STAT_INFO
)))

	)

417 
	#ggc_Æloc_˛óªd_˝_bödög_Àvñ
(Ë((
˝_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_bödög_ÀvñË
MEM_STAT_INFO
)))

	)

418 
	#ggc_Æloc_vec_˝_bödög_Àvñ
(
n
Ë((
˝_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_bödög_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

419 
	#ggc_Æloc_˛óªd_vec_˝_bödög_Àvñ
(
n
Ë((
˝_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_bödög_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

420 
	#ggc_Æloc_cxx_bödög
(Ë((
cxx_bödög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cxx_bödögË
MEM_STAT_INFO
)))

	)

421 
	#ggc_Æloc_˛óªd_cxx_bödög
(Ë((
cxx_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cxx_bödögË
MEM_STAT_INFO
)))

	)

422 
	#ggc_Æloc_vec_cxx_bödög
(
n
Ë((
cxx_bödög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cxx_bödög),Ç 
MEM_STAT_INFO
)))

	)

423 
	#ggc_Æloc_˛óªd_vec_cxx_bödög
(
n
Ë((
cxx_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cxx_bödög),Ç 
MEM_STAT_INFO
)))

	)

424 
	#ggc_Æloc_bödög_íåy_s
(Ë((
bödög_íåy_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bödög_íåy_sË
MEM_STAT_INFO
)))

	)

425 
	#ggc_Æloc_˛óªd_bödög_íåy_s
(Ë((
bödög_íåy_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bödög_íåy_sË
MEM_STAT_INFO
)))

	)

426 
	#ggc_Æloc_vec_bödög_íåy_s
(
n
Ë((
bödög_íåy_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bödög_íåy_s),Ç 
MEM_STAT_INFO
)))

	)

427 
	#ggc_Æloc_˛óªd_vec_bödög_íåy_s
(
n
Ë((
bödög_íåy_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bödög_íåy_s),Ç 
MEM_STAT_INFO
)))

	)

428 
	#ggc_Æloc_bödög_èbÀ_s
(Ë((
bödög_èbÀ_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bödög_èbÀ_sË
MEM_STAT_INFO
)))

	)

429 
	#ggc_Æloc_˛óªd_bödög_èbÀ_s
(Ë((
bödög_èbÀ_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bödög_èbÀ_sË
MEM_STAT_INFO
)))

	)

430 
	#ggc_Æloc_vec_bödög_èbÀ_s
(
n
Ë((
bödög_èbÀ_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bödög_èbÀ_s),Ç 
MEM_STAT_INFO
)))

	)

431 
	#ggc_Æloc_˛óªd_vec_bödög_èbÀ_s
(
n
Ë((
bödög_èbÀ_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bödög_èbÀ_s),Ç 
MEM_STAT_INFO
)))

	)

432 
	#ggc_Æloc_tö°_Àvñ
(Ë((
tö°_Àvñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (tö°_ÀvñË
MEM_STAT_INFO
)))

	)

433 
	#ggc_Æloc_˛óªd_tö°_Àvñ
(Ë((
tö°_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (tö°_ÀvñË
MEM_STAT_INFO
)))

	)

434 
	#ggc_Æloc_vec_tö°_Àvñ
(
n
Ë((
tö°_Àvñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (tö°_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

435 
	#ggc_Æloc_˛óªd_vec_tö°_Àvñ
(
n
Ë((
tö°_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (tö°_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

436 
	#ggc_Æloc_globÆs
(Ë((
globÆs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (globÆsË
MEM_STAT_INFO
)))

	)

437 
	#ggc_Æloc_˛óªd_globÆs
(Ë((
globÆs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (globÆsË
MEM_STAT_INFO
)))

	)

438 
	#ggc_Æloc_vec_globÆs
(
n
Ë((
globÆs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (globÆs),Ç 
MEM_STAT_INFO
)))

	)

439 
	#ggc_Æloc_˛óªd_vec_globÆs
(
n
Ë((
globÆs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (globÆs),Ç 
MEM_STAT_INFO
)))

	)

440 
	#ggc_Æloc_vec_töfo_s_va_gc_
(Ë((
vec
<
töfo_s
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<töfo_s,va_gc>Ë
MEM_STAT_INFO
)))

	)

441 
	#ggc_Æloc_˛óªd_vec_töfo_s_va_gc_
(Ë((
vec
<
töfo_s
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<töfo_s,va_gc>Ë
MEM_STAT_INFO
)))

	)

442 
	#ggc_Æloc_vec_vec_töfo_s_va_gc_
(
n
Ë((
vec
<
töfo_s
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<töfo_s,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

443 
	#ggc_Æloc_˛óªd_vec_vec_töfo_s_va_gc_
(
n
Ë((
vec
<
töfo_s
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<töfo_s,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

444 
	#ggc_Æloc_töfo_s
(Ë((
töfo_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (töfo_sË
MEM_STAT_INFO
)))

	)

445 
	#ggc_Æloc_˛óªd_töfo_s
(Ë((
töfo_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (töfo_sË
MEM_STAT_INFO
)))

	)

446 
	#ggc_Æloc_vec_töfo_s
(
n
Ë((
töfo_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (töfo_s),Ç 
MEM_STAT_INFO
)))

	)

447 
	#ggc_Æloc_˛óªd_vec_töfo_s
(
n
Ë((
töfo_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (töfo_s),Ç 
MEM_STAT_INFO
)))

	)

448 
	#ggc_Æloc_c_∑r£r
(Ë((
c_∑r£r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_∑r£rË
MEM_STAT_INFO
)))

	)

449 
	#ggc_Æloc_˛óªd_c_∑r£r
(Ë((
c_∑r£r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_∑r£rË
MEM_STAT_INFO
)))

	)

450 
	#ggc_Æloc_vec_c_∑r£r
(
n
Ë((
c_∑r£r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_∑r£r),Ç 
MEM_STAT_INFO
)))

	)

451 
	#ggc_Æloc_˛óªd_vec_c_∑r£r
(
n
Ë((
c_∑r£r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_∑r£r),Ç 
MEM_STAT_INFO
)))

	)

452 
	#ggc_Æloc_vec_c_tokí_va_gc_
(Ë((
vec
<
c_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<c_tokí,va_gc>Ë
MEM_STAT_INFO
)))

	)

453 
	#ggc_Æloc_˛óªd_vec_c_tokí_va_gc_
(Ë((
vec
<
c_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<c_tokí,va_gc>Ë
MEM_STAT_INFO
)))

	)

454 
	#ggc_Æloc_vec_vec_c_tokí_va_gc_
(
n
Ë((
vec
<
c_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<c_tokí,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

455 
	#ggc_Æloc_˛óªd_vec_vec_c_tokí_va_gc_
(
n
Ë((
vec
<
c_tokí
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<c_tokí,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

456 
	#ggc_Æloc_c_tokí
(Ë((
c_tokí
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_tokíË
MEM_STAT_INFO
)))

	)

457 
	#ggc_Æloc_˛óªd_c_tokí
(Ë((
c_tokí
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_tokíË
MEM_STAT_INFO
)))

	)

458 
	#ggc_Æloc_vec_c_tokí
(
n
Ë((
c_tokí
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_tokí),Ç 
MEM_STAT_INFO
)))

	)

459 
	#ggc_Æloc_˛óªd_vec_c_tokí
(
n
Ë((
c_tokí
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_tokí),Ç 
MEM_STAT_INFO
)))

	)

460 
	#ggc_Æloc_›t_°ack
(Ë((
›t_°ack
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (›t_°ackË
MEM_STAT_INFO
)))

	)

461 
	#ggc_Æloc_˛óªd_›t_°ack
(Ë((
›t_°ack
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (›t_°ackË
MEM_STAT_INFO
)))

	)

462 
	#ggc_Æloc_vec_›t_°ack
(
n
Ë((
›t_°ack
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (›t_°ack),Ç 
MEM_STAT_INFO
)))

	)

463 
	#ggc_Æloc_˛óªd_vec_›t_°ack
(
n
Ë((
›t_°ack
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (›t_°ack),Ç 
MEM_STAT_INFO
)))

	)

464 
	#ggc_Æloc_vec_≥ndög_ªdeföôi⁄_va_gc_
(Ë((
vec
<
≥ndög_ªdeföôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<≥ndög_ªdeföôi⁄,va_gc>Ë
MEM_STAT_INFO
)))

	)

465 
	#ggc_Æloc_˛óªd_vec_≥ndög_ªdeföôi⁄_va_gc_
(Ë((
vec
<
≥ndög_ªdeföôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<≥ndög_ªdeföôi⁄,va_gc>Ë
MEM_STAT_INFO
)))

	)

466 
	#ggc_Æloc_vec_vec_≥ndög_ªdeföôi⁄_va_gc_
(
n
Ë((
vec
<
≥ndög_ªdeföôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<≥ndög_ªdeföôi⁄,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

467 
	#ggc_Æloc_˛óªd_vec_vec_≥ndög_ªdeföôi⁄_va_gc_
(
n
Ë((
vec
<
≥ndög_ªdeföôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<≥ndög_ªdeföôi⁄,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

468 
	#ggc_Æloc_≥ndög_ªdeföôi⁄_d
(Ë((
≥ndög_ªdeföôi⁄_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_ªdeföôi⁄_dË
MEM_STAT_INFO
)))

	)

469 
	#ggc_Æloc_˛óªd_≥ndög_ªdeföôi⁄_d
(Ë((
≥ndög_ªdeföôi⁄_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_ªdeföôi⁄_dË
MEM_STAT_INFO
)))

	)

470 
	#ggc_Æloc_vec_≥ndög_ªdeföôi⁄_d
(
n
Ë((
≥ndög_ªdeföôi⁄_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_ªdeföôi⁄_d),Ç 
MEM_STAT_INFO
)))

	)

471 
	#ggc_Æloc_˛óªd_vec_≥ndög_ªdeföôi⁄_d
(
n
Ë((
≥ndög_ªdeföôi⁄_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_ªdeföôi⁄_d),Ç 
MEM_STAT_INFO
)))

	)

472 
	#ggc_Æloc_vec_≥ndög_wók_va_gc_
(Ë((
vec
<
≥ndög_wók
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<≥ndög_wók,va_gc>Ë
MEM_STAT_INFO
)))

	)

473 
	#ggc_Æloc_˛óªd_vec_≥ndög_wók_va_gc_
(Ë((
vec
<
≥ndög_wók
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<≥ndög_wók,va_gc>Ë
MEM_STAT_INFO
)))

	)

474 
	#ggc_Æloc_vec_vec_≥ndög_wók_va_gc_
(
n
Ë((
vec
<
≥ndög_wók
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<≥ndög_wók,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

475 
	#ggc_Æloc_˛óªd_vec_vec_≥ndög_wók_va_gc_
(
n
Ë((
vec
<
≥ndög_wók
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<≥ndög_wók,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

476 
	#ggc_Æloc_≥ndög_wók_d
(Ë((
≥ndög_wók_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_wók_dË
MEM_STAT_INFO
)))

	)

477 
	#ggc_Æloc_˛óªd_≥ndög_wók_d
(Ë((
≥ndög_wók_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_wók_dË
MEM_STAT_INFO
)))

	)

478 
	#ggc_Æloc_vec_≥ndög_wók_d
(
n
Ë((
≥ndög_wók_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_wók_d),Ç 
MEM_STAT_INFO
)))

	)

479 
	#ggc_Æloc_˛óªd_vec_≥ndög_wók_d
(
n
Ë((
≥ndög_wók_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_wók_d),Ç 
MEM_STAT_INFO
)))

	)

480 
	#ggc_Æloc_Æign_°ack
(Ë((
Æign_°ack
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (Æign_°ackË
MEM_STAT_INFO
)))

	)

481 
	#ggc_Æloc_˛óªd_Æign_°ack
(Ë((
Æign_°ack
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (Æign_°ackË
MEM_STAT_INFO
)))

	)

482 
	#ggc_Æloc_vec_Æign_°ack
(
n
Ë((
Æign_°ack
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (Æign_°ack),Ç 
MEM_STAT_INFO
)))

	)

483 
	#ggc_Æloc_˛óªd_vec_Æign_°ack
(
n
Ë((
Æign_°ack
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (Æign_°ack),Ç 
MEM_STAT_INFO
)))

	)

484 
	#ggc_Æloc_œzy_hex_Â_vÆue_°ru˘
(Ë((
œzy_hex_Â_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œzy_hex_Â_vÆue_°ru˘Ë
MEM_STAT_INFO
)))

	)

485 
	#ggc_Æloc_˛óªd_œzy_hex_Â_vÆue_°ru˘
(Ë((
œzy_hex_Â_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œzy_hex_Â_vÆue_°ru˘Ë
MEM_STAT_INFO
)))

	)

486 
	#ggc_Æloc_vec_œzy_hex_Â_vÆue_°ru˘
(
n
Ë((
œzy_hex_Â_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œzy_hex_Â_vÆue_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

487 
	#ggc_Æloc_˛óªd_vec_œzy_hex_Â_vÆue_°ru˘
(
n
Ë((
œzy_hex_Â_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œzy_hex_Â_vÆue_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

488 
	#ggc_Æloc_åì_u£rdef_lôîÆ
(Ë((
åì_u£rdef_lôîÆ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_u£rdef_lôîÆË
MEM_STAT_INFO
)))

	)

489 
	#ggc_Æloc_˛óªd_åì_u£rdef_lôîÆ
(Ë((
åì_u£rdef_lôîÆ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_u£rdef_lôîÆË
MEM_STAT_INFO
)))

	)

490 
	#ggc_Æloc_vec_åì_u£rdef_lôîÆ
(
n
Ë((
åì_u£rdef_lôîÆ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_u£rdef_lôîÆ),Ç 
MEM_STAT_INFO
)))

	)

491 
	#ggc_Æloc_˛óªd_vec_åì_u£rdef_lôîÆ
(
n
Ë((
åì_u£rdef_lôîÆ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_u£rdef_lôîÆ),Ç 
MEM_STAT_INFO
)))

	)

492 
	#ggc_Æloc_vec_åì_gc_vec_va_gc_
(Ë((
vec
<
åì_gc_vec
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<åì_gc_vec,va_gc>Ë
MEM_STAT_INFO
)))

	)

493 
	#ggc_Æloc_˛óªd_vec_åì_gc_vec_va_gc_
(Ë((
vec
<
åì_gc_vec
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<åì_gc_vec,va_gc>Ë
MEM_STAT_INFO
)))

	)

494 
	#ggc_Æloc_vec_vec_åì_gc_vec_va_gc_
(
n
Ë((
vec
<
åì_gc_vec
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<åì_gc_vec,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

495 
	#ggc_Æloc_˛óªd_vec_vec_åì_gc_vec_va_gc_
(
n
Ë((
vec
<
åì_gc_vec
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<åì_gc_vec,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

496 
	#ggc_Æloc_c_œnguage_fun˘i⁄
(Ë((
c_œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_œnguage_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

497 
	#ggc_Æloc_˛óªd_c_œnguage_fun˘i⁄
(Ë((
c_œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_œnguage_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

498 
	#ggc_Æloc_vec_c_œnguage_fun˘i⁄
(
n
Ë((
c_œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_œnguage_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

499 
	#ggc_Æloc_˛óªd_vec_c_œnguage_fun˘i⁄
(
n
Ë((
c_œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_œnguage_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

500 
	#ggc_Æloc_vec_c⁄°_ch¨_p_va_gc_
(Ë((
vec
<
c⁄°_ch¨_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<c⁄°_ch¨_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

501 
	#ggc_Æloc_˛óªd_vec_c⁄°_ch¨_p_va_gc_
(Ë((
vec
<
c⁄°_ch¨_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<c⁄°_ch¨_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

502 
	#ggc_Æloc_vec_vec_c⁄°_ch¨_p_va_gc_
(
n
Ë((
vec
<
c⁄°_ch¨_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<c⁄°_ch¨_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

503 
	#ggc_Æloc_˛óªd_vec_vec_c⁄°_ch¨_p_va_gc_
(
n
Ë((
vec
<
c⁄°_ch¨_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<c⁄°_ch¨_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

504 
	#ggc_Æloc_s‹ãd_fõlds_ty≥
(
SIZE
Ë((
s‹ãd_fõlds_ty≥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

505 
	#ggc_Æloc_˛óªd_s‹ãd_fõlds_ty≥
(
SIZE
Ë((
s‹ãd_fõlds_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

506 
	#ggc_Æloc_vec_s‹ãd_fõlds_ty≥
(
SIZE
, 
n
Ë((
s‹ãd_fõlds_ty≥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

507 
	#ggc_Æloc_˛óªd_vec_s‹ãd_fõlds_ty≥
(
SIZE
, 
n
Ë((
s‹ãd_fõlds_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

508 
	#ggc_Æloc_c_ölöe_°©ic
(Ë((
c_ölöe_°©ic
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_ölöe_°©icË
MEM_STAT_INFO
)))

	)

509 
	#ggc_Æloc_˛óªd_c_ölöe_°©ic
(Ë((
c_ölöe_°©ic
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_ölöe_°©icË
MEM_STAT_INFO
)))

	)

510 
	#ggc_Æloc_vec_c_ölöe_°©ic
(
n
Ë((
c_ölöe_°©ic
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_ölöe_°©ic),Ç 
MEM_STAT_INFO
)))

	)

511 
	#ggc_Æloc_˛óªd_vec_c_ölöe_°©ic
(
n
Ë((
c_ölöe_°©ic
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_ölöe_°©ic),Ç 
MEM_STAT_INFO
)))

	)

512 
	#ggc_Æloc_vec_c_gŸo_bödögs_p_va_gc_
(Ë((
vec
<
c_gŸo_bödögs_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<c_gŸo_bödögs_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

513 
	#ggc_Æloc_˛óªd_vec_c_gŸo_bödögs_p_va_gc_
(Ë((
vec
<
c_gŸo_bödögs_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<c_gŸo_bödögs_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

514 
	#ggc_Æloc_vec_vec_c_gŸo_bödögs_p_va_gc_
(
n
Ë((
vec
<
c_gŸo_bödögs_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<c_gŸo_bödögs_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

515 
	#ggc_Æloc_˛óªd_vec_vec_c_gŸo_bödögs_p_va_gc_
(
n
Ë((
vec
<
c_gŸo_bödögs_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<c_gŸo_bödögs_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

516 
	#ggc_Æloc_c_gŸo_bödögs
(Ë((
c_gŸo_bödögs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_gŸo_bödögsË
MEM_STAT_INFO
)))

	)

517 
	#ggc_Æloc_˛óªd_c_gŸo_bödögs
(Ë((
c_gŸo_bödögs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_gŸo_bödögsË
MEM_STAT_INFO
)))

	)

518 
	#ggc_Æloc_vec_c_gŸo_bödögs
(
n
Ë((
c_gŸo_bödögs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_gŸo_bödögs),Ç 
MEM_STAT_INFO
)))

	)

519 
	#ggc_Æloc_˛óªd_vec_c_gŸo_bödögs
(
n
Ë((
c_gŸo_bödögs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_gŸo_bödögs),Ç 
MEM_STAT_INFO
)))

	)

520 
	#ggc_Æloc_c_sc›e
(Ë((
c_sc›e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_sc›eË
MEM_STAT_INFO
)))

	)

521 
	#ggc_Æloc_˛óªd_c_sc›e
(Ë((
c_sc›e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_sc›eË
MEM_STAT_INFO
)))

	)

522 
	#ggc_Æloc_vec_c_sc›e
(
n
Ë((
c_sc›e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_sc›e),Ç 
MEM_STAT_INFO
)))

	)

523 
	#ggc_Æloc_˛óªd_vec_c_sc›e
(
n
Ë((
c_sc›e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_sc›e),Ç 
MEM_STAT_INFO
)))

	)

524 
	#ggc_Æloc_œng_idítifõr
(Ë((
œng_idítifõr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_idítifõrË
MEM_STAT_INFO
)))

	)

525 
	#ggc_Æloc_˛óªd_œng_idítifõr
(Ë((
œng_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_idítifõrË
MEM_STAT_INFO
)))

	)

526 
	#ggc_Æloc_vec_œng_idítifõr
(
n
Ë((
œng_idítifõr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

527 
	#ggc_Æloc_˛óªd_vec_œng_idítifõr
(
n
Ë((
œng_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

528 
	#ggc_Æloc_c_comm⁄_idítifõr
(Ë((
c_comm⁄_idítifõr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_comm⁄_idítifõrË
MEM_STAT_INFO
)))

	)

529 
	#ggc_Æloc_˛óªd_c_comm⁄_idítifõr
(Ë((
c_comm⁄_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_comm⁄_idítifõrË
MEM_STAT_INFO
)))

	)

530 
	#ggc_Æloc_vec_c_comm⁄_idítifõr
(
n
Ë((
c_comm⁄_idítifõr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_comm⁄_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

531 
	#ggc_Æloc_˛óªd_vec_c_comm⁄_idítifõr
(
n
Ë((
c_comm⁄_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_comm⁄_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

532 
	#ggc_Æloc_c_bödög
(Ë((
c_bödög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_bödögË
MEM_STAT_INFO
)))

	)

533 
	#ggc_Æloc_˛óªd_c_bödög
(Ë((
c_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_bödögË
MEM_STAT_INFO
)))

	)

534 
	#ggc_Æloc_vec_c_bödög
(
n
Ë((
c_bödög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_bödög),Ç 
MEM_STAT_INFO
)))

	)

535 
	#ggc_Æloc_˛óªd_vec_c_bödög
(
n
Ë((
c_bödög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_bödög),Ç 
MEM_STAT_INFO
)))

	)

536 
	#ggc_Æloc_c_œbñ_v¨s
(Ë((
c_œbñ_v¨s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_œbñ_v¨sË
MEM_STAT_INFO
)))

	)

537 
	#ggc_Æloc_˛óªd_c_œbñ_v¨s
(Ë((
c_œbñ_v¨s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_œbñ_v¨sË
MEM_STAT_INFO
)))

	)

538 
	#ggc_Æloc_vec_c_œbñ_v¨s
(
n
Ë((
c_œbñ_v¨s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_œbñ_v¨s),Ç 
MEM_STAT_INFO
)))

	)

539 
	#ggc_Æloc_˛óªd_vec_c_œbñ_v¨s
(
n
Ë((
c_œbñ_v¨s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_œbñ_v¨s),Ç 
MEM_STAT_INFO
)))

	)

540 
	#ggc_Æloc_°mt_åì_s
(Ë((
°mt_åì_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°mt_åì_sË
MEM_STAT_INFO
)))

	)

541 
	#ggc_Æloc_˛óªd_°mt_åì_s
(Ë((
°mt_åì_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°mt_åì_sË
MEM_STAT_INFO
)))

	)

542 
	#ggc_Æloc_vec_°mt_åì_s
(
n
Ë((
°mt_åì_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°mt_åì_s),Ç 
MEM_STAT_INFO
)))

	)

543 
	#ggc_Æloc_˛óªd_vec_°mt_åì_s
(
n
Ë((
°mt_åì_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°mt_åì_s),Ç 
MEM_STAT_INFO
)))

	)

544 
	#ggc_Æloc_c_•Ÿ_bödögs
(Ë((
c_•Ÿ_bödögs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_•Ÿ_bödögsË
MEM_STAT_INFO
)))

	)

545 
	#ggc_Æloc_˛óªd_c_•Ÿ_bödögs
(Ë((
c_•Ÿ_bödögs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_•Ÿ_bödögsË
MEM_STAT_INFO
)))

	)

546 
	#ggc_Æloc_vec_c_•Ÿ_bödögs
(
n
Ë((
c_•Ÿ_bödögs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_•Ÿ_bödögs),Ç 
MEM_STAT_INFO
)))

	)

547 
	#ggc_Æloc_˛óªd_vec_c_•Ÿ_bödögs
(
n
Ë((
c_•Ÿ_bödögs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_•Ÿ_bödögs),Ç 
MEM_STAT_INFO
)))

	)

548 
	#ggc_Æloc_∑d_ty≥_hash
(Ë((
∑d_ty≥_hash
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (∑d_ty≥_hashË
MEM_STAT_INFO
)))

	)

549 
	#ggc_Æloc_˛óªd_∑d_ty≥_hash
(Ë((
∑d_ty≥_hash
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (∑d_ty≥_hashË
MEM_STAT_INFO
)))

	)

550 
	#ggc_Æloc_vec_∑d_ty≥_hash
(
n
Ë((
∑d_ty≥_hash
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (∑d_ty≥_hash),Ç 
MEM_STAT_INFO
)))

	)

551 
	#ggc_Æloc_˛óªd_vec_∑d_ty≥_hash
(
n
Ë((
∑d_ty≥_hash
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (∑d_ty≥_hash),Ç 
MEM_STAT_INFO
)))

	)

552 
	#ggc_Æloc_g«t_bödög_Àvñ
(Ë((
g«t_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (g«t_bödög_ÀvñË
MEM_STAT_INFO
)))

	)

553 
	#ggc_Æloc_˛óªd_g«t_bödög_Àvñ
(Ë((
g«t_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (g«t_bödög_ÀvñË
MEM_STAT_INFO
)))

	)

554 
	#ggc_Æloc_vec_g«t_bödög_Àvñ
(
n
Ë((
g«t_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (g«t_bödög_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

555 
	#ggc_Æloc_˛óªd_vec_g«t_bödög_Àvñ
(
n
Ë((
g«t_bödög_Àvñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (g«t_bödög_Àvñ),Ç 
MEM_STAT_INFO
)))

	)

556 
	#ggc_Æloc_vec_lo›_öfo_va_gc_
(Ë((
vec
<
lo›_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<lo›_öfo,va_gc>Ë
MEM_STAT_INFO
)))

	)

557 
	#ggc_Æloc_˛óªd_vec_lo›_öfo_va_gc_
(Ë((
vec
<
lo›_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<lo›_öfo,va_gc>Ë
MEM_STAT_INFO
)))

	)

558 
	#ggc_Æloc_vec_vec_lo›_öfo_va_gc_
(
n
Ë((
vec
<
lo›_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<lo›_öfo,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

559 
	#ggc_Æloc_˛óªd_vec_vec_lo›_öfo_va_gc_
(
n
Ë((
vec
<
lo›_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<lo›_öfo,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

560 
	#ggc_Æloc_lo›_öfo_d
(Ë((
lo›_öfo_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (lo›_öfo_dË
MEM_STAT_INFO
)))

	)

561 
	#ggc_Æloc_˛óªd_lo›_öfo_d
(Ë((
lo›_öfo_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (lo›_öfo_dË
MEM_STAT_INFO
)))

	)

562 
	#ggc_Æloc_vec_lo›_öfo_d
(
n
Ë((
lo›_öfo_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (lo›_öfo_d),Ç 
MEM_STAT_INFO
)))

	)

563 
	#ggc_Æloc_˛óªd_vec_lo›_öfo_d
(
n
Ë((
lo›_öfo_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (lo›_öfo_d),Ç 
MEM_STAT_INFO
)))

	)

564 
	#ggc_Æloc_vec_ønge_check_öfo_va_gc_
(Ë((
vec
<
ønge_check_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ønge_check_öfo,va_gc>Ë
MEM_STAT_INFO
)))

	)

565 
	#ggc_Æloc_˛óªd_vec_ønge_check_öfo_va_gc_
(Ë((
vec
<
ønge_check_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ønge_check_öfo,va_gc>Ë
MEM_STAT_INFO
)))

	)

566 
	#ggc_Æloc_vec_vec_ønge_check_öfo_va_gc_
(
n
Ë((
vec
<
ønge_check_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ønge_check_öfo,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

567 
	#ggc_Æloc_˛óªd_vec_vec_ønge_check_öfo_va_gc_
(
n
Ë((
vec
<
ønge_check_öfo
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ønge_check_öfo,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

568 
	#ggc_Æloc_ønge_check_öfo_d
(Ë((
ønge_check_öfo_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ønge_check_öfo_dË
MEM_STAT_INFO
)))

	)

569 
	#ggc_Æloc_˛óªd_ønge_check_öfo_d
(Ë((
ønge_check_öfo_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ønge_check_öfo_dË
MEM_STAT_INFO
)))

	)

570 
	#ggc_Æloc_vec_ønge_check_öfo_d
(
n
Ë((
ønge_check_öfo_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ønge_check_öfo_d),Ç 
MEM_STAT_INFO
)))

	)

571 
	#ggc_Æloc_˛óªd_vec_ønge_check_öfo_d
(
n
Ë((
ønge_check_öfo_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ønge_check_öfo_d),Ç 
MEM_STAT_INFO
)))

	)

572 
	#ggc_Æloc_ñab_öfo
(Ë((
ñab_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ñab_öfoË
MEM_STAT_INFO
)))

	)

573 
	#ggc_Æloc_˛óªd_ñab_öfo
(Ë((
ñab_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ñab_öfoË
MEM_STAT_INFO
)))

	)

574 
	#ggc_Æloc_vec_ñab_öfo
(
n
Ë((
ñab_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ñab_öfo),Ç 
MEM_STAT_INFO
)))

	)

575 
	#ggc_Æloc_˛óªd_vec_ñab_öfo
(
n
Ë((
ñab_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ñab_öfo),Ç 
MEM_STAT_INFO
)))

	)

576 
	#ggc_Æloc_°mt_group
(Ë((
°mt_group
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°mt_groupË
MEM_STAT_INFO
)))

	)

577 
	#ggc_Æloc_˛óªd_°mt_group
(Ë((
°mt_group
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°mt_groupË
MEM_STAT_INFO
)))

	)

578 
	#ggc_Æloc_vec_°mt_group
(
n
Ë((
°mt_group
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°mt_group),Ç 
MEM_STAT_INFO
)))

	)

579 
	#ggc_Æloc_˛óªd_vec_°mt_group
(
n
Ë((
°mt_group
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°mt_group),Ç 
MEM_STAT_INFO
)))

	)

580 
	#ggc_Æloc_vec_∑rm_©å_va_gc_
(Ë((
vec
<
∑rm_©å
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<∑rm_©å,va_gc>Ë
MEM_STAT_INFO
)))

	)

581 
	#ggc_Æloc_˛óªd_vec_∑rm_©å_va_gc_
(Ë((
vec
<
∑rm_©å
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<∑rm_©å,va_gc>Ë
MEM_STAT_INFO
)))

	)

582 
	#ggc_Æloc_vec_vec_∑rm_©å_va_gc_
(
n
Ë((
vec
<
∑rm_©å
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<∑rm_©å,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

583 
	#ggc_Æloc_˛óªd_vec_vec_∑rm_©å_va_gc_
(
n
Ë((
vec
<
∑rm_©å
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<∑rm_©å,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

584 
	#ggc_Æloc_∑rm_©å_d
(Ë((
∑rm_©å_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (∑rm_©å_dË
MEM_STAT_INFO
)))

	)

585 
	#ggc_Æloc_˛óªd_∑rm_©å_d
(Ë((
∑rm_©å_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (∑rm_©å_dË
MEM_STAT_INFO
)))

	)

586 
	#ggc_Æloc_vec_∑rm_©å_d
(
n
Ë((
∑rm_©å_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (∑rm_©å_d),Ç 
MEM_STAT_INFO
)))

	)

587 
	#ggc_Æloc_˛óªd_vec_∑rm_©å_d
(
n
Ë((
∑rm_©å_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (∑rm_©å_d),Ç 
MEM_STAT_INFO
)))

	)

588 
	#ggc_Æloc_vec_odr_ty≥_va_gc_
(Ë((
vec
<
odr_ty≥
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<odr_ty≥,va_gc>Ë
MEM_STAT_INFO
)))

	)

589 
	#ggc_Æloc_˛óªd_vec_odr_ty≥_va_gc_
(Ë((
vec
<
odr_ty≥
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<odr_ty≥,va_gc>Ë
MEM_STAT_INFO
)))

	)

590 
	#ggc_Æloc_vec_vec_odr_ty≥_va_gc_
(
n
Ë((
vec
<
odr_ty≥
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<odr_ty≥,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

591 
	#ggc_Æloc_˛óªd_vec_vec_odr_ty≥_va_gc_
(
n
Ë((
vec
<
odr_ty≥
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<odr_ty≥,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

592 
	#ggc_Æloc_åì_ty≥_m≠
(Ë((
åì_ty≥_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥_m≠Ë
MEM_STAT_INFO
)))

	)

593 
	#ggc_Æloc_˛óªd_åì_ty≥_m≠
(Ë((
åì_ty≥_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥_m≠Ë
MEM_STAT_INFO
)))

	)

594 
	#ggc_Æloc_vec_åì_ty≥_m≠
(
n
Ë((
åì_ty≥_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥_m≠),Ç 
MEM_STAT_INFO
)))

	)

595 
	#ggc_Æloc_˛óªd_vec_åì_ty≥_m≠
(
n
Ë((
åì_ty≥_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥_m≠),Ç 
MEM_STAT_INFO
)))

	)

596 
	#ggc_Æloc_vec_ölöe_summ¨y_t_va_gc_
(Ë((
vec
<
ölöe_summ¨y_t
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ölöe_summ¨y_t,va_gc>Ë
MEM_STAT_INFO
)))

	)

597 
	#ggc_Æloc_˛óªd_vec_ölöe_summ¨y_t_va_gc_
(Ë((
vec
<
ölöe_summ¨y_t
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ölöe_summ¨y_t,va_gc>Ë
MEM_STAT_INFO
)))

	)

598 
	#ggc_Æloc_vec_vec_ölöe_summ¨y_t_va_gc_
(
n
Ë((
vec
<
ölöe_summ¨y_t
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ölöe_summ¨y_t,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

599 
	#ggc_Æloc_˛óªd_vec_vec_ölöe_summ¨y_t_va_gc_
(
n
Ë((
vec
<
ölöe_summ¨y_t
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ölöe_summ¨y_t,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

600 
	#ggc_Æloc_vec_size_time_íåy_va_gc_
(Ë((
vec
<
size_time_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<size_time_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

601 
	#ggc_Æloc_˛óªd_vec_size_time_íåy_va_gc_
(Ë((
vec
<
size_time_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<size_time_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

602 
	#ggc_Æloc_vec_vec_size_time_íåy_va_gc_
(
n
Ë((
vec
<
size_time_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<size_time_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

603 
	#ggc_Æloc_˛óªd_vec_vec_size_time_íåy_va_gc_
(
n
Ë((
vec
<
size_time_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<size_time_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

604 
	#ggc_Æloc_size_time_íåy
(Ë((
size_time_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (size_time_íåyË
MEM_STAT_INFO
)))

	)

605 
	#ggc_Æloc_˛óªd_size_time_íåy
(Ë((
size_time_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (size_time_íåyË
MEM_STAT_INFO
)))

	)

606 
	#ggc_Æloc_vec_size_time_íåy
(
n
Ë((
size_time_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (size_time_íåy),Ç 
MEM_STAT_INFO
)))

	)

607 
	#ggc_Æloc_˛óªd_vec_size_time_íåy
(
n
Ë((
size_time_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (size_time_íåy),Ç 
MEM_STAT_INFO
)))

	)

608 
	#ggc_Æloc_¥ediˇã
(Ë((
¥ediˇã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (¥ediˇãË
MEM_STAT_INFO
)))

	)

609 
	#ggc_Æloc_˛óªd_¥ediˇã
(Ë((
¥ediˇã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (¥ediˇãË
MEM_STAT_INFO
)))

	)

610 
	#ggc_Æloc_vec_¥ediˇã
(
n
Ë((
¥ediˇã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (¥ediˇã),Ç 
MEM_STAT_INFO
)))

	)

611 
	#ggc_Æloc_˛óªd_vec_¥ediˇã
(
n
Ë((
¥ediˇã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (¥ediˇã),Ç 
MEM_STAT_INFO
)))

	)

612 
	#ggc_Æloc_vec_c⁄dôi⁄_va_gc_
(Ë((
vec
<
c⁄dôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<c⁄dôi⁄,va_gc>Ë
MEM_STAT_INFO
)))

	)

613 
	#ggc_Æloc_˛óªd_vec_c⁄dôi⁄_va_gc_
(Ë((
vec
<
c⁄dôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<c⁄dôi⁄,va_gc>Ë
MEM_STAT_INFO
)))

	)

614 
	#ggc_Æloc_vec_vec_c⁄dôi⁄_va_gc_
(
n
Ë((
vec
<
c⁄dôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<c⁄dôi⁄,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

615 
	#ggc_Æloc_˛óªd_vec_vec_c⁄dôi⁄_va_gc_
(
n
Ë((
vec
<
c⁄dôi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<c⁄dôi⁄,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

616 
	#ggc_Æloc_c⁄dôi⁄
(Ë((
c⁄dôi⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄dôi⁄Ë
MEM_STAT_INFO
)))

	)

617 
	#ggc_Æloc_˛óªd_c⁄dôi⁄
(Ë((
c⁄dôi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄dôi⁄Ë
MEM_STAT_INFO
)))

	)

618 
	#ggc_Æloc_vec_c⁄dôi⁄
(
n
Ë((
c⁄dôi⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄dôi⁄),Ç 
MEM_STAT_INFO
)))

	)

619 
	#ggc_Æloc_˛óªd_vec_c⁄dôi⁄
(
n
Ë((
c⁄dôi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄dôi⁄),Ç 
MEM_STAT_INFO
)))

	)

620 
	#ggc_Æloc_…o_åì_ªf_èbÀ
(Ë((
…o_åì_ªf_èbÀ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (…o_åì_ªf_èbÀË
MEM_STAT_INFO
)))

	)

621 
	#ggc_Æloc_˛óªd_…o_åì_ªf_èbÀ
(Ë((
…o_åì_ªf_èbÀ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (…o_åì_ªf_èbÀË
MEM_STAT_INFO
)))

	)

622 
	#ggc_Æloc_vec_…o_åì_ªf_èbÀ
(
n
Ë((
…o_åì_ªf_èbÀ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (…o_åì_ªf_èbÀ),Ç 
MEM_STAT_INFO
)))

	)

623 
	#ggc_Æloc_˛óªd_vec_…o_åì_ªf_èbÀ
(
n
Ë((
…o_åì_ªf_èbÀ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (…o_åì_ªf_èbÀ),Ç 
MEM_STAT_INFO
)))

	)

624 
	#ggc_Æloc_…o_ö_de˛_°©e
(Ë((
…o_ö_de˛_°©e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (…o_ö_de˛_°©eË
MEM_STAT_INFO
)))

	)

625 
	#ggc_Æloc_˛óªd_…o_ö_de˛_°©e
(Ë((
…o_ö_de˛_°©e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (…o_ö_de˛_°©eË
MEM_STAT_INFO
)))

	)

626 
	#ggc_Æloc_vec_…o_ö_de˛_°©e
(
n
Ë((
…o_ö_de˛_°©e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (…o_ö_de˛_°©e),Ç 
MEM_STAT_INFO
)))

	)

627 
	#ggc_Æloc_˛óªd_vec_…o_ö_de˛_°©e
(
n
Ë((
…o_ö_de˛_°©e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (…o_ö_de˛_°©e),Ç 
MEM_STAT_INFO
)))

	)

628 
	#ggc_Æloc_vec_ùa_edge_¨gs_va_gc_
(Ë((
vec
<
ùa_edge_¨gs
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ùa_edge_¨gs,va_gc>Ë
MEM_STAT_INFO
)))

	)

629 
	#ggc_Æloc_˛óªd_vec_ùa_edge_¨gs_va_gc_
(Ë((
vec
<
ùa_edge_¨gs
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ùa_edge_¨gs,va_gc>Ë
MEM_STAT_INFO
)))

	)

630 
	#ggc_Æloc_vec_vec_ùa_edge_¨gs_va_gc_
(
n
Ë((
vec
<
ùa_edge_¨gs
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ùa_edge_¨gs,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

631 
	#ggc_Æloc_˛óªd_vec_vec_ùa_edge_¨gs_va_gc_
(
n
Ë((
vec
<
ùa_edge_¨gs
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ùa_edge_¨gs,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

632 
	#ggc_Æloc_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
(Ë((
vec
<
ùa_agg_ª∂a˚mít_vÆue_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ùa_agg_ª∂a˚mít_vÆue_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

633 
	#ggc_Æloc_˛óªd_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
(Ë((
vec
<
ùa_agg_ª∂a˚mít_vÆue_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ùa_agg_ª∂a˚mít_vÆue_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

634 
	#ggc_Æloc_vec_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
(
n
Ë((
vec
<
ùa_agg_ª∂a˚mít_vÆue_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ùa_agg_ª∂a˚mít_vÆue_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

635 
	#ggc_Æloc_˛óªd_vec_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
(
n
Ë((
vec
<
ùa_agg_ª∂a˚mít_vÆue_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ùa_agg_ª∂a˚mít_vÆue_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

636 
	#ggc_Æloc_vec_ùa_jump_func_va_gc_
(Ë((
vec
<
ùa_jump_func
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ùa_jump_func,va_gc>Ë
MEM_STAT_INFO
)))

	)

637 
	#ggc_Æloc_˛óªd_vec_ùa_jump_func_va_gc_
(Ë((
vec
<
ùa_jump_func
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ùa_jump_func,va_gc>Ë
MEM_STAT_INFO
)))

	)

638 
	#ggc_Æloc_vec_vec_ùa_jump_func_va_gc_
(
n
Ë((
vec
<
ùa_jump_func
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ùa_jump_func,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

639 
	#ggc_Æloc_˛óªd_vec_vec_ùa_jump_func_va_gc_
(
n
Ë((
vec
<
ùa_jump_func
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ùa_jump_func,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

640 
	#ggc_Æloc_jump_func_vÆue
(Ë((
jump_func_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (jump_func_vÆueË
MEM_STAT_INFO
)))

	)

641 
	#ggc_Æloc_˛óªd_jump_func_vÆue
(Ë((
jump_func_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (jump_func_vÆueË
MEM_STAT_INFO
)))

	)

642 
	#ggc_Æloc_vec_jump_func_vÆue
(
n
Ë((
jump_func_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (jump_func_vÆue),Ç 
MEM_STAT_INFO
)))

	)

643 
	#ggc_Æloc_˛óªd_vec_jump_func_vÆue
(
n
Ë((
jump_func_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (jump_func_vÆue),Ç 
MEM_STAT_INFO
)))

	)

644 
	#ggc_Æloc_vec_ùa_agg_jf_ôem_va_gc_
(Ë((
vec
<
ùa_agg_jf_ôem
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ùa_agg_jf_ôem,va_gc>Ë
MEM_STAT_INFO
)))

	)

645 
	#ggc_Æloc_˛óªd_vec_ùa_agg_jf_ôem_va_gc_
(Ë((
vec
<
ùa_agg_jf_ôem
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ùa_agg_jf_ôem,va_gc>Ë
MEM_STAT_INFO
)))

	)

646 
	#ggc_Æloc_vec_vec_ùa_agg_jf_ôem_va_gc_
(
n
Ë((
vec
<
ùa_agg_jf_ôem
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ùa_agg_jf_ôem,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

647 
	#ggc_Æloc_˛óªd_vec_vec_ùa_agg_jf_ôem_va_gc_
(
n
Ë((
vec
<
ùa_agg_jf_ôem
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ùa_agg_jf_ôem,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

648 
	#ggc_Æloc_ùa_™˚°‹_jf_d©a
(Ë((
ùa_™˚°‹_jf_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_™˚°‹_jf_d©aË
MEM_STAT_INFO
)))

	)

649 
	#ggc_Æloc_˛óªd_ùa_™˚°‹_jf_d©a
(Ë((
ùa_™˚°‹_jf_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_™˚°‹_jf_d©aË
MEM_STAT_INFO
)))

	)

650 
	#ggc_Æloc_vec_ùa_™˚°‹_jf_d©a
(
n
Ë((
ùa_™˚°‹_jf_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_™˚°‹_jf_d©a),Ç 
MEM_STAT_INFO
)))

	)

651 
	#ggc_Æloc_˛óªd_vec_ùa_™˚°‹_jf_d©a
(
n
Ë((
ùa_™˚°‹_jf_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_™˚°‹_jf_d©a),Ç 
MEM_STAT_INFO
)))

	)

652 
	#ggc_Æloc_ùa_∑ss_through_d©a
(Ë((
ùa_∑ss_through_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_∑ss_through_d©aË
MEM_STAT_INFO
)))

	)

653 
	#ggc_Æloc_˛óªd_ùa_∑ss_through_d©a
(Ë((
ùa_∑ss_through_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_∑ss_through_d©aË
MEM_STAT_INFO
)))

	)

654 
	#ggc_Æloc_vec_ùa_∑ss_through_d©a
(
n
Ë((
ùa_∑ss_through_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_∑ss_through_d©a),Ç 
MEM_STAT_INFO
)))

	)

655 
	#ggc_Æloc_˛óªd_vec_ùa_∑ss_through_d©a
(
n
Ë((
ùa_∑ss_through_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_∑ss_through_d©a),Ç 
MEM_STAT_INFO
)))

	)

656 
	#ggc_Æloc_ùa_c⁄°™t_d©a
(Ë((
ùa_c⁄°™t_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_c⁄°™t_d©aË
MEM_STAT_INFO
)))

	)

657 
	#ggc_Æloc_˛óªd_ùa_c⁄°™t_d©a
(Ë((
ùa_c⁄°™t_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_c⁄°™t_d©aË
MEM_STAT_INFO
)))

	)

658 
	#ggc_Æloc_vec_ùa_c⁄°™t_d©a
(
n
Ë((
ùa_c⁄°™t_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_c⁄°™t_d©a),Ç 
MEM_STAT_INFO
)))

	)

659 
	#ggc_Æloc_˛óªd_vec_ùa_c⁄°™t_d©a
(
n
Ë((
ùa_c⁄°™t_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_c⁄°™t_d©a),Ç 
MEM_STAT_INFO
)))

	)

660 
	#ggc_Æloc_ùa_known_ty≥_d©a
(Ë((
ùa_known_ty≥_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_known_ty≥_d©aË
MEM_STAT_INFO
)))

	)

661 
	#ggc_Æloc_˛óªd_ùa_known_ty≥_d©a
(Ë((
ùa_known_ty≥_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_known_ty≥_d©aË
MEM_STAT_INFO
)))

	)

662 
	#ggc_Æloc_vec_ùa_known_ty≥_d©a
(
n
Ë((
ùa_known_ty≥_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_known_ty≥_d©a),Ç 
MEM_STAT_INFO
)))

	)

663 
	#ggc_Æloc_˛óªd_vec_ùa_known_ty≥_d©a
(
n
Ë((
ùa_known_ty≥_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_known_ty≥_d©a),Ç 
MEM_STAT_INFO
)))

	)

664 
	#ggc_Æloc_sß_›î™d_mem‹y_d
(
SIZE
Ë((
sß_›î™d_mem‹y_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

665 
	#ggc_Æloc_˛óªd_sß_›î™d_mem‹y_d
(
SIZE
Ë((
sß_›î™d_mem‹y_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

666 
	#ggc_Æloc_vec_sß_›î™d_mem‹y_d
(
SIZE
, 
n
Ë((
sß_›î™d_mem‹y_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

667 
	#ggc_Æloc_˛óªd_vec_sß_›î™d_mem‹y_d
(
SIZE
, 
n
Ë((
sß_›î™d_mem‹y_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

668 
	#ggc_Æloc_s˚v_öfo_°r
(Ë((
s˚v_öfo_°r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (s˚v_öfo_°rË
MEM_STAT_INFO
)))

	)

669 
	#ggc_Æloc_˛óªd_s˚v_öfo_°r
(Ë((
s˚v_öfo_°r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (s˚v_öfo_°rË
MEM_STAT_INFO
)))

	)

670 
	#ggc_Æloc_vec_s˚v_öfo_°r
(
n
Ë((
s˚v_öfo_°r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (s˚v_öfo_°r),Ç 
MEM_STAT_INFO
)))

	)

671 
	#ggc_Æloc_˛óªd_vec_s˚v_öfo_°r
(
n
Ë((
s˚v_öfo_°r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (s˚v_öfo_°r),Ç 
MEM_STAT_INFO
)))

	)

672 
	#ggc_Æloc_vec_mem_addr_ãm∂©e_va_gc_
(Ë((
vec
<
mem_addr_ãm∂©e
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<mem_addr_ãm∂©e,va_gc>Ë
MEM_STAT_INFO
)))

	)

673 
	#ggc_Æloc_˛óªd_vec_mem_addr_ãm∂©e_va_gc_
(Ë((
vec
<
mem_addr_ãm∂©e
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<mem_addr_ãm∂©e,va_gc>Ë
MEM_STAT_INFO
)))

	)

674 
	#ggc_Æloc_vec_vec_mem_addr_ãm∂©e_va_gc_
(
n
Ë((
vec
<
mem_addr_ãm∂©e
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<mem_addr_ãm∂©e,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

675 
	#ggc_Æloc_˛óªd_vec_vec_mem_addr_ãm∂©e_va_gc_
(
n
Ë((
vec
<
mem_addr_ãm∂©e
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<mem_addr_ãm∂©e,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

676 
	#ggc_Æloc_mem_addr_ãm∂©e
(Ë((
mem_addr_ãm∂©e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (mem_addr_ãm∂©eË
MEM_STAT_INFO
)))

	)

677 
	#ggc_Æloc_˛óªd_mem_addr_ãm∂©e
(Ë((
mem_addr_ãm∂©e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (mem_addr_ãm∂©eË
MEM_STAT_INFO
)))

	)

678 
	#ggc_Æloc_vec_mem_addr_ãm∂©e
(
n
Ë((
mem_addr_ãm∂©e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (mem_addr_ãm∂©e),Ç 
MEM_STAT_INFO
)))

	)

679 
	#ggc_Æloc_˛óªd_vec_mem_addr_ãm∂©e
(
n
Ë((
mem_addr_ãm∂©e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (mem_addr_ãm∂©e),Ç 
MEM_STAT_INFO
)))

	)

680 
	#ggc_Æloc_sß_›î™ds
(Ë((
sß_›î™ds
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (sß_›î™dsË
MEM_STAT_INFO
)))

	)

681 
	#ggc_Æloc_˛óªd_sß_›î™ds
(Ë((
sß_›î™ds
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (sß_›î™dsË
MEM_STAT_INFO
)))

	)

682 
	#ggc_Æloc_vec_sß_›î™ds
(
n
Ë((
sß_›î™ds
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (sß_›î™ds),Ç 
MEM_STAT_INFO
)))

	)

683 
	#ggc_Æloc_˛óªd_vec_sß_›î™ds
(
n
Ë((
sß_›î™ds
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (sß_›î™ds),Ç 
MEM_STAT_INFO
)))

	)

684 
	#ggc_Æloc_vec_gim∂e_va_gc_
(Ë((
vec
<
gim∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<gim∂e,va_gc>Ë
MEM_STAT_INFO
)))

	)

685 
	#ggc_Æloc_˛óªd_vec_gim∂e_va_gc_
(Ë((
vec
<
gim∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<gim∂e,va_gc>Ë
MEM_STAT_INFO
)))

	)

686 
	#ggc_Æloc_vec_vec_gim∂e_va_gc_
(
n
Ë((
vec
<
gim∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<gim∂e,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

687 
	#ggc_Æloc_˛óªd_vec_vec_gim∂e_va_gc_
(
n
Ë((
vec
<
gim∂e
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<gim∂e,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

688 
	#ggc_Æloc_tm_ª°¨t_node
(Ë((
tm_ª°¨t_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (tm_ª°¨t_nodeË
MEM_STAT_INFO
)))

	)

689 
	#ggc_Æloc_˛óªd_tm_ª°¨t_node
(Ë((
tm_ª°¨t_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (tm_ª°¨t_nodeË
MEM_STAT_INFO
)))

	)

690 
	#ggc_Æloc_vec_tm_ª°¨t_node
(
n
Ë((
tm_ª°¨t_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (tm_ª°¨t_node),Ç 
MEM_STAT_INFO
)))

	)

691 
	#ggc_Æloc_˛óªd_vec_tm_ª°¨t_node
(
n
Ë((
tm_ª°¨t_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (tm_ª°¨t_node),Ç 
MEM_STAT_INFO
)))

	)

692 
	#ggc_Æloc_gim∂e_°©emít_å™ß˘i⁄
(Ë((
gim∂e_°©emít_å™ß˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_å™ß˘i⁄Ë
MEM_STAT_INFO
)))

	)

693 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_å™ß˘i⁄
(Ë((
gim∂e_°©emít_å™ß˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_å™ß˘i⁄Ë
MEM_STAT_INFO
)))

	)

694 
	#ggc_Æloc_vec_gim∂e_°©emít_å™ß˘i⁄
(
n
Ë((
gim∂e_°©emít_å™ß˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_å™ß˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

695 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_å™ß˘i⁄
(
n
Ë((
gim∂e_°©emít_å™ß˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_å™ß˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

696 
	#ggc_Æloc_gim∂e_°©emít_omp_ªtu∫
(Ë((
gim∂e_°©emít_omp_ªtu∫
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_ªtu∫Ë
MEM_STAT_INFO
)))

	)

697 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_ªtu∫
(Ë((
gim∂e_°©emít_omp_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_ªtu∫Ë
MEM_STAT_INFO
)))

	)

698 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_ªtu∫
(
n
Ë((
gim∂e_°©emít_omp_ªtu∫
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

699 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_ªtu∫
(
n
Ë((
gim∂e_°©emít_omp_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

700 
	#ggc_Æloc_gim∂e_°©emít_omp_©omic_°‹e
(Ë((
gim∂e_°©emít_omp_©omic_°‹e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹eË
MEM_STAT_INFO
)))

	)

701 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_©omic_°‹e
(Ë((
gim∂e_°©emít_omp_©omic_°‹e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹eË
MEM_STAT_INFO
)))

	)

702 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_©omic_°‹e
(
n
Ë((
gim∂e_°©emít_omp_©omic_°‹e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹e),Ç 
MEM_STAT_INFO
)))

	)

703 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_©omic_°‹e
(
n
Ë((
gim∂e_°©emít_omp_©omic_°‹e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹e),Ç 
MEM_STAT_INFO
)))

	)

704 
	#ggc_Æloc_gim∂e_°©emít_omp_©omic_°‹e_œyout
(Ë((
gim∂e_°©emít_omp_©omic_°‹e_œyout
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹e_œyoutË
MEM_STAT_INFO
)))

	)

705 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_©omic_°‹e_œyout
(Ë((
gim∂e_°©emít_omp_©omic_°‹e_œyout
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹e_œyoutË
MEM_STAT_INFO
)))

	)

706 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_©omic_°‹e_œyout
(
n
Ë((
gim∂e_°©emít_omp_©omic_°‹e_œyout
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹e_œyout),Ç 
MEM_STAT_INFO
)))

	)

707 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_©omic_°‹e_œyout
(
n
Ë((
gim∂e_°©emít_omp_©omic_°‹e_œyout
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_°‹e_œyout),Ç 
MEM_STAT_INFO
)))

	)

708 
	#ggc_Æloc_gim∂e_°©emít_omp_©omic_lﬂd
(Ë((
gim∂e_°©emít_omp_©omic_lﬂd
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_lﬂdË
MEM_STAT_INFO
)))

	)

709 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_©omic_lﬂd
(Ë((
gim∂e_°©emít_omp_©omic_lﬂd
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_lﬂdË
MEM_STAT_INFO
)))

	)

710 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_©omic_lﬂd
(
n
Ë((
gim∂e_°©emít_omp_©omic_lﬂd
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_lﬂd),Ç 
MEM_STAT_INFO
)))

	)

711 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_©omic_lﬂd
(
n
Ë((
gim∂e_°©emít_omp_©omic_lﬂd
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_©omic_lﬂd),Ç 
MEM_STAT_INFO
)))

	)

712 
	#ggc_Æloc_gim∂e_°©emít_omp_ãams
(Ë((
gim∂e_°©emít_omp_ãams
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_ãamsË
MEM_STAT_INFO
)))

	)

713 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_ãams
(Ë((
gim∂e_°©emít_omp_ãams
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_ãamsË
MEM_STAT_INFO
)))

	)

714 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_ãams
(
n
Ë((
gim∂e_°©emít_omp_ãams
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_ãams),Ç 
MEM_STAT_INFO
)))

	)

715 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_ãams
(
n
Ë((
gim∂e_°©emít_omp_ãams
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_ãams),Ç 
MEM_STAT_INFO
)))

	)

716 
	#ggc_Æloc_gim∂e_°©emít_omp_sögÀ
(Ë((
gim∂e_°©emít_omp_sögÀ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀË
MEM_STAT_INFO
)))

	)

717 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_sögÀ
(Ë((
gim∂e_°©emít_omp_sögÀ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀË
MEM_STAT_INFO
)))

	)

718 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_sögÀ
(
n
Ë((
gim∂e_°©emít_omp_sögÀ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀ),Ç 
MEM_STAT_INFO
)))

	)

719 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_sögÀ
(
n
Ë((
gim∂e_°©emít_omp_sögÀ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀ),Ç 
MEM_STAT_INFO
)))

	)

720 
	#ggc_Æloc_gim∂e_°©emít_omp_sögÀ_œyout
(Ë((
gim∂e_°©emít_omp_sögÀ_œyout
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀ_œyoutË
MEM_STAT_INFO
)))

	)

721 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_sögÀ_œyout
(Ë((
gim∂e_°©emít_omp_sögÀ_œyout
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀ_œyoutË
MEM_STAT_INFO
)))

	)

722 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_sögÀ_œyout
(
n
Ë((
gim∂e_°©emít_omp_sögÀ_œyout
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀ_œyout),Ç 
MEM_STAT_INFO
)))

	)

723 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_sögÀ_œyout
(
n
Ë((
gim∂e_°©emít_omp_sögÀ_œyout
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_sögÀ_œyout),Ç 
MEM_STAT_INFO
)))

	)

724 
	#ggc_Æloc_gim∂e_°©emít_omp_c⁄töue
(Ë((
gim∂e_°©emít_omp_c⁄töue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_c⁄töueË
MEM_STAT_INFO
)))

	)

725 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_c⁄töue
(Ë((
gim∂e_°©emít_omp_c⁄töue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_c⁄töueË
MEM_STAT_INFO
)))

	)

726 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_c⁄töue
(
n
Ë((
gim∂e_°©emít_omp_c⁄töue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_c⁄töue),Ç 
MEM_STAT_INFO
)))

	)

727 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_c⁄töue
(
n
Ë((
gim∂e_°©emít_omp_c⁄töue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_c⁄töue),Ç 
MEM_STAT_INFO
)))

	)

728 
	#ggc_Æloc_gim∂e_°©emít_omp_£˘i⁄s
(Ë((
gim∂e_°©emít_omp_£˘i⁄s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_£˘i⁄sË
MEM_STAT_INFO
)))

	)

729 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_£˘i⁄s
(Ë((
gim∂e_°©emít_omp_£˘i⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_£˘i⁄sË
MEM_STAT_INFO
)))

	)

730 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_£˘i⁄s
(
n
Ë((
gim∂e_°©emít_omp_£˘i⁄s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_£˘i⁄s),Ç 
MEM_STAT_INFO
)))

	)

731 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_£˘i⁄s
(
n
Ë((
gim∂e_°©emít_omp_£˘i⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_£˘i⁄s),Ç 
MEM_STAT_INFO
)))

	)

732 
	#ggc_Æloc_gim∂e_°©emít_omp_èsk
(Ë((
gim∂e_°©emít_omp_èsk
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_èskË
MEM_STAT_INFO
)))

	)

733 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_èsk
(Ë((
gim∂e_°©emít_omp_èsk
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_èskË
MEM_STAT_INFO
)))

	)

734 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_èsk
(
n
Ë((
gim∂e_°©emít_omp_èsk
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_èsk),Ç 
MEM_STAT_INFO
)))

	)

735 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_èsk
(
n
Ë((
gim∂e_°©emít_omp_èsk
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_èsk),Ç 
MEM_STAT_INFO
)))

	)

736 
	#ggc_Æloc_gim∂e_°©emít_omp_èrgë
(Ë((
gim∂e_°©emít_omp_èrgë
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_èrgëË
MEM_STAT_INFO
)))

	)

737 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_èrgë
(Ë((
gim∂e_°©emít_omp_èrgë
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_èrgëË
MEM_STAT_INFO
)))

	)

738 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_èrgë
(
n
Ë((
gim∂e_°©emít_omp_èrgë
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_èrgë),Ç 
MEM_STAT_INFO
)))

	)

739 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_èrgë
(
n
Ë((
gim∂e_°©emít_omp_èrgë
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_èrgë),Ç 
MEM_STAT_INFO
)))

	)

740 
	#ggc_Æloc_gim∂e_°©emít_omp_∑øŒñ
(Ë((
gim∂e_°©emít_omp_∑øŒñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñË
MEM_STAT_INFO
)))

	)

741 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_∑øŒñ
(Ë((
gim∂e_°©emít_omp_∑øŒñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñË
MEM_STAT_INFO
)))

	)

742 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_∑øŒñ
(
n
Ë((
gim∂e_°©emít_omp_∑øŒñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñ),Ç 
MEM_STAT_INFO
)))

	)

743 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_∑øŒñ
(
n
Ë((
gim∂e_°©emít_omp_∑øŒñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñ),Ç 
MEM_STAT_INFO
)))

	)

744 
	#ggc_Æloc_gim∂e_°©emít_omp_èskªg
(Ë((
gim∂e_°©emít_omp_èskªg
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_èskªgË
MEM_STAT_INFO
)))

	)

745 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_èskªg
(Ë((
gim∂e_°©emít_omp_èskªg
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_èskªgË
MEM_STAT_INFO
)))

	)

746 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_èskªg
(
n
Ë((
gim∂e_°©emít_omp_èskªg
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_èskªg),Ç 
MEM_STAT_INFO
)))

	)

747 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_èskªg
(
n
Ë((
gim∂e_°©emít_omp_èskªg
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_èskªg),Ç 
MEM_STAT_INFO
)))

	)

748 
	#ggc_Æloc_gim∂e_°©emít_omp_∑øŒñ_œyout
(Ë((
gim∂e_°©emít_omp_∑øŒñ_œyout
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñ_œyoutË
MEM_STAT_INFO
)))

	)

749 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_∑øŒñ_œyout
(Ë((
gim∂e_°©emít_omp_∑øŒñ_œyout
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñ_œyoutË
MEM_STAT_INFO
)))

	)

750 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_∑øŒñ_œyout
(
n
Ë((
gim∂e_°©emít_omp_∑øŒñ_œyout
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñ_œyout),Ç 
MEM_STAT_INFO
)))

	)

751 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_∑øŒñ_œyout
(
n
Ë((
gim∂e_°©emít_omp_∑øŒñ_œyout
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_∑øŒñ_œyout),Ç 
MEM_STAT_INFO
)))

	)

752 
	#ggc_Æloc_gim∂e_°©emít_omp_f‹
(Ë((
gim∂e_°©emít_omp_f‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_f‹Ë
MEM_STAT_INFO
)))

	)

753 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_f‹
(Ë((
gim∂e_°©emít_omp_f‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_f‹Ë
MEM_STAT_INFO
)))

	)

754 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_f‹
(
n
Ë((
gim∂e_°©emít_omp_f‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_f‹),Ç 
MEM_STAT_INFO
)))

	)

755 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_f‹
(
n
Ë((
gim∂e_°©emít_omp_f‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_f‹),Ç 
MEM_STAT_INFO
)))

	)

756 
	#ggc_Æloc_gim∂e_omp_f‹_ôî
(Ë((
gim∂e_omp_f‹_ôî
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_omp_f‹_ôîË
MEM_STAT_INFO
)))

	)

757 
	#ggc_Æloc_˛óªd_gim∂e_omp_f‹_ôî
(Ë((
gim∂e_omp_f‹_ôî
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_omp_f‹_ôîË
MEM_STAT_INFO
)))

	)

758 
	#ggc_Æloc_vec_gim∂e_omp_f‹_ôî
(
n
Ë((
gim∂e_omp_f‹_ôî
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_omp_f‹_ôî),Ç 
MEM_STAT_INFO
)))

	)

759 
	#ggc_Æloc_˛óªd_vec_gim∂e_omp_f‹_ôî
(
n
Ë((
gim∂e_omp_f‹_ôî
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_omp_f‹_ôî),Ç 
MEM_STAT_INFO
)))

	)

760 
	#ggc_Æloc_gim∂e_°©emít_omp_¸ôiˇl
(Ë((
gim∂e_°©emít_omp_¸ôiˇl
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_omp_¸ôiˇlË
MEM_STAT_INFO
)))

	)

761 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp_¸ôiˇl
(Ë((
gim∂e_°©emít_omp_¸ôiˇl
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_omp_¸ôiˇlË
MEM_STAT_INFO
)))

	)

762 
	#ggc_Æloc_vec_gim∂e_°©emít_omp_¸ôiˇl
(
n
Ë((
gim∂e_°©emít_omp_¸ôiˇl
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_¸ôiˇl),Ç 
MEM_STAT_INFO
)))

	)

763 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp_¸ôiˇl
(
n
Ë((
gim∂e_°©emít_omp_¸ôiˇl
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp_¸ôiˇl),Ç 
MEM_STAT_INFO
)))

	)

764 
	#ggc_Æloc_gim∂e_°©emít_asm
(Ë((
gim∂e_°©emít_asm
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_asmË
MEM_STAT_INFO
)))

	)

765 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_asm
(Ë((
gim∂e_°©emít_asm
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_asmË
MEM_STAT_INFO
)))

	)

766 
	#ggc_Æloc_vec_gim∂e_°©emít_asm
(
n
Ë((
gim∂e_°©emít_asm
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_asm),Ç 
MEM_STAT_INFO
)))

	)

767 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_asm
(
n
Ë((
gim∂e_°©emít_asm
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_asm),Ç 
MEM_STAT_INFO
)))

	)

768 
	#ggc_Æloc_gim∂e_°©emít_w˚
(Ë((
gim∂e_°©emít_w˚
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_w˚Ë
MEM_STAT_INFO
)))

	)

769 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_w˚
(Ë((
gim∂e_°©emít_w˚
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_w˚Ë
MEM_STAT_INFO
)))

	)

770 
	#ggc_Æloc_vec_gim∂e_°©emít_w˚
(
n
Ë((
gim∂e_°©emít_w˚
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_w˚),Ç 
MEM_STAT_INFO
)))

	)

771 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_w˚
(
n
Ë((
gim∂e_°©emít_w˚
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_w˚),Ç 
MEM_STAT_INFO
)))

	)

772 
	#ggc_Æloc_gim∂e_°©emít_åy
(Ë((
gim∂e_°©emít_åy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_åyË
MEM_STAT_INFO
)))

	)

773 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_åy
(Ë((
gim∂e_°©emít_åy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_åyË
MEM_STAT_INFO
)))

	)

774 
	#ggc_Æloc_vec_gim∂e_°©emít_åy
(
n
Ë((
gim∂e_°©emít_åy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_åy),Ç 
MEM_STAT_INFO
)))

	)

775 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_åy
(
n
Ë((
gim∂e_°©emít_åy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_åy),Ç 
MEM_STAT_INFO
)))

	)

776 
	#ggc_Æloc_gim∂e_°©emít_eh_di•©ch
(Ë((
gim∂e_°©emít_eh_di•©ch
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_eh_di•©chË
MEM_STAT_INFO
)))

	)

777 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_eh_di•©ch
(Ë((
gim∂e_°©emít_eh_di•©ch
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_eh_di•©chË
MEM_STAT_INFO
)))

	)

778 
	#ggc_Æloc_vec_gim∂e_°©emít_eh_di•©ch
(
n
Ë((
gim∂e_°©emít_eh_di•©ch
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_di•©ch),Ç 
MEM_STAT_INFO
)))

	)

779 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_eh_di•©ch
(
n
Ë((
gim∂e_°©emít_eh_di•©ch
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_di•©ch),Ç 
MEM_STAT_INFO
)))

	)

780 
	#ggc_Æloc_gim∂e_°©emít_ªsx
(Ë((
gim∂e_°©emít_ªsx
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_ªsxË
MEM_STAT_INFO
)))

	)

781 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_ªsx
(Ë((
gim∂e_°©emít_ªsx
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_ªsxË
MEM_STAT_INFO
)))

	)

782 
	#ggc_Æloc_vec_gim∂e_°©emít_ªsx
(
n
Ë((
gim∂e_°©emít_ªsx
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_ªsx),Ç 
MEM_STAT_INFO
)))

	)

783 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_ªsx
(
n
Ë((
gim∂e_°©emít_ªsx
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_ªsx),Ç 
MEM_STAT_INFO
)))

	)

784 
	#ggc_Æloc_gim∂e_°©emít_eh_˘æ
(Ë((
gim∂e_°©emít_eh_˘æ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_eh_˘æË
MEM_STAT_INFO
)))

	)

785 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_eh_˘æ
(Ë((
gim∂e_°©emít_eh_˘æ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_eh_˘æË
MEM_STAT_INFO
)))

	)

786 
	#ggc_Æloc_vec_gim∂e_°©emít_eh_˘æ
(
n
Ë((
gim∂e_°©emít_eh_˘æ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_˘æ),Ç 
MEM_STAT_INFO
)))

	)

787 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_eh_˘æ
(
n
Ë((
gim∂e_°©emít_eh_˘æ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_˘æ),Ç 
MEM_STAT_INFO
)))

	)

788 
	#ggc_Æloc_gim∂e_°©emít_phi
(Ë((
gim∂e_°©emít_phi
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_phiË
MEM_STAT_INFO
)))

	)

789 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_phi
(Ë((
gim∂e_°©emít_phi
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_phiË
MEM_STAT_INFO
)))

	)

790 
	#ggc_Æloc_vec_gim∂e_°©emít_phi
(
n
Ë((
gim∂e_°©emít_phi
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_phi),Ç 
MEM_STAT_INFO
)))

	)

791 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_phi
(
n
Ë((
gim∂e_°©emít_phi
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_phi),Ç 
MEM_STAT_INFO
)))

	)

792 
	#ggc_Æloc_gim∂e_°©emít_eh_m¡
(Ë((
gim∂e_°©emít_eh_m¡
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_eh_m¡Ë
MEM_STAT_INFO
)))

	)

793 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_eh_m¡
(Ë((
gim∂e_°©emít_eh_m¡
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_eh_m¡Ë
MEM_STAT_INFO
)))

	)

794 
	#ggc_Æloc_vec_gim∂e_°©emít_eh_m¡
(
n
Ë((
gim∂e_°©emít_eh_m¡
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_m¡),Ç 
MEM_STAT_INFO
)))

	)

795 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_eh_m¡
(
n
Ë((
gim∂e_°©emít_eh_m¡
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_m¡),Ç 
MEM_STAT_INFO
)))

	)

796 
	#ggc_Æloc_gim∂e_°©emít_eh_ñ£
(Ë((
gim∂e_°©emít_eh_ñ£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_eh_ñ£Ë
MEM_STAT_INFO
)))

	)

797 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_eh_ñ£
(Ë((
gim∂e_°©emít_eh_ñ£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_eh_ñ£Ë
MEM_STAT_INFO
)))

	)

798 
	#ggc_Æloc_vec_gim∂e_°©emít_eh_ñ£
(
n
Ë((
gim∂e_°©emít_eh_ñ£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_ñ£),Ç 
MEM_STAT_INFO
)))

	)

799 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_eh_ñ£
(
n
Ë((
gim∂e_°©emít_eh_ñ£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_ñ£),Ç 
MEM_STAT_INFO
)))

	)

800 
	#ggc_Æloc_gim∂e_°©emít_eh_fûãr
(Ë((
gim∂e_°©emít_eh_fûãr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_eh_fûãrË
MEM_STAT_INFO
)))

	)

801 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_eh_fûãr
(Ë((
gim∂e_°©emít_eh_fûãr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_eh_fûãrË
MEM_STAT_INFO
)))

	)

802 
	#ggc_Æloc_vec_gim∂e_°©emít_eh_fûãr
(
n
Ë((
gim∂e_°©emít_eh_fûãr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_fûãr),Ç 
MEM_STAT_INFO
)))

	)

803 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_eh_fûãr
(
n
Ë((
gim∂e_°©emít_eh_fûãr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_eh_fûãr),Ç 
MEM_STAT_INFO
)))

	)

804 
	#ggc_Æloc_gim∂e_°©emít_ˇtch
(Ë((
gim∂e_°©emít_ˇtch
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_ˇtchË
MEM_STAT_INFO
)))

	)

805 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_ˇtch
(Ë((
gim∂e_°©emít_ˇtch
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_ˇtchË
MEM_STAT_INFO
)))

	)

806 
	#ggc_Æloc_vec_gim∂e_°©emít_ˇtch
(
n
Ë((
gim∂e_°©emít_ˇtch
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_ˇtch),Ç 
MEM_STAT_INFO
)))

	)

807 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_ˇtch
(
n
Ë((
gim∂e_°©emít_ˇtch
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_ˇtch),Ç 
MEM_STAT_INFO
)))

	)

808 
	#ggc_Æloc_gim∂e_°©emít_böd
(Ë((
gim∂e_°©emít_böd
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_bödË
MEM_STAT_INFO
)))

	)

809 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_böd
(Ë((
gim∂e_°©emít_böd
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_bödË
MEM_STAT_INFO
)))

	)

810 
	#ggc_Æloc_vec_gim∂e_°©emít_böd
(
n
Ë((
gim∂e_°©emít_böd
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_böd),Ç 
MEM_STAT_INFO
)))

	)

811 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_böd
(
n
Ë((
gim∂e_°©emít_böd
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_böd),Ç 
MEM_STAT_INFO
)))

	)

812 
	#ggc_Æloc_gim∂e_°©emít_omp
(Ë((
gim∂e_°©emít_omp
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_ompË
MEM_STAT_INFO
)))

	)

813 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_omp
(Ë((
gim∂e_°©emít_omp
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_ompË
MEM_STAT_INFO
)))

	)

814 
	#ggc_Æloc_vec_gim∂e_°©emít_omp
(
n
Ë((
gim∂e_°©emít_omp
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_omp),Ç 
MEM_STAT_INFO
)))

	)

815 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_omp
(
n
Ë((
gim∂e_°©emít_omp
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_omp),Ç 
MEM_STAT_INFO
)))

	)

816 
	#ggc_Æloc_gim∂e_°©emít_ˇŒ
(Ë((
gim∂e_°©emít_ˇŒ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_ˇŒË
MEM_STAT_INFO
)))

	)

817 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_ˇŒ
(Ë((
gim∂e_°©emít_ˇŒ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_ˇŒË
MEM_STAT_INFO
)))

	)

818 
	#ggc_Æloc_vec_gim∂e_°©emít_ˇŒ
(
n
Ë((
gim∂e_°©emít_ˇŒ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_ˇŒ),Ç 
MEM_STAT_INFO
)))

	)

819 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_ˇŒ
(
n
Ë((
gim∂e_°©emít_ˇŒ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_ˇŒ),Ç 
MEM_STAT_INFO
)))

	)

820 
	#ggc_Æloc_±_sﬁuti⁄
(Ë((
±_sﬁuti⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (±_sﬁuti⁄Ë
MEM_STAT_INFO
)))

	)

821 
	#ggc_Æloc_˛óªd_±_sﬁuti⁄
(Ë((
±_sﬁuti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (±_sﬁuti⁄Ë
MEM_STAT_INFO
)))

	)

822 
	#ggc_Æloc_vec_±_sﬁuti⁄
(
n
Ë((
±_sﬁuti⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (±_sﬁuti⁄),Ç 
MEM_STAT_INFO
)))

	)

823 
	#ggc_Æloc_˛óªd_vec_±_sﬁuti⁄
(
n
Ë((
±_sﬁuti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (±_sﬁuti⁄),Ç 
MEM_STAT_INFO
)))

	)

824 
	#ggc_Æloc_gim∂e_°©emít_wôh_mem‹y_›s
(Ë((
gim∂e_°©emít_wôh_mem‹y_›s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›sË
MEM_STAT_INFO
)))

	)

825 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_wôh_mem‹y_›s
(Ë((
gim∂e_°©emít_wôh_mem‹y_›s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›sË
MEM_STAT_INFO
)))

	)

826 
	#ggc_Æloc_vec_gim∂e_°©emít_wôh_mem‹y_›s
(
n
Ë((
gim∂e_°©emít_wôh_mem‹y_›s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›s),Ç 
MEM_STAT_INFO
)))

	)

827 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_wôh_mem‹y_›s
(
n
Ë((
gim∂e_°©emít_wôh_mem‹y_›s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›s),Ç 
MEM_STAT_INFO
)))

	)

828 
	#ggc_Æloc_gim∂e_°©emít_wôh_mem‹y_›s_ba£
(Ë((
gim∂e_°©emít_wôh_mem‹y_›s_ba£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›s_ba£Ë
MEM_STAT_INFO
)))

	)

829 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_wôh_mem‹y_›s_ba£
(Ë((
gim∂e_°©emít_wôh_mem‹y_›s_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›s_ba£Ë
MEM_STAT_INFO
)))

	)

830 
	#ggc_Æloc_vec_gim∂e_°©emít_wôh_mem‹y_›s_ba£
(
n
Ë((
gim∂e_°©emít_wôh_mem‹y_›s_ba£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›s_ba£),Ç 
MEM_STAT_INFO
)))

	)

831 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_wôh_mem‹y_›s_ba£
(
n
Ë((
gim∂e_°©emít_wôh_mem‹y_›s_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_mem‹y_›s_ba£),Ç 
MEM_STAT_INFO
)))

	)

832 
	#ggc_Æloc_gim∂e_°©emít_wôh_›s
(Ë((
gim∂e_°©emít_wôh_›s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_wôh_›sË
MEM_STAT_INFO
)))

	)

833 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_wôh_›s
(Ë((
gim∂e_°©emít_wôh_›s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_wôh_›sË
MEM_STAT_INFO
)))

	)

834 
	#ggc_Æloc_vec_gim∂e_°©emít_wôh_›s
(
n
Ë((
gim∂e_°©emít_wôh_›s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_›s),Ç 
MEM_STAT_INFO
)))

	)

835 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_wôh_›s
(
n
Ë((
gim∂e_°©emít_wôh_›s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_›s),Ç 
MEM_STAT_INFO
)))

	)

836 
	#ggc_Æloc_gim∂e_°©emít_wôh_›s_ba£
(Ë((
gim∂e_°©emít_wôh_›s_ba£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_°©emít_wôh_›s_ba£Ë
MEM_STAT_INFO
)))

	)

837 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_wôh_›s_ba£
(Ë((
gim∂e_°©emít_wôh_›s_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_°©emít_wôh_›s_ba£Ë
MEM_STAT_INFO
)))

	)

838 
	#ggc_Æloc_vec_gim∂e_°©emít_wôh_›s_ba£
(
n
Ë((
gim∂e_°©emít_wôh_›s_ba£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_›s_ba£),Ç 
MEM_STAT_INFO
)))

	)

839 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_wôh_›s_ba£
(
n
Ë((
gim∂e_°©emít_wôh_›s_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_°©emít_wôh_›s_ba£),Ç 
MEM_STAT_INFO
)))

	)

840 
	#ggc_Æloc_ty≥_hash
(Ë((
ty≥_hash
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ty≥_hashË
MEM_STAT_INFO
)))

	)

841 
	#ggc_Æloc_˛óªd_ty≥_hash
(Ë((
ty≥_hash
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ty≥_hashË
MEM_STAT_INFO
)))

	)

842 
	#ggc_Æloc_vec_ty≥_hash
(
n
Ë((
ty≥_hash
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ty≥_hash),Ç 
MEM_STAT_INFO
)))

	)

843 
	#ggc_Æloc_˛óªd_vec_ty≥_hash
(
n
Ë((
ty≥_hash
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ty≥_hash),Ç 
MEM_STAT_INFO
)))

	)

844 
	#ggc_Æloc_°rög_poﬁ_d©a
(Ë((
°rög_poﬁ_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°rög_poﬁ_d©aË
MEM_STAT_INFO
)))

	)

845 
	#ggc_Æloc_˛óªd_°rög_poﬁ_d©a
(Ë((
°rög_poﬁ_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°rög_poﬁ_d©aË
MEM_STAT_INFO
)))

	)

846 
	#ggc_Æloc_vec_°rög_poﬁ_d©a
(
n
Ë((
°rög_poﬁ_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°rög_poﬁ_d©a),Ç 
MEM_STAT_INFO
)))

	)

847 
	#ggc_Æloc_˛óªd_vec_°rög_poﬁ_d©a
(
n
Ë((
°rög_poﬁ_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°rög_poﬁ_d©a),Ç 
MEM_STAT_INFO
)))

	)

848 
	#ggc_Æloc_öôül_vÆue_∑ú
(Ë((
öôül_vÆue_∑ú
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (öôül_vÆue_∑úË
MEM_STAT_INFO
)))

	)

849 
	#ggc_Æloc_˛óªd_öôül_vÆue_∑ú
(Ë((
öôül_vÆue_∑ú
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (öôül_vÆue_∑úË
MEM_STAT_INFO
)))

	)

850 
	#ggc_Æloc_vec_öôül_vÆue_∑ú
(
n
Ë((
öôül_vÆue_∑ú
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (öôül_vÆue_∑ú),Ç 
MEM_STAT_INFO
)))

	)

851 
	#ggc_Æloc_˛óªd_vec_öôül_vÆue_∑ú
(
n
Ë((
öôül_vÆue_∑ú
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (öôül_vÆue_∑ú),Ç 
MEM_STAT_INFO
)))

	)

852 
	#ggc_Æloc_ãmp_¶Ÿ_addªss_íåy
(Ë((
ãmp_¶Ÿ_addªss_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ãmp_¶Ÿ_addªss_íåyË
MEM_STAT_INFO
)))

	)

853 
	#ggc_Æloc_˛óªd_ãmp_¶Ÿ_addªss_íåy
(Ë((
ãmp_¶Ÿ_addªss_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ãmp_¶Ÿ_addªss_íåyË
MEM_STAT_INFO
)))

	)

854 
	#ggc_Æloc_vec_ãmp_¶Ÿ_addªss_íåy
(
n
Ë((
ãmp_¶Ÿ_addªss_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ãmp_¶Ÿ_addªss_íåy),Ç 
MEM_STAT_INFO
)))

	)

855 
	#ggc_Æloc_˛óªd_vec_ãmp_¶Ÿ_addªss_íåy
(
n
Ë((
ãmp_¶Ÿ_addªss_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ãmp_¶Ÿ_addªss_íåy),Ç 
MEM_STAT_INFO
)))

	)

856 
	#ggc_Æloc_eh_°©us_u
(Ë((
eh_°©us_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_°©us_uË
MEM_STAT_INFO
)))

	)

857 
	#ggc_Æloc_˛óªd_eh_°©us_u
(Ë((
eh_°©us_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_°©us_uË
MEM_STAT_INFO
)))

	)

858 
	#ggc_Æloc_vec_eh_°©us_u
(
n
Ë((
eh_°©us_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_°©us_u),Ç 
MEM_STAT_INFO
)))

	)

859 
	#ggc_Æloc_˛óªd_vec_eh_°©us_u
(
n
Ë((
eh_°©us_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_°©us_u),Ç 
MEM_STAT_INFO
)))

	)

860 
	#ggc_Æloc_throw_°mt_node
(Ë((
throw_°mt_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (throw_°mt_nodeË
MEM_STAT_INFO
)))

	)

861 
	#ggc_Æloc_˛óªd_throw_°mt_node
(Ë((
throw_°mt_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (throw_°mt_nodeË
MEM_STAT_INFO
)))

	)

862 
	#ggc_Æloc_vec_throw_°mt_node
(
n
Ë((
throw_°mt_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (throw_°mt_node),Ç 
MEM_STAT_INFO
)))

	)

863 
	#ggc_Æloc_˛óªd_vec_throw_°mt_node
(
n
Ë((
throw_°mt_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (throw_°mt_node),Ç 
MEM_STAT_INFO
)))

	)

864 
	#ggc_Æloc_vec_eh_œndög_∑d_va_gc_
(Ë((
vec
<
eh_œndög_∑d
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<eh_œndög_∑d,va_gc>Ë
MEM_STAT_INFO
)))

	)

865 
	#ggc_Æloc_˛óªd_vec_eh_œndög_∑d_va_gc_
(Ë((
vec
<
eh_œndög_∑d
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<eh_œndög_∑d,va_gc>Ë
MEM_STAT_INFO
)))

	)

866 
	#ggc_Æloc_vec_vec_eh_œndög_∑d_va_gc_
(
n
Ë((
vec
<
eh_œndög_∑d
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<eh_œndög_∑d,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

867 
	#ggc_Æloc_˛óªd_vec_vec_eh_œndög_∑d_va_gc_
(
n
Ë((
vec
<
eh_œndög_∑d
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<eh_œndög_∑d,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

868 
	#ggc_Æloc_vec_eh_ªgi⁄_va_gc_
(Ë((
vec
<
eh_ªgi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<eh_ªgi⁄,va_gc>Ë
MEM_STAT_INFO
)))

	)

869 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄_va_gc_
(Ë((
vec
<
eh_ªgi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<eh_ªgi⁄,va_gc>Ë
MEM_STAT_INFO
)))

	)

870 
	#ggc_Æloc_vec_vec_eh_ªgi⁄_va_gc_
(
n
Ë((
vec
<
eh_ªgi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<eh_ªgi⁄,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

871 
	#ggc_Æloc_˛óªd_vec_vec_eh_ªgi⁄_va_gc_
(
n
Ë((
vec
<
eh_ªgi⁄
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<eh_ªgi⁄,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

872 
	#ggc_Æloc_eh_ªgi⁄_u
(Ë((
eh_ªgi⁄_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ªgi⁄_uË
MEM_STAT_INFO
)))

	)

873 
	#ggc_Æloc_˛óªd_eh_ªgi⁄_u
(Ë((
eh_ªgi⁄_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ªgi⁄_uË
MEM_STAT_INFO
)))

	)

874 
	#ggc_Æloc_vec_eh_ªgi⁄_u
(
n
Ë((
eh_ªgi⁄_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ªgi⁄_u),Ç 
MEM_STAT_INFO
)))

	)

875 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄_u
(
n
Ë((
eh_ªgi⁄_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ªgi⁄_u),Ç 
MEM_STAT_INFO
)))

	)

876 
	#ggc_Æloc_eh_ªgi⁄_u_mu°_nŸ_throw
(Ë((
eh_ªgi⁄_u_mu°_nŸ_throw
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ªgi⁄_u_mu°_nŸ_throwË
MEM_STAT_INFO
)))

	)

877 
	#ggc_Æloc_˛óªd_eh_ªgi⁄_u_mu°_nŸ_throw
(Ë((
eh_ªgi⁄_u_mu°_nŸ_throw
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ªgi⁄_u_mu°_nŸ_throwË
MEM_STAT_INFO
)))

	)

878 
	#ggc_Æloc_vec_eh_ªgi⁄_u_mu°_nŸ_throw
(
n
Ë((
eh_ªgi⁄_u_mu°_nŸ_throw
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ªgi⁄_u_mu°_nŸ_throw),Ç 
MEM_STAT_INFO
)))

	)

879 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄_u_mu°_nŸ_throw
(
n
Ë((
eh_ªgi⁄_u_mu°_nŸ_throw
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ªgi⁄_u_mu°_nŸ_throw),Ç 
MEM_STAT_INFO
)))

	)

880 
	#ggc_Æloc_eh_ªgi⁄_u_Ælowed
(Ë((
eh_ªgi⁄_u_Ælowed
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ªgi⁄_u_ÆlowedË
MEM_STAT_INFO
)))

	)

881 
	#ggc_Æloc_˛óªd_eh_ªgi⁄_u_Ælowed
(Ë((
eh_ªgi⁄_u_Ælowed
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ªgi⁄_u_ÆlowedË
MEM_STAT_INFO
)))

	)

882 
	#ggc_Æloc_vec_eh_ªgi⁄_u_Ælowed
(
n
Ë((
eh_ªgi⁄_u_Ælowed
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ªgi⁄_u_Ælowed),Ç 
MEM_STAT_INFO
)))

	)

883 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄_u_Ælowed
(
n
Ë((
eh_ªgi⁄_u_Ælowed
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ªgi⁄_u_Ælowed),Ç 
MEM_STAT_INFO
)))

	)

884 
	#ggc_Æloc_eh_ªgi⁄_u_åy
(Ë((
eh_ªgi⁄_u_åy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ªgi⁄_u_åyË
MEM_STAT_INFO
)))

	)

885 
	#ggc_Æloc_˛óªd_eh_ªgi⁄_u_åy
(Ë((
eh_ªgi⁄_u_åy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ªgi⁄_u_åyË
MEM_STAT_INFO
)))

	)

886 
	#ggc_Æloc_vec_eh_ªgi⁄_u_åy
(
n
Ë((
eh_ªgi⁄_u_åy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ªgi⁄_u_åy),Ç 
MEM_STAT_INFO
)))

	)

887 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄_u_åy
(
n
Ë((
eh_ªgi⁄_u_åy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ªgi⁄_u_åy),Ç 
MEM_STAT_INFO
)))

	)

888 
	#ggc_Æloc_eh_ˇtch_d
(Ë((
eh_ˇtch_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ˇtch_dË
MEM_STAT_INFO
)))

	)

889 
	#ggc_Æloc_˛óªd_eh_ˇtch_d
(Ë((
eh_ˇtch_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ˇtch_dË
MEM_STAT_INFO
)))

	)

890 
	#ggc_Æloc_vec_eh_ˇtch_d
(
n
Ë((
eh_ˇtch_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ˇtch_d),Ç 
MEM_STAT_INFO
)))

	)

891 
	#ggc_Æloc_˛óªd_vec_eh_ˇtch_d
(
n
Ë((
eh_ˇtch_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ˇtch_d),Ç 
MEM_STAT_INFO
)))

	)

892 
	#ggc_Æloc_eh_œndög_∑d_d
(Ë((
eh_œndög_∑d_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_œndög_∑d_dË
MEM_STAT_INFO
)))

	)

893 
	#ggc_Æloc_˛óªd_eh_œndög_∑d_d
(Ë((
eh_œndög_∑d_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_œndög_∑d_dË
MEM_STAT_INFO
)))

	)

894 
	#ggc_Æloc_vec_eh_œndög_∑d_d
(
n
Ë((
eh_œndög_∑d_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_œndög_∑d_d),Ç 
MEM_STAT_INFO
)))

	)

895 
	#ggc_Æloc_˛óªd_vec_eh_œndög_∑d_d
(
n
Ë((
eh_œndög_∑d_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_œndög_∑d_d),Ç 
MEM_STAT_INFO
)))

	)

896 
	#ggc_Æloc_poöãr_m≠_t
(Ë((
poöãr_m≠_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (poöãr_m≠_tË
MEM_STAT_INFO
)))

	)

897 
	#ggc_Æloc_˛óªd_poöãr_m≠_t
(Ë((
poöãr_m≠_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (poöãr_m≠_tË
MEM_STAT_INFO
)))

	)

898 
	#ggc_Æloc_vec_poöãr_m≠_t
(
n
Ë((
poöãr_m≠_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (poöãr_m≠_t),Ç 
MEM_STAT_INFO
)))

	)

899 
	#ggc_Æloc_˛óªd_vec_poöãr_m≠_t
(
n
Ë((
poöãr_m≠_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (poöãr_m≠_t),Ç 
MEM_STAT_INFO
)))

	)

900 
	#ggc_Æloc_eh_ªgi⁄_d
(Ë((
eh_ªgi⁄_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ªgi⁄_dË
MEM_STAT_INFO
)))

	)

901 
	#ggc_Æloc_˛óªd_eh_ªgi⁄_d
(Ë((
eh_ªgi⁄_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ªgi⁄_dË
MEM_STAT_INFO
)))

	)

902 
	#ggc_Æloc_vec_eh_ªgi⁄_d
(
n
Ë((
eh_ªgi⁄_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ªgi⁄_d),Ç 
MEM_STAT_INFO
)))

	)

903 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄_d
(
n
Ë((
eh_ªgi⁄_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ªgi⁄_d),Ç 
MEM_STAT_INFO
)))

	)

904 
	#ggc_Æloc_vec_dõ_¨g_íåy_va_gc_
(Ë((
vec
<
dõ_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<dõ_¨g_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

905 
	#ggc_Æloc_˛óªd_vec_dõ_¨g_íåy_va_gc_
(Ë((
vec
<
dõ_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<dõ_¨g_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

906 
	#ggc_Æloc_vec_vec_dõ_¨g_íåy_va_gc_
(
n
Ë((
vec
<
dõ_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<dõ_¨g_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

907 
	#ggc_Æloc_˛óªd_vec_vec_dõ_¨g_íåy_va_gc_
(
n
Ë((
vec
<
dõ_¨g_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<dõ_¨g_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

908 
	#ggc_Æloc_vec_macöfo_íåy_va_gc_
(Ë((
vec
<
macöfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<macöfo_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

909 
	#ggc_Æloc_˛óªd_vec_macöfo_íåy_va_gc_
(Ë((
vec
<
macöfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<macöfo_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

910 
	#ggc_Æloc_vec_vec_macöfo_íåy_va_gc_
(
n
Ë((
vec
<
macöfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<macöfo_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

911 
	#ggc_Æloc_˛óªd_vec_vec_macöfo_íåy_va_gc_
(
n
Ë((
vec
<
macöfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<macöfo_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

912 
	#ggc_Æloc_vec_pub«me_íåy_va_gc_
(Ë((
vec
<
pub«me_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<pub«me_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

913 
	#ggc_Æloc_˛óªd_vec_pub«me_íåy_va_gc_
(Ë((
vec
<
pub«me_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<pub«me_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

914 
	#ggc_Æloc_vec_vec_pub«me_íåy_va_gc_
(
n
Ë((
vec
<
pub«me_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<pub«me_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

915 
	#ggc_Æloc_˛óªd_vec_vec_pub«me_íåy_va_gc_
(
n
Ë((
vec
<
pub«me_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<pub«me_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

916 
	#ggc_Æloc_vec_dw_löe_öfo_èbÀ_p_va_gc_
(Ë((
vec
<
dw_löe_öfo_èbÀ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<dw_löe_öfo_èbÀ_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

917 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_èbÀ_p_va_gc_
(Ë((
vec
<
dw_löe_öfo_èbÀ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<dw_löe_öfo_èbÀ_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

918 
	#ggc_Æloc_vec_vec_dw_löe_öfo_èbÀ_p_va_gc_
(
n
Ë((
vec
<
dw_löe_öfo_èbÀ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<dw_löe_öfo_èbÀ_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

919 
	#ggc_Æloc_˛óªd_vec_vec_dw_löe_öfo_èbÀ_p_va_gc_
(
n
Ë((
vec
<
dw_löe_öfo_èbÀ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<dw_löe_öfo_èbÀ_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

920 
	#ggc_Æloc_ˇched_dw_loc_li°_def
(Ë((
ˇched_dw_loc_li°_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ˇched_dw_loc_li°_defË
MEM_STAT_INFO
)))

	)

921 
	#ggc_Æloc_˛óªd_ˇched_dw_loc_li°_def
(Ë((
ˇched_dw_loc_li°_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ˇched_dw_loc_li°_defË
MEM_STAT_INFO
)))

	)

922 
	#ggc_Æloc_vec_ˇched_dw_loc_li°_def
(
n
Ë((
ˇched_dw_loc_li°_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ˇched_dw_loc_li°_def),Ç 
MEM_STAT_INFO
)))

	)

923 
	#ggc_Æloc_˛óªd_vec_ˇched_dw_loc_li°_def
(
n
Ë((
ˇched_dw_loc_li°_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ˇched_dw_loc_li°_def),Ç 
MEM_STAT_INFO
)))

	)

924 
	#ggc_Æloc_ˇŒ_¨g_loc_node
(Ë((
ˇŒ_¨g_loc_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ˇŒ_¨g_loc_nodeË
MEM_STAT_INFO
)))

	)

925 
	#ggc_Æloc_˛óªd_ˇŒ_¨g_loc_node
(Ë((
ˇŒ_¨g_loc_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ˇŒ_¨g_loc_nodeË
MEM_STAT_INFO
)))

	)

926 
	#ggc_Æloc_vec_ˇŒ_¨g_loc_node
(
n
Ë((
ˇŒ_¨g_loc_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ˇŒ_¨g_loc_node),Ç 
MEM_STAT_INFO
)))

	)

927 
	#ggc_Æloc_˛óªd_vec_ˇŒ_¨g_loc_node
(
n
Ë((
ˇŒ_¨g_loc_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ˇŒ_¨g_loc_node),Ç 
MEM_STAT_INFO
)))

	)

928 
	#ggc_Æloc_v¨_loc_li°_def
(Ë((
v¨_loc_li°_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (v¨_loc_li°_defË
MEM_STAT_INFO
)))

	)

929 
	#ggc_Æloc_˛óªd_v¨_loc_li°_def
(Ë((
v¨_loc_li°_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (v¨_loc_li°_defË
MEM_STAT_INFO
)))

	)

930 
	#ggc_Æloc_vec_v¨_loc_li°_def
(
n
Ë((
v¨_loc_li°_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (v¨_loc_li°_def),Ç 
MEM_STAT_INFO
)))

	)

931 
	#ggc_Æloc_˛óªd_vec_v¨_loc_li°_def
(
n
Ë((
v¨_loc_li°_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (v¨_loc_li°_def),Ç 
MEM_STAT_INFO
)))

	)

932 
	#ggc_Æloc_v¨_loc_node
(Ë((
v¨_loc_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (v¨_loc_nodeË
MEM_STAT_INFO
)))

	)

933 
	#ggc_Æloc_˛óªd_v¨_loc_node
(Ë((
v¨_loc_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (v¨_loc_nodeË
MEM_STAT_INFO
)))

	)

934 
	#ggc_Æloc_vec_v¨_loc_node
(
n
Ë((
v¨_loc_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (v¨_loc_node),Ç 
MEM_STAT_INFO
)))

	)

935 
	#ggc_Æloc_˛óªd_vec_v¨_loc_node
(
n
Ë((
v¨_loc_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (v¨_loc_node),Ç 
MEM_STAT_INFO
)))

	)

936 
	#ggc_Æloc_dõ_¨g_íåy_°ru˘
(Ë((
dõ_¨g_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dõ_¨g_íåy_°ru˘Ë
MEM_STAT_INFO
)))

	)

937 
	#ggc_Æloc_˛óªd_dõ_¨g_íåy_°ru˘
(Ë((
dõ_¨g_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dõ_¨g_íåy_°ru˘Ë
MEM_STAT_INFO
)))

	)

938 
	#ggc_Æloc_vec_dõ_¨g_íåy_°ru˘
(
n
Ë((
dõ_¨g_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dõ_¨g_íåy_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

939 
	#ggc_Æloc_˛óªd_vec_dõ_¨g_íåy_°ru˘
(
n
Ë((
dõ_¨g_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dõ_¨g_íåy_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

940 
	#ggc_Æloc_limbo_dõ_°ru˘
(Ë((
limbo_dõ_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (limbo_dõ_°ru˘Ë
MEM_STAT_INFO
)))

	)

941 
	#ggc_Æloc_˛óªd_limbo_dõ_°ru˘
(Ë((
limbo_dõ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (limbo_dõ_°ru˘Ë
MEM_STAT_INFO
)))

	)

942 
	#ggc_Æloc_vec_limbo_dõ_°ru˘
(
n
Ë((
limbo_dõ_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (limbo_dõ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

943 
	#ggc_Æloc_˛óªd_vec_limbo_dõ_°ru˘
(
n
Ë((
limbo_dõ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (limbo_dõ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

944 
	#ggc_Æloc_macöfo_°ru˘
(Ë((
macöfo_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (macöfo_°ru˘Ë
MEM_STAT_INFO
)))

	)

945 
	#ggc_Æloc_˛óªd_macöfo_°ru˘
(Ë((
macöfo_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (macöfo_°ru˘Ë
MEM_STAT_INFO
)))

	)

946 
	#ggc_Æloc_vec_macöfo_°ru˘
(
n
Ë((
macöfo_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (macöfo_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

947 
	#ggc_Æloc_˛óªd_vec_macöfo_°ru˘
(
n
Ë((
macöfo_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (macöfo_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

948 
	#ggc_Æloc_vec_dw_©å_node_va_gc_
(Ë((
vec
<
dw_©å_node
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<dw_©å_node,va_gc>Ë
MEM_STAT_INFO
)))

	)

949 
	#ggc_Æloc_˛óªd_vec_dw_©å_node_va_gc_
(Ë((
vec
<
dw_©å_node
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<dw_©å_node,va_gc>Ë
MEM_STAT_INFO
)))

	)

950 
	#ggc_Æloc_vec_vec_dw_©å_node_va_gc_
(
n
Ë((
vec
<
dw_©å_node
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<dw_©å_node,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

951 
	#ggc_Æloc_˛óªd_vec_vec_dw_©å_node_va_gc_
(
n
Ë((
vec
<
dw_©å_node
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<dw_©å_node,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

952 
	#ggc_Æloc_dõ_symbﬁ_‹_ty≥_node
(Ë((
dõ_symbﬁ_‹_ty≥_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dõ_symbﬁ_‹_ty≥_nodeË
MEM_STAT_INFO
)))

	)

953 
	#ggc_Æloc_˛óªd_dõ_symbﬁ_‹_ty≥_node
(Ë((
dõ_symbﬁ_‹_ty≥_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dõ_symbﬁ_‹_ty≥_nodeË
MEM_STAT_INFO
)))

	)

954 
	#ggc_Æloc_vec_dõ_symbﬁ_‹_ty≥_node
(
n
Ë((
dõ_symbﬁ_‹_ty≥_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dõ_symbﬁ_‹_ty≥_node),Ç 
MEM_STAT_INFO
)))

	)

955 
	#ggc_Æloc_˛óªd_vec_dõ_symbﬁ_‹_ty≥_node
(
n
Ë((
dõ_symbﬁ_‹_ty≥_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dõ_symbﬁ_‹_ty≥_node),Ç 
MEM_STAT_INFO
)))

	)

956 
	#ggc_Æloc_dw_löe_öfo_èbÀ_°ru˘
(Ë((
dw_löe_öfo_èbÀ_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_löe_öfo_èbÀ_°ru˘Ë
MEM_STAT_INFO
)))

	)

957 
	#ggc_Æloc_˛óªd_dw_löe_öfo_èbÀ_°ru˘
(Ë((
dw_löe_öfo_èbÀ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_löe_öfo_èbÀ_°ru˘Ë
MEM_STAT_INFO
)))

	)

958 
	#ggc_Æloc_vec_dw_löe_öfo_èbÀ_°ru˘
(
n
Ë((
dw_löe_öfo_èbÀ_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_löe_öfo_èbÀ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

959 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_èbÀ_°ru˘
(
n
Ë((
dw_löe_öfo_èbÀ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_löe_öfo_èbÀ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

960 
	#ggc_Æloc_vec_dw_löe_öfo_íåy_va_gc_
(Ë((
vec
<
dw_löe_öfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<dw_löe_öfo_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

961 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_íåy_va_gc_
(Ë((
vec
<
dw_löe_öfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<dw_löe_öfo_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

962 
	#ggc_Æloc_vec_vec_dw_löe_öfo_íåy_va_gc_
(
n
Ë((
vec
<
dw_löe_öfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<dw_löe_öfo_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

963 
	#ggc_Æloc_˛óªd_vec_vec_dw_löe_öfo_íåy_va_gc_
(
n
Ë((
vec
<
dw_löe_öfo_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<dw_löe_öfo_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

964 
	#ggc_Æloc_comd©_ty≥_°ru˘
(Ë((
comd©_ty≥_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (comd©_ty≥_°ru˘Ë
MEM_STAT_INFO
)))

	)

965 
	#ggc_Æloc_˛óªd_comd©_ty≥_°ru˘
(Ë((
comd©_ty≥_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (comd©_ty≥_°ru˘Ë
MEM_STAT_INFO
)))

	)

966 
	#ggc_Æloc_vec_comd©_ty≥_°ru˘
(
n
Ë((
comd©_ty≥_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (comd©_ty≥_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

967 
	#ggc_Æloc_˛óªd_vec_comd©_ty≥_°ru˘
(
n
Ë((
comd©_ty≥_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (comd©_ty≥_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

968 
	#ggc_Æloc_dw_ønges_by_œbñ_°ru˘
(Ë((
dw_ønges_by_œbñ_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_ønges_by_œbñ_°ru˘Ë
MEM_STAT_INFO
)))

	)

969 
	#ggc_Æloc_˛óªd_dw_ønges_by_œbñ_°ru˘
(Ë((
dw_ønges_by_œbñ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_ønges_by_œbñ_°ru˘Ë
MEM_STAT_INFO
)))

	)

970 
	#ggc_Æloc_vec_dw_ønges_by_œbñ_°ru˘
(
n
Ë((
dw_ønges_by_œbñ_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_ønges_by_œbñ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

971 
	#ggc_Æloc_˛óªd_vec_dw_ønges_by_œbñ_°ru˘
(
n
Ë((
dw_ønges_by_œbñ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_ønges_by_œbñ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

972 
	#ggc_Æloc_dw_ønges_°ru˘
(Ë((
dw_ønges_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_ønges_°ru˘Ë
MEM_STAT_INFO
)))

	)

973 
	#ggc_Æloc_˛óªd_dw_ønges_°ru˘
(Ë((
dw_ønges_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_ønges_°ru˘Ë
MEM_STAT_INFO
)))

	)

974 
	#ggc_Æloc_vec_dw_ønges_°ru˘
(
n
Ë((
dw_ønges_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_ønges_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

975 
	#ggc_Æloc_˛óªd_vec_dw_ønges_°ru˘
(
n
Ë((
dw_ønges_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_ønges_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

976 
	#ggc_Æloc_pub«me_°ru˘
(Ë((
pub«me_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (pub«me_°ru˘Ë
MEM_STAT_INFO
)))

	)

977 
	#ggc_Æloc_˛óªd_pub«me_°ru˘
(Ë((
pub«me_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (pub«me_°ru˘Ë
MEM_STAT_INFO
)))

	)

978 
	#ggc_Æloc_vec_pub«me_°ru˘
(
n
Ë((
pub«me_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (pub«me_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

979 
	#ggc_Æloc_˛óªd_vec_pub«me_°ru˘
(
n
Ë((
pub«me_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (pub«me_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

980 
	#ggc_Æloc_dw_löe_öfo_°ru˘
(Ë((
dw_löe_öfo_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_löe_öfo_°ru˘Ë
MEM_STAT_INFO
)))

	)

981 
	#ggc_Æloc_˛óªd_dw_löe_öfo_°ru˘
(Ë((
dw_löe_öfo_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_löe_öfo_°ru˘Ë
MEM_STAT_INFO
)))

	)

982 
	#ggc_Æloc_vec_dw_löe_öfo_°ru˘
(
n
Ë((
dw_löe_öfo_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_löe_öfo_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

983 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_°ru˘
(
n
Ë((
dw_löe_öfo_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_löe_öfo_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

984 
	#ggc_Æloc_dw_©å_°ru˘
(Ë((
dw_©å_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_©å_°ru˘Ë
MEM_STAT_INFO
)))

	)

985 
	#ggc_Æloc_˛óªd_dw_©å_°ru˘
(Ë((
dw_©å_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_©å_°ru˘Ë
MEM_STAT_INFO
)))

	)

986 
	#ggc_Æloc_vec_dw_©å_°ru˘
(
n
Ë((
dw_©å_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_©å_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

987 
	#ggc_Æloc_˛óªd_vec_dw_©å_°ru˘
(
n
Ë((
dw_©å_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_©å_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

988 
	#ggc_Æloc_addr_èbÀ_íåy_°ru˘_uni⁄
(Ë((
addr_èbÀ_íåy_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘_uni⁄Ë
MEM_STAT_INFO
)))

	)

989 
	#ggc_Æloc_˛óªd_addr_èbÀ_íåy_°ru˘_uni⁄
(Ë((
addr_èbÀ_íåy_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘_uni⁄Ë
MEM_STAT_INFO
)))

	)

990 
	#ggc_Æloc_vec_addr_èbÀ_íåy_°ru˘_uni⁄
(
n
Ë((
addr_èbÀ_íåy_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

991 
	#ggc_Æloc_˛óªd_vec_addr_èbÀ_íåy_°ru˘_uni⁄
(
n
Ë((
addr_èbÀ_íåy_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

992 
	#ggc_Æloc_vec_de„ºed_loˇti⁄s_va_gc_
(Ë((
vec
<
de„ºed_loˇti⁄s
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<de„ºed_loˇti⁄s,va_gc>Ë
MEM_STAT_INFO
)))

	)

993 
	#ggc_Æloc_˛óªd_vec_de„ºed_loˇti⁄s_va_gc_
(Ë((
vec
<
de„ºed_loˇti⁄s
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<de„ºed_loˇti⁄s,va_gc>Ë
MEM_STAT_INFO
)))

	)

994 
	#ggc_Æloc_vec_vec_de„ºed_loˇti⁄s_va_gc_
(
n
Ë((
vec
<
de„ºed_loˇti⁄s
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<de„ºed_loˇti⁄s,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

995 
	#ggc_Æloc_˛óªd_vec_vec_de„ºed_loˇti⁄s_va_gc_
(
n
Ë((
vec
<
de„ºed_loˇti⁄s
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<de„ºed_loˇti⁄s,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

996 
	#ggc_Æloc_de„ºed_loˇti⁄s_°ru˘
(Ë((
de„ºed_loˇti⁄s_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (de„ºed_loˇti⁄s_°ru˘Ë
MEM_STAT_INFO
)))

	)

997 
	#ggc_Æloc_˛óªd_de„ºed_loˇti⁄s_°ru˘
(Ë((
de„ºed_loˇti⁄s_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (de„ºed_loˇti⁄s_°ru˘Ë
MEM_STAT_INFO
)))

	)

998 
	#ggc_Æloc_vec_de„ºed_loˇti⁄s_°ru˘
(
n
Ë((
de„ºed_loˇti⁄s_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (de„ºed_loˇti⁄s_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

999 
	#ggc_Æloc_˛óªd_vec_de„ºed_loˇti⁄s_°ru˘
(
n
Ë((
de„ºed_loˇti⁄s_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (de„ºed_loˇti⁄s_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1000 
	#ggc_Æloc_vec_dw_fde_ªf_va_gc_
(Ë((
vec
<
dw_fde_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<dw_fde_ªf,va_gc>Ë
MEM_STAT_INFO
)))

	)

1001 
	#ggc_Æloc_˛óªd_vec_dw_fde_ªf_va_gc_
(Ë((
vec
<
dw_fde_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<dw_fde_ªf,va_gc>Ë
MEM_STAT_INFO
)))

	)

1002 
	#ggc_Æloc_vec_vec_dw_fde_ªf_va_gc_
(
n
Ë((
vec
<
dw_fde_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<dw_fde_ªf,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1003 
	#ggc_Æloc_˛óªd_vec_vec_dw_fde_ªf_va_gc_
(
n
Ë((
vec
<
dw_fde_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<dw_fde_ªf,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1004 
	#ggc_Æloc_ªg_ßved_ö_d©a_°ru˘
(Ë((
ªg_ßved_ö_d©a_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ªg_ßved_ö_d©a_°ru˘Ë
MEM_STAT_INFO
)))

	)

1005 
	#ggc_Æloc_˛óªd_ªg_ßved_ö_d©a_°ru˘
(Ë((
ªg_ßved_ö_d©a_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ªg_ßved_ö_d©a_°ru˘Ë
MEM_STAT_INFO
)))

	)

1006 
	#ggc_Æloc_vec_ªg_ßved_ö_d©a_°ru˘
(
n
Ë((
ªg_ßved_ö_d©a_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ªg_ßved_ö_d©a_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1007 
	#ggc_Æloc_˛óªd_vec_ªg_ßved_ö_d©a_°ru˘
(
n
Ë((
ªg_ßved_ö_d©a_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ªg_ßved_ö_d©a_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1008 
	#ggc_Æloc_dw_cfi_row_°ru˘
(Ë((
dw_cfi_row_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_cfi_row_°ru˘Ë
MEM_STAT_INFO
)))

	)

1009 
	#ggc_Æloc_˛óªd_dw_cfi_row_°ru˘
(Ë((
dw_cfi_row_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_cfi_row_°ru˘Ë
MEM_STAT_INFO
)))

	)

1010 
	#ggc_Æloc_vec_dw_cfi_row_°ru˘
(
n
Ë((
dw_cfi_row_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_cfi_row_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1011 
	#ggc_Æloc_˛óªd_vec_dw_cfi_row_°ru˘
(
n
Ë((
dw_cfi_row_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_cfi_row_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1012 
	#ggc_Æloc_dw_vÆ_°ru˘_uni⁄
(Ë((
dw_vÆ_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_vÆ_°ru˘_uni⁄Ë
MEM_STAT_INFO
)))

	)

1013 
	#ggc_Æloc_˛óªd_dw_vÆ_°ru˘_uni⁄
(Ë((
dw_vÆ_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_vÆ_°ru˘_uni⁄Ë
MEM_STAT_INFO
)))

	)

1014 
	#ggc_Æloc_vec_dw_vÆ_°ru˘_uni⁄
(
n
Ë((
dw_vÆ_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_vÆ_°ru˘_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

1015 
	#ggc_Æloc_˛óªd_vec_dw_vÆ_°ru˘_uni⁄
(
n
Ë((
dw_vÆ_°ru˘_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_vÆ_°ru˘_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

1016 
	#ggc_Æloc_dw_vÆ_vms_dñè_uni⁄
(Ë((
dw_vÆ_vms_dñè_uni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_vÆ_vms_dñè_uni⁄Ë
MEM_STAT_INFO
)))

	)

1017 
	#ggc_Æloc_˛óªd_dw_vÆ_vms_dñè_uni⁄
(Ë((
dw_vÆ_vms_dñè_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_vÆ_vms_dñè_uni⁄Ë
MEM_STAT_INFO
)))

	)

1018 
	#ggc_Æloc_vec_dw_vÆ_vms_dñè_uni⁄
(
n
Ë((
dw_vÆ_vms_dñè_uni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_vÆ_vms_dñè_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

1019 
	#ggc_Æloc_˛óªd_vec_dw_vÆ_vms_dñè_uni⁄
(
n
Ë((
dw_vÆ_vms_dñè_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_vÆ_vms_dñè_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

1020 
	#ggc_Æloc_dw¨f_fûe_d©a
(Ë((
dw¨f_fûe_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw¨f_fûe_d©aË
MEM_STAT_INFO
)))

	)

1021 
	#ggc_Æloc_˛óªd_dw¨f_fûe_d©a
(Ë((
dw¨f_fûe_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw¨f_fûe_d©aË
MEM_STAT_INFO
)))

	)

1022 
	#ggc_Æloc_vec_dw¨f_fûe_d©a
(
n
Ë((
dw¨f_fûe_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw¨f_fûe_d©a),Ç 
MEM_STAT_INFO
)))

	)

1023 
	#ggc_Æloc_˛óªd_vec_dw¨f_fûe_d©a
(
n
Ë((
dw¨f_fûe_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw¨f_fûe_d©a),Ç 
MEM_STAT_INFO
)))

	)

1024 
	#ggc_Æloc_ödúe˘_°rög_node
(Ë((
ödúe˘_°rög_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ödúe˘_°rög_nodeË
MEM_STAT_INFO
)))

	)

1025 
	#ggc_Æloc_˛óªd_ödúe˘_°rög_node
(Ë((
ödúe˘_°rög_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ödúe˘_°rög_nodeË
MEM_STAT_INFO
)))

	)

1026 
	#ggc_Æloc_vec_ödúe˘_°rög_node
(
n
Ë((
ödúe˘_°rög_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ödúe˘_°rög_node),Ç 
MEM_STAT_INFO
)))

	)

1027 
	#ggc_Æloc_˛óªd_vec_ödúe˘_°rög_node
(
n
Ë((
ödúe˘_°rög_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ödúe˘_°rög_node),Ç 
MEM_STAT_INFO
)))

	)

1028 
	#ggc_Æloc_dw_vÆ_dõ_uni⁄
(Ë((
dw_vÆ_dõ_uni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_vÆ_dõ_uni⁄Ë
MEM_STAT_INFO
)))

	)

1029 
	#ggc_Æloc_˛óªd_dw_vÆ_dõ_uni⁄
(Ë((
dw_vÆ_dõ_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_vÆ_dõ_uni⁄Ë
MEM_STAT_INFO
)))

	)

1030 
	#ggc_Æloc_vec_dw_vÆ_dõ_uni⁄
(
n
Ë((
dw_vÆ_dõ_uni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_vÆ_dõ_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

1031 
	#ggc_Æloc_˛óªd_vec_dw_vÆ_dõ_uni⁄
(
n
Ë((
dw_vÆ_dõ_uni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_vÆ_dõ_uni⁄),Ç 
MEM_STAT_INFO
)))

	)

1032 
	#ggc_Æloc_addr_èbÀ_íåy_°ru˘
(Ë((
addr_èbÀ_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘Ë
MEM_STAT_INFO
)))

	)

1033 
	#ggc_Æloc_˛óªd_addr_èbÀ_íåy_°ru˘
(Ë((
addr_èbÀ_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘Ë
MEM_STAT_INFO
)))

	)

1034 
	#ggc_Æloc_vec_addr_èbÀ_íåy_°ru˘
(
n
Ë((
addr_èbÀ_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1035 
	#ggc_Æloc_˛óªd_vec_addr_èbÀ_íåy_°ru˘
(
n
Ë((
addr_èbÀ_íåy_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (addr_èbÀ_íåy_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1036 
	#ggc_Æloc_dw_vec_c⁄°
(Ë((
dw_vec_c⁄°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_vec_c⁄°Ë
MEM_STAT_INFO
)))

	)

1037 
	#ggc_Æloc_˛óªd_dw_vec_c⁄°
(Ë((
dw_vec_c⁄°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_vec_c⁄°Ë
MEM_STAT_INFO
)))

	)

1038 
	#ggc_Æloc_vec_dw_vec_c⁄°
(
n
Ë((
dw_vec_c⁄°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_vec_c⁄°),Ç 
MEM_STAT_INFO
)))

	)

1039 
	#ggc_Æloc_˛óªd_vec_dw_vec_c⁄°
(
n
Ë((
dw_vec_c⁄°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_vec_c⁄°),Ç 
MEM_STAT_INFO
)))

	)

1040 
	#ggc_Æloc_dw_cÁ_loˇti⁄
(Ë((
dw_cÁ_loˇti⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_cÁ_loˇti⁄Ë
MEM_STAT_INFO
)))

	)

1041 
	#ggc_Æloc_˛óªd_dw_cÁ_loˇti⁄
(Ë((
dw_cÁ_loˇti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_cÁ_loˇti⁄Ë
MEM_STAT_INFO
)))

	)

1042 
	#ggc_Æloc_vec_dw_cÁ_loˇti⁄
(
n
Ë((
dw_cÁ_loˇti⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_cÁ_loˇti⁄),Ç 
MEM_STAT_INFO
)))

	)

1043 
	#ggc_Æloc_˛óªd_vec_dw_cÁ_loˇti⁄
(
n
Ë((
dw_cÁ_loˇti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_cÁ_loˇti⁄),Ç 
MEM_STAT_INFO
)))

	)

1044 
	#ggc_Æloc_vec_dw_cfi_ªf_va_gc_
(Ë((
vec
<
dw_cfi_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<dw_cfi_ªf,va_gc>Ë
MEM_STAT_INFO
)))

	)

1045 
	#ggc_Æloc_˛óªd_vec_dw_cfi_ªf_va_gc_
(Ë((
vec
<
dw_cfi_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<dw_cfi_ªf,va_gc>Ë
MEM_STAT_INFO
)))

	)

1046 
	#ggc_Æloc_vec_vec_dw_cfi_ªf_va_gc_
(
n
Ë((
vec
<
dw_cfi_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<dw_cfi_ªf,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1047 
	#ggc_Æloc_˛óªd_vec_vec_dw_cfi_ªf_va_gc_
(
n
Ë((
vec
<
dw_cfi_ªf
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<dw_cfi_ªf,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1048 
	#ggc_Æloc_dw_loc_li°_°ru˘
(Ë((
dw_loc_li°_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_loc_li°_°ru˘Ë
MEM_STAT_INFO
)))

	)

1049 
	#ggc_Æloc_˛óªd_dw_loc_li°_°ru˘
(Ë((
dw_loc_li°_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_loc_li°_°ru˘Ë
MEM_STAT_INFO
)))

	)

1050 
	#ggc_Æloc_vec_dw_loc_li°_°ru˘
(
n
Ë((
dw_loc_li°_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_loc_li°_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1051 
	#ggc_Æloc_˛óªd_vec_dw_loc_li°_°ru˘
(
n
Ë((
dw_loc_li°_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_loc_li°_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1052 
	#ggc_Æloc_dw_loc_des¸_node
(Ë((
dw_loc_des¸_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_loc_des¸_nodeË
MEM_STAT_INFO
)))

	)

1053 
	#ggc_Æloc_˛óªd_dw_loc_des¸_node
(Ë((
dw_loc_des¸_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_loc_des¸_nodeË
MEM_STAT_INFO
)))

	)

1054 
	#ggc_Æloc_vec_dw_loc_des¸_node
(
n
Ë((
dw_loc_des¸_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_loc_des¸_node),Ç 
MEM_STAT_INFO
)))

	)

1055 
	#ggc_Æloc_˛óªd_vec_dw_loc_des¸_node
(
n
Ë((
dw_loc_des¸_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_loc_des¸_node),Ç 
MEM_STAT_INFO
)))

	)

1056 
	#ggc_Æloc_dw_cfi_node
(Ë((
dw_cfi_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_cfi_nodeË
MEM_STAT_INFO
)))

	)

1057 
	#ggc_Æloc_˛óªd_dw_cfi_node
(Ë((
dw_cfi_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_cfi_nodeË
MEM_STAT_INFO
)))

	)

1058 
	#ggc_Æloc_vec_dw_cfi_node
(
n
Ë((
dw_cfi_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_cfi_node),Ç 
MEM_STAT_INFO
)))

	)

1059 
	#ggc_Æloc_˛óªd_vec_dw_cfi_node
(
n
Ë((
dw_cfi_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_cfi_node),Ç 
MEM_STAT_INFO
)))

	)

1060 
	#ggc_Æloc_dw_vÆ_node
(Ë((
dw_vÆ_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_vÆ_nodeË
MEM_STAT_INFO
)))

	)

1061 
	#ggc_Æloc_˛óªd_dw_vÆ_node
(Ë((
dw_vÆ_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_vÆ_nodeË
MEM_STAT_INFO
)))

	)

1062 
	#ggc_Æloc_vec_dw_vÆ_node
(
n
Ë((
dw_vÆ_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_vÆ_node),Ç 
MEM_STAT_INFO
)))

	)

1063 
	#ggc_Æloc_˛óªd_vec_dw_vÆ_node
(
n
Ë((
dw_vÆ_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_vÆ_node),Ç 
MEM_STAT_INFO
)))

	)

1064 
	#ggc_Æloc_ty≥öfo
(Ë((
ty≥öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ty≥öfoË
MEM_STAT_INFO
)))

	)

1065 
	#ggc_Æloc_˛óªd_ty≥öfo
(Ë((
ty≥öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ty≥öfoË
MEM_STAT_INFO
)))

	)

1066 
	#ggc_Æloc_vec_ty≥öfo
(
n
Ë((
ty≥öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ty≥öfo),Ç 
MEM_STAT_INFO
)))

	)

1067 
	#ggc_Æloc_˛óªd_vec_ty≥öfo
(
n
Ë((
ty≥öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ty≥öfo),Ç 
MEM_STAT_INFO
)))

	)

1068 
	#ggc_Æloc_odr_ty≥_d
(Ë((
odr_ty≥_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (odr_ty≥_dË
MEM_STAT_INFO
)))

	)

1069 
	#ggc_Æloc_˛óªd_odr_ty≥_d
(Ë((
odr_ty≥_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (odr_ty≥_dË
MEM_STAT_INFO
)))

	)

1070 
	#ggc_Æloc_vec_odr_ty≥_d
(
n
Ë((
odr_ty≥_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (odr_ty≥_d),Ç 
MEM_STAT_INFO
)))

	)

1071 
	#ggc_Æloc_˛óªd_vec_odr_ty≥_d
(
n
Ë((
odr_ty≥_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (odr_ty≥_d),Ç 
MEM_STAT_INFO
)))

	)

1072 
	#ggc_Æloc_ölöe_summ¨y
(Ë((
ölöe_summ¨y
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ölöe_summ¨yË
MEM_STAT_INFO
)))

	)

1073 
	#ggc_Æloc_˛óªd_ölöe_summ¨y
(Ë((
ölöe_summ¨y
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ölöe_summ¨yË
MEM_STAT_INFO
)))

	)

1074 
	#ggc_Æloc_vec_ölöe_summ¨y
(
n
Ë((
ölöe_summ¨y
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ölöe_summ¨y),Ç 
MEM_STAT_INFO
)))

	)

1075 
	#ggc_Æloc_˛óªd_vec_ölöe_summ¨y
(
n
Ë((
ölöe_summ¨y
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ölöe_summ¨y),Ç 
MEM_STAT_INFO
)))

	)

1076 
	#ggc_Æloc_ùa_agg_jump_fun˘i⁄
(Ë((
ùa_agg_jump_fun˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

1077 
	#ggc_Æloc_˛óªd_ùa_agg_jump_fun˘i⁄
(Ë((
ùa_agg_jump_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

1078 
	#ggc_Æloc_vec_ùa_agg_jump_fun˘i⁄
(
n
Ë((
ùa_agg_jump_fun˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1079 
	#ggc_Æloc_˛óªd_vec_ùa_agg_jump_fun˘i⁄
(
n
Ë((
ùa_agg_jump_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1080 
	#ggc_Æloc_ùa_agg_ª∂a˚mít_vÆue
(Ë((
ùa_agg_ª∂a˚mít_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆueË
MEM_STAT_INFO
)))

	)

1081 
	#ggc_Æloc_˛óªd_ùa_agg_ª∂a˚mít_vÆue
(Ë((
ùa_agg_ª∂a˚mít_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆueË
MEM_STAT_INFO
)))

	)

1082 
	#ggc_Æloc_vec_ùa_agg_ª∂a˚mít_vÆue
(
n
Ë((
ùa_agg_ª∂a˚mít_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆue),Ç 
MEM_STAT_INFO
)))

	)

1083 
	#ggc_Æloc_˛óªd_vec_ùa_agg_ª∂a˚mít_vÆue
(
n
Ë((
ùa_agg_ª∂a˚mít_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆue),Ç 
MEM_STAT_INFO
)))

	)

1084 
	#ggc_Æloc_ùa_edge_¨gs
(Ë((
ùa_edge_¨gs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_edge_¨gsË
MEM_STAT_INFO
)))

	)

1085 
	#ggc_Æloc_˛óªd_ùa_edge_¨gs
(Ë((
ùa_edge_¨gs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_edge_¨gsË
MEM_STAT_INFO
)))

	)

1086 
	#ggc_Æloc_vec_ùa_edge_¨gs
(
n
Ë((
ùa_edge_¨gs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_edge_¨gs),Ç 
MEM_STAT_INFO
)))

	)

1087 
	#ggc_Æloc_˛óªd_vec_ùa_edge_¨gs
(
n
Ë((
ùa_edge_¨gs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_edge_¨gs),Ç 
MEM_STAT_INFO
)))

	)

1088 
	#ggc_Æloc_ùa_agg_jf_ôem
(Ë((
ùa_agg_jf_ôem
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_agg_jf_ôemË
MEM_STAT_INFO
)))

	)

1089 
	#ggc_Æloc_˛óªd_ùa_agg_jf_ôem
(Ë((
ùa_agg_jf_ôem
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_agg_jf_ôemË
MEM_STAT_INFO
)))

	)

1090 
	#ggc_Æloc_vec_ùa_agg_jf_ôem
(
n
Ë((
ùa_agg_jf_ôem
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_agg_jf_ôem),Ç 
MEM_STAT_INFO
)))

	)

1091 
	#ggc_Æloc_˛óªd_vec_ùa_agg_jf_ôem
(
n
Ë((
ùa_agg_jf_ôem
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_agg_jf_ôem),Ç 
MEM_STAT_INFO
)))

	)

1092 
	#ggc_Æloc_ùa_jump_func
(Ë((
ùa_jump_func
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_jump_funcË
MEM_STAT_INFO
)))

	)

1093 
	#ggc_Æloc_˛óªd_ùa_jump_func
(Ë((
ùa_jump_func
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_jump_funcË
MEM_STAT_INFO
)))

	)

1094 
	#ggc_Æloc_vec_ùa_jump_func
(
n
Ë((
ùa_jump_func
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_jump_func),Ç 
MEM_STAT_INFO
)))

	)

1095 
	#ggc_Æloc_˛óªd_vec_ùa_jump_func
(
n
Ë((
ùa_jump_func
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_jump_func),Ç 
MEM_STAT_INFO
)))

	)

1096 
	#ggc_Æloc_vec_Æüs_£t_íåy_va_gc_
(Ë((
vec
<
Æüs_£t_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<Æüs_£t_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

1097 
	#ggc_Æloc_˛óªd_vec_Æüs_£t_íåy_va_gc_
(Ë((
vec
<
Æüs_£t_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<Æüs_£t_íåy,va_gc>Ë
MEM_STAT_INFO
)))

	)

1098 
	#ggc_Æloc_vec_vec_Æüs_£t_íåy_va_gc_
(
n
Ë((
vec
<
Æüs_£t_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<Æüs_£t_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1099 
	#ggc_Æloc_˛óªd_vec_vec_Æüs_£t_íåy_va_gc_
(
n
Ë((
vec
<
Æüs_£t_íåy
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<Æüs_£t_íåy,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1100 
	#ggc_Æloc_Æüs_£t_íåy_d
(Ë((
Æüs_£t_íåy_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (Æüs_£t_íåy_dË
MEM_STAT_INFO
)))

	)

1101 
	#ggc_Æloc_˛óªd_Æüs_£t_íåy_d
(Ë((
Æüs_£t_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (Æüs_£t_íåy_dË
MEM_STAT_INFO
)))

	)

1102 
	#ggc_Æloc_vec_Æüs_£t_íåy_d
(
n
Ë((
Æüs_£t_íåy_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (Æüs_£t_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

1103 
	#ggc_Æloc_˛óªd_vec_Æüs_£t_íåy_d
(
n
Ë((
Æüs_£t_íåy_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (Æüs_£t_íåy_d),Ç 
MEM_STAT_INFO
)))

	)

1104 
	#ggc_Æloc_c⁄°™t_des¸ùt‹_åì
(Ë((
c⁄°™t_des¸ùt‹_åì
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_åìË
MEM_STAT_INFO
)))

	)

1105 
	#ggc_Æloc_˛óªd_c⁄°™t_des¸ùt‹_åì
(Ë((
c⁄°™t_des¸ùt‹_åì
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_åìË
MEM_STAT_INFO
)))

	)

1106 
	#ggc_Æloc_vec_c⁄°™t_des¸ùt‹_åì
(
n
Ë((
c⁄°™t_des¸ùt‹_åì
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_åì),Ç 
MEM_STAT_INFO
)))

	)

1107 
	#ggc_Æloc_˛óªd_vec_c⁄°™t_des¸ùt‹_åì
(
n
Ë((
c⁄°™t_des¸ùt‹_åì
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_åì),Ç 
MEM_STAT_INFO
)))

	)

1108 
	#ggc_Æloc_asm_node
(Ë((
asm_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (asm_nodeË
MEM_STAT_INFO
)))

	)

1109 
	#ggc_Æloc_˛óªd_asm_node
(Ë((
asm_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (asm_nodeË
MEM_STAT_INFO
)))

	)

1110 
	#ggc_Æloc_vec_asm_node
(
n
Ë((
asm_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (asm_node),Ç 
MEM_STAT_INFO
)))

	)

1111 
	#ggc_Æloc_˛óªd_vec_asm_node
(
n
Ë((
asm_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (asm_node),Ç 
MEM_STAT_INFO
)))

	)

1112 
	#ggc_Æloc_cgøph_ödúe˘_ˇŒ_öfo
(Ë((
cgøph_ödúe˘_ˇŒ_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_ödúe˘_ˇŒ_öfoË
MEM_STAT_INFO
)))

	)

1113 
	#ggc_Æloc_˛óªd_cgøph_ödúe˘_ˇŒ_öfo
(Ë((
cgøph_ödúe˘_ˇŒ_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_ödúe˘_ˇŒ_öfoË
MEM_STAT_INFO
)))

	)

1114 
	#ggc_Æloc_vec_cgøph_ödúe˘_ˇŒ_öfo
(
n
Ë((
cgøph_ödúe˘_ˇŒ_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_ödúe˘_ˇŒ_öfo),Ç 
MEM_STAT_INFO
)))

	)

1115 
	#ggc_Æloc_˛óªd_vec_cgøph_ödúe˘_ˇŒ_öfo
(
n
Ë((
cgøph_ödúe˘_ˇŒ_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_ödúe˘_ˇŒ_öfo),Ç 
MEM_STAT_INFO
)))

	)

1116 
	#ggc_Æloc_cgøph_fun˘i⁄_vîsi⁄_öfo
(Ë((
cgøph_fun˘i⁄_vîsi⁄_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_fun˘i⁄_vîsi⁄_öfoË
MEM_STAT_INFO
)))

	)

1117 
	#ggc_Æloc_˛óªd_cgøph_fun˘i⁄_vîsi⁄_öfo
(Ë((
cgøph_fun˘i⁄_vîsi⁄_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_fun˘i⁄_vîsi⁄_öfoË
MEM_STAT_INFO
)))

	)

1118 
	#ggc_Æloc_vec_cgøph_fun˘i⁄_vîsi⁄_öfo
(
n
Ë((
cgøph_fun˘i⁄_vîsi⁄_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_fun˘i⁄_vîsi⁄_öfo),Ç 
MEM_STAT_INFO
)))

	)

1119 
	#ggc_Æloc_˛óªd_vec_cgøph_fun˘i⁄_vîsi⁄_öfo
(
n
Ë((
cgøph_fun˘i⁄_vîsi⁄_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_fun˘i⁄_vîsi⁄_öfo),Ç 
MEM_STAT_INFO
)))

	)

1120 
	#ggc_Æloc_cgøph_edge
(Ë((
cgøph_edge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_edgeË
MEM_STAT_INFO
)))

	)

1121 
	#ggc_Æloc_˛óªd_cgøph_edge
(Ë((
cgøph_edge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_edgeË
MEM_STAT_INFO
)))

	)

1122 
	#ggc_Æloc_vec_cgøph_edge
(
n
Ë((
cgøph_edge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_edge),Ç 
MEM_STAT_INFO
)))

	)

1123 
	#ggc_Æloc_˛óªd_vec_cgøph_edge
(
n
Ë((
cgøph_edge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_edge),Ç 
MEM_STAT_INFO
)))

	)

1124 
	#ggc_Æloc_cgøph_simd_˛⁄e
(Ë((
cgøph_simd_˛⁄e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_simd_˛⁄eË
MEM_STAT_INFO
)))

	)

1125 
	#ggc_Æloc_˛óªd_cgøph_simd_˛⁄e
(Ë((
cgøph_simd_˛⁄e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_simd_˛⁄eË
MEM_STAT_INFO
)))

	)

1126 
	#ggc_Æloc_vec_cgøph_simd_˛⁄e
(
n
Ë((
cgøph_simd_˛⁄e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_simd_˛⁄e),Ç 
MEM_STAT_INFO
)))

	)

1127 
	#ggc_Æloc_˛óªd_vec_cgøph_simd_˛⁄e
(
n
Ë((
cgøph_simd_˛⁄e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_simd_˛⁄e),Ç 
MEM_STAT_INFO
)))

	)

1128 
	#ggc_Æloc_cgøph_simd_˛⁄e_¨g
(Ë((
cgøph_simd_˛⁄e_¨g
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_simd_˛⁄e_¨gË
MEM_STAT_INFO
)))

	)

1129 
	#ggc_Æloc_˛óªd_cgøph_simd_˛⁄e_¨g
(Ë((
cgøph_simd_˛⁄e_¨g
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_simd_˛⁄e_¨gË
MEM_STAT_INFO
)))

	)

1130 
	#ggc_Æloc_vec_cgøph_simd_˛⁄e_¨g
(
n
Ë((
cgøph_simd_˛⁄e_¨g
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_simd_˛⁄e_¨g),Ç 
MEM_STAT_INFO
)))

	)

1131 
	#ggc_Æloc_˛óªd_vec_cgøph_simd_˛⁄e_¨g
(
n
Ë((
cgøph_simd_˛⁄e_¨g
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_simd_˛⁄e_¨g),Ç 
MEM_STAT_INFO
)))

	)

1132 
	#ggc_Æloc_cgøph_˛⁄e_öfo
(Ë((
cgøph_˛⁄e_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_˛⁄e_öfoË
MEM_STAT_INFO
)))

	)

1133 
	#ggc_Æloc_˛óªd_cgøph_˛⁄e_öfo
(Ë((
cgøph_˛⁄e_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_˛⁄e_öfoË
MEM_STAT_INFO
)))

	)

1134 
	#ggc_Æloc_vec_cgøph_˛⁄e_öfo
(
n
Ë((
cgøph_˛⁄e_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_˛⁄e_öfo),Ç 
MEM_STAT_INFO
)))

	)

1135 
	#ggc_Æloc_˛óªd_vec_cgøph_˛⁄e_öfo
(
n
Ë((
cgøph_˛⁄e_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_˛⁄e_öfo),Ç 
MEM_STAT_INFO
)))

	)

1136 
	#ggc_Æloc_vec_ùa_ª∂a˚_m≠_p_va_gc_
(Ë((
vec
<
ùa_ª∂a˚_m≠_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ùa_ª∂a˚_m≠_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

1137 
	#ggc_Æloc_˛óªd_vec_ùa_ª∂a˚_m≠_p_va_gc_
(Ë((
vec
<
ùa_ª∂a˚_m≠_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ùa_ª∂a˚_m≠_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

1138 
	#ggc_Æloc_vec_vec_ùa_ª∂a˚_m≠_p_va_gc_
(
n
Ë((
vec
<
ùa_ª∂a˚_m≠_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ùa_ª∂a˚_m≠_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1139 
	#ggc_Æloc_˛óªd_vec_vec_ùa_ª∂a˚_m≠_p_va_gc_
(
n
Ë((
vec
<
ùa_ª∂a˚_m≠_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ùa_ª∂a˚_m≠_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1140 
	#ggc_Æloc_ùa_ª∂a˚_m≠
(Ë((
ùa_ª∂a˚_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_ª∂a˚_m≠Ë
MEM_STAT_INFO
)))

	)

1141 
	#ggc_Æloc_˛óªd_ùa_ª∂a˚_m≠
(Ë((
ùa_ª∂a˚_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_ª∂a˚_m≠Ë
MEM_STAT_INFO
)))

	)

1142 
	#ggc_Æloc_vec_ùa_ª∂a˚_m≠
(
n
Ë((
ùa_ª∂a˚_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_ª∂a˚_m≠),Ç 
MEM_STAT_INFO
)))

	)

1143 
	#ggc_Æloc_˛óªd_vec_ùa_ª∂a˚_m≠
(
n
Ë((
ùa_ª∂a˚_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_ª∂a˚_m≠),Ç 
MEM_STAT_INFO
)))

	)

1144 
	#ggc_Æloc_cgøph_πl_öfo
(Ë((
cgøph_πl_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_πl_öfoË
MEM_STAT_INFO
)))

	)

1145 
	#ggc_Æloc_˛óªd_cgøph_πl_öfo
(Ë((
cgøph_πl_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_πl_öfoË
MEM_STAT_INFO
)))

	)

1146 
	#ggc_Æloc_vec_cgøph_πl_öfo
(
n
Ë((
cgøph_πl_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_πl_öfo),Ç 
MEM_STAT_INFO
)))

	)

1147 
	#ggc_Æloc_˛óªd_vec_cgøph_πl_öfo
(
n
Ë((
cgøph_πl_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_πl_öfo),Ç 
MEM_STAT_INFO
)))

	)

1148 
	#ggc_Æloc_cgøph_globÆ_öfo
(Ë((
cgøph_globÆ_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_globÆ_öfoË
MEM_STAT_INFO
)))

	)

1149 
	#ggc_Æloc_˛óªd_cgøph_globÆ_öfo
(Ë((
cgøph_globÆ_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_globÆ_öfoË
MEM_STAT_INFO
)))

	)

1150 
	#ggc_Æloc_vec_cgøph_globÆ_öfo
(
n
Ë((
cgøph_globÆ_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_globÆ_öfo),Ç 
MEM_STAT_INFO
)))

	)

1151 
	#ggc_Æloc_˛óªd_vec_cgøph_globÆ_öfo
(
n
Ë((
cgøph_globÆ_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_globÆ_öfo),Ç 
MEM_STAT_INFO
)))

	)

1152 
	#ggc_Æloc_cgøph_loˇl_öfo
(Ë((
cgøph_loˇl_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_loˇl_öfoË
MEM_STAT_INFO
)))

	)

1153 
	#ggc_Æloc_˛óªd_cgøph_loˇl_öfo
(Ë((
cgøph_loˇl_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_loˇl_öfoË
MEM_STAT_INFO
)))

	)

1154 
	#ggc_Æloc_vec_cgøph_loˇl_öfo
(
n
Ë((
cgøph_loˇl_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_loˇl_öfo),Ç 
MEM_STAT_INFO
)))

	)

1155 
	#ggc_Æloc_˛óªd_vec_cgøph_loˇl_öfo
(
n
Ë((
cgøph_loˇl_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_loˇl_öfo),Ç 
MEM_STAT_INFO
)))

	)

1156 
	#ggc_Æloc_cgøph_thunk_öfo
(Ë((
cgøph_thunk_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_thunk_öfoË
MEM_STAT_INFO
)))

	)

1157 
	#ggc_Æloc_˛óªd_cgøph_thunk_öfo
(Ë((
cgøph_thunk_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_thunk_öfoË
MEM_STAT_INFO
)))

	)

1158 
	#ggc_Æloc_vec_cgøph_thunk_öfo
(
n
Ë((
cgøph_thunk_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_thunk_öfo),Ç 
MEM_STAT_INFO
)))

	)

1159 
	#ggc_Æloc_˛óªd_vec_cgøph_thunk_öfo
(
n
Ë((
cgøph_thunk_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_thunk_öfo),Ç 
MEM_STAT_INFO
)))

	)

1160 
	#ggc_Æloc_…o_fûe_de˛_d©a
(Ë((
…o_fûe_de˛_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (…o_fûe_de˛_d©aË
MEM_STAT_INFO
)))

	)

1161 
	#ggc_Æloc_˛óªd_…o_fûe_de˛_d©a
(Ë((
…o_fûe_de˛_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (…o_fûe_de˛_d©aË
MEM_STAT_INFO
)))

	)

1162 
	#ggc_Æloc_vec_…o_fûe_de˛_d©a
(
n
Ë((
…o_fûe_de˛_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (…o_fûe_de˛_d©a),Ç 
MEM_STAT_INFO
)))

	)

1163 
	#ggc_Æloc_˛óªd_vec_…o_fûe_de˛_d©a
(
n
Ë((
…o_fûe_de˛_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (…o_fûe_de˛_d©a),Ç 
MEM_STAT_INFO
)))

	)

1164 
	#ggc_Æloc_ùa_ªf_li°
(Ë((
ùa_ªf_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_ªf_li°Ë
MEM_STAT_INFO
)))

	)

1165 
	#ggc_Æloc_˛óªd_ùa_ªf_li°
(Ë((
ùa_ªf_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_ªf_li°Ë
MEM_STAT_INFO
)))

	)

1166 
	#ggc_Æloc_vec_ùa_ªf_li°
(
n
Ë((
ùa_ªf_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_ªf_li°),Ç 
MEM_STAT_INFO
)))

	)

1167 
	#ggc_Æloc_˛óªd_vec_ùa_ªf_li°
(
n
Ë((
ùa_ªf_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_ªf_li°),Ç 
MEM_STAT_INFO
)))

	)

1168 
	#ggc_Æloc_vec_ùa_ªf_t_va_gc_
(Ë((
vec
<
ùa_ªf_t
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ùa_ªf_t,va_gc>Ë
MEM_STAT_INFO
)))

	)

1169 
	#ggc_Æloc_˛óªd_vec_ùa_ªf_t_va_gc_
(Ë((
vec
<
ùa_ªf_t
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ùa_ªf_t,va_gc>Ë
MEM_STAT_INFO
)))

	)

1170 
	#ggc_Æloc_vec_vec_ùa_ªf_t_va_gc_
(
n
Ë((
vec
<
ùa_ªf_t
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ùa_ªf_t,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1171 
	#ggc_Æloc_˛óªd_vec_vec_ùa_ªf_t_va_gc_
(
n
Ë((
vec
<
ùa_ªf_t
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ùa_ªf_t,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1172 
	#ggc_Æloc_ùa_ªf
(Ë((
ùa_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_ªfË
MEM_STAT_INFO
)))

	)

1173 
	#ggc_Æloc_˛óªd_ùa_ªf
(Ë((
ùa_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_ªfË
MEM_STAT_INFO
)))

	)

1174 
	#ggc_Æloc_vec_ùa_ªf
(
n
Ë((
ùa_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_ªf),Ç 
MEM_STAT_INFO
)))

	)

1175 
	#ggc_Æloc_˛óªd_vec_ùa_ªf
(
n
Ë((
ùa_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_ªf),Ç 
MEM_STAT_INFO
)))

	)

1176 
	#ggc_Æloc_symèb_node
(Ë((
symèb_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (symèb_nodeË
MEM_STAT_INFO
)))

	)

1177 
	#ggc_Æloc_˛óªd_symèb_node
(Ë((
symèb_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (symèb_nodeË
MEM_STAT_INFO
)))

	)

1178 
	#ggc_Æloc_vec_symèb_node
(
n
Ë((
symèb_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (symèb_node),Ç 
MEM_STAT_INFO
)))

	)

1179 
	#ggc_Æloc_˛óªd_vec_symèb_node
(
n
Ë((
symèb_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (symèb_node),Ç 
MEM_STAT_INFO
)))

	)

1180 
	#ggc_Æloc_v¨poﬁ_node
(Ë((
v¨poﬁ_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (v¨poﬁ_nodeË
MEM_STAT_INFO
)))

	)

1181 
	#ggc_Æloc_˛óªd_v¨poﬁ_node
(Ë((
v¨poﬁ_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (v¨poﬁ_nodeË
MEM_STAT_INFO
)))

	)

1182 
	#ggc_Æloc_vec_v¨poﬁ_node
(
n
Ë((
v¨poﬁ_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (v¨poﬁ_node),Ç 
MEM_STAT_INFO
)))

	)

1183 
	#ggc_Æloc_˛óªd_vec_v¨poﬁ_node
(
n
Ë((
v¨poﬁ_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (v¨poﬁ_node),Ç 
MEM_STAT_INFO
)))

	)

1184 
	#ggc_Æloc_cgøph_node
(Ë((
cgøph_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_nodeË
MEM_STAT_INFO
)))

	)

1185 
	#ggc_Æloc_˛óªd_cgøph_node
(Ë((
cgøph_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_nodeË
MEM_STAT_INFO
)))

	)

1186 
	#ggc_Æloc_vec_cgøph_node
(
n
Ë((
cgøph_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_node),Ç 
MEM_STAT_INFO
)))

	)

1187 
	#ggc_Æloc_˛óªd_vec_cgøph_node
(
n
Ë((
cgøph_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_node),Ç 
MEM_STAT_INFO
)))

	)

1188 
	#ggc_Æloc_vec_basic_block_va_gc_
(Ë((
vec
<
basic_block
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<basic_block,va_gc>Ë
MEM_STAT_INFO
)))

	)

1189 
	#ggc_Æloc_˛óªd_vec_basic_block_va_gc_
(Ë((
vec
<
basic_block
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<basic_block,va_gc>Ë
MEM_STAT_INFO
)))

	)

1190 
	#ggc_Æloc_vec_vec_basic_block_va_gc_
(
n
Ë((
vec
<
basic_block
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<basic_block,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1191 
	#ggc_Æloc_˛óªd_vec_vec_basic_block_va_gc_
(
n
Ë((
vec
<
basic_block
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<basic_block,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1192 
	#ggc_Æloc_basic_block_û_dïídít
(Ë((
basic_block_û_dïídít
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (basic_block_û_dïídítË
MEM_STAT_INFO
)))

	)

1193 
	#ggc_Æloc_˛óªd_basic_block_û_dïídít
(Ë((
basic_block_û_dïídít
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (basic_block_û_dïídítË
MEM_STAT_INFO
)))

	)

1194 
	#ggc_Æloc_vec_basic_block_û_dïídít
(
n
Ë((
basic_block_û_dïídít
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (basic_block_û_dïídít),Ç 
MEM_STAT_INFO
)))

	)

1195 
	#ggc_Æloc_˛óªd_vec_basic_block_û_dïídít
(
n
Ë((
basic_block_û_dïídít
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (basic_block_û_dïídít),Ç 
MEM_STAT_INFO
)))

	)

1196 
	#ggc_Æloc_vec_edge_va_gc_
(Ë((
vec
<
edge
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<edge,va_gc>Ë
MEM_STAT_INFO
)))

	)

1197 
	#ggc_Æloc_˛óªd_vec_edge_va_gc_
(Ë((
vec
<
edge
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<edge,va_gc>Ë
MEM_STAT_INFO
)))

	)

1198 
	#ggc_Æloc_vec_vec_edge_va_gc_
(
n
Ë((
vec
<
edge
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<edge,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1199 
	#ggc_Æloc_˛óªd_vec_vec_edge_va_gc_
(
n
Ë((
vec
<
edge
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<edge,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1200 
	#ggc_Æloc_gim∂e_bb_öfo
(Ë((
gim∂e_bb_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_bb_öfoË
MEM_STAT_INFO
)))

	)

1201 
	#ggc_Æloc_˛óªd_gim∂e_bb_öfo
(Ë((
gim∂e_bb_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_bb_öfoË
MEM_STAT_INFO
)))

	)

1202 
	#ggc_Æloc_vec_gim∂e_bb_öfo
(
n
Ë((
gim∂e_bb_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_bb_öfo),Ç 
MEM_STAT_INFO
)))

	)

1203 
	#ggc_Æloc_˛óªd_vec_gim∂e_bb_öfo
(
n
Ë((
gim∂e_bb_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_bb_öfo),Ç 
MEM_STAT_INFO
)))

	)

1204 
	#ggc_Æloc_πl_bb_öfo
(Ë((
πl_bb_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πl_bb_öfoË
MEM_STAT_INFO
)))

	)

1205 
	#ggc_Æloc_˛óªd_πl_bb_öfo
(Ë((
πl_bb_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πl_bb_öfoË
MEM_STAT_INFO
)))

	)

1206 
	#ggc_Æloc_vec_πl_bb_öfo
(
n
Ë((
πl_bb_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πl_bb_öfo),Ç 
MEM_STAT_INFO
)))

	)

1207 
	#ggc_Æloc_˛óªd_vec_πl_bb_öfo
(
n
Ë((
πl_bb_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πl_bb_öfo),Ç 
MEM_STAT_INFO
)))

	)

1208 
	#ggc_Æloc_nôî_desc
(Ë((
nôî_desc
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (nôî_descË
MEM_STAT_INFO
)))

	)

1209 
	#ggc_Æloc_˛óªd_nôî_desc
(Ë((
nôî_desc
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (nôî_descË
MEM_STAT_INFO
)))

	)

1210 
	#ggc_Æloc_vec_nôî_desc
(
n
Ë((
nôî_desc
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (nôî_desc),Ç 
MEM_STAT_INFO
)))

	)

1211 
	#ggc_Æloc_˛óªd_vec_nôî_desc
(
n
Ë((
nôî_desc
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (nôî_desc),Ç 
MEM_STAT_INFO
)))

	)

1212 
	#ggc_Æloc_vec_lo›_p_va_gc_
(Ë((
vec
<
lo›_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<lo›_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

1213 
	#ggc_Æloc_˛óªd_vec_lo›_p_va_gc_
(Ë((
vec
<
lo›_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<lo›_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

1214 
	#ggc_Æloc_vec_vec_lo›_p_va_gc_
(
n
Ë((
vec
<
lo›_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<lo›_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1215 
	#ggc_Æloc_˛óªd_vec_vec_lo›_p_va_gc_
(
n
Ë((
vec
<
lo›_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<lo›_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1216 
	#ggc_Æloc_lo›
(Ë((
lo›
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (lo›Ë
MEM_STAT_INFO
)))

	)

1217 
	#ggc_Æloc_˛óªd_lo›
(Ë((
lo›
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (lo›Ë
MEM_STAT_INFO
)))

	)

1218 
	#ggc_Æloc_vec_lo›
(
n
Ë((
lo›
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (lo›),Ç 
MEM_STAT_INFO
)))

	)

1219 
	#ggc_Æloc_˛óªd_vec_lo›
(
n
Ë((
lo›
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (lo›),Ç 
MEM_STAT_INFO
)))

	)

1220 
	#ggc_Æloc_lo›_exô
(Ë((
lo›_exô
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (lo›_exôË
MEM_STAT_INFO
)))

	)

1221 
	#ggc_Æloc_˛óªd_lo›_exô
(Ë((
lo›_exô
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (lo›_exôË
MEM_STAT_INFO
)))

	)

1222 
	#ggc_Æloc_vec_lo›_exô
(
n
Ë((
lo›_exô
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (lo›_exô),Ç 
MEM_STAT_INFO
)))

	)

1223 
	#ggc_Æloc_˛óªd_vec_lo›_exô
(
n
Ë((
lo›_exô
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (lo›_exô),Ç 
MEM_STAT_INFO
)))

	)

1224 
	#ggc_Æloc_nb_ôî_bound
(Ë((
nb_ôî_bound
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (nb_ôî_boundË
MEM_STAT_INFO
)))

	)

1225 
	#ggc_Æloc_˛óªd_nb_ôî_bound
(Ë((
nb_ôî_bound
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (nb_ôî_boundË
MEM_STAT_INFO
)))

	)

1226 
	#ggc_Æloc_vec_nb_ôî_bound
(
n
Ë((
nb_ôî_bound
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (nb_ôî_bound),Ç 
MEM_STAT_INFO
)))

	)

1227 
	#ggc_Æloc_˛óªd_vec_nb_ôî_bound
(
n
Ë((
nb_ôî_bound
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (nb_ôî_bound),Ç 
MEM_STAT_INFO
)))

	)

1228 
	#ggc_Æloc_Õt_decisi⁄
(Ë((
Õt_decisi⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (Õt_decisi⁄Ë
MEM_STAT_INFO
)))

	)

1229 
	#ggc_Æloc_˛óªd_Õt_decisi⁄
(Ë((
Õt_decisi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (Õt_decisi⁄Ë
MEM_STAT_INFO
)))

	)

1230 
	#ggc_Æloc_vec_Õt_decisi⁄
(
n
Ë((
Õt_decisi⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (Õt_decisi⁄),Ç 
MEM_STAT_INFO
)))

	)

1231 
	#ggc_Æloc_˛óªd_vec_Õt_decisi⁄
(
n
Ë((
Õt_decisi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (Õt_decisi⁄),Ç 
MEM_STAT_INFO
)))

	)

1232 
	#ggc_Æloc_noswôch_£˘i⁄
(Ë((
noswôch_£˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (noswôch_£˘i⁄Ë
MEM_STAT_INFO
)))

	)

1233 
	#ggc_Æloc_˛óªd_noswôch_£˘i⁄
(Ë((
noswôch_£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (noswôch_£˘i⁄Ë
MEM_STAT_INFO
)))

	)

1234 
	#ggc_Æloc_vec_noswôch_£˘i⁄
(
n
Ë((
noswôch_£˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (noswôch_£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1235 
	#ggc_Æloc_˛óªd_vec_noswôch_£˘i⁄
(
n
Ë((
noswôch_£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (noswôch_£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1236 
	#ggc_Æloc_u¬amed_£˘i⁄
(Ë((
u¬amed_£˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (u¬amed_£˘i⁄Ë
MEM_STAT_INFO
)))

	)

1237 
	#ggc_Æloc_˛óªd_u¬amed_£˘i⁄
(Ë((
u¬amed_£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (u¬amed_£˘i⁄Ë
MEM_STAT_INFO
)))

	)

1238 
	#ggc_Æloc_vec_u¬amed_£˘i⁄
(
n
Ë((
u¬amed_£˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (u¬amed_£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1239 
	#ggc_Æloc_˛óªd_vec_u¬amed_£˘i⁄
(
n
Ë((
u¬amed_£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (u¬amed_£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1240 
	#ggc_Æloc_«med_£˘i⁄
(Ë((
«med_£˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( («med_£˘i⁄Ë
MEM_STAT_INFO
)))

	)

1241 
	#ggc_Æloc_˛óªd_«med_£˘i⁄
(Ë((
«med_£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( («med_£˘i⁄Ë
MEM_STAT_INFO
)))

	)

1242 
	#ggc_Æloc_vec_«med_£˘i⁄
(
n
Ë((
«med_£˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( («med_£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1243 
	#ggc_Æloc_˛óªd_vec_«med_£˘i⁄
(
n
Ë((
«med_£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( («med_£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1244 
	#ggc_Æloc_£˘i⁄_comm⁄
(Ë((
£˘i⁄_comm⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (£˘i⁄_comm⁄Ë
MEM_STAT_INFO
)))

	)

1245 
	#ggc_Æloc_˛óªd_£˘i⁄_comm⁄
(Ë((
£˘i⁄_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (£˘i⁄_comm⁄Ë
MEM_STAT_INFO
)))

	)

1246 
	#ggc_Æloc_vec_£˘i⁄_comm⁄
(
n
Ë((
£˘i⁄_comm⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (£˘i⁄_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1247 
	#ggc_Æloc_˛óªd_vec_£˘i⁄_comm⁄
(
n
Ë((
£˘i⁄_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (£˘i⁄_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1248 
	#ggc_Æloc_ty≥s_u£d_by_v¨s_íåy
(Ë((
ty≥s_u£d_by_v¨s_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ty≥s_u£d_by_v¨s_íåyË
MEM_STAT_INFO
)))

	)

1249 
	#ggc_Æloc_˛óªd_ty≥s_u£d_by_v¨s_íåy
(Ë((
ty≥s_u£d_by_v¨s_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ty≥s_u£d_by_v¨s_íåyË
MEM_STAT_INFO
)))

	)

1250 
	#ggc_Æloc_vec_ty≥s_u£d_by_v¨s_íåy
(
n
Ë((
ty≥s_u£d_by_v¨s_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ty≥s_u£d_by_v¨s_íåy),Ç 
MEM_STAT_INFO
)))

	)

1251 
	#ggc_Æloc_˛óªd_vec_ty≥s_u£d_by_v¨s_íåy
(
n
Ë((
ty≥s_u£d_by_v¨s_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ty≥s_u£d_by_v¨s_íåy),Ç 
MEM_STAT_INFO
)))

	)

1252 
	#ggc_Æloc_œnguage_fun˘i⁄
(Ë((
œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œnguage_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

1253 
	#ggc_Æloc_˛óªd_œnguage_fun˘i⁄
(Ë((
œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œnguage_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

1254 
	#ggc_Æloc_vec_œnguage_fun˘i⁄
(
n
Ë((
œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œnguage_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1255 
	#ggc_Æloc_˛óªd_vec_œnguage_fun˘i⁄
(
n
Ë((
œnguage_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œnguage_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1256 
	#ggc_Æloc_lo›s
(Ë((
lo›s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (lo›sË
MEM_STAT_INFO
)))

	)

1257 
	#ggc_Æloc_˛óªd_lo›s
(Ë((
lo›s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (lo›sË
MEM_STAT_INFO
)))

	)

1258 
	#ggc_Æloc_vec_lo›s
(
n
Ë((
lo›s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (lo›s),Ç 
MEM_STAT_INFO
)))

	)

1259 
	#ggc_Æloc_˛óªd_vec_lo›s
(
n
Ë((
lo›s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (lo›s),Ç 
MEM_STAT_INFO
)))

	)

1260 
	#ggc_Æloc_c⁄åﬁ_Êow_gøph
(Ë((
c⁄åﬁ_Êow_gøph
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄åﬁ_Êow_gøphË
MEM_STAT_INFO
)))

	)

1261 
	#ggc_Æloc_˛óªd_c⁄åﬁ_Êow_gøph
(Ë((
c⁄åﬁ_Êow_gøph
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄åﬁ_Êow_gøphË
MEM_STAT_INFO
)))

	)

1262 
	#ggc_Æloc_vec_c⁄åﬁ_Êow_gøph
(
n
Ë((
c⁄åﬁ_Êow_gøph
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄åﬁ_Êow_gøph),Ç 
MEM_STAT_INFO
)))

	)

1263 
	#ggc_Æloc_˛óªd_vec_c⁄åﬁ_Êow_gøph
(
n
Ë((
c⁄åﬁ_Êow_gøph
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄åﬁ_Êow_gøph),Ç 
MEM_STAT_INFO
)))

	)

1264 
	#ggc_Æloc_eh_°©us
(Ë((
eh_°©us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_°©usË
MEM_STAT_INFO
)))

	)

1265 
	#ggc_Æloc_˛óªd_eh_°©us
(Ë((
eh_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_°©usË
MEM_STAT_INFO
)))

	)

1266 
	#ggc_Æloc_vec_eh_°©us
(
n
Ë((
eh_°©us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_°©us),Ç 
MEM_STAT_INFO
)))

	)

1267 
	#ggc_Æloc_˛óªd_vec_eh_°©us
(
n
Ë((
eh_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_°©us),Ç 
MEM_STAT_INFO
)))

	)

1268 
	#ggc_Æloc_°ack_ußge
(Ë((
°ack_ußge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°ack_ußgeË
MEM_STAT_INFO
)))

	)

1269 
	#ggc_Æloc_˛óªd_°ack_ußge
(Ë((
°ack_ußge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°ack_ußgeË
MEM_STAT_INFO
)))

	)

1270 
	#ggc_Æloc_vec_°ack_ußge
(
n
Ë((
°ack_ußge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°ack_ußge),Ç 
MEM_STAT_INFO
)))

	)

1271 
	#ggc_Æloc_˛óªd_vec_°ack_ußge
(
n
Ë((
°ack_ußge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°ack_ußge),Ç 
MEM_STAT_INFO
)))

	)

1272 
	#ggc_Æloc_πl_d©a
(Ë((
πl_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πl_d©aË
MEM_STAT_INFO
)))

	)

1273 
	#ggc_Æloc_˛óªd_πl_d©a
(Ë((
πl_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πl_d©aË
MEM_STAT_INFO
)))

	)

1274 
	#ggc_Æloc_vec_πl_d©a
(
n
Ë((
πl_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πl_d©a),Ç 
MEM_STAT_INFO
)))

	)

1275 
	#ggc_Æloc_˛óªd_vec_πl_d©a
(
n
Ë((
πl_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πl_d©a),Ç 
MEM_STAT_INFO
)))

	)

1276 
	#ggc_Æloc_vec_ãmp_¶Ÿ_p_va_gc_
(Ë((
vec
<
ãmp_¶Ÿ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ãmp_¶Ÿ_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

1277 
	#ggc_Æloc_˛óªd_vec_ãmp_¶Ÿ_p_va_gc_
(Ë((
vec
<
ãmp_¶Ÿ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ãmp_¶Ÿ_p,va_gc>Ë
MEM_STAT_INFO
)))

	)

1278 
	#ggc_Æloc_vec_vec_ãmp_¶Ÿ_p_va_gc_
(
n
Ë((
vec
<
ãmp_¶Ÿ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ãmp_¶Ÿ_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1279 
	#ggc_Æloc_˛óªd_vec_vec_ãmp_¶Ÿ_p_va_gc_
(
n
Ë((
vec
<
ãmp_¶Ÿ_p
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ãmp_¶Ÿ_p,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1280 
	#ggc_Æloc_öôül_vÆue_°ru˘
(Ë((
öôül_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (öôül_vÆue_°ru˘Ë
MEM_STAT_INFO
)))

	)

1281 
	#ggc_Æloc_˛óªd_öôül_vÆue_°ru˘
(Ë((
öôül_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (öôül_vÆue_°ru˘Ë
MEM_STAT_INFO
)))

	)

1282 
	#ggc_Æloc_vec_öôül_vÆue_°ru˘
(
n
Ë((
öôül_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (öôül_vÆue_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1283 
	#ggc_Æloc_˛óªd_vec_öôül_vÆue_°ru˘
(
n
Ë((
öôül_vÆue_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (öôül_vÆue_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1284 
	#ggc_Æloc_‰ame_•a˚
(Ë((
‰ame_•a˚
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (‰ame_•a˚Ë
MEM_STAT_INFO
)))

	)

1285 
	#ggc_Æloc_˛óªd_‰ame_•a˚
(Ë((
‰ame_•a˚
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (‰ame_•a˚Ë
MEM_STAT_INFO
)))

	)

1286 
	#ggc_Æloc_vec_‰ame_•a˚
(
n
Ë((
‰ame_•a˚
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (‰ame_•a˚),Ç 
MEM_STAT_INFO
)))

	)

1287 
	#ggc_Æloc_˛óªd_vec_‰ame_•a˚
(
n
Ë((
‰ame_•a˚
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (‰ame_•a˚),Ç 
MEM_STAT_INFO
)))

	)

1288 
	#ggc_Æloc_fun˘i⁄_sub£˘i⁄s
(Ë((
fun˘i⁄_sub£˘i⁄s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (fun˘i⁄_sub£˘i⁄sË
MEM_STAT_INFO
)))

	)

1289 
	#ggc_Æloc_˛óªd_fun˘i⁄_sub£˘i⁄s
(Ë((
fun˘i⁄_sub£˘i⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (fun˘i⁄_sub£˘i⁄sË
MEM_STAT_INFO
)))

	)

1290 
	#ggc_Æloc_vec_fun˘i⁄_sub£˘i⁄s
(
n
Ë((
fun˘i⁄_sub£˘i⁄s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (fun˘i⁄_sub£˘i⁄s),Ç 
MEM_STAT_INFO
)))

	)

1291 
	#ggc_Æloc_˛óªd_vec_fun˘i⁄_sub£˘i⁄s
(
n
Ë((
fun˘i⁄_sub£˘i⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (fun˘i⁄_sub£˘i⁄s),Ç 
MEM_STAT_INFO
)))

	)

1292 
	#ggc_Æloc_öcomög_¨gs
(Ë((
öcomög_¨gs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (öcomög_¨gsË
MEM_STAT_INFO
)))

	)

1293 
	#ggc_Æloc_˛óªd_öcomög_¨gs
(Ë((
öcomög_¨gs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (öcomög_¨gsË
MEM_STAT_INFO
)))

	)

1294 
	#ggc_Æloc_vec_öcomög_¨gs
(
n
Ë((
öcomög_¨gs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (öcomög_¨gs),Ç 
MEM_STAT_INFO
)))

	)

1295 
	#ggc_Æloc_˛óªd_vec_öcomög_¨gs
(
n
Ë((
öcomög_¨gs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (öcomög_¨gs),Ç 
MEM_STAT_INFO
)))

	)

1296 
	#ggc_Æloc_v¨asm_°©us
(Ë((
v¨asm_°©us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (v¨asm_°©usË
MEM_STAT_INFO
)))

	)

1297 
	#ggc_Æloc_˛óªd_v¨asm_°©us
(Ë((
v¨asm_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (v¨asm_°©usË
MEM_STAT_INFO
)))

	)

1298 
	#ggc_Æloc_vec_v¨asm_°©us
(
n
Ë((
v¨asm_°©us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (v¨asm_°©us),Ç 
MEM_STAT_INFO
)))

	)

1299 
	#ggc_Æloc_˛óªd_vec_v¨asm_°©us
(
n
Ë((
v¨asm_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (v¨asm_°©us),Ç 
MEM_STAT_INFO
)))

	)

1300 
	#ggc_Æloc_πx_c⁄°™t_poﬁ
(Ë((
πx_c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_c⁄°™t_poﬁË
MEM_STAT_INFO
)))

	)

1301 
	#ggc_Æloc_˛óªd_πx_c⁄°™t_poﬁ
(Ë((
πx_c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_c⁄°™t_poﬁË
MEM_STAT_INFO
)))

	)

1302 
	#ggc_Æloc_vec_πx_c⁄°™t_poﬁ
(
n
Ë((
πx_c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_c⁄°™t_poﬁ),Ç 
MEM_STAT_INFO
)))

	)

1303 
	#ggc_Æloc_˛óªd_vec_πx_c⁄°™t_poﬁ
(
n
Ë((
πx_c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_c⁄°™t_poﬁ),Ç 
MEM_STAT_INFO
)))

	)

1304 
	#ggc_Æloc_dw_fde_node
(Ë((
dw_fde_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_fde_nodeË
MEM_STAT_INFO
)))

	)

1305 
	#ggc_Æloc_˛óªd_dw_fde_node
(Ë((
dw_fde_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_fde_nodeË
MEM_STAT_INFO
)))

	)

1306 
	#ggc_Æloc_vec_dw_fde_node
(
n
Ë((
dw_fde_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_fde_node),Ç 
MEM_STAT_INFO
)))

	)

1307 
	#ggc_Æloc_˛óªd_vec_dw_fde_node
(
n
Ë((
dw_fde_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_fde_node),Ç 
MEM_STAT_INFO
)))

	)

1308 
	#ggc_Æloc_ãmp_¶Ÿ
(Ë((
ãmp_¶Ÿ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ãmp_¶ŸË
MEM_STAT_INFO
)))

	)

1309 
	#ggc_Æloc_˛óªd_ãmp_¶Ÿ
(Ë((
ãmp_¶Ÿ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ãmp_¶ŸË
MEM_STAT_INFO
)))

	)

1310 
	#ggc_Æloc_vec_ãmp_¶Ÿ
(
n
Ë((
ãmp_¶Ÿ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ãmp_¶Ÿ),Ç 
MEM_STAT_INFO
)))

	)

1311 
	#ggc_Æloc_˛óªd_vec_ãmp_¶Ÿ
(
n
Ë((
ãmp_¶Ÿ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ãmp_¶Ÿ),Ç 
MEM_STAT_INFO
)))

	)

1312 
	#ggc_Æloc_gim∂e_df
(Ë((
gim∂e_df
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_dfË
MEM_STAT_INFO
)))

	)

1313 
	#ggc_Æloc_˛óªd_gim∂e_df
(Ë((
gim∂e_df
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_dfË
MEM_STAT_INFO
)))

	)

1314 
	#ggc_Æloc_vec_gim∂e_df
(
n
Ë((
gim∂e_df
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_df),Ç 
MEM_STAT_INFO
)))

	)

1315 
	#ggc_Æloc_˛óªd_vec_gim∂e_df
(
n
Ë((
gim∂e_df
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_df),Ç 
MEM_STAT_INFO
)))

	)

1316 
	#ggc_Æloc_πl_eh
(Ë((
πl_eh
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πl_ehË
MEM_STAT_INFO
)))

	)

1317 
	#ggc_Æloc_˛óªd_πl_eh
(Ë((
πl_eh
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πl_ehË
MEM_STAT_INFO
)))

	)

1318 
	#ggc_Æloc_vec_πl_eh
(
n
Ë((
πl_eh
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πl_eh),Ç 
MEM_STAT_INFO
)))

	)

1319 
	#ggc_Æloc_˛óªd_vec_πl_eh
(
n
Ë((
πl_eh
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πl_eh),Ç 
MEM_STAT_INFO
)))

	)

1320 
	#ggc_Æloc_vec_ˇŒ_sôe_ªc‹d_va_gc_
(Ë((
vec
<
ˇŒ_sôe_ªc‹d
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<ˇŒ_sôe_ªc‹d,va_gc>Ë
MEM_STAT_INFO
)))

	)

1321 
	#ggc_Æloc_˛óªd_vec_ˇŒ_sôe_ªc‹d_va_gc_
(Ë((
vec
<
ˇŒ_sôe_ªc‹d
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<ˇŒ_sôe_ªc‹d,va_gc>Ë
MEM_STAT_INFO
)))

	)

1322 
	#ggc_Æloc_vec_vec_ˇŒ_sôe_ªc‹d_va_gc_
(
n
Ë((
vec
<
ˇŒ_sôe_ªc‹d
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<ˇŒ_sôe_ªc‹d,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1323 
	#ggc_Æloc_˛óªd_vec_vec_ˇŒ_sôe_ªc‹d_va_gc_
(
n
Ë((
vec
<
ˇŒ_sôe_ªc‹d
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<ˇŒ_sôe_ªc‹d,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1324 
	#ggc_Æloc_vec_uch¨_va_gc_
(Ë((
vec
<
uch¨
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<uch¨,va_gc>Ë
MEM_STAT_INFO
)))

	)

1325 
	#ggc_Æloc_˛óªd_vec_uch¨_va_gc_
(Ë((
vec
<
uch¨
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<uch¨,va_gc>Ë
MEM_STAT_INFO
)))

	)

1326 
	#ggc_Æloc_vec_vec_uch¨_va_gc_
(
n
Ë((
vec
<
uch¨
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<uch¨,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1327 
	#ggc_Æloc_˛óªd_vec_vec_uch¨_va_gc_
(
n
Ë((
vec
<
uch¨
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<uch¨,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1328 
	#ggc_Æloc_ˇŒ_sôe_ªc‹d_d
(Ë((
ˇŒ_sôe_ªc‹d_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ˇŒ_sôe_ªc‹d_dË
MEM_STAT_INFO
)))

	)

1329 
	#ggc_Æloc_˛óªd_ˇŒ_sôe_ªc‹d_d
(Ë((
ˇŒ_sôe_ªc‹d_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ˇŒ_sôe_ªc‹d_dË
MEM_STAT_INFO
)))

	)

1330 
	#ggc_Æloc_vec_ˇŒ_sôe_ªc‹d_d
(
n
Ë((
ˇŒ_sôe_ªc‹d_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ˇŒ_sôe_ªc‹d_d),Ç 
MEM_STAT_INFO
)))

	)

1331 
	#ggc_Æloc_˛óªd_vec_ˇŒ_sôe_ªc‹d_d
(
n
Ë((
ˇŒ_sôe_ªc‹d_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ˇŒ_sôe_ªc‹d_d),Ç 
MEM_STAT_INFO
)))

	)

1332 
	#ggc_Æloc_ex¥_°©us
(Ë((
ex¥_°©us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ex¥_°©usË
MEM_STAT_INFO
)))

	)

1333 
	#ggc_Æloc_˛óªd_ex¥_°©us
(Ë((
ex¥_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ex¥_°©usË
MEM_STAT_INFO
)))

	)

1334 
	#ggc_Æloc_vec_ex¥_°©us
(
n
Ë((
ex¥_°©us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ex¥_°©us),Ç 
MEM_STAT_INFO
)))

	)

1335 
	#ggc_Æloc_˛óªd_vec_ex¥_°©us
(
n
Ë((
ex¥_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ex¥_°©us),Ç 
MEM_STAT_INFO
)))

	)

1336 
	#ggc_Æloc_emô_°©us
(Ë((
emô_°©us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (emô_°©usË
MEM_STAT_INFO
)))

	)

1337 
	#ggc_Æloc_˛óªd_emô_°©us
(Ë((
emô_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (emô_°©usË
MEM_STAT_INFO
)))

	)

1338 
	#ggc_Æloc_vec_emô_°©us
(
n
Ë((
emô_°©us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (emô_°©us),Ç 
MEM_STAT_INFO
)))

	)

1339 
	#ggc_Æloc_˛óªd_vec_emô_°©us
(
n
Ë((
emô_°©us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (emô_°©us),Ç 
MEM_STAT_INFO
)))

	)

1340 
	#ggc_Æloc_£quí˚_°ack
(Ë((
£quí˚_°ack
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (£quí˚_°ackË
MEM_STAT_INFO
)))

	)

1341 
	#ggc_Æloc_˛óªd_£quí˚_°ack
(Ë((
£quí˚_°ack
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (£quí˚_°ackË
MEM_STAT_INFO
)))

	)

1342 
	#ggc_Æloc_vec_£quí˚_°ack
(
n
Ë((
£quí˚_°ack
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (£quí˚_°ack),Ç 
MEM_STAT_INFO
)))

	)

1343 
	#ggc_Æloc_˛óªd_vec_£quí˚_°ack
(
n
Ë((
£quí˚_°ack
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (£quí˚_°ack),Ç 
MEM_STAT_INFO
)))

	)

1344 
	#ggc_Æloc_èrgë_libfuncs
(Ë((
èrgë_libfuncs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (èrgë_libfuncsË
MEM_STAT_INFO
)))

	)

1345 
	#ggc_Æloc_˛óªd_èrgë_libfuncs
(Ë((
èrgë_libfuncs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (èrgë_libfuncsË
MEM_STAT_INFO
)))

	)

1346 
	#ggc_Æloc_vec_èrgë_libfuncs
(
n
Ë((
èrgë_libfuncs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (èrgë_libfuncs),Ç 
MEM_STAT_INFO
)))

	)

1347 
	#ggc_Æloc_˛óªd_vec_èrgë_libfuncs
(
n
Ë((
èrgë_libfuncs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (èrgë_libfuncs),Ç 
MEM_STAT_INFO
)))

	)

1348 
	#ggc_Æloc_libfunc_íåy
(Ë((
libfunc_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (libfunc_íåyË
MEM_STAT_INFO
)))

	)

1349 
	#ggc_Æloc_˛óªd_libfunc_íåy
(Ë((
libfunc_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (libfunc_íåyË
MEM_STAT_INFO
)))

	)

1350 
	#ggc_Æloc_vec_libfunc_íåy
(
n
Ë((
libfunc_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (libfunc_íåy),Ç 
MEM_STAT_INFO
)))

	)

1351 
	#ggc_Æloc_˛óªd_vec_libfunc_íåy
(
n
Ë((
libfunc_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (libfunc_íåy),Ç 
MEM_STAT_INFO
)))

	)

1352 
	#ggc_Æloc_vec_Æüs_∑ú_va_gc_
(Ë((
vec
<
Æüs_∑ú
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<Æüs_∑ú,va_gc>Ë
MEM_STAT_INFO
)))

	)

1353 
	#ggc_Æloc_˛óªd_vec_Æüs_∑ú_va_gc_
(Ë((
vec
<
Æüs_∑ú
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<Æüs_∑ú,va_gc>Ë
MEM_STAT_INFO
)))

	)

1354 
	#ggc_Æloc_vec_vec_Æüs_∑ú_va_gc_
(
n
Ë((
vec
<
Æüs_∑ú
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<Æüs_∑ú,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1355 
	#ggc_Æloc_˛óªd_vec_vec_Æüs_∑ú_va_gc_
(
n
Ë((
vec
<
Æüs_∑ú
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<Æüs_∑ú,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1356 
	#ggc_Æloc_buûtö_öfo_ty≥
(Ë((
buûtö_öfo_ty≥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (buûtö_öfo_ty≥Ë
MEM_STAT_INFO
)))

	)

1357 
	#ggc_Æloc_˛óªd_buûtö_öfo_ty≥
(Ë((
buûtö_öfo_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (buûtö_öfo_ty≥Ë
MEM_STAT_INFO
)))

	)

1358 
	#ggc_Æloc_vec_buûtö_öfo_ty≥
(
n
Ë((
buûtö_öfo_ty≥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (buûtö_öfo_ty≥),Ç 
MEM_STAT_INFO
)))

	)

1359 
	#ggc_Æloc_˛óªd_vec_buûtö_öfo_ty≥
(
n
Ë((
buûtö_öfo_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (buûtö_öfo_ty≥),Ç 
MEM_STAT_INFO
)))

	)

1360 
	#ggc_Æloc_åì_vec_m≠
(Ë((
åì_vec_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_vec_m≠Ë
MEM_STAT_INFO
)))

	)

1361 
	#ggc_Æloc_˛óªd_åì_vec_m≠
(Ë((
åì_vec_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_vec_m≠Ë
MEM_STAT_INFO
)))

	)

1362 
	#ggc_Æloc_vec_åì_vec_m≠
(
n
Ë((
åì_vec_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_vec_m≠),Ç 
MEM_STAT_INFO
)))

	)

1363 
	#ggc_Æloc_˛óªd_vec_åì_vec_m≠
(
n
Ë((
åì_vec_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_vec_m≠),Ç 
MEM_STAT_INFO
)))

	)

1364 
	#ggc_Æloc_åì_¥i‹ôy_m≠
(Ë((
åì_¥i‹ôy_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_¥i‹ôy_m≠Ë
MEM_STAT_INFO
)))

	)

1365 
	#ggc_Æloc_˛óªd_åì_¥i‹ôy_m≠
(Ë((
åì_¥i‹ôy_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_¥i‹ôy_m≠Ë
MEM_STAT_INFO
)))

	)

1366 
	#ggc_Æloc_vec_åì_¥i‹ôy_m≠
(
n
Ë((
åì_¥i‹ôy_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_¥i‹ôy_m≠),Ç 
MEM_STAT_INFO
)))

	)

1367 
	#ggc_Æloc_˛óªd_vec_åì_¥i‹ôy_m≠
(
n
Ë((
åì_¥i‹ôy_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_¥i‹ôy_m≠),Ç 
MEM_STAT_INFO
)))

	)

1368 
	#ggc_Æloc_åì_öt_m≠
(Ë((
åì_öt_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_öt_m≠Ë
MEM_STAT_INFO
)))

	)

1369 
	#ggc_Æloc_˛óªd_åì_öt_m≠
(Ë((
åì_öt_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_öt_m≠Ë
MEM_STAT_INFO
)))

	)

1370 
	#ggc_Æloc_vec_åì_öt_m≠
(
n
Ë((
åì_öt_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_öt_m≠),Ç 
MEM_STAT_INFO
)))

	)

1371 
	#ggc_Æloc_˛óªd_vec_åì_öt_m≠
(
n
Ë((
åì_öt_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_öt_m≠),Ç 
MEM_STAT_INFO
)))

	)

1372 
	#ggc_Æloc_åì_de˛_m≠
(Ë((
åì_de˛_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de˛_m≠Ë
MEM_STAT_INFO
)))

	)

1373 
	#ggc_Æloc_˛óªd_åì_de˛_m≠
(Ë((
åì_de˛_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de˛_m≠Ë
MEM_STAT_INFO
)))

	)

1374 
	#ggc_Æloc_vec_åì_de˛_m≠
(
n
Ë((
åì_de˛_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de˛_m≠),Ç 
MEM_STAT_INFO
)))

	)

1375 
	#ggc_Æloc_˛óªd_vec_åì_de˛_m≠
(
n
Ë((
åì_de˛_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de˛_m≠),Ç 
MEM_STAT_INFO
)))

	)

1376 
	#ggc_Æloc_åì_m≠
(Ë((
åì_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_m≠Ë
MEM_STAT_INFO
)))

	)

1377 
	#ggc_Æloc_˛óªd_åì_m≠
(Ë((
åì_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_m≠Ë
MEM_STAT_INFO
)))

	)

1378 
	#ggc_Æloc_vec_åì_m≠
(
n
Ë((
åì_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_m≠),Ç 
MEM_STAT_INFO
)))

	)

1379 
	#ggc_Æloc_˛óªd_vec_åì_m≠
(
n
Ë((
åì_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_m≠),Ç 
MEM_STAT_INFO
)))

	)

1380 
	#ggc_Æloc_åì_m≠_ba£
(Ë((
åì_m≠_ba£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_m≠_ba£Ë
MEM_STAT_INFO
)))

	)

1381 
	#ggc_Æloc_˛óªd_åì_m≠_ba£
(Ë((
åì_m≠_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_m≠_ba£Ë
MEM_STAT_INFO
)))

	)

1382 
	#ggc_Æloc_vec_åì_m≠_ba£
(
n
Ë((
åì_m≠_ba£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_m≠_ba£),Ç 
MEM_STAT_INFO
)))

	)

1383 
	#ggc_Æloc_˛óªd_vec_åì_m≠_ba£
(
n
Ë((
åì_m≠_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_m≠_ba£),Ç 
MEM_STAT_INFO
)))

	)

1384 
	#ggc_Æloc_œng_åì_node
(Ë((
œng_åì_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (œng_åì_nodeË
MEM_STAT_INFO
)))

	)

1385 
	#ggc_Æloc_˛óªd_œng_åì_node
(Ë((
œng_åì_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (œng_åì_nodeË
MEM_STAT_INFO
)))

	)

1386 
	#ggc_Æloc_vec_œng_åì_node
(
n
Ë((
œng_åì_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (œng_åì_node),Ç 
MEM_STAT_INFO
)))

	)

1387 
	#ggc_Æloc_˛óªd_vec_œng_åì_node
(
n
Ë((
œng_åì_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (œng_åì_node),Ç 
MEM_STAT_INFO
)))

	)

1388 
	#ggc_Æloc_åì_èrgë_›ti⁄
(Ë((
åì_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_èrgë_›ti⁄Ë
MEM_STAT_INFO
)))

	)

1389 
	#ggc_Æloc_˛óªd_åì_èrgë_›ti⁄
(Ë((
åì_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_èrgë_›ti⁄Ë
MEM_STAT_INFO
)))

	)

1390 
	#ggc_Æloc_vec_åì_èrgë_›ti⁄
(
n
Ë((
åì_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_èrgë_›ti⁄),Ç 
MEM_STAT_INFO
)))

	)

1391 
	#ggc_Æloc_˛óªd_vec_åì_èrgë_›ti⁄
(
n
Ë((
åì_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_èrgë_›ti⁄),Ç 
MEM_STAT_INFO
)))

	)

1392 
	#ggc_Æloc_èrgë_globÆs
(Ë((
èrgë_globÆs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (èrgë_globÆsË
MEM_STAT_INFO
)))

	)

1393 
	#ggc_Æloc_˛óªd_èrgë_globÆs
(Ë((
èrgë_globÆs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (èrgë_globÆsË
MEM_STAT_INFO
)))

	)

1394 
	#ggc_Æloc_vec_èrgë_globÆs
(
n
Ë((
èrgë_globÆs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (èrgë_globÆs),Ç 
MEM_STAT_INFO
)))

	)

1395 
	#ggc_Æloc_˛óªd_vec_èrgë_globÆs
(
n
Ë((
èrgë_globÆs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (èrgë_globÆs),Ç 
MEM_STAT_INFO
)))

	)

1396 
	#ggc_Æloc_åì_›timiz©i⁄_›ti⁄
(Ë((
åì_›timiz©i⁄_›ti⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_›timiz©i⁄_›ti⁄Ë
MEM_STAT_INFO
)))

	)

1397 
	#ggc_Æloc_˛óªd_åì_›timiz©i⁄_›ti⁄
(Ë((
åì_›timiz©i⁄_›ti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_›timiz©i⁄_›ti⁄Ë
MEM_STAT_INFO
)))

	)

1398 
	#ggc_Æloc_vec_åì_›timiz©i⁄_›ti⁄
(
n
Ë((
åì_›timiz©i⁄_›ti⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_›timiz©i⁄_›ti⁄),Ç 
MEM_STAT_INFO
)))

	)

1399 
	#ggc_Æloc_˛óªd_vec_åì_›timiz©i⁄_›ti⁄
(
n
Ë((
åì_›timiz©i⁄_›ti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_›timiz©i⁄_›ti⁄),Ç 
MEM_STAT_INFO
)))

	)

1400 
	#ggc_Æloc_åì_°©emít_li°
(Ë((
åì_°©emít_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_°©emít_li°Ë
MEM_STAT_INFO
)))

	)

1401 
	#ggc_Æloc_˛óªd_åì_°©emít_li°
(Ë((
åì_°©emít_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_°©emít_li°Ë
MEM_STAT_INFO
)))

	)

1402 
	#ggc_Æloc_vec_åì_°©emít_li°
(
n
Ë((
åì_°©emít_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_°©emít_li°),Ç 
MEM_STAT_INFO
)))

	)

1403 
	#ggc_Æloc_˛óªd_vec_åì_°©emít_li°
(
n
Ë((
åì_°©emít_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_°©emít_li°),Ç 
MEM_STAT_INFO
)))

	)

1404 
	#ggc_Æloc_åì_°©emít_li°_node
(Ë((
åì_°©emít_li°_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_°©emít_li°_nodeË
MEM_STAT_INFO
)))

	)

1405 
	#ggc_Æloc_˛óªd_åì_°©emít_li°_node
(Ë((
åì_°©emít_li°_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_°©emít_li°_nodeË
MEM_STAT_INFO
)))

	)

1406 
	#ggc_Æloc_vec_åì_°©emít_li°_node
(
n
Ë((
åì_°©emít_li°_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_°©emít_li°_node),Ç 
MEM_STAT_INFO
)))

	)

1407 
	#ggc_Æloc_˛óªd_vec_åì_°©emít_li°_node
(
n
Ë((
åì_°©emít_li°_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_°©emít_li°_node),Ç 
MEM_STAT_INFO
)))

	)

1408 
	#ggc_Æloc_åì_ty≥_de˛
(Ë((
åì_ty≥_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥_de˛Ë
MEM_STAT_INFO
)))

	)

1409 
	#ggc_Æloc_˛óªd_åì_ty≥_de˛
(Ë((
åì_ty≥_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥_de˛Ë
MEM_STAT_INFO
)))

	)

1410 
	#ggc_Æloc_vec_åì_ty≥_de˛
(
n
Ë((
åì_ty≥_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥_de˛),Ç 
MEM_STAT_INFO
)))

	)

1411 
	#ggc_Æloc_˛óªd_vec_åì_ty≥_de˛
(
n
Ë((
åì_ty≥_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥_de˛),Ç 
MEM_STAT_INFO
)))

	)

1412 
	#ggc_Æloc_åì_å™¶©i⁄_unô_de˛
(Ë((
åì_å™¶©i⁄_unô_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_å™¶©i⁄_unô_de˛Ë
MEM_STAT_INFO
)))

	)

1413 
	#ggc_Æloc_˛óªd_åì_å™¶©i⁄_unô_de˛
(Ë((
åì_å™¶©i⁄_unô_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_å™¶©i⁄_unô_de˛Ë
MEM_STAT_INFO
)))

	)

1414 
	#ggc_Æloc_vec_åì_å™¶©i⁄_unô_de˛
(
n
Ë((
åì_å™¶©i⁄_unô_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_å™¶©i⁄_unô_de˛),Ç 
MEM_STAT_INFO
)))

	)

1415 
	#ggc_Æloc_˛óªd_vec_åì_å™¶©i⁄_unô_de˛
(
n
Ë((
åì_å™¶©i⁄_unô_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_å™¶©i⁄_unô_de˛),Ç 
MEM_STAT_INFO
)))

	)

1416 
	#ggc_Æloc_åì_fun˘i⁄_de˛
(Ë((
åì_fun˘i⁄_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_fun˘i⁄_de˛Ë
MEM_STAT_INFO
)))

	)

1417 
	#ggc_Æloc_˛óªd_åì_fun˘i⁄_de˛
(Ë((
åì_fun˘i⁄_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_fun˘i⁄_de˛Ë
MEM_STAT_INFO
)))

	)

1418 
	#ggc_Æloc_vec_åì_fun˘i⁄_de˛
(
n
Ë((
åì_fun˘i⁄_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_fun˘i⁄_de˛),Ç 
MEM_STAT_INFO
)))

	)

1419 
	#ggc_Æloc_˛óªd_vec_åì_fun˘i⁄_de˛
(
n
Ë((
åì_fun˘i⁄_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_fun˘i⁄_de˛),Ç 
MEM_STAT_INFO
)))

	)

1420 
	#ggc_Æloc_åì_de˛_n⁄_comm⁄
(Ë((
åì_de˛_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de˛_n⁄_comm⁄Ë
MEM_STAT_INFO
)))

	)

1421 
	#ggc_Æloc_˛óªd_åì_de˛_n⁄_comm⁄
(Ë((
åì_de˛_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de˛_n⁄_comm⁄Ë
MEM_STAT_INFO
)))

	)

1422 
	#ggc_Æloc_vec_åì_de˛_n⁄_comm⁄
(
n
Ë((
åì_de˛_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de˛_n⁄_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1423 
	#ggc_Æloc_˛óªd_vec_åì_de˛_n⁄_comm⁄
(
n
Ë((
åì_de˛_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de˛_n⁄_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1424 
	#ggc_Æloc_åì_v¨_de˛
(Ë((
åì_v¨_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_v¨_de˛Ë
MEM_STAT_INFO
)))

	)

1425 
	#ggc_Æloc_˛óªd_åì_v¨_de˛
(Ë((
åì_v¨_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_v¨_de˛Ë
MEM_STAT_INFO
)))

	)

1426 
	#ggc_Æloc_vec_åì_v¨_de˛
(
n
Ë((
åì_v¨_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_v¨_de˛),Ç 
MEM_STAT_INFO
)))

	)

1427 
	#ggc_Æloc_˛óªd_vec_åì_v¨_de˛
(
n
Ë((
åì_v¨_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_v¨_de˛),Ç 
MEM_STAT_INFO
)))

	)

1428 
	#ggc_Æloc_åì_de˛_wôh_vis
(Ë((
åì_de˛_wôh_vis
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de˛_wôh_visË
MEM_STAT_INFO
)))

	)

1429 
	#ggc_Æloc_˛óªd_åì_de˛_wôh_vis
(Ë((
åì_de˛_wôh_vis
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de˛_wôh_visË
MEM_STAT_INFO
)))

	)

1430 
	#ggc_Æloc_vec_åì_de˛_wôh_vis
(
n
Ë((
åì_de˛_wôh_vis
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de˛_wôh_vis),Ç 
MEM_STAT_INFO
)))

	)

1431 
	#ggc_Æloc_˛óªd_vec_åì_de˛_wôh_vis
(
n
Ë((
åì_de˛_wôh_vis
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de˛_wôh_vis),Ç 
MEM_STAT_INFO
)))

	)

1432 
	#ggc_Æloc_åì_∑rm_de˛
(Ë((
åì_∑rm_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_∑rm_de˛Ë
MEM_STAT_INFO
)))

	)

1433 
	#ggc_Æloc_˛óªd_åì_∑rm_de˛
(Ë((
åì_∑rm_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_∑rm_de˛Ë
MEM_STAT_INFO
)))

	)

1434 
	#ggc_Æloc_vec_åì_∑rm_de˛
(
n
Ë((
åì_∑rm_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_∑rm_de˛),Ç 
MEM_STAT_INFO
)))

	)

1435 
	#ggc_Æloc_˛óªd_vec_åì_∑rm_de˛
(
n
Ë((
åì_∑rm_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_∑rm_de˛),Ç 
MEM_STAT_INFO
)))

	)

1436 
	#ggc_Æloc_åì_c⁄°_de˛
(Ë((
åì_c⁄°_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_c⁄°_de˛Ë
MEM_STAT_INFO
)))

	)

1437 
	#ggc_Æloc_˛óªd_åì_c⁄°_de˛
(Ë((
åì_c⁄°_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_c⁄°_de˛Ë
MEM_STAT_INFO
)))

	)

1438 
	#ggc_Æloc_vec_åì_c⁄°_de˛
(
n
Ë((
åì_c⁄°_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_c⁄°_de˛),Ç 
MEM_STAT_INFO
)))

	)

1439 
	#ggc_Æloc_˛óªd_vec_åì_c⁄°_de˛
(
n
Ë((
åì_c⁄°_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_c⁄°_de˛),Ç 
MEM_STAT_INFO
)))

	)

1440 
	#ggc_Æloc_åì_ªsu…_de˛
(Ë((
åì_ªsu…_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ªsu…_de˛Ë
MEM_STAT_INFO
)))

	)

1441 
	#ggc_Æloc_˛óªd_åì_ªsu…_de˛
(Ë((
åì_ªsu…_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ªsu…_de˛Ë
MEM_STAT_INFO
)))

	)

1442 
	#ggc_Æloc_vec_åì_ªsu…_de˛
(
n
Ë((
åì_ªsu…_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ªsu…_de˛),Ç 
MEM_STAT_INFO
)))

	)

1443 
	#ggc_Æloc_˛óªd_vec_åì_ªsu…_de˛
(
n
Ë((
åì_ªsu…_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ªsu…_de˛),Ç 
MEM_STAT_INFO
)))

	)

1444 
	#ggc_Æloc_åì_œbñ_de˛
(Ë((
åì_œbñ_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_œbñ_de˛Ë
MEM_STAT_INFO
)))

	)

1445 
	#ggc_Æloc_˛óªd_åì_œbñ_de˛
(Ë((
åì_œbñ_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_œbñ_de˛Ë
MEM_STAT_INFO
)))

	)

1446 
	#ggc_Æloc_vec_åì_œbñ_de˛
(
n
Ë((
åì_œbñ_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_œbñ_de˛),Ç 
MEM_STAT_INFO
)))

	)

1447 
	#ggc_Æloc_˛óªd_vec_åì_œbñ_de˛
(
n
Ë((
åì_œbñ_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_œbñ_de˛),Ç 
MEM_STAT_INFO
)))

	)

1448 
	#ggc_Æloc_åì_fõld_de˛
(Ë((
åì_fõld_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_fõld_de˛Ë
MEM_STAT_INFO
)))

	)

1449 
	#ggc_Æloc_˛óªd_åì_fõld_de˛
(Ë((
åì_fõld_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_fõld_de˛Ë
MEM_STAT_INFO
)))

	)

1450 
	#ggc_Æloc_vec_åì_fõld_de˛
(
n
Ë((
åì_fõld_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_fõld_de˛),Ç 
MEM_STAT_INFO
)))

	)

1451 
	#ggc_Æloc_˛óªd_vec_åì_fõld_de˛
(
n
Ë((
åì_fõld_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_fõld_de˛),Ç 
MEM_STAT_INFO
)))

	)

1452 
	#ggc_Æloc_åì_de˛_wôh_πl
(Ë((
åì_de˛_wôh_πl
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de˛_wôh_πlË
MEM_STAT_INFO
)))

	)

1453 
	#ggc_Æloc_˛óªd_åì_de˛_wôh_πl
(Ë((
åì_de˛_wôh_πl
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de˛_wôh_πlË
MEM_STAT_INFO
)))

	)

1454 
	#ggc_Æloc_vec_åì_de˛_wôh_πl
(
n
Ë((
åì_de˛_wôh_πl
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de˛_wôh_πl),Ç 
MEM_STAT_INFO
)))

	)

1455 
	#ggc_Æloc_˛óªd_vec_åì_de˛_wôh_πl
(
n
Ë((
åì_de˛_wôh_πl
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de˛_wôh_πl),Ç 
MEM_STAT_INFO
)))

	)

1456 
	#ggc_Æloc_åì_de˛_comm⁄
(Ë((
åì_de˛_comm⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de˛_comm⁄Ë
MEM_STAT_INFO
)))

	)

1457 
	#ggc_Æloc_˛óªd_åì_de˛_comm⁄
(Ë((
åì_de˛_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de˛_comm⁄Ë
MEM_STAT_INFO
)))

	)

1458 
	#ggc_Æloc_vec_åì_de˛_comm⁄
(
n
Ë((
åì_de˛_comm⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de˛_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1459 
	#ggc_Æloc_˛óªd_vec_åì_de˛_comm⁄
(
n
Ë((
åì_de˛_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de˛_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1460 
	#ggc_Æloc_œng_de˛
(
SIZE
Ë((
œng_de˛
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

1461 
	#ggc_Æloc_˛óªd_œng_de˛
(
SIZE
Ë((
œng_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

1462 
	#ggc_Æloc_vec_œng_de˛
(
SIZE
, 
n
Ë((
œng_de˛
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

1463 
	#ggc_Æloc_˛óªd_vec_œng_de˛
(
SIZE
, 
n
Ë((
œng_de˛
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

1464 
	#ggc_Æloc_åì_de˛_möimÆ
(Ë((
åì_de˛_möimÆ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_de˛_möimÆË
MEM_STAT_INFO
)))

	)

1465 
	#ggc_Æloc_˛óªd_åì_de˛_möimÆ
(Ë((
åì_de˛_möimÆ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_de˛_möimÆË
MEM_STAT_INFO
)))

	)

1466 
	#ggc_Æloc_vec_åì_de˛_möimÆ
(
n
Ë((
åì_de˛_möimÆ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_de˛_möimÆ),Ç 
MEM_STAT_INFO
)))

	)

1467 
	#ggc_Æloc_˛óªd_vec_åì_de˛_möimÆ
(
n
Ë((
åì_de˛_möimÆ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_de˛_möimÆ),Ç 
MEM_STAT_INFO
)))

	)

1468 
	#ggc_Æloc_åì_böfo
(Ë((
åì_böfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_böfoË
MEM_STAT_INFO
)))

	)

1469 
	#ggc_Æloc_˛óªd_åì_böfo
(Ë((
åì_böfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_böfoË
MEM_STAT_INFO
)))

	)

1470 
	#ggc_Æloc_vec_åì_böfo
(
n
Ë((
åì_böfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_böfo),Ç 
MEM_STAT_INFO
)))

	)

1471 
	#ggc_Æloc_˛óªd_vec_åì_böfo
(
n
Ë((
åì_böfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_böfo),Ç 
MEM_STAT_INFO
)))

	)

1472 
	#ggc_Æloc_åì_ty≥_n⁄_comm⁄
(Ë((
åì_ty≥_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥_n⁄_comm⁄Ë
MEM_STAT_INFO
)))

	)

1473 
	#ggc_Æloc_˛óªd_åì_ty≥_n⁄_comm⁄
(Ë((
åì_ty≥_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥_n⁄_comm⁄Ë
MEM_STAT_INFO
)))

	)

1474 
	#ggc_Æloc_vec_åì_ty≥_n⁄_comm⁄
(
n
Ë((
åì_ty≥_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥_n⁄_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1475 
	#ggc_Æloc_˛óªd_vec_åì_ty≥_n⁄_comm⁄
(
n
Ë((
åì_ty≥_n⁄_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥_n⁄_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1476 
	#ggc_Æloc_åì_ty≥_wôh_œng_•ecific
(Ë((
åì_ty≥_wôh_œng_•ecific
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥_wôh_œng_•ecificË
MEM_STAT_INFO
)))

	)

1477 
	#ggc_Æloc_˛óªd_åì_ty≥_wôh_œng_•ecific
(Ë((
åì_ty≥_wôh_œng_•ecific
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥_wôh_œng_•ecificË
MEM_STAT_INFO
)))

	)

1478 
	#ggc_Æloc_vec_åì_ty≥_wôh_œng_•ecific
(
n
Ë((
åì_ty≥_wôh_œng_•ecific
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥_wôh_œng_•ecific),Ç 
MEM_STAT_INFO
)))

	)

1479 
	#ggc_Æloc_˛óªd_vec_åì_ty≥_wôh_œng_•ecific
(
n
Ë((
åì_ty≥_wôh_œng_•ecific
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥_wôh_œng_•ecific),Ç 
MEM_STAT_INFO
)))

	)

1480 
	#ggc_Æloc_œng_ty≥
(
SIZE
Ë((
œng_ty≥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

1481 
	#ggc_Æloc_˛óªd_œng_ty≥
(
SIZE
Ë((
œng_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

1482 
	#ggc_Æloc_vec_œng_ty≥
(
SIZE
, 
n
Ë((
œng_ty≥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

1483 
	#ggc_Æloc_˛óªd_vec_œng_ty≥
(
SIZE
, 
n
Ë((
œng_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

1484 
	#ggc_Æloc_åì_ty≥_comm⁄
(Ë((
åì_ty≥_comm⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥_comm⁄Ë
MEM_STAT_INFO
)))

	)

1485 
	#ggc_Æloc_˛óªd_åì_ty≥_comm⁄
(Ë((
åì_ty≥_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥_comm⁄Ë
MEM_STAT_INFO
)))

	)

1486 
	#ggc_Æloc_vec_åì_ty≥_comm⁄
(
n
Ë((
åì_ty≥_comm⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1487 
	#ggc_Æloc_˛óªd_vec_åì_ty≥_comm⁄
(
n
Ë((
åì_ty≥_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1488 
	#ggc_Æloc_åì_ty≥_symèb
(Ë((
åì_ty≥_symèb
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥_symèbË
MEM_STAT_INFO
)))

	)

1489 
	#ggc_Æloc_˛óªd_åì_ty≥_symèb
(Ë((
åì_ty≥_symèb
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥_symèbË
MEM_STAT_INFO
)))

	)

1490 
	#ggc_Æloc_vec_åì_ty≥_symèb
(
n
Ë((
åì_ty≥_symèb
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥_symèb),Ç 
MEM_STAT_INFO
)))

	)

1491 
	#ggc_Æloc_˛óªd_vec_åì_ty≥_symèb
(
n
Ë((
åì_ty≥_symèb
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥_symèb),Ç 
MEM_STAT_INFO
)))

	)

1492 
	#ggc_Æloc_åì_block
(Ë((
åì_block
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_blockË
MEM_STAT_INFO
)))

	)

1493 
	#ggc_Æloc_˛óªd_åì_block
(Ë((
åì_block
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_blockË
MEM_STAT_INFO
)))

	)

1494 
	#ggc_Æloc_vec_åì_block
(
n
Ë((
åì_block
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_block),Ç 
MEM_STAT_INFO
)))

	)

1495 
	#ggc_Æloc_˛óªd_vec_åì_block
(
n
Ë((
åì_block
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_block),Ç 
MEM_STAT_INFO
)))

	)

1496 
	#ggc_Æloc_vec_åì_va_gc_
(Ë((
vec
<
åì
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<åì,va_gc>Ë
MEM_STAT_INFO
)))

	)

1497 
	#ggc_Æloc_˛óªd_vec_åì_va_gc_
(Ë((
vec
<
åì
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<åì,va_gc>Ë
MEM_STAT_INFO
)))

	)

1498 
	#ggc_Æloc_vec_vec_åì_va_gc_
(
n
Ë((
vec
<
åì
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<åì,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1499 
	#ggc_Æloc_˛óªd_vec_vec_åì_va_gc_
(
n
Ë((
vec
<
åì
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<åì,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1500 
	#ggc_Æloc_åì_omp_˛au£
(Ë((
åì_omp_˛au£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_omp_˛au£Ë
MEM_STAT_INFO
)))

	)

1501 
	#ggc_Æloc_˛óªd_åì_omp_˛au£
(Ë((
åì_omp_˛au£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_omp_˛au£Ë
MEM_STAT_INFO
)))

	)

1502 
	#ggc_Æloc_vec_åì_omp_˛au£
(
n
Ë((
åì_omp_˛au£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_omp_˛au£),Ç 
MEM_STAT_INFO
)))

	)

1503 
	#ggc_Æloc_˛óªd_vec_åì_omp_˛au£
(
n
Ë((
åì_omp_˛au£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_omp_˛au£),Ç 
MEM_STAT_INFO
)))

	)

1504 
	#ggc_Æloc_phi_¨g_d
(Ë((
phi_¨g_d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (phi_¨g_dË
MEM_STAT_INFO
)))

	)

1505 
	#ggc_Æloc_˛óªd_phi_¨g_d
(Ë((
phi_¨g_d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (phi_¨g_dË
MEM_STAT_INFO
)))

	)

1506 
	#ggc_Æloc_vec_phi_¨g_d
(
n
Ë((
phi_¨g_d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (phi_¨g_d),Ç 
MEM_STAT_INFO
)))

	)

1507 
	#ggc_Æloc_˛óªd_vec_phi_¨g_d
(
n
Ë((
phi_¨g_d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (phi_¨g_d),Ç 
MEM_STAT_INFO
)))

	)

1508 
	#ggc_Æloc_åì_sß_«me
(Ë((
åì_sß_«me
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_sß_«meË
MEM_STAT_INFO
)))

	)

1509 
	#ggc_Æloc_˛óªd_åì_sß_«me
(Ë((
åì_sß_«me
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_sß_«meË
MEM_STAT_INFO
)))

	)

1510 
	#ggc_Æloc_vec_åì_sß_«me
(
n
Ë((
åì_sß_«me
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_sß_«me),Ç 
MEM_STAT_INFO
)))

	)

1511 
	#ggc_Æloc_˛óªd_vec_åì_sß_«me
(
n
Ë((
åì_sß_«me
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_sß_«me),Ç 
MEM_STAT_INFO
)))

	)

1512 
	#ggc_Æloc_sß_«me_öfo_ty≥
(Ë((
sß_«me_öfo_ty≥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (sß_«me_öfo_ty≥Ë
MEM_STAT_INFO
)))

	)

1513 
	#ggc_Æloc_˛óªd_sß_«me_öfo_ty≥
(Ë((
sß_«me_öfo_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (sß_«me_öfo_ty≥Ë
MEM_STAT_INFO
)))

	)

1514 
	#ggc_Æloc_vec_sß_«me_öfo_ty≥
(
n
Ë((
sß_«me_öfo_ty≥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (sß_«me_öfo_ty≥),Ç 
MEM_STAT_INFO
)))

	)

1515 
	#ggc_Æloc_˛óªd_vec_sß_«me_öfo_ty≥
(
n
Ë((
sß_«me_öfo_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (sß_«me_öfo_ty≥),Ç 
MEM_STAT_INFO
)))

	)

1516 
	#ggc_Æloc_sß_u£_›î™d_t
(Ë((
sß_u£_›î™d_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (sß_u£_›î™d_tË
MEM_STAT_INFO
)))

	)

1517 
	#ggc_Æloc_˛óªd_sß_u£_›î™d_t
(Ë((
sß_u£_›î™d_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (sß_u£_›î™d_tË
MEM_STAT_INFO
)))

	)

1518 
	#ggc_Æloc_vec_sß_u£_›î™d_t
(
n
Ë((
sß_u£_›î™d_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (sß_u£_›î™d_t),Ç 
MEM_STAT_INFO
)))

	)

1519 
	#ggc_Æloc_˛óªd_vec_sß_u£_›î™d_t
(
n
Ë((
sß_u£_›î™d_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (sß_u£_›î™d_t),Ç 
MEM_STAT_INFO
)))

	)

1520 
	#ggc_Æloc_åì_exp
(Ë((
åì_exp
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_expË
MEM_STAT_INFO
)))

	)

1521 
	#ggc_Æloc_˛óªd_åì_exp
(Ë((
åì_exp
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_expË
MEM_STAT_INFO
)))

	)

1522 
	#ggc_Æloc_vec_åì_exp
(
n
Ë((
åì_exp
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_exp),Ç 
MEM_STAT_INFO
)))

	)

1523 
	#ggc_Æloc_˛óªd_vec_åì_exp
(
n
Ë((
åì_exp
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_exp),Ç 
MEM_STAT_INFO
)))

	)

1524 
	#ggc_Æloc_åì_exp_subuni⁄
(Ë((
åì_exp_subuni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_exp_subuni⁄Ë
MEM_STAT_INFO
)))

	)

1525 
	#ggc_Æloc_˛óªd_åì_exp_subuni⁄
(Ë((
åì_exp_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_exp_subuni⁄Ë
MEM_STAT_INFO
)))

	)

1526 
	#ggc_Æloc_vec_åì_exp_subuni⁄
(
n
Ë((
åì_exp_subuni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_exp_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

1527 
	#ggc_Æloc_˛óªd_vec_åì_exp_subuni⁄
(
n
Ë((
åì_exp_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_exp_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

1528 
	#ggc_Æloc_åì_c⁄°ru˘‹
(Ë((
åì_c⁄°ru˘‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_c⁄°ru˘‹Ë
MEM_STAT_INFO
)))

	)

1529 
	#ggc_Æloc_˛óªd_åì_c⁄°ru˘‹
(Ë((
åì_c⁄°ru˘‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_c⁄°ru˘‹Ë
MEM_STAT_INFO
)))

	)

1530 
	#ggc_Æloc_vec_åì_c⁄°ru˘‹
(
n
Ë((
åì_c⁄°ru˘‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_c⁄°ru˘‹),Ç 
MEM_STAT_INFO
)))

	)

1531 
	#ggc_Æloc_˛óªd_vec_åì_c⁄°ru˘‹
(
n
Ë((
åì_c⁄°ru˘‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_c⁄°ru˘‹),Ç 
MEM_STAT_INFO
)))

	)

1532 
	#ggc_Æloc_vec_c⁄°ru˘‹_ñt_va_gc_
(Ë((
vec
<
c⁄°ru˘‹_ñt
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<c⁄°ru˘‹_ñt,va_gc>Ë
MEM_STAT_INFO
)))

	)

1533 
	#ggc_Æloc_˛óªd_vec_c⁄°ru˘‹_ñt_va_gc_
(Ë((
vec
<
c⁄°ru˘‹_ñt
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<c⁄°ru˘‹_ñt,va_gc>Ë
MEM_STAT_INFO
)))

	)

1534 
	#ggc_Æloc_vec_vec_c⁄°ru˘‹_ñt_va_gc_
(
n
Ë((
vec
<
c⁄°ru˘‹_ñt
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<c⁄°ru˘‹_ñt,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1535 
	#ggc_Æloc_˛óªd_vec_vec_c⁄°ru˘‹_ñt_va_gc_
(
n
Ë((
vec
<
c⁄°ru˘‹_ñt
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<c⁄°ru˘‹_ñt,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

1536 
	#ggc_Æloc_c⁄°ru˘‹_ñt
(Ë((
c⁄°ru˘‹_ñt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°ru˘‹_ñtË
MEM_STAT_INFO
)))

	)

1537 
	#ggc_Æloc_˛óªd_c⁄°ru˘‹_ñt
(Ë((
c⁄°ru˘‹_ñt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°ru˘‹_ñtË
MEM_STAT_INFO
)))

	)

1538 
	#ggc_Æloc_vec_c⁄°ru˘‹_ñt
(
n
Ë((
c⁄°ru˘‹_ñt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°ru˘‹_ñt),Ç 
MEM_STAT_INFO
)))

	)

1539 
	#ggc_Æloc_˛óªd_vec_c⁄°ru˘‹_ñt
(
n
Ë((
c⁄°ru˘‹_ñt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°ru˘‹_ñt),Ç 
MEM_STAT_INFO
)))

	)

1540 
	#ggc_Æloc_åì_vec
(Ë((
åì_vec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_vecË
MEM_STAT_INFO
)))

	)

1541 
	#ggc_Æloc_˛óªd_åì_vec
(Ë((
åì_vec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_vecË
MEM_STAT_INFO
)))

	)

1542 
	#ggc_Æloc_vec_åì_vec
(
n
Ë((
åì_vec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_vec),Ç 
MEM_STAT_INFO
)))

	)

1543 
	#ggc_Æloc_˛óªd_vec_åì_vec
(
n
Ë((
åì_vec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_vec),Ç 
MEM_STAT_INFO
)))

	)

1544 
	#ggc_Æloc_åì_li°
(Ë((
åì_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_li°Ë
MEM_STAT_INFO
)))

	)

1545 
	#ggc_Æloc_˛óªd_åì_li°
(Ë((
åì_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_li°Ë
MEM_STAT_INFO
)))

	)

1546 
	#ggc_Æloc_vec_åì_li°
(
n
Ë((
åì_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_li°),Ç 
MEM_STAT_INFO
)))

	)

1547 
	#ggc_Æloc_˛óªd_vec_åì_li°
(
n
Ë((
åì_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_li°),Ç 
MEM_STAT_INFO
)))

	)

1548 
	#ggc_Æloc_åì_idítifõr
(Ë((
åì_idítifõr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_idítifõrË
MEM_STAT_INFO
)))

	)

1549 
	#ggc_Æloc_˛óªd_åì_idítifõr
(Ë((
åì_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_idítifõrË
MEM_STAT_INFO
)))

	)

1550 
	#ggc_Æloc_vec_åì_idítifõr
(
n
Ë((
åì_idítifõr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

1551 
	#ggc_Æloc_˛óªd_vec_åì_idítifõr
(
n
Ë((
åì_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

1552 
	#ggc_Æloc_åì_ve˘‹
(Ë((
åì_ve˘‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ve˘‹Ë
MEM_STAT_INFO
)))

	)

1553 
	#ggc_Æloc_˛óªd_åì_ve˘‹
(Ë((
åì_ve˘‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ve˘‹Ë
MEM_STAT_INFO
)))

	)

1554 
	#ggc_Æloc_vec_åì_ve˘‹
(
n
Ë((
åì_ve˘‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ve˘‹),Ç 
MEM_STAT_INFO
)))

	)

1555 
	#ggc_Æloc_˛óªd_vec_åì_ve˘‹
(
n
Ë((
åì_ve˘‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ve˘‹),Ç 
MEM_STAT_INFO
)))

	)

1556 
	#ggc_Æloc_åì_com∂ex
(Ë((
åì_com∂ex
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_com∂exË
MEM_STAT_INFO
)))

	)

1557 
	#ggc_Æloc_˛óªd_åì_com∂ex
(Ë((
åì_com∂ex
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_com∂exË
MEM_STAT_INFO
)))

	)

1558 
	#ggc_Æloc_vec_åì_com∂ex
(
n
Ë((
åì_com∂ex
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_com∂ex),Ç 
MEM_STAT_INFO
)))

	)

1559 
	#ggc_Æloc_˛óªd_vec_åì_com∂ex
(
n
Ë((
åì_com∂ex
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_com∂ex),Ç 
MEM_STAT_INFO
)))

	)

1560 
	#ggc_Æloc_åì_°rög
(Ë((
åì_°rög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_°rögË
MEM_STAT_INFO
)))

	)

1561 
	#ggc_Æloc_˛óªd_åì_°rög
(Ë((
åì_°rög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_°rögË
MEM_STAT_INFO
)))

	)

1562 
	#ggc_Æloc_vec_åì_°rög
(
n
Ë((
åì_°rög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_°rög),Ç 
MEM_STAT_INFO
)))

	)

1563 
	#ggc_Æloc_˛óªd_vec_åì_°rög
(
n
Ë((
åì_°rög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_°rög),Ç 
MEM_STAT_INFO
)))

	)

1564 
	#ggc_Æloc_åì_fixed_c°
(Ë((
åì_fixed_c°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_fixed_c°Ë
MEM_STAT_INFO
)))

	)

1565 
	#ggc_Æloc_˛óªd_åì_fixed_c°
(Ë((
åì_fixed_c°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_fixed_c°Ë
MEM_STAT_INFO
)))

	)

1566 
	#ggc_Æloc_vec_åì_fixed_c°
(
n
Ë((
åì_fixed_c°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_fixed_c°),Ç 
MEM_STAT_INFO
)))

	)

1567 
	#ggc_Æloc_˛óªd_vec_åì_fixed_c°
(
n
Ë((
åì_fixed_c°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_fixed_c°),Ç 
MEM_STAT_INFO
)))

	)

1568 
	#ggc_Æloc_åì_ªÆ_c°
(Ë((
åì_ªÆ_c°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ªÆ_c°Ë
MEM_STAT_INFO
)))

	)

1569 
	#ggc_Æloc_˛óªd_åì_ªÆ_c°
(Ë((
åì_ªÆ_c°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ªÆ_c°Ë
MEM_STAT_INFO
)))

	)

1570 
	#ggc_Æloc_vec_åì_ªÆ_c°
(
n
Ë((
åì_ªÆ_c°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ªÆ_c°),Ç 
MEM_STAT_INFO
)))

	)

1571 
	#ggc_Æloc_˛óªd_vec_åì_ªÆ_c°
(
n
Ë((
åì_ªÆ_c°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ªÆ_c°),Ç 
MEM_STAT_INFO
)))

	)

1572 
	#ggc_Æloc_åì_öt_c°
(Ë((
åì_öt_c°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_öt_c°Ë
MEM_STAT_INFO
)))

	)

1573 
	#ggc_Æloc_˛óªd_åì_öt_c°
(Ë((
åì_öt_c°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_öt_c°Ë
MEM_STAT_INFO
)))

	)

1574 
	#ggc_Æloc_vec_åì_öt_c°
(
n
Ë((
åì_öt_c°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_öt_c°),Ç 
MEM_STAT_INFO
)))

	)

1575 
	#ggc_Æloc_˛óªd_vec_åì_öt_c°
(
n
Ë((
åì_öt_c°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_öt_c°),Ç 
MEM_STAT_INFO
)))

	)

1576 
	#ggc_Æloc_åì_comm⁄
(Ë((
åì_comm⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_comm⁄Ë
MEM_STAT_INFO
)))

	)

1577 
	#ggc_Æloc_˛óªd_åì_comm⁄
(Ë((
åì_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_comm⁄Ë
MEM_STAT_INFO
)))

	)

1578 
	#ggc_Æloc_vec_åì_comm⁄
(
n
Ë((
åì_comm⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1579 
	#ggc_Æloc_˛óªd_vec_åì_comm⁄
(
n
Ë((
åì_comm⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_comm⁄),Ç 
MEM_STAT_INFO
)))

	)

1580 
	#ggc_Æloc_åì_ty≥d
(Ë((
åì_ty≥d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ty≥dË
MEM_STAT_INFO
)))

	)

1581 
	#ggc_Æloc_˛óªd_åì_ty≥d
(Ë((
åì_ty≥d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ty≥dË
MEM_STAT_INFO
)))

	)

1582 
	#ggc_Æloc_vec_åì_ty≥d
(
n
Ë((
åì_ty≥d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ty≥d),Ç 
MEM_STAT_INFO
)))

	)

1583 
	#ggc_Æloc_˛óªd_vec_åì_ty≥d
(
n
Ë((
åì_ty≥d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ty≥d),Ç 
MEM_STAT_INFO
)))

	)

1584 
	#ggc_Æloc_åì_ba£
(Ë((
åì_ba£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_ba£Ë
MEM_STAT_INFO
)))

	)

1585 
	#ggc_Æloc_˛óªd_åì_ba£
(Ë((
åì_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_ba£Ë
MEM_STAT_INFO
)))

	)

1586 
	#ggc_Æloc_vec_åì_ba£
(
n
Ë((
åì_ba£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_ba£),Ç 
MEM_STAT_INFO
)))

	)

1587 
	#ggc_Æloc_˛óªd_vec_åì_ba£
(
n
Ë((
åì_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_ba£),Ç 
MEM_STAT_INFO
)))

	)

1588 
	#ggc_Æloc_Æüs_∑ú
(Ë((
Æüs_∑ú
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (Æüs_∑úË
MEM_STAT_INFO
)))

	)

1589 
	#ggc_Æloc_˛óªd_Æüs_∑ú
(Ë((
Æüs_∑ú
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (Æüs_∑úË
MEM_STAT_INFO
)))

	)

1590 
	#ggc_Æloc_vec_Æüs_∑ú
(
n
Ë((
Æüs_∑ú
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (Æüs_∑ú),Ç 
MEM_STAT_INFO
)))

	)

1591 
	#ggc_Æloc_˛óªd_vec_Æüs_∑ú
(
n
Ë((
Æüs_∑ú
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (Æüs_∑ú),Ç 
MEM_STAT_INFO
)))

	)

1592 
	#ggc_Æloc_dõ_°ru˘
(Ë((
dõ_°ru˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dõ_°ru˘Ë
MEM_STAT_INFO
)))

	)

1593 
	#ggc_Æloc_˛óªd_dõ_°ru˘
(Ë((
dõ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dõ_°ru˘Ë
MEM_STAT_INFO
)))

	)

1594 
	#ggc_Æloc_vec_dõ_°ru˘
(
n
Ë((
dõ_°ru˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dõ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1595 
	#ggc_Æloc_˛óªd_vec_dõ_°ru˘
(
n
Ë((
dõ_°ru˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dõ_°ru˘),Ç 
MEM_STAT_INFO
)))

	)

1596 
	#ggc_Æloc_ønge_öfo_def
(Ë((
ønge_öfo_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ønge_öfo_defË
MEM_STAT_INFO
)))

	)

1597 
	#ggc_Æloc_˛óªd_ønge_öfo_def
(Ë((
ønge_öfo_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ønge_öfo_defË
MEM_STAT_INFO
)))

	)

1598 
	#ggc_Æloc_vec_ønge_öfo_def
(
n
Ë((
ønge_öfo_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ønge_öfo_def),Ç 
MEM_STAT_INFO
)))

	)

1599 
	#ggc_Æloc_˛óªd_vec_ønge_öfo_def
(
n
Ë((
ønge_öfo_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ønge_öfo_def),Ç 
MEM_STAT_INFO
)))

	)

1600 
	#ggc_Æloc_±r_öfo_def
(Ë((
±r_öfo_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (±r_öfo_defË
MEM_STAT_INFO
)))

	)

1601 
	#ggc_Æloc_˛óªd_±r_öfo_def
(Ë((
±r_öfo_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (±r_öfo_defË
MEM_STAT_INFO
)))

	)

1602 
	#ggc_Æloc_vec_±r_öfo_def
(
n
Ë((
±r_öfo_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (±r_öfo_def),Ç 
MEM_STAT_INFO
)))

	)

1603 
	#ggc_Æloc_˛óªd_vec_±r_öfo_def
(
n
Ë((
±r_öfo_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (±r_öfo_def),Ç 
MEM_STAT_INFO
)))

	)

1604 
	#ggc_Æloc_èrgë_πl
(Ë((
èrgë_πl
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (èrgë_πlË
MEM_STAT_INFO
)))

	)

1605 
	#ggc_Æloc_˛óªd_èrgë_πl
(Ë((
èrgë_πl
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (èrgë_πlË
MEM_STAT_INFO
)))

	)

1606 
	#ggc_Æloc_vec_èrgë_πl
(
n
Ë((
èrgë_πl
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (èrgë_πl),Ç 
MEM_STAT_INFO
)))

	)

1607 
	#ggc_Æloc_˛óªd_vec_èrgë_πl
(
n
Ë((
èrgë_πl
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (èrgë_πl),Ç 
MEM_STAT_INFO
)))

	)

1608 
	#ggc_Æloc_fun˘i⁄
(Ë((
fun˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

1609 
	#ggc_Æloc_˛óªd_fun˘i⁄
(Ë((
fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

1610 
	#ggc_Æloc_vec_fun˘i⁄
(
n
Ë((
fun˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1611 
	#ggc_Æloc_˛óªd_vec_fun˘i⁄
(
n
Ë((
fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

1612 
	#ggc_Æloc_πx_def_subuni⁄
(Ë((
πx_def_subuni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_subuni⁄Ë
MEM_STAT_INFO
)))

	)

1613 
	#ggc_Æloc_˛óªd_πx_def_subuni⁄
(Ë((
πx_def_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_subuni⁄Ë
MEM_STAT_INFO
)))

	)

1614 
	#ggc_Æloc_vec_πx_def_subuni⁄
(
n
Ë((
πx_def_subuni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

1615 
	#ggc_Æloc_˛óªd_vec_πx_def_subuni⁄
(
n
Ë((
πx_def_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

1616 
	#ggc_Æloc_πx_def_debug_∑ømëî_ªf
(Ë((
πx_def_debug_∑ømëî_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_debug_∑ømëî_ªfË
MEM_STAT_INFO
)))

	)

1617 
	#ggc_Æloc_˛óªd_πx_def_debug_∑ømëî_ªf
(Ë((
πx_def_debug_∑ømëî_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_debug_∑ømëî_ªfË
MEM_STAT_INFO
)))

	)

1618 
	#ggc_Æloc_vec_πx_def_debug_∑ømëî_ªf
(
n
Ë((
πx_def_debug_∑ømëî_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_debug_∑ømëî_ªf),Ç 
MEM_STAT_INFO
)))

	)

1619 
	#ggc_Æloc_˛óªd_vec_πx_def_debug_∑ømëî_ªf
(
n
Ë((
πx_def_debug_∑ømëî_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_debug_∑ømëî_ªf),Ç 
MEM_STAT_INFO
)))

	)

1620 
	#ggc_Æloc_πx_def_íåy_vÆue
(Ë((
πx_def_íåy_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_íåy_vÆueË
MEM_STAT_INFO
)))

	)

1621 
	#ggc_Æloc_˛óªd_πx_def_íåy_vÆue
(Ë((
πx_def_íåy_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_íåy_vÆueË
MEM_STAT_INFO
)))

	)

1622 
	#ggc_Æloc_vec_πx_def_íåy_vÆue
(
n
Ë((
πx_def_íåy_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_íåy_vÆue),Ç 
MEM_STAT_INFO
)))

	)

1623 
	#ggc_Æloc_˛óªd_vec_πx_def_íåy_vÆue
(
n
Ë((
πx_def_íåy_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_íåy_vÆue),Ç 
MEM_STAT_INFO
)))

	)

1624 
	#ggc_Æloc_πx_def_debug_im∂icô_±r
(Ë((
πx_def_debug_im∂icô_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_debug_im∂icô_±rË
MEM_STAT_INFO
)))

	)

1625 
	#ggc_Æloc_˛óªd_πx_def_debug_im∂icô_±r
(Ë((
πx_def_debug_im∂icô_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_debug_im∂icô_±rË
MEM_STAT_INFO
)))

	)

1626 
	#ggc_Æloc_vec_πx_def_debug_im∂icô_±r
(
n
Ë((
πx_def_debug_im∂icô_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_debug_im∂icô_±r),Ç 
MEM_STAT_INFO
)))

	)

1627 
	#ggc_Æloc_˛óªd_vec_πx_def_debug_im∂icô_±r
(
n
Ë((
πx_def_debug_im∂icô_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_debug_im∂icô_±r),Ç 
MEM_STAT_INFO
)))

	)

1628 
	#ggc_Æloc_πx_def_v¨_loˇti⁄
(Ë((
πx_def_v¨_loˇti⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_v¨_loˇti⁄Ë
MEM_STAT_INFO
)))

	)

1629 
	#ggc_Æloc_˛óªd_πx_def_v¨_loˇti⁄
(Ë((
πx_def_v¨_loˇti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_v¨_loˇti⁄Ë
MEM_STAT_INFO
)))

	)

1630 
	#ggc_Æloc_vec_πx_def_v¨_loˇti⁄
(
n
Ë((
πx_def_v¨_loˇti⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_v¨_loˇti⁄),Ç 
MEM_STAT_INFO
)))

	)

1631 
	#ggc_Æloc_˛óªd_vec_πx_def_v¨_loˇti⁄
(
n
Ë((
πx_def_v¨_loˇti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_v¨_loˇti⁄),Ç 
MEM_STAT_INFO
)))

	)

1632 
	#ggc_Æloc_πx_def_fma
(Ë((
πx_def_fma
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_fmaË
MEM_STAT_INFO
)))

	)

1633 
	#ggc_Æloc_˛óªd_πx_def_fma
(Ë((
πx_def_fma
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_fmaË
MEM_STAT_INFO
)))

	)

1634 
	#ggc_Æloc_vec_πx_def_fma
(
n
Ë((
πx_def_fma
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_fma),Ç 
MEM_STAT_INFO
)))

	)

1635 
	#ggc_Æloc_˛óªd_vec_πx_def_fma
(
n
Ë((
πx_def_fma
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_fma),Ç 
MEM_STAT_INFO
)))

	)

1636 
	#ggc_Æloc_πx_def_us_åunˇã
(Ë((
πx_def_us_åunˇã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_åunˇãË
MEM_STAT_INFO
)))

	)

1637 
	#ggc_Æloc_˛óªd_πx_def_us_åunˇã
(Ë((
πx_def_us_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_åunˇãË
MEM_STAT_INFO
)))

	)

1638 
	#ggc_Æloc_vec_πx_def_us_åunˇã
(
n
Ë((
πx_def_us_åunˇã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1639 
	#ggc_Æloc_˛óªd_vec_πx_def_us_åunˇã
(
n
Ë((
πx_def_us_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1640 
	#ggc_Æloc_πx_def_ss_åunˇã
(Ë((
πx_def_ss_åunˇã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_åunˇãË
MEM_STAT_INFO
)))

	)

1641 
	#ggc_Æloc_˛óªd_πx_def_ss_åunˇã
(Ë((
πx_def_ss_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_åunˇãË
MEM_STAT_INFO
)))

	)

1642 
	#ggc_Æloc_vec_πx_def_ss_åunˇã
(
n
Ë((
πx_def_ss_åunˇã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1643 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_åunˇã
(
n
Ë((
πx_def_ss_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1644 
	#ggc_Æloc_πx_def_us_möus
(Ë((
πx_def_us_möus
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_möusË
MEM_STAT_INFO
)))

	)

1645 
	#ggc_Æloc_˛óªd_πx_def_us_möus
(Ë((
πx_def_us_möus
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_möusË
MEM_STAT_INFO
)))

	)

1646 
	#ggc_Æloc_vec_πx_def_us_möus
(
n
Ë((
πx_def_us_möus
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_möus),Ç 
MEM_STAT_INFO
)))

	)

1647 
	#ggc_Æloc_˛óªd_vec_πx_def_us_möus
(
n
Ë((
πx_def_us_möus
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_möus),Ç 
MEM_STAT_INFO
)))

	)

1648 
	#ggc_Æloc_πx_def_us_ashi·
(Ë((
πx_def_us_ashi·
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_ashi·Ë
MEM_STAT_INFO
)))

	)

1649 
	#ggc_Æloc_˛óªd_πx_def_us_ashi·
(Ë((
πx_def_us_ashi·
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_ashi·Ë
MEM_STAT_INFO
)))

	)

1650 
	#ggc_Æloc_vec_πx_def_us_ashi·
(
n
Ë((
πx_def_us_ashi·
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_ashi·),Ç 
MEM_STAT_INFO
)))

	)

1651 
	#ggc_Æloc_˛óªd_vec_πx_def_us_ashi·
(
n
Ë((
πx_def_us_ashi·
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_ashi·),Ç 
MEM_STAT_INFO
)))

	)

1652 
	#ggc_Æloc_πx_def_ss_ashi·
(Ë((
πx_def_ss_ashi·
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_ashi·Ë
MEM_STAT_INFO
)))

	)

1653 
	#ggc_Æloc_˛óªd_πx_def_ss_ashi·
(Ë((
πx_def_ss_ashi·
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_ashi·Ë
MEM_STAT_INFO
)))

	)

1654 
	#ggc_Æloc_vec_πx_def_ss_ashi·
(
n
Ë((
πx_def_ss_ashi·
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_ashi·),Ç 
MEM_STAT_INFO
)))

	)

1655 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_ashi·
(
n
Ë((
πx_def_ss_ashi·
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_ashi·),Ç 
MEM_STAT_INFO
)))

	)

1656 
	#ggc_Æloc_πx_def_ss_abs
(Ë((
πx_def_ss_abs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_absË
MEM_STAT_INFO
)))

	)

1657 
	#ggc_Æloc_˛óªd_πx_def_ss_abs
(Ë((
πx_def_ss_abs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_absË
MEM_STAT_INFO
)))

	)

1658 
	#ggc_Æloc_vec_πx_def_ss_abs
(
n
Ë((
πx_def_ss_abs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_abs),Ç 
MEM_STAT_INFO
)))

	)

1659 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_abs
(
n
Ë((
πx_def_ss_abs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_abs),Ç 
MEM_STAT_INFO
)))

	)

1660 
	#ggc_Æloc_πx_def_us_√g
(Ë((
πx_def_us_√g
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_√gË
MEM_STAT_INFO
)))

	)

1661 
	#ggc_Æloc_˛óªd_πx_def_us_√g
(Ë((
πx_def_us_√g
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_√gË
MEM_STAT_INFO
)))

	)

1662 
	#ggc_Æloc_vec_πx_def_us_√g
(
n
Ë((
πx_def_us_√g
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_√g),Ç 
MEM_STAT_INFO
)))

	)

1663 
	#ggc_Æloc_˛óªd_vec_πx_def_us_√g
(
n
Ë((
πx_def_us_√g
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_√g),Ç 
MEM_STAT_INFO
)))

	)

1664 
	#ggc_Æloc_πx_def_ss_√g
(Ë((
πx_def_ss_√g
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_√gË
MEM_STAT_INFO
)))

	)

1665 
	#ggc_Æloc_˛óªd_πx_def_ss_√g
(Ë((
πx_def_ss_√g
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_√gË
MEM_STAT_INFO
)))

	)

1666 
	#ggc_Æloc_vec_πx_def_ss_√g
(
n
Ë((
πx_def_ss_√g
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_√g),Ç 
MEM_STAT_INFO
)))

	)

1667 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_√g
(
n
Ë((
πx_def_ss_√g
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_√g),Ç 
MEM_STAT_INFO
)))

	)

1668 
	#ggc_Æloc_πx_def_ss_möus
(Ë((
πx_def_ss_möus
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_möusË
MEM_STAT_INFO
)))

	)

1669 
	#ggc_Æloc_˛óªd_πx_def_ss_möus
(Ë((
πx_def_ss_möus
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_möusË
MEM_STAT_INFO
)))

	)

1670 
	#ggc_Æloc_vec_πx_def_ss_möus
(
n
Ë((
πx_def_ss_möus
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_möus),Ç 
MEM_STAT_INFO
)))

	)

1671 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_möus
(
n
Ë((
πx_def_ss_möus
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_möus),Ç 
MEM_STAT_INFO
)))

	)

1672 
	#ggc_Æloc_πx_def_us_∂us
(Ë((
πx_def_us_∂us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_∂usË
MEM_STAT_INFO
)))

	)

1673 
	#ggc_Æloc_˛óªd_πx_def_us_∂us
(Ë((
πx_def_us_∂us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_∂usË
MEM_STAT_INFO
)))

	)

1674 
	#ggc_Æloc_vec_πx_def_us_∂us
(
n
Ë((
πx_def_us_∂us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_∂us),Ç 
MEM_STAT_INFO
)))

	)

1675 
	#ggc_Æloc_˛óªd_vec_πx_def_us_∂us
(
n
Ë((
πx_def_us_∂us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_∂us),Ç 
MEM_STAT_INFO
)))

	)

1676 
	#ggc_Æloc_πx_def_ss_∂us
(Ë((
πx_def_ss_∂us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_∂usË
MEM_STAT_INFO
)))

	)

1677 
	#ggc_Æloc_˛óªd_πx_def_ss_∂us
(Ë((
πx_def_ss_∂us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_∂usË
MEM_STAT_INFO
)))

	)

1678 
	#ggc_Æloc_vec_πx_def_ss_∂us
(
n
Ë((
πx_def_ss_∂us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_∂us),Ç 
MEM_STAT_INFO
)))

	)

1679 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_∂us
(
n
Ë((
πx_def_ss_∂us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_∂us),Ç 
MEM_STAT_INFO
)))

	)

1680 
	#ggc_Æloc_πx_def_vec_du∂iˇã
(Ë((
πx_def_vec_du∂iˇã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_vec_du∂iˇãË
MEM_STAT_INFO
)))

	)

1681 
	#ggc_Æloc_˛óªd_πx_def_vec_du∂iˇã
(Ë((
πx_def_vec_du∂iˇã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_vec_du∂iˇãË
MEM_STAT_INFO
)))

	)

1682 
	#ggc_Æloc_vec_πx_def_vec_du∂iˇã
(
n
Ë((
πx_def_vec_du∂iˇã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_vec_du∂iˇã),Ç 
MEM_STAT_INFO
)))

	)

1683 
	#ggc_Æloc_˛óªd_vec_πx_def_vec_du∂iˇã
(
n
Ë((
πx_def_vec_du∂iˇã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_vec_du∂iˇã),Ç 
MEM_STAT_INFO
)))

	)

1684 
	#ggc_Æloc_πx_def_vec_c⁄ˇt
(Ë((
πx_def_vec_c⁄ˇt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_vec_c⁄ˇtË
MEM_STAT_INFO
)))

	)

1685 
	#ggc_Æloc_˛óªd_πx_def_vec_c⁄ˇt
(Ë((
πx_def_vec_c⁄ˇt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_vec_c⁄ˇtË
MEM_STAT_INFO
)))

	)

1686 
	#ggc_Æloc_vec_πx_def_vec_c⁄ˇt
(
n
Ë((
πx_def_vec_c⁄ˇt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_vec_c⁄ˇt),Ç 
MEM_STAT_INFO
)))

	)

1687 
	#ggc_Æloc_˛óªd_vec_πx_def_vec_c⁄ˇt
(
n
Ë((
πx_def_vec_c⁄ˇt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_vec_c⁄ˇt),Ç 
MEM_STAT_INFO
)))

	)

1688 
	#ggc_Æloc_πx_def_vec_£À˘
(Ë((
πx_def_vec_£À˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_vec_£À˘Ë
MEM_STAT_INFO
)))

	)

1689 
	#ggc_Æloc_˛óªd_πx_def_vec_£À˘
(Ë((
πx_def_vec_£À˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_vec_£À˘Ë
MEM_STAT_INFO
)))

	)

1690 
	#ggc_Æloc_vec_πx_def_vec_£À˘
(
n
Ë((
πx_def_vec_£À˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_vec_£À˘),Ç 
MEM_STAT_INFO
)))

	)

1691 
	#ggc_Æloc_˛óªd_vec_πx_def_vec_£À˘
(
n
Ë((
πx_def_vec_£À˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_vec_£À˘),Ç 
MEM_STAT_INFO
)))

	)

1692 
	#ggc_Æloc_πx_def_vec_mîge
(Ë((
πx_def_vec_mîge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_vec_mîgeË
MEM_STAT_INFO
)))

	)

1693 
	#ggc_Æloc_˛óªd_πx_def_vec_mîge
(Ë((
πx_def_vec_mîge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_vec_mîgeË
MEM_STAT_INFO
)))

	)

1694 
	#ggc_Æloc_vec_πx_def_vec_mîge
(
n
Ë((
πx_def_vec_mîge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_vec_mîge),Ç 
MEM_STAT_INFO
)))

	)

1695 
	#ggc_Æloc_˛óªd_vec_πx_def_vec_mîge
(
n
Ë((
πx_def_vec_mîge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_vec_mîge),Ç 
MEM_STAT_INFO
)))

	)

1696 
	#ggc_Æloc_πx_def_lo_sum
(Ë((
πx_def_lo_sum
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_lo_sumË
MEM_STAT_INFO
)))

	)

1697 
	#ggc_Æloc_˛óªd_πx_def_lo_sum
(Ë((
πx_def_lo_sum
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_lo_sumË
MEM_STAT_INFO
)))

	)

1698 
	#ggc_Æloc_vec_πx_def_lo_sum
(
n
Ë((
πx_def_lo_sum
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_lo_sum),Ç 
MEM_STAT_INFO
)))

	)

1699 
	#ggc_Æloc_˛óªd_vec_πx_def_lo_sum
(
n
Ë((
πx_def_lo_sum
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_lo_sum),Ç 
MEM_STAT_INFO
)))

	)

1700 
	#ggc_Æloc_πx_def_high
(Ë((
πx_def_high
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_highË
MEM_STAT_INFO
)))

	)

1701 
	#ggc_Æloc_˛óªd_πx_def_high
(Ë((
πx_def_high
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_highË
MEM_STAT_INFO
)))

	)

1702 
	#ggc_Æloc_vec_πx_def_high
(
n
Ë((
πx_def_high
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_high),Ç 
MEM_STAT_INFO
)))

	)

1703 
	#ggc_Æloc_˛óªd_vec_πx_def_high
(
n
Ë((
πx_def_high
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_high),Ç 
MEM_STAT_INFO
)))

	)

1704 
	#ggc_Æloc_πx_def_zîo_exåa˘
(Ë((
πx_def_zîo_exåa˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_zîo_exåa˘Ë
MEM_STAT_INFO
)))

	)

1705 
	#ggc_Æloc_˛óªd_πx_def_zîo_exåa˘
(Ë((
πx_def_zîo_exåa˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_zîo_exåa˘Ë
MEM_STAT_INFO
)))

	)

1706 
	#ggc_Æloc_vec_πx_def_zîo_exåa˘
(
n
Ë((
πx_def_zîo_exåa˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_zîo_exåa˘),Ç 
MEM_STAT_INFO
)))

	)

1707 
	#ggc_Æloc_˛óªd_vec_πx_def_zîo_exåa˘
(
n
Ë((
πx_def_zîo_exåa˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_zîo_exåa˘),Ç 
MEM_STAT_INFO
)))

	)

1708 
	#ggc_Æloc_πx_def_sign_exåa˘
(Ë((
πx_def_sign_exåa˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_sign_exåa˘Ë
MEM_STAT_INFO
)))

	)

1709 
	#ggc_Æloc_˛óªd_πx_def_sign_exåa˘
(Ë((
πx_def_sign_exåa˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_sign_exåa˘Ë
MEM_STAT_INFO
)))

	)

1710 
	#ggc_Æloc_vec_πx_def_sign_exåa˘
(
n
Ë((
πx_def_sign_exåa˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_sign_exåa˘),Ç 
MEM_STAT_INFO
)))

	)

1711 
	#ggc_Æloc_˛óªd_vec_πx_def_sign_exåa˘
(
n
Ë((
πx_def_sign_exåa˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_sign_exåa˘),Ç 
MEM_STAT_INFO
)))

	)

1712 
	#ggc_Æloc_πx_def_∑rôy
(Ë((
πx_def_∑rôy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_∑rôyË
MEM_STAT_INFO
)))

	)

1713 
	#ggc_Æloc_˛óªd_πx_def_∑rôy
(Ë((
πx_def_∑rôy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_∑rôyË
MEM_STAT_INFO
)))

	)

1714 
	#ggc_Æloc_vec_πx_def_∑rôy
(
n
Ë((
πx_def_∑rôy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_∑rôy),Ç 
MEM_STAT_INFO
)))

	)

1715 
	#ggc_Æloc_˛óªd_vec_πx_def_∑rôy
(
n
Ë((
πx_def_∑rôy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_∑rôy),Ç 
MEM_STAT_INFO
)))

	)

1716 
	#ggc_Æloc_πx_def_p›cou¡
(Ë((
πx_def_p›cou¡
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_p›cou¡Ë
MEM_STAT_INFO
)))

	)

1717 
	#ggc_Æloc_˛óªd_πx_def_p›cou¡
(Ë((
πx_def_p›cou¡
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_p›cou¡Ë
MEM_STAT_INFO
)))

	)

1718 
	#ggc_Æloc_vec_πx_def_p›cou¡
(
n
Ë((
πx_def_p›cou¡
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_p›cou¡),Ç 
MEM_STAT_INFO
)))

	)

1719 
	#ggc_Æloc_˛óªd_vec_πx_def_p›cou¡
(
n
Ë((
πx_def_p›cou¡
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_p›cou¡),Ç 
MEM_STAT_INFO
)))

	)

1720 
	#ggc_Æloc_πx_def_˘z
(Ë((
πx_def_˘z
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_˘zË
MEM_STAT_INFO
)))

	)

1721 
	#ggc_Æloc_˛óªd_πx_def_˘z
(Ë((
πx_def_˘z
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_˘zË
MEM_STAT_INFO
)))

	)

1722 
	#ggc_Æloc_vec_πx_def_˘z
(
n
Ë((
πx_def_˘z
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_˘z),Ç 
MEM_STAT_INFO
)))

	)

1723 
	#ggc_Æloc_˛óªd_vec_πx_def_˘z
(
n
Ë((
πx_def_˘z
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_˘z),Ç 
MEM_STAT_INFO
)))

	)

1724 
	#ggc_Æloc_πx_def_˛z
(Ë((
πx_def_˛z
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_˛zË
MEM_STAT_INFO
)))

	)

1725 
	#ggc_Æloc_˛óªd_πx_def_˛z
(Ë((
πx_def_˛z
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_˛zË
MEM_STAT_INFO
)))

	)

1726 
	#ggc_Æloc_vec_πx_def_˛z
(
n
Ë((
πx_def_˛z
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_˛z),Ç 
MEM_STAT_INFO
)))

	)

1727 
	#ggc_Æloc_˛óªd_vec_πx_def_˛z
(
n
Ë((
πx_def_˛z
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_˛z),Ç 
MEM_STAT_INFO
)))

	)

1728 
	#ggc_Æloc_πx_def_˛rsb
(Ë((
πx_def_˛rsb
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_˛rsbË
MEM_STAT_INFO
)))

	)

1729 
	#ggc_Æloc_˛óªd_πx_def_˛rsb
(Ë((
πx_def_˛rsb
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_˛rsbË
MEM_STAT_INFO
)))

	)

1730 
	#ggc_Æloc_vec_πx_def_˛rsb
(
n
Ë((
πx_def_˛rsb
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_˛rsb),Ç 
MEM_STAT_INFO
)))

	)

1731 
	#ggc_Æloc_˛óªd_vec_πx_def_˛rsb
(
n
Ë((
πx_def_˛rsb
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_˛rsb),Ç 
MEM_STAT_INFO
)))

	)

1732 
	#ggc_Æloc_πx_def_ffs
(Ë((
πx_def_ffs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ffsË
MEM_STAT_INFO
)))

	)

1733 
	#ggc_Æloc_˛óªd_πx_def_ffs
(Ë((
πx_def_ffs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ffsË
MEM_STAT_INFO
)))

	)

1734 
	#ggc_Æloc_vec_πx_def_ffs
(
n
Ë((
πx_def_ffs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ffs),Ç 
MEM_STAT_INFO
)))

	)

1735 
	#ggc_Æloc_˛óªd_vec_πx_def_ffs
(
n
Ë((
πx_def_ffs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ffs),Ç 
MEM_STAT_INFO
)))

	)

1736 
	#ggc_Æloc_πx_def_bsw≠
(Ë((
πx_def_bsw≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_bsw≠Ë
MEM_STAT_INFO
)))

	)

1737 
	#ggc_Æloc_˛óªd_πx_def_bsw≠
(Ë((
πx_def_bsw≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_bsw≠Ë
MEM_STAT_INFO
)))

	)

1738 
	#ggc_Æloc_vec_πx_def_bsw≠
(
n
Ë((
πx_def_bsw≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_bsw≠),Ç 
MEM_STAT_INFO
)))

	)

1739 
	#ggc_Æloc_˛óªd_vec_πx_def_bsw≠
(
n
Ë((
πx_def_bsw≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_bsw≠),Ç 
MEM_STAT_INFO
)))

	)

1740 
	#ggc_Æloc_πx_def_sqπ
(Ë((
πx_def_sqπ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_sqπË
MEM_STAT_INFO
)))

	)

1741 
	#ggc_Æloc_˛óªd_πx_def_sqπ
(Ë((
πx_def_sqπ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_sqπË
MEM_STAT_INFO
)))

	)

1742 
	#ggc_Æloc_vec_πx_def_sqπ
(
n
Ë((
πx_def_sqπ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_sqπ),Ç 
MEM_STAT_INFO
)))

	)

1743 
	#ggc_Æloc_˛óªd_vec_πx_def_sqπ
(
n
Ë((
πx_def_sqπ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_sqπ),Ç 
MEM_STAT_INFO
)))

	)

1744 
	#ggc_Æloc_πx_def_abs
(Ë((
πx_def_abs
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_absË
MEM_STAT_INFO
)))

	)

1745 
	#ggc_Æloc_˛óªd_πx_def_abs
(Ë((
πx_def_abs
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_absË
MEM_STAT_INFO
)))

	)

1746 
	#ggc_Æloc_vec_πx_def_abs
(
n
Ë((
πx_def_abs
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_abs),Ç 
MEM_STAT_INFO
)))

	)

1747 
	#ggc_Æloc_˛óªd_vec_πx_def_abs
(
n
Ë((
πx_def_abs
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_abs),Ç 
MEM_STAT_INFO
)))

	)

1748 
	#ggc_Æloc_πx_def_unsig√d_ßt_‰a˘
(Ë((
πx_def_unsig√d_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_unsig√d_ßt_‰a˘Ë
MEM_STAT_INFO
)))

	)

1749 
	#ggc_Æloc_˛óªd_πx_def_unsig√d_ßt_‰a˘
(Ë((
πx_def_unsig√d_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_unsig√d_ßt_‰a˘Ë
MEM_STAT_INFO
)))

	)

1750 
	#ggc_Æloc_vec_πx_def_unsig√d_ßt_‰a˘
(
n
Ë((
πx_def_unsig√d_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_unsig√d_ßt_‰a˘),Ç 
MEM_STAT_INFO
)))

	)

1751 
	#ggc_Æloc_˛óªd_vec_πx_def_unsig√d_ßt_‰a˘
(
n
Ë((
πx_def_unsig√d_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_unsig√d_ßt_‰a˘),Ç 
MEM_STAT_INFO
)))

	)

1752 
	#ggc_Æloc_πx_def_ßt_‰a˘
(Ë((
πx_def_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ßt_‰a˘Ë
MEM_STAT_INFO
)))

	)

1753 
	#ggc_Æloc_˛óªd_πx_def_ßt_‰a˘
(Ë((
πx_def_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ßt_‰a˘Ë
MEM_STAT_INFO
)))

	)

1754 
	#ggc_Æloc_vec_πx_def_ßt_‰a˘
(
n
Ë((
πx_def_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ßt_‰a˘),Ç 
MEM_STAT_INFO
)))

	)

1755 
	#ggc_Æloc_˛óªd_vec_πx_def_ßt_‰a˘
(
n
Ë((
πx_def_ßt_‰a˘
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ßt_‰a˘),Ç 
MEM_STAT_INFO
)))

	)

1756 
	#ggc_Æloc_πx_def_unsig√d_‰a˘_c⁄vît
(Ë((
πx_def_unsig√d_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_unsig√d_‰a˘_c⁄vîtË
MEM_STAT_INFO
)))

	)

1757 
	#ggc_Æloc_˛óªd_πx_def_unsig√d_‰a˘_c⁄vît
(Ë((
πx_def_unsig√d_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_unsig√d_‰a˘_c⁄vîtË
MEM_STAT_INFO
)))

	)

1758 
	#ggc_Æloc_vec_πx_def_unsig√d_‰a˘_c⁄vît
(
n
Ë((
πx_def_unsig√d_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_unsig√d_‰a˘_c⁄vît),Ç 
MEM_STAT_INFO
)))

	)

1759 
	#ggc_Æloc_˛óªd_vec_πx_def_unsig√d_‰a˘_c⁄vît
(
n
Ë((
πx_def_unsig√d_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_unsig√d_‰a˘_c⁄vît),Ç 
MEM_STAT_INFO
)))

	)

1760 
	#ggc_Æloc_πx_def_‰a˘_c⁄vît
(Ë((
πx_def_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_‰a˘_c⁄vîtË
MEM_STAT_INFO
)))

	)

1761 
	#ggc_Æloc_˛óªd_πx_def_‰a˘_c⁄vît
(Ë((
πx_def_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_‰a˘_c⁄vîtË
MEM_STAT_INFO
)))

	)

1762 
	#ggc_Æloc_vec_πx_def_‰a˘_c⁄vît
(
n
Ë((
πx_def_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_‰a˘_c⁄vît),Ç 
MEM_STAT_INFO
)))

	)

1763 
	#ggc_Æloc_˛óªd_vec_πx_def_‰a˘_c⁄vît
(
n
Ë((
πx_def_‰a˘_c⁄vît
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_‰a˘_c⁄vît),Ç 
MEM_STAT_INFO
)))

	)

1764 
	#ggc_Æloc_πx_def_unsig√d_fix
(Ë((
πx_def_unsig√d_fix
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_unsig√d_fixË
MEM_STAT_INFO
)))

	)

1765 
	#ggc_Æloc_˛óªd_πx_def_unsig√d_fix
(Ë((
πx_def_unsig√d_fix
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_unsig√d_fixË
MEM_STAT_INFO
)))

	)

1766 
	#ggc_Æloc_vec_πx_def_unsig√d_fix
(
n
Ë((
πx_def_unsig√d_fix
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_unsig√d_fix),Ç 
MEM_STAT_INFO
)))

	)

1767 
	#ggc_Æloc_˛óªd_vec_πx_def_unsig√d_fix
(
n
Ë((
πx_def_unsig√d_fix
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_unsig√d_fix),Ç 
MEM_STAT_INFO
)))

	)

1768 
	#ggc_Æloc_πx_def_unsig√d_Êﬂt
(Ë((
πx_def_unsig√d_Êﬂt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_unsig√d_ÊﬂtË
MEM_STAT_INFO
)))

	)

1769 
	#ggc_Æloc_˛óªd_πx_def_unsig√d_Êﬂt
(Ë((
πx_def_unsig√d_Êﬂt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_unsig√d_ÊﬂtË
MEM_STAT_INFO
)))

	)

1770 
	#ggc_Æloc_vec_πx_def_unsig√d_Êﬂt
(
n
Ë((
πx_def_unsig√d_Êﬂt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_unsig√d_Êﬂt),Ç 
MEM_STAT_INFO
)))

	)

1771 
	#ggc_Æloc_˛óªd_vec_πx_def_unsig√d_Êﬂt
(
n
Ë((
πx_def_unsig√d_Êﬂt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_unsig√d_Êﬂt),Ç 
MEM_STAT_INFO
)))

	)

1772 
	#ggc_Æloc_πx_def_fix
(Ë((
πx_def_fix
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_fixË
MEM_STAT_INFO
)))

	)

1773 
	#ggc_Æloc_˛óªd_πx_def_fix
(Ë((
πx_def_fix
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_fixË
MEM_STAT_INFO
)))

	)

1774 
	#ggc_Æloc_vec_πx_def_fix
(
n
Ë((
πx_def_fix
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_fix),Ç 
MEM_STAT_INFO
)))

	)

1775 
	#ggc_Æloc_˛óªd_vec_πx_def_fix
(
n
Ë((
πx_def_fix
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_fix),Ç 
MEM_STAT_INFO
)))

	)

1776 
	#ggc_Æloc_πx_def_Êﬂt
(Ë((
πx_def_Êﬂt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ÊﬂtË
MEM_STAT_INFO
)))

	)

1777 
	#ggc_Æloc_˛óªd_πx_def_Êﬂt
(Ë((
πx_def_Êﬂt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ÊﬂtË
MEM_STAT_INFO
)))

	)

1778 
	#ggc_Æloc_vec_πx_def_Êﬂt
(
n
Ë((
πx_def_Êﬂt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_Êﬂt),Ç 
MEM_STAT_INFO
)))

	)

1779 
	#ggc_Æloc_˛óªd_vec_πx_def_Êﬂt
(
n
Ë((
πx_def_Êﬂt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_Êﬂt),Ç 
MEM_STAT_INFO
)))

	)

1780 
	#ggc_Æloc_πx_def_Êﬂt_åunˇã
(Ë((
πx_def_Êﬂt_åunˇã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_Êﬂt_åunˇãË
MEM_STAT_INFO
)))

	)

1781 
	#ggc_Æloc_˛óªd_πx_def_Êﬂt_åunˇã
(Ë((
πx_def_Êﬂt_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_Êﬂt_åunˇãË
MEM_STAT_INFO
)))

	)

1782 
	#ggc_Æloc_vec_πx_def_Êﬂt_åunˇã
(
n
Ë((
πx_def_Êﬂt_åunˇã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_Êﬂt_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1783 
	#ggc_Æloc_˛óªd_vec_πx_def_Êﬂt_åunˇã
(
n
Ë((
πx_def_Êﬂt_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_Êﬂt_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1784 
	#ggc_Æloc_πx_def_Êﬂt_exãnd
(Ë((
πx_def_Êﬂt_exãnd
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_Êﬂt_exãndË
MEM_STAT_INFO
)))

	)

1785 
	#ggc_Æloc_˛óªd_πx_def_Êﬂt_exãnd
(Ë((
πx_def_Êﬂt_exãnd
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_Êﬂt_exãndË
MEM_STAT_INFO
)))

	)

1786 
	#ggc_Æloc_vec_πx_def_Êﬂt_exãnd
(
n
Ë((
πx_def_Êﬂt_exãnd
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_Êﬂt_exãnd),Ç 
MEM_STAT_INFO
)))

	)

1787 
	#ggc_Æloc_˛óªd_vec_πx_def_Êﬂt_exãnd
(
n
Ë((
πx_def_Êﬂt_exãnd
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_Êﬂt_exãnd),Ç 
MEM_STAT_INFO
)))

	)

1788 
	#ggc_Æloc_πx_def_åunˇã
(Ë((
πx_def_åunˇã
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_åunˇãË
MEM_STAT_INFO
)))

	)

1789 
	#ggc_Æloc_˛óªd_πx_def_åunˇã
(Ë((
πx_def_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_åunˇãË
MEM_STAT_INFO
)))

	)

1790 
	#ggc_Æloc_vec_πx_def_åunˇã
(
n
Ë((
πx_def_åunˇã
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1791 
	#ggc_Æloc_˛óªd_vec_πx_def_åunˇã
(
n
Ë((
πx_def_åunˇã
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_åunˇã),Ç 
MEM_STAT_INFO
)))

	)

1792 
	#ggc_Æloc_πx_def_zîo_exãnd
(Ë((
πx_def_zîo_exãnd
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_zîo_exãndË
MEM_STAT_INFO
)))

	)

1793 
	#ggc_Æloc_˛óªd_πx_def_zîo_exãnd
(Ë((
πx_def_zîo_exãnd
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_zîo_exãndË
MEM_STAT_INFO
)))

	)

1794 
	#ggc_Æloc_vec_πx_def_zîo_exãnd
(
n
Ë((
πx_def_zîo_exãnd
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_zîo_exãnd),Ç 
MEM_STAT_INFO
)))

	)

1795 
	#ggc_Æloc_˛óªd_vec_πx_def_zîo_exãnd
(
n
Ë((
πx_def_zîo_exãnd
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_zîo_exãnd),Ç 
MEM_STAT_INFO
)))

	)

1796 
	#ggc_Æloc_πx_def_sign_exãnd
(Ë((
πx_def_sign_exãnd
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_sign_exãndË
MEM_STAT_INFO
)))

	)

1797 
	#ggc_Æloc_˛óªd_πx_def_sign_exãnd
(Ë((
πx_def_sign_exãnd
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_sign_exãndË
MEM_STAT_INFO
)))

	)

1798 
	#ggc_Æloc_vec_πx_def_sign_exãnd
(
n
Ë((
πx_def_sign_exãnd
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_sign_exãnd),Ç 
MEM_STAT_INFO
)))

	)

1799 
	#ggc_Æloc_˛óªd_vec_πx_def_sign_exãnd
(
n
Ë((
πx_def_sign_exãnd
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_sign_exãnd),Ç 
MEM_STAT_INFO
)))

	)

1800 
	#ggc_Æloc_πx_def_…gt
(Ë((
πx_def_…gt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_…gtË
MEM_STAT_INFO
)))

	)

1801 
	#ggc_Æloc_˛óªd_πx_def_…gt
(Ë((
πx_def_…gt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_…gtË
MEM_STAT_INFO
)))

	)

1802 
	#ggc_Æloc_vec_πx_def_…gt
(
n
Ë((
πx_def_…gt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_…gt),Ç 
MEM_STAT_INFO
)))

	)

1803 
	#ggc_Æloc_˛óªd_vec_πx_def_…gt
(
n
Ë((
πx_def_…gt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_…gt),Ç 
MEM_STAT_INFO
)))

	)

1804 
	#ggc_Æloc_πx_def_u∆t
(Ë((
πx_def_u∆t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_u∆tË
MEM_STAT_INFO
)))

	)

1805 
	#ggc_Æloc_˛óªd_πx_def_u∆t
(Ë((
πx_def_u∆t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_u∆tË
MEM_STAT_INFO
)))

	)

1806 
	#ggc_Æloc_vec_πx_def_u∆t
(
n
Ë((
πx_def_u∆t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_u∆t),Ç 
MEM_STAT_INFO
)))

	)

1807 
	#ggc_Æloc_˛óªd_vec_πx_def_u∆t
(
n
Ë((
πx_def_u∆t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_u∆t),Ç 
MEM_STAT_INFO
)))

	)

1808 
	#ggc_Æloc_πx_def_u∆e
(Ë((
πx_def_u∆e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_u∆eË
MEM_STAT_INFO
)))

	)

1809 
	#ggc_Æloc_˛óªd_πx_def_u∆e
(Ë((
πx_def_u∆e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_u∆eË
MEM_STAT_INFO
)))

	)

1810 
	#ggc_Æloc_vec_πx_def_u∆e
(
n
Ë((
πx_def_u∆e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_u∆e),Ç 
MEM_STAT_INFO
)))

	)

1811 
	#ggc_Æloc_˛óªd_vec_πx_def_u∆e
(
n
Ë((
πx_def_u∆e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_u∆e),Ç 
MEM_STAT_INFO
)))

	)

1812 
	#ggc_Æloc_πx_def_ungt
(Ë((
πx_def_ungt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ungtË
MEM_STAT_INFO
)))

	)

1813 
	#ggc_Æloc_˛óªd_πx_def_ungt
(Ë((
πx_def_ungt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ungtË
MEM_STAT_INFO
)))

	)

1814 
	#ggc_Æloc_vec_πx_def_ungt
(
n
Ë((
πx_def_ungt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ungt),Ç 
MEM_STAT_INFO
)))

	)

1815 
	#ggc_Æloc_˛óªd_vec_πx_def_ungt
(
n
Ë((
πx_def_ungt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ungt),Ç 
MEM_STAT_INFO
)))

	)

1816 
	#ggc_Æloc_πx_def_unge
(Ë((
πx_def_unge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ungeË
MEM_STAT_INFO
)))

	)

1817 
	#ggc_Æloc_˛óªd_πx_def_unge
(Ë((
πx_def_unge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ungeË
MEM_STAT_INFO
)))

	)

1818 
	#ggc_Æloc_vec_πx_def_unge
(
n
Ë((
πx_def_unge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_unge),Ç 
MEM_STAT_INFO
)))

	)

1819 
	#ggc_Æloc_˛óªd_vec_πx_def_unge
(
n
Ë((
πx_def_unge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_unge),Ç 
MEM_STAT_INFO
)))

	)

1820 
	#ggc_Æloc_πx_def_u√q
(Ë((
πx_def_u√q
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_u√qË
MEM_STAT_INFO
)))

	)

1821 
	#ggc_Æloc_˛óªd_πx_def_u√q
(Ë((
πx_def_u√q
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_u√qË
MEM_STAT_INFO
)))

	)

1822 
	#ggc_Æloc_vec_πx_def_u√q
(
n
Ë((
πx_def_u√q
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_u√q),Ç 
MEM_STAT_INFO
)))

	)

1823 
	#ggc_Æloc_˛óªd_vec_πx_def_u√q
(
n
Ë((
πx_def_u√q
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_u√q),Ç 
MEM_STAT_INFO
)))

	)

1824 
	#ggc_Æloc_πx_def_‹dîed
(Ë((
πx_def_‹dîed
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_‹dîedË
MEM_STAT_INFO
)))

	)

1825 
	#ggc_Æloc_˛óªd_πx_def_‹dîed
(Ë((
πx_def_‹dîed
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_‹dîedË
MEM_STAT_INFO
)))

	)

1826 
	#ggc_Æloc_vec_πx_def_‹dîed
(
n
Ë((
πx_def_‹dîed
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_‹dîed),Ç 
MEM_STAT_INFO
)))

	)

1827 
	#ggc_Æloc_˛óªd_vec_πx_def_‹dîed
(
n
Ë((
πx_def_‹dîed
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_‹dîed),Ç 
MEM_STAT_INFO
)))

	)

1828 
	#ggc_Æloc_πx_def_un‹dîed
(Ë((
πx_def_un‹dîed
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_un‹dîedË
MEM_STAT_INFO
)))

	)

1829 
	#ggc_Æloc_˛óªd_πx_def_un‹dîed
(Ë((
πx_def_un‹dîed
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_un‹dîedË
MEM_STAT_INFO
)))

	)

1830 
	#ggc_Æloc_vec_πx_def_un‹dîed
(
n
Ë((
πx_def_un‹dîed
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_un‹dîed),Ç 
MEM_STAT_INFO
)))

	)

1831 
	#ggc_Æloc_˛óªd_vec_πx_def_un‹dîed
(
n
Ë((
πx_def_un‹dîed
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_un‹dîed),Ç 
MEM_STAT_INFO
)))

	)

1832 
	#ggc_Æloc_πx_def_…u
(Ë((
πx_def_…u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_…uË
MEM_STAT_INFO
)))

	)

1833 
	#ggc_Æloc_˛óªd_πx_def_…u
(Ë((
πx_def_…u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_…uË
MEM_STAT_INFO
)))

	)

1834 
	#ggc_Æloc_vec_πx_def_…u
(
n
Ë((
πx_def_…u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_…u),Ç 
MEM_STAT_INFO
)))

	)

1835 
	#ggc_Æloc_˛óªd_vec_πx_def_…u
(
n
Ë((
πx_def_…u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_…u),Ç 
MEM_STAT_INFO
)))

	)

1836 
	#ggc_Æloc_πx_def_Àu
(Ë((
πx_def_Àu
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ÀuË
MEM_STAT_INFO
)))

	)

1837 
	#ggc_Æloc_˛óªd_πx_def_Àu
(Ë((
πx_def_Àu
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ÀuË
MEM_STAT_INFO
)))

	)

1838 
	#ggc_Æloc_vec_πx_def_Àu
(
n
Ë((
πx_def_Àu
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_Àu),Ç 
MEM_STAT_INFO
)))

	)

1839 
	#ggc_Æloc_˛óªd_vec_πx_def_Àu
(
n
Ë((
πx_def_Àu
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_Àu),Ç 
MEM_STAT_INFO
)))

	)

1840 
	#ggc_Æloc_πx_def_gtu
(Ë((
πx_def_gtu
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_gtuË
MEM_STAT_INFO
)))

	)

1841 
	#ggc_Æloc_˛óªd_πx_def_gtu
(Ë((
πx_def_gtu
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_gtuË
MEM_STAT_INFO
)))

	)

1842 
	#ggc_Æloc_vec_πx_def_gtu
(
n
Ë((
πx_def_gtu
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_gtu),Ç 
MEM_STAT_INFO
)))

	)

1843 
	#ggc_Æloc_˛óªd_vec_πx_def_gtu
(
n
Ë((
πx_def_gtu
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_gtu),Ç 
MEM_STAT_INFO
)))

	)

1844 
	#ggc_Æloc_πx_def_geu
(Ë((
πx_def_geu
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_geuË
MEM_STAT_INFO
)))

	)

1845 
	#ggc_Æloc_˛óªd_πx_def_geu
(Ë((
πx_def_geu
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_geuË
MEM_STAT_INFO
)))

	)

1846 
	#ggc_Æloc_vec_πx_def_geu
(
n
Ë((
πx_def_geu
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_geu),Ç 
MEM_STAT_INFO
)))

	)

1847 
	#ggc_Æloc_˛óªd_vec_πx_def_geu
(
n
Ë((
πx_def_geu
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_geu),Ç 
MEM_STAT_INFO
)))

	)

1848 
	#ggc_Æloc_πx_def_…
(Ë((
πx_def_…
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_…Ë
MEM_STAT_INFO
)))

	)

1849 
	#ggc_Æloc_˛óªd_πx_def_…
(Ë((
πx_def_…
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_…Ë
MEM_STAT_INFO
)))

	)

1850 
	#ggc_Æloc_vec_πx_def_…
(
n
Ë((
πx_def_…
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_…),Ç 
MEM_STAT_INFO
)))

	)

1851 
	#ggc_Æloc_˛óªd_vec_πx_def_…
(
n
Ë((
πx_def_…
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_…),Ç 
MEM_STAT_INFO
)))

	)

1852 
	#ggc_Æloc_πx_def_À
(Ë((
πx_def_À
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ÀË
MEM_STAT_INFO
)))

	)

1853 
	#ggc_Æloc_˛óªd_πx_def_À
(Ë((
πx_def_À
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ÀË
MEM_STAT_INFO
)))

	)

1854 
	#ggc_Æloc_vec_πx_def_À
(
n
Ë((
πx_def_À
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_À),Ç 
MEM_STAT_INFO
)))

	)

1855 
	#ggc_Æloc_˛óªd_vec_πx_def_À
(
n
Ë((
πx_def_À
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_À),Ç 
MEM_STAT_INFO
)))

	)

1856 
	#ggc_Æloc_πx_def_gt
(Ë((
πx_def_gt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_gtË
MEM_STAT_INFO
)))

	)

1857 
	#ggc_Æloc_˛óªd_πx_def_gt
(Ë((
πx_def_gt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_gtË
MEM_STAT_INFO
)))

	)

1858 
	#ggc_Æloc_vec_πx_def_gt
(
n
Ë((
πx_def_gt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_gt),Ç 
MEM_STAT_INFO
)))

	)

1859 
	#ggc_Æloc_˛óªd_vec_πx_def_gt
(
n
Ë((
πx_def_gt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_gt),Ç 
MEM_STAT_INFO
)))

	)

1860 
	#ggc_Æloc_πx_def_ge
(Ë((
πx_def_ge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_geË
MEM_STAT_INFO
)))

	)

1861 
	#ggc_Æloc_˛óªd_πx_def_ge
(Ë((
πx_def_ge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_geË
MEM_STAT_INFO
)))

	)

1862 
	#ggc_Æloc_vec_πx_def_ge
(
n
Ë((
πx_def_ge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ge),Ç 
MEM_STAT_INFO
)))

	)

1863 
	#ggc_Æloc_˛óªd_vec_πx_def_ge
(
n
Ë((
πx_def_ge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ge),Ç 
MEM_STAT_INFO
)))

	)

1864 
	#ggc_Æloc_πx_def_eq
(Ë((
πx_def_eq
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_eqË
MEM_STAT_INFO
)))

	)

1865 
	#ggc_Æloc_˛óªd_πx_def_eq
(Ë((
πx_def_eq
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_eqË
MEM_STAT_INFO
)))

	)

1866 
	#ggc_Æloc_vec_πx_def_eq
(
n
Ë((
πx_def_eq
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_eq),Ç 
MEM_STAT_INFO
)))

	)

1867 
	#ggc_Æloc_˛óªd_vec_πx_def_eq
(
n
Ë((
πx_def_eq
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_eq),Ç 
MEM_STAT_INFO
)))

	)

1868 
	#ggc_Æloc_πx_def_√
(Ë((
πx_def_√
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_√Ë
MEM_STAT_INFO
)))

	)

1869 
	#ggc_Æloc_˛óªd_πx_def_√
(Ë((
πx_def_√
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_√Ë
MEM_STAT_INFO
)))

	)

1870 
	#ggc_Æloc_vec_πx_def_√
(
n
Ë((
πx_def_√
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_√),Ç 
MEM_STAT_INFO
)))

	)

1871 
	#ggc_Æloc_˛óªd_vec_πx_def_√
(
n
Ë((
πx_def_√
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_√),Ç 
MEM_STAT_INFO
)))

	)

1872 
	#ggc_Æloc_πx_def_po°_modify
(Ë((
πx_def_po°_modify
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_po°_modifyË
MEM_STAT_INFO
)))

	)

1873 
	#ggc_Æloc_˛óªd_πx_def_po°_modify
(Ë((
πx_def_po°_modify
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_po°_modifyË
MEM_STAT_INFO
)))

	)

1874 
	#ggc_Æloc_vec_πx_def_po°_modify
(
n
Ë((
πx_def_po°_modify
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_po°_modify),Ç 
MEM_STAT_INFO
)))

	)

1875 
	#ggc_Æloc_˛óªd_vec_πx_def_po°_modify
(
n
Ë((
πx_def_po°_modify
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_po°_modify),Ç 
MEM_STAT_INFO
)))

	)

1876 
	#ggc_Æloc_πx_def_¥e_modify
(Ë((
πx_def_¥e_modify
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_¥e_modifyË
MEM_STAT_INFO
)))

	)

1877 
	#ggc_Æloc_˛óªd_πx_def_¥e_modify
(Ë((
πx_def_¥e_modify
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_¥e_modifyË
MEM_STAT_INFO
)))

	)

1878 
	#ggc_Æloc_vec_πx_def_¥e_modify
(
n
Ë((
πx_def_¥e_modify
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_¥e_modify),Ç 
MEM_STAT_INFO
)))

	)

1879 
	#ggc_Æloc_˛óªd_vec_πx_def_¥e_modify
(
n
Ë((
πx_def_¥e_modify
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_¥e_modify),Ç 
MEM_STAT_INFO
)))

	)

1880 
	#ggc_Æloc_πx_def_po°_öc
(Ë((
πx_def_po°_öc
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_po°_öcË
MEM_STAT_INFO
)))

	)

1881 
	#ggc_Æloc_˛óªd_πx_def_po°_öc
(Ë((
πx_def_po°_öc
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_po°_öcË
MEM_STAT_INFO
)))

	)

1882 
	#ggc_Æloc_vec_πx_def_po°_öc
(
n
Ë((
πx_def_po°_öc
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_po°_öc),Ç 
MEM_STAT_INFO
)))

	)

1883 
	#ggc_Æloc_˛óªd_vec_πx_def_po°_öc
(
n
Ë((
πx_def_po°_öc
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_po°_öc),Ç 
MEM_STAT_INFO
)))

	)

1884 
	#ggc_Æloc_πx_def_po°_dec
(Ë((
πx_def_po°_dec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_po°_decË
MEM_STAT_INFO
)))

	)

1885 
	#ggc_Æloc_˛óªd_πx_def_po°_dec
(Ë((
πx_def_po°_dec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_po°_decË
MEM_STAT_INFO
)))

	)

1886 
	#ggc_Æloc_vec_πx_def_po°_dec
(
n
Ë((
πx_def_po°_dec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_po°_dec),Ç 
MEM_STAT_INFO
)))

	)

1887 
	#ggc_Æloc_˛óªd_vec_πx_def_po°_dec
(
n
Ë((
πx_def_po°_dec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_po°_dec),Ç 
MEM_STAT_INFO
)))

	)

1888 
	#ggc_Æloc_πx_def_¥e_öc
(Ë((
πx_def_¥e_öc
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_¥e_öcË
MEM_STAT_INFO
)))

	)

1889 
	#ggc_Æloc_˛óªd_πx_def_¥e_öc
(Ë((
πx_def_¥e_öc
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_¥e_öcË
MEM_STAT_INFO
)))

	)

1890 
	#ggc_Æloc_vec_πx_def_¥e_öc
(
n
Ë((
πx_def_¥e_öc
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_¥e_öc),Ç 
MEM_STAT_INFO
)))

	)

1891 
	#ggc_Æloc_˛óªd_vec_πx_def_¥e_öc
(
n
Ë((
πx_def_¥e_öc
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_¥e_öc),Ç 
MEM_STAT_INFO
)))

	)

1892 
	#ggc_Æloc_πx_def_¥e_dec
(Ë((
πx_def_¥e_dec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_¥e_decË
MEM_STAT_INFO
)))

	)

1893 
	#ggc_Æloc_˛óªd_πx_def_¥e_dec
(Ë((
πx_def_¥e_dec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_¥e_decË
MEM_STAT_INFO
)))

	)

1894 
	#ggc_Æloc_vec_πx_def_¥e_dec
(
n
Ë((
πx_def_¥e_dec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_¥e_dec),Ç 
MEM_STAT_INFO
)))

	)

1895 
	#ggc_Æloc_˛óªd_vec_πx_def_¥e_dec
(
n
Ë((
πx_def_¥e_dec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_¥e_dec),Ç 
MEM_STAT_INFO
)))

	)

1896 
	#ggc_Æloc_πx_def_umax
(Ë((
πx_def_umax
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_umaxË
MEM_STAT_INFO
)))

	)

1897 
	#ggc_Æloc_˛óªd_πx_def_umax
(Ë((
πx_def_umax
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_umaxË
MEM_STAT_INFO
)))

	)

1898 
	#ggc_Æloc_vec_πx_def_umax
(
n
Ë((
πx_def_umax
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_umax),Ç 
MEM_STAT_INFO
)))

	)

1899 
	#ggc_Æloc_˛óªd_vec_πx_def_umax
(
n
Ë((
πx_def_umax
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_umax),Ç 
MEM_STAT_INFO
)))

	)

1900 
	#ggc_Æloc_πx_def_umö
(Ë((
πx_def_umö
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_umöË
MEM_STAT_INFO
)))

	)

1901 
	#ggc_Æloc_˛óªd_πx_def_umö
(Ë((
πx_def_umö
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_umöË
MEM_STAT_INFO
)))

	)

1902 
	#ggc_Æloc_vec_πx_def_umö
(
n
Ë((
πx_def_umö
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_umö),Ç 
MEM_STAT_INFO
)))

	)

1903 
	#ggc_Æloc_˛óªd_vec_πx_def_umö
(
n
Ë((
πx_def_umö
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_umö),Ç 
MEM_STAT_INFO
)))

	)

1904 
	#ggc_Æloc_πx_def_smax
(Ë((
πx_def_smax
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_smaxË
MEM_STAT_INFO
)))

	)

1905 
	#ggc_Æloc_˛óªd_πx_def_smax
(Ë((
πx_def_smax
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_smaxË
MEM_STAT_INFO
)))

	)

1906 
	#ggc_Æloc_vec_πx_def_smax
(
n
Ë((
πx_def_smax
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_smax),Ç 
MEM_STAT_INFO
)))

	)

1907 
	#ggc_Æloc_˛óªd_vec_πx_def_smax
(
n
Ë((
πx_def_smax
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_smax),Ç 
MEM_STAT_INFO
)))

	)

1908 
	#ggc_Æloc_πx_def_smö
(Ë((
πx_def_smö
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_smöË
MEM_STAT_INFO
)))

	)

1909 
	#ggc_Æloc_˛óªd_πx_def_smö
(Ë((
πx_def_smö
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_smöË
MEM_STAT_INFO
)))

	)

1910 
	#ggc_Æloc_vec_πx_def_smö
(
n
Ë((
πx_def_smö
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_smö),Ç 
MEM_STAT_INFO
)))

	)

1911 
	#ggc_Æloc_˛óªd_vec_πx_def_smö
(
n
Ë((
πx_def_smö
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_smö),Ç 
MEM_STAT_INFO
)))

	)

1912 
	#ggc_Æloc_πx_def_rŸ©ît
(Ë((
πx_def_rŸ©ît
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_rŸ©îtË
MEM_STAT_INFO
)))

	)

1913 
	#ggc_Æloc_˛óªd_πx_def_rŸ©ît
(Ë((
πx_def_rŸ©ît
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_rŸ©îtË
MEM_STAT_INFO
)))

	)

1914 
	#ggc_Æloc_vec_πx_def_rŸ©ît
(
n
Ë((
πx_def_rŸ©ît
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_rŸ©ît),Ç 
MEM_STAT_INFO
)))

	)

1915 
	#ggc_Æloc_˛óªd_vec_πx_def_rŸ©ît
(
n
Ë((
πx_def_rŸ©ît
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_rŸ©ît),Ç 
MEM_STAT_INFO
)))

	)

1916 
	#ggc_Æloc_πx_def_lshi·π
(Ë((
πx_def_lshi·π
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_lshi·πË
MEM_STAT_INFO
)))

	)

1917 
	#ggc_Æloc_˛óªd_πx_def_lshi·π
(Ë((
πx_def_lshi·π
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_lshi·πË
MEM_STAT_INFO
)))

	)

1918 
	#ggc_Æloc_vec_πx_def_lshi·π
(
n
Ë((
πx_def_lshi·π
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_lshi·π),Ç 
MEM_STAT_INFO
)))

	)

1919 
	#ggc_Æloc_˛óªd_vec_πx_def_lshi·π
(
n
Ë((
πx_def_lshi·π
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_lshi·π),Ç 
MEM_STAT_INFO
)))

	)

1920 
	#ggc_Æloc_πx_def_ashi·π
(Ë((
πx_def_ashi·π
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ashi·πË
MEM_STAT_INFO
)))

	)

1921 
	#ggc_Æloc_˛óªd_πx_def_ashi·π
(Ë((
πx_def_ashi·π
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ashi·πË
MEM_STAT_INFO
)))

	)

1922 
	#ggc_Æloc_vec_πx_def_ashi·π
(
n
Ë((
πx_def_ashi·π
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ashi·π),Ç 
MEM_STAT_INFO
)))

	)

1923 
	#ggc_Æloc_˛óªd_vec_πx_def_ashi·π
(
n
Ë((
πx_def_ashi·π
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ashi·π),Ç 
MEM_STAT_INFO
)))

	)

1924 
	#ggc_Æloc_πx_def_rŸ©e
(Ë((
πx_def_rŸ©e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_rŸ©eË
MEM_STAT_INFO
)))

	)

1925 
	#ggc_Æloc_˛óªd_πx_def_rŸ©e
(Ë((
πx_def_rŸ©e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_rŸ©eË
MEM_STAT_INFO
)))

	)

1926 
	#ggc_Æloc_vec_πx_def_rŸ©e
(
n
Ë((
πx_def_rŸ©e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_rŸ©e),Ç 
MEM_STAT_INFO
)))

	)

1927 
	#ggc_Æloc_˛óªd_vec_πx_def_rŸ©e
(
n
Ë((
πx_def_rŸ©e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_rŸ©e),Ç 
MEM_STAT_INFO
)))

	)

1928 
	#ggc_Æloc_πx_def_ashi·
(Ë((
πx_def_ashi·
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ashi·Ë
MEM_STAT_INFO
)))

	)

1929 
	#ggc_Æloc_˛óªd_πx_def_ashi·
(Ë((
πx_def_ashi·
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ashi·Ë
MEM_STAT_INFO
)))

	)

1930 
	#ggc_Æloc_vec_πx_def_ashi·
(
n
Ë((
πx_def_ashi·
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ashi·),Ç 
MEM_STAT_INFO
)))

	)

1931 
	#ggc_Æloc_˛óªd_vec_πx_def_ashi·
(
n
Ë((
πx_def_ashi·
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ashi·),Ç 
MEM_STAT_INFO
)))

	)

1932 
	#ggc_Æloc_πx_def_nŸ
(Ë((
πx_def_nŸ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_nŸË
MEM_STAT_INFO
)))

	)

1933 
	#ggc_Æloc_˛óªd_πx_def_nŸ
(Ë((
πx_def_nŸ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_nŸË
MEM_STAT_INFO
)))

	)

1934 
	#ggc_Æloc_vec_πx_def_nŸ
(
n
Ë((
πx_def_nŸ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_nŸ),Ç 
MEM_STAT_INFO
)))

	)

1935 
	#ggc_Æloc_˛óªd_vec_πx_def_nŸ
(
n
Ë((
πx_def_nŸ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_nŸ),Ç 
MEM_STAT_INFO
)))

	)

1936 
	#ggc_Æloc_πx_def_x‹
(Ë((
πx_def_x‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_x‹Ë
MEM_STAT_INFO
)))

	)

1937 
	#ggc_Æloc_˛óªd_πx_def_x‹
(Ë((
πx_def_x‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_x‹Ë
MEM_STAT_INFO
)))

	)

1938 
	#ggc_Æloc_vec_πx_def_x‹
(
n
Ë((
πx_def_x‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_x‹),Ç 
MEM_STAT_INFO
)))

	)

1939 
	#ggc_Æloc_˛óªd_vec_πx_def_x‹
(
n
Ë((
πx_def_x‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_x‹),Ç 
MEM_STAT_INFO
)))

	)

1940 
	#ggc_Æloc_πx_def_i‹
(Ë((
πx_def_i‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_i‹Ë
MEM_STAT_INFO
)))

	)

1941 
	#ggc_Æloc_˛óªd_πx_def_i‹
(Ë((
πx_def_i‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_i‹Ë
MEM_STAT_INFO
)))

	)

1942 
	#ggc_Æloc_vec_πx_def_i‹
(
n
Ë((
πx_def_i‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_i‹),Ç 
MEM_STAT_INFO
)))

	)

1943 
	#ggc_Æloc_˛óªd_vec_πx_def_i‹
(
n
Ë((
πx_def_i‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_i‹),Ç 
MEM_STAT_INFO
)))

	)

1944 
	#ggc_Æloc_πx_def_™d
(Ë((
πx_def_™d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_™dË
MEM_STAT_INFO
)))

	)

1945 
	#ggc_Æloc_˛óªd_πx_def_™d
(Ë((
πx_def_™d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_™dË
MEM_STAT_INFO
)))

	)

1946 
	#ggc_Æloc_vec_πx_def_™d
(
n
Ë((
πx_def_™d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_™d),Ç 
MEM_STAT_INFO
)))

	)

1947 
	#ggc_Æloc_˛óªd_vec_πx_def_™d
(
n
Ë((
πx_def_™d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_™d),Ç 
MEM_STAT_INFO
)))

	)

1948 
	#ggc_Æloc_πx_def_umod
(Ë((
πx_def_umod
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_umodË
MEM_STAT_INFO
)))

	)

1949 
	#ggc_Æloc_˛óªd_πx_def_umod
(Ë((
πx_def_umod
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_umodË
MEM_STAT_INFO
)))

	)

1950 
	#ggc_Æloc_vec_πx_def_umod
(
n
Ë((
πx_def_umod
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_umod),Ç 
MEM_STAT_INFO
)))

	)

1951 
	#ggc_Æloc_˛óªd_vec_πx_def_umod
(
n
Ë((
πx_def_umod
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_umod),Ç 
MEM_STAT_INFO
)))

	)

1952 
	#ggc_Æloc_πx_def_udiv
(Ë((
πx_def_udiv
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_udivË
MEM_STAT_INFO
)))

	)

1953 
	#ggc_Æloc_˛óªd_πx_def_udiv
(Ë((
πx_def_udiv
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_udivË
MEM_STAT_INFO
)))

	)

1954 
	#ggc_Æloc_vec_πx_def_udiv
(
n
Ë((
πx_def_udiv
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_udiv),Ç 
MEM_STAT_INFO
)))

	)

1955 
	#ggc_Æloc_˛óªd_vec_πx_def_udiv
(
n
Ë((
πx_def_udiv
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_udiv),Ç 
MEM_STAT_INFO
)))

	)

1956 
	#ggc_Æloc_πx_def_mod
(Ë((
πx_def_mod
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_modË
MEM_STAT_INFO
)))

	)

1957 
	#ggc_Æloc_˛óªd_πx_def_mod
(Ë((
πx_def_mod
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_modË
MEM_STAT_INFO
)))

	)

1958 
	#ggc_Æloc_vec_πx_def_mod
(
n
Ë((
πx_def_mod
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_mod),Ç 
MEM_STAT_INFO
)))

	)

1959 
	#ggc_Æloc_˛óªd_vec_πx_def_mod
(
n
Ë((
πx_def_mod
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_mod),Ç 
MEM_STAT_INFO
)))

	)

1960 
	#ggc_Æloc_πx_def_us_div
(Ë((
πx_def_us_div
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_divË
MEM_STAT_INFO
)))

	)

1961 
	#ggc_Æloc_˛óªd_πx_def_us_div
(Ë((
πx_def_us_div
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_divË
MEM_STAT_INFO
)))

	)

1962 
	#ggc_Æloc_vec_πx_def_us_div
(
n
Ë((
πx_def_us_div
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_div),Ç 
MEM_STAT_INFO
)))

	)

1963 
	#ggc_Æloc_˛óªd_vec_πx_def_us_div
(
n
Ë((
πx_def_us_div
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_div),Ç 
MEM_STAT_INFO
)))

	)

1964 
	#ggc_Æloc_πx_def_ss_div
(Ë((
πx_def_ss_div
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_divË
MEM_STAT_INFO
)))

	)

1965 
	#ggc_Æloc_˛óªd_πx_def_ss_div
(Ë((
πx_def_ss_div
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_divË
MEM_STAT_INFO
)))

	)

1966 
	#ggc_Æloc_vec_πx_def_ss_div
(
n
Ë((
πx_def_ss_div
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_div),Ç 
MEM_STAT_INFO
)))

	)

1967 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_div
(
n
Ë((
πx_def_ss_div
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_div),Ç 
MEM_STAT_INFO
)))

	)

1968 
	#ggc_Æloc_πx_def_div
(Ë((
πx_def_div
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_divË
MEM_STAT_INFO
)))

	)

1969 
	#ggc_Æloc_˛óªd_πx_def_div
(Ë((
πx_def_div
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_divË
MEM_STAT_INFO
)))

	)

1970 
	#ggc_Æloc_vec_πx_def_div
(
n
Ë((
πx_def_div
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_div),Ç 
MEM_STAT_INFO
)))

	)

1971 
	#ggc_Æloc_˛óªd_vec_πx_def_div
(
n
Ë((
πx_def_div
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_div),Ç 
MEM_STAT_INFO
)))

	)

1972 
	#ggc_Æloc_πx_def_us_mu…
(Ë((
πx_def_us_mu…
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_us_mu…Ë
MEM_STAT_INFO
)))

	)

1973 
	#ggc_Æloc_˛óªd_πx_def_us_mu…
(Ë((
πx_def_us_mu…
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_us_mu…Ë
MEM_STAT_INFO
)))

	)

1974 
	#ggc_Æloc_vec_πx_def_us_mu…
(
n
Ë((
πx_def_us_mu…
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_us_mu…),Ç 
MEM_STAT_INFO
)))

	)

1975 
	#ggc_Æloc_˛óªd_vec_πx_def_us_mu…
(
n
Ë((
πx_def_us_mu…
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_us_mu…),Ç 
MEM_STAT_INFO
)))

	)

1976 
	#ggc_Æloc_πx_def_ss_mu…
(Ë((
πx_def_ss_mu…
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ss_mu…Ë
MEM_STAT_INFO
)))

	)

1977 
	#ggc_Æloc_˛óªd_πx_def_ss_mu…
(Ë((
πx_def_ss_mu…
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ss_mu…Ë
MEM_STAT_INFO
)))

	)

1978 
	#ggc_Æloc_vec_πx_def_ss_mu…
(
n
Ë((
πx_def_ss_mu…
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ss_mu…),Ç 
MEM_STAT_INFO
)))

	)

1979 
	#ggc_Æloc_˛óªd_vec_πx_def_ss_mu…
(
n
Ë((
πx_def_ss_mu…
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ss_mu…),Ç 
MEM_STAT_INFO
)))

	)

1980 
	#ggc_Æloc_πx_def_mu…
(Ë((
πx_def_mu…
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_mu…Ë
MEM_STAT_INFO
)))

	)

1981 
	#ggc_Æloc_˛óªd_πx_def_mu…
(Ë((
πx_def_mu…
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_mu…Ë
MEM_STAT_INFO
)))

	)

1982 
	#ggc_Æloc_vec_πx_def_mu…
(
n
Ë((
πx_def_mu…
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_mu…),Ç 
MEM_STAT_INFO
)))

	)

1983 
	#ggc_Æloc_˛óªd_vec_πx_def_mu…
(
n
Ë((
πx_def_mu…
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_mu…),Ç 
MEM_STAT_INFO
)))

	)

1984 
	#ggc_Æloc_πx_def_√g
(Ë((
πx_def_√g
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_√gË
MEM_STAT_INFO
)))

	)

1985 
	#ggc_Æloc_˛óªd_πx_def_√g
(Ë((
πx_def_√g
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_√gË
MEM_STAT_INFO
)))

	)

1986 
	#ggc_Æloc_vec_πx_def_√g
(
n
Ë((
πx_def_√g
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_√g),Ç 
MEM_STAT_INFO
)))

	)

1987 
	#ggc_Æloc_˛óªd_vec_πx_def_√g
(
n
Ë((
πx_def_√g
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_√g),Ç 
MEM_STAT_INFO
)))

	)

1988 
	#ggc_Æloc_πx_def_möus
(Ë((
πx_def_möus
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_möusË
MEM_STAT_INFO
)))

	)

1989 
	#ggc_Æloc_˛óªd_πx_def_möus
(Ë((
πx_def_möus
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_möusË
MEM_STAT_INFO
)))

	)

1990 
	#ggc_Æloc_vec_πx_def_möus
(
n
Ë((
πx_def_möus
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_möus),Ç 
MEM_STAT_INFO
)))

	)

1991 
	#ggc_Æloc_˛óªd_vec_πx_def_möus
(
n
Ë((
πx_def_möus
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_möus),Ç 
MEM_STAT_INFO
)))

	)

1992 
	#ggc_Æloc_πx_def_∂us
(Ë((
πx_def_∂us
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_∂usË
MEM_STAT_INFO
)))

	)

1993 
	#ggc_Æloc_˛óªd_πx_def_∂us
(Ë((
πx_def_∂us
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_∂usË
MEM_STAT_INFO
)))

	)

1994 
	#ggc_Æloc_vec_πx_def_∂us
(
n
Ë((
πx_def_∂us
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_∂us),Ç 
MEM_STAT_INFO
)))

	)

1995 
	#ggc_Æloc_˛óªd_vec_πx_def_∂us
(
n
Ë((
πx_def_∂us
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_∂us),Ç 
MEM_STAT_INFO
)))

	)

1996 
	#ggc_Æloc_πx_def_com∑ª
(Ë((
πx_def_com∑ª
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_com∑ªË
MEM_STAT_INFO
)))

	)

1997 
	#ggc_Æloc_˛óªd_πx_def_com∑ª
(Ë((
πx_def_com∑ª
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_com∑ªË
MEM_STAT_INFO
)))

	)

1998 
	#ggc_Æloc_vec_πx_def_com∑ª
(
n
Ë((
πx_def_com∑ª
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_com∑ª),Ç 
MEM_STAT_INFO
)))

	)

1999 
	#ggc_Æloc_˛óªd_vec_πx_def_com∑ª
(
n
Ë((
πx_def_com∑ª
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_com∑ª),Ç 
MEM_STAT_INFO
)))

	)

2000 
	#ggc_Æloc_πx_def_if_thí_ñ£
(Ë((
πx_def_if_thí_ñ£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_if_thí_ñ£Ë
MEM_STAT_INFO
)))

	)

2001 
	#ggc_Æloc_˛óªd_πx_def_if_thí_ñ£
(Ë((
πx_def_if_thí_ñ£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_if_thí_ñ£Ë
MEM_STAT_INFO
)))

	)

2002 
	#ggc_Æloc_vec_πx_def_if_thí_ñ£
(
n
Ë((
πx_def_if_thí_ñ£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_if_thí_ñ£),Ç 
MEM_STAT_INFO
)))

	)

2003 
	#ggc_Æloc_˛óªd_vec_πx_def_if_thí_ñ£
(
n
Ë((
πx_def_if_thí_ñ£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_if_thí_ñ£),Ç 
MEM_STAT_INFO
)))

	)

2004 
	#ggc_Æloc_πx_def_cc0
(Ë((
πx_def_cc0
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_cc0Ë
MEM_STAT_INFO
)))

	)

2005 
	#ggc_Æloc_˛óªd_πx_def_cc0
(Ë((
πx_def_cc0
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_cc0Ë
MEM_STAT_INFO
)))

	)

2006 
	#ggc_Æloc_vec_πx_def_cc0
(
n
Ë((
πx_def_cc0
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_cc0),Ç 
MEM_STAT_INFO
)))

	)

2007 
	#ggc_Æloc_˛óªd_vec_πx_def_cc0
(
n
Ë((
πx_def_cc0
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_cc0),Ç 
MEM_STAT_INFO
)))

	)

2008 
	#ggc_Æloc_πx_def_symbﬁ_ªf
(Ë((
πx_def_symbﬁ_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_symbﬁ_ªfË
MEM_STAT_INFO
)))

	)

2009 
	#ggc_Æloc_˛óªd_πx_def_symbﬁ_ªf
(Ë((
πx_def_symbﬁ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_symbﬁ_ªfË
MEM_STAT_INFO
)))

	)

2010 
	#ggc_Æloc_vec_πx_def_symbﬁ_ªf
(
n
Ë((
πx_def_symbﬁ_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_symbﬁ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2011 
	#ggc_Æloc_˛óªd_vec_πx_def_symbﬁ_ªf
(
n
Ë((
πx_def_symbﬁ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_symbﬁ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2012 
	#ggc_Æloc_Áke_uni⁄_1
(Ë((
Áke_uni⁄_1
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (Áke_uni⁄_1Ë
MEM_STAT_INFO
)))

	)

2013 
	#ggc_Æloc_˛óªd_Áke_uni⁄_1
(Ë((
Áke_uni⁄_1
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (Áke_uni⁄_1Ë
MEM_STAT_INFO
)))

	)

2014 
	#ggc_Æloc_vec_Áke_uni⁄_1
(
n
Ë((
Áke_uni⁄_1
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (Áke_uni⁄_1),Ç 
MEM_STAT_INFO
)))

	)

2015 
	#ggc_Æloc_˛óªd_vec_Áke_uni⁄_1
(
n
Ë((
Áke_uni⁄_1
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (Áke_uni⁄_1),Ç 
MEM_STAT_INFO
)))

	)

2016 
	#ggc_Æloc_πx_def_œbñ_ªf
(Ë((
πx_def_œbñ_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_œbñ_ªfË
MEM_STAT_INFO
)))

	)

2017 
	#ggc_Æloc_˛óªd_πx_def_œbñ_ªf
(Ë((
πx_def_œbñ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_œbñ_ªfË
MEM_STAT_INFO
)))

	)

2018 
	#ggc_Æloc_vec_πx_def_œbñ_ªf
(
n
Ë((
πx_def_œbñ_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_œbñ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2019 
	#ggc_Æloc_˛óªd_vec_πx_def_œbñ_ªf
(
n
Ë((
πx_def_œbñ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_œbñ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2020 
	#ggc_Æloc_πx_def_mem
(Ë((
πx_def_mem
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_memË
MEM_STAT_INFO
)))

	)

2021 
	#ggc_Æloc_˛óªd_πx_def_mem
(Ë((
πx_def_mem
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_memË
MEM_STAT_INFO
)))

	)

2022 
	#ggc_Æloc_vec_πx_def_mem
(
n
Ë((
πx_def_mem
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_mem),Ç 
MEM_STAT_INFO
)))

	)

2023 
	#ggc_Æloc_˛óªd_vec_πx_def_mem
(
n
Ë((
πx_def_mem
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_mem),Ç 
MEM_STAT_INFO
)))

	)

2024 
	#ggc_Æloc_πx_def_c⁄ˇä
(Ë((
πx_def_c⁄ˇä
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄ˇäË
MEM_STAT_INFO
)))

	)

2025 
	#ggc_Æloc_˛óªd_πx_def_c⁄ˇä
(Ë((
πx_def_c⁄ˇä
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄ˇäË
MEM_STAT_INFO
)))

	)

2026 
	#ggc_Æloc_vec_πx_def_c⁄ˇä
(
n
Ë((
πx_def_c⁄ˇä
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄ˇä),Ç 
MEM_STAT_INFO
)))

	)

2027 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄ˇä
(
n
Ë((
πx_def_c⁄ˇä
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄ˇä),Ç 
MEM_STAT_INFO
)))

	)

2028 
	#ggc_Æloc_πx_def_c⁄ˇt
(Ë((
πx_def_c⁄ˇt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄ˇtË
MEM_STAT_INFO
)))

	)

2029 
	#ggc_Æloc_˛óªd_πx_def_c⁄ˇt
(Ë((
πx_def_c⁄ˇt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄ˇtË
MEM_STAT_INFO
)))

	)

2030 
	#ggc_Æloc_vec_πx_def_c⁄ˇt
(
n
Ë((
πx_def_c⁄ˇt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄ˇt),Ç 
MEM_STAT_INFO
)))

	)

2031 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄ˇt
(
n
Ë((
πx_def_c⁄ˇt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄ˇt),Ç 
MEM_STAT_INFO
)))

	)

2032 
	#ggc_Æloc_πx_def_°ri˘_low_∑π
(Ë((
πx_def_°ri˘_low_∑π
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_°ri˘_low_∑πË
MEM_STAT_INFO
)))

	)

2033 
	#ggc_Æloc_˛óªd_πx_def_°ri˘_low_∑π
(Ë((
πx_def_°ri˘_low_∑π
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_°ri˘_low_∑πË
MEM_STAT_INFO
)))

	)

2034 
	#ggc_Æloc_vec_πx_def_°ri˘_low_∑π
(
n
Ë((
πx_def_°ri˘_low_∑π
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_°ri˘_low_∑π),Ç 
MEM_STAT_INFO
)))

	)

2035 
	#ggc_Æloc_˛óªd_vec_πx_def_°ri˘_low_∑π
(
n
Ë((
πx_def_°ri˘_low_∑π
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_°ri˘_low_∑π),Ç 
MEM_STAT_INFO
)))

	)

2036 
	#ggc_Æloc_πx_def_subªg
(Ë((
πx_def_subªg
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_subªgË
MEM_STAT_INFO
)))

	)

2037 
	#ggc_Æloc_˛óªd_πx_def_subªg
(Ë((
πx_def_subªg
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_subªgË
MEM_STAT_INFO
)))

	)

2038 
	#ggc_Æloc_vec_πx_def_subªg
(
n
Ë((
πx_def_subªg
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_subªg),Ç 
MEM_STAT_INFO
)))

	)

2039 
	#ggc_Æloc_˛óªd_vec_πx_def_subªg
(
n
Ë((
πx_def_subªg
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_subªg),Ç 
MEM_STAT_INFO
)))

	)

2040 
	#ggc_Æloc_πx_def_s¸©ch
(Ë((
πx_def_s¸©ch
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_s¸©chË
MEM_STAT_INFO
)))

	)

2041 
	#ggc_Æloc_˛óªd_πx_def_s¸©ch
(Ë((
πx_def_s¸©ch
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_s¸©chË
MEM_STAT_INFO
)))

	)

2042 
	#ggc_Æloc_vec_πx_def_s¸©ch
(
n
Ë((
πx_def_s¸©ch
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_s¸©ch),Ç 
MEM_STAT_INFO
)))

	)

2043 
	#ggc_Æloc_˛óªd_vec_πx_def_s¸©ch
(
n
Ë((
πx_def_s¸©ch
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_s¸©ch),Ç 
MEM_STAT_INFO
)))

	)

2044 
	#ggc_Æloc_πx_def_ªg
(Ë((
πx_def_ªg
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ªgË
MEM_STAT_INFO
)))

	)

2045 
	#ggc_Æloc_˛óªd_πx_def_ªg
(Ë((
πx_def_ªg
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ªgË
MEM_STAT_INFO
)))

	)

2046 
	#ggc_Æloc_vec_πx_def_ªg
(
n
Ë((
πx_def_ªg
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ªg),Ç 
MEM_STAT_INFO
)))

	)

2047 
	#ggc_Æloc_˛óªd_vec_πx_def_ªg
(
n
Ë((
πx_def_ªg
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ªg),Ç 
MEM_STAT_INFO
)))

	)

2048 
	#ggc_Æloc_πx_def_pc
(Ë((
πx_def_pc
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_pcË
MEM_STAT_INFO
)))

	)

2049 
	#ggc_Æloc_˛óªd_πx_def_pc
(Ë((
πx_def_pc
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_pcË
MEM_STAT_INFO
)))

	)

2050 
	#ggc_Æloc_vec_πx_def_pc
(
n
Ë((
πx_def_pc
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_pc),Ç 
MEM_STAT_INFO
)))

	)

2051 
	#ggc_Æloc_˛óªd_vec_πx_def_pc
(
n
Ë((
πx_def_pc
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_pc),Ç 
MEM_STAT_INFO
)))

	)

2052 
	#ggc_Æloc_πx_def_c⁄°
(Ë((
πx_def_c⁄°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄°Ë
MEM_STAT_INFO
)))

	)

2053 
	#ggc_Æloc_˛óªd_πx_def_c⁄°
(Ë((
πx_def_c⁄°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄°Ë
MEM_STAT_INFO
)))

	)

2054 
	#ggc_Æloc_vec_πx_def_c⁄°
(
n
Ë((
πx_def_c⁄°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄°),Ç 
MEM_STAT_INFO
)))

	)

2055 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄°
(
n
Ë((
πx_def_c⁄°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄°),Ç 
MEM_STAT_INFO
)))

	)

2056 
	#ggc_Æloc_πx_def_c⁄°_°rög
(Ë((
πx_def_c⁄°_°rög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄°_°rögË
MEM_STAT_INFO
)))

	)

2057 
	#ggc_Æloc_˛óªd_πx_def_c⁄°_°rög
(Ë((
πx_def_c⁄°_°rög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄°_°rögË
MEM_STAT_INFO
)))

	)

2058 
	#ggc_Æloc_vec_πx_def_c⁄°_°rög
(
n
Ë((
πx_def_c⁄°_°rög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄°_°rög),Ç 
MEM_STAT_INFO
)))

	)

2059 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄°_°rög
(
n
Ë((
πx_def_c⁄°_°rög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄°_°rög),Ç 
MEM_STAT_INFO
)))

	)

2060 
	#ggc_Æloc_πx_def_c⁄°_ve˘‹
(Ë((
πx_def_c⁄°_ve˘‹
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄°_ve˘‹Ë
MEM_STAT_INFO
)))

	)

2061 
	#ggc_Æloc_˛óªd_πx_def_c⁄°_ve˘‹
(Ë((
πx_def_c⁄°_ve˘‹
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄°_ve˘‹Ë
MEM_STAT_INFO
)))

	)

2062 
	#ggc_Æloc_vec_πx_def_c⁄°_ve˘‹
(
n
Ë((
πx_def_c⁄°_ve˘‹
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄°_ve˘‹),Ç 
MEM_STAT_INFO
)))

	)

2063 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄°_ve˘‹
(
n
Ë((
πx_def_c⁄°_ve˘‹
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄°_ve˘‹),Ç 
MEM_STAT_INFO
)))

	)

2064 
	#ggc_Æloc_πx_def_c⁄°_doubÀ
(Ë((
πx_def_c⁄°_doubÀ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄°_doubÀË
MEM_STAT_INFO
)))

	)

2065 
	#ggc_Æloc_˛óªd_πx_def_c⁄°_doubÀ
(Ë((
πx_def_c⁄°_doubÀ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄°_doubÀË
MEM_STAT_INFO
)))

	)

2066 
	#ggc_Æloc_vec_πx_def_c⁄°_doubÀ
(
n
Ë((
πx_def_c⁄°_doubÀ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄°_doubÀ),Ç 
MEM_STAT_INFO
)))

	)

2067 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄°_doubÀ
(
n
Ë((
πx_def_c⁄°_doubÀ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄°_doubÀ),Ç 
MEM_STAT_INFO
)))

	)

2068 
	#ggc_Æloc_πx_def_c⁄°_fixed
(Ë((
πx_def_c⁄°_fixed
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄°_fixedË
MEM_STAT_INFO
)))

	)

2069 
	#ggc_Æloc_˛óªd_πx_def_c⁄°_fixed
(Ë((
πx_def_c⁄°_fixed
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄°_fixedË
MEM_STAT_INFO
)))

	)

2070 
	#ggc_Æloc_vec_πx_def_c⁄°_fixed
(
n
Ë((
πx_def_c⁄°_fixed
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄°_fixed),Ç 
MEM_STAT_INFO
)))

	)

2071 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄°_fixed
(
n
Ë((
πx_def_c⁄°_fixed
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄°_fixed),Ç 
MEM_STAT_INFO
)))

	)

2072 
	#ggc_Æloc_πx_def_c⁄°_öt
(Ë((
πx_def_c⁄°_öt
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄°_ötË
MEM_STAT_INFO
)))

	)

2073 
	#ggc_Æloc_˛óªd_πx_def_c⁄°_öt
(Ë((
πx_def_c⁄°_öt
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄°_ötË
MEM_STAT_INFO
)))

	)

2074 
	#ggc_Æloc_vec_πx_def_c⁄°_öt
(
n
Ë((
πx_def_c⁄°_öt
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄°_öt),Ç 
MEM_STAT_INFO
)))

	)

2075 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄°_öt
(
n
Ë((
πx_def_c⁄°_öt
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄°_öt),Ç 
MEM_STAT_INFO
)))

	)

2076 
	#ggc_Æloc_πx_def_å≠_if
(Ë((
πx_def_å≠_if
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_å≠_ifË
MEM_STAT_INFO
)))

	)

2077 
	#ggc_Æloc_˛óªd_πx_def_å≠_if
(Ë((
πx_def_å≠_if
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_å≠_ifË
MEM_STAT_INFO
)))

	)

2078 
	#ggc_Æloc_vec_πx_def_å≠_if
(
n
Ë((
πx_def_å≠_if
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_å≠_if),Ç 
MEM_STAT_INFO
)))

	)

2079 
	#ggc_Æloc_˛óªd_vec_πx_def_å≠_if
(
n
Ë((
πx_def_å≠_if
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_å≠_if),Ç 
MEM_STAT_INFO
)))

	)

2080 
	#ggc_Æloc_πx_def_eh_ªtu∫
(Ë((
πx_def_eh_ªtu∫
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_eh_ªtu∫Ë
MEM_STAT_INFO
)))

	)

2081 
	#ggc_Æloc_˛óªd_πx_def_eh_ªtu∫
(Ë((
πx_def_eh_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_eh_ªtu∫Ë
MEM_STAT_INFO
)))

	)

2082 
	#ggc_Æloc_vec_πx_def_eh_ªtu∫
(
n
Ë((
πx_def_eh_ªtu∫
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_eh_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

2083 
	#ggc_Æloc_˛óªd_vec_πx_def_eh_ªtu∫
(
n
Ë((
πx_def_eh_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_eh_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

2084 
	#ggc_Æloc_πx_def_sim∂e_ªtu∫
(Ë((
πx_def_sim∂e_ªtu∫
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_sim∂e_ªtu∫Ë
MEM_STAT_INFO
)))

	)

2085 
	#ggc_Æloc_˛óªd_πx_def_sim∂e_ªtu∫
(Ë((
πx_def_sim∂e_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_sim∂e_ªtu∫Ë
MEM_STAT_INFO
)))

	)

2086 
	#ggc_Æloc_vec_πx_def_sim∂e_ªtu∫
(
n
Ë((
πx_def_sim∂e_ªtu∫
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_sim∂e_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

2087 
	#ggc_Æloc_˛óªd_vec_πx_def_sim∂e_ªtu∫
(
n
Ë((
πx_def_sim∂e_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_sim∂e_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

2088 
	#ggc_Æloc_πx_def_ªtu∫
(Ë((
πx_def_ªtu∫
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ªtu∫Ë
MEM_STAT_INFO
)))

	)

2089 
	#ggc_Æloc_˛óªd_πx_def_ªtu∫
(Ë((
πx_def_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ªtu∫Ë
MEM_STAT_INFO
)))

	)

2090 
	#ggc_Æloc_vec_πx_def_ªtu∫
(
n
Ë((
πx_def_ªtu∫
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

2091 
	#ggc_Æloc_˛óªd_vec_πx_def_ªtu∫
(
n
Ë((
πx_def_ªtu∫
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ªtu∫),Ç 
MEM_STAT_INFO
)))

	)

2092 
	#ggc_Æloc_πx_def_ˇŒ
(Ë((
πx_def_ˇŒ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ˇŒË
MEM_STAT_INFO
)))

	)

2093 
	#ggc_Æloc_˛óªd_πx_def_ˇŒ
(Ë((
πx_def_ˇŒ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ˇŒË
MEM_STAT_INFO
)))

	)

2094 
	#ggc_Æloc_vec_πx_def_ˇŒ
(
n
Ë((
πx_def_ˇŒ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ˇŒ),Ç 
MEM_STAT_INFO
)))

	)

2095 
	#ggc_Æloc_˛óªd_vec_πx_def_ˇŒ
(
n
Ë((
πx_def_ˇŒ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ˇŒ),Ç 
MEM_STAT_INFO
)))

	)

2096 
	#ggc_Æloc_πx_def_˛obbî
(Ë((
πx_def_˛obbî
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_˛obbîË
MEM_STAT_INFO
)))

	)

2097 
	#ggc_Æloc_˛óªd_πx_def_˛obbî
(Ë((
πx_def_˛obbî
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_˛obbîË
MEM_STAT_INFO
)))

	)

2098 
	#ggc_Æloc_vec_πx_def_˛obbî
(
n
Ë((
πx_def_˛obbî
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_˛obbî),Ç 
MEM_STAT_INFO
)))

	)

2099 
	#ggc_Æloc_˛óªd_vec_πx_def_˛obbî
(
n
Ë((
πx_def_˛obbî
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_˛obbî),Ç 
MEM_STAT_INFO
)))

	)

2100 
	#ggc_Æloc_πx_def_u£
(Ë((
πx_def_u£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_u£Ë
MEM_STAT_INFO
)))

	)

2101 
	#ggc_Æloc_˛óªd_πx_def_u£
(Ë((
πx_def_u£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_u£Ë
MEM_STAT_INFO
)))

	)

2102 
	#ggc_Æloc_vec_πx_def_u£
(
n
Ë((
πx_def_u£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_u£),Ç 
MEM_STAT_INFO
)))

	)

2103 
	#ggc_Æloc_˛óªd_vec_πx_def_u£
(
n
Ë((
πx_def_u£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_u£),Ç 
MEM_STAT_INFO
)))

	)

2104 
	#ggc_Æloc_πx_def_£t
(Ë((
πx_def_£t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_£tË
MEM_STAT_INFO
)))

	)

2105 
	#ggc_Æloc_˛óªd_πx_def_£t
(Ë((
πx_def_£t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_£tË
MEM_STAT_INFO
)))

	)

2106 
	#ggc_Æloc_vec_πx_def_£t
(
n
Ë((
πx_def_£t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_£t),Ç 
MEM_STAT_INFO
)))

	)

2107 
	#ggc_Æloc_˛óªd_vec_πx_def_£t
(
n
Ë((
πx_def_£t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_£t),Ç 
MEM_STAT_INFO
)))

	)

2108 
	#ggc_Æloc_πx_def_¥e„tch
(Ë((
πx_def_¥e„tch
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_¥e„tchË
MEM_STAT_INFO
)))

	)

2109 
	#ggc_Æloc_˛óªd_πx_def_¥e„tch
(Ë((
πx_def_¥e„tch
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_¥e„tchË
MEM_STAT_INFO
)))

	)

2110 
	#ggc_Æloc_vec_πx_def_¥e„tch
(
n
Ë((
πx_def_¥e„tch
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_¥e„tch),Ç 
MEM_STAT_INFO
)))

	)

2111 
	#ggc_Æloc_˛óªd_vec_πx_def_¥e„tch
(
n
Ë((
πx_def_¥e„tch
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_¥e„tch),Ç 
MEM_STAT_INFO
)))

	)

2112 
	#ggc_Æloc_πx_def_addr_diff_vec
(Ë((
πx_def_addr_diff_vec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_addr_diff_vecË
MEM_STAT_INFO
)))

	)

2113 
	#ggc_Æloc_˛óªd_πx_def_addr_diff_vec
(Ë((
πx_def_addr_diff_vec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_addr_diff_vecË
MEM_STAT_INFO
)))

	)

2114 
	#ggc_Æloc_vec_πx_def_addr_diff_vec
(
n
Ë((
πx_def_addr_diff_vec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_addr_diff_vec),Ç 
MEM_STAT_INFO
)))

	)

2115 
	#ggc_Æloc_˛óªd_vec_πx_def_addr_diff_vec
(
n
Ë((
πx_def_addr_diff_vec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_addr_diff_vec),Ç 
MEM_STAT_INFO
)))

	)

2116 
	#ggc_Æloc_πx_def_addr_vec
(Ë((
πx_def_addr_vec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_addr_vecË
MEM_STAT_INFO
)))

	)

2117 
	#ggc_Æloc_˛óªd_πx_def_addr_vec
(Ë((
πx_def_addr_vec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_addr_vecË
MEM_STAT_INFO
)))

	)

2118 
	#ggc_Æloc_vec_πx_def_addr_vec
(
n
Ë((
πx_def_addr_vec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_addr_vec),Ç 
MEM_STAT_INFO
)))

	)

2119 
	#ggc_Æloc_˛óªd_vec_πx_def_addr_vec
(
n
Ë((
πx_def_addr_vec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_addr_vec),Ç 
MEM_STAT_INFO
)))

	)

2120 
	#ggc_Æloc_πx_def_un•ec_vﬁ©ûe
(Ë((
πx_def_un•ec_vﬁ©ûe
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_un•ec_vﬁ©ûeË
MEM_STAT_INFO
)))

	)

2121 
	#ggc_Æloc_˛óªd_πx_def_un•ec_vﬁ©ûe
(Ë((
πx_def_un•ec_vﬁ©ûe
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_un•ec_vﬁ©ûeË
MEM_STAT_INFO
)))

	)

2122 
	#ggc_Æloc_vec_πx_def_un•ec_vﬁ©ûe
(
n
Ë((
πx_def_un•ec_vﬁ©ûe
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_un•ec_vﬁ©ûe),Ç 
MEM_STAT_INFO
)))

	)

2123 
	#ggc_Æloc_˛óªd_vec_πx_def_un•ec_vﬁ©ûe
(
n
Ë((
πx_def_un•ec_vﬁ©ûe
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_un•ec_vﬁ©ûe),Ç 
MEM_STAT_INFO
)))

	)

2124 
	#ggc_Æloc_πx_def_un•ec
(Ë((
πx_def_un•ec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_un•ecË
MEM_STAT_INFO
)))

	)

2125 
	#ggc_Æloc_˛óªd_πx_def_un•ec
(Ë((
πx_def_un•ec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_un•ecË
MEM_STAT_INFO
)))

	)

2126 
	#ggc_Æloc_vec_πx_def_un•ec
(
n
Ë((
πx_def_un•ec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_un•ec),Ç 
MEM_STAT_INFO
)))

	)

2127 
	#ggc_Æloc_˛óªd_vec_πx_def_un•ec
(
n
Ë((
πx_def_un•ec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_un•ec),Ç 
MEM_STAT_INFO
)))

	)

2128 
	#ggc_Æloc_πx_def_asm_›î™ds
(Ë((
πx_def_asm_›î™ds
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_asm_›î™dsË
MEM_STAT_INFO
)))

	)

2129 
	#ggc_Æloc_˛óªd_πx_def_asm_›î™ds
(Ë((
πx_def_asm_›î™ds
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_asm_›î™dsË
MEM_STAT_INFO
)))

	)

2130 
	#ggc_Æloc_vec_πx_def_asm_›î™ds
(
n
Ë((
πx_def_asm_›î™ds
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_asm_›î™ds),Ç 
MEM_STAT_INFO
)))

	)

2131 
	#ggc_Æloc_˛óªd_vec_πx_def_asm_›î™ds
(
n
Ë((
πx_def_asm_›î™ds
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_asm_›î™ds),Ç 
MEM_STAT_INFO
)))

	)

2132 
	#ggc_Æloc_πx_def_asm_öput
(Ë((
πx_def_asm_öput
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_asm_öputË
MEM_STAT_INFO
)))

	)

2133 
	#ggc_Æloc_˛óªd_πx_def_asm_öput
(Ë((
πx_def_asm_öput
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_asm_öputË
MEM_STAT_INFO
)))

	)

2134 
	#ggc_Æloc_vec_πx_def_asm_öput
(
n
Ë((
πx_def_asm_öput
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_asm_öput),Ç 
MEM_STAT_INFO
)))

	)

2135 
	#ggc_Æloc_˛óªd_vec_πx_def_asm_öput
(
n
Ë((
πx_def_asm_öput
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_asm_öput),Ç 
MEM_STAT_INFO
)))

	)

2136 
	#ggc_Æloc_πx_def_∑øŒñ
(Ë((
πx_def_∑øŒñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_∑øŒñË
MEM_STAT_INFO
)))

	)

2137 
	#ggc_Æloc_˛óªd_πx_def_∑øŒñ
(Ë((
πx_def_∑øŒñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_∑øŒñË
MEM_STAT_INFO
)))

	)

2138 
	#ggc_Æloc_vec_πx_def_∑øŒñ
(
n
Ë((
πx_def_∑øŒñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_∑øŒñ),Ç 
MEM_STAT_INFO
)))

	)

2139 
	#ggc_Æloc_˛óªd_vec_πx_def_∑øŒñ
(
n
Ë((
πx_def_∑øŒñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_∑øŒñ),Ç 
MEM_STAT_INFO
)))

	)

2140 
	#ggc_Æloc_πx_def_c⁄d_exec
(Ë((
πx_def_c⁄d_exec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_c⁄d_execË
MEM_STAT_INFO
)))

	)

2141 
	#ggc_Æloc_˛óªd_πx_def_c⁄d_exec
(Ë((
πx_def_c⁄d_exec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_c⁄d_execË
MEM_STAT_INFO
)))

	)

2142 
	#ggc_Æloc_vec_πx_def_c⁄d_exec
(
n
Ë((
πx_def_c⁄d_exec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_c⁄d_exec),Ç 
MEM_STAT_INFO
)))

	)

2143 
	#ggc_Æloc_˛óªd_vec_πx_def_c⁄d_exec
(
n
Ë((
πx_def_c⁄d_exec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_c⁄d_exec),Ç 
MEM_STAT_INFO
)))

	)

2144 
	#ggc_Æloc_πx_def_nŸe
(Ë((
πx_def_nŸe
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_nŸeË
MEM_STAT_INFO
)))

	)

2145 
	#ggc_Æloc_˛óªd_πx_def_nŸe
(Ë((
πx_def_nŸe
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_nŸeË
MEM_STAT_INFO
)))

	)

2146 
	#ggc_Æloc_vec_πx_def_nŸe
(
n
Ë((
πx_def_nŸe
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_nŸe),Ç 
MEM_STAT_INFO
)))

	)

2147 
	#ggc_Æloc_˛óªd_vec_πx_def_nŸe
(
n
Ë((
πx_def_nŸe
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_nŸe),Ç 
MEM_STAT_INFO
)))

	)

2148 
	#ggc_Æloc_πx_def_code_œbñ
(Ë((
πx_def_code_œbñ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_code_œbñË
MEM_STAT_INFO
)))

	)

2149 
	#ggc_Æloc_˛óªd_πx_def_code_œbñ
(Ë((
πx_def_code_œbñ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_code_œbñË
MEM_STAT_INFO
)))

	)

2150 
	#ggc_Æloc_vec_πx_def_code_œbñ
(
n
Ë((
πx_def_code_œbñ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_code_œbñ),Ç 
MEM_STAT_INFO
)))

	)

2151 
	#ggc_Æloc_˛óªd_vec_πx_def_code_œbñ
(
n
Ë((
πx_def_code_œbñ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_code_œbñ),Ç 
MEM_STAT_INFO
)))

	)

2152 
	#ggc_Æloc_πx_def_b¨rõr
(Ë((
πx_def_b¨rõr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_b¨rõrË
MEM_STAT_INFO
)))

	)

2153 
	#ggc_Æloc_˛óªd_πx_def_b¨rõr
(Ë((
πx_def_b¨rõr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_b¨rõrË
MEM_STAT_INFO
)))

	)

2154 
	#ggc_Æloc_vec_πx_def_b¨rõr
(
n
Ë((
πx_def_b¨rõr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_b¨rõr),Ç 
MEM_STAT_INFO
)))

	)

2155 
	#ggc_Æloc_˛óªd_vec_πx_def_b¨rõr
(
n
Ë((
πx_def_b¨rõr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_b¨rõr),Ç 
MEM_STAT_INFO
)))

	)

2156 
	#ggc_Æloc_πx_def_jump_èbÀ_d©a
(Ë((
πx_def_jump_èbÀ_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_jump_èbÀ_d©aË
MEM_STAT_INFO
)))

	)

2157 
	#ggc_Æloc_˛óªd_πx_def_jump_èbÀ_d©a
(Ë((
πx_def_jump_èbÀ_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_jump_èbÀ_d©aË
MEM_STAT_INFO
)))

	)

2158 
	#ggc_Æloc_vec_πx_def_jump_èbÀ_d©a
(
n
Ë((
πx_def_jump_èbÀ_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_jump_èbÀ_d©a),Ç 
MEM_STAT_INFO
)))

	)

2159 
	#ggc_Æloc_˛óªd_vec_πx_def_jump_èbÀ_d©a
(
n
Ë((
πx_def_jump_èbÀ_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_jump_èbÀ_d©a),Ç 
MEM_STAT_INFO
)))

	)

2160 
	#ggc_Æloc_πx_def_ˇŒ_ö¢
(Ë((
πx_def_ˇŒ_ö¢
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ˇŒ_ö¢Ë
MEM_STAT_INFO
)))

	)

2161 
	#ggc_Æloc_˛óªd_πx_def_ˇŒ_ö¢
(Ë((
πx_def_ˇŒ_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ˇŒ_ö¢Ë
MEM_STAT_INFO
)))

	)

2162 
	#ggc_Æloc_vec_πx_def_ˇŒ_ö¢
(
n
Ë((
πx_def_ˇŒ_ö¢
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ˇŒ_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2163 
	#ggc_Æloc_˛óªd_vec_πx_def_ˇŒ_ö¢
(
n
Ë((
πx_def_ˇŒ_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ˇŒ_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2164 
	#ggc_Æloc_πx_def_jump_ö¢
(Ë((
πx_def_jump_ö¢
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_jump_ö¢Ë
MEM_STAT_INFO
)))

	)

2165 
	#ggc_Æloc_˛óªd_πx_def_jump_ö¢
(Ë((
πx_def_jump_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_jump_ö¢Ë
MEM_STAT_INFO
)))

	)

2166 
	#ggc_Æloc_vec_πx_def_jump_ö¢
(
n
Ë((
πx_def_jump_ö¢
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_jump_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2167 
	#ggc_Æloc_˛óªd_vec_πx_def_jump_ö¢
(
n
Ë((
πx_def_jump_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_jump_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2168 
	#ggc_Æloc_πx_def_ö¢
(Ë((
πx_def_ö¢
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ö¢Ë
MEM_STAT_INFO
)))

	)

2169 
	#ggc_Æloc_˛óªd_πx_def_ö¢
(Ë((
πx_def_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ö¢Ë
MEM_STAT_INFO
)))

	)

2170 
	#ggc_Æloc_vec_πx_def_ö¢
(
n
Ë((
πx_def_ö¢
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2171 
	#ggc_Æloc_˛óªd_vec_πx_def_ö¢
(
n
Ë((
πx_def_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2172 
	#ggc_Æloc_πx_def_debug_ö¢
(Ë((
πx_def_debug_ö¢
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_debug_ö¢Ë
MEM_STAT_INFO
)))

	)

2173 
	#ggc_Æloc_˛óªd_πx_def_debug_ö¢
(Ë((
πx_def_debug_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_debug_ö¢Ë
MEM_STAT_INFO
)))

	)

2174 
	#ggc_Æloc_vec_πx_def_debug_ö¢
(
n
Ë((
πx_def_debug_ö¢
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_debug_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2175 
	#ggc_Æloc_˛óªd_vec_πx_def_debug_ö¢
(
n
Ë((
πx_def_debug_ö¢
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_debug_ö¢),Ç 
MEM_STAT_INFO
)))

	)

2176 
	#ggc_Æloc_πx_def_addªss
(Ë((
πx_def_addªss
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_addªssË
MEM_STAT_INFO
)))

	)

2177 
	#ggc_Æloc_˛óªd_πx_def_addªss
(Ë((
πx_def_addªss
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_addªssË
MEM_STAT_INFO
)))

	)

2178 
	#ggc_Æloc_vec_πx_def_addªss
(
n
Ë((
πx_def_addªss
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_addªss),Ç 
MEM_STAT_INFO
)))

	)

2179 
	#ggc_Æloc_˛óªd_vec_πx_def_addªss
(
n
Ë((
πx_def_addªss
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_addªss),Ç 
MEM_STAT_INFO
)))

	)

2180 
	#ggc_Æloc_πx_def_£quí˚
(Ë((
πx_def_£quí˚
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_£quí˚Ë
MEM_STAT_INFO
)))

	)

2181 
	#ggc_Æloc_˛óªd_πx_def_£quí˚
(Ë((
πx_def_£quí˚
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_£quí˚Ë
MEM_STAT_INFO
)))

	)

2182 
	#ggc_Æloc_vec_πx_def_£quí˚
(
n
Ë((
πx_def_£quí˚
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_£quí˚),Ç 
MEM_STAT_INFO
)))

	)

2183 
	#ggc_Æloc_˛óªd_vec_πx_def_£quí˚
(
n
Ë((
πx_def_£quí˚
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_£quí˚),Ç 
MEM_STAT_INFO
)))

	)

2184 
	#ggc_Æloc_πx_def_öt_li°
(Ë((
πx_def_öt_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_öt_li°Ë
MEM_STAT_INFO
)))

	)

2185 
	#ggc_Æloc_˛óªd_πx_def_öt_li°
(Ë((
πx_def_öt_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_öt_li°Ë
MEM_STAT_INFO
)))

	)

2186 
	#ggc_Æloc_vec_πx_def_öt_li°
(
n
Ë((
πx_def_öt_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_öt_li°),Ç 
MEM_STAT_INFO
)))

	)

2187 
	#ggc_Æloc_˛óªd_vec_πx_def_öt_li°
(
n
Ë((
πx_def_öt_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_öt_li°),Ç 
MEM_STAT_INFO
)))

	)

2188 
	#ggc_Æloc_πx_def_ö¢_li°
(Ë((
πx_def_ö¢_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ö¢_li°Ë
MEM_STAT_INFO
)))

	)

2189 
	#ggc_Æloc_˛óªd_πx_def_ö¢_li°
(Ë((
πx_def_ö¢_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ö¢_li°Ë
MEM_STAT_INFO
)))

	)

2190 
	#ggc_Æloc_vec_πx_def_ö¢_li°
(
n
Ë((
πx_def_ö¢_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ö¢_li°),Ç 
MEM_STAT_INFO
)))

	)

2191 
	#ggc_Æloc_˛óªd_vec_πx_def_ö¢_li°
(
n
Ë((
πx_def_ö¢_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ö¢_li°),Ç 
MEM_STAT_INFO
)))

	)

2192 
	#ggc_Æloc_πx_def_ex¥_li°
(Ë((
πx_def_ex¥_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_ex¥_li°Ë
MEM_STAT_INFO
)))

	)

2193 
	#ggc_Æloc_˛óªd_πx_def_ex¥_li°
(Ë((
πx_def_ex¥_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_ex¥_li°Ë
MEM_STAT_INFO
)))

	)

2194 
	#ggc_Æloc_vec_πx_def_ex¥_li°
(
n
Ë((
πx_def_ex¥_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_ex¥_li°),Ç 
MEM_STAT_INFO
)))

	)

2195 
	#ggc_Æloc_˛óªd_vec_πx_def_ex¥_li°
(
n
Ë((
πx_def_ex¥_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_ex¥_li°),Ç 
MEM_STAT_INFO
)))

	)

2196 
	#ggc_Æloc_πx_def_debug_ex¥
(Ë((
πx_def_debug_ex¥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_debug_ex¥Ë
MEM_STAT_INFO
)))

	)

2197 
	#ggc_Æloc_˛óªd_πx_def_debug_ex¥
(Ë((
πx_def_debug_ex¥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_debug_ex¥Ë
MEM_STAT_INFO
)))

	)

2198 
	#ggc_Æloc_vec_πx_def_debug_ex¥
(
n
Ë((
πx_def_debug_ex¥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_debug_ex¥),Ç 
MEM_STAT_INFO
)))

	)

2199 
	#ggc_Æloc_˛óªd_vec_πx_def_debug_ex¥
(
n
Ë((
πx_def_debug_ex¥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_debug_ex¥),Ç 
MEM_STAT_INFO
)))

	)

2200 
	#ggc_Æloc_πx_def_vÆue
(Ë((
πx_def_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_vÆueË
MEM_STAT_INFO
)))

	)

2201 
	#ggc_Æloc_˛óªd_πx_def_vÆue
(Ë((
πx_def_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_vÆueË
MEM_STAT_INFO
)))

	)

2202 
	#ggc_Æloc_vec_πx_def_vÆue
(
n
Ë((
πx_def_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2203 
	#ggc_Æloc_˛óªd_vec_πx_def_vÆue
(
n
Ë((
πx_def_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2204 
	#ggc_Æloc_πx_def_UnKnown
(Ë((
πx_def_UnKnown
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_UnKnownË
MEM_STAT_INFO
)))

	)

2205 
	#ggc_Æloc_˛óªd_πx_def_UnKnown
(Ë((
πx_def_UnKnown
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_UnKnownË
MEM_STAT_INFO
)))

	)

2206 
	#ggc_Æloc_vec_πx_def_UnKnown
(
n
Ë((
πx_def_UnKnown
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_UnKnown),Ç 
MEM_STAT_INFO
)))

	)

2207 
	#ggc_Æloc_˛óªd_vec_πx_def_UnKnown
(
n
Ë((
πx_def_UnKnown
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_UnKnown),Ç 
MEM_STAT_INFO
)))

	)

2208 
	#ggc_Æloc_πx_def_symbﬁ_subuni⁄
(Ë((
πx_def_symbﬁ_subuni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_symbﬁ_subuni⁄Ë
MEM_STAT_INFO
)))

	)

2209 
	#ggc_Æloc_˛óªd_πx_def_symbﬁ_subuni⁄
(Ë((
πx_def_symbﬁ_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_symbﬁ_subuni⁄Ë
MEM_STAT_INFO
)))

	)

2210 
	#ggc_Æloc_vec_πx_def_symbﬁ_subuni⁄
(
n
Ë((
πx_def_symbﬁ_subuni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_symbﬁ_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

2211 
	#ggc_Æloc_˛óªd_vec_πx_def_symbﬁ_subuni⁄
(
n
Ë((
πx_def_symbﬁ_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_symbﬁ_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

2212 
	#ggc_Æloc_πx_def_nŸe_subuni⁄
(Ë((
πx_def_nŸe_subuni⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πx_def_nŸe_subuni⁄Ë
MEM_STAT_INFO
)))

	)

2213 
	#ggc_Æloc_˛óªd_πx_def_nŸe_subuni⁄
(Ë((
πx_def_nŸe_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πx_def_nŸe_subuni⁄Ë
MEM_STAT_INFO
)))

	)

2214 
	#ggc_Æloc_vec_πx_def_nŸe_subuni⁄
(
n
Ë((
πx_def_nŸe_subuni⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx_def_nŸe_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

2215 
	#ggc_Æloc_˛óªd_vec_πx_def_nŸe_subuni⁄
(
n
Ë((
πx_def_nŸe_subuni⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx_def_nŸe_subuni⁄),Ç 
MEM_STAT_INFO
)))

	)

2216 
	#ggc_Æloc_c⁄°™t_des¸ùt‹_πx
(Ë((
c⁄°™t_des¸ùt‹_πx
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_πxË
MEM_STAT_INFO
)))

	)

2217 
	#ggc_Æloc_˛óªd_c⁄°™t_des¸ùt‹_πx
(Ë((
c⁄°™t_des¸ùt‹_πx
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_πxË
MEM_STAT_INFO
)))

	)

2218 
	#ggc_Æloc_vec_c⁄°™t_des¸ùt‹_πx
(
n
Ë((
c⁄°™t_des¸ùt‹_πx
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_πx),Ç 
MEM_STAT_INFO
)))

	)

2219 
	#ggc_Æloc_˛óªd_vec_c⁄°™t_des¸ùt‹_πx
(
n
Ë((
c⁄°™t_des¸ùt‹_πx
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°™t_des¸ùt‹_πx),Ç 
MEM_STAT_INFO
)))

	)

2220 
	#ggc_Æloc_fixed_vÆue
(Ë((
fixed_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (fixed_vÆueË
MEM_STAT_INFO
)))

	)

2221 
	#ggc_Æloc_˛óªd_fixed_vÆue
(Ë((
fixed_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (fixed_vÆueË
MEM_STAT_INFO
)))

	)

2222 
	#ggc_Æloc_vec_fixed_vÆue
(
n
Ë((
fixed_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (fixed_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2223 
	#ggc_Æloc_˛óªd_vec_fixed_vÆue
(
n
Ë((
fixed_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (fixed_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2224 
	#ggc_Æloc_ªÆ_vÆue
(Ë((
ªÆ_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ªÆ_vÆueË
MEM_STAT_INFO
)))

	)

2225 
	#ggc_Æloc_˛óªd_ªÆ_vÆue
(Ë((
ªÆ_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ªÆ_vÆueË
MEM_STAT_INFO
)))

	)

2226 
	#ggc_Æloc_vec_ªÆ_vÆue
(
n
Ë((
ªÆ_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ªÆ_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2227 
	#ggc_Æloc_˛óªd_vec_ªÆ_vÆue
(
n
Ë((
ªÆ_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ªÆ_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2228 
	#ggc_Æloc_vec_πx_va_gc_
(Ë((
vec
<
πx
,
va_gc
> *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (vec<πx,va_gc>Ë
MEM_STAT_INFO
)))

	)

2229 
	#ggc_Æloc_˛óªd_vec_πx_va_gc_
(Ë((
vec
<
πx
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (vec<πx,va_gc>Ë
MEM_STAT_INFO
)))

	)

2230 
	#ggc_Æloc_vec_vec_πx_va_gc_
(
n
Ë((
vec
<
πx
,
va_gc
> *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (vec<πx,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

2231 
	#ggc_Æloc_˛óªd_vec_vec_πx_va_gc_
(
n
Ë((
vec
<
πx
,
va_gc
> *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (vec<πx,va_gc>),Ç 
MEM_STAT_INFO
)))

	)

2232 
	#ggc_Æloc_block_symbﬁ
(Ë((
block_symbﬁ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (block_symbﬁË
MEM_STAT_INFO
)))

	)

2233 
	#ggc_Æloc_˛óªd_block_symbﬁ
(Ë((
block_symbﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (block_symbﬁË
MEM_STAT_INFO
)))

	)

2234 
	#ggc_Æloc_vec_block_symbﬁ
(
n
Ë((
block_symbﬁ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (block_symbﬁ),Ç 
MEM_STAT_INFO
)))

	)

2235 
	#ggc_Æloc_˛óªd_vec_block_symbﬁ
(
n
Ë((
block_symbﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (block_symbﬁ),Ç 
MEM_STAT_INFO
)))

	)

2236 
	#ggc_Æloc_obje˘_block
(Ë((
obje˘_block
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (obje˘_blockË
MEM_STAT_INFO
)))

	)

2237 
	#ggc_Æloc_˛óªd_obje˘_block
(Ë((
obje˘_block
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (obje˘_blockË
MEM_STAT_INFO
)))

	)

2238 
	#ggc_Æloc_vec_obje˘_block
(
n
Ë((
obje˘_block
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (obje˘_block),Ç 
MEM_STAT_INFO
)))

	)

2239 
	#ggc_Æloc_˛óªd_vec_obje˘_block
(
n
Ë((
obje˘_block
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (obje˘_block),Ç 
MEM_STAT_INFO
)))

	)

2240 
	#ggc_Æloc_ªg_©ås
(Ë((
ªg_©ås
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ªg_©åsË
MEM_STAT_INFO
)))

	)

2241 
	#ggc_Æloc_˛óªd_ªg_©ås
(Ë((
ªg_©ås
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ªg_©åsË
MEM_STAT_INFO
)))

	)

2242 
	#ggc_Æloc_vec_ªg_©ås
(
n
Ë((
ªg_©ås
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ªg_©ås),Ç 
MEM_STAT_INFO
)))

	)

2243 
	#ggc_Æloc_˛óªd_vec_ªg_©ås
(
n
Ë((
ªg_©ås
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ªg_©ås),Ç 
MEM_STAT_INFO
)))

	)

2244 
	#ggc_Æloc_mem_©ås
(Ë((
mem_©ås
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (mem_©åsË
MEM_STAT_INFO
)))

	)

2245 
	#ggc_Æloc_˛óªd_mem_©ås
(Ë((
mem_©ås
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (mem_©åsË
MEM_STAT_INFO
)))

	)

2246 
	#ggc_Æloc_vec_mem_©ås
(
n
Ë((
mem_©ås
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (mem_©ås),Ç 
MEM_STAT_INFO
)))

	)

2247 
	#ggc_Æloc_˛óªd_vec_mem_©ås
(
n
Ë((
mem_©ås
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (mem_©ås),Ç 
MEM_STAT_INFO
)))

	)

2248 
	#ggc_Æloc_covîage_d©a
(Ë((
covîage_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (covîage_d©aË
MEM_STAT_INFO
)))

	)

2249 
	#ggc_Æloc_˛óªd_covîage_d©a
(Ë((
covîage_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (covîage_d©aË
MEM_STAT_INFO
)))

	)

2250 
	#ggc_Æloc_vec_covîage_d©a
(
n
Ë((
covîage_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (covîage_d©a),Ç 
MEM_STAT_INFO
)))

	)

2251 
	#ggc_Æloc_˛óªd_vec_covîage_d©a
(
n
Ë((
covîage_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (covîage_d©a),Ç 
MEM_STAT_INFO
)))

	)

2252 
	#ggc_Æloc_bôm≠_ob°ack
(Ë((
bôm≠_ob°ack
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bôm≠_ob°ackË
MEM_STAT_INFO
)))

	)

2253 
	#ggc_Æloc_˛óªd_bôm≠_ob°ack
(Ë((
bôm≠_ob°ack
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bôm≠_ob°ackË
MEM_STAT_INFO
)))

	)

2254 
	#ggc_Æloc_vec_bôm≠_ob°ack
(
n
Ë((
bôm≠_ob°ack
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bôm≠_ob°ack),Ç 
MEM_STAT_INFO
)))

	)

2255 
	#ggc_Æloc_˛óªd_vec_bôm≠_ob°ack
(
n
Ë((
bôm≠_ob°ack
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bôm≠_ob°ack),Ç 
MEM_STAT_INFO
)))

	)

2256 
	#ggc_Æloc_bôm≠_ñemít
(Ë((
bôm≠_ñemít
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bôm≠_ñemítË
MEM_STAT_INFO
)))

	)

2257 
	#ggc_Æloc_˛óªd_bôm≠_ñemít
(Ë((
bôm≠_ñemít
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bôm≠_ñemítË
MEM_STAT_INFO
)))

	)

2258 
	#ggc_Æloc_vec_bôm≠_ñemít
(
n
Ë((
bôm≠_ñemít
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bôm≠_ñemít),Ç 
MEM_STAT_INFO
)))

	)

2259 
	#ggc_Æloc_˛óªd_vec_bôm≠_ñemít
(
n
Ë((
bôm≠_ñemít
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bôm≠_ñemít),Ç 
MEM_STAT_INFO
)))

	)

2260 
	#ggc_Æloc_•œy_åì_s
(Ë((
•œy_åì_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (•œy_åì_sË
MEM_STAT_INFO
)))

	)

2261 
	#ggc_Æloc_˛óªd_•œy_åì_s
(Ë((
•œy_åì_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (•œy_åì_sË
MEM_STAT_INFO
)))

	)

2262 
	#ggc_Æloc_vec_•œy_åì_s
(
n
Ë((
•œy_åì_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (•œy_åì_s),Ç 
MEM_STAT_INFO
)))

	)

2263 
	#ggc_Æloc_˛óªd_vec_•œy_åì_s
(
n
Ë((
•œy_åì_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (•œy_åì_s),Ç 
MEM_STAT_INFO
)))

	)

2264 
	#ggc_Æloc_•œy_åì_node_s
(Ë((
•œy_åì_node_s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (•œy_åì_node_sË
MEM_STAT_INFO
)))

	)

2265 
	#ggc_Æloc_˛óªd_•œy_åì_node_s
(Ë((
•œy_åì_node_s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (•œy_åì_node_sË
MEM_STAT_INFO
)))

	)

2266 
	#ggc_Æloc_vec_•œy_åì_node_s
(
n
Ë((
•œy_åì_node_s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (•œy_åì_node_s),Ç 
MEM_STAT_INFO
)))

	)

2267 
	#ggc_Æloc_˛óªd_vec_•œy_åì_node_s
(
n
Ë((
•œy_åì_node_s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (•œy_åì_node_s),Ç 
MEM_STAT_INFO
)))

	)

2268 
	#ggc_Æloc_machöe_fun˘i⁄
(Ë((
machöe_fun˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (machöe_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

2269 
	#ggc_Æloc_˛óªd_machöe_fun˘i⁄
(Ë((
machöe_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (machöe_fun˘i⁄Ë
MEM_STAT_INFO
)))

	)

2270 
	#ggc_Æloc_vec_machöe_fun˘i⁄
(
n
Ë((
machöe_fun˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (machöe_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

2271 
	#ggc_Æloc_˛óªd_vec_machöe_fun˘i⁄
(
n
Ë((
machöe_fun˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (machöe_fun˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

2272 
	#ggc_Æloc_¨m_°ack_off£ts
(Ë((
¨m_°ack_off£ts
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (¨m_°ack_off£tsË
MEM_STAT_INFO
)))

	)

2273 
	#ggc_Æloc_˛óªd_¨m_°ack_off£ts
(Ë((
¨m_°ack_off£ts
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (¨m_°ack_off£tsË
MEM_STAT_INFO
)))

	)

2274 
	#ggc_Æloc_vec_¨m_°ack_off£ts
(
n
Ë((
¨m_°ack_off£ts
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (¨m_°ack_off£ts),Ç 
MEM_STAT_INFO
)))

	)

2275 
	#ggc_Æloc_˛óªd_vec_¨m_°ack_off£ts
(
n
Ë((
¨m_°ack_off£ts
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (¨m_°ack_off£ts),Ç 
MEM_STAT_INFO
)))

	)

2276 
	#ggc_Æloc_basic_block_def
(Ë((
basic_block_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (basic_block_defË
MEM_STAT_INFO
)))

	)

2277 
	#ggc_Æloc_˛óªd_basic_block_def
(Ë((
basic_block_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (basic_block_defË
MEM_STAT_INFO
)))

	)

2278 
	#ggc_Æloc_vec_basic_block_def
(
n
Ë((
basic_block_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (basic_block_def),Ç 
MEM_STAT_INFO
)))

	)

2279 
	#ggc_Æloc_˛óªd_vec_basic_block_def
(
n
Ë((
basic_block_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (basic_block_def),Ç 
MEM_STAT_INFO
)))

	)

2280 
	#ggc_Æloc_edge_def
(Ë((
edge_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (edge_defË
MEM_STAT_INFO
)))

	)

2281 
	#ggc_Æloc_˛óªd_edge_def
(Ë((
edge_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (edge_defË
MEM_STAT_INFO
)))

	)

2282 
	#ggc_Æloc_vec_edge_def
(
n
Ë((
edge_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (edge_def),Ç 
MEM_STAT_INFO
)))

	)

2283 
	#ggc_Æloc_˛óªd_vec_edge_def
(
n
Ë((
edge_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (edge_def),Ç 
MEM_STAT_INFO
)))

	)

2284 
	#ggc_Æloc_˛_›timiz©i⁄
(Ë((
˛_›timiz©i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˛_›timiz©i⁄Ë
MEM_STAT_INFO
)))

	)

2285 
	#ggc_Æloc_˛óªd_˛_›timiz©i⁄
(Ë((
˛_›timiz©i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˛_›timiz©i⁄Ë
MEM_STAT_INFO
)))

	)

2286 
	#ggc_Æloc_vec_˛_›timiz©i⁄
(
n
Ë((
˛_›timiz©i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˛_›timiz©i⁄),Ç 
MEM_STAT_INFO
)))

	)

2287 
	#ggc_Æloc_˛óªd_vec_˛_›timiz©i⁄
(
n
Ë((
˛_›timiz©i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˛_›timiz©i⁄),Ç 
MEM_STAT_INFO
)))

	)

2288 
	#ggc_Æloc_˛_èrgë_›ti⁄
(Ë((
˛_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˛_èrgë_›ti⁄Ë
MEM_STAT_INFO
)))

	)

2289 
	#ggc_Æloc_˛óªd_˛_èrgë_›ti⁄
(Ë((
˛_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˛_èrgë_›ti⁄Ë
MEM_STAT_INFO
)))

	)

2290 
	#ggc_Æloc_vec_˛_èrgë_›ti⁄
(
n
Ë((
˛_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˛_èrgë_›ti⁄),Ç 
MEM_STAT_INFO
)))

	)

2291 
	#ggc_Æloc_˛óªd_vec_˛_èrgë_›ti⁄
(
n
Ë((
˛_èrgë_›ti⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˛_èrgë_›ti⁄),Ç 
MEM_STAT_INFO
)))

	)

2292 
	#ggc_Æloc_£˘i⁄
(Ë((
£˘i⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (£˘i⁄Ë
MEM_STAT_INFO
)))

	)

2293 
	#ggc_Æloc_˛óªd_£˘i⁄
(Ë((
£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (£˘i⁄Ë
MEM_STAT_INFO
)))

	)

2294 
	#ggc_Æloc_vec_£˘i⁄
(
n
Ë((
£˘i⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

2295 
	#ggc_Æloc_˛óªd_vec_£˘i⁄
(
n
Ë((
£˘i⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (£˘i⁄),Ç 
MEM_STAT_INFO
)))

	)

2296 
	#ggc_Æloc_gim∂e_°©emít_ba£
(
SIZE
Ë((
gim∂e_°©emít_ba£
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2297 
	#ggc_Æloc_˛óªd_gim∂e_°©emít_ba£
(
SIZE
Ë((
gim∂e_°©emít_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2298 
	#ggc_Æloc_vec_gim∂e_°©emít_ba£
(
SIZE
, 
n
Ë((
gim∂e_°©emít_ba£
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2299 
	#ggc_Æloc_˛óªd_vec_gim∂e_°©emít_ba£
(
SIZE
, 
n
Ë((
gim∂e_°©emít_ba£
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2300 
	#ggc_Æloc_πvec_def
(
SIZE
Ë((
πvec_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2301 
	#ggc_Æloc_˛óªd_πvec_def
(
SIZE
Ë((
πvec_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2302 
	#ggc_Æloc_vec_πvec_def
(
SIZE
, 
n
Ë((
πvec_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2303 
	#ggc_Æloc_˛óªd_vec_πvec_def
(
SIZE
, 
n
Ë((
πvec_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2304 
	#ggc_Æloc_πx_def
(
SIZE
Ë((
πx_def
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2305 
	#ggc_Æloc_˛óªd_πx_def
(
SIZE
Ë((
πx_def
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2306 
	#ggc_Æloc_vec_πx_def
(
SIZE
, 
n
Ë((
πx_def
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2307 
	#ggc_Æloc_˛óªd_vec_πx_def
(
SIZE
, 
n
Ë((
πx_def
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2308 
	#ggc_Æloc_bôm≠_hód
(Ë((
bôm≠_hód
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bôm≠_hódË
MEM_STAT_INFO
)))

	)

2309 
	#ggc_Æloc_˛óªd_bôm≠_hód
(Ë((
bôm≠_hód
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bôm≠_hódË
MEM_STAT_INFO
)))

	)

2310 
	#ggc_Æloc_vec_bôm≠_hód
(
n
Ë((
bôm≠_hód
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bôm≠_hód),Ç 
MEM_STAT_INFO
)))

	)

2311 
	#ggc_Æloc_˛óªd_vec_bôm≠_hód
(
n
Ë((
bôm≠_hód
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bôm≠_hód),Ç 
MEM_STAT_INFO
)))

	)

2312 
	#ggc_Æloc_˝p_ma¸o_u
(Ë((
˝p_ma¸o_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_ma¸o_uË
MEM_STAT_INFO
)))

	)

2313 
	#ggc_Æloc_˛óªd_˝p_ma¸o_u
(Ë((
˝p_ma¸o_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_ma¸o_uË
MEM_STAT_INFO
)))

	)

2314 
	#ggc_Æloc_vec_˝p_ma¸o_u
(
n
Ë((
˝p_ma¸o_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_ma¸o_u),Ç 
MEM_STAT_INFO
)))

	)

2315 
	#ggc_Æloc_˛óªd_vec_˝p_ma¸o_u
(
n
Ë((
˝p_ma¸o_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_ma¸o_u),Ç 
MEM_STAT_INFO
)))

	)

2316 
	#ggc_Æloc_ht_idítifõr
(Ë((
ht_idítifõr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ht_idítifõrË
MEM_STAT_INFO
)))

	)

2317 
	#ggc_Æloc_˛óªd_ht_idítifõr
(Ë((
ht_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ht_idítifõrË
MEM_STAT_INFO
)))

	)

2318 
	#ggc_Æloc_vec_ht_idítifõr
(
n
Ë((
ht_idítifõr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ht_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

2319 
	#ggc_Æloc_˛óªd_vec_ht_idítifõr
(
n
Ë((
ht_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ht_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

2320 
	#ggc_Æloc__˝p_hashnode_vÆue
(Ë((
_˝p_hashnode_vÆue
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (_˝p_hashnode_vÆueË
MEM_STAT_INFO
)))

	)

2321 
	#ggc_Æloc_˛óªd__˝p_hashnode_vÆue
(Ë((
_˝p_hashnode_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (_˝p_hashnode_vÆueË
MEM_STAT_INFO
)))

	)

2322 
	#ggc_Æloc_vec__˝p_hashnode_vÆue
(
n
Ë((
_˝p_hashnode_vÆue
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (_˝p_hashnode_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2323 
	#ggc_Æloc_˛óªd_vec__˝p_hashnode_vÆue
(
n
Ë((
_˝p_hashnode_vÆue
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (_˝p_hashnode_vÆue),Ç 
MEM_STAT_INFO
)))

	)

2324 
	#ggc_Æloc_˝p_tokí_u
(Ë((
˝p_tokí_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_tokí_uË
MEM_STAT_INFO
)))

	)

2325 
	#ggc_Æloc_˛óªd_˝p_tokí_u
(Ë((
˝p_tokí_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_tokí_uË
MEM_STAT_INFO
)))

	)

2326 
	#ggc_Æloc_vec_˝p_tokí_u
(
n
Ë((
˝p_tokí_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_tokí_u),Ç 
MEM_STAT_INFO
)))

	)

2327 
	#ggc_Æloc_˛óªd_vec_˝p_tokí_u
(
n
Ë((
˝p_tokí_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_tokí_u),Ç 
MEM_STAT_INFO
)))

	)

2328 
	#ggc_Æloc_˝p_idítifõr
(Ë((
˝p_idítifõr
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_idítifõrË
MEM_STAT_INFO
)))

	)

2329 
	#ggc_Æloc_˛óªd_˝p_idítifõr
(Ë((
˝p_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_idítifõrË
MEM_STAT_INFO
)))

	)

2330 
	#ggc_Æloc_vec_˝p_idítifõr
(
n
Ë((
˝p_idítifõr
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

2331 
	#ggc_Æloc_˛óªd_vec_˝p_idítifõr
(
n
Ë((
˝p_idítifõr
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_idítifõr),Ç 
MEM_STAT_INFO
)))

	)

2332 
	#ggc_Æloc_˝p_ma¸o_¨g
(Ë((
˝p_ma¸o_¨g
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_ma¸o_¨gË
MEM_STAT_INFO
)))

	)

2333 
	#ggc_Æloc_˛óªd_˝p_ma¸o_¨g
(Ë((
˝p_ma¸o_¨g
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_ma¸o_¨gË
MEM_STAT_INFO
)))

	)

2334 
	#ggc_Æloc_vec_˝p_ma¸o_¨g
(
n
Ë((
˝p_ma¸o_¨g
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_ma¸o_¨g),Ç 
MEM_STAT_INFO
)))

	)

2335 
	#ggc_Æloc_˛óªd_vec_˝p_ma¸o_¨g
(
n
Ë((
˝p_ma¸o_¨g
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_ma¸o_¨g),Ç 
MEM_STAT_INFO
)))

	)

2336 
	#ggc_Æloc_™swî
(Ë((
™swî
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (™swîË
MEM_STAT_INFO
)))

	)

2337 
	#ggc_Æloc_˛óªd_™swî
(Ë((
™swî
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (™swîË
MEM_STAT_INFO
)))

	)

2338 
	#ggc_Æloc_vec_™swî
(
n
Ë((
™swî
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (™swî),Ç 
MEM_STAT_INFO
)))

	)

2339 
	#ggc_Æloc_˛óªd_vec_™swî
(
n
Ë((
™swî
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (™swî),Ç 
MEM_STAT_INFO
)))

	)

2340 
	#ggc_Æloc_˝p_ma¸o
(Ë((
˝p_ma¸o
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_ma¸oË
MEM_STAT_INFO
)))

	)

2341 
	#ggc_Æloc_˛óªd_˝p_ma¸o
(Ë((
˝p_ma¸o
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_ma¸oË
MEM_STAT_INFO
)))

	)

2342 
	#ggc_Æloc_vec_˝p_ma¸o
(
n
Ë((
˝p_ma¸o
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_ma¸o),Ç 
MEM_STAT_INFO
)))

	)

2343 
	#ggc_Æloc_˛óªd_vec_˝p_ma¸o
(
n
Ë((
˝p_ma¸o
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_ma¸o),Ç 
MEM_STAT_INFO
)))

	)

2344 
	#ggc_Æloc_˝p_°rög
(Ë((
˝p_°rög
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_°rögË
MEM_STAT_INFO
)))

	)

2345 
	#ggc_Æloc_˛óªd_˝p_°rög
(Ë((
˝p_°rög
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_°rögË
MEM_STAT_INFO
)))

	)

2346 
	#ggc_Æloc_vec_˝p_°rög
(
n
Ë((
˝p_°rög
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_°rög),Ç 
MEM_STAT_INFO
)))

	)

2347 
	#ggc_Æloc_˛óªd_vec_˝p_°rög
(
n
Ë((
˝p_°rög
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_°rög),Ç 
MEM_STAT_INFO
)))

	)

2348 
	#ggc_Æloc_˝p_tokí
(Ë((
˝p_tokí
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_tokíË
MEM_STAT_INFO
)))

	)

2349 
	#ggc_Æloc_˛óªd_˝p_tokí
(Ë((
˝p_tokí
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_tokíË
MEM_STAT_INFO
)))

	)

2350 
	#ggc_Æloc_vec_˝p_tokí
(
n
Ë((
˝p_tokí
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_tokí),Ç 
MEM_STAT_INFO
)))

	)

2351 
	#ggc_Æloc_˛óªd_vec_˝p_tokí
(
n
Ë((
˝p_tokí
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_tokí),Ç 
MEM_STAT_INFO
)))

	)

2352 
	#ggc_Æloc_löe_m≠s
(Ë((
löe_m≠s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (löe_m≠sË
MEM_STAT_INFO
)))

	)

2353 
	#ggc_Æloc_˛óªd_löe_m≠s
(Ë((
löe_m≠s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (löe_m≠sË
MEM_STAT_INFO
)))

	)

2354 
	#ggc_Æloc_vec_löe_m≠s
(
n
Ë((
löe_m≠s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (löe_m≠s),Ç 
MEM_STAT_INFO
)))

	)

2355 
	#ggc_Æloc_˛óªd_vec_löe_m≠s
(
n
Ë((
löe_m≠s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (löe_m≠s),Ç 
MEM_STAT_INFO
)))

	)

2356 
	#ggc_Æloc_loˇti⁄_adhoc_d©a_m≠
(Ë((
loˇti⁄_adhoc_d©a_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (loˇti⁄_adhoc_d©a_m≠Ë
MEM_STAT_INFO
)))

	)

2357 
	#ggc_Æloc_˛óªd_loˇti⁄_adhoc_d©a_m≠
(Ë((
loˇti⁄_adhoc_d©a_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (loˇti⁄_adhoc_d©a_m≠Ë
MEM_STAT_INFO
)))

	)

2358 
	#ggc_Æloc_vec_loˇti⁄_adhoc_d©a_m≠
(
n
Ë((
loˇti⁄_adhoc_d©a_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (loˇti⁄_adhoc_d©a_m≠),Ç 
MEM_STAT_INFO
)))

	)

2359 
	#ggc_Æloc_˛óªd_vec_loˇti⁄_adhoc_d©a_m≠
(
n
Ë((
loˇti⁄_adhoc_d©a_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (loˇti⁄_adhoc_d©a_m≠),Ç 
MEM_STAT_INFO
)))

	)

2360 
	#ggc_Æloc_hèb
(Ë((
hèb
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (hèbË
MEM_STAT_INFO
)))

	)

2361 
	#ggc_Æloc_˛óªd_hèb
(Ë((
hèb
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (hèbË
MEM_STAT_INFO
)))

	)

2362 
	#ggc_Æloc_vec_hèb
(
n
Ë((
hèb
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (hèb),Ç 
MEM_STAT_INFO
)))

	)

2363 
	#ggc_Æloc_˛óªd_vec_hèb
(
n
Ë((
hèb
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (hèb),Ç 
MEM_STAT_INFO
)))

	)

2364 
	#ggc_Æloc_loˇti⁄_adhoc_d©a
(Ë((
loˇti⁄_adhoc_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (loˇti⁄_adhoc_d©aË
MEM_STAT_INFO
)))

	)

2365 
	#ggc_Æloc_˛óªd_loˇti⁄_adhoc_d©a
(Ë((
loˇti⁄_adhoc_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (loˇti⁄_adhoc_d©aË
MEM_STAT_INFO
)))

	)

2366 
	#ggc_Æloc_vec_loˇti⁄_adhoc_d©a
(
n
Ë((
loˇti⁄_adhoc_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (loˇti⁄_adhoc_d©a),Ç 
MEM_STAT_INFO
)))

	)

2367 
	#ggc_Æloc_˛óªd_vec_loˇti⁄_adhoc_d©a
(
n
Ë((
loˇti⁄_adhoc_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (loˇti⁄_adhoc_d©a),Ç 
MEM_STAT_INFO
)))

	)

2368 
	#ggc_Æloc_m≠s_öfo
(Ë((
m≠s_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (m≠s_öfoË
MEM_STAT_INFO
)))

	)

2369 
	#ggc_Æloc_˛óªd_m≠s_öfo
(Ë((
m≠s_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (m≠s_öfoË
MEM_STAT_INFO
)))

	)

2370 
	#ggc_Æloc_vec_m≠s_öfo
(
n
Ë((
m≠s_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (m≠s_öfo),Ç 
MEM_STAT_INFO
)))

	)

2371 
	#ggc_Æloc_˛óªd_vec_m≠s_öfo
(
n
Ë((
m≠s_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (m≠s_öfo),Ç 
MEM_STAT_INFO
)))

	)

2372 
	#ggc_Æloc_löe_m≠
(Ë((
löe_m≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (löe_m≠Ë
MEM_STAT_INFO
)))

	)

2373 
	#ggc_Æloc_˛óªd_löe_m≠
(Ë((
löe_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (löe_m≠Ë
MEM_STAT_INFO
)))

	)

2374 
	#ggc_Æloc_vec_löe_m≠
(
n
Ë((
löe_m≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (löe_m≠),Ç 
MEM_STAT_INFO
)))

	)

2375 
	#ggc_Æloc_˛óªd_vec_löe_m≠
(
n
Ë((
löe_m≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (löe_m≠),Ç 
MEM_STAT_INFO
)))

	)

2376 
	#ggc_Æloc_m≠_u
(Ë((
m≠_u
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (m≠_uË
MEM_STAT_INFO
)))

	)

2377 
	#ggc_Æloc_˛óªd_m≠_u
(Ë((
m≠_u
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (m≠_uË
MEM_STAT_INFO
)))

	)

2378 
	#ggc_Æloc_vec_m≠_u
(
n
Ë((
m≠_u
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (m≠_u),Ç 
MEM_STAT_INFO
)))

	)

2379 
	#ggc_Æloc_˛óªd_vec_m≠_u
(
n
Ë((
m≠_u
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (m≠_u),Ç 
MEM_STAT_INFO
)))

	)

2380 
	#ggc_Æloc_löe_m≠_ma¸o
(Ë((
löe_m≠_ma¸o
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (löe_m≠_ma¸oË
MEM_STAT_INFO
)))

	)

2381 
	#ggc_Æloc_˛óªd_löe_m≠_ma¸o
(Ë((
löe_m≠_ma¸o
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (löe_m≠_ma¸oË
MEM_STAT_INFO
)))

	)

2382 
	#ggc_Æloc_vec_löe_m≠_ma¸o
(
n
Ë((
löe_m≠_ma¸o
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (löe_m≠_ma¸o),Ç 
MEM_STAT_INFO
)))

	)

2383 
	#ggc_Æloc_˛óªd_vec_löe_m≠_ma¸o
(
n
Ë((
löe_m≠_ma¸o
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (löe_m≠_ma¸o),Ç 
MEM_STAT_INFO
)))

	)

2384 
	#ggc_Æloc_åì_node
(
SIZE
Ë((
åì_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2385 
	#ggc_Æloc_˛óªd_åì_node
(
SIZE
Ë((
åì_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 (SIZE 
MEM_STAT_INFO
)))

	)

2386 
	#ggc_Æloc_vec_åì_node
(
SIZE
, 
n
Ë((
åì_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2387 
	#ggc_Æloc_˛óªd_vec_åì_node
(
SIZE
, 
n
Ë((
åì_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 (SIZE,Ç 
MEM_STAT_INFO
)))

	)

2388 
	#ggc_Æloc_˝p_hashnode
(Ë((
˝p_hashnode
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝p_hashnodeË
MEM_STAT_INFO
)))

	)

2389 
	#ggc_Æloc_˛óªd_˝p_hashnode
(Ë((
˝p_hashnode
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝p_hashnodeË
MEM_STAT_INFO
)))

	)

2390 
	#ggc_Æloc_vec_˝p_hashnode
(
n
Ë((
˝p_hashnode
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝p_hashnode),Ç 
MEM_STAT_INFO
)))

	)

2391 
	#ggc_Æloc_˛óªd_vec_˝p_hashnode
(
n
Ë((
˝p_hashnode
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝p_hashnode),Ç 
MEM_STAT_INFO
)))

	)

2392 
	#ggc_Æloc_löe_m≠_‹dö¨y
(Ë((
löe_m≠_‹dö¨y
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (löe_m≠_‹dö¨yË
MEM_STAT_INFO
)))

	)

2393 
	#ggc_Æloc_˛óªd_löe_m≠_‹dö¨y
(Ë((
löe_m≠_‹dö¨y
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (löe_m≠_‹dö¨yË
MEM_STAT_INFO
)))

	)

2394 
	#ggc_Æloc_vec_löe_m≠_‹dö¨y
(
n
Ë((
löe_m≠_‹dö¨y
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (löe_m≠_‹dö¨y),Ç 
MEM_STAT_INFO
)))

	)

2395 
	#ggc_Æloc_˛óªd_vec_löe_m≠_‹dö¨y
(
n
Ë((
löe_m≠_‹dö¨y
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (löe_m≠_‹dö¨y),Ç 
MEM_STAT_INFO
)))

	)

2398 
	#ggc_Æloc_©å
(Ë((
©å
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (©åË
MEM_STAT_INFO
)))

	)

2399 
	#ggc_Æloc_˛óªd_©å
(Ë((
©å
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (©åË
MEM_STAT_INFO
)))

	)

2400 
	#ggc_Æloc_vec_©å
(
n
Ë((
©å
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (©å),Ç 
MEM_STAT_INFO
)))

	)

2401 
	#ggc_Æloc_˛óªd_vec_©å
(
n
Ë((
©å
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (©å),Ç 
MEM_STAT_INFO
)))

	)

2402 
	#ggc_Æloc_hash
(Ë((
hash
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (hashË
MEM_STAT_INFO
)))

	)

2403 
	#ggc_Æloc_˛óªd_hash
(Ë((
hash
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (hashË
MEM_STAT_INFO
)))

	)

2404 
	#ggc_Æloc_vec_hash
(
n
Ë((
hash
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (hash),Ç 
MEM_STAT_INFO
)))

	)

2405 
	#ggc_Æloc_˛óªd_vec_hash
(
n
Ë((
hash
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (hash),Ç 
MEM_STAT_INFO
)))

	)

2406 
	#ggc_Æloc_objc_m≠_t
(Ë((
objc_m≠_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (objc_m≠_tË
MEM_STAT_INFO
)))

	)

2407 
	#ggc_Æloc_˛óªd_objc_m≠_t
(Ë((
objc_m≠_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (objc_m≠_tË
MEM_STAT_INFO
)))

	)

2408 
	#ggc_Æloc_vec_objc_m≠_t
(
n
Ë((
objc_m≠_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (objc_m≠_t),Ç 
MEM_STAT_INFO
)))

	)

2409 
	#ggc_Æloc_˛óªd_vec_objc_m≠_t
(
n
Ë((
objc_m≠_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (objc_m≠_t),Ç 
MEM_STAT_INFO
)))

	)

2410 
	#ggc_Æloc_mëhod_íåy
(Ë((
mëhod_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (mëhod_íåyË
MEM_STAT_INFO
)))

	)

2411 
	#ggc_Æloc_˛óªd_mëhod_íåy
(Ë((
mëhod_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (mëhod_íåyË
MEM_STAT_INFO
)))

	)

2412 
	#ggc_Æloc_vec_mëhod_íåy
(
n
Ë((
mëhod_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (mëhod_íåy),Ç 
MEM_STAT_INFO
)))

	)

2413 
	#ggc_Æloc_˛óªd_vec_mëhod_íåy
(
n
Ë((
mëhod_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (mëhod_íåy),Ç 
MEM_STAT_INFO
)))

	)

2414 
	#ggc_Æloc_c⁄°™t_poﬁ
(Ë((
c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°™t_poﬁË
MEM_STAT_INFO
)))

	)

2415 
	#ggc_Æloc_˛óªd_c⁄°™t_poﬁ
(Ë((
c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°™t_poﬁË
MEM_STAT_INFO
)))

	)

2416 
	#ggc_Æloc_vec_c⁄°™t_poﬁ
(
n
Ë((
c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°™t_poﬁ),Ç 
MEM_STAT_INFO
)))

	)

2417 
	#ggc_Æloc_˛óªd_vec_c⁄°™t_poﬁ
(
n
Ë((
c⁄°™t_poﬁ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°™t_poﬁ),Ç 
MEM_STAT_INFO
)))

	)

2418 
	#ggc_Æloc_go_ch¨_p
(Ë((
go_ch¨_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (go_ch¨_pË
MEM_STAT_INFO
)))

	)

2419 
	#ggc_Æloc_˛óªd_go_ch¨_p
(Ë((
go_ch¨_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (go_ch¨_pË
MEM_STAT_INFO
)))

	)

2420 
	#ggc_Æloc_vec_go_ch¨_p
(
n
Ë((
go_ch¨_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (go_ch¨_p),Ç 
MEM_STAT_INFO
)))

	)

2421 
	#ggc_Æloc_˛óªd_vec_go_ch¨_p
(
n
Ë((
go_ch¨_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (go_ch¨_p),Ç 
MEM_STAT_INFO
)))

	)

2422 
	#ggc_Æloc_˝_u≈¨£d_fun˘i⁄s_íåy
(Ë((
˝_u≈¨£d_fun˘i⁄s_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåyË
MEM_STAT_INFO
)))

	)

2423 
	#ggc_Æloc_˛óªd_˝_u≈¨£d_fun˘i⁄s_íåy
(Ë((
˝_u≈¨£d_fun˘i⁄s_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåyË
MEM_STAT_INFO
)))

	)

2424 
	#ggc_Æloc_vec_˝_u≈¨£d_fun˘i⁄s_íåy
(
n
Ë((
˝_u≈¨£d_fun˘i⁄s_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåy),Ç 
MEM_STAT_INFO
)))

	)

2425 
	#ggc_Æloc_˛óªd_vec_˝_u≈¨£d_fun˘i⁄s_íåy
(
n
Ë((
˝_u≈¨£d_fun˘i⁄s_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_u≈¨£d_fun˘i⁄s_íåy),Ç 
MEM_STAT_INFO
)))

	)

2426 
	#ggc_Æloc_˝_deÁu…_¨g_íåy
(Ë((
˝_deÁu…_¨g_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_deÁu…_¨g_íåyË
MEM_STAT_INFO
)))

	)

2427 
	#ggc_Æloc_˛óªd_˝_deÁu…_¨g_íåy
(Ë((
˝_deÁu…_¨g_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_deÁu…_¨g_íåyË
MEM_STAT_INFO
)))

	)

2428 
	#ggc_Æloc_vec_˝_deÁu…_¨g_íåy
(
n
Ë((
˝_deÁu…_¨g_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_deÁu…_¨g_íåy),Ç 
MEM_STAT_INFO
)))

	)

2429 
	#ggc_Æloc_˛óªd_vec_˝_deÁu…_¨g_íåy
(
n
Ë((
˝_deÁu…_¨g_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_deÁu…_¨g_íåy),Ç 
MEM_STAT_INFO
)))

	)

2430 
	#ggc_Æloc_˝_tokí_ˇche_±r
(Ë((
˝_tokí_ˇche_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_tokí_ˇche_±rË
MEM_STAT_INFO
)))

	)

2431 
	#ggc_Æloc_˛óªd_˝_tokí_ˇche_±r
(Ë((
˝_tokí_ˇche_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_tokí_ˇche_±rË
MEM_STAT_INFO
)))

	)

2432 
	#ggc_Æloc_vec_˝_tokí_ˇche_±r
(
n
Ë((
˝_tokí_ˇche_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_tokí_ˇche_±r),Ç 
MEM_STAT_INFO
)))

	)

2433 
	#ggc_Æloc_˛óªd_vec_˝_tokí_ˇche_±r
(
n
Ë((
˝_tokí_ˇche_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_tokí_ˇche_±r),Ç 
MEM_STAT_INFO
)))

	)

2434 
	#ggc_Æloc_˝_tokí_posôi⁄
(Ë((
˝_tokí_posôi⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (˝_tokí_posôi⁄Ë
MEM_STAT_INFO
)))

	)

2435 
	#ggc_Æloc_˛óªd_˝_tokí_posôi⁄
(Ë((
˝_tokí_posôi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (˝_tokí_posôi⁄Ë
MEM_STAT_INFO
)))

	)

2436 
	#ggc_Æloc_vec_˝_tokí_posôi⁄
(
n
Ë((
˝_tokí_posôi⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (˝_tokí_posôi⁄),Ç 
MEM_STAT_INFO
)))

	)

2437 
	#ggc_Æloc_˛óªd_vec_˝_tokí_posôi⁄
(
n
Ë((
˝_tokí_posôi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (˝_tokí_posôi⁄),Ç 
MEM_STAT_INFO
)))

	)

2438 
	#ggc_Æloc_öcom∂ëe_v¨
(Ë((
öcom∂ëe_v¨
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (öcom∂ëe_v¨Ë
MEM_STAT_INFO
)))

	)

2439 
	#ggc_Æloc_˛óªd_öcom∂ëe_v¨
(Ë((
öcom∂ëe_v¨
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (öcom∂ëe_v¨Ë
MEM_STAT_INFO
)))

	)

2440 
	#ggc_Æloc_vec_öcom∂ëe_v¨
(
n
Ë((
öcom∂ëe_v¨
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (öcom∂ëe_v¨),Ç 
MEM_STAT_INFO
)))

	)

2441 
	#ggc_Æloc_˛óªd_vec_öcom∂ëe_v¨
(
n
Ë((
öcom∂ëe_v¨
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (öcom∂ëe_v¨),Ç 
MEM_STAT_INFO
)))

	)

2442 
	#ggc_Æloc_åì_∑ú_p
(Ë((
åì_∑ú_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_∑ú_pË
MEM_STAT_INFO
)))

	)

2443 
	#ggc_Æloc_˛óªd_åì_∑ú_p
(Ë((
åì_∑ú_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_∑ú_pË
MEM_STAT_INFO
)))

	)

2444 
	#ggc_Æloc_vec_åì_∑ú_p
(
n
Ë((
åì_∑ú_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_∑ú_p),Ç 
MEM_STAT_INFO
)))

	)

2445 
	#ggc_Æloc_˛óªd_vec_åì_∑ú_p
(
n
Ë((
åì_∑ú_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_∑ú_p),Ç 
MEM_STAT_INFO
)))

	)

2446 
	#ggc_Æloc_quÆifõd_ty≥def_ußge_t
(Ë((
quÆifõd_ty≥def_ußge_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_tË
MEM_STAT_INFO
)))

	)

2447 
	#ggc_Æloc_˛óªd_quÆifõd_ty≥def_ußge_t
(Ë((
quÆifõd_ty≥def_ußge_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_tË
MEM_STAT_INFO
)))

	)

2448 
	#ggc_Æloc_vec_quÆifõd_ty≥def_ußge_t
(
n
Ë((
quÆifõd_ty≥def_ußge_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_t),Ç 
MEM_STAT_INFO
)))

	)

2449 
	#ggc_Æloc_˛óªd_vec_quÆifõd_ty≥def_ußge_t
(
n
Ë((
quÆifõd_ty≥def_ußge_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (quÆifõd_ty≥def_ußge_t),Ç 
MEM_STAT_INFO
)))

	)

2450 
	#ggc_Æloc_±rmem_c°_t
(Ë((
±rmem_c°_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (±rmem_c°_tË
MEM_STAT_INFO
)))

	)

2451 
	#ggc_Æloc_˛óªd_±rmem_c°_t
(Ë((
±rmem_c°_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (±rmem_c°_tË
MEM_STAT_INFO
)))

	)

2452 
	#ggc_Æloc_vec_±rmem_c°_t
(
n
Ë((
±rmem_c°_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (±rmem_c°_t),Ç 
MEM_STAT_INFO
)))

	)

2453 
	#ggc_Æloc_˛óªd_vec_±rmem_c°_t
(
n
Ë((
±rmem_c°_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (±rmem_c°_t),Ç 
MEM_STAT_INFO
)))

	)

2454 
	#ggc_Æloc_ãm∂©e_∑rm_ödex
(Ë((
ãm∂©e_∑rm_ödex
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ãm∂©e_∑rm_ödexË
MEM_STAT_INFO
)))

	)

2455 
	#ggc_Æloc_˛óªd_ãm∂©e_∑rm_ödex
(Ë((
ãm∂©e_∑rm_ödex
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ãm∂©e_∑rm_ödexË
MEM_STAT_INFO
)))

	)

2456 
	#ggc_Æloc_vec_ãm∂©e_∑rm_ödex
(
n
Ë((
ãm∂©e_∑rm_ödex
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ãm∂©e_∑rm_ödex),Ç 
MEM_STAT_INFO
)))

	)

2457 
	#ggc_Æloc_˛óªd_vec_ãm∂©e_∑rm_ödex
(
n
Ë((
ãm∂©e_∑rm_ödex
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ãm∂©e_∑rm_ödex),Ç 
MEM_STAT_INFO
)))

	)

2458 
	#ggc_Æloc_bödög_íåy
(Ë((
bödög_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bödög_íåyË
MEM_STAT_INFO
)))

	)

2459 
	#ggc_Æloc_˛óªd_bödög_íåy
(Ë((
bödög_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bödög_íåyË
MEM_STAT_INFO
)))

	)

2460 
	#ggc_Æloc_vec_bödög_íåy
(
n
Ë((
bödög_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bödög_íåy),Ç 
MEM_STAT_INFO
)))

	)

2461 
	#ggc_Æloc_˛óªd_vec_bödög_íåy
(
n
Ë((
bödög_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bödög_íåy),Ç 
MEM_STAT_INFO
)))

	)

2462 
	#ggc_Æloc_bödög_èbÀ
(Ë((
bödög_èbÀ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bödög_èbÀË
MEM_STAT_INFO
)))

	)

2463 
	#ggc_Æloc_˛óªd_bödög_èbÀ
(Ë((
bödög_èbÀ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bödög_èbÀË
MEM_STAT_INFO
)))

	)

2464 
	#ggc_Æloc_vec_bödög_èbÀ
(
n
Ë((
bödög_èbÀ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bödög_èbÀ),Ç 
MEM_STAT_INFO
)))

	)

2465 
	#ggc_Æloc_˛óªd_vec_bödög_èbÀ
(
n
Ë((
bödög_èbÀ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bödög_èbÀ),Ç 
MEM_STAT_INFO
)))

	)

2466 
	#ggc_Æloc_≥ndög_ªdeföôi⁄
(Ë((
≥ndög_ªdeföôi⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_ªdeföôi⁄Ë
MEM_STAT_INFO
)))

	)

2467 
	#ggc_Æloc_˛óªd_≥ndög_ªdeföôi⁄
(Ë((
≥ndög_ªdeföôi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_ªdeföôi⁄Ë
MEM_STAT_INFO
)))

	)

2468 
	#ggc_Æloc_vec_≥ndög_ªdeföôi⁄
(
n
Ë((
≥ndög_ªdeföôi⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_ªdeföôi⁄),Ç 
MEM_STAT_INFO
)))

	)

2469 
	#ggc_Æloc_˛óªd_vec_≥ndög_ªdeföôi⁄
(
n
Ë((
≥ndög_ªdeföôi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_ªdeföôi⁄),Ç 
MEM_STAT_INFO
)))

	)

2470 
	#ggc_Æloc_≥ndög_wók
(Ë((
≥ndög_wók
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (≥ndög_wókË
MEM_STAT_INFO
)))

	)

2471 
	#ggc_Æloc_˛óªd_≥ndög_wók
(Ë((
≥ndög_wók
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (≥ndög_wókË
MEM_STAT_INFO
)))

	)

2472 
	#ggc_Æloc_vec_≥ndög_wók
(
n
Ë((
≥ndög_wók
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (≥ndög_wók),Ç 
MEM_STAT_INFO
)))

	)

2473 
	#ggc_Æloc_˛óªd_vec_≥ndög_wók
(
n
Ë((
≥ndög_wók
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (≥ndög_wók),Ç 
MEM_STAT_INFO
)))

	)

2474 
	#ggc_Æloc_°mt_åì
(Ë((
°mt_åì
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (°mt_åìË
MEM_STAT_INFO
)))

	)

2475 
	#ggc_Æloc_˛óªd_°mt_åì
(Ë((
°mt_åì
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (°mt_åìË
MEM_STAT_INFO
)))

	)

2476 
	#ggc_Æloc_vec_°mt_åì
(
n
Ë((
°mt_åì
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (°mt_åì),Ç 
MEM_STAT_INFO
)))

	)

2477 
	#ggc_Æloc_˛óªd_vec_°mt_åì
(
n
Ë((
°mt_åì
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (°mt_åì),Ç 
MEM_STAT_INFO
)))

	)

2478 
	#ggc_Æloc_åì_gc_vec
(Ë((
åì_gc_vec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åì_gc_vecË
MEM_STAT_INFO
)))

	)

2479 
	#ggc_Æloc_˛óªd_åì_gc_vec
(Ë((
åì_gc_vec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åì_gc_vecË
MEM_STAT_INFO
)))

	)

2480 
	#ggc_Æloc_vec_åì_gc_vec
(
n
Ë((
åì_gc_vec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì_gc_vec),Ç 
MEM_STAT_INFO
)))

	)

2481 
	#ggc_Æloc_˛óªd_vec_åì_gc_vec
(
n
Ë((
åì_gc_vec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì_gc_vec),Ç 
MEM_STAT_INFO
)))

	)

2482 
	#ggc_Æloc_c⁄°_ch¨_p
(Ë((
c⁄°_ch¨_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_ch¨_pË
MEM_STAT_INFO
)))

	)

2483 
	#ggc_Æloc_˛óªd_c⁄°_ch¨_p
(Ë((
c⁄°_ch¨_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_ch¨_pË
MEM_STAT_INFO
)))

	)

2484 
	#ggc_Æloc_vec_c⁄°_ch¨_p
(
n
Ë((
c⁄°_ch¨_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_ch¨_p),Ç 
MEM_STAT_INFO
)))

	)

2485 
	#ggc_Æloc_˛óªd_vec_c⁄°_ch¨_p
(
n
Ë((
c⁄°_ch¨_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_ch¨_p),Ç 
MEM_STAT_INFO
)))

	)

2486 
	#ggc_Æloc_c_bödög_±r
(Ë((
c_bödög_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_bödög_±rË
MEM_STAT_INFO
)))

	)

2487 
	#ggc_Æloc_˛óªd_c_bödög_±r
(Ë((
c_bödög_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_bödög_±rË
MEM_STAT_INFO
)))

	)

2488 
	#ggc_Æloc_vec_c_bödög_±r
(
n
Ë((
c_bödög_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_bödög_±r),Ç 
MEM_STAT_INFO
)))

	)

2489 
	#ggc_Æloc_˛óªd_vec_c_bödög_±r
(
n
Ë((
c_bödög_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_bödög_±r),Ç 
MEM_STAT_INFO
)))

	)

2490 
	#ggc_Æloc_c_gŸo_bödögs_p
(Ë((
c_gŸo_bödögs_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c_gŸo_bödögs_pË
MEM_STAT_INFO
)))

	)

2491 
	#ggc_Æloc_˛óªd_c_gŸo_bödögs_p
(Ë((
c_gŸo_bödögs_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c_gŸo_bödögs_pË
MEM_STAT_INFO
)))

	)

2492 
	#ggc_Æloc_vec_c_gŸo_bödögs_p
(
n
Ë((
c_gŸo_bödögs_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c_gŸo_bödögs_p),Ç 
MEM_STAT_INFO
)))

	)

2493 
	#ggc_Æloc_˛óªd_vec_c_gŸo_bödögs_p
(
n
Ë((
c_gŸo_bödögs_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c_gŸo_bödögs_p),Ç 
MEM_STAT_INFO
)))

	)

2494 
	#ggc_Æloc_lo›_öfo
(Ë((
lo›_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (lo›_öfoË
MEM_STAT_INFO
)))

	)

2495 
	#ggc_Æloc_˛óªd_lo›_öfo
(Ë((
lo›_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (lo›_öfoË
MEM_STAT_INFO
)))

	)

2496 
	#ggc_Æloc_vec_lo›_öfo
(
n
Ë((
lo›_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (lo›_öfo),Ç 
MEM_STAT_INFO
)))

	)

2497 
	#ggc_Æloc_˛óªd_vec_lo›_öfo
(
n
Ë((
lo›_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (lo›_öfo),Ç 
MEM_STAT_INFO
)))

	)

2498 
	#ggc_Æloc_ønge_check_öfo
(Ë((
ønge_check_öfo
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ønge_check_öfoË
MEM_STAT_INFO
)))

	)

2499 
	#ggc_Æloc_˛óªd_ønge_check_öfo
(Ë((
ønge_check_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ønge_check_öfoË
MEM_STAT_INFO
)))

	)

2500 
	#ggc_Æloc_vec_ønge_check_öfo
(
n
Ë((
ønge_check_öfo
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ønge_check_öfo),Ç 
MEM_STAT_INFO
)))

	)

2501 
	#ggc_Æloc_˛óªd_vec_ønge_check_öfo
(
n
Ë((
ønge_check_öfo
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ønge_check_öfo),Ç 
MEM_STAT_INFO
)))

	)

2502 
	#ggc_Æloc_∑rm_©å
(Ë((
∑rm_©å
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (∑rm_©åË
MEM_STAT_INFO
)))

	)

2503 
	#ggc_Æloc_˛óªd_∑rm_©å
(Ë((
∑rm_©å
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (∑rm_©åË
MEM_STAT_INFO
)))

	)

2504 
	#ggc_Æloc_vec_∑rm_©å
(
n
Ë((
∑rm_©å
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (∑rm_©å),Ç 
MEM_STAT_INFO
)))

	)

2505 
	#ggc_Æloc_˛óªd_vec_∑rm_©å
(
n
Ë((
∑rm_©å
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (∑rm_©å),Ç 
MEM_STAT_INFO
)))

	)

2506 
	#ggc_Æloc_ölöe_summ¨y_t
(Ë((
ölöe_summ¨y_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ölöe_summ¨y_tË
MEM_STAT_INFO
)))

	)

2507 
	#ggc_Æloc_˛óªd_ölöe_summ¨y_t
(Ë((
ölöe_summ¨y_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ölöe_summ¨y_tË
MEM_STAT_INFO
)))

	)

2508 
	#ggc_Æloc_vec_ölöe_summ¨y_t
(
n
Ë((
ölöe_summ¨y_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ölöe_summ¨y_t),Ç 
MEM_STAT_INFO
)))

	)

2509 
	#ggc_Æloc_˛óªd_vec_ölöe_summ¨y_t
(
n
Ë((
ölöe_summ¨y_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ölöe_summ¨y_t),Ç 
MEM_STAT_INFO
)))

	)

2510 
	#ggc_Æloc_c⁄dôi⁄s
(Ë((
c⁄dôi⁄s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄dôi⁄sË
MEM_STAT_INFO
)))

	)

2511 
	#ggc_Æloc_˛óªd_c⁄dôi⁄s
(Ë((
c⁄dôi⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄dôi⁄sË
MEM_STAT_INFO
)))

	)

2512 
	#ggc_Æloc_vec_c⁄dôi⁄s
(
n
Ë((
c⁄dôi⁄s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄dôi⁄s),Ç 
MEM_STAT_INFO
)))

	)

2513 
	#ggc_Æloc_˛óªd_vec_c⁄dôi⁄s
(
n
Ë((
c⁄dôi⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄dôi⁄s),Ç 
MEM_STAT_INFO
)))

	)

2514 
	#ggc_Æloc_…o_fûe_de˛_d©a_±r
(Ë((
…o_fûe_de˛_d©a_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (…o_fûe_de˛_d©a_±rË
MEM_STAT_INFO
)))

	)

2515 
	#ggc_Æloc_˛óªd_…o_fûe_de˛_d©a_±r
(Ë((
…o_fûe_de˛_d©a_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (…o_fûe_de˛_d©a_±rË
MEM_STAT_INFO
)))

	)

2516 
	#ggc_Æloc_vec_…o_fûe_de˛_d©a_±r
(
n
Ë((
…o_fûe_de˛_d©a_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (…o_fûe_de˛_d©a_±r),Ç 
MEM_STAT_INFO
)))

	)

2517 
	#ggc_Æloc_˛óªd_vec_…o_fûe_de˛_d©a_±r
(
n
Ë((
…o_fûe_de˛_d©a_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (…o_fûe_de˛_d©a_±r),Ç 
MEM_STAT_INFO
)))

	)

2518 
	#ggc_Æloc_…o_ö_de˛_°©e_±r
(Ë((
…o_ö_de˛_°©e_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (…o_ö_de˛_°©e_±rË
MEM_STAT_INFO
)))

	)

2519 
	#ggc_Æloc_˛óªd_…o_ö_de˛_°©e_±r
(Ë((
…o_ö_de˛_°©e_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (…o_ö_de˛_°©e_±rË
MEM_STAT_INFO
)))

	)

2520 
	#ggc_Æloc_vec_…o_ö_de˛_°©e_±r
(
n
Ë((
…o_ö_de˛_°©e_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (…o_ö_de˛_°©e_±r),Ç 
MEM_STAT_INFO
)))

	)

2521 
	#ggc_Æloc_˛óªd_vec_…o_ö_de˛_°©e_±r
(
n
Ë((
…o_ö_de˛_°©e_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (…o_ö_de˛_°©e_±r),Ç 
MEM_STAT_INFO
)))

	)

2522 
	#ggc_Æloc_ùa_agg_ª∂a˚mít_vÆue_p
(Ë((
ùa_agg_ª∂a˚mít_vÆue_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆue_pË
MEM_STAT_INFO
)))

	)

2523 
	#ggc_Æloc_˛óªd_ùa_agg_ª∂a˚mít_vÆue_p
(Ë((
ùa_agg_ª∂a˚mít_vÆue_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆue_pË
MEM_STAT_INFO
)))

	)

2524 
	#ggc_Æloc_vec_ùa_agg_ª∂a˚mít_vÆue_p
(
n
Ë((
ùa_agg_ª∂a˚mít_vÆue_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆue_p),Ç 
MEM_STAT_INFO
)))

	)

2525 
	#ggc_Æloc_˛óªd_vec_ùa_agg_ª∂a˚mít_vÆue_p
(
n
Ë((
ùa_agg_ª∂a˚mít_vÆue_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_agg_ª∂a˚mít_vÆue_p),Ç 
MEM_STAT_INFO
)))

	)

2526 
	#ggc_Æloc_ùa_agg_jump_fun˘i⁄_p
(Ë((
ùa_agg_jump_fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄_pË
MEM_STAT_INFO
)))

	)

2527 
	#ggc_Æloc_˛óªd_ùa_agg_jump_fun˘i⁄_p
(Ë((
ùa_agg_jump_fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄_pË
MEM_STAT_INFO
)))

	)

2528 
	#ggc_Æloc_vec_ùa_agg_jump_fun˘i⁄_p
(
n
Ë((
ùa_agg_jump_fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄_p),Ç 
MEM_STAT_INFO
)))

	)

2529 
	#ggc_Æloc_˛óªd_vec_ùa_agg_jump_fun˘i⁄_p
(
n
Ë((
ùa_agg_jump_fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_agg_jump_fun˘i⁄_p),Ç 
MEM_STAT_INFO
)))

	)

2530 
	#ggc_Æloc_ch¨_±r
(Ë((
ch¨_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ch¨_±rË
MEM_STAT_INFO
)))

	)

2531 
	#ggc_Æloc_˛óªd_ch¨_±r
(Ë((
ch¨_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ch¨_±rË
MEM_STAT_INFO
)))

	)

2532 
	#ggc_Æloc_vec_ch¨_±r
(
n
Ë((
ch¨_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ch¨_±r),Ç 
MEM_STAT_INFO
)))

	)

2533 
	#ggc_Æloc_˛óªd_vec_ch¨_±r
(
n
Ë((
ch¨_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ch¨_±r),Ç 
MEM_STAT_INFO
)))

	)

2534 
	#ggc_Æloc_u£_›î™d_p
(Ë((
u£_›î™d_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (u£_›î™d_pË
MEM_STAT_INFO
)))

	)

2535 
	#ggc_Æloc_˛óªd_u£_›î™d_p
(Ë((
u£_›î™d_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (u£_›î™d_pË
MEM_STAT_INFO
)))

	)

2536 
	#ggc_Æloc_vec_u£_›î™d_p
(
n
Ë((
u£_›î™d_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (u£_›î™d_p),Ç 
MEM_STAT_INFO
)))

	)

2537 
	#ggc_Æloc_˛óªd_vec_u£_›î™d_p
(
n
Ë((
u£_›î™d_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (u£_›î™d_p),Ç 
MEM_STAT_INFO
)))

	)

2538 
	#ggc_Æloc_def_›î™d_p
(Ë((
def_›î™d_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (def_›î™d_pË
MEM_STAT_INFO
)))

	)

2539 
	#ggc_Æloc_˛óªd_def_›î™d_p
(Ë((
def_›î™d_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (def_›î™d_pË
MEM_STAT_INFO
)))

	)

2540 
	#ggc_Æloc_vec_def_›î™d_p
(
n
Ë((
def_›î™d_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (def_›î™d_p),Ç 
MEM_STAT_INFO
)))

	)

2541 
	#ggc_Æloc_˛óªd_vec_def_›î™d_p
(
n
Ë((
def_›î™d_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (def_›î™d_p),Ç 
MEM_STAT_INFO
)))

	)

2542 
	#ggc_Æloc_gim∂e_£q_node
(Ë((
gim∂e_£q_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_£q_nodeË
MEM_STAT_INFO
)))

	)

2543 
	#ggc_Æloc_˛óªd_gim∂e_£q_node
(Ë((
gim∂e_£q_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_£q_nodeË
MEM_STAT_INFO
)))

	)

2544 
	#ggc_Æloc_vec_gim∂e_£q_node
(
n
Ë((
gim∂e_£q_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_£q_node),Ç 
MEM_STAT_INFO
)))

	)

2545 
	#ggc_Æloc_˛óªd_vec_gim∂e_£q_node
(
n
Ë((
gim∂e_£q_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_£q_node),Ç 
MEM_STAT_INFO
)))

	)

2546 
	#ggc_Æloc_fun˘i⁄_p
(Ë((
fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (fun˘i⁄_pË
MEM_STAT_INFO
)))

	)

2547 
	#ggc_Æloc_˛óªd_fun˘i⁄_p
(Ë((
fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (fun˘i⁄_pË
MEM_STAT_INFO
)))

	)

2548 
	#ggc_Æloc_vec_fun˘i⁄_p
(
n
Ë((
fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (fun˘i⁄_p),Ç 
MEM_STAT_INFO
)))

	)

2549 
	#ggc_Æloc_˛óªd_vec_fun˘i⁄_p
(
n
Ë((
fun˘i⁄_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (fun˘i⁄_p),Ç 
MEM_STAT_INFO
)))

	)

2550 
	#ggc_Æloc_eh_ªgi⁄
(Ë((
eh_ªgi⁄
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ªgi⁄Ë
MEM_STAT_INFO
)))

	)

2551 
	#ggc_Æloc_˛óªd_eh_ªgi⁄
(Ë((
eh_ªgi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ªgi⁄Ë
MEM_STAT_INFO
)))

	)

2552 
	#ggc_Æloc_vec_eh_ªgi⁄
(
n
Ë((
eh_ªgi⁄
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ªgi⁄),Ç 
MEM_STAT_INFO
)))

	)

2553 
	#ggc_Æloc_˛óªd_vec_eh_ªgi⁄
(
n
Ë((
eh_ªgi⁄
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ªgi⁄),Ç 
MEM_STAT_INFO
)))

	)

2554 
	#ggc_Æloc_eh_ˇtch
(Ë((
eh_ˇtch
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_ˇtchË
MEM_STAT_INFO
)))

	)

2555 
	#ggc_Æloc_˛óªd_eh_ˇtch
(Ë((
eh_ˇtch
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_ˇtchË
MEM_STAT_INFO
)))

	)

2556 
	#ggc_Æloc_vec_eh_ˇtch
(
n
Ë((
eh_ˇtch
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_ˇtch),Ç 
MEM_STAT_INFO
)))

	)

2557 
	#ggc_Æloc_˛óªd_vec_eh_ˇtch
(
n
Ë((
eh_ˇtch
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_ˇtch),Ç 
MEM_STAT_INFO
)))

	)

2558 
	#ggc_Æloc_eh_œndög_∑d
(Ë((
eh_œndög_∑d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (eh_œndög_∑dË
MEM_STAT_INFO
)))

	)

2559 
	#ggc_Æloc_˛óªd_eh_œndög_∑d
(Ë((
eh_œndög_∑d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (eh_œndög_∑dË
MEM_STAT_INFO
)))

	)

2560 
	#ggc_Æloc_vec_eh_œndög_∑d
(
n
Ë((
eh_œndög_∑d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (eh_œndög_∑d),Ç 
MEM_STAT_INFO
)))

	)

2561 
	#ggc_Æloc_˛óªd_vec_eh_œndög_∑d
(
n
Ë((
eh_œndög_∑d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (eh_œndög_∑d),Ç 
MEM_STAT_INFO
)))

	)

2562 
	#ggc_Æloc_dch¨_p
(Ë((
dch¨_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dch¨_pË
MEM_STAT_INFO
)))

	)

2563 
	#ggc_Æloc_˛óªd_dch¨_p
(Ë((
dch¨_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dch¨_pË
MEM_STAT_INFO
)))

	)

2564 
	#ggc_Æloc_vec_dch¨_p
(
n
Ë((
dch¨_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dch¨_p),Ç 
MEM_STAT_INFO
)))

	)

2565 
	#ggc_Æloc_˛óªd_vec_dch¨_p
(
n
Ë((
dch¨_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dch¨_p),Ç 
MEM_STAT_INFO
)))

	)

2566 
	#ggc_Æloc_ˇched_dw_loc_li°
(Ë((
ˇched_dw_loc_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ˇched_dw_loc_li°Ë
MEM_STAT_INFO
)))

	)

2567 
	#ggc_Æloc_˛óªd_ˇched_dw_loc_li°
(Ë((
ˇched_dw_loc_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ˇched_dw_loc_li°Ë
MEM_STAT_INFO
)))

	)

2568 
	#ggc_Æloc_vec_ˇched_dw_loc_li°
(
n
Ë((
ˇched_dw_loc_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ˇched_dw_loc_li°),Ç 
MEM_STAT_INFO
)))

	)

2569 
	#ggc_Æloc_˛óªd_vec_ˇched_dw_loc_li°
(
n
Ë((
ˇched_dw_loc_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ˇched_dw_loc_li°),Ç 
MEM_STAT_INFO
)))

	)

2570 
	#ggc_Æloc_v¨_loc_li°
(Ë((
v¨_loc_li°
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (v¨_loc_li°Ë
MEM_STAT_INFO
)))

	)

2571 
	#ggc_Æloc_˛óªd_v¨_loc_li°
(Ë((
v¨_loc_li°
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (v¨_loc_li°Ë
MEM_STAT_INFO
)))

	)

2572 
	#ggc_Æloc_vec_v¨_loc_li°
(
n
Ë((
v¨_loc_li°
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (v¨_loc_li°),Ç 
MEM_STAT_INFO
)))

	)

2573 
	#ggc_Æloc_˛óªd_vec_v¨_loc_li°
(
n
Ë((
v¨_loc_li°
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (v¨_loc_li°),Ç 
MEM_STAT_INFO
)))

	)

2574 
	#ggc_Æloc_dõ_¨g_íåy
(Ë((
dõ_¨g_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dõ_¨g_íåyË
MEM_STAT_INFO
)))

	)

2575 
	#ggc_Æloc_˛óªd_dõ_¨g_íåy
(Ë((
dõ_¨g_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dõ_¨g_íåyË
MEM_STAT_INFO
)))

	)

2576 
	#ggc_Æloc_vec_dõ_¨g_íåy
(
n
Ë((
dõ_¨g_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dõ_¨g_íåy),Ç 
MEM_STAT_INFO
)))

	)

2577 
	#ggc_Æloc_˛óªd_vec_dõ_¨g_íåy
(
n
Ë((
dõ_¨g_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dõ_¨g_íåy),Ç 
MEM_STAT_INFO
)))

	)

2578 
	#ggc_Æloc_limbo_dõ_node
(Ë((
limbo_dõ_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (limbo_dõ_nodeË
MEM_STAT_INFO
)))

	)

2579 
	#ggc_Æloc_˛óªd_limbo_dõ_node
(Ë((
limbo_dõ_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (limbo_dõ_nodeË
MEM_STAT_INFO
)))

	)

2580 
	#ggc_Æloc_vec_limbo_dõ_node
(
n
Ë((
limbo_dõ_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (limbo_dõ_node),Ç 
MEM_STAT_INFO
)))

	)

2581 
	#ggc_Æloc_˛óªd_vec_limbo_dõ_node
(
n
Ë((
limbo_dõ_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (limbo_dõ_node),Ç 
MEM_STAT_INFO
)))

	)

2582 
	#ggc_Æloc_comd©_ty≥_node
(Ë((
comd©_ty≥_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (comd©_ty≥_nodeË
MEM_STAT_INFO
)))

	)

2583 
	#ggc_Æloc_˛óªd_comd©_ty≥_node
(Ë((
comd©_ty≥_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (comd©_ty≥_nodeË
MEM_STAT_INFO
)))

	)

2584 
	#ggc_Æloc_vec_comd©_ty≥_node
(
n
Ë((
comd©_ty≥_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (comd©_ty≥_node),Ç 
MEM_STAT_INFO
)))

	)

2585 
	#ggc_Æloc_˛óªd_vec_comd©_ty≥_node
(
n
Ë((
comd©_ty≥_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (comd©_ty≥_node),Ç 
MEM_STAT_INFO
)))

	)

2586 
	#ggc_Æloc_macöfo_íåy
(Ë((
macöfo_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (macöfo_íåyË
MEM_STAT_INFO
)))

	)

2587 
	#ggc_Æloc_˛óªd_macöfo_íåy
(Ë((
macöfo_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (macöfo_íåyË
MEM_STAT_INFO
)))

	)

2588 
	#ggc_Æloc_vec_macöfo_íåy
(
n
Ë((
macöfo_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (macöfo_íåy),Ç 
MEM_STAT_INFO
)))

	)

2589 
	#ggc_Æloc_˛óªd_vec_macöfo_íåy
(
n
Ë((
macöfo_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (macöfo_íåy),Ç 
MEM_STAT_INFO
)))

	)

2590 
	#ggc_Æloc_pub«me_íåy
(Ë((
pub«me_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (pub«me_íåyË
MEM_STAT_INFO
)))

	)

2591 
	#ggc_Æloc_˛óªd_pub«me_íåy
(Ë((
pub«me_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (pub«me_íåyË
MEM_STAT_INFO
)))

	)

2592 
	#ggc_Æloc_vec_pub«me_íåy
(
n
Ë((
pub«me_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (pub«me_íåy),Ç 
MEM_STAT_INFO
)))

	)

2593 
	#ggc_Æloc_˛óªd_vec_pub«me_íåy
(
n
Ë((
pub«me_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (pub«me_íåy),Ç 
MEM_STAT_INFO
)))

	)

2594 
	#ggc_Æloc_dõ_node
(Ë((
dõ_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dõ_nodeË
MEM_STAT_INFO
)))

	)

2595 
	#ggc_Æloc_˛óªd_dõ_node
(Ë((
dõ_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dõ_nodeË
MEM_STAT_INFO
)))

	)

2596 
	#ggc_Æloc_vec_dõ_node
(
n
Ë((
dõ_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dõ_node),Ç 
MEM_STAT_INFO
)))

	)

2597 
	#ggc_Æloc_˛óªd_vec_dõ_node
(
n
Ë((
dõ_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dõ_node),Ç 
MEM_STAT_INFO
)))

	)

2598 
	#ggc_Æloc_dw_©å_node
(Ë((
dw_©å_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_©å_nodeË
MEM_STAT_INFO
)))

	)

2599 
	#ggc_Æloc_˛óªd_dw_©å_node
(Ë((
dw_©å_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_©å_nodeË
MEM_STAT_INFO
)))

	)

2600 
	#ggc_Æloc_vec_dw_©å_node
(
n
Ë((
dw_©å_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_©å_node),Ç 
MEM_STAT_INFO
)))

	)

2601 
	#ggc_Æloc_˛óªd_vec_dw_©å_node
(
n
Ë((
dw_©å_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_©å_node),Ç 
MEM_STAT_INFO
)))

	)

2602 
	#ggc_Æloc_dw_löe_öfo_èbÀ_p
(Ë((
dw_löe_öfo_èbÀ_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_löe_öfo_èbÀ_pË
MEM_STAT_INFO
)))

	)

2603 
	#ggc_Æloc_˛óªd_dw_löe_öfo_èbÀ_p
(Ë((
dw_löe_öfo_èbÀ_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_löe_öfo_èbÀ_pË
MEM_STAT_INFO
)))

	)

2604 
	#ggc_Æloc_vec_dw_löe_öfo_èbÀ_p
(
n
Ë((
dw_löe_öfo_èbÀ_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_löe_öfo_èbÀ_p),Ç 
MEM_STAT_INFO
)))

	)

2605 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_èbÀ_p
(
n
Ë((
dw_löe_öfo_èbÀ_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_löe_öfo_èbÀ_p),Ç 
MEM_STAT_INFO
)))

	)

2606 
	#ggc_Æloc_dw_löe_öfo_èbÀ
(Ë((
dw_löe_öfo_èbÀ
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_löe_öfo_èbÀË
MEM_STAT_INFO
)))

	)

2607 
	#ggc_Æloc_˛óªd_dw_löe_öfo_èbÀ
(Ë((
dw_löe_öfo_èbÀ
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_löe_öfo_èbÀË
MEM_STAT_INFO
)))

	)

2608 
	#ggc_Æloc_vec_dw_löe_öfo_èbÀ
(
n
Ë((
dw_löe_öfo_èbÀ
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_löe_öfo_èbÀ),Ç 
MEM_STAT_INFO
)))

	)

2609 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_èbÀ
(
n
Ë((
dw_löe_öfo_èbÀ
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_löe_öfo_èbÀ),Ç 
MEM_STAT_INFO
)))

	)

2610 
	#ggc_Æloc_dw_löe_öfo_íåy
(Ë((
dw_löe_öfo_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_löe_öfo_íåyË
MEM_STAT_INFO
)))

	)

2611 
	#ggc_Æloc_˛óªd_dw_löe_öfo_íåy
(Ë((
dw_löe_öfo_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_löe_öfo_íåyË
MEM_STAT_INFO
)))

	)

2612 
	#ggc_Æloc_vec_dw_löe_öfo_íåy
(
n
Ë((
dw_löe_öfo_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_löe_öfo_íåy),Ç 
MEM_STAT_INFO
)))

	)

2613 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_íåy
(
n
Ë((
dw_löe_öfo_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_löe_öfo_íåy),Ç 
MEM_STAT_INFO
)))

	)

2614 
	#ggc_Æloc_comd©_ty≥_node_ªf
(Ë((
comd©_ty≥_node_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (comd©_ty≥_node_ªfË
MEM_STAT_INFO
)))

	)

2615 
	#ggc_Æloc_˛óªd_comd©_ty≥_node_ªf
(Ë((
comd©_ty≥_node_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (comd©_ty≥_node_ªfË
MEM_STAT_INFO
)))

	)

2616 
	#ggc_Æloc_vec_comd©_ty≥_node_ªf
(
n
Ë((
comd©_ty≥_node_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (comd©_ty≥_node_ªf),Ç 
MEM_STAT_INFO
)))

	)

2617 
	#ggc_Æloc_˛óªd_vec_comd©_ty≥_node_ªf
(
n
Ë((
comd©_ty≥_node_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (comd©_ty≥_node_ªf),Ç 
MEM_STAT_INFO
)))

	)

2618 
	#ggc_Æloc_dw_ønges_by_œbñ_ªf
(Ë((
dw_ønges_by_œbñ_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_ønges_by_œbñ_ªfË
MEM_STAT_INFO
)))

	)

2619 
	#ggc_Æloc_˛óªd_dw_ønges_by_œbñ_ªf
(Ë((
dw_ønges_by_œbñ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_ønges_by_œbñ_ªfË
MEM_STAT_INFO
)))

	)

2620 
	#ggc_Æloc_vec_dw_ønges_by_œbñ_ªf
(
n
Ë((
dw_ønges_by_œbñ_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_ønges_by_œbñ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2621 
	#ggc_Æloc_˛óªd_vec_dw_ønges_by_œbñ_ªf
(
n
Ë((
dw_ønges_by_œbñ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_ønges_by_œbñ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2622 
	#ggc_Æloc_dw_ønges_ªf
(Ë((
dw_ønges_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_ønges_ªfË
MEM_STAT_INFO
)))

	)

2623 
	#ggc_Æloc_˛óªd_dw_ønges_ªf
(Ë((
dw_ønges_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_ønges_ªfË
MEM_STAT_INFO
)))

	)

2624 
	#ggc_Æloc_vec_dw_ønges_ªf
(
n
Ë((
dw_ønges_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_ønges_ªf),Ç 
MEM_STAT_INFO
)))

	)

2625 
	#ggc_Æloc_˛óªd_vec_dw_ønges_ªf
(
n
Ë((
dw_ønges_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_ønges_ªf),Ç 
MEM_STAT_INFO
)))

	)

2626 
	#ggc_Æloc_pub«me_ªf
(Ë((
pub«me_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (pub«me_ªfË
MEM_STAT_INFO
)))

	)

2627 
	#ggc_Æloc_˛óªd_pub«me_ªf
(Ë((
pub«me_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (pub«me_ªfË
MEM_STAT_INFO
)))

	)

2628 
	#ggc_Æloc_vec_pub«me_ªf
(
n
Ë((
pub«me_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (pub«me_ªf),Ç 
MEM_STAT_INFO
)))

	)

2629 
	#ggc_Æloc_˛óªd_vec_pub«me_ªf
(
n
Ë((
pub«me_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (pub«me_ªf),Ç 
MEM_STAT_INFO
)))

	)

2630 
	#ggc_Æloc_dw_löe_öfo_ªf
(Ë((
dw_löe_öfo_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_löe_öfo_ªfË
MEM_STAT_INFO
)))

	)

2631 
	#ggc_Æloc_˛óªd_dw_löe_öfo_ªf
(Ë((
dw_löe_öfo_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_löe_öfo_ªfË
MEM_STAT_INFO
)))

	)

2632 
	#ggc_Æloc_vec_dw_löe_öfo_ªf
(
n
Ë((
dw_löe_öfo_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_löe_öfo_ªf),Ç 
MEM_STAT_INFO
)))

	)

2633 
	#ggc_Æloc_˛óªd_vec_dw_löe_öfo_ªf
(
n
Ë((
dw_löe_öfo_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_löe_öfo_ªf),Ç 
MEM_STAT_INFO
)))

	)

2634 
	#ggc_Æloc_dw_©å_ªf
(Ë((
dw_©å_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_©å_ªfË
MEM_STAT_INFO
)))

	)

2635 
	#ggc_Æloc_˛óªd_dw_©å_ªf
(Ë((
dw_©å_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_©å_ªfË
MEM_STAT_INFO
)))

	)

2636 
	#ggc_Æloc_vec_dw_©å_ªf
(
n
Ë((
dw_©å_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_©å_ªf),Ç 
MEM_STAT_INFO
)))

	)

2637 
	#ggc_Æloc_˛óªd_vec_dw_©å_ªf
(
n
Ë((
dw_©å_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_©å_ªf),Ç 
MEM_STAT_INFO
)))

	)

2638 
	#ggc_Æloc_dw_loc_li°_node
(Ë((
dw_loc_li°_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_loc_li°_nodeË
MEM_STAT_INFO
)))

	)

2639 
	#ggc_Æloc_˛óªd_dw_loc_li°_node
(Ë((
dw_loc_li°_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_loc_li°_nodeË
MEM_STAT_INFO
)))

	)

2640 
	#ggc_Æloc_vec_dw_loc_li°_node
(
n
Ë((
dw_loc_li°_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_loc_li°_node),Ç 
MEM_STAT_INFO
)))

	)

2641 
	#ggc_Æloc_˛óªd_vec_dw_loc_li°_node
(
n
Ë((
dw_loc_li°_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_loc_li°_node),Ç 
MEM_STAT_INFO
)))

	)

2642 
	#ggc_Æloc_addr_èbÀ_íåy
(Ë((
addr_èbÀ_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (addr_èbÀ_íåyË
MEM_STAT_INFO
)))

	)

2643 
	#ggc_Æloc_˛óªd_addr_èbÀ_íåy
(Ë((
addr_èbÀ_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (addr_èbÀ_íåyË
MEM_STAT_INFO
)))

	)

2644 
	#ggc_Æloc_vec_addr_èbÀ_íåy
(
n
Ë((
addr_èbÀ_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (addr_èbÀ_íåy),Ç 
MEM_STAT_INFO
)))

	)

2645 
	#ggc_Æloc_˛óªd_vec_addr_èbÀ_íåy
(
n
Ë((
addr_èbÀ_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (addr_èbÀ_íåy),Ç 
MEM_STAT_INFO
)))

	)

2646 
	#ggc_Æloc_de„ºed_loˇti⁄s
(Ë((
de„ºed_loˇti⁄s
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (de„ºed_loˇti⁄sË
MEM_STAT_INFO
)))

	)

2647 
	#ggc_Æloc_˛óªd_de„ºed_loˇti⁄s
(Ë((
de„ºed_loˇti⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (de„ºed_loˇti⁄sË
MEM_STAT_INFO
)))

	)

2648 
	#ggc_Æloc_vec_de„ºed_loˇti⁄s
(
n
Ë((
de„ºed_loˇti⁄s
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (de„ºed_loˇti⁄s),Ç 
MEM_STAT_INFO
)))

	)

2649 
	#ggc_Æloc_˛óªd_vec_de„ºed_loˇti⁄s
(
n
Ë((
de„ºed_loˇti⁄s
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (de„ºed_loˇti⁄s),Ç 
MEM_STAT_INFO
)))

	)

2650 
	#ggc_Æloc_ªg_ßved_ö_d©a
(Ë((
ªg_ßved_ö_d©a
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ªg_ßved_ö_d©aË
MEM_STAT_INFO
)))

	)

2651 
	#ggc_Æloc_˛óªd_ªg_ßved_ö_d©a
(Ë((
ªg_ßved_ö_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ªg_ßved_ö_d©aË
MEM_STAT_INFO
)))

	)

2652 
	#ggc_Æloc_vec_ªg_ßved_ö_d©a
(
n
Ë((
ªg_ßved_ö_d©a
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ªg_ßved_ö_d©a),Ç 
MEM_STAT_INFO
)))

	)

2653 
	#ggc_Æloc_˛óªd_vec_ªg_ßved_ö_d©a
(
n
Ë((
ªg_ßved_ö_d©a
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ªg_ßved_ö_d©a),Ç 
MEM_STAT_INFO
)))

	)

2654 
	#ggc_Æloc_dw_cfi_row
(Ë((
dw_cfi_row
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_cfi_rowË
MEM_STAT_INFO
)))

	)

2655 
	#ggc_Æloc_˛óªd_dw_cfi_row
(Ë((
dw_cfi_row
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_cfi_rowË
MEM_STAT_INFO
)))

	)

2656 
	#ggc_Æloc_vec_dw_cfi_row
(
n
Ë((
dw_cfi_row
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_cfi_row),Ç 
MEM_STAT_INFO
)))

	)

2657 
	#ggc_Æloc_˛óªd_vec_dw_cfi_row
(
n
Ë((
dw_cfi_row
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_cfi_row),Ç 
MEM_STAT_INFO
)))

	)

2658 
	#ggc_Æloc_dw_fde_ªf
(Ë((
dw_fde_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_fde_ªfË
MEM_STAT_INFO
)))

	)

2659 
	#ggc_Æloc_˛óªd_dw_fde_ªf
(Ë((
dw_fde_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_fde_ªfË
MEM_STAT_INFO
)))

	)

2660 
	#ggc_Æloc_vec_dw_fde_ªf
(
n
Ë((
dw_fde_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_fde_ªf),Ç 
MEM_STAT_INFO
)))

	)

2661 
	#ggc_Æloc_˛óªd_vec_dw_fde_ªf
(
n
Ë((
dw_fde_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_fde_ªf),Ç 
MEM_STAT_INFO
)))

	)

2662 
	#ggc_Æloc_cfi_vec
(Ë((
cfi_vec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cfi_vecË
MEM_STAT_INFO
)))

	)

2663 
	#ggc_Æloc_˛óªd_cfi_vec
(Ë((
cfi_vec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cfi_vecË
MEM_STAT_INFO
)))

	)

2664 
	#ggc_Æloc_vec_cfi_vec
(
n
Ë((
cfi_vec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cfi_vec),Ç 
MEM_STAT_INFO
)))

	)

2665 
	#ggc_Æloc_˛óªd_vec_cfi_vec
(
n
Ë((
cfi_vec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cfi_vec),Ç 
MEM_STAT_INFO
)))

	)

2666 
	#ggc_Æloc_dw_loc_li°_ªf
(Ë((
dw_loc_li°_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_loc_li°_ªfË
MEM_STAT_INFO
)))

	)

2667 
	#ggc_Æloc_˛óªd_dw_loc_li°_ªf
(Ë((
dw_loc_li°_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_loc_li°_ªfË
MEM_STAT_INFO
)))

	)

2668 
	#ggc_Æloc_vec_dw_loc_li°_ªf
(
n
Ë((
dw_loc_li°_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_loc_li°_ªf),Ç 
MEM_STAT_INFO
)))

	)

2669 
	#ggc_Æloc_˛óªd_vec_dw_loc_li°_ªf
(
n
Ë((
dw_loc_li°_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_loc_li°_ªf),Ç 
MEM_STAT_INFO
)))

	)

2670 
	#ggc_Æloc_dw_loc_des¸_ªf
(Ë((
dw_loc_des¸_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_loc_des¸_ªfË
MEM_STAT_INFO
)))

	)

2671 
	#ggc_Æloc_˛óªd_dw_loc_des¸_ªf
(Ë((
dw_loc_des¸_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_loc_des¸_ªfË
MEM_STAT_INFO
)))

	)

2672 
	#ggc_Æloc_vec_dw_loc_des¸_ªf
(
n
Ë((
dw_loc_des¸_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_loc_des¸_ªf),Ç 
MEM_STAT_INFO
)))

	)

2673 
	#ggc_Æloc_˛óªd_vec_dw_loc_des¸_ªf
(
n
Ë((
dw_loc_des¸_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_loc_des¸_ªf),Ç 
MEM_STAT_INFO
)))

	)

2674 
	#ggc_Æloc_dw_cfi_ªf
(Ë((
dw_cfi_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_cfi_ªfË
MEM_STAT_INFO
)))

	)

2675 
	#ggc_Æloc_˛óªd_dw_cfi_ªf
(Ë((
dw_cfi_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_cfi_ªfË
MEM_STAT_INFO
)))

	)

2676 
	#ggc_Æloc_vec_dw_cfi_ªf
(
n
Ë((
dw_cfi_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_cfi_ªf),Ç 
MEM_STAT_INFO
)))

	)

2677 
	#ggc_Æloc_˛óªd_vec_dw_cfi_ªf
(
n
Ë((
dw_cfi_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_cfi_ªf),Ç 
MEM_STAT_INFO
)))

	)

2678 
	#ggc_Æloc_dw_vÆ_ªf
(Ë((
dw_vÆ_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_vÆ_ªfË
MEM_STAT_INFO
)))

	)

2679 
	#ggc_Æloc_˛óªd_dw_vÆ_ªf
(Ë((
dw_vÆ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_vÆ_ªfË
MEM_STAT_INFO
)))

	)

2680 
	#ggc_Æloc_vec_dw_vÆ_ªf
(
n
Ë((
dw_vÆ_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_vÆ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2681 
	#ggc_Æloc_˛óªd_vec_dw_vÆ_ªf
(
n
Ë((
dw_vÆ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_vÆ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2682 
	#ggc_Æloc_c⁄°_dw_dõ_ªf
(Ë((
c⁄°_dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_dw_dõ_ªfË
MEM_STAT_INFO
)))

	)

2683 
	#ggc_Æloc_˛óªd_c⁄°_dw_dõ_ªf
(Ë((
c⁄°_dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_dw_dõ_ªfË
MEM_STAT_INFO
)))

	)

2684 
	#ggc_Æloc_vec_c⁄°_dw_dõ_ªf
(
n
Ë((
c⁄°_dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_dw_dõ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2685 
	#ggc_Æloc_˛óªd_vec_c⁄°_dw_dõ_ªf
(
n
Ë((
c⁄°_dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_dw_dõ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2686 
	#ggc_Æloc_dw_dõ_ªf
(Ë((
dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (dw_dõ_ªfË
MEM_STAT_INFO
)))

	)

2687 
	#ggc_Æloc_˛óªd_dw_dõ_ªf
(Ë((
dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (dw_dõ_ªfË
MEM_STAT_INFO
)))

	)

2688 
	#ggc_Æloc_vec_dw_dõ_ªf
(
n
Ë((
dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (dw_dõ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2689 
	#ggc_Æloc_˛óªd_vec_dw_dõ_ªf
(
n
Ë((
dw_dõ_ªf
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (dw_dõ_ªf),Ç 
MEM_STAT_INFO
)))

	)

2690 
	#ggc_Æloc_odr_ty≥
(Ë((
odr_ty≥
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (odr_ty≥Ë
MEM_STAT_INFO
)))

	)

2691 
	#ggc_Æloc_˛óªd_odr_ty≥
(Ë((
odr_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (odr_ty≥Ë
MEM_STAT_INFO
)))

	)

2692 
	#ggc_Æloc_vec_odr_ty≥
(
n
Ë((
odr_ty≥
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (odr_ty≥),Ç 
MEM_STAT_INFO
)))

	)

2693 
	#ggc_Æloc_˛óªd_vec_odr_ty≥
(
n
Ë((
odr_ty≥
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (odr_ty≥),Ç 
MEM_STAT_INFO
)))

	)

2694 
	#ggc_Æloc_Æüs_£t_íåy
(Ë((
Æüs_£t_íåy
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (Æüs_£t_íåyË
MEM_STAT_INFO
)))

	)

2695 
	#ggc_Æloc_˛óªd_Æüs_£t_íåy
(Ë((
Æüs_£t_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (Æüs_£t_íåyË
MEM_STAT_INFO
)))

	)

2696 
	#ggc_Æloc_vec_Æüs_£t_íåy
(
n
Ë((
Æüs_£t_íåy
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (Æüs_£t_íåy),Ç 
MEM_STAT_INFO
)))

	)

2697 
	#ggc_Æloc_˛óªd_vec_Æüs_£t_íåy
(
n
Ë((
Æüs_£t_íåy
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (Æüs_£t_íåy),Ç 
MEM_STAT_INFO
)))

	)

2698 
	#ggc_Æloc_cgøph_edge_p
(Ë((
cgøph_edge_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_edge_pË
MEM_STAT_INFO
)))

	)

2699 
	#ggc_Æloc_˛óªd_cgøph_edge_p
(Ë((
cgøph_edge_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_edge_pË
MEM_STAT_INFO
)))

	)

2700 
	#ggc_Æloc_vec_cgøph_edge_p
(
n
Ë((
cgøph_edge_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_edge_p),Ç 
MEM_STAT_INFO
)))

	)

2701 
	#ggc_Æloc_˛óªd_vec_cgøph_edge_p
(
n
Ë((
cgøph_edge_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_edge_p),Ç 
MEM_STAT_INFO
)))

	)

2702 
	#ggc_Æloc_v¨poﬁ_node_±r
(Ë((
v¨poﬁ_node_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (v¨poﬁ_node_±rË
MEM_STAT_INFO
)))

	)

2703 
	#ggc_Æloc_˛óªd_v¨poﬁ_node_±r
(Ë((
v¨poﬁ_node_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (v¨poﬁ_node_±rË
MEM_STAT_INFO
)))

	)

2704 
	#ggc_Æloc_vec_v¨poﬁ_node_±r
(
n
Ë((
v¨poﬁ_node_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (v¨poﬁ_node_±r),Ç 
MEM_STAT_INFO
)))

	)

2705 
	#ggc_Æloc_˛óªd_vec_v¨poﬁ_node_±r
(
n
Ë((
v¨poﬁ_node_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (v¨poﬁ_node_±r),Ç 
MEM_STAT_INFO
)))

	)

2706 
	#ggc_Æloc_cgøph_node_±r
(Ë((
cgøph_node_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (cgøph_node_±rË
MEM_STAT_INFO
)))

	)

2707 
	#ggc_Æloc_˛óªd_cgøph_node_±r
(Ë((
cgøph_node_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (cgøph_node_±rË
MEM_STAT_INFO
)))

	)

2708 
	#ggc_Æloc_vec_cgøph_node_±r
(
n
Ë((
cgøph_node_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (cgøph_node_±r),Ç 
MEM_STAT_INFO
)))

	)

2709 
	#ggc_Æloc_˛óªd_vec_cgøph_node_±r
(
n
Ë((
cgøph_node_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (cgøph_node_±r),Ç 
MEM_STAT_INFO
)))

	)

2710 
	#ggc_Æloc_ùa_ª∂a˚_m≠_p
(Ë((
ùa_ª∂a˚_m≠_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_ª∂a˚_m≠_pË
MEM_STAT_INFO
)))

	)

2711 
	#ggc_Æloc_˛óªd_ùa_ª∂a˚_m≠_p
(Ë((
ùa_ª∂a˚_m≠_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_ª∂a˚_m≠_pË
MEM_STAT_INFO
)))

	)

2712 
	#ggc_Æloc_vec_ùa_ª∂a˚_m≠_p
(
n
Ë((
ùa_ª∂a˚_m≠_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_ª∂a˚_m≠_p),Ç 
MEM_STAT_INFO
)))

	)

2713 
	#ggc_Æloc_˛óªd_vec_ùa_ª∂a˚_m≠_p
(
n
Ë((
ùa_ª∂a˚_m≠_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_ª∂a˚_m≠_p),Ç 
MEM_STAT_INFO
)))

	)

2714 
	#ggc_Æloc_ùa_ªf_±r
(Ë((
ùa_ªf_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_ªf_±rË
MEM_STAT_INFO
)))

	)

2715 
	#ggc_Æloc_˛óªd_ùa_ªf_±r
(Ë((
ùa_ªf_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_ªf_±rË
MEM_STAT_INFO
)))

	)

2716 
	#ggc_Æloc_vec_ùa_ªf_±r
(
n
Ë((
ùa_ªf_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_ªf_±r),Ç 
MEM_STAT_INFO
)))

	)

2717 
	#ggc_Æloc_˛óªd_vec_ùa_ªf_±r
(
n
Ë((
ùa_ªf_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_ªf_±r),Ç 
MEM_STAT_INFO
)))

	)

2718 
	#ggc_Æloc_ùa_ªf_t
(Ë((
ùa_ªf_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ùa_ªf_tË
MEM_STAT_INFO
)))

	)

2719 
	#ggc_Æloc_˛óªd_ùa_ªf_t
(Ë((
ùa_ªf_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ùa_ªf_tË
MEM_STAT_INFO
)))

	)

2720 
	#ggc_Æloc_vec_ùa_ªf_t
(
n
Ë((
ùa_ªf_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ùa_ªf_t),Ç 
MEM_STAT_INFO
)))

	)

2721 
	#ggc_Æloc_˛óªd_vec_ùa_ªf_t
(
n
Ë((
ùa_ªf_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ùa_ªf_t),Ç 
MEM_STAT_INFO
)))

	)

2722 
	#ggc_Æloc_lo›_p
(Ë((
lo›_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (lo›_pË
MEM_STAT_INFO
)))

	)

2723 
	#ggc_Æloc_˛óªd_lo›_p
(Ë((
lo›_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (lo›_pË
MEM_STAT_INFO
)))

	)

2724 
	#ggc_Æloc_vec_lo›_p
(
n
Ë((
lo›_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (lo›_p),Ç 
MEM_STAT_INFO
)))

	)

2725 
	#ggc_Æloc_˛óªd_vec_lo›_p
(
n
Ë((
lo›_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (lo›_p),Ç 
MEM_STAT_INFO
)))

	)

2726 
	#ggc_Æloc_ãmp_¶Ÿ_p
(Ë((
ãmp_¶Ÿ_p
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ãmp_¶Ÿ_pË
MEM_STAT_INFO
)))

	)

2727 
	#ggc_Æloc_˛óªd_ãmp_¶Ÿ_p
(Ë((
ãmp_¶Ÿ_p
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ãmp_¶Ÿ_pË
MEM_STAT_INFO
)))

	)

2728 
	#ggc_Æloc_vec_ãmp_¶Ÿ_p
(
n
Ë((
ãmp_¶Ÿ_p
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ãmp_¶Ÿ_p),Ç 
MEM_STAT_INFO
)))

	)

2729 
	#ggc_Æloc_˛óªd_vec_ãmp_¶Ÿ_p
(
n
Ë((
ãmp_¶Ÿ_p
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ãmp_¶Ÿ_p),Ç 
MEM_STAT_INFO
)))

	)

2730 
	#ggc_Æloc_ˇŒ_sôe_ªc‹d
(Ë((
ˇŒ_sôe_ªc‹d
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ˇŒ_sôe_ªc‹dË
MEM_STAT_INFO
)))

	)

2731 
	#ggc_Æloc_˛óªd_ˇŒ_sôe_ªc‹d
(Ë((
ˇŒ_sôe_ªc‹d
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ˇŒ_sôe_ªc‹dË
MEM_STAT_INFO
)))

	)

2732 
	#ggc_Æloc_vec_ˇŒ_sôe_ªc‹d
(
n
Ë((
ˇŒ_sôe_ªc‹d
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ˇŒ_sôe_ªc‹d),Ç 
MEM_STAT_INFO
)))

	)

2733 
	#ggc_Æloc_˛óªd_vec_ˇŒ_sôe_ªc‹d
(
n
Ë((
ˇŒ_sôe_ªc‹d
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ˇŒ_sôe_ªc‹d),Ç 
MEM_STAT_INFO
)))

	)

2734 
	#ggc_Æloc_hashnode
(Ë((
hashnode
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (hashnodeË
MEM_STAT_INFO
)))

	)

2735 
	#ggc_Æloc_˛óªd_hashnode
(Ë((
hashnode
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (hashnodeË
MEM_STAT_INFO
)))

	)

2736 
	#ggc_Æloc_vec_hashnode
(
n
Ë((
hashnode
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (hashnode),Ç 
MEM_STAT_INFO
)))

	)

2737 
	#ggc_Æloc_˛óªd_vec_hashnode
(
n
Ë((
hashnode
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (hashnode),Ç 
MEM_STAT_INFO
)))

	)

2738 
	#ggc_Æloc_ht_idítifõr_±r
(Ë((
ht_idítifõr_±r
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (ht_idítifõr_±rË
MEM_STAT_INFO
)))

	)

2739 
	#ggc_Æloc_˛óªd_ht_idítifõr_±r
(Ë((
ht_idítifõr_±r
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (ht_idítifõr_±rË
MEM_STAT_INFO
)))

	)

2740 
	#ggc_Æloc_vec_ht_idítifõr_±r
(
n
Ë((
ht_idítifõr_±r
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (ht_idítifõr_±r),Ç 
MEM_STAT_INFO
)))

	)

2741 
	#ggc_Æloc_˛óªd_vec_ht_idítifõr_±r
(
n
Ë((
ht_idítifõr_±r
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (ht_idítifõr_±r),Ç 
MEM_STAT_INFO
)))

	)

2742 
	#ggc_Æloc_•œy_åì
(Ë((
•œy_åì
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (•œy_åìË
MEM_STAT_INFO
)))

	)

2743 
	#ggc_Æloc_˛óªd_•œy_åì
(Ë((
•œy_åì
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (•œy_åìË
MEM_STAT_INFO
)))

	)

2744 
	#ggc_Æloc_vec_•œy_åì
(
n
Ë((
•œy_åì
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (•œy_åì),Ç 
MEM_STAT_INFO
)))

	)

2745 
	#ggc_Æloc_˛óªd_vec_•œy_åì
(
n
Ë((
•œy_åì
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (•œy_åì),Ç 
MEM_STAT_INFO
)))

	)

2746 
	#ggc_Æloc_•œy_åì_node
(Ë((
•œy_åì_node
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (•œy_åì_nodeË
MEM_STAT_INFO
)))

	)

2747 
	#ggc_Æloc_˛óªd_•œy_åì_node
(Ë((
•œy_åì_node
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (•œy_åì_nodeË
MEM_STAT_INFO
)))

	)

2748 
	#ggc_Æloc_vec_•œy_åì_node
(
n
Ë((
•œy_åì_node
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (•œy_åì_node),Ç 
MEM_STAT_INFO
)))

	)

2749 
	#ggc_Æloc_˛óªd_vec_•œy_åì_node
(
n
Ë((
•œy_åì_node
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (•œy_åì_node),Ç 
MEM_STAT_INFO
)))

	)

2750 
	#ggc_Æloc_hèb_t
(Ë((
hèb_t
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (hèb_tË
MEM_STAT_INFO
)))

	)

2751 
	#ggc_Æloc_˛óªd_hèb_t
(Ë((
hèb_t
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (hèb_tË
MEM_STAT_INFO
)))

	)

2752 
	#ggc_Æloc_vec_hèb_t
(
n
Ë((
hèb_t
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (hèb_t),Ç 
MEM_STAT_INFO
)))

	)

2753 
	#ggc_Æloc_˛óªd_vec_hèb_t
(
n
Ë((
hèb_t
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (hèb_t),Ç 
MEM_STAT_INFO
)))

	)

2754 
	#ggc_Æloc_c⁄°_basic_block
(Ë((
c⁄°_basic_block
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_basic_blockË
MEM_STAT_INFO
)))

	)

2755 
	#ggc_Æloc_˛óªd_c⁄°_basic_block
(Ë((
c⁄°_basic_block
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_basic_blockË
MEM_STAT_INFO
)))

	)

2756 
	#ggc_Æloc_vec_c⁄°_basic_block
(
n
Ë((
c⁄°_basic_block
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_basic_block),Ç 
MEM_STAT_INFO
)))

	)

2757 
	#ggc_Æloc_˛óªd_vec_c⁄°_basic_block
(
n
Ë((
c⁄°_basic_block
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_basic_block),Ç 
MEM_STAT_INFO
)))

	)

2758 
	#ggc_Æloc_basic_block
(Ë((
basic_block
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (basic_blockË
MEM_STAT_INFO
)))

	)

2759 
	#ggc_Æloc_˛óªd_basic_block
(Ë((
basic_block
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (basic_blockË
MEM_STAT_INFO
)))

	)

2760 
	#ggc_Æloc_vec_basic_block
(
n
Ë((
basic_block
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (basic_block),Ç 
MEM_STAT_INFO
)))

	)

2761 
	#ggc_Æloc_˛óªd_vec_basic_block
(
n
Ë((
basic_block
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (basic_block),Ç 
MEM_STAT_INFO
)))

	)

2762 
	#ggc_Æloc_c⁄°_edge
(Ë((
c⁄°_edge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_edgeË
MEM_STAT_INFO
)))

	)

2763 
	#ggc_Æloc_˛óªd_c⁄°_edge
(Ë((
c⁄°_edge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_edgeË
MEM_STAT_INFO
)))

	)

2764 
	#ggc_Æloc_vec_c⁄°_edge
(
n
Ë((
c⁄°_edge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_edge),Ç 
MEM_STAT_INFO
)))

	)

2765 
	#ggc_Æloc_˛óªd_vec_c⁄°_edge
(
n
Ë((
c⁄°_edge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_edge),Ç 
MEM_STAT_INFO
)))

	)

2766 
	#ggc_Æloc_edge
(Ë((
edge
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (edgeË
MEM_STAT_INFO
)))

	)

2767 
	#ggc_Æloc_˛óªd_edge
(Ë((
edge
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (edgeË
MEM_STAT_INFO
)))

	)

2768 
	#ggc_Æloc_vec_edge
(
n
Ë((
edge
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (edge),Ç 
MEM_STAT_INFO
)))

	)

2769 
	#ggc_Æloc_˛óªd_vec_edge
(
n
Ë((
edge
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (edge),Ç 
MEM_STAT_INFO
)))

	)

2770 
	#ggc_Æloc_gim∂e_£q
(Ë((
gim∂e_£q
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂e_£qË
MEM_STAT_INFO
)))

	)

2771 
	#ggc_Æloc_˛óªd_gim∂e_£q
(Ë((
gim∂e_£q
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂e_£qË
MEM_STAT_INFO
)))

	)

2772 
	#ggc_Æloc_vec_gim∂e_£q
(
n
Ë((
gim∂e_£q
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e_£q),Ç 
MEM_STAT_INFO
)))

	)

2773 
	#ggc_Æloc_˛óªd_vec_gim∂e_£q
(
n
Ë((
gim∂e_£q
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e_£q),Ç 
MEM_STAT_INFO
)))

	)

2774 
	#ggc_Æloc_c⁄°_gim∂e
(Ë((
c⁄°_gim∂e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_gim∂eË
MEM_STAT_INFO
)))

	)

2775 
	#ggc_Æloc_˛óªd_c⁄°_gim∂e
(Ë((
c⁄°_gim∂e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_gim∂eË
MEM_STAT_INFO
)))

	)

2776 
	#ggc_Æloc_vec_c⁄°_gim∂e
(
n
Ë((
c⁄°_gim∂e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_gim∂e),Ç 
MEM_STAT_INFO
)))

	)

2777 
	#ggc_Æloc_˛óªd_vec_c⁄°_gim∂e
(
n
Ë((
c⁄°_gim∂e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_gim∂e),Ç 
MEM_STAT_INFO
)))

	)

2778 
	#ggc_Æloc_gim∂e
(Ë((
gim∂e
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (gim∂eË
MEM_STAT_INFO
)))

	)

2779 
	#ggc_Æloc_˛óªd_gim∂e
(Ë((
gim∂e
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (gim∂eË
MEM_STAT_INFO
)))

	)

2780 
	#ggc_Æloc_vec_gim∂e
(
n
Ë((
gim∂e
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (gim∂e),Ç 
MEM_STAT_INFO
)))

	)

2781 
	#ggc_Æloc_˛óªd_vec_gim∂e
(
n
Ë((
gim∂e
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (gim∂e),Ç 
MEM_STAT_INFO
)))

	)

2782 
	#ggc_Æloc_c⁄°_åì
(Ë((
c⁄°_åì
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_åìË
MEM_STAT_INFO
)))

	)

2783 
	#ggc_Æloc_˛óªd_c⁄°_åì
(Ë((
c⁄°_åì
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_åìË
MEM_STAT_INFO
)))

	)

2784 
	#ggc_Æloc_vec_c⁄°_åì
(
n
Ë((
c⁄°_åì
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_åì),Ç 
MEM_STAT_INFO
)))

	)

2785 
	#ggc_Æloc_˛óªd_vec_c⁄°_åì
(
n
Ë((
c⁄°_åì
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_åì),Ç 
MEM_STAT_INFO
)))

	)

2786 
	#ggc_Æloc_åì
(Ë((
åì
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (åìË
MEM_STAT_INFO
)))

	)

2787 
	#ggc_Æloc_˛óªd_åì
(Ë((
åì
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (åìË
MEM_STAT_INFO
)))

	)

2788 
	#ggc_Æloc_vec_åì
(
n
Ë((
åì
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (åì),Ç 
MEM_STAT_INFO
)))

	)

2789 
	#ggc_Æloc_˛óªd_vec_åì
(
n
Ë((
åì
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (åì),Ç 
MEM_STAT_INFO
)))

	)

2790 
	#ggc_Æloc_c⁄°_πvec
(Ë((
c⁄°_πvec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_πvecË
MEM_STAT_INFO
)))

	)

2791 
	#ggc_Æloc_˛óªd_c⁄°_πvec
(Ë((
c⁄°_πvec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_πvecË
MEM_STAT_INFO
)))

	)

2792 
	#ggc_Æloc_vec_c⁄°_πvec
(
n
Ë((
c⁄°_πvec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_πvec),Ç 
MEM_STAT_INFO
)))

	)

2793 
	#ggc_Æloc_˛óªd_vec_c⁄°_πvec
(
n
Ë((
c⁄°_πvec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_πvec),Ç 
MEM_STAT_INFO
)))

	)

2794 
	#ggc_Æloc_πvec
(Ë((
πvec
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πvecË
MEM_STAT_INFO
)))

	)

2795 
	#ggc_Æloc_˛óªd_πvec
(Ë((
πvec
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πvecË
MEM_STAT_INFO
)))

	)

2796 
	#ggc_Æloc_vec_πvec
(
n
Ë((
πvec
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πvec),Ç 
MEM_STAT_INFO
)))

	)

2797 
	#ggc_Æloc_˛óªd_vec_πvec
(
n
Ë((
πvec
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πvec),Ç 
MEM_STAT_INFO
)))

	)

2798 
	#ggc_Æloc_c⁄°_πx
(Ë((
c⁄°_πx
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_πxË
MEM_STAT_INFO
)))

	)

2799 
	#ggc_Æloc_˛óªd_c⁄°_πx
(Ë((
c⁄°_πx
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_πxË
MEM_STAT_INFO
)))

	)

2800 
	#ggc_Æloc_vec_c⁄°_πx
(
n
Ë((
c⁄°_πx
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_πx),Ç 
MEM_STAT_INFO
)))

	)

2801 
	#ggc_Æloc_˛óªd_vec_c⁄°_πx
(
n
Ë((
c⁄°_πx
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_πx),Ç 
MEM_STAT_INFO
)))

	)

2802 
	#ggc_Æloc_πx
(Ë((
πx
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (πxË
MEM_STAT_INFO
)))

	)

2803 
	#ggc_Æloc_˛óªd_πx
(Ë((
πx
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (πxË
MEM_STAT_INFO
)))

	)

2804 
	#ggc_Æloc_vec_πx
(
n
Ë((
πx
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (πx),Ç 
MEM_STAT_INFO
)))

	)

2805 
	#ggc_Æloc_˛óªd_vec_πx
(
n
Ë((
πx
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (πx),Ç 
MEM_STAT_INFO
)))

	)

2806 
	#ggc_Æloc_c⁄°_bôm≠
(Ë((
c⁄°_bôm≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (c⁄°_bôm≠Ë
MEM_STAT_INFO
)))

	)

2807 
	#ggc_Æloc_˛óªd_c⁄°_bôm≠
(Ë((
c⁄°_bôm≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (c⁄°_bôm≠Ë
MEM_STAT_INFO
)))

	)

2808 
	#ggc_Æloc_vec_c⁄°_bôm≠
(
n
Ë((
c⁄°_bôm≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (c⁄°_bôm≠),Ç 
MEM_STAT_INFO
)))

	)

2809 
	#ggc_Æloc_˛óªd_vec_c⁄°_bôm≠
(
n
Ë((
c⁄°_bôm≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (c⁄°_bôm≠),Ç 
MEM_STAT_INFO
)))

	)

2810 
	#ggc_Æloc_bôm≠
(Ë((
bôm≠
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (bôm≠Ë
MEM_STAT_INFO
)))

	)

2811 
	#ggc_Æloc_˛óªd_bôm≠
(Ë((
bôm≠
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (bôm≠Ë
MEM_STAT_INFO
)))

	)

2812 
	#ggc_Æloc_vec_bôm≠
(
n
Ë((
bôm≠
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (bôm≠),Ç 
MEM_STAT_INFO
)))

	)

2813 
	#ggc_Æloc_˛óªd_vec_bôm≠
(
n
Ë((
bôm≠
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (bôm≠),Ç 
MEM_STAT_INFO
)))

	)

2814 
	#ggc_Æloc_PTR
(Ë((
PTR
 *)(
	`ggc_öã∫Æ_Æloc_°©
 ( (PTRË
MEM_STAT_INFO
)))

	)

2815 
	#ggc_Æloc_˛óªd_PTR
(Ë((
PTR
 *)(
	`ggc_öã∫Æ_˛óªd_Æloc_°©
 ( (PTRË
MEM_STAT_INFO
)))

	)

2816 
	#ggc_Æloc_vec_PTR
(
n
Ë((
PTR
 *)(
	`ggc_öã∫Æ_vec_Æloc_°©
 ( (PTR),Ç 
MEM_STAT_INFO
)))

	)

2817 
	#ggc_Æloc_˛óªd_vec_PTR
(
n
Ë((
PTR
 *)(
	`ggc_öã∫Æ_˛óªd_vec_Æloc_°©
 ( (PTR),Ç 
MEM_STAT_INFO
)))

	)

2821 
	#gt_ggc_m_24vec_iv¨ªf_íåy_va_gc_
(
X
) do { \

2822 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_iv¨ªf_íåy_va_gc_
 (X);\

2823 } 0)

	)

2824 
gt_ggc_mx_vec_iv¨ªf_íåy_va_gc_
 (*);

2825 
	#gt_ggc_m_26vec_¥Ÿ_li°_íåy_va_gc_
(
X
) do { \

2826 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_¥Ÿ_li°_íåy_va_gc_
 (X);\

2827 } 0)

	)

2828 
gt_ggc_mx_vec_¥Ÿ_li°_íåy_va_gc_
 (*);

2829 
	#gt_ggc_m_23vec_msgªf_íåy_va_gc_
(
X
) do { \

2830 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_msgªf_íåy_va_gc_
 (X);\

2831 } 0)

	)

2832 
gt_ggc_mx_vec_msgªf_íåy_va_gc_
 (*);

2833 
	#gt_ggc_m_27vec_idít_d©a_tu∂e_va_gc_
(
X
) do { \

2834 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_idít_d©a_tu∂e_va_gc_
 (X);\

2835 } 0)

	)

2836 
gt_ggc_mx_vec_idít_d©a_tu∂e_va_gc_
 (*);

2837 
	#gt_ggc_m_17°rög_des¸ùt‹
(
X
) do { \

2838 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_°rög_des¸ùt‹
 (X);\

2839 } 0)

	)

2840 
gt_ggc_mx_°rög_des¸ùt‹
 (*);

2841 
	#gt_ggc_m_9imp_íåy
(
X
) do { \

2842 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_imp_íåy
 (X);\

2843 } 0)

	)

2844 
gt_ggc_mx_imp_íåy
 (*);

2845 
	#gt_ggc_m_16hashed_©åibuã
(
X
) do { \

2846 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_hashed_©åibuã
 (X);\

2847 } 0)

	)

2848 
gt_ggc_mx_hashed_©åibuã
 (*);

2849 
	#gt_ggc_m_12hashed_íåy
(
X
) do { \

2850 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_hashed_íåy
 (X);\

2851 } 0)

	)

2852 
gt_ggc_mx_hashed_íåy
 (*);

2853 
	#gt_ggc_m_16objc_m≠_¥iv©e
(
X
) do { \

2854 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_objc_m≠_¥iv©e
 (X);\

2855 } 0)

	)

2856 
gt_ggc_mx_objc_m≠_¥iv©e
 (*);

2857 
	#gt_ggc_m_23vec_mëhod_íåy_va_gc_
(
X
) do { \

2858 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_mëhod_íåy_va_gc_
 (X);\

2859 } 0)

	)

2860 
gt_ggc_mx_vec_mëhod_íåy_va_gc_
 (*);

2861 
	#gt_ggc_m_14ty≥_as£πi⁄
(
X
) do { \

2862 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ty≥_as£πi⁄
 (X);\

2863 } 0)

	)

2864 
gt_ggc_mx_ty≥_as£πi⁄
 (*);

2865 
	#gt_ggc_m_18åìåìhash_íåy
(
X
) do { \

2866 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åìåìhash_íåy
 (X);\

2867 } 0)

	)

2868 
gt_ggc_mx_åìåìhash_íåy
 (*);

2869 
	#gt_ggc_m_5CPoﬁ
(
X
) do { \

2870 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_CPoﬁ
 (X);\

2871 } 0)

	)

2872 
gt_ggc_mx_CPoﬁ
 (*);

2873 
	#gt_ggc_m_3JCF
(
X
) do { \

2874 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_JCF
 (X);\

2875 } 0)

	)

2876 
gt_ggc_mx_JCF
 (*);

2877 
	#gt_ggc_m_17moduÀ_hèb_íåy
(
X
) do { \

2878 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_moduÀ_hèb_íåy
 (X);\

2879 } 0)

	)

2880 
gt_ggc_mx_moduÀ_hèb_íåy
 (*);

2881 
	#gt_ggc_m_13bödög_Àvñ
(
X
) do { \

2882 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_bödög_Àvñ
 (X);\

2883 } 0)

	)

2884 
gt_ggc_mx_bödög_Àvñ
 (*);

2885 
	#gt_ggc_m_27vec_≥ndög_n€x˚±_va_gc_
(
X
) do { \

2886 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_≥ndög_n€x˚±_va_gc_
 (X);\

2887 } 0)

	)

2888 
gt_ggc_mx_vec_≥ndög_n€x˚±_va_gc_
 (*);

2889 
	#gt_ggc_m_21≥ndög_ab°ø˘_ty≥
(
X
) do { \

2890 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_≥ndög_ab°ø˘_ty≥
 (X);\

2891 } 0)

	)

2892 
gt_ggc_mx_≥ndög_ab°ø˘_ty≥
 (*);

2893 
	#gt_ggc_m_19vec_åì_öt_va_gc_
(
X
) do { \

2894 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_åì_öt_va_gc_
 (X);\

2895 } 0)

	)

2896 
gt_ggc_mx_vec_åì_öt_va_gc_
 (*);

2897 
	#gt_ggc_m_9˝_∑r£r
(
X
) do { \

2898 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝_∑r£r
 (X);\

2899 } 0)

	)

2900 
gt_ggc_mx_˝_∑r£r
 (*);

2901 
	#gt_ggc_m_38vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
(
X
) do { \

2902 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
 (X);\

2903 } 0)

	)

2904 
gt_ggc_mx_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
 (*);

2905 
	#gt_ggc_m_17˝_∑r£r_c⁄ãxt
(
X
) do { \

2906 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝_∑r£r_c⁄ãxt
 (X);\

2907 } 0)

	)

2908 
gt_ggc_mx_˝_∑r£r_c⁄ãxt
 (*);

2909 
	#gt_ggc_m_31vec_˝_deÁu…_¨g_íåy_va_gc_
(
X
) do { \

2910 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_˝_deÁu…_¨g_íåy_va_gc_
 (X);\

2911 } 0)

	)

2912 
gt_ggc_mx_vec_˝_deÁu…_¨g_íåy_va_gc_
 (*);

2913 
	#gt_ggc_m_8˝_Àxî
(
X
) do { \

2914 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝_Àxî
 (X);\

2915 } 0)

	)

2916 
gt_ggc_mx_˝_Àxî
 (*);

2917 
	#gt_ggc_m_19vec_˝_tokí_va_gc_
(
X
) do { \

2918 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_˝_tokí_va_gc_
 (X);\

2919 } 0)

	)

2920 
gt_ggc_mx_vec_˝_tokí_va_gc_
 (*);

2921 
	#gt_ggc_m_10åì_check
(
X
) do { \

2922 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_check
 (X);\

2923 } 0)

	)

2924 
gt_ggc_mx_åì_check
 (*);

2925 
	#gt_ggc_m_14c⁄°ex¥_ˇŒ
(
X
) do { \

2926 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c⁄°ex¥_ˇŒ
 (X);\

2927 } 0)

	)

2928 
gt_ggc_mx_c⁄°ex¥_ˇŒ
 (*);

2929 
	#gt_ggc_m_16c⁄°ex¥_fundef
(
X
) do { \

2930 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c⁄°ex¥_fundef
 (X);\

2931 } 0)

	)

2932 
gt_ggc_mx_c⁄°ex¥_fundef
 (*);

2933 
	#gt_ggc_m_26vec_de„ºed_ac˚ss_va_gc_
(
X
) do { \

2934 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_de„ºed_ac˚ss_va_gc_
 (X);\

2935 } 0)

	)

2936 
gt_ggc_mx_vec_de„ºed_ac˚ss_va_gc_
 (*);

2937 
	#gt_ggc_m_32vec_de„ºed_ac˚ss_check_va_gc_
(
X
) do { \

2938 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_de„ºed_ac˚ss_check_va_gc_
 (X);\

2939 } 0)

	)

2940 
gt_ggc_mx_vec_de„ºed_ac˚ss_check_va_gc_
 (*);

2941 
	#gt_ggc_m_10•ec_íåy
(
X
) do { \

2942 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_•ec_íåy
 (X);\

2943 } 0)

	)

2944 
gt_ggc_mx_•ec_íåy
 (*);

2945 
	#gt_ggc_m_16≥ndög_ãm∂©e
(
X
) do { \

2946 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_≥ndög_ãm∂©e
 (X);\

2947 } 0)

	)

2948 
gt_ggc_mx_≥ndög_ãm∂©e
 (*);

2949 
	#gt_ggc_m_25vec_öcom∂ëe_v¨_va_gc_
(
X
) do { \

2950 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_öcom∂ëe_v¨_va_gc_
 (X);\

2951 } 0)

	)

2952 
gt_ggc_mx_vec_öcom∂ëe_v¨_va_gc_
 (*);

2953 
	#gt_ggc_m_21«med_œbñ_u£_íåy
(
X
) do { \

2954 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_«med_œbñ_u£_íåy
 (X);\

2955 } 0)

	)

2956 
gt_ggc_mx_«med_œbñ_u£_íåy
 (*);

2957 
	#gt_ggc_m_22vec_åì_∑ú_s_va_gc_
(
X
) do { \

2958 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_åì_∑ú_s_va_gc_
 (X);\

2959 } 0)

	)

2960 
gt_ggc_mx_vec_åì_∑ú_s_va_gc_
 (*);

2961 
	#gt_ggc_m_17«med_œbñ_íåy
(
X
) do { \

2962 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_«med_œbñ_íåy
 (X);\

2963 } 0)

	)

2964 
gt_ggc_mx_«med_œbñ_íåy
 (*);

2965 
	#gt_ggc_m_28vec_cxx_ßved_bödög_va_gc_
(
X
) do { \

2966 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_cxx_ßved_bödög_va_gc_
 (X);\

2967 } 0)

	)

2968 
gt_ggc_mx_vec_cxx_ßved_bödög_va_gc_
 (*);

2969 
	#gt_ggc_m_36vec_quÆifõd_ty≥def_ußge_t_va_gc_
(
X
) do { \

2970 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_quÆifõd_ty≥def_ußge_t_va_gc_
 (X);\

2971 } 0)

	)

2972 
gt_ggc_mx_vec_quÆifõd_ty≥def_ußge_t_va_gc_
 (*);

2973 
	#gt_ggc_m_14˝_tokí_ˇche
(
X
) do { \

2974 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝_tokí_ˇche
 (X);\

2975 } 0)

	)

2976 
gt_ggc_mx_˝_tokí_ˇche
 (*);

2977 
	#gt_ggc_m_11ßved_sc›e
(
X
) do { \

2978 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ßved_sc›e
 (X);\

2979 } 0)

	)

2980 
gt_ggc_mx_ßved_sc›e
 (*);

2981 
	#gt_ggc_m_16cxx_öt_åì_m≠
(
X
) do { \

2982 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_cxx_öt_åì_m≠
 (X);\

2983 } 0)

	)

2984 
gt_ggc_mx_cxx_öt_åì_m≠
 (*);

2985 
	#gt_ggc_m_27vec_˝_œbñ_bödög_va_gc_
(
X
) do { \

2986 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_˝_œbñ_bödög_va_gc_
 (X);\

2987 } 0)

	)

2988 
gt_ggc_mx_vec_˝_œbñ_bödög_va_gc_
 (*);

2989 
	#gt_ggc_m_27vec_˝_˛ass_bödög_va_gc_
(
X
) do { \

2990 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_˝_˛ass_bödög_va_gc_
 (X);\

2991 } 0)

	)

2992 
gt_ggc_mx_vec_˝_˛ass_bödög_va_gc_
 (*);

2993 
	#gt_ggc_m_16˝_bödög_Àvñ
(
X
) do { \

2994 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝_bödög_Àvñ
 (X);\

2995 } 0)

	)

2996 
gt_ggc_mx_˝_bödög_Àvñ
 (*);

2997 
	#gt_ggc_m_11cxx_bödög
(
X
) do { \

2998 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_cxx_bödög
 (X);\

2999 } 0)

	)

3000 
gt_ggc_mx_cxx_bödög
 (*);

3001 
	#gt_ggc_m_15bödög_íåy_s
(
X
) do { \

3002 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_bödög_íåy_s
 (X);\

3003 } 0)

	)

3004 
gt_ggc_mx_bödög_íåy_s
 (*);

3005 
	#gt_ggc_m_15bödög_èbÀ_s
(
X
) do { \

3006 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_bödög_èbÀ_s
 (X);\

3007 } 0)

	)

3008 
gt_ggc_mx_bödög_èbÀ_s
 (*);

3009 
	#gt_ggc_m_11tö°_Àvñ
(
X
) do { \

3010 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_tö°_Àvñ
 (X);\

3011 } 0)

	)

3012 
gt_ggc_mx_tö°_Àvñ
 (*);

3013 
	#gt_ggc_m_18vec_töfo_s_va_gc_
(
X
) do { \

3014 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_töfo_s_va_gc_
 (X);\

3015 } 0)

	)

3016 
gt_ggc_mx_vec_töfo_s_va_gc_
 (*);

3017 
	#gt_ggc_m_8c_∑r£r
(
X
) do { \

3018 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c_∑r£r
 (X);\

3019 } 0)

	)

3020 
gt_ggc_mx_c_∑r£r
 (*);

3021 
	#gt_ggc_m_18vec_c_tokí_va_gc_
(
X
) do { \

3022 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_c_tokí_va_gc_
 (X);\

3023 } 0)

	)

3024 
gt_ggc_mx_vec_c_tokí_va_gc_
 (*);

3025 
	#gt_ggc_m_9›t_°ack
(
X
) do { \

3026 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_›t_°ack
 (X);\

3027 } 0)

	)

3028 
gt_ggc_mx_›t_°ack
 (*);

3029 
	#gt_ggc_m_31vec_≥ndög_ªdeföôi⁄_va_gc_
(
X
) do { \

3030 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_≥ndög_ªdeföôi⁄_va_gc_
 (X);\

3031 } 0)

	)

3032 
gt_ggc_mx_vec_≥ndög_ªdeföôi⁄_va_gc_
 (*);

3033 
	#gt_ggc_m_23vec_≥ndög_wók_va_gc_
(
X
) do { \

3034 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_≥ndög_wók_va_gc_
 (X);\

3035 } 0)

	)

3036 
gt_ggc_mx_vec_≥ndög_wók_va_gc_
 (*);

3037 
	#gt_ggc_m_11Æign_°ack
(
X
) do { \

3038 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_Æign_°ack
 (X);\

3039 } 0)

	)

3040 
gt_ggc_mx_Æign_°ack
 (*);

3041 
	#gt_ggc_m_22vec_åì_gc_vec_va_gc_
(
X
) do { \

3042 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_åì_gc_vec_va_gc_
 (X);\

3043 } 0)

	)

3044 
gt_ggc_mx_vec_åì_gc_vec_va_gc_
 (*);

3045 
	#gt_ggc_m_23vec_c⁄°_ch¨_p_va_gc_
(
X
) do { \

3046 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_c⁄°_ch¨_p_va_gc_
 (X);\

3047 } 0)

	)

3048 
gt_ggc_mx_vec_c⁄°_ch¨_p_va_gc_
 (*);

3049 
	#gt_ggc_m_18s‹ãd_fõlds_ty≥
(
X
) do { \

3050 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_s‹ãd_fõlds_ty≥
 (X);\

3051 } 0)

	)

3052 
gt_ggc_mx_s‹ãd_fõlds_ty≥
 (*);

3053 
	#gt_ggc_m_15c_ölöe_°©ic
(
X
) do { \

3054 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c_ölöe_°©ic
 (X);\

3055 } 0)

	)

3056 
gt_ggc_mx_c_ölöe_°©ic
 (*);

3057 
	#gt_ggc_m_28vec_c_gŸo_bödögs_p_va_gc_
(
X
) do { \

3058 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_c_gŸo_bödögs_p_va_gc_
 (X);\

3059 } 0)

	)

3060 
gt_ggc_mx_vec_c_gŸo_bödögs_p_va_gc_
 (*);

3061 
	#gt_ggc_m_15c_gŸo_bödögs
(
X
) do { \

3062 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c_gŸo_bödögs
 (X);\

3063 } 0)

	)

3064 
gt_ggc_mx_c_gŸo_bödögs
 (*);

3065 
	#gt_ggc_m_7c_sc›e
(
X
) do { \

3066 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c_sc›e
 (X);\

3067 } 0)

	)

3068 
gt_ggc_mx_c_sc›e
 (*);

3069 
	#gt_ggc_m_9c_bödög
(
X
) do { \

3070 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c_bödög
 (X);\

3071 } 0)

	)

3072 
gt_ggc_mx_c_bödög
 (*);

3073 
	#gt_ggc_m_12c_œbñ_v¨s
(
X
) do { \

3074 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c_œbñ_v¨s
 (X);\

3075 } 0)

	)

3076 
gt_ggc_mx_c_œbñ_v¨s
 (*);

3077 
	#gt_ggc_m_13∑d_ty≥_hash
(
X
) do { \

3078 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_∑d_ty≥_hash
 (X);\

3079 } 0)

	)

3080 
gt_ggc_mx_∑d_ty≥_hash
 (*);

3081 
	#gt_ggc_m_18g«t_bödög_Àvñ
(
X
) do { \

3082 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_g«t_bödög_Àvñ
 (X);\

3083 } 0)

	)

3084 
gt_ggc_mx_g«t_bödög_Àvñ
 (*);

3085 
	#gt_ggc_m_20vec_lo›_öfo_va_gc_
(
X
) do { \

3086 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_lo›_öfo_va_gc_
 (X);\

3087 } 0)

	)

3088 
gt_ggc_mx_vec_lo›_öfo_va_gc_
 (*);

3089 
	#gt_ggc_m_11lo›_öfo_d
(
X
) do { \

3090 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_lo›_öfo_d
 (X);\

3091 } 0)

	)

3092 
gt_ggc_mx_lo›_öfo_d
 (*);

3093 
	#gt_ggc_m_27vec_ønge_check_öfo_va_gc_
(
X
) do { \

3094 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ønge_check_öfo_va_gc_
 (X);\

3095 } 0)

	)

3096 
gt_ggc_mx_vec_ønge_check_öfo_va_gc_
 (*);

3097 
	#gt_ggc_m_18ønge_check_öfo_d
(
X
) do { \

3098 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ønge_check_öfo_d
 (X);\

3099 } 0)

	)

3100 
gt_ggc_mx_ønge_check_öfo_d
 (*);

3101 
	#gt_ggc_m_9ñab_öfo
(
X
) do { \

3102 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ñab_öfo
 (X);\

3103 } 0)

	)

3104 
gt_ggc_mx_ñab_öfo
 (*);

3105 
	#gt_ggc_m_10°mt_group
(
X
) do { \

3106 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_°mt_group
 (X);\

3107 } 0)

	)

3108 
gt_ggc_mx_°mt_group
 (*);

3109 
	#gt_ggc_m_20vec_∑rm_©å_va_gc_
(
X
) do { \

3110 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_∑rm_©å_va_gc_
 (X);\

3111 } 0)

	)

3112 
gt_ggc_mx_vec_∑rm_©å_va_gc_
 (*);

3113 
	#gt_ggc_m_11∑rm_©å_d
(
X
) do { \

3114 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_∑rm_©å_d
 (X);\

3115 } 0)

	)

3116 
gt_ggc_mx_∑rm_©å_d
 (*);

3117 
	#gt_ggc_m_19vec_odr_ty≥_va_gc_
(
X
) do { \

3118 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_odr_ty≥_va_gc_
 (X);\

3119 } 0)

	)

3120 
gt_ggc_mx_vec_odr_ty≥_va_gc_
 (*);

3121 
	#gt_ggc_m_13åì_ty≥_m≠
(
X
) do { \

3122 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_ty≥_m≠
 (X);\

3123 } 0)

	)

3124 
gt_ggc_mx_åì_ty≥_m≠
 (*);

3125 
	#gt_ggc_m_27vec_ölöe_summ¨y_t_va_gc_
(
X
) do { \

3126 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ölöe_summ¨y_t_va_gc_
 (X);\

3127 } 0)

	)

3128 
gt_ggc_mx_vec_ölöe_summ¨y_t_va_gc_
 (*);

3129 
	#gt_ggc_m_26vec_size_time_íåy_va_gc_
(
X
) do { \

3130 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_size_time_íåy_va_gc_
 (X);\

3131 } 0)

	)

3132 
gt_ggc_mx_vec_size_time_íåy_va_gc_
 (*);

3133 
	#gt_ggc_m_20vec_c⁄dôi⁄_va_gc_
(
X
) do { \

3134 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_c⁄dôi⁄_va_gc_
 (X);\

3135 } 0)

	)

3136 
gt_ggc_mx_vec_c⁄dôi⁄_va_gc_
 (*);

3137 
	#gt_ggc_m_17…o_ö_de˛_°©e
(
X
) do { \

3138 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_…o_ö_de˛_°©e
 (X);\

3139 } 0)

	)

3140 
gt_ggc_mx_…o_ö_de˛_°©e
 (*);

3141 
	#gt_ggc_m_24vec_ùa_edge_¨gs_va_gc_
(
X
) do { \

3142 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ùa_edge_¨gs_va_gc_
 (X);\

3143 } 0)

	)

3144 
gt_ggc_mx_vec_ùa_edge_¨gs_va_gc_
 (*);

3145 
	#gt_ggc_m_38vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
(
X
) do { \

3146 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
 (X);\

3147 } 0)

	)

3148 
gt_ggc_mx_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
 (*);

3149 
	#gt_ggc_m_24vec_ùa_jump_func_va_gc_
(
X
) do { \

3150 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ùa_jump_func_va_gc_
 (X);\

3151 } 0)

	)

3152 
gt_ggc_mx_vec_ùa_jump_func_va_gc_
 (*);

3153 
	#gt_ggc_m_26vec_ùa_agg_jf_ôem_va_gc_
(
X
) do { \

3154 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ùa_agg_jf_ôem_va_gc_
 (X);\

3155 } 0)

	)

3156 
gt_ggc_mx_vec_ùa_agg_jf_ôem_va_gc_
 (*);

3157 
	#gt_ggc_m_20sß_›î™d_mem‹y_d
(
X
) do { \

3158 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_sß_›î™d_mem‹y_d
 (X);\

3159 } 0)

	)

3160 
gt_ggc_mx_sß_›î™d_mem‹y_d
 (*);

3161 
	#gt_ggc_m_13s˚v_öfo_°r
(
X
) do { \

3162 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_s˚v_öfo_°r
 (X);\

3163 } 0)

	)

3164 
gt_ggc_mx_s˚v_öfo_°r
 (*);

3165 
	#gt_ggc_m_28vec_mem_addr_ãm∂©e_va_gc_
(
X
) do { \

3166 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_mem_addr_ãm∂©e_va_gc_
 (X);\

3167 } 0)

	)

3168 
gt_ggc_mx_vec_mem_addr_ãm∂©e_va_gc_
 (*);

3169 
	#gt_ggc_m_17vec_gim∂e_va_gc_
(
X
) do { \

3170 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_gim∂e_va_gc_
 (X);\

3171 } 0)

	)

3172 
gt_ggc_mx_vec_gim∂e_va_gc_
 (*);

3173 
	#gt_ggc_m_15tm_ª°¨t_node
(
X
) do { \

3174 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_tm_ª°¨t_node
 (X);\

3175 } 0)

	)

3176 
gt_ggc_mx_tm_ª°¨t_node
 (*);

3177 
	#gt_ggc_m_9ty≥_hash
(
X
) do { \

3178 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ty≥_hash
 (X);\

3179 } 0)

	)

3180 
gt_ggc_mx_ty≥_hash
 (*);

3181 
	#gt_ggc_m_16°rög_poﬁ_d©a
(
X
) do { \

3182 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_°rög_poﬁ_d©a
 (X);\

3183 } 0)

	)

3184 
gt_ggc_mx_°rög_poﬁ_d©a
 (*);

3185 
	#gt_ggc_m_23ãmp_¶Ÿ_addªss_íåy
(
X
) do { \

3186 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ãmp_¶Ÿ_addªss_íåy
 (X);\

3187 } 0)

	)

3188 
gt_ggc_mx_ãmp_¶Ÿ_addªss_íåy
 (*);

3189 
	#gt_ggc_m_15throw_°mt_node
(
X
) do { \

3190 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_throw_°mt_node
 (X);\

3191 } 0)

	)

3192 
gt_ggc_mx_throw_°mt_node
 (*);

3193 
	#gt_ggc_m_25vec_eh_œndög_∑d_va_gc_
(
X
) do { \

3194 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_eh_œndög_∑d_va_gc_
 (X);\

3195 } 0)

	)

3196 
gt_ggc_mx_vec_eh_œndög_∑d_va_gc_
 (*);

3197 
	#gt_ggc_m_20vec_eh_ªgi⁄_va_gc_
(
X
) do { \

3198 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_eh_ªgi⁄_va_gc_
 (X);\

3199 } 0)

	)

3200 
gt_ggc_mx_vec_eh_ªgi⁄_va_gc_
 (*);

3201 
	#gt_ggc_m_10eh_ˇtch_d
(
X
) do { \

3202 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_eh_ˇtch_d
 (X);\

3203 } 0)

	)

3204 
gt_ggc_mx_eh_ˇtch_d
 (*);

3205 
	#gt_ggc_m_16eh_œndög_∑d_d
(
X
) do { \

3206 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_eh_œndög_∑d_d
 (X);\

3207 } 0)

	)

3208 
gt_ggc_mx_eh_œndög_∑d_d
 (*);

3209 
	#gt_ggc_m_13poöãr_m≠_t
(
X
) do { \

3210 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_poöãr_m≠_t
 (X);\

3211 } 0)

	)

3212 
gt_ggc_mx_poöãr_m≠_t
 (*);

3213 
	#gt_ggc_m_11eh_ªgi⁄_d
(
X
) do { \

3214 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_eh_ªgi⁄_d
 (X);\

3215 } 0)

	)

3216 
gt_ggc_mx_eh_ªgi⁄_d
 (*);

3217 
	#gt_ggc_m_24vec_dõ_¨g_íåy_va_gc_
(
X
) do { \

3218 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_dõ_¨g_íåy_va_gc_
 (X);\

3219 } 0)

	)

3220 
gt_ggc_mx_vec_dõ_¨g_íåy_va_gc_
 (*);

3221 
	#gt_ggc_m_24vec_macöfo_íåy_va_gc_
(
X
) do { \

3222 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_macöfo_íåy_va_gc_
 (X);\

3223 } 0)

	)

3224 
gt_ggc_mx_vec_macöfo_íåy_va_gc_
 (*);

3225 
	#gt_ggc_m_24vec_pub«me_íåy_va_gc_
(
X
) do { \

3226 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_pub«me_íåy_va_gc_
 (X);\

3227 } 0)

	)

3228 
gt_ggc_mx_vec_pub«me_íåy_va_gc_
 (*);

3229 
	#gt_ggc_m_31vec_dw_löe_öfo_èbÀ_p_va_gc_
(
X
) do { \

3230 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_dw_löe_öfo_èbÀ_p_va_gc_
 (X);\

3231 } 0)

	)

3232 
gt_ggc_mx_vec_dw_löe_öfo_èbÀ_p_va_gc_
 (*);

3233 
	#gt_ggc_m_22ˇched_dw_loc_li°_def
(
X
) do { \

3234 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ˇched_dw_loc_li°_def
 (X);\

3235 } 0)

	)

3236 
gt_ggc_mx_ˇched_dw_loc_li°_def
 (*);

3237 
	#gt_ggc_m_17ˇŒ_¨g_loc_node
(
X
) do { \

3238 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ˇŒ_¨g_loc_node
 (X);\

3239 } 0)

	)

3240 
gt_ggc_mx_ˇŒ_¨g_loc_node
 (*);

3241 
	#gt_ggc_m_16v¨_loc_li°_def
(
X
) do { \

3242 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_v¨_loc_li°_def
 (X);\

3243 } 0)

	)

3244 
gt_ggc_mx_v¨_loc_li°_def
 (*);

3245 
	#gt_ggc_m_12v¨_loc_node
(
X
) do { \

3246 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_v¨_loc_node
 (X);\

3247 } 0)

	)

3248 
gt_ggc_mx_v¨_loc_node
 (*);

3249 
	#gt_ggc_m_16limbo_dõ_°ru˘
(
X
) do { \

3250 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_limbo_dõ_°ru˘
 (X);\

3251 } 0)

	)

3252 
gt_ggc_mx_limbo_dõ_°ru˘
 (*);

3253 
	#gt_ggc_m_23vec_dw_©å_node_va_gc_
(
X
) do { \

3254 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_dw_©å_node_va_gc_
 (X);\

3255 } 0)

	)

3256 
gt_ggc_mx_vec_dw_©å_node_va_gc_
 (*);

3257 
	#gt_ggc_m_25dw_löe_öfo_èbÀ_°ru˘
(
X
) do { \

3258 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_löe_öfo_èbÀ_°ru˘
 (X);\

3259 } 0)

	)

3260 
gt_ggc_mx_dw_löe_öfo_èbÀ_°ru˘
 (*);

3261 
	#gt_ggc_m_29vec_dw_löe_öfo_íåy_va_gc_
(
X
) do { \

3262 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_dw_löe_öfo_íåy_va_gc_
 (X);\

3263 } 0)

	)

3264 
gt_ggc_mx_vec_dw_löe_öfo_íåy_va_gc_
 (*);

3265 
	#gt_ggc_m_18comd©_ty≥_°ru˘
(
X
) do { \

3266 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_comd©_ty≥_°ru˘
 (X);\

3267 } 0)

	)

3268 
gt_ggc_mx_comd©_ty≥_°ru˘
 (*);

3269 
	#gt_ggc_m_25dw_ønges_by_œbñ_°ru˘
(
X
) do { \

3270 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_ønges_by_œbñ_°ru˘
 (X);\

3271 } 0)

	)

3272 
gt_ggc_mx_dw_ønges_by_œbñ_°ru˘
 (*);

3273 
	#gt_ggc_m_16dw_ønges_°ru˘
(
X
) do { \

3274 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_ønges_°ru˘
 (X);\

3275 } 0)

	)

3276 
gt_ggc_mx_dw_ønges_°ru˘
 (*);

3277 
	#gt_ggc_m_29vec_de„ºed_loˇti⁄s_va_gc_
(
X
) do { \

3278 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_de„ºed_loˇti⁄s_va_gc_
 (X);\

3279 } 0)

	)

3280 
gt_ggc_mx_vec_de„ºed_loˇti⁄s_va_gc_
 (*);

3281 
	#gt_ggc_m_21vec_dw_fde_ªf_va_gc_
(
X
) do { \

3282 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_dw_fde_ªf_va_gc_
 (X);\

3283 } 0)

	)

3284 
gt_ggc_mx_vec_dw_fde_ªf_va_gc_
 (*);

3285 
	#gt_ggc_m_24ªg_ßved_ö_d©a_°ru˘
(
X
) do { \

3286 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ªg_ßved_ö_d©a_°ru˘
 (X);\

3287 } 0)

	)

3288 
gt_ggc_mx_ªg_ßved_ö_d©a_°ru˘
 (*);

3289 
	#gt_ggc_m_17dw_cfi_row_°ru˘
(
X
) do { \

3290 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_cfi_row_°ru˘
 (X);\

3291 } 0)

	)

3292 
gt_ggc_mx_dw_cfi_row_°ru˘
 (*);

3293 
	#gt_ggc_m_15dw¨f_fûe_d©a
(
X
) do { \

3294 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw¨f_fûe_d©a
 (X);\

3295 } 0)

	)

3296 
gt_ggc_mx_dw¨f_fûe_d©a
 (*);

3297 
	#gt_ggc_m_20ödúe˘_°rög_node
(
X
) do { \

3298 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ödúe˘_°rög_node
 (X);\

3299 } 0)

	)

3300 
gt_ggc_mx_ödúe˘_°rög_node
 (*);

3301 
	#gt_ggc_m_23addr_èbÀ_íåy_°ru˘
(
X
) do { \

3302 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_addr_èbÀ_íåy_°ru˘
 (X);\

3303 } 0)

	)

3304 
gt_ggc_mx_addr_èbÀ_íåy_°ru˘
 (*);

3305 
	#gt_ggc_m_21vec_dw_cfi_ªf_va_gc_
(
X
) do { \

3306 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_dw_cfi_ªf_va_gc_
 (X);\

3307 } 0)

	)

3308 
gt_ggc_mx_vec_dw_cfi_ªf_va_gc_
 (*);

3309 
	#gt_ggc_m_18dw_loc_li°_°ru˘
(
X
) do { \

3310 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_loc_li°_°ru˘
 (X);\

3311 } 0)

	)

3312 
gt_ggc_mx_dw_loc_li°_°ru˘
 (*);

3313 
	#gt_ggc_m_17dw_loc_des¸_node
(
X
) do { \

3314 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_loc_des¸_node
 (X);\

3315 } 0)

	)

3316 
gt_ggc_mx_dw_loc_des¸_node
 (*);

3317 
	#gt_ggc_m_11dw_cfi_node
(
X
) do { \

3318 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_cfi_node
 (X);\

3319 } 0)

	)

3320 
gt_ggc_mx_dw_cfi_node
 (*);

3321 
	#gt_ggc_m_8ty≥öfo
(
X
) do { \

3322 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ty≥öfo
 (X);\

3323 } 0)

	)

3324 
gt_ggc_mx_ty≥öfo
 (*);

3325 
	#gt_ggc_m_10odr_ty≥_d
(
X
) do { \

3326 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_odr_ty≥_d
 (X);\

3327 } 0)

	)

3328 
gt_ggc_mx_odr_ty≥_d
 (*);

3329 
	#gt_ggc_m_25ùa_agg_ª∂a˚mít_vÆue
(
X
) do { \

3330 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ùa_agg_ª∂a˚mít_vÆue
 (X);\

3331 } 0)

	)

3332 
gt_ggc_mx_ùa_agg_ª∂a˚mít_vÆue
 (*);

3333 
	#gt_ggc_m_26vec_Æüs_£t_íåy_va_gc_
(
X
) do { \

3334 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_Æüs_£t_íåy_va_gc_
 (X);\

3335 } 0)

	)

3336 
gt_ggc_mx_vec_Æüs_£t_íåy_va_gc_
 (*);

3337 
	#gt_ggc_m_17Æüs_£t_íåy_d
(
X
) do { \

3338 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_Æüs_£t_íåy_d
 (X);\

3339 } 0)

	)

3340 
gt_ggc_mx_Æüs_£t_íåy_d
 (*);

3341 
	#gt_ggc_m_24c⁄°™t_des¸ùt‹_åì
(
X
) do { \

3342 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c⁄°™t_des¸ùt‹_åì
 (X);\

3343 } 0)

	)

3344 
gt_ggc_mx_c⁄°™t_des¸ùt‹_åì
 (*);

3345 
	#gt_ggc_m_8asm_node
(
X
) do { \

3346 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_asm_node
 (X);\

3347 } 0)

	)

3348 
gt_ggc_mx_asm_node
 (*);

3349 
	#gt_ggc_m_25cgøph_ödúe˘_ˇŒ_öfo
(
X
) do { \

3350 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_cgøph_ödúe˘_ˇŒ_öfo
 (X);\

3351 } 0)

	)

3352 
gt_ggc_mx_cgøph_ödúe˘_ˇŒ_öfo
 (*);

3353 
	#gt_ggc_m_28cgøph_fun˘i⁄_vîsi⁄_öfo
(
X
) do { \

3354 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_cgøph_fun˘i⁄_vîsi⁄_öfo
 (X);\

3355 } 0)

	)

3356 
gt_ggc_mx_cgøph_fun˘i⁄_vîsi⁄_öfo
 (*);

3357 
	#gt_ggc_m_11cgøph_edge
(
X
) do { \

3358 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_cgøph_edge
 (X);\

3359 } 0)

	)

3360 
gt_ggc_mx_cgøph_edge
 (*);

3361 
	#gt_ggc_m_17cgøph_simd_˛⁄e
(
X
) do { \

3362 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_cgøph_simd_˛⁄e
 (X);\

3363 } 0)

	)

3364 
gt_ggc_mx_cgøph_simd_˛⁄e
 (*);

3365 
	#gt_ggc_m_28vec_ùa_ª∂a˚_m≠_p_va_gc_
(
X
) do { \

3366 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ùa_ª∂a˚_m≠_p_va_gc_
 (X);\

3367 } 0)

	)

3368 
gt_ggc_mx_vec_ùa_ª∂a˚_m≠_p_va_gc_
 (*);

3369 
	#gt_ggc_m_15ùa_ª∂a˚_m≠
(
X
) do { \

3370 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ùa_ª∂a˚_m≠
 (X);\

3371 } 0)

	)

3372 
gt_ggc_mx_ùa_ª∂a˚_m≠
 (*);

3373 
	#gt_ggc_m_18…o_fûe_de˛_d©a
(
X
) do { \

3374 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_…o_fûe_de˛_d©a
 (X);\

3375 } 0)

	)

3376 
gt_ggc_mx_…o_fûe_de˛_d©a
 (*);

3377 
	#gt_ggc_m_20vec_ùa_ªf_t_va_gc_
(
X
) do { \

3378 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ùa_ªf_t_va_gc_
 (X);\

3379 } 0)

	)

3380 
gt_ggc_mx_vec_ùa_ªf_t_va_gc_
 (*);

3381 
	#gt_ggc_m_11symèb_node
(
X
) do { \

3382 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_symèb_node
 (X);\

3383 } 0)

	)

3384 
gt_ggc_mx_symèb_node
 (*);

3385 
	#gt_ggc_m_22vec_basic_block_va_gc_
(
X
) do { \

3386 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_basic_block_va_gc_
 (X);\

3387 } 0)

	)

3388 
gt_ggc_mx_vec_basic_block_va_gc_
 (*);

3389 
	#gt_ggc_m_15vec_edge_va_gc_
(
X
) do { \

3390 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_edge_va_gc_
 (X);\

3391 } 0)

	)

3392 
gt_ggc_mx_vec_edge_va_gc_
 (*);

3393 
	#gt_ggc_m_11πl_bb_öfo
(
X
) do { \

3394 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_πl_bb_öfo
 (X);\

3395 } 0)

	)

3396 
gt_ggc_mx_πl_bb_öfo
 (*);

3397 
	#gt_ggc_m_10nôî_desc
(
X
) do { \

3398 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_nôî_desc
 (X);\

3399 } 0)

	)

3400 
gt_ggc_mx_nôî_desc
 (*);

3401 
	#gt_ggc_m_17vec_lo›_p_va_gc_
(
X
) do { \

3402 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_lo›_p_va_gc_
 (X);\

3403 } 0)

	)

3404 
gt_ggc_mx_vec_lo›_p_va_gc_
 (*);

3405 
	#gt_ggc_m_4lo›
(
X
) do { \

3406 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_lo›
 (X);\

3407 } 0)

	)

3408 
gt_ggc_mx_lo›
 (*);

3409 
	#gt_ggc_m_9lo›_exô
(
X
) do { \

3410 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_lo›_exô
 (X);\

3411 } 0)

	)

3412 
gt_ggc_mx_lo›_exô
 (*);

3413 
	#gt_ggc_m_13nb_ôî_bound
(
X
) do { \

3414 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_nb_ôî_bound
 (X);\

3415 } 0)

	)

3416 
gt_ggc_mx_nb_ôî_bound
 (*);

3417 
	#gt_ggc_m_24ty≥s_u£d_by_v¨s_íåy
(
X
) do { \

3418 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ty≥s_u£d_by_v¨s_íåy
 (X);\

3419 } 0)

	)

3420 
gt_ggc_mx_ty≥s_u£d_by_v¨s_íåy
 (*);

3421 
	#gt_ggc_m_17œnguage_fun˘i⁄
(
X
) do { \

3422 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_œnguage_fun˘i⁄
 (X);\

3423 } 0)

	)

3424 
gt_ggc_mx_œnguage_fun˘i⁄
 (*);

3425 
	#gt_ggc_m_5lo›s
(
X
) do { \

3426 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_lo›s
 (X);\

3427 } 0)

	)

3428 
gt_ggc_mx_lo›s
 (*);

3429 
	#gt_ggc_m_18c⁄åﬁ_Êow_gøph
(
X
) do { \

3430 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c⁄åﬁ_Êow_gøph
 (X);\

3431 } 0)

	)

3432 
gt_ggc_mx_c⁄åﬁ_Êow_gøph
 (*);

3433 
	#gt_ggc_m_9eh_°©us
(
X
) do { \

3434 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_eh_°©us
 (X);\

3435 } 0)

	)

3436 
gt_ggc_mx_eh_°©us
 (*);

3437 
	#gt_ggc_m_11°ack_ußge
(
X
) do { \

3438 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_°ack_ußge
 (X);\

3439 } 0)

	)

3440 
gt_ggc_mx_°ack_ußge
 (*);

3441 
	#gt_ggc_m_22vec_ãmp_¶Ÿ_p_va_gc_
(
X
) do { \

3442 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ãmp_¶Ÿ_p_va_gc_
 (X);\

3443 } 0)

	)

3444 
gt_ggc_mx_vec_ãmp_¶Ÿ_p_va_gc_
 (*);

3445 
	#gt_ggc_m_20öôül_vÆue_°ru˘
(
X
) do { \

3446 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_öôül_vÆue_°ru˘
 (X);\

3447 } 0)

	)

3448 
gt_ggc_mx_öôül_vÆue_°ru˘
 (*);

3449 
	#gt_ggc_m_11‰ame_•a˚
(
X
) do { \

3450 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_‰ame_•a˚
 (X);\

3451 } 0)

	)

3452 
gt_ggc_mx_‰ame_•a˚
 (*);

3453 
	#gt_ggc_m_17πx_c⁄°™t_poﬁ
(
X
) do { \

3454 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_πx_c⁄°™t_poﬁ
 (X);\

3455 } 0)

	)

3456 
gt_ggc_mx_πx_c⁄°™t_poﬁ
 (*);

3457 
	#gt_ggc_m_11dw_fde_node
(
X
) do { \

3458 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dw_fde_node
 (X);\

3459 } 0)

	)

3460 
gt_ggc_mx_dw_fde_node
 (*);

3461 
	#gt_ggc_m_9ãmp_¶Ÿ
(
X
) do { \

3462 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ãmp_¶Ÿ
 (X);\

3463 } 0)

	)

3464 
gt_ggc_mx_ãmp_¶Ÿ
 (*);

3465 
	#gt_ggc_m_9gim∂e_df
(
X
) do { \

3466 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_gim∂e_df
 (X);\

3467 } 0)

	)

3468 
gt_ggc_mx_gim∂e_df
 (*);

3469 
	#gt_ggc_m_27vec_ˇŒ_sôe_ªc‹d_va_gc_
(
X
) do { \

3470 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_ˇŒ_sôe_ªc‹d_va_gc_
 (X);\

3471 } 0)

	)

3472 
gt_ggc_mx_vec_ˇŒ_sôe_ªc‹d_va_gc_
 (*);

3473 
	#gt_ggc_m_16vec_uch¨_va_gc_
(
X
) do { \

3474 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_uch¨_va_gc_
 (X);\

3475 } 0)

	)

3476 
gt_ggc_mx_vec_uch¨_va_gc_
 (*);

3477 
	#gt_ggc_m_18ˇŒ_sôe_ªc‹d_d
(
X
) do { \

3478 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ˇŒ_sôe_ªc‹d_d
 (X);\

3479 } 0)

	)

3480 
gt_ggc_mx_ˇŒ_sôe_ªc‹d_d
 (*);

3481 
	#gt_ggc_m_14£quí˚_°ack
(
X
) do { \

3482 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_£quí˚_°ack
 (X);\

3483 } 0)

	)

3484 
gt_ggc_mx_£quí˚_°ack
 (*);

3485 
	#gt_ggc_m_15èrgë_libfuncs
(
X
) do { \

3486 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_èrgë_libfuncs
 (X);\

3487 } 0)

	)

3488 
gt_ggc_mx_èrgë_libfuncs
 (*);

3489 
	#gt_ggc_m_13libfunc_íåy
(
X
) do { \

3490 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_libfunc_íåy
 (X);\

3491 } 0)

	)

3492 
gt_ggc_mx_libfunc_íåy
 (*);

3493 
	#gt_ggc_m_21vec_Æüs_∑ú_va_gc_
(
X
) do { \

3494 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_Æüs_∑ú_va_gc_
 (X);\

3495 } 0)

	)

3496 
gt_ggc_mx_vec_Æüs_∑ú_va_gc_
 (*);

3497 
	#gt_ggc_m_12åì_vec_m≠
(
X
) do { \

3498 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_vec_m≠
 (X);\

3499 } 0)

	)

3500 
gt_ggc_mx_åì_vec_m≠
 (*);

3501 
	#gt_ggc_m_17åì_¥i‹ôy_m≠
(
X
) do { \

3502 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_¥i‹ôy_m≠
 (X);\

3503 } 0)

	)

3504 
gt_ggc_mx_åì_¥i‹ôy_m≠
 (*);

3505 
	#gt_ggc_m_12åì_öt_m≠
(
X
) do { \

3506 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_öt_m≠
 (X);\

3507 } 0)

	)

3508 
gt_ggc_mx_åì_öt_m≠
 (*);

3509 
	#gt_ggc_m_13åì_de˛_m≠
(
X
) do { \

3510 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_de˛_m≠
 (X);\

3511 } 0)

	)

3512 
gt_ggc_mx_åì_de˛_m≠
 (*);

3513 
	#gt_ggc_m_8åì_m≠
(
X
) do { \

3514 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_m≠
 (X);\

3515 } 0)

	)

3516 
gt_ggc_mx_åì_m≠
 (*);

3517 
	#gt_ggc_m_14œng_åì_node
(
X
) do { \

3518 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_œng_åì_node
 (X);\

3519 } 0)

	)

3520 
gt_ggc_mx_œng_åì_node
 (*);

3521 
	#gt_ggc_m_14èrgë_globÆs
(
X
) do { \

3522 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_èrgë_globÆs
 (X);\

3523 } 0)

	)

3524 
gt_ggc_mx_èrgë_globÆs
 (*);

3525 
	#gt_ggc_m_24åì_°©emít_li°_node
(
X
) do { \

3526 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_°©emít_li°_node
 (X);\

3527 } 0)

	)

3528 
gt_ggc_mx_åì_°©emít_li°_node
 (*);

3529 
	#gt_ggc_m_9œng_de˛
(
X
) do { \

3530 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_œng_de˛
 (X);\

3531 } 0)

	)

3532 
gt_ggc_mx_œng_de˛
 (*);

3533 
	#gt_ggc_m_9œng_ty≥
(
X
) do { \

3534 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_œng_ty≥
 (X);\

3535 } 0)

	)

3536 
gt_ggc_mx_œng_ty≥
 (*);

3537 
	#gt_ggc_m_15vec_åì_va_gc_
(
X
) do { \

3538 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_åì_va_gc_
 (X);\

3539 } 0)

	)

3540 
gt_ggc_mx_vec_åì_va_gc_
 (*);

3541 
	#gt_ggc_m_26vec_c⁄°ru˘‹_ñt_va_gc_
(
X
) do { \

3542 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_c⁄°ru˘‹_ñt_va_gc_
 (X);\

3543 } 0)

	)

3544 
gt_ggc_mx_vec_c⁄°ru˘‹_ñt_va_gc_
 (*);

3545 
	#gt_ggc_m_10dõ_°ru˘
(
X
) do { \

3546 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_dõ_°ru˘
 (X);\

3547 } 0)

	)

3548 
gt_ggc_mx_dõ_°ru˘
 (*);

3549 
	#gt_ggc_m_14ønge_öfo_def
(
X
) do { \

3550 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ønge_öfo_def
 (X);\

3551 } 0)

	)

3552 
gt_ggc_mx_ønge_öfo_def
 (*);

3553 
	#gt_ggc_m_12±r_öfo_def
(
X
) do { \

3554 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_±r_öfo_def
 (X);\

3555 } 0)

	)

3556 
gt_ggc_mx_±r_öfo_def
 (*);

3557 
	#gt_ggc_m_10èrgë_πl
(
X
) do { \

3558 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_èrgë_πl
 (X);\

3559 } 0)

	)

3560 
gt_ggc_mx_èrgë_πl
 (*);

3561 
	#gt_ggc_m_8fun˘i⁄
(
X
) do { \

3562 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_fun˘i⁄
 (X);\

3563 } 0)

	)

3564 
gt_ggc_mx_fun˘i⁄
 (*);

3565 
	#gt_ggc_m_23c⁄°™t_des¸ùt‹_πx
(
X
) do { \

3566 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_c⁄°™t_des¸ùt‹_πx
 (X);\

3567 } 0)

	)

3568 
gt_ggc_mx_c⁄°™t_des¸ùt‹_πx
 (*);

3569 
	#gt_ggc_m_11fixed_vÆue
(
X
) do { \

3570 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_fixed_vÆue
 (X);\

3571 } 0)

	)

3572 
gt_ggc_mx_fixed_vÆue
 (*);

3573 
	#gt_ggc_m_10ªÆ_vÆue
(
X
) do { \

3574 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ªÆ_vÆue
 (X);\

3575 } 0)

	)

3576 
gt_ggc_mx_ªÆ_vÆue
 (*);

3577 
	#gt_ggc_m_14vec_πx_va_gc_
(
X
) do { \

3578 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_vec_πx_va_gc_
 (X);\

3579 } 0)

	)

3580 
gt_ggc_mx_vec_πx_va_gc_
 (*);

3581 
	#gt_ggc_m_12obje˘_block
(
X
) do { \

3582 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_obje˘_block
 (X);\

3583 } 0)

	)

3584 
gt_ggc_mx_obje˘_block
 (*);

3585 
	#gt_ggc_m_9ªg_©ås
(
X
) do { \

3586 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_ªg_©ås
 (X);\

3587 } 0)

	)

3588 
gt_ggc_mx_ªg_©ås
 (*);

3589 
	#gt_ggc_m_9mem_©ås
(
X
) do { \

3590 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_mem_©ås
 (X);\

3591 } 0)

	)

3592 
gt_ggc_mx_mem_©ås
 (*);

3593 
	#gt_ggc_m_13covîage_d©a
(
X
) do { \

3594 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_covîage_d©a
 (X);\

3595 } 0)

	)

3596 
gt_ggc_mx_covîage_d©a
 (*);

3597 
	#gt_ggc_m_14bôm≠_ob°ack
(
X
) do { \

3598 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_bôm≠_ob°ack
 (X);\

3599 } 0)

	)

3600 
gt_ggc_mx_bôm≠_ob°ack
 (*);

3601 
	#gt_ggc_m_14bôm≠_ñemít
(
X
) do { \

3602 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_bôm≠_ñemít
 (X);\

3603 } 0)

	)

3604 
gt_ggc_mx_bôm≠_ñemít
 (*);

3605 
	#gt_ggc_m_16machöe_fun˘i⁄
(
X
) do { \

3606 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_machöe_fun˘i⁄
 (X);\

3607 } 0)

	)

3608 
gt_ggc_mx_machöe_fun˘i⁄
 (*);

3609 
	#gt_ggc_m_15basic_block_def
(
X
) do { \

3610 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_basic_block_def
 (X);\

3611 } 0)

	)

3612 
gt_ggc_mx_basic_block_def
 (*);

3613 
	#gt_ggc_m_8edge_def
(
X
) do { \

3614 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_edge_def
 (X);\

3615 } 0)

	)

3616 
gt_ggc_mx_edge_def
 (*);

3617 
	#gt_ggc_m_7£˘i⁄
(
X
) do { \

3618 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_£˘i⁄
 (X);\

3619 } 0)

	)

3620 
gt_ggc_mx_£˘i⁄
 (*);

3621 
	#gt_ggc_m_21gim∂e_°©emít_ba£
(
X
) do { \

3622 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_gim∂e_°©emít_ba£
 (X);\

3623 } 0)

	)

3624 
gt_ggc_mx_gim∂e_°©emít_ba£
 (*);

3625 
	#gt_ggc_m_9πvec_def
(
X
) do { \

3626 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_πvec_def
 (X);\

3627 } 0)

	)

3628 
gt_ggc_mx_πvec_def
 (*);

3629 
	#gt_ggc_m_7πx_def
(
X
) do { \

3630 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_πx_def
 (X);\

3631 } 0)

	)

3632 
gt_ggc_mx_πx_def
 (*);

3633 
	#gt_ggc_m_11bôm≠_hód
(
X
) do { \

3634 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_bôm≠_hód
 (X);\

3635 } 0)

	)

3636 
gt_ggc_mx_bôm≠_hód
 (*);

3637 
	#gt_ggc_m_6™swî
(
X
) do { \

3638 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_™swî
 (X);\

3639 } 0)

	)

3640 
gt_ggc_mx_™swî
 (*);

3641 
	#gt_ggc_m_9˝p_ma¸o
(
X
) do { \

3642 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝p_ma¸o
 (X);\

3643 } 0)

	)

3644 
gt_ggc_mx_˝p_ma¸o
 (*);

3645 
	#gt_ggc_m_9˝p_tokí
(
X
) do { \

3646 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_˝p_tokí
 (X);\

3647 } 0)

	)

3648 
gt_ggc_mx_˝p_tokí
 (*);

3649 
	#gt_ggc_m_9löe_m≠s
(
X
) do { \

3650 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_löe_m≠s
 (X);\

3651 } 0)

	)

3652 
gt_ggc_mx_löe_m≠s
 (*);

3653 
	#gt_ggc_m_9åì_node
(
X
) do { \

3654 i‡(
X
 !
NULL
Ë
	`gt_ggc_mx_åì_node
 (X);\

3655 } 0)

	)

3656 
	#gt_ggc_mx_åì_node
 
gt_ggc_mx_œng_åì_node


	)

3657 
gt_ggc_m_II17•œy_åì_node_s
 (*);

3658 
gt_ggc_m_SP9åì_node17•œy_åì_node_s
 (*);

3659 
gt_ggc_m_P9åì_nodeP9åì_node17•œy_åì_node_s
 (*);

3660 
gt_ggc_m_P17°rög_des¸ùt‹4hèb
 (*);

3661 
gt_ggc_m_P14ty≥_as£πi⁄4hèb
 (*);

3662 
gt_ggc_m_P18åìåìhash_íåy4hèb
 (*);

3663 
gt_ggc_m_P17moduÀ_hèb_íåy4hèb
 (*);

3664 
gt_ggc_m_P21≥ndög_ab°ø˘_ty≥4hèb
 (*);

3665 
gt_ggc_m_P14c⁄°ex¥_ˇŒ4hèb
 (*);

3666 
gt_ggc_m_P16c⁄°ex¥_fundef4hèb
 (*);

3667 
gt_ggc_m_P10•ec_íåy4hèb
 (*);

3668 
gt_ggc_m_P16cxx_öt_åì_m≠4hèb
 (*);

3669 
gt_ggc_m_P17«med_œbñ_íåy4hèb
 (*);

3670 
gt_ggc_m_P13∑d_ty≥_hash4hèb
 (*);

3671 
gt_ggc_m_P12åì_öt_m≠4hèb
 (*);

3672 
gt_ggc_m_P13åì_ty≥_m≠4hèb
 (*);

3673 
gt_ggc_m_P17…o_ö_de˛_°©e4hèb
 (*);

3674 
gt_ggc_m_P9åì_nodeP9åì_node12•œy_åì_s
 (*);

3675 
gt_ggc_m_P13s˚v_öfo_°r4hèb
 (*);

3676 
gt_ggc_m_P15tm_ª°¨t_node4hèb
 (*);

3677 
gt_ggc_m_P8åì_m≠4hèb
 (*);

3678 
gt_ggc_m_P23c⁄°™t_des¸ùt‹_πx4hèb
 (*);

3679 
gt_ggc_m_P24c⁄°™t_des¸ùt‹_åì4hèb
 (*);

3680 
gt_ggc_m_P12obje˘_block4hèb
 (*);

3681 
gt_ggc_m_P7£˘i⁄4hèb
 (*);

3682 
gt_ggc_m_P17åì_¥i‹ôy_m≠4hèb
 (*);

3683 
gt_ggc_m_P12åì_vec_m≠4hèb
 (*);

3684 
gt_ggc_m_P13åì_de˛_m≠4hèb
 (*);

3685 
gt_ggc_m_P9ty≥_hash4hèb
 (*);

3686 
gt_ggc_m_P23ãmp_¶Ÿ_addªss_íåy4hèb
 (*);

3687 
gt_ggc_m_P15throw_°mt_node4hèb
 (*);

3688 
gt_ggc_m_P9ªg_©ås4hèb
 (*);

3689 
gt_ggc_m_P7πx_def4hèb
 (*);

3690 
gt_ggc_m_P23addr_èbÀ_íåy_°ru˘4hèb
 (*);

3691 
gt_ggc_m_P22ˇched_dw_loc_li°_def4hèb
 (*);

3692 
gt_ggc_m_P16v¨_loc_li°_def4hèb
 (*);

3693 
gt_ggc_m_P10dõ_°ru˘4hèb
 (*);

3694 
gt_ggc_m_P15dw¨f_fûe_d©a4hèb
 (*);

3695 
gt_ggc_m_P20ödúe˘_°rög_node4hèb
 (*);

3696 
gt_ggc_m_SP9åì_node12•œy_åì_s
 (*);

3697 
gt_ggc_m_P28cgøph_fun˘i⁄_vîsi⁄_öfo4hèb
 (*);

3698 
gt_ggc_m_II12•œy_åì_s
 (*);

3699 
gt_ggc_m_P11symèb_node4hèb
 (*);

3700 
gt_ggc_m_P11cgøph_edge4hèb
 (*);

3701 
gt_ggc_m_P9lo›_exô4hèb
 (*);

3702 
gt_ggc_m_P24ty≥s_u£d_by_v¨s_íåy4hèb
 (*);

3703 
gt_ggc_m_P9åì_node4hèb
 (*);

3704 
gt_ggc_m_P13libfunc_íåy4hèb
 (*);

3710 
	#gt_pch_n_24vec_iv¨ªf_íåy_va_gc_
(
X
) do { \

3711 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_iv¨ªf_íåy_va_gc_
 (X);\

3712 } 0)

	)

3713 
gt_pch_nx_vec_iv¨ªf_íåy_va_gc_
 (*);

3714 
	#gt_pch_n_26vec_¥Ÿ_li°_íåy_va_gc_
(
X
) do { \

3715 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_¥Ÿ_li°_íåy_va_gc_
 (X);\

3716 } 0)

	)

3717 
gt_pch_nx_vec_¥Ÿ_li°_íåy_va_gc_
 (*);

3718 
	#gt_pch_n_23vec_msgªf_íåy_va_gc_
(
X
) do { \

3719 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_msgªf_íåy_va_gc_
 (X);\

3720 } 0)

	)

3721 
gt_pch_nx_vec_msgªf_íåy_va_gc_
 (*);

3722 
	#gt_pch_n_27vec_idít_d©a_tu∂e_va_gc_
(
X
) do { \

3723 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_idít_d©a_tu∂e_va_gc_
 (X);\

3724 } 0)

	)

3725 
gt_pch_nx_vec_idít_d©a_tu∂e_va_gc_
 (*);

3726 
	#gt_pch_n_17°rög_des¸ùt‹
(
X
) do { \

3727 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_°rög_des¸ùt‹
 (X);\

3728 } 0)

	)

3729 
gt_pch_nx_°rög_des¸ùt‹
 (*);

3730 
	#gt_pch_n_9imp_íåy
(
X
) do { \

3731 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_imp_íåy
 (X);\

3732 } 0)

	)

3733 
gt_pch_nx_imp_íåy
 (*);

3734 
	#gt_pch_n_16hashed_©åibuã
(
X
) do { \

3735 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_hashed_©åibuã
 (X);\

3736 } 0)

	)

3737 
gt_pch_nx_hashed_©åibuã
 (*);

3738 
	#gt_pch_n_12hashed_íåy
(
X
) do { \

3739 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_hashed_íåy
 (X);\

3740 } 0)

	)

3741 
gt_pch_nx_hashed_íåy
 (*);

3742 
	#gt_pch_n_16objc_m≠_¥iv©e
(
X
) do { \

3743 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_objc_m≠_¥iv©e
 (X);\

3744 } 0)

	)

3745 
gt_pch_nx_objc_m≠_¥iv©e
 (*);

3746 
	#gt_pch_n_23vec_mëhod_íåy_va_gc_
(
X
) do { \

3747 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_mëhod_íåy_va_gc_
 (X);\

3748 } 0)

	)

3749 
gt_pch_nx_vec_mëhod_íåy_va_gc_
 (*);

3750 
	#gt_pch_n_14ty≥_as£πi⁄
(
X
) do { \

3751 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ty≥_as£πi⁄
 (X);\

3752 } 0)

	)

3753 
gt_pch_nx_ty≥_as£πi⁄
 (*);

3754 
	#gt_pch_n_18åìåìhash_íåy
(
X
) do { \

3755 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åìåìhash_íåy
 (X);\

3756 } 0)

	)

3757 
gt_pch_nx_åìåìhash_íåy
 (*);

3758 
	#gt_pch_n_5CPoﬁ
(
X
) do { \

3759 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_CPoﬁ
 (X);\

3760 } 0)

	)

3761 
gt_pch_nx_CPoﬁ
 (*);

3762 
	#gt_pch_n_3JCF
(
X
) do { \

3763 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_JCF
 (X);\

3764 } 0)

	)

3765 
gt_pch_nx_JCF
 (*);

3766 
	#gt_pch_n_17moduÀ_hèb_íåy
(
X
) do { \

3767 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_moduÀ_hèb_íåy
 (X);\

3768 } 0)

	)

3769 
gt_pch_nx_moduÀ_hèb_íåy
 (*);

3770 
	#gt_pch_n_13bödög_Àvñ
(
X
) do { \

3771 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_bödög_Àvñ
 (X);\

3772 } 0)

	)

3773 
gt_pch_nx_bödög_Àvñ
 (*);

3774 
	#gt_pch_n_27vec_≥ndög_n€x˚±_va_gc_
(
X
) do { \

3775 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_≥ndög_n€x˚±_va_gc_
 (X);\

3776 } 0)

	)

3777 
gt_pch_nx_vec_≥ndög_n€x˚±_va_gc_
 (*);

3778 
	#gt_pch_n_21≥ndög_ab°ø˘_ty≥
(
X
) do { \

3779 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_≥ndög_ab°ø˘_ty≥
 (X);\

3780 } 0)

	)

3781 
gt_pch_nx_≥ndög_ab°ø˘_ty≥
 (*);

3782 
	#gt_pch_n_19vec_åì_öt_va_gc_
(
X
) do { \

3783 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_åì_öt_va_gc_
 (X);\

3784 } 0)

	)

3785 
gt_pch_nx_vec_åì_öt_va_gc_
 (*);

3786 
	#gt_pch_n_9˝_∑r£r
(
X
) do { \

3787 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝_∑r£r
 (X);\

3788 } 0)

	)

3789 
gt_pch_nx_˝_∑r£r
 (*);

3790 
	#gt_pch_n_38vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
(
X
) do { \

3791 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
 (X);\

3792 } 0)

	)

3793 
gt_pch_nx_vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_
 (*);

3794 
	#gt_pch_n_17˝_∑r£r_c⁄ãxt
(
X
) do { \

3795 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝_∑r£r_c⁄ãxt
 (X);\

3796 } 0)

	)

3797 
gt_pch_nx_˝_∑r£r_c⁄ãxt
 (*);

3798 
	#gt_pch_n_31vec_˝_deÁu…_¨g_íåy_va_gc_
(
X
) do { \

3799 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_˝_deÁu…_¨g_íåy_va_gc_
 (X);\

3800 } 0)

	)

3801 
gt_pch_nx_vec_˝_deÁu…_¨g_íåy_va_gc_
 (*);

3802 
	#gt_pch_n_8˝_Àxî
(
X
) do { \

3803 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝_Àxî
 (X);\

3804 } 0)

	)

3805 
gt_pch_nx_˝_Àxî
 (*);

3806 
	#gt_pch_n_19vec_˝_tokí_va_gc_
(
X
) do { \

3807 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_˝_tokí_va_gc_
 (X);\

3808 } 0)

	)

3809 
gt_pch_nx_vec_˝_tokí_va_gc_
 (*);

3810 
	#gt_pch_n_10åì_check
(
X
) do { \

3811 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_check
 (X);\

3812 } 0)

	)

3813 
gt_pch_nx_åì_check
 (*);

3814 
	#gt_pch_n_14c⁄°ex¥_ˇŒ
(
X
) do { \

3815 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c⁄°ex¥_ˇŒ
 (X);\

3816 } 0)

	)

3817 
gt_pch_nx_c⁄°ex¥_ˇŒ
 (*);

3818 
	#gt_pch_n_16c⁄°ex¥_fundef
(
X
) do { \

3819 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c⁄°ex¥_fundef
 (X);\

3820 } 0)

	)

3821 
gt_pch_nx_c⁄°ex¥_fundef
 (*);

3822 
	#gt_pch_n_26vec_de„ºed_ac˚ss_va_gc_
(
X
) do { \

3823 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_de„ºed_ac˚ss_va_gc_
 (X);\

3824 } 0)

	)

3825 
gt_pch_nx_vec_de„ºed_ac˚ss_va_gc_
 (*);

3826 
	#gt_pch_n_32vec_de„ºed_ac˚ss_check_va_gc_
(
X
) do { \

3827 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_de„ºed_ac˚ss_check_va_gc_
 (X);\

3828 } 0)

	)

3829 
gt_pch_nx_vec_de„ºed_ac˚ss_check_va_gc_
 (*);

3830 
	#gt_pch_n_10•ec_íåy
(
X
) do { \

3831 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_•ec_íåy
 (X);\

3832 } 0)

	)

3833 
gt_pch_nx_•ec_íåy
 (*);

3834 
	#gt_pch_n_16≥ndög_ãm∂©e
(
X
) do { \

3835 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_≥ndög_ãm∂©e
 (X);\

3836 } 0)

	)

3837 
gt_pch_nx_≥ndög_ãm∂©e
 (*);

3838 
	#gt_pch_n_25vec_öcom∂ëe_v¨_va_gc_
(
X
) do { \

3839 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_öcom∂ëe_v¨_va_gc_
 (X);\

3840 } 0)

	)

3841 
gt_pch_nx_vec_öcom∂ëe_v¨_va_gc_
 (*);

3842 
	#gt_pch_n_21«med_œbñ_u£_íåy
(
X
) do { \

3843 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_«med_œbñ_u£_íåy
 (X);\

3844 } 0)

	)

3845 
gt_pch_nx_«med_œbñ_u£_íåy
 (*);

3846 
	#gt_pch_n_22vec_åì_∑ú_s_va_gc_
(
X
) do { \

3847 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_åì_∑ú_s_va_gc_
 (X);\

3848 } 0)

	)

3849 
gt_pch_nx_vec_åì_∑ú_s_va_gc_
 (*);

3850 
	#gt_pch_n_17«med_œbñ_íåy
(
X
) do { \

3851 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_«med_œbñ_íåy
 (X);\

3852 } 0)

	)

3853 
gt_pch_nx_«med_œbñ_íåy
 (*);

3854 
	#gt_pch_n_28vec_cxx_ßved_bödög_va_gc_
(
X
) do { \

3855 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_cxx_ßved_bödög_va_gc_
 (X);\

3856 } 0)

	)

3857 
gt_pch_nx_vec_cxx_ßved_bödög_va_gc_
 (*);

3858 
	#gt_pch_n_36vec_quÆifõd_ty≥def_ußge_t_va_gc_
(
X
) do { \

3859 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_quÆifõd_ty≥def_ußge_t_va_gc_
 (X);\

3860 } 0)

	)

3861 
gt_pch_nx_vec_quÆifõd_ty≥def_ußge_t_va_gc_
 (*);

3862 
	#gt_pch_n_14˝_tokí_ˇche
(
X
) do { \

3863 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝_tokí_ˇche
 (X);\

3864 } 0)

	)

3865 
gt_pch_nx_˝_tokí_ˇche
 (*);

3866 
	#gt_pch_n_11ßved_sc›e
(
X
) do { \

3867 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ßved_sc›e
 (X);\

3868 } 0)

	)

3869 
gt_pch_nx_ßved_sc›e
 (*);

3870 
	#gt_pch_n_16cxx_öt_åì_m≠
(
X
) do { \

3871 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_cxx_öt_åì_m≠
 (X);\

3872 } 0)

	)

3873 
gt_pch_nx_cxx_öt_åì_m≠
 (*);

3874 
	#gt_pch_n_27vec_˝_œbñ_bödög_va_gc_
(
X
) do { \

3875 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_˝_œbñ_bödög_va_gc_
 (X);\

3876 } 0)

	)

3877 
gt_pch_nx_vec_˝_œbñ_bödög_va_gc_
 (*);

3878 
	#gt_pch_n_27vec_˝_˛ass_bödög_va_gc_
(
X
) do { \

3879 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_˝_˛ass_bödög_va_gc_
 (X);\

3880 } 0)

	)

3881 
gt_pch_nx_vec_˝_˛ass_bödög_va_gc_
 (*);

3882 
	#gt_pch_n_16˝_bödög_Àvñ
(
X
) do { \

3883 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝_bödög_Àvñ
 (X);\

3884 } 0)

	)

3885 
gt_pch_nx_˝_bödög_Àvñ
 (*);

3886 
	#gt_pch_n_11cxx_bödög
(
X
) do { \

3887 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_cxx_bödög
 (X);\

3888 } 0)

	)

3889 
gt_pch_nx_cxx_bödög
 (*);

3890 
	#gt_pch_n_15bödög_íåy_s
(
X
) do { \

3891 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_bödög_íåy_s
 (X);\

3892 } 0)

	)

3893 
gt_pch_nx_bödög_íåy_s
 (*);

3894 
	#gt_pch_n_15bödög_èbÀ_s
(
X
) do { \

3895 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_bödög_èbÀ_s
 (X);\

3896 } 0)

	)

3897 
gt_pch_nx_bödög_èbÀ_s
 (*);

3898 
	#gt_pch_n_11tö°_Àvñ
(
X
) do { \

3899 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_tö°_Àvñ
 (X);\

3900 } 0)

	)

3901 
gt_pch_nx_tö°_Àvñ
 (*);

3902 
	#gt_pch_n_18vec_töfo_s_va_gc_
(
X
) do { \

3903 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_töfo_s_va_gc_
 (X);\

3904 } 0)

	)

3905 
gt_pch_nx_vec_töfo_s_va_gc_
 (*);

3906 
	#gt_pch_n_8c_∑r£r
(
X
) do { \

3907 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c_∑r£r
 (X);\

3908 } 0)

	)

3909 
gt_pch_nx_c_∑r£r
 (*);

3910 
	#gt_pch_n_18vec_c_tokí_va_gc_
(
X
) do { \

3911 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_c_tokí_va_gc_
 (X);\

3912 } 0)

	)

3913 
gt_pch_nx_vec_c_tokí_va_gc_
 (*);

3914 
	#gt_pch_n_9›t_°ack
(
X
) do { \

3915 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_›t_°ack
 (X);\

3916 } 0)

	)

3917 
gt_pch_nx_›t_°ack
 (*);

3918 
	#gt_pch_n_31vec_≥ndög_ªdeföôi⁄_va_gc_
(
X
) do { \

3919 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_≥ndög_ªdeföôi⁄_va_gc_
 (X);\

3920 } 0)

	)

3921 
gt_pch_nx_vec_≥ndög_ªdeföôi⁄_va_gc_
 (*);

3922 
	#gt_pch_n_23vec_≥ndög_wók_va_gc_
(
X
) do { \

3923 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_≥ndög_wók_va_gc_
 (X);\

3924 } 0)

	)

3925 
gt_pch_nx_vec_≥ndög_wók_va_gc_
 (*);

3926 
	#gt_pch_n_11Æign_°ack
(
X
) do { \

3927 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_Æign_°ack
 (X);\

3928 } 0)

	)

3929 
gt_pch_nx_Æign_°ack
 (*);

3930 
	#gt_pch_n_22vec_åì_gc_vec_va_gc_
(
X
) do { \

3931 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_åì_gc_vec_va_gc_
 (X);\

3932 } 0)

	)

3933 
gt_pch_nx_vec_åì_gc_vec_va_gc_
 (*);

3934 
	#gt_pch_n_23vec_c⁄°_ch¨_p_va_gc_
(
X
) do { \

3935 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_c⁄°_ch¨_p_va_gc_
 (X);\

3936 } 0)

	)

3937 
gt_pch_nx_vec_c⁄°_ch¨_p_va_gc_
 (*);

3938 
	#gt_pch_n_18s‹ãd_fõlds_ty≥
(
X
) do { \

3939 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_s‹ãd_fõlds_ty≥
 (X);\

3940 } 0)

	)

3941 
gt_pch_nx_s‹ãd_fõlds_ty≥
 (*);

3942 
	#gt_pch_n_15c_ölöe_°©ic
(
X
) do { \

3943 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c_ölöe_°©ic
 (X);\

3944 } 0)

	)

3945 
gt_pch_nx_c_ölöe_°©ic
 (*);

3946 
	#gt_pch_n_28vec_c_gŸo_bödögs_p_va_gc_
(
X
) do { \

3947 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_c_gŸo_bödögs_p_va_gc_
 (X);\

3948 } 0)

	)

3949 
gt_pch_nx_vec_c_gŸo_bödögs_p_va_gc_
 (*);

3950 
	#gt_pch_n_15c_gŸo_bödögs
(
X
) do { \

3951 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c_gŸo_bödögs
 (X);\

3952 } 0)

	)

3953 
gt_pch_nx_c_gŸo_bödögs
 (*);

3954 
	#gt_pch_n_7c_sc›e
(
X
) do { \

3955 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c_sc›e
 (X);\

3956 } 0)

	)

3957 
gt_pch_nx_c_sc›e
 (*);

3958 
	#gt_pch_n_9c_bödög
(
X
) do { \

3959 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c_bödög
 (X);\

3960 } 0)

	)

3961 
gt_pch_nx_c_bödög
 (*);

3962 
	#gt_pch_n_12c_œbñ_v¨s
(
X
) do { \

3963 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c_œbñ_v¨s
 (X);\

3964 } 0)

	)

3965 
gt_pch_nx_c_œbñ_v¨s
 (*);

3966 
	#gt_pch_n_13∑d_ty≥_hash
(
X
) do { \

3967 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_∑d_ty≥_hash
 (X);\

3968 } 0)

	)

3969 
gt_pch_nx_∑d_ty≥_hash
 (*);

3970 
	#gt_pch_n_18g«t_bödög_Àvñ
(
X
) do { \

3971 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_g«t_bödög_Àvñ
 (X);\

3972 } 0)

	)

3973 
gt_pch_nx_g«t_bödög_Àvñ
 (*);

3974 
	#gt_pch_n_20vec_lo›_öfo_va_gc_
(
X
) do { \

3975 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_lo›_öfo_va_gc_
 (X);\

3976 } 0)

	)

3977 
gt_pch_nx_vec_lo›_öfo_va_gc_
 (*);

3978 
	#gt_pch_n_11lo›_öfo_d
(
X
) do { \

3979 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_lo›_öfo_d
 (X);\

3980 } 0)

	)

3981 
gt_pch_nx_lo›_öfo_d
 (*);

3982 
	#gt_pch_n_27vec_ønge_check_öfo_va_gc_
(
X
) do { \

3983 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ønge_check_öfo_va_gc_
 (X);\

3984 } 0)

	)

3985 
gt_pch_nx_vec_ønge_check_öfo_va_gc_
 (*);

3986 
	#gt_pch_n_18ønge_check_öfo_d
(
X
) do { \

3987 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ønge_check_öfo_d
 (X);\

3988 } 0)

	)

3989 
gt_pch_nx_ønge_check_öfo_d
 (*);

3990 
	#gt_pch_n_9ñab_öfo
(
X
) do { \

3991 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ñab_öfo
 (X);\

3992 } 0)

	)

3993 
gt_pch_nx_ñab_öfo
 (*);

3994 
	#gt_pch_n_10°mt_group
(
X
) do { \

3995 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_°mt_group
 (X);\

3996 } 0)

	)

3997 
gt_pch_nx_°mt_group
 (*);

3998 
	#gt_pch_n_20vec_∑rm_©å_va_gc_
(
X
) do { \

3999 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_∑rm_©å_va_gc_
 (X);\

4000 } 0)

	)

4001 
gt_pch_nx_vec_∑rm_©å_va_gc_
 (*);

4002 
	#gt_pch_n_11∑rm_©å_d
(
X
) do { \

4003 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_∑rm_©å_d
 (X);\

4004 } 0)

	)

4005 
gt_pch_nx_∑rm_©å_d
 (*);

4006 
	#gt_pch_n_19vec_odr_ty≥_va_gc_
(
X
) do { \

4007 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_odr_ty≥_va_gc_
 (X);\

4008 } 0)

	)

4009 
gt_pch_nx_vec_odr_ty≥_va_gc_
 (*);

4010 
	#gt_pch_n_13åì_ty≥_m≠
(
X
) do { \

4011 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_ty≥_m≠
 (X);\

4012 } 0)

	)

4013 
gt_pch_nx_åì_ty≥_m≠
 (*);

4014 
	#gt_pch_n_27vec_ölöe_summ¨y_t_va_gc_
(
X
) do { \

4015 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ölöe_summ¨y_t_va_gc_
 (X);\

4016 } 0)

	)

4017 
gt_pch_nx_vec_ölöe_summ¨y_t_va_gc_
 (*);

4018 
	#gt_pch_n_26vec_size_time_íåy_va_gc_
(
X
) do { \

4019 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_size_time_íåy_va_gc_
 (X);\

4020 } 0)

	)

4021 
gt_pch_nx_vec_size_time_íåy_va_gc_
 (*);

4022 
	#gt_pch_n_20vec_c⁄dôi⁄_va_gc_
(
X
) do { \

4023 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_c⁄dôi⁄_va_gc_
 (X);\

4024 } 0)

	)

4025 
gt_pch_nx_vec_c⁄dôi⁄_va_gc_
 (*);

4026 
	#gt_pch_n_17…o_ö_de˛_°©e
(
X
) do { \

4027 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_…o_ö_de˛_°©e
 (X);\

4028 } 0)

	)

4029 
gt_pch_nx_…o_ö_de˛_°©e
 (*);

4030 
	#gt_pch_n_24vec_ùa_edge_¨gs_va_gc_
(
X
) do { \

4031 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ùa_edge_¨gs_va_gc_
 (X);\

4032 } 0)

	)

4033 
gt_pch_nx_vec_ùa_edge_¨gs_va_gc_
 (*);

4034 
	#gt_pch_n_38vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
(
X
) do { \

4035 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
 (X);\

4036 } 0)

	)

4037 
gt_pch_nx_vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_
 (*);

4038 
	#gt_pch_n_24vec_ùa_jump_func_va_gc_
(
X
) do { \

4039 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ùa_jump_func_va_gc_
 (X);\

4040 } 0)

	)

4041 
gt_pch_nx_vec_ùa_jump_func_va_gc_
 (*);

4042 
	#gt_pch_n_26vec_ùa_agg_jf_ôem_va_gc_
(
X
) do { \

4043 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ùa_agg_jf_ôem_va_gc_
 (X);\

4044 } 0)

	)

4045 
gt_pch_nx_vec_ùa_agg_jf_ôem_va_gc_
 (*);

4046 
	#gt_pch_n_20sß_›î™d_mem‹y_d
(
X
) do { \

4047 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_sß_›î™d_mem‹y_d
 (X);\

4048 } 0)

	)

4049 
gt_pch_nx_sß_›î™d_mem‹y_d
 (*);

4050 
	#gt_pch_n_13s˚v_öfo_°r
(
X
) do { \

4051 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_s˚v_öfo_°r
 (X);\

4052 } 0)

	)

4053 
gt_pch_nx_s˚v_öfo_°r
 (*);

4054 
	#gt_pch_n_28vec_mem_addr_ãm∂©e_va_gc_
(
X
) do { \

4055 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_mem_addr_ãm∂©e_va_gc_
 (X);\

4056 } 0)

	)

4057 
gt_pch_nx_vec_mem_addr_ãm∂©e_va_gc_
 (*);

4058 
	#gt_pch_n_17vec_gim∂e_va_gc_
(
X
) do { \

4059 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_gim∂e_va_gc_
 (X);\

4060 } 0)

	)

4061 
gt_pch_nx_vec_gim∂e_va_gc_
 (*);

4062 
	#gt_pch_n_15tm_ª°¨t_node
(
X
) do { \

4063 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_tm_ª°¨t_node
 (X);\

4064 } 0)

	)

4065 
gt_pch_nx_tm_ª°¨t_node
 (*);

4066 
	#gt_pch_n_9ty≥_hash
(
X
) do { \

4067 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ty≥_hash
 (X);\

4068 } 0)

	)

4069 
gt_pch_nx_ty≥_hash
 (*);

4070 
	#gt_pch_n_16°rög_poﬁ_d©a
(
X
) do { \

4071 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_°rög_poﬁ_d©a
 (X);\

4072 } 0)

	)

4073 
gt_pch_nx_°rög_poﬁ_d©a
 (*);

4074 
	#gt_pch_n_23ãmp_¶Ÿ_addªss_íåy
(
X
) do { \

4075 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ãmp_¶Ÿ_addªss_íåy
 (X);\

4076 } 0)

	)

4077 
gt_pch_nx_ãmp_¶Ÿ_addªss_íåy
 (*);

4078 
	#gt_pch_n_15throw_°mt_node
(
X
) do { \

4079 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_throw_°mt_node
 (X);\

4080 } 0)

	)

4081 
gt_pch_nx_throw_°mt_node
 (*);

4082 
	#gt_pch_n_25vec_eh_œndög_∑d_va_gc_
(
X
) do { \

4083 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_eh_œndög_∑d_va_gc_
 (X);\

4084 } 0)

	)

4085 
gt_pch_nx_vec_eh_œndög_∑d_va_gc_
 (*);

4086 
	#gt_pch_n_20vec_eh_ªgi⁄_va_gc_
(
X
) do { \

4087 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_eh_ªgi⁄_va_gc_
 (X);\

4088 } 0)

	)

4089 
gt_pch_nx_vec_eh_ªgi⁄_va_gc_
 (*);

4090 
	#gt_pch_n_10eh_ˇtch_d
(
X
) do { \

4091 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_eh_ˇtch_d
 (X);\

4092 } 0)

	)

4093 
gt_pch_nx_eh_ˇtch_d
 (*);

4094 
	#gt_pch_n_16eh_œndög_∑d_d
(
X
) do { \

4095 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_eh_œndög_∑d_d
 (X);\

4096 } 0)

	)

4097 
gt_pch_nx_eh_œndög_∑d_d
 (*);

4098 
	#gt_pch_n_13poöãr_m≠_t
(
X
) do { \

4099 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_poöãr_m≠_t
 (X);\

4100 } 0)

	)

4101 
gt_pch_nx_poöãr_m≠_t
 (*);

4102 
	#gt_pch_n_11eh_ªgi⁄_d
(
X
) do { \

4103 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_eh_ªgi⁄_d
 (X);\

4104 } 0)

	)

4105 
gt_pch_nx_eh_ªgi⁄_d
 (*);

4106 
	#gt_pch_n_24vec_dõ_¨g_íåy_va_gc_
(
X
) do { \

4107 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_dõ_¨g_íåy_va_gc_
 (X);\

4108 } 0)

	)

4109 
gt_pch_nx_vec_dõ_¨g_íåy_va_gc_
 (*);

4110 
	#gt_pch_n_24vec_macöfo_íåy_va_gc_
(
X
) do { \

4111 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_macöfo_íåy_va_gc_
 (X);\

4112 } 0)

	)

4113 
gt_pch_nx_vec_macöfo_íåy_va_gc_
 (*);

4114 
	#gt_pch_n_24vec_pub«me_íåy_va_gc_
(
X
) do { \

4115 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_pub«me_íåy_va_gc_
 (X);\

4116 } 0)

	)

4117 
gt_pch_nx_vec_pub«me_íåy_va_gc_
 (*);

4118 
	#gt_pch_n_31vec_dw_löe_öfo_èbÀ_p_va_gc_
(
X
) do { \

4119 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_dw_löe_öfo_èbÀ_p_va_gc_
 (X);\

4120 } 0)

	)

4121 
gt_pch_nx_vec_dw_löe_öfo_èbÀ_p_va_gc_
 (*);

4122 
	#gt_pch_n_22ˇched_dw_loc_li°_def
(
X
) do { \

4123 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ˇched_dw_loc_li°_def
 (X);\

4124 } 0)

	)

4125 
gt_pch_nx_ˇched_dw_loc_li°_def
 (*);

4126 
	#gt_pch_n_17ˇŒ_¨g_loc_node
(
X
) do { \

4127 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ˇŒ_¨g_loc_node
 (X);\

4128 } 0)

	)

4129 
gt_pch_nx_ˇŒ_¨g_loc_node
 (*);

4130 
	#gt_pch_n_16v¨_loc_li°_def
(
X
) do { \

4131 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_v¨_loc_li°_def
 (X);\

4132 } 0)

	)

4133 
gt_pch_nx_v¨_loc_li°_def
 (*);

4134 
	#gt_pch_n_12v¨_loc_node
(
X
) do { \

4135 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_v¨_loc_node
 (X);\

4136 } 0)

	)

4137 
gt_pch_nx_v¨_loc_node
 (*);

4138 
	#gt_pch_n_16limbo_dõ_°ru˘
(
X
) do { \

4139 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_limbo_dõ_°ru˘
 (X);\

4140 } 0)

	)

4141 
gt_pch_nx_limbo_dõ_°ru˘
 (*);

4142 
	#gt_pch_n_23vec_dw_©å_node_va_gc_
(
X
) do { \

4143 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_dw_©å_node_va_gc_
 (X);\

4144 } 0)

	)

4145 
gt_pch_nx_vec_dw_©å_node_va_gc_
 (*);

4146 
	#gt_pch_n_25dw_löe_öfo_èbÀ_°ru˘
(
X
) do { \

4147 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_löe_öfo_èbÀ_°ru˘
 (X);\

4148 } 0)

	)

4149 
gt_pch_nx_dw_löe_öfo_èbÀ_°ru˘
 (*);

4150 
	#gt_pch_n_29vec_dw_löe_öfo_íåy_va_gc_
(
X
) do { \

4151 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_dw_löe_öfo_íåy_va_gc_
 (X);\

4152 } 0)

	)

4153 
gt_pch_nx_vec_dw_löe_öfo_íåy_va_gc_
 (*);

4154 
	#gt_pch_n_18comd©_ty≥_°ru˘
(
X
) do { \

4155 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_comd©_ty≥_°ru˘
 (X);\

4156 } 0)

	)

4157 
gt_pch_nx_comd©_ty≥_°ru˘
 (*);

4158 
	#gt_pch_n_25dw_ønges_by_œbñ_°ru˘
(
X
) do { \

4159 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_ønges_by_œbñ_°ru˘
 (X);\

4160 } 0)

	)

4161 
gt_pch_nx_dw_ønges_by_œbñ_°ru˘
 (*);

4162 
	#gt_pch_n_16dw_ønges_°ru˘
(
X
) do { \

4163 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_ønges_°ru˘
 (X);\

4164 } 0)

	)

4165 
gt_pch_nx_dw_ønges_°ru˘
 (*);

4166 
	#gt_pch_n_29vec_de„ºed_loˇti⁄s_va_gc_
(
X
) do { \

4167 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_de„ºed_loˇti⁄s_va_gc_
 (X);\

4168 } 0)

	)

4169 
gt_pch_nx_vec_de„ºed_loˇti⁄s_va_gc_
 (*);

4170 
	#gt_pch_n_21vec_dw_fde_ªf_va_gc_
(
X
) do { \

4171 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_dw_fde_ªf_va_gc_
 (X);\

4172 } 0)

	)

4173 
gt_pch_nx_vec_dw_fde_ªf_va_gc_
 (*);

4174 
	#gt_pch_n_24ªg_ßved_ö_d©a_°ru˘
(
X
) do { \

4175 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ªg_ßved_ö_d©a_°ru˘
 (X);\

4176 } 0)

	)

4177 
gt_pch_nx_ªg_ßved_ö_d©a_°ru˘
 (*);

4178 
	#gt_pch_n_17dw_cfi_row_°ru˘
(
X
) do { \

4179 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_cfi_row_°ru˘
 (X);\

4180 } 0)

	)

4181 
gt_pch_nx_dw_cfi_row_°ru˘
 (*);

4182 
	#gt_pch_n_15dw¨f_fûe_d©a
(
X
) do { \

4183 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw¨f_fûe_d©a
 (X);\

4184 } 0)

	)

4185 
gt_pch_nx_dw¨f_fûe_d©a
 (*);

4186 
	#gt_pch_n_20ödúe˘_°rög_node
(
X
) do { \

4187 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ödúe˘_°rög_node
 (X);\

4188 } 0)

	)

4189 
gt_pch_nx_ödúe˘_°rög_node
 (*);

4190 
	#gt_pch_n_23addr_èbÀ_íåy_°ru˘
(
X
) do { \

4191 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_addr_èbÀ_íåy_°ru˘
 (X);\

4192 } 0)

	)

4193 
gt_pch_nx_addr_èbÀ_íåy_°ru˘
 (*);

4194 
	#gt_pch_n_21vec_dw_cfi_ªf_va_gc_
(
X
) do { \

4195 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_dw_cfi_ªf_va_gc_
 (X);\

4196 } 0)

	)

4197 
gt_pch_nx_vec_dw_cfi_ªf_va_gc_
 (*);

4198 
	#gt_pch_n_18dw_loc_li°_°ru˘
(
X
) do { \

4199 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_loc_li°_°ru˘
 (X);\

4200 } 0)

	)

4201 
gt_pch_nx_dw_loc_li°_°ru˘
 (*);

4202 
	#gt_pch_n_17dw_loc_des¸_node
(
X
) do { \

4203 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_loc_des¸_node
 (X);\

4204 } 0)

	)

4205 
gt_pch_nx_dw_loc_des¸_node
 (*);

4206 
	#gt_pch_n_11dw_cfi_node
(
X
) do { \

4207 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_cfi_node
 (X);\

4208 } 0)

	)

4209 
gt_pch_nx_dw_cfi_node
 (*);

4210 
	#gt_pch_n_8ty≥öfo
(
X
) do { \

4211 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ty≥öfo
 (X);\

4212 } 0)

	)

4213 
gt_pch_nx_ty≥öfo
 (*);

4214 
	#gt_pch_n_10odr_ty≥_d
(
X
) do { \

4215 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_odr_ty≥_d
 (X);\

4216 } 0)

	)

4217 
gt_pch_nx_odr_ty≥_d
 (*);

4218 
	#gt_pch_n_25ùa_agg_ª∂a˚mít_vÆue
(
X
) do { \

4219 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ùa_agg_ª∂a˚mít_vÆue
 (X);\

4220 } 0)

	)

4221 
gt_pch_nx_ùa_agg_ª∂a˚mít_vÆue
 (*);

4222 
	#gt_pch_n_26vec_Æüs_£t_íåy_va_gc_
(
X
) do { \

4223 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_Æüs_£t_íåy_va_gc_
 (X);\

4224 } 0)

	)

4225 
gt_pch_nx_vec_Æüs_£t_íåy_va_gc_
 (*);

4226 
	#gt_pch_n_17Æüs_£t_íåy_d
(
X
) do { \

4227 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_Æüs_£t_íåy_d
 (X);\

4228 } 0)

	)

4229 
gt_pch_nx_Æüs_£t_íåy_d
 (*);

4230 
	#gt_pch_n_24c⁄°™t_des¸ùt‹_åì
(
X
) do { \

4231 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c⁄°™t_des¸ùt‹_åì
 (X);\

4232 } 0)

	)

4233 
gt_pch_nx_c⁄°™t_des¸ùt‹_åì
 (*);

4234 
	#gt_pch_n_8asm_node
(
X
) do { \

4235 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_asm_node
 (X);\

4236 } 0)

	)

4237 
gt_pch_nx_asm_node
 (*);

4238 
	#gt_pch_n_25cgøph_ödúe˘_ˇŒ_öfo
(
X
) do { \

4239 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_cgøph_ödúe˘_ˇŒ_öfo
 (X);\

4240 } 0)

	)

4241 
gt_pch_nx_cgøph_ödúe˘_ˇŒ_öfo
 (*);

4242 
	#gt_pch_n_28cgøph_fun˘i⁄_vîsi⁄_öfo
(
X
) do { \

4243 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_cgøph_fun˘i⁄_vîsi⁄_öfo
 (X);\

4244 } 0)

	)

4245 
gt_pch_nx_cgøph_fun˘i⁄_vîsi⁄_öfo
 (*);

4246 
	#gt_pch_n_11cgøph_edge
(
X
) do { \

4247 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_cgøph_edge
 (X);\

4248 } 0)

	)

4249 
gt_pch_nx_cgøph_edge
 (*);

4250 
	#gt_pch_n_17cgøph_simd_˛⁄e
(
X
) do { \

4251 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_cgøph_simd_˛⁄e
 (X);\

4252 } 0)

	)

4253 
gt_pch_nx_cgøph_simd_˛⁄e
 (*);

4254 
	#gt_pch_n_28vec_ùa_ª∂a˚_m≠_p_va_gc_
(
X
) do { \

4255 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ùa_ª∂a˚_m≠_p_va_gc_
 (X);\

4256 } 0)

	)

4257 
gt_pch_nx_vec_ùa_ª∂a˚_m≠_p_va_gc_
 (*);

4258 
	#gt_pch_n_15ùa_ª∂a˚_m≠
(
X
) do { \

4259 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ùa_ª∂a˚_m≠
 (X);\

4260 } 0)

	)

4261 
gt_pch_nx_ùa_ª∂a˚_m≠
 (*);

4262 
	#gt_pch_n_18…o_fûe_de˛_d©a
(
X
) do { \

4263 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_…o_fûe_de˛_d©a
 (X);\

4264 } 0)

	)

4265 
gt_pch_nx_…o_fûe_de˛_d©a
 (*);

4266 
	#gt_pch_n_20vec_ùa_ªf_t_va_gc_
(
X
) do { \

4267 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ùa_ªf_t_va_gc_
 (X);\

4268 } 0)

	)

4269 
gt_pch_nx_vec_ùa_ªf_t_va_gc_
 (*);

4270 
	#gt_pch_n_11symèb_node
(
X
) do { \

4271 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_symèb_node
 (X);\

4272 } 0)

	)

4273 
gt_pch_nx_symèb_node
 (*);

4274 
	#gt_pch_n_22vec_basic_block_va_gc_
(
X
) do { \

4275 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_basic_block_va_gc_
 (X);\

4276 } 0)

	)

4277 
gt_pch_nx_vec_basic_block_va_gc_
 (*);

4278 
	#gt_pch_n_15vec_edge_va_gc_
(
X
) do { \

4279 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_edge_va_gc_
 (X);\

4280 } 0)

	)

4281 
gt_pch_nx_vec_edge_va_gc_
 (*);

4282 
	#gt_pch_n_11πl_bb_öfo
(
X
) do { \

4283 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_πl_bb_öfo
 (X);\

4284 } 0)

	)

4285 
gt_pch_nx_πl_bb_öfo
 (*);

4286 
	#gt_pch_n_10nôî_desc
(
X
) do { \

4287 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_nôî_desc
 (X);\

4288 } 0)

	)

4289 
gt_pch_nx_nôî_desc
 (*);

4290 
	#gt_pch_n_17vec_lo›_p_va_gc_
(
X
) do { \

4291 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_lo›_p_va_gc_
 (X);\

4292 } 0)

	)

4293 
gt_pch_nx_vec_lo›_p_va_gc_
 (*);

4294 
	#gt_pch_n_4lo›
(
X
) do { \

4295 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_lo›
 (X);\

4296 } 0)

	)

4297 
gt_pch_nx_lo›
 (*);

4298 
	#gt_pch_n_9lo›_exô
(
X
) do { \

4299 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_lo›_exô
 (X);\

4300 } 0)

	)

4301 
gt_pch_nx_lo›_exô
 (*);

4302 
	#gt_pch_n_13nb_ôî_bound
(
X
) do { \

4303 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_nb_ôî_bound
 (X);\

4304 } 0)

	)

4305 
gt_pch_nx_nb_ôî_bound
 (*);

4306 
	#gt_pch_n_24ty≥s_u£d_by_v¨s_íåy
(
X
) do { \

4307 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ty≥s_u£d_by_v¨s_íåy
 (X);\

4308 } 0)

	)

4309 
gt_pch_nx_ty≥s_u£d_by_v¨s_íåy
 (*);

4310 
	#gt_pch_n_17œnguage_fun˘i⁄
(
X
) do { \

4311 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_œnguage_fun˘i⁄
 (X);\

4312 } 0)

	)

4313 
gt_pch_nx_œnguage_fun˘i⁄
 (*);

4314 
	#gt_pch_n_5lo›s
(
X
) do { \

4315 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_lo›s
 (X);\

4316 } 0)

	)

4317 
gt_pch_nx_lo›s
 (*);

4318 
	#gt_pch_n_18c⁄åﬁ_Êow_gøph
(
X
) do { \

4319 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c⁄åﬁ_Êow_gøph
 (X);\

4320 } 0)

	)

4321 
gt_pch_nx_c⁄åﬁ_Êow_gøph
 (*);

4322 
	#gt_pch_n_9eh_°©us
(
X
) do { \

4323 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_eh_°©us
 (X);\

4324 } 0)

	)

4325 
gt_pch_nx_eh_°©us
 (*);

4326 
	#gt_pch_n_11°ack_ußge
(
X
) do { \

4327 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_°ack_ußge
 (X);\

4328 } 0)

	)

4329 
gt_pch_nx_°ack_ußge
 (*);

4330 
	#gt_pch_n_22vec_ãmp_¶Ÿ_p_va_gc_
(
X
) do { \

4331 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ãmp_¶Ÿ_p_va_gc_
 (X);\

4332 } 0)

	)

4333 
gt_pch_nx_vec_ãmp_¶Ÿ_p_va_gc_
 (*);

4334 
	#gt_pch_n_20öôül_vÆue_°ru˘
(
X
) do { \

4335 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_öôül_vÆue_°ru˘
 (X);\

4336 } 0)

	)

4337 
gt_pch_nx_öôül_vÆue_°ru˘
 (*);

4338 
	#gt_pch_n_11‰ame_•a˚
(
X
) do { \

4339 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_‰ame_•a˚
 (X);\

4340 } 0)

	)

4341 
gt_pch_nx_‰ame_•a˚
 (*);

4342 
	#gt_pch_n_17πx_c⁄°™t_poﬁ
(
X
) do { \

4343 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_πx_c⁄°™t_poﬁ
 (X);\

4344 } 0)

	)

4345 
gt_pch_nx_πx_c⁄°™t_poﬁ
 (*);

4346 
	#gt_pch_n_11dw_fde_node
(
X
) do { \

4347 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dw_fde_node
 (X);\

4348 } 0)

	)

4349 
gt_pch_nx_dw_fde_node
 (*);

4350 
	#gt_pch_n_9ãmp_¶Ÿ
(
X
) do { \

4351 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ãmp_¶Ÿ
 (X);\

4352 } 0)

	)

4353 
gt_pch_nx_ãmp_¶Ÿ
 (*);

4354 
	#gt_pch_n_9gim∂e_df
(
X
) do { \

4355 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_gim∂e_df
 (X);\

4356 } 0)

	)

4357 
gt_pch_nx_gim∂e_df
 (*);

4358 
	#gt_pch_n_27vec_ˇŒ_sôe_ªc‹d_va_gc_
(
X
) do { \

4359 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_ˇŒ_sôe_ªc‹d_va_gc_
 (X);\

4360 } 0)

	)

4361 
gt_pch_nx_vec_ˇŒ_sôe_ªc‹d_va_gc_
 (*);

4362 
	#gt_pch_n_16vec_uch¨_va_gc_
(
X
) do { \

4363 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_uch¨_va_gc_
 (X);\

4364 } 0)

	)

4365 
gt_pch_nx_vec_uch¨_va_gc_
 (*);

4366 
	#gt_pch_n_18ˇŒ_sôe_ªc‹d_d
(
X
) do { \

4367 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ˇŒ_sôe_ªc‹d_d
 (X);\

4368 } 0)

	)

4369 
gt_pch_nx_ˇŒ_sôe_ªc‹d_d
 (*);

4370 
	#gt_pch_n_14£quí˚_°ack
(
X
) do { \

4371 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_£quí˚_°ack
 (X);\

4372 } 0)

	)

4373 
gt_pch_nx_£quí˚_°ack
 (*);

4374 
	#gt_pch_n_15èrgë_libfuncs
(
X
) do { \

4375 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_èrgë_libfuncs
 (X);\

4376 } 0)

	)

4377 
gt_pch_nx_èrgë_libfuncs
 (*);

4378 
	#gt_pch_n_13libfunc_íåy
(
X
) do { \

4379 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_libfunc_íåy
 (X);\

4380 } 0)

	)

4381 
gt_pch_nx_libfunc_íåy
 (*);

4382 
	#gt_pch_n_21vec_Æüs_∑ú_va_gc_
(
X
) do { \

4383 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_Æüs_∑ú_va_gc_
 (X);\

4384 } 0)

	)

4385 
gt_pch_nx_vec_Æüs_∑ú_va_gc_
 (*);

4386 
	#gt_pch_n_12åì_vec_m≠
(
X
) do { \

4387 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_vec_m≠
 (X);\

4388 } 0)

	)

4389 
gt_pch_nx_åì_vec_m≠
 (*);

4390 
	#gt_pch_n_17åì_¥i‹ôy_m≠
(
X
) do { \

4391 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_¥i‹ôy_m≠
 (X);\

4392 } 0)

	)

4393 
gt_pch_nx_åì_¥i‹ôy_m≠
 (*);

4394 
	#gt_pch_n_12åì_öt_m≠
(
X
) do { \

4395 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_öt_m≠
 (X);\

4396 } 0)

	)

4397 
gt_pch_nx_åì_öt_m≠
 (*);

4398 
	#gt_pch_n_13åì_de˛_m≠
(
X
) do { \

4399 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_de˛_m≠
 (X);\

4400 } 0)

	)

4401 
gt_pch_nx_åì_de˛_m≠
 (*);

4402 
	#gt_pch_n_8åì_m≠
(
X
) do { \

4403 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_m≠
 (X);\

4404 } 0)

	)

4405 
gt_pch_nx_åì_m≠
 (*);

4406 
	#gt_pch_n_14œng_åì_node
(
X
) do { \

4407 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_œng_åì_node
 (X);\

4408 } 0)

	)

4409 
gt_pch_nx_œng_åì_node
 (*);

4410 
	#gt_pch_n_14èrgë_globÆs
(
X
) do { \

4411 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_èrgë_globÆs
 (X);\

4412 } 0)

	)

4413 
gt_pch_nx_èrgë_globÆs
 (*);

4414 
	#gt_pch_n_24åì_°©emít_li°_node
(
X
) do { \

4415 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_°©emít_li°_node
 (X);\

4416 } 0)

	)

4417 
gt_pch_nx_åì_°©emít_li°_node
 (*);

4418 
	#gt_pch_n_9œng_de˛
(
X
) do { \

4419 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_œng_de˛
 (X);\

4420 } 0)

	)

4421 
gt_pch_nx_œng_de˛
 (*);

4422 
	#gt_pch_n_9œng_ty≥
(
X
) do { \

4423 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_œng_ty≥
 (X);\

4424 } 0)

	)

4425 
gt_pch_nx_œng_ty≥
 (*);

4426 
	#gt_pch_n_15vec_åì_va_gc_
(
X
) do { \

4427 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_åì_va_gc_
 (X);\

4428 } 0)

	)

4429 
gt_pch_nx_vec_åì_va_gc_
 (*);

4430 
	#gt_pch_n_26vec_c⁄°ru˘‹_ñt_va_gc_
(
X
) do { \

4431 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_c⁄°ru˘‹_ñt_va_gc_
 (X);\

4432 } 0)

	)

4433 
gt_pch_nx_vec_c⁄°ru˘‹_ñt_va_gc_
 (*);

4434 
	#gt_pch_n_10dõ_°ru˘
(
X
) do { \

4435 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_dõ_°ru˘
 (X);\

4436 } 0)

	)

4437 
gt_pch_nx_dõ_°ru˘
 (*);

4438 
	#gt_pch_n_14ønge_öfo_def
(
X
) do { \

4439 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ønge_öfo_def
 (X);\

4440 } 0)

	)

4441 
gt_pch_nx_ønge_öfo_def
 (*);

4442 
	#gt_pch_n_12±r_öfo_def
(
X
) do { \

4443 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_±r_öfo_def
 (X);\

4444 } 0)

	)

4445 
gt_pch_nx_±r_öfo_def
 (*);

4446 
	#gt_pch_n_10èrgë_πl
(
X
) do { \

4447 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_èrgë_πl
 (X);\

4448 } 0)

	)

4449 
gt_pch_nx_èrgë_πl
 (*);

4450 
	#gt_pch_n_8fun˘i⁄
(
X
) do { \

4451 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_fun˘i⁄
 (X);\

4452 } 0)

	)

4453 
gt_pch_nx_fun˘i⁄
 (*);

4454 
	#gt_pch_n_23c⁄°™t_des¸ùt‹_πx
(
X
) do { \

4455 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_c⁄°™t_des¸ùt‹_πx
 (X);\

4456 } 0)

	)

4457 
gt_pch_nx_c⁄°™t_des¸ùt‹_πx
 (*);

4458 
	#gt_pch_n_11fixed_vÆue
(
X
) do { \

4459 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_fixed_vÆue
 (X);\

4460 } 0)

	)

4461 
gt_pch_nx_fixed_vÆue
 (*);

4462 
	#gt_pch_n_10ªÆ_vÆue
(
X
) do { \

4463 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ªÆ_vÆue
 (X);\

4464 } 0)

	)

4465 
gt_pch_nx_ªÆ_vÆue
 (*);

4466 
	#gt_pch_n_14vec_πx_va_gc_
(
X
) do { \

4467 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_vec_πx_va_gc_
 (X);\

4468 } 0)

	)

4469 
gt_pch_nx_vec_πx_va_gc_
 (*);

4470 
	#gt_pch_n_12obje˘_block
(
X
) do { \

4471 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_obje˘_block
 (X);\

4472 } 0)

	)

4473 
gt_pch_nx_obje˘_block
 (*);

4474 
	#gt_pch_n_9ªg_©ås
(
X
) do { \

4475 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_ªg_©ås
 (X);\

4476 } 0)

	)

4477 
gt_pch_nx_ªg_©ås
 (*);

4478 
	#gt_pch_n_9mem_©ås
(
X
) do { \

4479 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_mem_©ås
 (X);\

4480 } 0)

	)

4481 
gt_pch_nx_mem_©ås
 (*);

4482 
	#gt_pch_n_13covîage_d©a
(
X
) do { \

4483 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_covîage_d©a
 (X);\

4484 } 0)

	)

4485 
gt_pch_nx_covîage_d©a
 (*);

4486 
	#gt_pch_n_14bôm≠_ob°ack
(
X
) do { \

4487 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_bôm≠_ob°ack
 (X);\

4488 } 0)

	)

4489 
gt_pch_nx_bôm≠_ob°ack
 (*);

4490 
	#gt_pch_n_14bôm≠_ñemít
(
X
) do { \

4491 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_bôm≠_ñemít
 (X);\

4492 } 0)

	)

4493 
gt_pch_nx_bôm≠_ñemít
 (*);

4494 
	#gt_pch_n_16machöe_fun˘i⁄
(
X
) do { \

4495 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_machöe_fun˘i⁄
 (X);\

4496 } 0)

	)

4497 
gt_pch_nx_machöe_fun˘i⁄
 (*);

4498 
	#gt_pch_n_15basic_block_def
(
X
) do { \

4499 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_basic_block_def
 (X);\

4500 } 0)

	)

4501 
gt_pch_nx_basic_block_def
 (*);

4502 
	#gt_pch_n_8edge_def
(
X
) do { \

4503 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_edge_def
 (X);\

4504 } 0)

	)

4505 
gt_pch_nx_edge_def
 (*);

4506 
	#gt_pch_n_7£˘i⁄
(
X
) do { \

4507 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_£˘i⁄
 (X);\

4508 } 0)

	)

4509 
gt_pch_nx_£˘i⁄
 (*);

4510 
	#gt_pch_n_21gim∂e_°©emít_ba£
(
X
) do { \

4511 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_gim∂e_°©emít_ba£
 (X);\

4512 } 0)

	)

4513 
gt_pch_nx_gim∂e_°©emít_ba£
 (*);

4514 
	#gt_pch_n_9πvec_def
(
X
) do { \

4515 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_πvec_def
 (X);\

4516 } 0)

	)

4517 
gt_pch_nx_πvec_def
 (*);

4518 
	#gt_pch_n_7πx_def
(
X
) do { \

4519 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_πx_def
 (X);\

4520 } 0)

	)

4521 
gt_pch_nx_πx_def
 (*);

4522 
	#gt_pch_n_11bôm≠_hód
(
X
) do { \

4523 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_bôm≠_hód
 (X);\

4524 } 0)

	)

4525 
gt_pch_nx_bôm≠_hód
 (*);

4526 
	#gt_pch_n_6™swî
(
X
) do { \

4527 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_™swî
 (X);\

4528 } 0)

	)

4529 
gt_pch_nx_™swî
 (*);

4530 
	#gt_pch_n_9˝p_ma¸o
(
X
) do { \

4531 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝p_ma¸o
 (X);\

4532 } 0)

	)

4533 
gt_pch_nx_˝p_ma¸o
 (*);

4534 
	#gt_pch_n_9˝p_tokí
(
X
) do { \

4535 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_˝p_tokí
 (X);\

4536 } 0)

	)

4537 
gt_pch_nx_˝p_tokí
 (*);

4538 
	#gt_pch_n_9löe_m≠s
(
X
) do { \

4539 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_löe_m≠s
 (X);\

4540 } 0)

	)

4541 
gt_pch_nx_löe_m≠s
 (*);

4542 
	#gt_pch_n_9åì_node
(
X
) do { \

4543 i‡(
X
 !
NULL
Ë
	`gt_pch_nx_åì_node
 (X);\

4544 } 0)

	)

4545 
	#gt_pch_nx_åì_node
 
gt_pch_nx_œng_åì_node


	)

4546 
gt_pch_n_II17•œy_åì_node_s
 (*);

4547 
gt_pch_n_SP9åì_node17•œy_åì_node_s
 (*);

4548 
gt_pch_n_P9åì_nodeP9åì_node17•œy_åì_node_s
 (*);

4549 
gt_pch_n_P17°rög_des¸ùt‹4hèb
 (*);

4550 
gt_pch_n_P14ty≥_as£πi⁄4hèb
 (*);

4551 
gt_pch_n_P18åìåìhash_íåy4hèb
 (*);

4552 
gt_pch_n_P17moduÀ_hèb_íåy4hèb
 (*);

4553 
gt_pch_n_P21≥ndög_ab°ø˘_ty≥4hèb
 (*);

4554 
gt_pch_n_P14c⁄°ex¥_ˇŒ4hèb
 (*);

4555 
gt_pch_n_P16c⁄°ex¥_fundef4hèb
 (*);

4556 
gt_pch_n_P10•ec_íåy4hèb
 (*);

4557 
gt_pch_n_P16cxx_öt_åì_m≠4hèb
 (*);

4558 
gt_pch_n_P17«med_œbñ_íåy4hèb
 (*);

4559 
gt_pch_n_P13∑d_ty≥_hash4hèb
 (*);

4560 
gt_pch_n_P12åì_öt_m≠4hèb
 (*);

4561 
gt_pch_n_P13åì_ty≥_m≠4hèb
 (*);

4562 
gt_pch_n_P17…o_ö_de˛_°©e4hèb
 (*);

4563 
gt_pch_n_P9åì_nodeP9åì_node12•œy_åì_s
 (*);

4564 
gt_pch_n_P13s˚v_öfo_°r4hèb
 (*);

4565 
gt_pch_n_P15tm_ª°¨t_node4hèb
 (*);

4566 
gt_pch_n_P8åì_m≠4hèb
 (*);

4567 
gt_pch_n_P23c⁄°™t_des¸ùt‹_πx4hèb
 (*);

4568 
gt_pch_n_P24c⁄°™t_des¸ùt‹_åì4hèb
 (*);

4569 
gt_pch_n_P12obje˘_block4hèb
 (*);

4570 
gt_pch_n_P7£˘i⁄4hèb
 (*);

4571 
gt_pch_n_P17åì_¥i‹ôy_m≠4hèb
 (*);

4572 
gt_pch_n_P12åì_vec_m≠4hèb
 (*);

4573 
gt_pch_n_P13åì_de˛_m≠4hèb
 (*);

4574 
gt_pch_n_P9ty≥_hash4hèb
 (*);

4575 
gt_pch_n_P23ãmp_¶Ÿ_addªss_íåy4hèb
 (*);

4576 
gt_pch_n_P15throw_°mt_node4hèb
 (*);

4577 
gt_pch_n_P9ªg_©ås4hèb
 (*);

4578 
gt_pch_n_P7πx_def4hèb
 (*);

4579 
gt_pch_n_P23addr_èbÀ_íåy_°ru˘4hèb
 (*);

4580 
gt_pch_n_P22ˇched_dw_loc_li°_def4hèb
 (*);

4581 
gt_pch_n_P16v¨_loc_li°_def4hèb
 (*);

4582 
gt_pch_n_P10dõ_°ru˘4hèb
 (*);

4583 
gt_pch_n_P15dw¨f_fûe_d©a4hèb
 (*);

4584 
gt_pch_n_P20ödúe˘_°rög_node4hèb
 (*);

4585 
gt_pch_n_SP9åì_node12•œy_åì_s
 (*);

4586 
gt_pch_n_P28cgøph_fun˘i⁄_vîsi⁄_öfo4hèb
 (*);

4587 
gt_pch_n_II12•œy_åì_s
 (*);

4588 
gt_pch_n_P11symèb_node4hèb
 (*);

4589 
gt_pch_n_P11cgøph_edge4hèb
 (*);

4590 
gt_pch_n_P9lo›_exô4hèb
 (*);

4591 
gt_pch_n_P24ty≥s_u£d_by_v¨s_íåy4hèb
 (*);

4592 
gt_pch_n_P9åì_node4hèb
 (*);

4593 
gt_pch_n_P13libfunc_íåy4hèb
 (*);

4598 
gt_pch_p_24vec_iv¨ªf_íåy_va_gc_


4599 (*, *, 
gt_poöãr_›î©‹
, *);

4600 
gt_pch_p_26vec_¥Ÿ_li°_íåy_va_gc_


4601 (*, *, 
gt_poöãr_›î©‹
, *);

4602 
gt_pch_p_23vec_msgªf_íåy_va_gc_


4603 (*, *, 
gt_poöãr_›î©‹
, *);

4604 
gt_pch_p_27vec_idít_d©a_tu∂e_va_gc_


4605 (*, *, 
gt_poöãr_›î©‹
, *);

4606 
gt_pch_p_17°rög_des¸ùt‹


4607 (*, *, 
gt_poöãr_›î©‹
, *);

4608 
gt_pch_p_9imp_íåy


4609 (*, *, 
gt_poöãr_›î©‹
, *);

4610 
gt_pch_p_16hashed_©åibuã


4611 (*, *, 
gt_poöãr_›î©‹
, *);

4612 
gt_pch_p_12hashed_íåy


4613 (*, *, 
gt_poöãr_›î©‹
, *);

4614 
gt_pch_p_16objc_m≠_¥iv©e


4615 (*, *, 
gt_poöãr_›î©‹
, *);

4616 
gt_pch_p_23vec_mëhod_íåy_va_gc_


4617 (*, *, 
gt_poöãr_›î©‹
, *);

4618 
gt_pch_p_14ty≥_as£πi⁄


4619 (*, *, 
gt_poöãr_›î©‹
, *);

4620 
gt_pch_p_18åìåìhash_íåy


4621 (*, *, 
gt_poöãr_›î©‹
, *);

4622 
gt_pch_p_5CPoﬁ


4623 (*, *, 
gt_poöãr_›î©‹
, *);

4624 
gt_pch_p_3JCF


4625 (*, *, 
gt_poöãr_›î©‹
, *);

4626 
gt_pch_p_17moduÀ_hèb_íåy


4627 (*, *, 
gt_poöãr_›î©‹
, *);

4628 
gt_pch_p_13bödög_Àvñ


4629 (*, *, 
gt_poöãr_›î©‹
, *);

4630 
gt_pch_p_27vec_≥ndög_n€x˚±_va_gc_


4631 (*, *, 
gt_poöãr_›î©‹
, *);

4632 
gt_pch_p_21≥ndög_ab°ø˘_ty≥


4633 (*, *, 
gt_poöãr_›î©‹
, *);

4634 
gt_pch_p_19vec_åì_öt_va_gc_


4635 (*, *, 
gt_poöãr_›î©‹
, *);

4636 
gt_pch_p_9˝_∑r£r


4637 (*, *, 
gt_poöãr_›î©‹
, *);

4638 
gt_pch_p_38vec_˝_u≈¨£d_fun˘i⁄s_íåy_va_gc_


4639 (*, *, 
gt_poöãr_›î©‹
, *);

4640 
gt_pch_p_17˝_∑r£r_c⁄ãxt


4641 (*, *, 
gt_poöãr_›î©‹
, *);

4642 
gt_pch_p_31vec_˝_deÁu…_¨g_íåy_va_gc_


4643 (*, *, 
gt_poöãr_›î©‹
, *);

4644 
gt_pch_p_8˝_Àxî


4645 (*, *, 
gt_poöãr_›î©‹
, *);

4646 
gt_pch_p_19vec_˝_tokí_va_gc_


4647 (*, *, 
gt_poöãr_›î©‹
, *);

4648 
gt_pch_p_10åì_check


4649 (*, *, 
gt_poöãr_›î©‹
, *);

4650 
gt_pch_p_14c⁄°ex¥_ˇŒ


4651 (*, *, 
gt_poöãr_›î©‹
, *);

4652 
gt_pch_p_16c⁄°ex¥_fundef


4653 (*, *, 
gt_poöãr_›î©‹
, *);

4654 
gt_pch_p_26vec_de„ºed_ac˚ss_va_gc_


4655 (*, *, 
gt_poöãr_›î©‹
, *);

4656 
gt_pch_p_32vec_de„ºed_ac˚ss_check_va_gc_


4657 (*, *, 
gt_poöãr_›î©‹
, *);

4658 
gt_pch_p_10•ec_íåy


4659 (*, *, 
gt_poöãr_›î©‹
, *);

4660 
gt_pch_p_16≥ndög_ãm∂©e


4661 (*, *, 
gt_poöãr_›î©‹
, *);

4662 
gt_pch_p_25vec_öcom∂ëe_v¨_va_gc_


4663 (*, *, 
gt_poöãr_›î©‹
, *);

4664 
gt_pch_p_21«med_œbñ_u£_íåy


4665 (*, *, 
gt_poöãr_›î©‹
, *);

4666 
gt_pch_p_22vec_åì_∑ú_s_va_gc_


4667 (*, *, 
gt_poöãr_›î©‹
, *);

4668 
gt_pch_p_17«med_œbñ_íåy


4669 (*, *, 
gt_poöãr_›î©‹
, *);

4670 
gt_pch_p_28vec_cxx_ßved_bödög_va_gc_


4671 (*, *, 
gt_poöãr_›î©‹
, *);

4672 
gt_pch_p_36vec_quÆifõd_ty≥def_ußge_t_va_gc_


4673 (*, *, 
gt_poöãr_›î©‹
, *);

4674 
gt_pch_p_14˝_tokí_ˇche


4675 (*, *, 
gt_poöãr_›î©‹
, *);

4676 
gt_pch_p_11ßved_sc›e


4677 (*, *, 
gt_poöãr_›î©‹
, *);

4678 
gt_pch_p_16cxx_öt_åì_m≠


4679 (*, *, 
gt_poöãr_›î©‹
, *);

4680 
gt_pch_p_27vec_˝_œbñ_bödög_va_gc_


4681 (*, *, 
gt_poöãr_›î©‹
, *);

4682 
gt_pch_p_27vec_˝_˛ass_bödög_va_gc_


4683 (*, *, 
gt_poöãr_›î©‹
, *);

4684 
gt_pch_p_16˝_bödög_Àvñ


4685 (*, *, 
gt_poöãr_›î©‹
, *);

4686 
gt_pch_p_11cxx_bödög


4687 (*, *, 
gt_poöãr_›î©‹
, *);

4688 
gt_pch_p_15bödög_íåy_s


4689 (*, *, 
gt_poöãr_›î©‹
, *);

4690 
gt_pch_p_15bödög_èbÀ_s


4691 (*, *, 
gt_poöãr_›î©‹
, *);

4692 
gt_pch_p_11tö°_Àvñ


4693 (*, *, 
gt_poöãr_›î©‹
, *);

4694 
gt_pch_p_18vec_töfo_s_va_gc_


4695 (*, *, 
gt_poöãr_›î©‹
, *);

4696 
gt_pch_p_8c_∑r£r


4697 (*, *, 
gt_poöãr_›î©‹
, *);

4698 
gt_pch_p_18vec_c_tokí_va_gc_


4699 (*, *, 
gt_poöãr_›î©‹
, *);

4700 
gt_pch_p_9›t_°ack


4701 (*, *, 
gt_poöãr_›î©‹
, *);

4702 
gt_pch_p_31vec_≥ndög_ªdeföôi⁄_va_gc_


4703 (*, *, 
gt_poöãr_›î©‹
, *);

4704 
gt_pch_p_23vec_≥ndög_wók_va_gc_


4705 (*, *, 
gt_poöãr_›î©‹
, *);

4706 
gt_pch_p_11Æign_°ack


4707 (*, *, 
gt_poöãr_›î©‹
, *);

4708 
gt_pch_p_22vec_åì_gc_vec_va_gc_


4709 (*, *, 
gt_poöãr_›î©‹
, *);

4710 
gt_pch_p_23vec_c⁄°_ch¨_p_va_gc_


4711 (*, *, 
gt_poöãr_›î©‹
, *);

4712 
gt_pch_p_18s‹ãd_fõlds_ty≥


4713 (*, *, 
gt_poöãr_›î©‹
, *);

4714 
gt_pch_p_15c_ölöe_°©ic


4715 (*, *, 
gt_poöãr_›î©‹
, *);

4716 
gt_pch_p_28vec_c_gŸo_bödögs_p_va_gc_


4717 (*, *, 
gt_poöãr_›î©‹
, *);

4718 
gt_pch_p_15c_gŸo_bödögs


4719 (*, *, 
gt_poöãr_›î©‹
, *);

4720 
gt_pch_p_7c_sc›e


4721 (*, *, 
gt_poöãr_›î©‹
, *);

4722 
gt_pch_p_9c_bödög


4723 (*, *, 
gt_poöãr_›î©‹
, *);

4724 
gt_pch_p_12c_œbñ_v¨s


4725 (*, *, 
gt_poöãr_›î©‹
, *);

4726 
gt_pch_p_13∑d_ty≥_hash


4727 (*, *, 
gt_poöãr_›î©‹
, *);

4728 
gt_pch_p_18g«t_bödög_Àvñ


4729 (*, *, 
gt_poöãr_›î©‹
, *);

4730 
gt_pch_p_20vec_lo›_öfo_va_gc_


4731 (*, *, 
gt_poöãr_›î©‹
, *);

4732 
gt_pch_p_11lo›_öfo_d


4733 (*, *, 
gt_poöãr_›î©‹
, *);

4734 
gt_pch_p_27vec_ønge_check_öfo_va_gc_


4735 (*, *, 
gt_poöãr_›î©‹
, *);

4736 
gt_pch_p_18ønge_check_öfo_d


4737 (*, *, 
gt_poöãr_›î©‹
, *);

4738 
gt_pch_p_9ñab_öfo


4739 (*, *, 
gt_poöãr_›î©‹
, *);

4740 
gt_pch_p_10°mt_group


4741 (*, *, 
gt_poöãr_›î©‹
, *);

4742 
gt_pch_p_20vec_∑rm_©å_va_gc_


4743 (*, *, 
gt_poöãr_›î©‹
, *);

4744 
gt_pch_p_11∑rm_©å_d


4745 (*, *, 
gt_poöãr_›î©‹
, *);

4746 
gt_pch_p_19vec_odr_ty≥_va_gc_


4747 (*, *, 
gt_poöãr_›î©‹
, *);

4748 
gt_pch_p_13åì_ty≥_m≠


4749 (*, *, 
gt_poöãr_›î©‹
, *);

4750 
gt_pch_p_27vec_ölöe_summ¨y_t_va_gc_


4751 (*, *, 
gt_poöãr_›î©‹
, *);

4752 
gt_pch_p_26vec_size_time_íåy_va_gc_


4753 (*, *, 
gt_poöãr_›î©‹
, *);

4754 
gt_pch_p_20vec_c⁄dôi⁄_va_gc_


4755 (*, *, 
gt_poöãr_›î©‹
, *);

4756 
gt_pch_p_17…o_ö_de˛_°©e


4757 (*, *, 
gt_poöãr_›î©‹
, *);

4758 
gt_pch_p_24vec_ùa_edge_¨gs_va_gc_


4759 (*, *, 
gt_poöãr_›î©‹
, *);

4760 
gt_pch_p_38vec_ùa_agg_ª∂a˚mít_vÆue_p_va_gc_


4761 (*, *, 
gt_poöãr_›î©‹
, *);

4762 
gt_pch_p_24vec_ùa_jump_func_va_gc_


4763 (*, *, 
gt_poöãr_›î©‹
, *);

4764 
gt_pch_p_26vec_ùa_agg_jf_ôem_va_gc_


4765 (*, *, 
gt_poöãr_›î©‹
, *);

4766 
gt_pch_p_20sß_›î™d_mem‹y_d


4767 (*, *, 
gt_poöãr_›î©‹
, *);

4768 
gt_pch_p_13s˚v_öfo_°r


4769 (*, *, 
gt_poöãr_›î©‹
, *);

4770 
gt_pch_p_28vec_mem_addr_ãm∂©e_va_gc_


4771 (*, *, 
gt_poöãr_›î©‹
, *);

4772 
gt_pch_p_17vec_gim∂e_va_gc_


4773 (*, *, 
gt_poöãr_›î©‹
, *);

4774 
gt_pch_p_15tm_ª°¨t_node


4775 (*, *, 
gt_poöãr_›î©‹
, *);

4776 
gt_pch_p_21gim∂e_°©emít_ba£


4777 (*, *, 
gt_poöãr_›î©‹
, *);

4778 
gt_pch_p_21gim∂e_°©emít_ba£


4779 (*, *, 
gt_poöãr_›î©‹
, *);

4780 
gt_pch_p_21gim∂e_°©emít_ba£


4781 (*, *, 
gt_poöãr_›î©‹
, *);

4782 
gt_pch_p_21gim∂e_°©emít_ba£


4783 (*, *, 
gt_poöãr_›î©‹
, *);

4784 
gt_pch_p_21gim∂e_°©emít_ba£


4785 (*, *, 
gt_poöãr_›î©‹
, *);

4786 
gt_pch_p_21gim∂e_°©emít_ba£


4787 (*, *, 
gt_poöãr_›î©‹
, *);

4788 
gt_pch_p_21gim∂e_°©emít_ba£


4789 (*, *, 
gt_poöãr_›î©‹
, *);

4790 
gt_pch_p_21gim∂e_°©emít_ba£


4791 (*, *, 
gt_poöãr_›î©‹
, *);

4792 
gt_pch_p_21gim∂e_°©emít_ba£


4793 (*, *, 
gt_poöãr_›î©‹
, *);

4794 
gt_pch_p_21gim∂e_°©emít_ba£


4795 (*, *, 
gt_poöãr_›î©‹
, *);

4796 
gt_pch_p_21gim∂e_°©emít_ba£


4797 (*, *, 
gt_poöãr_›î©‹
, *);

4798 
gt_pch_p_21gim∂e_°©emít_ba£


4799 (*, *, 
gt_poöãr_›î©‹
, *);

4800 
gt_pch_p_21gim∂e_°©emít_ba£


4801 (*, *, 
gt_poöãr_›î©‹
, *);

4802 
gt_pch_p_21gim∂e_°©emít_ba£


4803 (*, *, 
gt_poöãr_›î©‹
, *);

4804 
gt_pch_p_21gim∂e_°©emít_ba£


4805 (*, *, 
gt_poöãr_›î©‹
, *);

4806 
gt_pch_p_21gim∂e_°©emít_ba£


4807 (*, *, 
gt_poöãr_›î©‹
, *);

4808 
gt_pch_p_21gim∂e_°©emít_ba£


4809 (*, *, 
gt_poöãr_›î©‹
, *);

4810 
gt_pch_p_21gim∂e_°©emít_ba£


4811 (*, *, 
gt_poöãr_›î©‹
, *);

4812 
gt_pch_p_21gim∂e_°©emít_ba£


4813 (*, *, 
gt_poöãr_›î©‹
, *);

4814 
gt_pch_p_21gim∂e_°©emít_ba£


4815 (*, *, 
gt_poöãr_›î©‹
, *);

4816 
gt_pch_p_21gim∂e_°©emít_ba£


4817 (*, *, 
gt_poöãr_›î©‹
, *);

4818 
gt_pch_p_21gim∂e_°©emít_ba£


4819 (*, *, 
gt_poöãr_›î©‹
, *);

4820 
gt_pch_p_21gim∂e_°©emít_ba£


4821 (*, *, 
gt_poöãr_›î©‹
, *);

4822 
gt_pch_p_21gim∂e_°©emít_ba£


4823 (*, *, 
gt_poöãr_›î©‹
, *);

4824 
gt_pch_p_21gim∂e_°©emít_ba£


4825 (*, *, 
gt_poöãr_›î©‹
, *);

4826 
gt_pch_p_21gim∂e_°©emít_ba£


4827 (*, *, 
gt_poöãr_›î©‹
, *);

4828 
gt_pch_p_21gim∂e_°©emít_ba£


4829 (*, *, 
gt_poöãr_›î©‹
, *);

4830 
gt_pch_p_21gim∂e_°©emít_ba£


4831 (*, *, 
gt_poöãr_›î©‹
, *);

4832 
gt_pch_p_21gim∂e_°©emít_ba£


4833 (*, *, 
gt_poöãr_›î©‹
, *);

4834 
gt_pch_p_21gim∂e_°©emít_ba£


4835 (*, *, 
gt_poöãr_›î©‹
, *);

4836 
gt_pch_p_21gim∂e_°©emít_ba£


4837 (*, *, 
gt_poöãr_›î©‹
, *);

4838 
gt_pch_p_21gim∂e_°©emít_ba£


4839 (*, *, 
gt_poöãr_›î©‹
, *);

4840 
gt_pch_p_21gim∂e_°©emít_ba£


4841 (*, *, 
gt_poöãr_›î©‹
, *);

4842 
gt_pch_p_21gim∂e_°©emít_ba£


4843 (*, *, 
gt_poöãr_›î©‹
, *);

4844 
gt_pch_p_21gim∂e_°©emít_ba£


4845 (*, *, 
gt_poöãr_›î©‹
, *);

4846 
gt_pch_p_9ty≥_hash


4847 (*, *, 
gt_poöãr_›î©‹
, *);

4848 
gt_pch_p_16°rög_poﬁ_d©a


4849 (*, *, 
gt_poöãr_›î©‹
, *);

4850 
gt_pch_p_23ãmp_¶Ÿ_addªss_íåy


4851 (*, *, 
gt_poöãr_›î©‹
, *);

4852 
gt_pch_p_15throw_°mt_node


4853 (*, *, 
gt_poöãr_›î©‹
, *);

4854 
gt_pch_p_25vec_eh_œndög_∑d_va_gc_


4855 (*, *, 
gt_poöãr_›î©‹
, *);

4856 
gt_pch_p_20vec_eh_ªgi⁄_va_gc_


4857 (*, *, 
gt_poöãr_›î©‹
, *);

4858 
gt_pch_p_10eh_ˇtch_d


4859 (*, *, 
gt_poöãr_›î©‹
, *);

4860 
gt_pch_p_16eh_œndög_∑d_d


4861 (*, *, 
gt_poöãr_›î©‹
, *);

4862 
gt_pch_p_13poöãr_m≠_t


4863 (*, *, 
gt_poöãr_›î©‹
, *);

4864 
gt_pch_p_11eh_ªgi⁄_d


4865 (*, *, 
gt_poöãr_›î©‹
, *);

4866 
gt_pch_p_24vec_dõ_¨g_íåy_va_gc_


4867 (*, *, 
gt_poöãr_›î©‹
, *);

4868 
gt_pch_p_24vec_macöfo_íåy_va_gc_


4869 (*, *, 
gt_poöãr_›î©‹
, *);

4870 
gt_pch_p_24vec_pub«me_íåy_va_gc_


4871 (*, *, 
gt_poöãr_›î©‹
, *);

4872 
gt_pch_p_31vec_dw_löe_öfo_èbÀ_p_va_gc_


4873 (*, *, 
gt_poöãr_›î©‹
, *);

4874 
gt_pch_p_22ˇched_dw_loc_li°_def


4875 (*, *, 
gt_poöãr_›î©‹
, *);

4876 
gt_pch_p_17ˇŒ_¨g_loc_node


4877 (*, *, 
gt_poöãr_›î©‹
, *);

4878 
gt_pch_p_16v¨_loc_li°_def


4879 (*, *, 
gt_poöãr_›î©‹
, *);

4880 
gt_pch_p_12v¨_loc_node


4881 (*, *, 
gt_poöãr_›î©‹
, *);

4882 
gt_pch_p_16limbo_dõ_°ru˘


4883 (*, *, 
gt_poöãr_›î©‹
, *);

4884 
gt_pch_p_23vec_dw_©å_node_va_gc_


4885 (*, *, 
gt_poöãr_›î©‹
, *);

4886 
gt_pch_p_25dw_löe_öfo_èbÀ_°ru˘


4887 (*, *, 
gt_poöãr_›î©‹
, *);

4888 
gt_pch_p_29vec_dw_löe_öfo_íåy_va_gc_


4889 (*, *, 
gt_poöãr_›î©‹
, *);

4890 
gt_pch_p_18comd©_ty≥_°ru˘


4891 (*, *, 
gt_poöãr_›î©‹
, *);

4892 
gt_pch_p_25dw_ønges_by_œbñ_°ru˘


4893 (*, *, 
gt_poöãr_›î©‹
, *);

4894 
gt_pch_p_16dw_ønges_°ru˘


4895 (*, *, 
gt_poöãr_›î©‹
, *);

4896 
gt_pch_p_29vec_de„ºed_loˇti⁄s_va_gc_


4897 (*, *, 
gt_poöãr_›î©‹
, *);

4898 
gt_pch_p_21vec_dw_fde_ªf_va_gc_


4899 (*, *, 
gt_poöãr_›î©‹
, *);

4900 
gt_pch_p_24ªg_ßved_ö_d©a_°ru˘


4901 (*, *, 
gt_poöãr_›î©‹
, *);

4902 
gt_pch_p_17dw_cfi_row_°ru˘


4903 (*, *, 
gt_poöãr_›î©‹
, *);

4904 
gt_pch_p_15dw¨f_fûe_d©a


4905 (*, *, 
gt_poöãr_›î©‹
, *);

4906 
gt_pch_p_20ödúe˘_°rög_node


4907 (*, *, 
gt_poöãr_›î©‹
, *);

4908 
gt_pch_p_23addr_èbÀ_íåy_°ru˘


4909 (*, *, 
gt_poöãr_›î©‹
, *);

4910 
gt_pch_p_21vec_dw_cfi_ªf_va_gc_


4911 (*, *, 
gt_poöãr_›î©‹
, *);

4912 
gt_pch_p_18dw_loc_li°_°ru˘


4913 (*, *, 
gt_poöãr_›î©‹
, *);

4914 
gt_pch_p_17dw_loc_des¸_node


4915 (*, *, 
gt_poöãr_›î©‹
, *);

4916 
gt_pch_p_11dw_cfi_node


4917 (*, *, 
gt_poöãr_›î©‹
, *);

4918 
gt_pch_p_8ty≥öfo


4919 (*, *, 
gt_poöãr_›î©‹
, *);

4920 
gt_pch_p_10odr_ty≥_d


4921 (*, *, 
gt_poöãr_›î©‹
, *);

4922 
gt_pch_p_25ùa_agg_ª∂a˚mít_vÆue


4923 (*, *, 
gt_poöãr_›î©‹
, *);

4924 
gt_pch_p_26vec_Æüs_£t_íåy_va_gc_


4925 (*, *, 
gt_poöãr_›î©‹
, *);

4926 
gt_pch_p_17Æüs_£t_íåy_d


4927 (*, *, 
gt_poöãr_›î©‹
, *);

4928 
gt_pch_p_24c⁄°™t_des¸ùt‹_åì


4929 (*, *, 
gt_poöãr_›î©‹
, *);

4930 
gt_pch_p_8asm_node


4931 (*, *, 
gt_poöãr_›î©‹
, *);

4932 
gt_pch_p_25cgøph_ödúe˘_ˇŒ_öfo


4933 (*, *, 
gt_poöãr_›î©‹
, *);

4934 
gt_pch_p_28cgøph_fun˘i⁄_vîsi⁄_öfo


4935 (*, *, 
gt_poöãr_›î©‹
, *);

4936 
gt_pch_p_11cgøph_edge


4937 (*, *, 
gt_poöãr_›î©‹
, *);

4938 
gt_pch_p_17cgøph_simd_˛⁄e


4939 (*, *, 
gt_poöãr_›î©‹
, *);

4940 
gt_pch_p_28vec_ùa_ª∂a˚_m≠_p_va_gc_


4941 (*, *, 
gt_poöãr_›î©‹
, *);

4942 
gt_pch_p_15ùa_ª∂a˚_m≠


4943 (*, *, 
gt_poöãr_›î©‹
, *);

4944 
gt_pch_p_18…o_fûe_de˛_d©a


4945 (*, *, 
gt_poöãr_›î©‹
, *);

4946 
gt_pch_p_20vec_ùa_ªf_t_va_gc_


4947 (*, *, 
gt_poöãr_›î©‹
, *);

4948 
gt_pch_p_11symèb_node


4949 (*, *, 
gt_poöãr_›î©‹
, *);

4950 
gt_pch_p_11symèb_node


4951 (*, *, 
gt_poöãr_›î©‹
, *);

4952 
gt_pch_p_11symèb_node


4953 (*, *, 
gt_poöãr_›î©‹
, *);

4954 
gt_pch_p_22vec_basic_block_va_gc_


4955 (*, *, 
gt_poöãr_›î©‹
, *);

4956 
gt_pch_p_15vec_edge_va_gc_


4957 (*, *, 
gt_poöãr_›î©‹
, *);

4958 
gt_pch_p_11πl_bb_öfo


4959 (*, *, 
gt_poöãr_›î©‹
, *);

4960 
gt_pch_p_10nôî_desc


4961 (*, *, 
gt_poöãr_›î©‹
, *);

4962 
gt_pch_p_17vec_lo›_p_va_gc_


4963 (*, *, 
gt_poöãr_›î©‹
, *);

4964 
gt_pch_p_4lo›


4965 (*, *, 
gt_poöãr_›î©‹
, *);

4966 
gt_pch_p_9lo›_exô


4967 (*, *, 
gt_poöãr_›î©‹
, *);

4968 
gt_pch_p_13nb_ôî_bound


4969 (*, *, 
gt_poöãr_›î©‹
, *);

4970 
gt_pch_p_24ty≥s_u£d_by_v¨s_íåy


4971 (*, *, 
gt_poöãr_›î©‹
, *);

4972 
gt_pch_p_17œnguage_fun˘i⁄


4973 (*, *, 
gt_poöãr_›î©‹
, *);

4974 
gt_pch_p_5lo›s


4975 (*, *, 
gt_poöãr_›î©‹
, *);

4976 
gt_pch_p_18c⁄åﬁ_Êow_gøph


4977 (*, *, 
gt_poöãr_›î©‹
, *);

4978 
gt_pch_p_9eh_°©us


4979 (*, *, 
gt_poöãr_›î©‹
, *);

4980 
gt_pch_p_11°ack_ußge


4981 (*, *, 
gt_poöãr_›î©‹
, *);

4982 
gt_pch_p_22vec_ãmp_¶Ÿ_p_va_gc_


4983 (*, *, 
gt_poöãr_›î©‹
, *);

4984 
gt_pch_p_20öôül_vÆue_°ru˘


4985 (*, *, 
gt_poöãr_›î©‹
, *);

4986 
gt_pch_p_11‰ame_•a˚


4987 (*, *, 
gt_poöãr_›î©‹
, *);

4988 
gt_pch_p_17πx_c⁄°™t_poﬁ


4989 (*, *, 
gt_poöãr_›î©‹
, *);

4990 
gt_pch_p_11dw_fde_node


4991 (*, *, 
gt_poöãr_›î©‹
, *);

4992 
gt_pch_p_9ãmp_¶Ÿ


4993 (*, *, 
gt_poöãr_›î©‹
, *);

4994 
gt_pch_p_9gim∂e_df


4995 (*, *, 
gt_poöãr_›î©‹
, *);

4996 
gt_pch_p_27vec_ˇŒ_sôe_ªc‹d_va_gc_


4997 (*, *, 
gt_poöãr_›î©‹
, *);

4998 
gt_pch_p_16vec_uch¨_va_gc_


4999 (*, *, 
gt_poöãr_›î©‹
, *);

5000 
gt_pch_p_18ˇŒ_sôe_ªc‹d_d


5001 (*, *, 
gt_poöãr_›î©‹
, *);

5002 
gt_pch_p_14£quí˚_°ack


5003 (*, *, 
gt_poöãr_›î©‹
, *);

5004 
gt_pch_p_15èrgë_libfuncs


5005 (*, *, 
gt_poöãr_›î©‹
, *);

5006 
gt_pch_p_13libfunc_íåy


5007 (*, *, 
gt_poöãr_›î©‹
, *);

5008 
gt_pch_p_21vec_Æüs_∑ú_va_gc_


5009 (*, *, 
gt_poöãr_›î©‹
, *);

5010 
gt_pch_p_12åì_vec_m≠


5011 (*, *, 
gt_poöãr_›î©‹
, *);

5012 
gt_pch_p_17åì_¥i‹ôy_m≠


5013 (*, *, 
gt_poöãr_›î©‹
, *);

5014 
gt_pch_p_12åì_öt_m≠


5015 (*, *, 
gt_poöãr_›î©‹
, *);

5016 
gt_pch_p_13åì_de˛_m≠


5017 (*, *, 
gt_poöãr_›î©‹
, *);

5018 
gt_pch_p_8åì_m≠


5019 (*, *, 
gt_poöãr_›î©‹
, *);

5020 
gt_pch_p_14œng_åì_node


5021 (*, *, 
gt_poöãr_›î©‹
, *);

5022 
gt_pch_p_14èrgë_globÆs


5023 (*, *, 
gt_poöãr_›î©‹
, *);

5024 
gt_pch_p_24åì_°©emít_li°_node


5025 (*, *, 
gt_poöãr_›î©‹
, *);

5026 
gt_pch_p_9œng_de˛


5027 (*, *, 
gt_poöãr_›î©‹
, *);

5028 
gt_pch_p_9œng_ty≥


5029 (*, *, 
gt_poöãr_›î©‹
, *);

5030 
gt_pch_p_15vec_åì_va_gc_


5031 (*, *, 
gt_poöãr_›î©‹
, *);

5032 
gt_pch_p_26vec_c⁄°ru˘‹_ñt_va_gc_


5033 (*, *, 
gt_poöãr_›î©‹
, *);

5034 
gt_pch_p_10dõ_°ru˘


5035 (*, *, 
gt_poöãr_›î©‹
, *);

5036 
gt_pch_p_14ønge_öfo_def


5037 (*, *, 
gt_poöãr_›î©‹
, *);

5038 
gt_pch_p_12±r_öfo_def


5039 (*, *, 
gt_poöãr_›î©‹
, *);

5040 
gt_pch_p_10èrgë_πl


5041 (*, *, 
gt_poöãr_›î©‹
, *);

5042 
gt_pch_p_8fun˘i⁄


5043 (*, *, 
gt_poöãr_›î©‹
, *);

5044 
gt_pch_p_23c⁄°™t_des¸ùt‹_πx


5045 (*, *, 
gt_poöãr_›î©‹
, *);

5046 
gt_pch_p_11fixed_vÆue


5047 (*, *, 
gt_poöãr_›î©‹
, *);

5048 
gt_pch_p_10ªÆ_vÆue


5049 (*, *, 
gt_poöãr_›î©‹
, *);

5050 
gt_pch_p_14vec_πx_va_gc_


5051 (*, *, 
gt_poöãr_›î©‹
, *);

5052 
gt_pch_p_12obje˘_block


5053 (*, *, 
gt_poöãr_›î©‹
, *);

5054 
gt_pch_p_9ªg_©ås


5055 (*, *, 
gt_poöãr_›î©‹
, *);

5056 
gt_pch_p_9mem_©ås


5057 (*, *, 
gt_poöãr_›î©‹
, *);

5058 
gt_pch_p_13covîage_d©a


5059 (*, *, 
gt_poöãr_›î©‹
, *);

5060 
gt_pch_p_14bôm≠_ob°ack


5061 (*, *, 
gt_poöãr_›î©‹
, *);

5062 
gt_pch_p_14bôm≠_ñemít


5063 (*, *, 
gt_poöãr_›î©‹
, *);

5064 
gt_pch_p_16machöe_fun˘i⁄


5065 (*, *, 
gt_poöãr_›î©‹
, *);

5066 
gt_pch_p_15basic_block_def


5067 (*, *, 
gt_poöãr_›î©‹
, *);

5068 
gt_pch_p_8edge_def


5069 (*, *, 
gt_poöãr_›î©‹
, *);

5070 
gt_pch_p_7£˘i⁄


5071 (*, *, 
gt_poöãr_›î©‹
, *);

5072 
gt_pch_p_21gim∂e_°©emít_ba£


5073 (*, *, 
gt_poöãr_›î©‹
, *);

5074 
gt_pch_p_9πvec_def


5075 (*, *, 
gt_poöãr_›î©‹
, *);

5076 
gt_pch_p_7πx_def


5077 (*, *, 
gt_poöãr_›î©‹
, *);

5078 
gt_pch_p_11bôm≠_hód


5079 (*, *, 
gt_poöãr_›î©‹
, *);

5080 
gt_pch_p_6™swî


5081 (*, *, 
gt_poöãr_›î©‹
, *);

5082 
gt_pch_p_9˝p_ma¸o


5083 (*, *, 
gt_poöãr_›î©‹
, *);

5084 
gt_pch_p_9˝p_tokí


5085 (*, *, 
gt_poöãr_›î©‹
, *);

5086 
gt_pch_p_9löe_m≠s


5087 (*, *, 
gt_poöãr_›î©‹
, *);

5088 
	#gt_pch_p_9åì_node
 
gt_pch_p_14œng_åì_node


	)

5089 
gt_pch_p_II17•œy_åì_node_s


5090 (*, *, 
gt_poöãr_›î©‹
, *);

5091 
gt_pch_p_SP9åì_node17•œy_åì_node_s


5092 (*, *, 
gt_poöãr_›î©‹
, *);

5093 
gt_pch_p_P9åì_nodeP9åì_node17•œy_åì_node_s


5094 (*, *, 
gt_poöãr_›î©‹
, *);

5095 
gt_pch_p_P17°rög_des¸ùt‹4hèb


5096 (*, *, 
gt_poöãr_›î©‹
, *);

5097 
gt_pch_p_P14ty≥_as£πi⁄4hèb


5098 (*, *, 
gt_poöãr_›î©‹
, *);

5099 
gt_pch_p_P18åìåìhash_íåy4hèb


5100 (*, *, 
gt_poöãr_›î©‹
, *);

5101 
gt_pch_p_P17moduÀ_hèb_íåy4hèb


5102 (*, *, 
gt_poöãr_›î©‹
, *);

5103 
gt_pch_p_P21≥ndög_ab°ø˘_ty≥4hèb


5104 (*, *, 
gt_poöãr_›î©‹
, *);

5105 
gt_pch_p_P14c⁄°ex¥_ˇŒ4hèb


5106 (*, *, 
gt_poöãr_›î©‹
, *);

5107 
gt_pch_p_P16c⁄°ex¥_fundef4hèb


5108 (*, *, 
gt_poöãr_›î©‹
, *);

5109 
gt_pch_p_P10•ec_íåy4hèb


5110 (*, *, 
gt_poöãr_›î©‹
, *);

5111 
gt_pch_p_P16cxx_öt_åì_m≠4hèb


5112 (*, *, 
gt_poöãr_›î©‹
, *);

5113 
gt_pch_p_P17«med_œbñ_íåy4hèb


5114 (*, *, 
gt_poöãr_›î©‹
, *);

5115 
gt_pch_p_P13∑d_ty≥_hash4hèb


5116 (*, *, 
gt_poöãr_›î©‹
, *);

5117 
gt_pch_p_P12åì_öt_m≠4hèb


5118 (*, *, 
gt_poöãr_›î©‹
, *);

5119 
gt_pch_p_P13åì_ty≥_m≠4hèb


5120 (*, *, 
gt_poöãr_›î©‹
, *);

5121 
gt_pch_p_P17…o_ö_de˛_°©e4hèb


5122 (*, *, 
gt_poöãr_›î©‹
, *);

5123 
gt_pch_p_P9åì_nodeP9åì_node12•œy_åì_s


5124 (*, *, 
gt_poöãr_›î©‹
, *);

5125 
gt_pch_p_P13s˚v_öfo_°r4hèb


5126 (*, *, 
gt_poöãr_›î©‹
, *);

5127 
gt_pch_p_P15tm_ª°¨t_node4hèb


5128 (*, *, 
gt_poöãr_›î©‹
, *);

5129 
gt_pch_p_P8åì_m≠4hèb


5130 (*, *, 
gt_poöãr_›î©‹
, *);

5131 
gt_pch_p_P23c⁄°™t_des¸ùt‹_πx4hèb


5132 (*, *, 
gt_poöãr_›î©‹
, *);

5133 
gt_pch_p_P24c⁄°™t_des¸ùt‹_åì4hèb


5134 (*, *, 
gt_poöãr_›î©‹
, *);

5135 
gt_pch_p_P12obje˘_block4hèb


5136 (*, *, 
gt_poöãr_›î©‹
, *);

5137 
gt_pch_p_P7£˘i⁄4hèb


5138 (*, *, 
gt_poöãr_›î©‹
, *);

5139 
gt_pch_p_P17åì_¥i‹ôy_m≠4hèb


5140 (*, *, 
gt_poöãr_›î©‹
, *);

5141 
gt_pch_p_P12åì_vec_m≠4hèb


5142 (*, *, 
gt_poöãr_›î©‹
, *);

5143 
gt_pch_p_P13åì_de˛_m≠4hèb


5144 (*, *, 
gt_poöãr_›î©‹
, *);

5145 
gt_pch_p_P9ty≥_hash4hèb


5146 (*, *, 
gt_poöãr_›î©‹
, *);

5147 
gt_pch_p_P23ãmp_¶Ÿ_addªss_íåy4hèb


5148 (*, *, 
gt_poöãr_›î©‹
, *);

5149 
gt_pch_p_P15throw_°mt_node4hèb


5150 (*, *, 
gt_poöãr_›î©‹
, *);

5151 
gt_pch_p_P9ªg_©ås4hèb


5152 (*, *, 
gt_poöãr_›î©‹
, *);

5153 
gt_pch_p_P7πx_def4hèb


5154 (*, *, 
gt_poöãr_›î©‹
, *);

5155 
gt_pch_p_P23addr_èbÀ_íåy_°ru˘4hèb


5156 (*, *, 
gt_poöãr_›î©‹
, *);

5157 
gt_pch_p_P22ˇched_dw_loc_li°_def4hèb


5158 (*, *, 
gt_poöãr_›î©‹
, *);

5159 
gt_pch_p_P16v¨_loc_li°_def4hèb


5160 (*, *, 
gt_poöãr_›î©‹
, *);

5161 
gt_pch_p_P10dõ_°ru˘4hèb


5162 (*, *, 
gt_poöãr_›î©‹
, *);

5163 
gt_pch_p_P15dw¨f_fûe_d©a4hèb


5164 (*, *, 
gt_poöãr_›î©‹
, *);

5165 
gt_pch_p_P20ödúe˘_°rög_node4hèb


5166 (*, *, 
gt_poöãr_›î©‹
, *);

5167 
gt_pch_p_SP9åì_node12•œy_åì_s


5168 (*, *, 
gt_poöãr_›î©‹
, *);

5169 
gt_pch_p_P28cgøph_fun˘i⁄_vîsi⁄_öfo4hèb


5170 (*, *, 
gt_poöãr_›î©‹
, *);

5171 
gt_pch_p_II12•œy_åì_s


5172 (*, *, 
gt_poöãr_›î©‹
, *);

5173 
gt_pch_p_P11symèb_node4hèb


5174 (*, *, 
gt_poöãr_›î©‹
, *);

5175 
gt_pch_p_P11cgøph_edge4hèb


5176 (*, *, 
gt_poöãr_›î©‹
, *);

5177 
gt_pch_p_P9lo›_exô4hèb


5178 (*, *, 
gt_poöãr_›î©‹
, *);

5179 
gt_pch_p_P24ty≥s_u£d_by_v¨s_íåy4hèb


5180 (*, *, 
gt_poöãr_›î©‹
, *);

5181 
gt_pch_p_P9åì_node4hèb


5182 (*, *, 
gt_poöãr_›î©‹
, *);

5183 
gt_pch_p_P13libfunc_íåy4hèb


5184 (*, *, 
gt_poöãr_›î©‹
, *);

5187 * 
ggc_Æloc_•œy_åì_sˇœr_sˇœr_•œy_åì_node_s
 (, *);

5188 * 
ggc_Æloc_•œy_åì_°r_åì_node_•œy_åì_node_s
 (, *);

5189 * 
ggc_Æloc_•œy_åì_åì_node_åì_node_•œy_åì_node_s
 (, *);

5190 * 
ggc_Æloc_•œy_åì_°rög_des¸ùt‹_hèb
 (, *);

5191 * 
ggc_Æloc_•œy_åì_ty≥_as£πi⁄_hèb
 (, *);

5192 * 
ggc_Æloc_•œy_åì_åìåìhash_íåy_hèb
 (, *);

5193 * 
ggc_Æloc_•œy_åì_moduÀ_hèb_íåy_hèb
 (, *);

5194 * 
ggc_Æloc_•œy_åì_≥ndög_ab°ø˘_ty≥_hèb
 (, *);

5195 * 
ggc_Æloc_•œy_åì_c⁄°ex¥_ˇŒ_hèb
 (, *);

5196 * 
ggc_Æloc_•œy_åì_c⁄°ex¥_fundef_hèb
 (, *);

5197 * 
ggc_Æloc_•œy_åì_•ec_íåy_hèb
 (, *);

5198 * 
ggc_Æloc_•œy_åì_cxx_öt_åì_m≠_hèb
 (, *);

5199 * 
ggc_Æloc_•œy_åì_«med_œbñ_íåy_hèb
 (, *);

5200 * 
ggc_Æloc_•œy_åì_∑d_ty≥_hash_hèb
 (, *);

5201 * 
ggc_Æloc_•œy_åì_åì_öt_m≠_hèb
 (, *);

5202 * 
ggc_Æloc_•œy_åì_åì_ty≥_m≠_hèb
 (, *);

5203 * 
ggc_Æloc_•œy_åì_…o_ö_de˛_°©e_hèb
 (, *);

5204 * 
ggc_Æloc_•œy_åì_åì_node_åì_node_•œy_åì_s
 (, *);

5205 * 
ggc_Æloc_•œy_åì_s˚v_öfo_°r_hèb
 (, *);

5206 * 
ggc_Æloc_•œy_åì_tm_ª°¨t_node_hèb
 (, *);

5207 * 
ggc_Æloc_•œy_åì_åì_m≠_hèb
 (, *);

5208 * 
ggc_Æloc_•œy_åì_c⁄°™t_des¸ùt‹_πx_hèb
 (, *);

5209 * 
ggc_Æloc_•œy_åì_c⁄°™t_des¸ùt‹_åì_hèb
 (, *);

5210 * 
ggc_Æloc_•œy_åì_obje˘_block_hèb
 (, *);

5211 * 
ggc_Æloc_•œy_åì_£˘i⁄_hèb
 (, *);

5212 * 
ggc_Æloc_•œy_åì_åì_¥i‹ôy_m≠_hèb
 (, *);

5213 * 
ggc_Æloc_•œy_åì_åì_vec_m≠_hèb
 (, *);

5214 * 
ggc_Æloc_•œy_åì_åì_de˛_m≠_hèb
 (, *);

5215 * 
ggc_Æloc_•œy_åì_ty≥_hash_hèb
 (, *);

5216 * 
ggc_Æloc_•œy_åì_ãmp_¶Ÿ_addªss_íåy_hèb
 (, *);

5217 * 
ggc_Æloc_•œy_åì_throw_°mt_node_hèb
 (, *);

5218 * 
ggc_Æloc_•œy_åì_ªg_©ås_hèb
 (, *);

5219 * 
ggc_Æloc_•œy_åì_πx_def_hèb
 (, *);

5220 * 
ggc_Æloc_•œy_åì_addr_èbÀ_íåy_°ru˘_hèb
 (, *);

5221 * 
ggc_Æloc_•œy_åì_ˇched_dw_loc_li°_def_hèb
 (, *);

5222 * 
ggc_Æloc_•œy_åì_v¨_loc_li°_def_hèb
 (, *);

5223 * 
ggc_Æloc_•œy_åì_dõ_°ru˘_hèb
 (, *);

5224 * 
ggc_Æloc_•œy_åì_dw¨f_fûe_d©a_hèb
 (, *);

5225 * 
ggc_Æloc_•œy_åì_ödúe˘_°rög_node_hèb
 (, *);

5226 * 
ggc_Æloc_•œy_åì_°r_åì_node_•œy_åì_s
 (, *);

5227 * 
ggc_Æloc_•œy_åì_cgøph_fun˘i⁄_vîsi⁄_öfo_hèb
 (, *);

5228 * 
ggc_Æloc_•œy_åì_sˇœr_sˇœr_•œy_åì_s
 (, *);

5229 * 
ggc_Æloc_•œy_åì_symèb_node_hèb
 (, *);

5230 * 
ggc_Æloc_•œy_åì_cgøph_edge_hèb
 (, *);

5231 * 
ggc_Æloc_•œy_åì_lo›_exô_hèb
 (, *);

5232 * 
ggc_Æloc_•œy_åì_ty≥s_u£d_by_v¨s_íåy_hèb
 (, *);

5233 * 
ggc_Æloc_•œy_åì_åì_node_hèb
 (, *);

5234 * 
ggc_Æloc_•œy_åì_libfunc_íåy_hèb
 (, *);

	@include/hard-reg-set.h

20 #i‚de‡
GCC_HARD_REG_SET_H


21 
	#GCC_HARD_REG_SET_H


	)

41 
	tHOST_WIDEST_FAST_INT
 
	tHARD_REG_ELT_TYPE
;

43 #i‡
FIRST_PSEUDO_REGISTER
 <
HOST_BITS_PER_WIDEST_FAST_INT


45 
	#HARD_REG_SET
 
HARD_REG_ELT_TYPE


	)

49 
	#HARD_REG_SET_LONGS
 \

50 ((
FIRST_PSEUDO_REGISTER
 + 
HOST_BITS_PER_WIDEST_FAST_INT
 - 1) \

51 / 
HOST_BITS_PER_WIDEST_FAST_INT
)

	)

52 
HARD_REG_ELT_TYPE
 
	tHARD_REG_SET
[
HARD_REG_SET_LONGS
];

59 
	sh¨d_ªg_£t_c⁄èöî


61 
HARD_REG_SET
 
	m£t
;

67 
	#HARD_CONST
(
X
Ë((
HARD_REG_ELT_TYPE
Ë(X))

	)

99 
	#UHOST_BITS_PER_WIDE_INT
 ((Ë
HOST_BITS_PER_WIDEST_FAST_INT
)

	)

101 #ifde‡
HARD_REG_SET


103 
	#SET_HARD_REG_BIT
(
SET
, 
BIT
) \

104 ((
SET
Ë|
	`HARD_CONST
 (1Ë<< (
BIT
))

	)

105 
	#CLEAR_HARD_REG_BIT
(
SET
, 
BIT
) \

106 ((
SET
Ë&~(
	`HARD_CONST
 (1Ë<< (
BIT
)))

	)

107 
	#TEST_HARD_REG_BIT
(
SET
, 
BIT
) \

108 (!!((
SET
Ë& (
	`HARD_CONST
 (1Ë<< (
BIT
))))

	)

110 
	#CLEAR_HARD_REG_SET
(
TO
Ë((TOË
	`HARD_CONST
 (0))

	)

111 
	#SET_HARD_REG_SET
(
TO
Ë((TOË~ 
	`HARD_CONST
 (0))

	)

113 
	#COPY_HARD_REG_SET
(
TO
, 
FROM
Ë((TOË(FROM))

	)

114 
	#COMPL_HARD_REG_SET
(
TO
, 
FROM
Ë((TOË~(FROM))

	)

116 
	#IOR_HARD_REG_SET
(
TO
, 
FROM
Ë((TOË|(FROM))

	)

117 
	#IOR_COMPL_HARD_REG_SET
(
TO
, 
FROM
Ë((TOË|~ (FROM))

	)

118 
	#AND_HARD_REG_SET
(
TO
, 
FROM
Ë((TOË&(FROM))

	)

119 
	#AND_COMPL_HARD_REG_SET
(
TO
, 
FROM
Ë((TOË&~ (FROM))

	)

121 
ölöe
 
boﬁ


122 
	$h¨d_ªg_£t_sub£t_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

124  (
x
 & ~
y
Ë=
	`HARD_CONST
 (0);

125 
	}
}

127 
ölöe
 
boﬁ


128 
	$h¨d_ªg_£t_equÆ_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

130  
x
 =
y
;

131 
	}
}

133 
ölöe
 
boﬁ


134 
	$h¨d_ªg_£t_öãr£˘_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

136  (
x
 & 
y
Ë!
	`HARD_CONST
 (0);

137 
	}
}

139 
ölöe
 
boﬁ


140 
	$h¨d_ªg_£t_em±y_p
 (c⁄° 
HARD_REG_SET
 
x
)

142  
x
 =
	`HARD_CONST
 (0);

143 
	}
}

147 
	#SET_HARD_REG_BIT
(
SET
, 
BIT
) \

148 ((
SET
)[(
BIT
Ë/ 
UHOST_BITS_PER_WIDE_INT
] \

149 |
	`HARD_CONST
 (1Ë<< ((
BIT
Ë% 
UHOST_BITS_PER_WIDE_INT
))

	)

151 
	#CLEAR_HARD_REG_BIT
(
SET
, 
BIT
) \

152 ((
SET
)[(
BIT
Ë/ 
UHOST_BITS_PER_WIDE_INT
] \

153 &~(
	`HARD_CONST
 (1Ë<< ((
BIT
Ë% 
UHOST_BITS_PER_WIDE_INT
)))

	)

155 
	#TEST_HARD_REG_BIT
(
SET
, 
BIT
) \

156 (!!((
SET
)[(
BIT
Ë/ 
UHOST_BITS_PER_WIDE_INT
] \

157 & (
	`HARD_CONST
 (1Ë<< ((
BIT
Ë% 
UHOST_BITS_PER_WIDE_INT
))))

	)

159 #i‡
FIRST_PSEUDO_REGISTER
 <2*
HOST_BITS_PER_WIDEST_FAST_INT


160 
	#CLEAR_HARD_REG_SET
(
TO
) \

161 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

162 
sˇn_ç_
[0] = 0; \

163 
sˇn_ç_
[1] = 0; } 0)

	)

165 
	#SET_HARD_REG_SET
(
TO
) \

166 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

167 
sˇn_ç_
[0] = -1; \

168 
sˇn_ç_
[1] = -1; } 0)

	)

170 
	#COPY_HARD_REG_SET
(
TO
, 
FROM
) \

171 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

172 
sˇn_ç_
[0] = 
sˇn_Â_
[0]; \

173 
sˇn_ç_
[1] = 
sˇn_Â_
[1]; } 0)

	)

175 
	#COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

176 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

177 
sˇn_ç_
[0] = ~ 
sˇn_Â_
[0]; \

178 
sˇn_ç_
[1] = ~ 
sˇn_Â_
[1]; } 0)

	)

180 
	#AND_HARD_REG_SET
(
TO
, 
FROM
) \

181 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

182 
sˇn_ç_
[0] &
sˇn_Â_
[0]; \

183 
sˇn_ç_
[1] &
sˇn_Â_
[1]; } 0)

	)

185 
	#AND_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

186 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

187 
sˇn_ç_
[0] &~ 
sˇn_Â_
[0]; \

188 
sˇn_ç_
[1] &~ 
sˇn_Â_
[1]; } 0)

	)

190 
	#IOR_HARD_REG_SET
(
TO
, 
FROM
) \

191 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

192 
sˇn_ç_
[0] |
sˇn_Â_
[0]; \

193 
sˇn_ç_
[1] |
sˇn_Â_
[1]; } 0)

	)

195 
	#IOR_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

196 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

197 
sˇn_ç_
[0] |~ 
sˇn_Â_
[0]; \

198 
sˇn_ç_
[1] |~ 
sˇn_Â_
[1]; } 0)

	)

200 
ölöe
 
boﬁ


201 
	$h¨d_ªg_£t_sub£t_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

203  (
x
[0] & ~
y
[0]) == 0 && (x[1] & ~y[1]) == 0;

204 
	}
}

206 
ölöe
 
boﬁ


207 
	$h¨d_ªg_£t_equÆ_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

209  
x
[0] =
y
[0] && x[1] == y[1];

210 
	}
}

212 
ölöe
 
boﬁ


213 
	$h¨d_ªg_£t_öãr£˘_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

215  (
x
[0] & 
y
[0]) != 0 || (x[1] & y[1]) != 0;

216 
	}
}

218 
ölöe
 
boﬁ


219 
	$h¨d_ªg_£t_em±y_p
 (c⁄° 
HARD_REG_SET
 
x
)

221  
x
[0] == 0 && x[1] == 0;

222 
	}
}

225 #i‡
FIRST_PSEUDO_REGISTER
 <3*
HOST_BITS_PER_WIDEST_FAST_INT


226 
	#CLEAR_HARD_REG_SET
(
TO
) \

227 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

228 
sˇn_ç_
[0] = 0; \

229 
sˇn_ç_
[1] = 0; \

230 
sˇn_ç_
[2] = 0; } 0)

	)

232 
	#SET_HARD_REG_SET
(
TO
) \

233 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

234 
sˇn_ç_
[0] = -1; \

235 
sˇn_ç_
[1] = -1; \

236 
sˇn_ç_
[2] = -1; } 0)

	)

238 
	#COPY_HARD_REG_SET
(
TO
, 
FROM
) \

239 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

240 
sˇn_ç_
[0] = 
sˇn_Â_
[0]; \

241 
sˇn_ç_
[1] = 
sˇn_Â_
[1]; \

242 
sˇn_ç_
[2] = 
sˇn_Â_
[2]; } 0)

	)

244 
	#COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

245 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

246 
sˇn_ç_
[0] = ~ 
sˇn_Â_
[0]; \

247 
sˇn_ç_
[1] = ~ 
sˇn_Â_
[1]; \

248 
sˇn_ç_
[2] = ~ 
sˇn_Â_
[2]; } 0)

	)

250 
	#AND_HARD_REG_SET
(
TO
, 
FROM
) \

251 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

252 
sˇn_ç_
[0] &
sˇn_Â_
[0]; \

253 
sˇn_ç_
[1] &
sˇn_Â_
[1]; \

254 
sˇn_ç_
[2] &
sˇn_Â_
[2]; } 0)

	)

256 
	#AND_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

257 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

258 
sˇn_ç_
[0] &~ 
sˇn_Â_
[0]; \

259 
sˇn_ç_
[1] &~ 
sˇn_Â_
[1]; \

260 
sˇn_ç_
[2] &~ 
sˇn_Â_
[2]; } 0)

	)

262 
	#IOR_HARD_REG_SET
(
TO
, 
FROM
) \

263 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

264 
sˇn_ç_
[0] |
sˇn_Â_
[0]; \

265 
sˇn_ç_
[1] |
sˇn_Â_
[1]; \

266 
sˇn_ç_
[2] |
sˇn_Â_
[2]; } 0)

	)

268 
	#IOR_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

269 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

270 
sˇn_ç_
[0] |~ 
sˇn_Â_
[0]; \

271 
sˇn_ç_
[1] |~ 
sˇn_Â_
[1]; \

272 
sˇn_ç_
[2] |~ 
sˇn_Â_
[2]; } 0)

	)

274 
ölöe
 
boﬁ


275 
	$h¨d_ªg_£t_sub£t_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

277  ((
x
[0] & ~
y
[0]) == 0

278 && (
x
[1] & ~
y
[1]) == 0

279 && (
x
[2] & ~
y
[2]) == 0);

280 
	}
}

282 
ölöe
 
boﬁ


283 
	$h¨d_ªg_£t_equÆ_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

285  
x
[0] =
y
[0] && x[1] == y[1] && x[2] == y[2];

286 
	}
}

288 
ölöe
 
boﬁ


289 
	$h¨d_ªg_£t_öãr£˘_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

291  ((
x
[0] & 
y
[0]) != 0

292 || (
x
[1] & 
y
[1]) != 0

293 || (
x
[2] & 
y
[2]) != 0);

294 
	}
}

296 
ölöe
 
boﬁ


297 
	$h¨d_ªg_£t_em±y_p
 (c⁄° 
HARD_REG_SET
 
x
)

299  
x
[0] == 0 && x[1] == 0 && x[2] == 0;

300 
	}
}

303 #i‡
FIRST_PSEUDO_REGISTER
 <4*
HOST_BITS_PER_WIDEST_FAST_INT


304 
	#CLEAR_HARD_REG_SET
(
TO
) \

305 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

306 
sˇn_ç_
[0] = 0; \

307 
sˇn_ç_
[1] = 0; \

308 
sˇn_ç_
[2] = 0; \

309 
sˇn_ç_
[3] = 0; } 0)

	)

311 
	#SET_HARD_REG_SET
(
TO
) \

312 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

313 
sˇn_ç_
[0] = -1; \

314 
sˇn_ç_
[1] = -1; \

315 
sˇn_ç_
[2] = -1; \

316 
sˇn_ç_
[3] = -1; } 0)

	)

318 
	#COPY_HARD_REG_SET
(
TO
, 
FROM
) \

319 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

320 
sˇn_ç_
[0] = 
sˇn_Â_
[0]; \

321 
sˇn_ç_
[1] = 
sˇn_Â_
[1]; \

322 
sˇn_ç_
[2] = 
sˇn_Â_
[2]; \

323 
sˇn_ç_
[3] = 
sˇn_Â_
[3]; } 0)

	)

325 
	#COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

326 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

327 
sˇn_ç_
[0] = ~ 
sˇn_Â_
[0]; \

328 
sˇn_ç_
[1] = ~ 
sˇn_Â_
[1]; \

329 
sˇn_ç_
[2] = ~ 
sˇn_Â_
[2]; \

330 
sˇn_ç_
[3] = ~ 
sˇn_Â_
[3]; } 0)

	)

332 
	#AND_HARD_REG_SET
(
TO
, 
FROM
) \

333 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

334 
sˇn_ç_
[0] &
sˇn_Â_
[0]; \

335 
sˇn_ç_
[1] &
sˇn_Â_
[1]; \

336 
sˇn_ç_
[2] &
sˇn_Â_
[2]; \

337 
sˇn_ç_
[3] &
sˇn_Â_
[3]; } 0)

	)

339 
	#AND_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

340 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

341 
sˇn_ç_
[0] &~ 
sˇn_Â_
[0]; \

342 
sˇn_ç_
[1] &~ 
sˇn_Â_
[1]; \

343 
sˇn_ç_
[2] &~ 
sˇn_Â_
[2]; \

344 
sˇn_ç_
[3] &~ 
sˇn_Â_
[3]; } 0)

	)

346 
	#IOR_HARD_REG_SET
(
TO
, 
FROM
) \

347 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

348 
sˇn_ç_
[0] |
sˇn_Â_
[0]; \

349 
sˇn_ç_
[1] |
sˇn_Â_
[1]; \

350 
sˇn_ç_
[2] |
sˇn_Â_
[2]; \

351 
sˇn_ç_
[3] |
sˇn_Â_
[3]; } 0)

	)

353 
	#IOR_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

354 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

355 
sˇn_ç_
[0] |~ 
sˇn_Â_
[0]; \

356 
sˇn_ç_
[1] |~ 
sˇn_Â_
[1]; \

357 
sˇn_ç_
[2] |~ 
sˇn_Â_
[2]; \

358 
sˇn_ç_
[3] |~ 
sˇn_Â_
[3]; } 0)

	)

360 
ölöe
 
boﬁ


361 
	$h¨d_ªg_£t_sub£t_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

363  ((
x
[0] & ~
y
[0]) == 0

364 && (
x
[1] & ~
y
[1]) == 0

365 && (
x
[2] & ~
y
[2]) == 0

366 && (
x
[3] & ~
y
[3]) == 0);

367 
	}
}

369 
ölöe
 
boﬁ


370 
	$h¨d_ªg_£t_equÆ_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

372  
x
[0] =
y
[0] && x[1] == y[1] && x[2] == y[2] && x[3] == y[3];

373 
	}
}

375 
ölöe
 
boﬁ


376 
	$h¨d_ªg_£t_öãr£˘_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

378  ((
x
[0] & 
y
[0]) != 0

379 || (
x
[1] & 
y
[1]) != 0

380 || (
x
[2] & 
y
[2]) != 0

381 || (
x
[3] & 
y
[3]) != 0);

382 
	}
}

384 
ölöe
 
boﬁ


385 
	$h¨d_ªg_£t_em±y_p
 (c⁄° 
HARD_REG_SET
 
x
)

387  
x
[0] == 0 && x[1] == 0 && x[2] == 0 && x[3] == 0;

388 
	}
}

392 
	#CLEAR_HARD_REG_SET
(
TO
) \

393 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

394 
i
; \

395 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

396 *
sˇn_ç_
++ = 0; } 0)

	)

398 
	#SET_HARD_REG_SET
(
TO
) \

399 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
); \

400 
i
; \

401 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

402 *
sˇn_ç_
++ = -1; } 0)

	)

404 
	#COPY_HARD_REG_SET
(
TO
, 
FROM
) \

405 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

406 
i
; \

407 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

408 *
sˇn_ç_
++ = *
sˇn_Â_
++; } 0)

	)

410 
	#COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

411 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

412 
i
; \

413 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

414 *
sˇn_ç_
++ = ~ *
sˇn_Â_
++; } 0)

	)

416 
	#AND_HARD_REG_SET
(
TO
, 
FROM
) \

417 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

418 
i
; \

419 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

420 *
sˇn_ç_
++ &*
sˇn_Â_
++; } 0)

	)

422 
	#AND_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

423 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

424 
i
; \

425 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

426 *
sˇn_ç_
++ &~ *
sˇn_Â_
++; } 0)

	)

428 
	#IOR_HARD_REG_SET
(
TO
, 
FROM
) \

429 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

430 
i
; \

431 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

432 *
sˇn_ç_
++ |*
sˇn_Â_
++; } 0)

	)

434 
	#IOR_COMPL_HARD_REG_SET
(
TO
, 
FROM
) \

435 dÿ{ 
HARD_REG_ELT_TYPE
 *
sˇn_ç_
 = (
TO
), *
sˇn_Â_
 = (
FROM
); \

436 
i
; \

437 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++) \

438 *
sˇn_ç_
++ |~ *
sˇn_Â_
++; } 0)

	)

440 
ölöe
 
boﬁ


441 
	$h¨d_ªg_£t_sub£t_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

443 
i
;

445 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++)

446 i‡((
x
[
i
] & ~
y
[i]) != 0)

447  
Ál£
;

448  
åue
;

449 
	}
}

451 
ölöe
 
boﬁ


452 
	$h¨d_ªg_£t_equÆ_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

454 
i
;

456 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++)

457 i‡(
x
[
i
] !
y
[i])

458  
Ál£
;

459  
åue
;

460 
	}
}

462 
ölöe
 
boﬁ


463 
	$h¨d_ªg_£t_öãr£˘_p
 (c⁄° 
HARD_REG_SET
 
x
, c⁄° HARD_REG_SET 
y
)

465 
i
;

467 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++)

468 i‡((
x
[
i
] & 
y
[i]) != 0)

469  
åue
;

470  
Ál£
;

471 
	}
}

473 
ölöe
 
boﬁ


474 
	$h¨d_ªg_£t_em±y_p
 (c⁄° 
HARD_REG_SET
 
x
)

476 
i
;

478 
i
 = 0; i < 
HARD_REG_SET_LONGS
; i++)

479 i‡(
x
[
i
] != 0)

480  
Ál£
;

481  
åue
;

482 
	}
}

491 
	sh¨d_ªg_£t_ôî©‹


494 
HARD_REG_ELT_TYPE
 *
	m≥…
;

497 
	mÀngth
;

500 
	mw‹d_no
;

505 
HARD_REG_ELT_TYPE
 
	mbôs
;

508 
	#HARD_REG_ELT_BITS
 
UHOST_BITS_PER_WIDE_INT


	)

512 
ölöe
 

513 
	$h¨d_ªg_£t_ôî_öô
 (
h¨d_ªg_£t_ôî©‹
 *
ôî
, 
HARD_REG_SET
 
£t
,

514 
mö
, *
ªgno
)

516 #ifde‡
HARD_REG_SET_LONGS


517 
ôî
->
≥…
 = 
£t
;

518 
ôî
->
Àngth
 = 
HARD_REG_SET_LONGS
;

520 
ôî
->
≥…
 = &
£t
;

521 
ôî
->
Àngth
 = 1;

523 
ôî
->
w‹d_no
 = 
mö
 / 
HARD_REG_ELT_BITS
;

524 i‡(
ôî
->
w‹d_no
 < iãr->
Àngth
)

526 
ôî
->
bôs
 = iãr->
≥…
[ôî->
w‹d_no
];

527 
ôî
->
bôs
 >>
mö
 % 
HARD_REG_ELT_BITS
;

530 
mö
 +!
ôî
->
bôs
;

532 *
ªgno
 = 
mö
;

533 
	}
}

535 
ölöe
 
boﬁ


536 
	$h¨d_ªg_£t_ôî_£t
 (
h¨d_ªg_£t_ôî©‹
 *
ôî
, *
ªgno
)

541 i‡(
ôî
->
w‹d_no
 >ôî->
Àngth
)

542  
Ál£
;

544 i‡(
ôî
->
bôs
)

547 !(
ôî
->
bôs
 & 1))

549 
ôî
->
bôs
 >>= 1;

550 *
ªgno
 += 1;

552  (*
ªgno
 < 
FIRST_PSEUDO_REGISTER
);

556 *
ªgno
 = (*ªgnÿ+ 
HARD_REG_ELT_BITS
 - 1);

557 *
ªgno
 -*ªgnÿ% 
HARD_REG_ELT_BITS
;

560 ++
ôî
->
w‹d_no
 < iãr->
Àngth
)

562 
ôî
->
bôs
 = iãr->
≥…
[ôî->
w‹d_no
];

563 i‡(
ôî
->
bôs
)

565 *
ªgno
 +
HARD_REG_ELT_BITS
;

568 
	}
}

570 
ölöe
 

571 
	$h¨d_ªg_£t_ôî_√xt
 (
h¨d_ªg_£t_ôî©‹
 *
ôî
, *
ªgno
)

573 
ôî
->
bôs
 >>= 1;

574 *
ªgno
 += 1;

575 
	}
}

577 
	#EXECUTE_IF_SET_IN_HARD_REG_SET
(
SET
, 
MIN
, 
REGNUM
, 
ITER
) \

578 
	`h¨d_ªg_£t_ôî_öô
 (&(
ITER
), (
SET
), (
MIN
), &(
REGNUM
)); \

579 
	`h¨d_ªg_£t_ôî_£t
 (&(
ITER
), &(
REGNUM
)); \

580 
	`h¨d_ªg_£t_ôî_√xt
 (&(
ITER
), &(
REGNUM
)))

	)

590 
globÆ_ªgs
[
FIRST_PSEUDO_REGISTER
];

592 
	sèrgë_h¨d_ªgs
 {

594 
HARD_REG_SET
 
	mx_ac˚ssibÀ_ªg_£t
;

598 
HARD_REG_SET
 
	mx_›î™d_ªg_£t
;

604 
	mx_fixed_ªgs
[
FIRST_PSEUDO_REGISTER
];

607 
HARD_REG_SET
 
	mx_fixed_ªg_£t
;

613 
	mx_ˇŒ_u£d_ªgs
[
FIRST_PSEUDO_REGISTER
];

615 
	mx_ˇŒ_ªÆly_u£d_ªgs
[
FIRST_PSEUDO_REGISTER
];

618 
HARD_REG_SET
 
	mx_ˇŒ_u£d_ªg_£t
;

624 
HARD_REG_SET
 
	mx_ˇŒ_fixed_ªg_£t
;

632 
HARD_REG_SET
 
	mx_ªgs_övÆid©ed_by_ˇŒ
;

636 
HARD_REG_SET
 
	mx_no_ˇŒî_ßve_ªg_£t
;

639 
	mx_ªg_Æloc_‹dî
[
FIRST_PSEUDO_REGISTER
];

642 
	mx_öv_ªg_Æloc_‹dî
[
FIRST_PSEUDO_REGISTER
];

645 
HARD_REG_SET
 
	mx_ªg_˛ass_c⁄ã¡s
[
N_REG_CLASSES
];

649 
boﬁ
 
	mx_˛ass_⁄ly_fixed_ªgs
[
N_REG_CLASSES
];

652 
	mx_ªg_˛ass_size
[
N_REG_CLASSES
];

655 
ªg_˛ass
 
	mx_ªg_˛ass_sub˛as£s
[
N_REG_CLASSES
][N_REG_CLASSES];

659 
ªg_˛ass
 
	mx_ªg_˛ass_subuni⁄
[
N_REG_CLASSES
][N_REG_CLASSES];

663 
ªg_˛ass
 
	mx_ªg_˛ass_su≥runi⁄
[
N_REG_CLASSES
][N_REG_CLASSES];

666 c⁄° *
	mx_ªg_«mes
[
FIRST_PSEUDO_REGISTER
];

669 
èrgë_h¨d_ªgs
 
deÁu…_èrgë_h¨d_ªgs
;

670 #i‡
SWITCHABLE_TARGET


671 
èrgë_h¨d_ªgs
 *
this_èrgë_h¨d_ªgs
;

673 
	#this_èrgë_h¨d_ªgs
 (&
deÁu…_èrgë_h¨d_ªgs
)

	)

676 
	#ac˚ssibÀ_ªg_£t
 \

677 (
this_èrgë_h¨d_ªgs
->
x_ac˚ssibÀ_ªg_£t
)

	)

678 
	#›î™d_ªg_£t
 \

679 (
this_èrgë_h¨d_ªgs
->
x_›î™d_ªg_£t
)

	)

680 
	#fixed_ªgs
 \

681 (
this_èrgë_h¨d_ªgs
->
x_fixed_ªgs
)

	)

682 
	#fixed_ªg_£t
 \

683 (
this_èrgë_h¨d_ªgs
->
x_fixed_ªg_£t
)

	)

684 
	#ˇŒ_u£d_ªgs
 \

685 (
this_èrgë_h¨d_ªgs
->
x_ˇŒ_u£d_ªgs
)

	)

686 
	#ˇŒ_ªÆly_u£d_ªgs
 \

687 (
this_èrgë_h¨d_ªgs
->
x_ˇŒ_ªÆly_u£d_ªgs
)

	)

688 
	#ˇŒ_u£d_ªg_£t
 \

689 (
this_èrgë_h¨d_ªgs
->
x_ˇŒ_u£d_ªg_£t
)

	)

690 
	#ˇŒ_fixed_ªg_£t
 \

691 (
this_èrgë_h¨d_ªgs
->
x_ˇŒ_fixed_ªg_£t
)

	)

692 
	#ªgs_övÆid©ed_by_ˇŒ
 \

693 (
this_èrgë_h¨d_ªgs
->
x_ªgs_övÆid©ed_by_ˇŒ
)

	)

694 
	#no_ˇŒî_ßve_ªg_£t
 \

695 (
this_èrgë_h¨d_ªgs
->
x_no_ˇŒî_ßve_ªg_£t
)

	)

696 
	#ªg_Æloc_‹dî
 \

697 (
this_èrgë_h¨d_ªgs
->
x_ªg_Æloc_‹dî
)

	)

698 
	#öv_ªg_Æloc_‹dî
 \

699 (
this_èrgë_h¨d_ªgs
->
x_öv_ªg_Æloc_‹dî
)

	)

700 
	#ªg_˛ass_c⁄ã¡s
 \

701 (
this_èrgë_h¨d_ªgs
->
x_ªg_˛ass_c⁄ã¡s
)

	)

702 
	#˛ass_⁄ly_fixed_ªgs
 \

703 (
this_èrgë_h¨d_ªgs
->
x_˛ass_⁄ly_fixed_ªgs
)

	)

704 
	#ªg_˛ass_size
 \

705 (
this_èrgë_h¨d_ªgs
->
x_ªg_˛ass_size
)

	)

706 
	#ªg_˛ass_sub˛as£s
 \

707 (
this_èrgë_h¨d_ªgs
->
x_ªg_˛ass_sub˛as£s
)

	)

708 
	#ªg_˛ass_subuni⁄
 \

709 (
this_èrgë_h¨d_ªgs
->
x_ªg_˛ass_subuni⁄
)

	)

710 
	#ªg_˛ass_su≥runi⁄
 \

711 (
this_èrgë_h¨d_ªgs
->
x_ªg_˛ass_su≥runi⁄
)

	)

712 
	#ªg_«mes
 \

713 (
this_èrgë_h¨d_ªgs
->
x_ªg_«mes
)

	)

717 c⁄° * 
ªg_˛ass_«mes
[];

721 
	#REG_CANNOT_CHANGE_MODE_P
(
REGN
, 
FROM
, 
TO
) \

722 
	`CANNOT_CHANGE_MODE_CLASS
 (
FROM
, 
TO
, 
	`REGNO_REG_CLASS
 (
REGN
))

	)

	@include/hash-table.h

202 #i‚de‡
TYPED_HASHTAB_H


203 
	#TYPED_HASHTAB_H


	)

205 
	~"hashèb.h
"

211 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

212 
	sxˇŒoˇt‹


214 
Ty≥
 *
c⁄åﬁ_Æloc
 (
size_t
 
cou¡
);

215 
Ty≥
 *
d©a_Æloc
 (
size_t
 
cou¡
);

216 
c⁄åﬁ_‰ì
 (
Ty≥
 *
mem‹y
);

217 
d©a_‰ì
 (
Ty≥
 *
mem‹y
);

223 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

224 
ölöe
 
Ty≥
 *

225 
	gxˇŒoˇt‹
 <
	gTy≥
>::
	$c⁄åﬁ_Æloc
 (
size_t
 
cou¡
)

227  
°©ic_ˇ°
 <
Ty≥
 *> (
	`xˇŒoc
 (
cou¡
,  (Type)));

228 
	}
}

233 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

234 
ölöe
 
Ty≥
 *

235 
	gxˇŒoˇt‹
 <
	gTy≥
>::
	$d©a_Æloc
 (
size_t
 
cou¡
)

237  
°©ic_ˇ°
 <
Ty≥
 *> (
	`xˇŒoc
 (
cou¡
,  (Type)));

238 
	}
}

243 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

244 
ölöe
 

245 
	gxˇŒoˇt‹
 <
	gTy≥
>::
	$c⁄åﬁ_‰ì
 (
Ty≥
 *
mem‹y
)

247  ::
	`‰ì
 (
mem‹y
);

248 
	}
}

253 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

254 
ölöe
 

255 
	gxˇŒoˇt‹
 <
	gTy≥
>::
	$d©a_‰ì
 (
Ty≥
 *
mem‹y
)

257  ::
	`‰ì
 (
mem‹y
);

258 
	}
}

263 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

264 
	sty≥d_‰ì_ªmove


266 
ölöe
 
ªmove
 (
Ty≥
 *
p
);

272 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

273 
ölöe
 

274 
	gty≥d_‰ì_ªmove
 <
	gTy≥
>::
	$ªmove
 (
Ty≥
 *
p
)

276 
	`‰ì
 (
p
);

277 
	}
}

282 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

283 
	sty≥d_no›_ªmove


285 
ölöe
 
ªmove
 (
Ty≥
 *
p
);

291 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

292 
ölöe
 

293 
	gty≥d_no›_ªmove
 <
	gTy≥
>::
	$ªmove
 (
Ty≥
 *
p
 
ATTRIBUTE_UNUSED
)

295 
	}
}

300 
ãm∂©e
 <
ty≥«me
 
Ty≥
>

301 
poöãr_hash
 : 
ty≥d_no›_ªmove
 <
Ty≥
>

303 
Ty≥
 
	tvÆue_ty≥
;

304 
Ty≥
 
	tcom∑ª_ty≥
;

306 
ölöe
 
hashvÆ_t


307 
hash
 (c⁄° 
vÆue_ty≥
 *);

309 
ölöe
 

310 
equÆ
 (c⁄° 
vÆue_ty≥
 *
exi°ög
, c⁄° 
com∑ª_ty≥
 *
ˇndid©e
);

313 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

314 
ölöe
 
hashvÆ_t


315 
	gpoöãr_hash
 <
	gTy≥
>::
	$hash
 (c⁄° 
vÆue_ty≥
 *
ˇndid©e
)

319  (
hashvÆ_t
Ë((
öçå_t
)
ˇndid©e
 >> 3);

320 
	}
}

322 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

323 
ölöe
 

324 
	gpoöãr_hash
 <
	gTy≥
>::
	$equÆ
 (c⁄° 
vÆue_ty≥
 *
exi°ög
,

325 c⁄° 
com∑ª_ty≥
 *
ˇndid©e
)

327  
exi°ög
 =
ˇndid©e
;

328 
	}
}

333 
	s¥ime_ít


335 
hashvÆ_t
 
	m¥ime
;

336 
hashvÆ_t
 
	möv
;

337 
hashvÆ_t
 
	möv_m2
;

338 
hashvÆ_t
 
	mshi·
;

341 
¥ime_ít
 c⁄° 
¥ime_èb
[];

346 
hash_èbÀ_highî_¥ime_ödex
 (
n
);

347 
hashvÆ_t
 
hash_èbÀ_mod1
 (hashvÆ_à
hash
, 
ödex
);

348 
hashvÆ_t
 
hash_èbÀ_mod2
 (hashvÆ_à
hash
, 
ödex
);

353 
	gãm∂©e
 <
ty≥«me
 
	gT
>

354 
	shash_èbÀ_c⁄åﬁ


357 
T
 **
	míåõs
;

360 
size_t
 
	msize
;

363 
size_t
 
	mn_ñemíts
;

366 
size_t
 
	mn_dñëed
;

370 
	m£¨ches
;

374 
	mcﬁlisi⁄s
;

378 
	msize_¥ime_ödex
;

404 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

405 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
 = 
xˇŒoˇt‹
>

406 ˛as†
	chash_èbÀ


408 
public
:

409 
ty≥«me
 
	tDes¸ùt‹
::
	tvÆue_ty≥
 value_type;

410 
ty≥«me
 
	tDes¸ùt‹
::
	tcom∑ª_ty≥
 compare_type;

412 ˛as†
	côî©‹


414 
	mpublic
:

415 
ölöe
 
ôî©‹
 ();

416 
ölöe
 
ôî©‹
 (
vÆue_ty≥
 **, value_type **);

417 
ölöe
 
	mvÆue_ty≥
 &
	m›î©‹
 * ();

418 
¶ide
 ();

419 
ölöe
 
	môî©‹
 &
	m›î©‹
 ++ ();

420 
ölöe
 
boﬁ
 
	m›î©‹
 !(c⁄° 
ôî©‹
 &) const;

421 
	m¥iv©e
:

422 
vÆue_ty≥
 **
m_¶Ÿ
;

423 
vÆue_ty≥
 **
	mm_limô
;

426 
	g¥iv©e
:

427 
hash_èbÀ_c⁄åﬁ
 <
vÆue_ty≥
> *
hèb
;

429 
vÆue_ty≥
 **
föd_em±y_¶Ÿ_f‹_ex∑nd
 (
hashvÆ_t
 
hash
);

430 
ex∑nd
 ();

432 
	gpublic
:

433 
hash_èbÀ
 ();

434 
¸óã
 (
size_t
 
öôül_¶Ÿs
);

435 
boﬁ
 
is_¸óãd
 ();

436 
di•o£
 ();

437 
vÆue_ty≥
 *
föd
 (c⁄° vÆue_ty≥ *
vÆue
);

438 
vÆue_ty≥
 *
föd_wôh_hash
 (c⁄° 
com∑ª_ty≥
 *
com∑øbÀ
, 
hashvÆ_t
 
hash
);

439 
vÆue_ty≥
 **
föd_¶Ÿ
 (c⁄° vÆue_ty≥ *
vÆue
, 
ö£π_›ti⁄
 
ö£π
);

440 
vÆue_ty≥
 **
föd_¶Ÿ_wôh_hash
 (c⁄° 
com∑ª_ty≥
 *
com∑øbÀ
,

441 
hashvÆ_t
 
hash
, 
ö£π_›ti⁄
 
ö£π
);

442 
em±y
 ();

443 
˛ór_¶Ÿ
 (
vÆue_ty≥
 **
¶Ÿ
);

444 
ªmove_ñt
 (c⁄° 
vÆue_ty≥
 *
vÆue
);

445 
ªmove_ñt_wôh_hash
 (c⁄° 
com∑ª_ty≥
 *
com∑øbÀ
, 
hashvÆ_t
 
hash
);

446 
size_t
 
size
 ();

447 
size_t
 
ñemíts
 ();

448 
size_t
 
ñemíts_wôh_dñëed
 ();

449 
cﬁlisi⁄s
 ();

451 
	gãm∂©e
 <
ty≥«me
 
	gArgumít
,

452 (*
CÆlback
Ë(
vÆue_ty≥
 **
¶Ÿ
, 
Argumít
 
¨gumít
)>

453 
	`åavî£_n‹esize
 (
Argumít
 
¨gumít
);

455 
ãm∂©e
 <
ty≥«me
 
Argumít
,

456 (*
CÆlback
Ë(
vÆue_ty≥
 **
¶Ÿ
, 
Argumít
 
¨gumít
)>

457 
	`åavî£
 (
Argumít
 
¨gumít
);

459 
ôî©‹
 
	`begö
 ();

460 
ôî©‹
 
	`íd
 ();

461 
	}
};

466 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

467 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

468 
ölöe


469 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$hash_èbÀ
 ()

470 : 
	$hèb
 (
NULL
)

472 
	}
}

477 
ãm∂©e
 <
ty≥«me
 
Des¸ùt‹
,

478 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

479 
ölöe
 
boﬁ


480 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$is_¸óãd
 ()

482  
hèb
 !
NULL
;

483 
	}
}

488 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

489 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

490 
ölöe
 
ty≥«me
 
	gDes¸ùt‹
::
vÆue_ty≥
 *

491 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>::
	$föd
 (c⁄° 
vÆue_ty≥
 *
vÆue
)

493  
	`föd_wôh_hash
 (
vÆue
, 
Des¸ùt‹
::
	`hash
 (value));

494 
	}
}

499 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

500 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

501 
ölöe
 
ty≥«me
 
	gDes¸ùt‹
::
vÆue_ty≥
 **

502 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>

503 ::
	$föd_¶Ÿ
 (c⁄° 
vÆue_ty≥
 *
vÆue
, 
ö£π_›ti⁄
 
ö£π
)

505  
	`föd_¶Ÿ_wôh_hash
 (
vÆue
, 
Des¸ùt‹
::
	`hash
 (vÆue), 
ö£π
);

506 
	}
}

511 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

512 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

513 
ölöe
 

514 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$ªmove_ñt
 (c⁄° 
vÆue_ty≥
 *
vÆue
)

516 
	`ªmove_ñt_wôh_hash
 (
vÆue
, 
Des¸ùt‹
::
	`hash
 (value));

517 
	}
}

522 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

523 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

524 
ölöe
 
size_t


525 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$size
 ()

527  
hèb
->
size
;

528 
	}
}

533 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

534 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

535 
ölöe
 
size_t


536 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$ñemíts
 ()

538  
hèb
->
n_ñemíts
 - hèb->
n_dñëed
;

539 
	}
}

544 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

545 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

546 
ölöe
 
size_t


547 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$ñemíts_wôh_dñëed
 ()

549  
hèb
->
n_ñemíts
;

550 
	}
}

556 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

557 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

558 
ölöe
 

559 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$cﬁlisi⁄s
 ()

561 i‡(
hèb
->
£¨ches
 == 0)

564  
°©ic_ˇ°
 <> (
hèb
->
cﬁlisi⁄s
Ë/ hèb->
£¨ches
;

565 
	}
}

570 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

571 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

573 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$¸óã
 (
size_t
 
size
)

575 
size_¥ime_ödex
;

577 
size_¥ime_ödex
 = 
	`hash_èbÀ_highî_¥ime_ödex
 (
size
);

578 
size
 = 
¥ime_èb
[
size_¥ime_ödex
].
¥ime
;

580 
hèb
 = 
AŒoˇt‹
 <
hash_èbÀ_c⁄åﬁ
 <
vÆue_ty≥
> > ::
	`c⁄åﬁ_Æloc
 (1);

581 
	`gcc_as£π
 (
hèb
 !
NULL
);

582 
hèb
->
íåõs
 = 
AŒoˇt‹
 <
vÆue_ty≥
*> ::
	`d©a_Æloc
 (
size
);

583 
	`gcc_as£π
 (
hèb
->
íåõs
 !
NULL
);

584 
hèb
->
size
 = size;

585 
hèb
->
size_¥ime_ödex
 = size_prime_index;

586 
	}
}

592 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

593 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

595 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$di•o£
 ()

597 
size_t
 
size
 = 
hèb
->size;

598 
vÆue_ty≥
 **
íåõs
 = 
hèb
->entries;

600 
i
 = 
size
 - 1; i >= 0; i--)

601 i‡(
íåõs
[
i
] !
HTAB_EMPTY_ENTRY
 &&É¡rõs[i] !
HTAB_DELETED_ENTRY
)

602 
Des¸ùt‹
::
	`ªmove
 (
íåõs
[
i
]);

604 
AŒoˇt‹
 <
vÆue_ty≥
 *> ::
	`d©a_‰ì
 (
íåõs
);

605 
AŒoˇt‹
 <
hash_èbÀ_c⁄åﬁ
 <
vÆue_ty≥
> > ::
	`c⁄åﬁ_‰ì
 (
hèb
);

606 
hèb
 = 
NULL
;

607 
	}
}

617 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

618 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

619 
ty≥«me
 
	gDes¸ùt‹
::
vÆue_ty≥
 **

620 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>::
	$föd_em±y_¶Ÿ_f‹_ex∑nd
 (
hashvÆ_t
 
hash
)

622 
hashvÆ_t
 
ödex
 = 
	`hash_èbÀ_mod1
 (
hash
, 
hèb
->
size_¥ime_ödex
);

623 
size_t
 
size
 = 
hèb
->size;

624 
vÆue_ty≥
 **
¶Ÿ
 = 
hèb
->
íåõs
 + 
ödex
;

625 
hashvÆ_t
 
hash2
;

627 i‡(*
¶Ÿ
 =
HTAB_EMPTY_ENTRY
)

628  
¶Ÿ
;

629 i‡(*
¶Ÿ
 =
HTAB_DELETED_ENTRY
)

630 
	`ab‹t
 ();

632 
hash2
 = 
	`hash_èbÀ_mod2
 (
hash
, 
hèb
->
size_¥ime_ödex
);

635 
ödex
 +
hash2
;

636 i‡(
ödex
 >
size
)

637 
ödex
 -
size
;

639 
¶Ÿ
 = 
hèb
->
íåõs
 + 
ödex
;

640 i‡(*
¶Ÿ
 =
HTAB_EMPTY_ENTRY
)

641  
¶Ÿ
;

642 i‡(*
¶Ÿ
 =
HTAB_DELETED_ENTRY
)

643 
	`ab‹t
 ();

645 
	}
}

655 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

656 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

658 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$ex∑nd
 ()

660 
vÆue_ty≥
 **
€¡rõs
;

661 
vÆue_ty≥
 **
ﬁimô
;

662 
vÆue_ty≥
 **
p
;

663 
vÆue_ty≥
 **
√¡rõs
;

664 
size_t
 
nsize
, 
osize
, 
ñts
;

665 
oödex
, 
nödex
;

667 
€¡rõs
 = 
hèb
->
íåõs
;

668 
oödex
 = 
hèb
->
size_¥ime_ödex
;

669 
osize
 = 
hèb
->
size
;

670 
ﬁimô
 = 
€¡rõs
 + 
osize
;

671 
ñts
 = 
	`ñemíts
 ();

675 i‡(
ñts
 * 2 > 
osize
 || (elts * 8 < osize && osize > 32))

677 
nödex
 = 
	`hash_èbÀ_highî_¥ime_ödex
 (
ñts
 * 2);

678 
nsize
 = 
¥ime_èb
[
nödex
].
¥ime
;

682 
nödex
 = 
oödex
;

683 
nsize
 = 
osize
;

686 
√¡rõs
 = 
AŒoˇt‹
 <
vÆue_ty≥
 *> ::
	`d©a_Æloc
 (
nsize
);

687 
	`gcc_as£π
 (
√¡rõs
 !
NULL
);

688 
hèb
->
íåõs
 = 
√¡rõs
;

689 
hèb
->
size
 = 
nsize
;

690 
hèb
->
size_¥ime_ödex
 = 
nödex
;

691 
hèb
->
n_ñemíts
 -hèb->
n_dñëed
;

692 
hèb
->
n_dñëed
 = 0;

694 
p
 = 
€¡rõs
;

697 
vÆue_ty≥
 *
x
 = *
p
;

699 i‡(
x
 !
HTAB_EMPTY_ENTRY
 && x !
HTAB_DELETED_ENTRY
)

701 
vÆue_ty≥
 **
q
 = 
	`föd_em±y_¶Ÿ_f‹_ex∑nd
 (
Des¸ùt‹
::
	`hash
 (
x
));

703 *
q
 = 
x
;

706 
p
++;

708 
p
 < 
ﬁimô
);

710 
AŒoˇt‹
 <
vÆue_ty≥
 *> ::
	`d©a_‰ì
 (
€¡rõs
);

711 
	}
}

718 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

719 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

720 
ty≥«me
 
	gDes¸ùt‹
::
vÆue_ty≥
 *

721 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>

722 ::
	$föd_wôh_hash
 (c⁄° 
com∑ª_ty≥
 *
com∑øbÀ
, 
hashvÆ_t
 
hash
)

724 
hashvÆ_t
 
ödex
, 
hash2
;

725 
size_t
 
size
;

726 
vÆue_ty≥
 *
íåy
;

728 
hèb
->
£¨ches
++;

729 
size
 = 
hèb
->size;

730 
ödex
 = 
	`hash_èbÀ_mod1
 (
hash
, 
hèb
->
size_¥ime_ödex
);

732 
íåy
 = 
hèb
->
íåõs
[
ödex
];

733 i‡(
íåy
 =
HTAB_EMPTY_ENTRY


734 || (
íåy
 !
HTAB_DELETED_ENTRY
 && 
Des¸ùt‹
::
	`equÆ
 (íåy, 
com∑øbÀ
)))

735  
íåy
;

737 
hash2
 = 
	`hash_èbÀ_mod2
 (
hash
, 
hèb
->
size_¥ime_ödex
);

740 
hèb
->
cﬁlisi⁄s
++;

741 
ödex
 +
hash2
;

742 i‡(
ödex
 >
size
)

743 
ödex
 -
size
;

745 
íåy
 = 
hèb
->
íåõs
[
ödex
];

746 i‡(
íåy
 =
HTAB_EMPTY_ENTRY


747 || (
íåy
 !
HTAB_DELETED_ENTRY


748 && 
Des¸ùt‹
::
	`equÆ
 (
íåy
, 
com∑øbÀ
)))

749  
íåy
;

751 
	}
}

762 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

763 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

764 
ty≥«me
 
	gDes¸ùt‹
::
vÆue_ty≥
 **

765 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>

766 ::
	$föd_¶Ÿ_wôh_hash
 (c⁄° 
com∑ª_ty≥
 *
com∑øbÀ
, 
hashvÆ_t
 
hash
,

767 
ö£π_›ti⁄
 
ö£π
)

769 
vÆue_ty≥
 **
fú°_dñëed_¶Ÿ
;

770 
hashvÆ_t
 
ödex
, 
hash2
;

771 
size_t
 
size
;

772 
vÆue_ty≥
 *
íåy
;

774 
size
 = 
hèb
->size;

775 i‡(
ö£π
 =
INSERT
 && 
size
 * 3 <
hèb
->
n_ñemíts
 * 4)

777 
	`ex∑nd
 ();

778 
size
 = 
hèb
->size;

781 
ödex
 = 
	`hash_èbÀ_mod1
 (
hash
, 
hèb
->
size_¥ime_ödex
);

783 
hèb
->
£¨ches
++;

784 
fú°_dñëed_¶Ÿ
 = 
NULL
;

786 
íåy
 = 
hèb
->
íåõs
[
ödex
];

787 i‡(
íåy
 =
HTAB_EMPTY_ENTRY
)

788 
em±y_íåy
;

789 i‡(
íåy
 =
HTAB_DELETED_ENTRY
)

790 
fú°_dñëed_¶Ÿ
 = &
hèb
->
íåõs
[
ödex
];

791 i‡(
Des¸ùt‹
::
	`equÆ
 (
íåy
, 
com∑øbÀ
))

792  &
hèb
->
íåõs
[
ödex
];

794 
hash2
 = 
	`hash_èbÀ_mod2
 (
hash
, 
hèb
->
size_¥ime_ödex
);

797 
hèb
->
cﬁlisi⁄s
++;

798 
ödex
 +
hash2
;

799 i‡(
ödex
 >
size
)

800 
ödex
 -
size
;

802 
íåy
 = 
hèb
->
íåõs
[
ödex
];

803 i‡(
íåy
 =
HTAB_EMPTY_ENTRY
)

804 
em±y_íåy
;

805 i‡(
íåy
 =
HTAB_DELETED_ENTRY
)

807 i‡(!
fú°_dñëed_¶Ÿ
)

808 
fú°_dñëed_¶Ÿ
 = &
hèb
->
íåõs
[
ödex
];

810 i‡(
Des¸ùt‹
::
	`equÆ
 (
íåy
, 
com∑øbÀ
))

811  &
hèb
->
íåõs
[
ödex
];

814 
em±y_íåy
:

815 i‡(
ö£π
 =
NO_INSERT
)

816  
NULL
;

818 i‡(
fú°_dñëed_¶Ÿ
)

820 
hèb
->
n_dñëed
--;

821 *
fú°_dñëed_¶Ÿ
 = 
°©ic_ˇ°
 <
vÆue_ty≥
 *> (
HTAB_EMPTY_ENTRY
);

822  
fú°_dñëed_¶Ÿ
;

825 
hèb
->
n_ñemíts
++;

826  &
hèb
->
íåõs
[
ödex
];

827 
	}
}

832 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

833 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

835 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$em±y
 ()

837 
size_t
 
size
 = 
hèb
->size;

838 
vÆue_ty≥
 **
íåõs
 = 
hèb
->entries;

839 
i
;

841 
i
 = 
size
 - 1; i >= 0; i--)

842 i‡(
íåõs
[
i
] !
HTAB_EMPTY_ENTRY
 &&É¡rõs[i] !
HTAB_DELETED_ENTRY
)

843 
Des¸ùt‹
::
	`ªmove
 (
íåõs
[
i
]);

846 i‡(
size
 > 1024*1024 /  (
PTR
))

848 
nödex
 = 
	`hash_èbÀ_highî_¥ime_ödex
 (1024 /  (
PTR
));

849 
nsize
 = 
¥ime_èb
[
nödex
].
¥ime
;

851 
AŒoˇt‹
 <
vÆue_ty≥
 *> ::
	`d©a_‰ì
 (
hèb
->
íåõs
);

852 
hèb
->
íåõs
 = 
AŒoˇt‹
 <
vÆue_ty≥
 *> ::
	`d©a_Æloc
 (
nsize
);

853 
hèb
->
size
 = 
nsize
;

854 
hèb
->
size_¥ime_ödex
 = 
nödex
;

857 
	`mem£t
 (
íåõs
, 0, 
size
 *  (
vÆue_ty≥
 *));

858 
hèb
->
n_dñëed
 = 0;

859 
hèb
->
n_ñemíts
 = 0;

860 
	}
}

867 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

868 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

870 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
	$˛ór_¶Ÿ
 (
vÆue_ty≥
 **
¶Ÿ
)

872 i‡(
¶Ÿ
 < 
hèb
->
íåõs
 || slŸ >hèb->íåõ†+ hèb->
size


873 || *
¶Ÿ
 =
HTAB_EMPTY_ENTRY
 || *¶Ÿ =
HTAB_DELETED_ENTRY
)

874 
	`ab‹t
 ();

876 
Des¸ùt‹
::
	`ªmove
 (*
¶Ÿ
);

878 *
¶Ÿ
 = 
°©ic_ˇ°
 <
vÆue_ty≥
 *> (
HTAB_DELETED_ENTRY
);

879 
hèb
->
n_dñëed
++;

880 
	}
}

887 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

888 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

890 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>

891 ::
	$ªmove_ñt_wôh_hash
 (c⁄° 
com∑ª_ty≥
 *
com∑øbÀ
, 
hashvÆ_t
 
hash
)

893 
vÆue_ty≥
 **
¶Ÿ
;

895 
¶Ÿ
 = 
	`föd_¶Ÿ_wôh_hash
 (
com∑øbÀ
, 
hash
, 
NO_INSERT
);

896 i‡(*
¶Ÿ
 =
HTAB_EMPTY_ENTRY
)

899 
Des¸ùt‹
::
	`ªmove
 (*
¶Ÿ
);

901 *
¶Ÿ
 = 
°©ic_ˇ°
 <
vÆue_ty≥
 *> (
HTAB_DELETED_ENTRY
);

902 
hèb
->
n_dñëed
++;

903 
	}
}

910 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

911 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

912 
	gãm∂©e
 <
ty≥«me
 
	gArgumít
,

913 (*
CÆlback
Ë(
ty≥«me
 
Des¸ùt‹
::
vÆue_ty≥
 **
¶Ÿ
, 
Argumít
 
¨gumít
)>

915 
hash_èbÀ
 <
Des¸ùt‹
, 
AŒoˇt‹
>::
	$åavî£_n‹esize
 (
Argumít
 
¨gumít
)

917 
vÆue_ty≥
 **
¶Ÿ
;

918 
vÆue_ty≥
 **
limô
;

920 
¶Ÿ
 = 
hèb
->
íåõs
;

921 
limô
 = 
¶Ÿ
 + 
hèb
->
size
;

925 
vÆue_ty≥
 *
x
 = *
¶Ÿ
;

927 i‡(
x
 !
HTAB_EMPTY_ENTRY
 && x !
HTAB_DELETED_ENTRY
)

928 i‡(! 
	`CÆlback
 (
¶Ÿ
, 
¨gumít
))

931 ++
¶Ÿ
 < 
limô
);

932 
	}
}

938 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

939 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

940 
	gãm∂©e
 <
ty≥«me
 
	gArgumít
,

941 (*
CÆlback
Ë(
ty≥«me
 
Des¸ùt‹
::
vÆue_ty≥
 **
¶Ÿ
,

942 
Argumít
 
¨gumít
)>

944 
hash_èbÀ
 <
Des¸ùt‹
, 
AŒoˇt‹
>::
	$åavî£
 (
Argumít
 
¨gumít
)

946 
size_t
 
size
 = 
hèb
->size;

947 i‡(
	`ñemíts
 (Ë* 8 < 
size
 && size > 32)

948 
	`ex∑nd
 ();

950 
åavî£_n‹esize
 <
Argumít
, 
CÆlback
> (
¨gumít
);

951 
	}
}

958 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

959 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

960 
ölöe


961 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
::
	$ôî©‹
 ()

962 : 
	`m_¶Ÿ
 (
NULL
), 
	$m_limô
 (
NULL
)

964 
	}
}

968 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

969 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

970 
ölöe


971 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
::iterator

972 (
vÆue_ty≥
 **
¶Ÿ
, vÆue_ty≥ **
	glimô
)

973 : 
m_¶Ÿ
 (
¶Ÿ
), 
	$m_limô
 (
limô
)

975 
	}
}

979 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

980 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

981 
ölöe
 
ty≥«me
 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
vÆue_ty≥
 &

982 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
::
›î©‹
 * ()

984  **
m_¶Ÿ
;

989 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

990 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

992 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
::
	$¶ide
 ()

994  ; 
m_¶Ÿ
 < 
m_limô
; ++m_slot )

996 
vÆue_ty≥
 *
x
 = *
m_¶Ÿ
;

997 i‡(
x
 !
HTAB_EMPTY_ENTRY
 && x !
HTAB_DELETED_ENTRY
)

1000 
m_¶Ÿ
 = 
NULL
;

1001 
m_limô
 = 
NULL
;

1002 
	}
}

1006 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

1007 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

1008 
ölöe
 
ty≥«me
 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
 &

1009 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
::
›î©‹
 ++ ()

1011 ++
m_¶Ÿ
;

1012 
¶ide
 ();

1013  *
	gthis
;

1018 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

1019 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

1020 
ölöe
 
boﬁ


1021 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹
::

1022 
›î©‹
 !(c⁄° 
ôî©‹
 &
Ÿhî
) const

1024  
m_¶Ÿ
 !
Ÿhî
.m_¶Ÿ || 
m_limô
 != other.m_limit;

1031 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

1032 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

1033 
ölöe
 
ty≥«me
 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹


1034 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>::
	$begö
 ()

1036 
ôî©‹
 
	`hti
 (
hèb
->
íåõs
, hèb->íåõ†+ hèb->
size
);

1037 
hti
.
	`¶ide
 ();

1038  
hti
;

1039 
	}
}

1043 
	gãm∂©e
 <
ty≥«me
 
	gDes¸ùt‹
,

1044 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
> 
˛ass
 
	gAŒoˇt‹
>

1045 
ölöe
 
ty≥«me
 
	ghash_èbÀ
 <
	gDes¸ùt‹
, 
	gAŒoˇt‹
>::
ôî©‹


1046 
hash_èbÀ
 <
Des¸ùt‹
, 
	gAŒoˇt‹
>::
	$íd
 ()

1048  
	`ôî©‹
 ();

1049 
	}
}

1055 
	#FOR_EACH_HASH_TABLE_ELEMENT
(
HTAB
, 
RESULT
, 
TYPE
, 
ITER
) \

1056 (
ITER
Ë(
HTAB
).
	`begö
 (); \

1057 (
ITER
Ë!(
HTAB
).
	`íd
 (Ë? (
RESULT
 = &*(ITERË, 
åue
Ë: 
Ál£
; \

1058 ++(
ITER
))

	)

	@include/hashtab.h

33 #i‚de‡
__HASHTAB_H__


34 
	#__HASHTAB_H__


	)

36 #ifde‡
__˝lu•lus


40 
	~"™side˛.h
"

42 #i‚de‡
GTY


43 
	#GTY
(
X
)

	)

47 
	thashvÆ_t
;

52 
hashvÆ_t
 (*
	thèb_hash
) (const *);

59 (*
hèb_eq
) (const *, const *);

63 (*
hèb_dñ
) (*);

69 (*
hèb_åav
) (**, *);

75 *(*
	thèb_Æloc
Ë(
	tsize_t
, size_t);

78 (*
hèb_‰ì
) (*);

82 *(*
	thèb_Æloc_wôh_¨g
Ë(*, 
	tsize_t
, size_t);

83 (*
hèb_‰ì_wôh_¨g
) (*, *);

87 
	#HTAB_EMPTY_ENTRY
 ((
PTR
Ë0)

	)

92 
	#HTAB_DELETED_ENTRY
 ((
PTR
Ë1)

	)

100 
GTY
(()Ë
hèb
 {

102 
hèb_hash
 
hash_f
;

105 
hèb_eq
 
eq_f
;

108 
hèb_dñ
 
dñ_f
;

111 ** 
GTY
 ((
u£_∑øm
, 
Àngth
 ("%h.size"))Ë
íåõs
;

114 
size_t
 
size
;

117 
size_t
 
n_ñemíts
;

120 
size_t
 
n_dñëed
;

124 
£¨ches
;

128 
cﬁlisi⁄s
;

131 
hèb_Æloc
 
Æloc_f
;

132 
hèb_‰ì
 
‰ì_f
;

135 * 
GTY
((
skù
)Ë
Æloc_¨g
;

136 
hèb_Æloc_wôh_¨g
 
Æloc_wôh_¨g_f
;

137 
hèb_‰ì_wôh_¨g
 
‰ì_wôh_¨g_f
;

141 
size_¥ime_ödex
;

144 
hèb
 *
	thèb_t
;

147 
	eö£π_›ti⁄
 {
NO_INSERT
, 
INSERT
};

151 
hèb_t
 
hèb_¸óã_Æloc
 (
size_t
, 
hèb_hash
,

152 
hèb_eq
, 
hèb_dñ
,

153 
hèb_Æloc
, 
hèb_‰ì
);

155 
hèb_t
 
hèb_¸óã_Æloc_ex
 (
size_t
, 
hèb_hash
,

156 
hèb_eq
, 
hèb_dñ
,

157 *, 
hèb_Æloc_wôh_¨g
,

158 
hèb_‰ì_wôh_¨g
);

160 
hèb_t
 
hèb_¸óã_ty≥d_Æloc
 (
size_t
, 
hèb_hash
, 
hèb_eq
, 
hèb_dñ
,

161 
hèb_Æloc
, hèb_Æloc, 
hèb_‰ì
);

164 
hèb_t
 
hèb_¸óã
 (
size_t
, 
hèb_hash
, 
hèb_eq
, 
hèb_dñ
);

165 
hèb_t
 
hèb_åy_¸óã
 (
size_t
, 
hèb_hash
, 
hèb_eq
, 
hèb_dñ
);

167 
hèb_£t_fun˘i⁄s_ex
 (
hèb_t
, 
hèb_hash
,

168 
hèb_eq
, 
hèb_dñ
,

169 *, 
hèb_Æloc_wôh_¨g
,

170 
hèb_‰ì_wôh_¨g
);

172 
hèb_dñëe
 (
hèb_t
);

173 
hèb_em±y
 (
hèb_t
);

175 * 
hèb_föd
 (
hèb_t
, const *);

176 ** 
hèb_föd_¶Ÿ
 (
hèb_t
, c⁄° *, 
ö£π_›ti⁄
);

177 * 
hèb_föd_wôh_hash
 (
hèb_t
, c⁄° *, 
hashvÆ_t
);

178 ** 
hèb_föd_¶Ÿ_wôh_hash
 (
hèb_t
, const *,

179 
hashvÆ_t
, 
ö£π_›ti⁄
);

180 
hèb_˛ór_¶Ÿ
 (
hèb_t
, **);

181 
hèb_ªmove_ñt
 (
hèb_t
, *);

182 
hèb_ªmove_ñt_wôh_hash
 (
hèb_t
, *, 
hashvÆ_t
);

184 
hèb_åavî£
 (
hèb_t
, 
hèb_åav
, *);

185 
hèb_åavî£_n‹esize
 (
hèb_t
, 
hèb_åav
, *);

187 
size_t
 
hèb_size
 (
hèb_t
);

188 
size_t
 
hèb_ñemíts
 (
hèb_t
);

189 
hèb_cﬁlisi⁄s
 (
hèb_t
);

192 
hèb_hash
 
hèb_hash_poöãr
;

195 
hèb_eq
 
hèb_eq_poöãr
;

198 
hashvÆ_t
 
hèb_hash_°rög
 (const *);

201 
hashvÆ_t
 
ôî©ive_hash
 (c⁄° *, 
size_t
, hashval_t);

203 
	#ôî©ive_hash_obje˘
(
OB
,
INIT
Ë
	`ôî©ive_hash
 (&OB,  (OB), INIT)

	)

205 #ifde‡
__˝lu•lus


	@include/highlev-plugin-common.h

24 #i‚de‡
HIGHLEV_PLUGIN_COMMON_H


25 
	#HIGHLEV_PLUGIN_COMMON_H


	)

28 
	#PLUGEVT_SUCCESS
 0

	)

29 
	#PLUGEVT_NO_EVENTS
 1

	)

30 
	#PLUGEVT_NO_SUCH_EVENT
 2

	)

31 
	#PLUGEVT_NO_CALLBACK
 3

	)

	@include/hwint.h

9 #i‚de‡
GCC_HWINT_H


10 
	#GCC_HWINT_H


	)

13 
	#HOST_BITS_PER_CHAR
 
CHAR_BIT


	)

14 
	#HOST_BITS_PER_SHORT
 (
CHAR_BIT
 * 
SIZEOF_SHORT
)

	)

15 
	#HOST_BITS_PER_INT
 (
CHAR_BIT
 * 
SIZEOF_INT
)

	)

16 
	#HOST_BITS_PER_LONG
 (
CHAR_BIT
 * 
SIZEOF_LONG
)

	)

20 #i‚de‡
HOST_LONG_FORMAT


21 
	#HOST_LONG_FORMAT
 "l"

	)

26 #i‚de‡
HOST_LONG_LONG_FORMAT


27 
	#HOST_LONG_LONG_FORMAT
 "Œ"

	)

36 #i‡!
deföed
 
HAVE_LONG_LONG


37 #i‡
GCC_VERSION
 >= 3000

38 
	#HAVE_LONG_LONG
 1

	)

39 
	#SIZEOF_LONG_LONG
 8

	)

40 
sizeof_l⁄g_l⁄g_mu°_be_8
[ () == 8 ? 1 : -1];

44 #ifde‡
HAVE_LONG_LONG


45 
	#HOST_BITS_PER_LONGLONG
 (
CHAR_BIT
 * 
SIZEOF_LONG_LONG
)

	)

47 #ifde‡
HAVE___INT64


48 
	#HOST_BITS_PER___INT64
 (
CHAR_BIT
 * 
SIZEOF___INT64
)

	)

59 #i‡
HOST_BITS_PER_LONG
 >64 || !
deföed
 
NEED_64BIT_HOST_WIDE_INT


60 
	#HOST_BITS_PER_WIDE_INT
 
HOST_BITS_PER_LONG


	)

61 
	#HOST_WIDE_INT
 

	)

62 
	#HOST_WIDE_INT_C
(
X
ËX ## 
L


	)

64 #i‡
HOST_BITS_PER_LONGLONG
 >= 64

65 
	#HOST_BITS_PER_WIDE_INT
 
HOST_BITS_PER_LONGLONG


	)

66 
	#HOST_WIDE_INT
 

	)

67 
	#HOST_WIDE_INT_C
(
X
ËX ## 
LL


	)

69 #i‡
HOST_BITS_PER___INT64
 >= 64

70 
	#HOST_BITS_PER_WIDE_INT
 
HOST_BITS_PER___INT64


	)

71 
	#HOST_WIDE_INT
 
__öt64


	)

72 
	#HOST_WIDE_INT_C
(
X
ËX ## 
i64


	)

80 
	#HOST_BITS_PER_HALF_WIDE_INT
 (
HOST_BITS_PER_WIDE_INT
 / 2)

	)

81 #i‡
HOST_BITS_PER_HALF_WIDE_INT
 =
HOST_BITS_PER_LONG


82 
	#HOST_HALF_WIDE_INT
 

	)

83 
	#HOST_HALF_WIDE_INT_PRINT
 
HOST_LONG_FORMAT


	)

84 
	#HOST_HALF_WIDE_INT_PRINT_C
 "L"

	)

85 
	#HOST_HALF_WIDE_INT_PRINT_DEC
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "d"

	)

86 
	#HOST_HALF_WIDE_INT_PRINT_DEC_C
 
HOST_HALF_WIDE_INT_PRINT_DEC
 
HOST_HALF_WIDE_INT_PRINT_C


	)

87 
	#HOST_HALF_WIDE_INT_PRINT_UNSIGNED
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "u"

	)

88 
	#HOST_HALF_WIDE_INT_PRINT_HEX
 "%#" 
HOST_HALF_WIDE_INT_PRINT
 "x"

	)

89 
	#HOST_HALF_WIDE_INT_PRINT_HEX_PURE
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "x"

	)

90 #ñi‡
HOST_BITS_PER_HALF_WIDE_INT
 =
HOST_BITS_PER_INT


91 
	#HOST_HALF_WIDE_INT
 

	)

92 
	#HOST_HALF_WIDE_INT_PRINT
 ""

	)

93 
	#HOST_HALF_WIDE_INT_PRINT_C
 ""

	)

94 
	#HOST_HALF_WIDE_INT_PRINT_DEC
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "d"

	)

95 
	#HOST_HALF_WIDE_INT_PRINT_DEC_C
 
HOST_HALF_WIDE_INT_PRINT_DEC
 
HOST_HALF_WIDE_INT_PRINT_C


	)

96 
	#HOST_HALF_WIDE_INT_PRINT_UNSIGNED
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "u"

	)

97 
	#HOST_HALF_WIDE_INT_PRINT_HEX
 "%#" 
HOST_HALF_WIDE_INT_PRINT
 "x"

	)

98 
	#HOST_HALF_WIDE_INT_PRINT_HEX_PURE
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "x"

	)

99 #ñi‡
HOST_BITS_PER_HALF_WIDE_INT
 =
HOST_BITS_PER_SHORT


100 
	#HOST_HALF_WIDE_INT
 

	)

101 
	#HOST_HALF_WIDE_INT_PRINT
 ""

	)

102 
	#HOST_HALF_WIDE_INT_PRINT_C
 ""

	)

103 
	#HOST_HALF_WIDE_INT_PRINT_DEC
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "d"

	)

104 
	#HOST_HALF_WIDE_INT_PRINT_DEC_C
 
HOST_HALF_WIDE_INT_PRINT_DEC
 
HOST_HALF_WIDE_INT_PRINT_C


	)

105 
	#HOST_HALF_WIDE_INT_PRINT_UNSIGNED
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "u"

	)

106 
	#HOST_HALF_WIDE_INT_PRINT_HEX
 "%#" 
HOST_HALF_WIDE_INT_PRINT
 "x"

	)

107 
	#HOST_HALF_WIDE_INT_PRINT_HEX_PURE
 "%" 
HOST_HALF_WIDE_INT_PRINT
 "x"

	)

109 #îr‹ 
PÀa£
 
add
 
suµ‹t
 
HOST_HALF_WIDE_INT


113 
	#HOST_WIDE_INT_UC
(
X
Ë
	`HOST_WIDE_INT_C
 (X ## 
U
)

	)

114 
	#HOST_WIDE_INT_1
 
	`HOST_WIDE_INT_C
 (1)

	)

115 
	#HOST_WIDE_INT_1U
 
	`HOST_WIDE_INT_UC
 (1)

	)

116 
	#HOST_WIDE_INT_M1
 
	`HOST_WIDE_INT_C
 (-1)

	)

117 
	#HOST_WIDE_INT_M1U
 
	`HOST_WIDE_INT_UC
 (-1)

	)

122 
HOST_WIDE_INT
 
	t__gcc_ho°_wide_öt__
;

126 #i‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONG


127 
	#HOST_WIDE_INT_PRINT
 
HOST_LONG_FORMAT


	)

128 
	#HOST_WIDE_INT_PRINT_C
 "L"

	)

131 #i‡
HOST_BITS_PER_WIDE_INT
 == 64

132 
	#HOST_WIDE_INT_PRINT_DOUBLE_HEX
 \

133 "0x%" 
HOST_LONG_FORMAT
 "x%016" HOST_LONG_FORMAT "x"

	)

134 
	#HOST_WIDE_INT_PRINT_PADDED_HEX
 \

135 "%016" 
HOST_LONG_FORMAT
 "x"

	)

137 
	#HOST_WIDE_INT_PRINT_DOUBLE_HEX
 \

138 "0x%" 
HOST_LONG_FORMAT
 "x%08" HOST_LONG_FORMAT "x"

	)

139 
	#HOST_WIDE_INT_PRINT_PADDED_HEX
 \

140 "%08" 
HOST_LONG_FORMAT
 "x"

	)

143 
	#HOST_WIDE_INT_PRINT
 
HOST_LONG_LONG_FORMAT


	)

144 
	#HOST_WIDE_INT_PRINT_C
 "LL"

	)

146 
	#HOST_WIDE_INT_PRINT_DOUBLE_HEX
 \

147 "0x%" 
HOST_LONG_LONG_FORMAT
 "x%016" HOST_LONG_LONG_FORMAT "x"

	)

148 
	#HOST_WIDE_INT_PRINT_PADDED_HEX
 \

149 "%016" 
HOST_LONG_LONG_FORMAT
 "x"

	)

152 
	#HOST_WIDE_INT_PRINT_DEC
 "%" 
HOST_WIDE_INT_PRINT
 "d"

	)

153 
	#HOST_WIDE_INT_PRINT_DEC_C
 
HOST_WIDE_INT_PRINT_DEC
 
HOST_WIDE_INT_PRINT_C


	)

154 
	#HOST_WIDE_INT_PRINT_UNSIGNED
 "%" 
HOST_WIDE_INT_PRINT
 "u"

	)

155 
	#HOST_WIDE_INT_PRINT_HEX
 "%#" 
HOST_WIDE_INT_PRINT
 "x"

	)

156 
	#HOST_WIDE_INT_PRINT_HEX_PURE
 "%" 
HOST_WIDE_INT_PRINT
 "x"

	)

161 #i‡
HOST_BITS_PER_WIDE_INT
 >= 64 \

162 || (
	gHOST_BITS_PER_LONGLONG
 < 64 && 
	gHOST_BITS_PER___INT64
 < 64)

163 
	#HOST_WIDEST_INT
 
HOST_WIDE_INT


	)

164 
	#HOST_BITS_PER_WIDEST_INT
 
HOST_BITS_PER_WIDE_INT


	)

165 
	#HOST_WIDEST_INT_PRINT
 
HOST_WIDE_INT_PRINT


	)

166 
	#HOST_WIDEST_INT_PRINT_DEC
 
HOST_WIDE_INT_PRINT_DEC


	)

167 
	#HOST_WIDEST_INT_PRINT_DEC_C
 
HOST_WIDE_INT_PRINT_DEC_C


	)

168 
	#HOST_WIDEST_INT_PRINT_UNSIGNED
 
HOST_WIDE_INT_PRINT_UNSIGNED


	)

169 
	#HOST_WIDEST_INT_PRINT_HEX
 
HOST_WIDE_INT_PRINT_HEX


	)

170 
	#HOST_WIDEST_INT_PRINT_DOUBLE_HEX
 
HOST_WIDE_INT_PRINT_DOUBLE_HEX


	)

171 
	#HOST_WIDEST_INT_C
(
X
Ë
	`HOST_WIDE_INT
 (X)

	)

173 #i‡
HOST_BITS_PER_LONGLONG
 >= 64

174 
	#HOST_BITS_PER_WIDEST_INT
 
HOST_BITS_PER_LONGLONG


	)

175 
	#HOST_WIDEST_INT
 

	)

176 
	#HOST_WIDEST_INT_C
(
X
ËX ## 
LL


	)

178 #i‡
HOST_BITS_PER___INT64
 >= 64

179 
	#HOST_BITS_PER_WIDEST_INT
 
HOST_BITS_PER___INT64


	)

180 
	#HOST_WIDEST_INT
 
__öt64


	)

181 
	#HOST_WIDEST_INT_C
(
X
ËX ## 
i64


	)

186 
	#HOST_WIDEST_INT_PRINT
 
HOST_LONG_LONG_FORMAT


	)

187 
	#HOST_WIDEST_INT_PRINT_DEC
 "%" 
HOST_LONG_LONG_FORMAT
 "d"

	)

188 
	#HOST_WIDEST_INT_PRINT_DEC_C
 "%" 
HOST_LONG_LONG_FORMAT
 "dLL"

	)

189 
	#HOST_WIDEST_INT_PRINT_UNSIGNED
 "%" 
HOST_LONG_LONG_FORMAT
 "u"

	)

190 
	#HOST_WIDEST_INT_PRINT_HEX
 "%#" 
HOST_LONG_LONG_FORMAT
 "x"

	)

191 
	#HOST_WIDEST_INT_PRINT_DOUBLE_HEX
 \

192 "0x%" 
HOST_LONG_LONG_FORMAT
 "x%016" HOST_LONG_LONG_FORMAT "x"

	)

202 #ifde‡
USE_LONG_LONG_FOR_WIDEST_FAST_INT


203 #ifde‡
HAVE_LONG_LONG


204 
	#HOST_WIDEST_FAST_INT
 

	)

205 
	#HOST_BITS_PER_WIDEST_FAST_INT
 
HOST_BITS_PER_LONGLONG


	)

206 #ñi‡
deföed
 (
HAVE___INT64
)

207 
	#HOST_WIDEST_FAST_INT
 
__öt64


	)

208 
	#HOST_BITS_PER_WIDEST_FAST_INT
 
HOST_BITS_PER___INT64


	)

214 
	#HOST_WIDEST_FAST_INT
 

	)

215 
	#HOST_BITS_PER_WIDEST_FAST_INT
 
HOST_BITS_PER_LONG


	)

219 #i‡
GCC_VERSION
 < 3004

221 
˛z_hwi
 (
HOST_WIDE_INT
 
x
);

222 
˘z_hwi
 (
HOST_WIDE_INT
 
x
);

223 
ffs_hwi
 (
HOST_WIDE_INT
 
x
);

226 
p›cou¡_hwi
 (
HOST_WIDE_INT
 
x
);

229 
exa˘_log2
 (
HOST_WIDE_INT
);

232 
Êo‹_log2
 (
HOST_WIDE_INT
);

235 
˚û_log2
 (
HOST_WIDE_INT
);

240 
ölöe
 

241 
	$˛z_hwi
 (
HOST_WIDE_INT
 
x
)

243 i‡(
x
 == 0)

244  
HOST_BITS_PER_WIDE_INT
;

245 #i‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONG


246  
	`__buûtö_˛zl
 (
x
);

247 #ñi‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONGLONG


248  
	`__buûtö_˛zŒ
 (
x
);

250  
	`__buûtö_˛z
 (
x
);

252 
	}
}

254 
ölöe
 

255 
	$˘z_hwi
 (
HOST_WIDE_INT
 
x
)

257 i‡(
x
 == 0)

258  
HOST_BITS_PER_WIDE_INT
;

259 #i‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONG


260  
	`__buûtö_˘zl
 (
x
);

261 #ñi‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONGLONG


262  
	`__buûtö_˘zŒ
 (
x
);

264  
	`__buûtö_˘z
 (
x
);

266 
	}
}

268 
ölöe
 

269 
	$ffs_hwi
 (
HOST_WIDE_INT
 
x
)

271 #i‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONG


272  
	`__buûtö_ff¶
 (
x
);

273 #ñi‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONGLONG


274  
	`__buûtö_ff¶l
 (
x
);

276  
	`__buûtö_ffs
 (
x
);

278 
	}
}

280 
ölöe
 

281 
	$p›cou¡_hwi
 (
HOST_WIDE_INT
 
x
)

283 #i‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONG


284  
	`__buûtö_p›cou¡l
 (
x
);

285 #ñi‡
HOST_BITS_PER_WIDE_INT
 =
HOST_BITS_PER_LONGLONG


286  
	`__buûtö_p›cou¡Œ
 (
x
);

288  
	`__buûtö_p›cou¡
 (
x
);

290 
	}
}

292 
ölöe
 

293 
	$Êo‹_log2
 (
HOST_WIDE_INT
 
x
)

295  
HOST_BITS_PER_WIDE_INT
 - 1 - 
	`˛z_hwi
 (
x
);

296 
	}
}

298 
ölöe
 

299 
	$˚û_log2
 (
HOST_WIDE_INT
 
x
)

301  
	`Êo‹_log2
 (
x
 - 1) + 1;

302 
	}
}

304 
ölöe
 

305 
	$exa˘_log2
 (
HOST_WIDE_INT
 
x
)

307  
x
 =(x & -xË&& x ? 
	`˘z_hwi
 (x) : -1;

308 
	}
}

312 
	#HOST_WIDE_INT_MIN
 (
HOST_WIDE_INT
) \

313 ((
HOST_WIDE_INT
Ë1 << (
HOST_BITS_PER_WIDE_INT
 - 1))

	)

314 
	#HOST_WIDE_INT_MAX
 (~(
HOST_WIDE_INT_MIN
))

	)

316 
HOST_WIDE_INT
 
abs_hwi
 (HOST_WIDE_INT);

317 
HOST_WIDE_INT
 
absu_hwi
 (HOST_WIDE_INT);

318 
HOST_WIDE_INT
 
gcd
 (HOST_WIDE_INT, HOST_WIDE_INT);

319 
HOST_WIDE_INT
 
pos_mul_hwi
 (HOST_WIDE_INT, HOST_WIDE_INT);

320 
HOST_WIDE_INT
 
mul_hwi
 (HOST_WIDE_INT, HOST_WIDE_INT);

321 
HOST_WIDE_INT
 
Àa°_comm⁄_mu…ùÀ
 (HOST_WIDE_INT, HOST_WIDE_INT);

325 
ölöe
 
HOST_WIDE_INT


326 
	$£xt_hwi
 (
HOST_WIDE_INT
 
§c
, 
¥ec
)

328 i‡(
¥ec
 =
HOST_BITS_PER_WIDE_INT
)

329  
§c
;

332 
	`gcc_checkög_as£π
 (
¥ec
 < 
HOST_BITS_PER_WIDE_INT
);

333 
shi·
 = 
HOST_BITS_PER_WIDE_INT
 - 
¥ec
;

334  (
§c
 << 
shi·
) >> shift;

336 
	}
}

339 
ölöe
 
HOST_WIDE_INT


340 
	$zext_hwi
 (
HOST_WIDE_INT
 
§c
, 
¥ec
)

342 i‡(
¥ec
 =
HOST_BITS_PER_WIDE_INT
)

343  
§c
;

346 
	`gcc_checkög_as£π
 (
¥ec
 < 
HOST_BITS_PER_WIDE_INT
);

347  
§c
 & (((
HOST_WIDE_INT
Ë1 << 
¥ec
) - 1);

349 
	}
}

	@include/incpath.h

18 
•lô_quŸe_chaö
 ();

19 
add_∑th
 (*, , , 
boﬁ
);

20 
ªgi°î_ö˛ude_chaös
 (
˝p_ªadî
 *, const *,

23 
add_˝p_dú_∑th
 (
˝p_dú
 *, );

24 
˝p_dú
 *
gë_added_˝p_dús
 ();

26 
	sèrgë_c_ö˝©h_s
 {

28 (*
	mexåa_¥e_ö˛udes
) (const *, const *, );

29 (*
	mexåa_ö˛udes
) (const *, const *, );

32 
èrgë_c_ö˝©h_s
 
èrgë_c_ö˝©h
;

34 íum { 
	mQUOTE
 = 0, 
	mBRACKET
, 
	mSYSTEM
, 
	mAFTER
 };

	@include/input.h

21 #i‚de‡
GCC_INPUT_H


22 
	#GCC_INPUT_H


	)

24 
	~"löe-m≠.h
"

26 
GTY
(()Ë
löe_m≠s
 *
löe_èbÀ
;

29 
	#UNKNOWN_LOCATION
 ((
sour˚_loˇti⁄
Ë0)

	)

32 
	#BUILTINS_LOCATION
 ((
sour˚_loˇti⁄
Ë1)

	)

36 
buûtös_loˇti⁄_check
[(
BUILTINS_LOCATION


37 < 
RESERVED_LOCATION_COUNT
) ? 1 : -1];

39 
ex∑nded_loˇti⁄
 
ex∑nd_loˇti⁄
 (
sour˚_loˇti⁄
);

40 c⁄° *
loˇti⁄_gë_sour˚_löe
 (
ex∑nded_loˇti⁄
 
xloc
,

41 *
löe_size
);

42 
ex∑nded_loˇti⁄
 
ex∑nd_loˇti⁄_to_•ñlög_poöt
 (
sour˚_loˇti⁄
);

43 
sour˚_loˇti⁄
 
ex∑nsi⁄_poöt_loˇti⁄_if_ö_sy°em_hódî
 (source_location);

47 
sour˚_loˇti⁄
 
	tloˇti⁄_t
;

49 
loˇti⁄_t
 
öput_loˇti⁄
;

51 
	#LOCATION_FILE
(
LOC
Ë((
	`ex∑nd_loˇti⁄
 (LOC)).
fûe
)

	)

52 
	#LOCATION_LINE
(
LOC
Ë((
	`ex∑nd_loˇti⁄
 (LOC)).
löe
)

	)

53 
	#LOCATION_COLUMN
(
LOC
)((
	`ex∑nd_loˇti⁄
 (LOC)).
cﬁumn
)

	)

54 
	#LOCATION_LOCUS
(
LOC
) \

55 ((
	`IS_ADHOC_LOC
 (
LOC
)Ë? 
	`gë_loˇti⁄_‰om_adhoc_loc
 (
löe_èbÀ
, LOC) \

56 : (
LOC
))

	)

57 
	#LOCATION_BLOCK
(
LOC
) \

58 ((
åì
Ë((
	`IS_ADHOC_LOC
 (
LOC
)Ë? 
	`gë_d©a_‰om_adhoc_loc
 (
löe_èbÀ
, (LOC)) \

59 : 
NULL
))

	)

61 
	#ö_sy°em_hódî_©
(
LOC
) \

62 ((
	`löem≠_loˇti⁄_ö_sy°em_hódî_p
 (
löe_èbÀ
, 
LOC
)))

	)

64 
dump_löe_èbÀ_°©i°ics
 ();

66 
dügno°ics_fûe_ˇche_föi
 ();

	@include/insn-codes.h

4 #i‚de‡
GCC_INSN_CODES_H


5 
	#GCC_INSN_CODES_H


	)

7 
	eö¢_code
 {

8 
	mCODE_FOR_nŸhög
 = 0,

10 
	mCODE_FOR_addsi3_com∑ª0
 = 5,

11 
	mCODE_FOR_cmpsi2_add√g
 = 8,

12 
	mCODE_FOR_subsi3_com∑ª
 = 35,

13 
	mCODE_FOR_mulhisi3
 = 61,

14 
	mCODE_FOR_maddhisi4
 = 65,

15 
	mCODE_FOR_maddhidi4
 = 68,

16 
	mCODE_FOR_ösv_zîo
 = 82,

17 
	mCODE_FOR_ösv_t2
 = 83,

18 
	mCODE_FOR_™dsi_nŸsi_si
 = 87,

19 
	mCODE_FOR_™dsi_nŸ_shi·si_si
 = 88,

20 
	mCODE_FOR_¨m_ashldi3_1bô
 = 118,

21 
	mCODE_FOR_¨m_ashrdi3_1bô
 = 119,

22 
	mCODE_FOR_¨m_lshrdi3_1bô
 = 120,

23 
	mCODE_FOR_u«lig√d_lﬂdsi
 = 127,

24 
	mCODE_FOR_u«lig√d_lﬂdhis
 = 128,

25 
	mCODE_FOR_u«lig√d_lﬂdhiu
 = 129,

26 
	mCODE_FOR_u«lig√d_°‹esi
 = 130,

27 
	mCODE_FOR_u«lig√d_°‹ehi
 = 131,

28 
	mCODE_FOR_u«lig√d_lﬂddi
 = 132,

29 
	mCODE_FOR_u«lig√d_°‹edi
 = 133,

30 
	mCODE_FOR_extzv_t2
 = 135,

31 
	mCODE_FOR_divsi3
 = 136,

32 
	mCODE_FOR_udivsi3
 = 137,

33 
	mCODE_FOR_⁄e_cm∂di2
 = 145,

34 
	mCODE_FOR_zîo_exãndqidi2
 = 149,

35 
	mCODE_FOR_zîo_exãndhidi2
 = 150,

36 
	mCODE_FOR_zîo_exãndsidi2
 = 151,

37 
	mCODE_FOR_exãndqidi2
 = 152,

38 
	mCODE_FOR_exãndhidi2
 = 153,

39 
	mCODE_FOR_exãndsidi2
 = 154,

40 
	mCODE_FOR_pic_lﬂd_addr_unifõd
 = 172,

41 
	mCODE_FOR_pic_lﬂd_addr_32bô
 = 173,

42 
	mCODE_FOR_pic_lﬂd_addr_thumb1
 = 174,

43 
	mCODE_FOR_pic_add_dŸ_∂us_four
 = 175,

44 
	mCODE_FOR_pic_add_dŸ_∂us_eight
 = 176,

45 
	mCODE_FOR_és_lﬂd_dŸ_∂us_eight
 = 177,

46 
	#CODE_FOR_pic_off£t_¨m
 
CODE_FOR_nŸhög


	)

47 
	mCODE_FOR_¨m_c⁄d_bønch
 = 193,

48 
	mCODE_FOR_blockage
 = 220,

49 
	mCODE_FOR_¨m_ˇ£si_öã∫Æ
 = 221,

50 
	mCODE_FOR_n›
 = 224,

51 
	mCODE_FOR_å≠
 = 225,

52 
	mCODE_FOR_movc⁄d_addsi
 = 248,

53 
	mCODE_FOR_movc⁄d
 = 249,

54 
	mCODE_FOR_°ack_tõ
 = 283,

55 
	mCODE_FOR_Æign_4
 = 289,

56 
	mCODE_FOR_Æign_8
 = 290,

57 
	mCODE_FOR_c⁄°èbÀ_íd
 = 291,

58 
	mCODE_FOR_c⁄°èbÀ_1
 = 292,

59 
	mCODE_FOR_c⁄°èbÀ_2
 = 293,

60 
	mCODE_FOR_c⁄°èbÀ_4
 = 294,

61 
	mCODE_FOR_c⁄°èbÀ_8
 = 295,

62 
	mCODE_FOR_c⁄°èbÀ_16
 = 296,

63 
	mCODE_FOR_˛zsi2
 = 297,

64 
	mCODE_FOR_rbôsi2
 = 298,

65 
	mCODE_FOR_¥e„tch
 = 299,

66 
	mCODE_FOR_f‹˚_ªgi°î_u£
 = 300,

67 
	mCODE_FOR_¨m_eh_ªtu∫
 = 301,

68 
	mCODE_FOR_lﬂd_ç_h¨d
 = 302,

69 
	mCODE_FOR_lﬂd_ç_so·
 = 303,

70 
	mCODE_FOR_ésˇŒ
 = 304,

71 
	mCODE_FOR_¸c32b
 = 315,

72 
	mCODE_FOR_¸c32h
 = 316,

73 
	mCODE_FOR_¸c32w
 = 317,

74 
	mCODE_FOR_¸c32cb
 = 318,

75 
	mCODE_FOR_¸c32ch
 = 319,

76 
	mCODE_FOR_¸c32cw
 = 320,

77 
	mCODE_FOR_tbc°v8qi
 = 379,

78 
	mCODE_FOR_tbc°v4hi
 = 380,

79 
	mCODE_FOR_tbc°v2si
 = 381,

80 
	mCODE_FOR_iwmmxt_i‹di3
 = 382,

81 
	mCODE_FOR_iwmmxt_x‹di3
 = 383,

82 
	mCODE_FOR_iwmmxt_™ddi3
 = 384,

83 
	mCODE_FOR_iwmmxt_«nddi3
 = 385,

84 
	mCODE_FOR_movv2si_öã∫Æ
 = 389,

85 
	mCODE_FOR_movv4hi_öã∫Æ
 = 390,

86 
	mCODE_FOR_movv8qi_öã∫Æ
 = 391,

87 
	mCODE_FOR_sßddv8qi3
 = 404,

88 
	mCODE_FOR_sßddv4hi3
 = 405,

89 
	mCODE_FOR_sßddv2si3
 = 406,

90 
	mCODE_FOR_ußddv8qi3
 = 407,

91 
	mCODE_FOR_ußddv4hi3
 = 408,

92 
	mCODE_FOR_ußddv2si3
 = 409,

93 
	mCODE_FOR_sssubv8qi3
 = 413,

94 
	mCODE_FOR_sssubv4hi3
 = 414,

95 
	mCODE_FOR_sssubv2si3
 = 415,

96 
	mCODE_FOR_ussubv8qi3
 = 416,

97 
	mCODE_FOR_ussubv4hi3
 = 417,

98 
	mCODE_FOR_ussubv2si3
 = 418,

99 
	mCODE_FOR_smulv4hi3_high∑π
 = 420,

100 
	mCODE_FOR_umulv4hi3_high∑π
 = 421,

101 
	mCODE_FOR_iwmmxt_wmacs
 = 422,

102 
	mCODE_FOR_iwmmxt_wmacsz
 = 423,

103 
	mCODE_FOR_iwmmxt_wmacu
 = 424,

104 
	mCODE_FOR_iwmmxt_wmacuz
 = 425,

105 
	mCODE_FOR_iwmmxt_˛rdi
 = 426,

106 
	mCODE_FOR_iwmmxt_˛rv8qi
 = 427,

107 
	mCODE_FOR_iwmmxt_˛rv4hi
 = 428,

108 
	mCODE_FOR_iwmmxt_˛rv2si
 = 429,

109 
	mCODE_FOR_iwmmxt_uavg∫dv8qi3
 = 430,

110 
	mCODE_FOR_iwmmxt_uavg∫dv4hi3
 = 431,

111 
	mCODE_FOR_iwmmxt_uavgv8qi3
 = 432,

112 
	mCODE_FOR_iwmmxt_uavgv4hi3
 = 433,

113 
	mCODE_FOR_iwmmxt_tö§b
 = 434,

114 
	mCODE_FOR_iwmmxt_tö§h
 = 435,

115 
	mCODE_FOR_iwmmxt_tö§w
 = 436,

116 
	mCODE_FOR_iwmmxt_ãxåmub
 = 437,

117 
	mCODE_FOR_iwmmxt_ãxåmsb
 = 438,

118 
	mCODE_FOR_iwmmxt_ãxåmuh
 = 439,

119 
	mCODE_FOR_iwmmxt_ãxåmsh
 = 440,

120 
	mCODE_FOR_iwmmxt_ãxåmw
 = 441,

121 
	mCODE_FOR_iwmmxt_wshufh
 = 442,

122 
	mCODE_FOR_eqv8qi3
 = 443,

123 
	mCODE_FOR_eqv4hi3
 = 444,

124 
	mCODE_FOR_eqv2si3
 = 445,

125 
	mCODE_FOR_gtuv8qi3
 = 446,

126 
	mCODE_FOR_gtuv4hi3
 = 447,

127 
	mCODE_FOR_gtuv2si3
 = 448,

128 
	mCODE_FOR_gtv8qi3
 = 449,

129 
	mCODE_FOR_gtv4hi3
 = 450,

130 
	mCODE_FOR_gtv2si3
 = 451,

131 
	mCODE_FOR_iwmmxt_w∑ckhss
 = 464,

132 
	mCODE_FOR_iwmmxt_w∑ckwss
 = 465,

133 
	mCODE_FOR_iwmmxt_w∑ckdss
 = 466,

134 
	mCODE_FOR_iwmmxt_w∑ckhus
 = 467,

135 
	mCODE_FOR_iwmmxt_w∑ckwus
 = 468,

136 
	mCODE_FOR_iwmmxt_w∑ckdus
 = 469,

137 
	mCODE_FOR_iwmmxt_wu≈ckihb
 = 470,

138 
	mCODE_FOR_iwmmxt_wu≈ckihh
 = 471,

139 
	mCODE_FOR_iwmmxt_wu≈ckihw
 = 472,

140 
	mCODE_FOR_iwmmxt_wu≈ckûb
 = 473,

141 
	mCODE_FOR_iwmmxt_wu≈ckûh
 = 474,

142 
	mCODE_FOR_iwmmxt_wu≈ckûw
 = 475,

143 
	mCODE_FOR_iwmmxt_wu≈ckehub
 = 476,

144 
	mCODE_FOR_iwmmxt_wu≈ckehuh
 = 477,

145 
	mCODE_FOR_iwmmxt_wu≈ckehuw
 = 478,

146 
	mCODE_FOR_iwmmxt_wu≈ckehsb
 = 479,

147 
	mCODE_FOR_iwmmxt_wu≈ckehsh
 = 480,

148 
	mCODE_FOR_iwmmxt_wu≈ckehsw
 = 481,

149 
	mCODE_FOR_iwmmxt_wu≈ckñub
 = 482,

150 
	mCODE_FOR_iwmmxt_wu≈ckñuh
 = 483,

151 
	mCODE_FOR_iwmmxt_wu≈ckñuw
 = 484,

152 
	mCODE_FOR_iwmmxt_wu≈ckñsb
 = 485,

153 
	mCODE_FOR_iwmmxt_wu≈ckñsh
 = 486,

154 
	mCODE_FOR_iwmmxt_wu≈ckñsw
 = 487,

155 
	mCODE_FOR_r‹v4hi3
 = 488,

156 
	mCODE_FOR_r‹v2si3
 = 489,

157 
	mCODE_FOR_r‹di3
 = 490,

158 
	mCODE_FOR_ashrv4hi3_iwmmxt
 = 491,

159 
	mCODE_FOR_ashrv2si3_iwmmxt
 = 492,

160 
	mCODE_FOR_ashrdi3_iwmmxt
 = 493,

161 
	mCODE_FOR_lshrv4hi3_iwmmxt
 = 494,

162 
	mCODE_FOR_lshrv2si3_iwmmxt
 = 495,

163 
	mCODE_FOR_lshrdi3_iwmmxt
 = 496,

164 
	mCODE_FOR_ashlv4hi3_iwmmxt
 = 497,

165 
	mCODE_FOR_ashlv2si3_iwmmxt
 = 498,

166 
	mCODE_FOR_ashldi3_iwmmxt
 = 499,

167 
	mCODE_FOR_r‹v4hi3_di
 = 500,

168 
	mCODE_FOR_r‹v2si3_di
 = 501,

169 
	mCODE_FOR_r‹di3_di
 = 502,

170 
	mCODE_FOR_ashrv4hi3_di
 = 503,

171 
	mCODE_FOR_ashrv2si3_di
 = 504,

172 
	mCODE_FOR_ashrdi3_di
 = 505,

173 
	mCODE_FOR_lshrv4hi3_di
 = 506,

174 
	mCODE_FOR_lshrv2si3_di
 = 507,

175 
	mCODE_FOR_lshrdi3_di
 = 508,

176 
	mCODE_FOR_ashlv4hi3_di
 = 509,

177 
	mCODE_FOR_ashlv2si3_di
 = 510,

178 
	mCODE_FOR_ashldi3_di
 = 511,

179 
	mCODE_FOR_iwmmxt_wmadds
 = 512,

180 
	mCODE_FOR_iwmmxt_wmaddu
 = 513,

181 
	mCODE_FOR_iwmmxt_tmü
 = 514,

182 
	mCODE_FOR_iwmmxt_tmüph
 = 515,

183 
	mCODE_FOR_iwmmxt_tmübb
 = 516,

184 
	mCODE_FOR_iwmmxt_tmütb
 = 517,

185 
	mCODE_FOR_iwmmxt_tmübt
 = 518,

186 
	mCODE_FOR_iwmmxt_tmüâ
 = 519,

187 
	mCODE_FOR_iwmmxt_tmovmskb
 = 520,

188 
	mCODE_FOR_iwmmxt_tmovmskh
 = 521,

189 
	mCODE_FOR_iwmmxt_tmovmskw
 = 522,

190 
	mCODE_FOR_iwmmxt_waccb
 = 523,

191 
	mCODE_FOR_iwmmxt_wacch
 = 524,

192 
	mCODE_FOR_iwmmxt_waccw
 = 525,

193 
	mCODE_FOR_iwmmxt_wÆigni
 = 526,

194 
	mCODE_FOR_iwmmxt_wÆigƒ
 = 527,

195 
	mCODE_FOR_iwmmxt_wÆigƒ0
 = 528,

196 
	mCODE_FOR_iwmmxt_wÆigƒ1
 = 529,

197 
	mCODE_FOR_iwmmxt_wÆigƒ2
 = 530,

198 
	mCODE_FOR_iwmmxt_wÆigƒ3
 = 531,

199 
	mCODE_FOR_iwmmxt_wßdb
 = 532,

200 
	mCODE_FOR_iwmmxt_wßdh
 = 533,

201 
	mCODE_FOR_iwmmxt_wßdbz
 = 534,

202 
	mCODE_FOR_iwmmxt_wßdhz
 = 535,

203 
	mCODE_FOR_iwmmxt_wabsv2si3
 = 536,

204 
	mCODE_FOR_iwmmxt_wabsv4hi3
 = 537,

205 
	mCODE_FOR_iwmmxt_wabsv8qi3
 = 538,

206 
	mCODE_FOR_iwmmxt_wabsdiffb
 = 539,

207 
	mCODE_FOR_iwmmxt_wabsdiffh
 = 540,

208 
	mCODE_FOR_iwmmxt_wabsdiffw
 = 541,

209 
	mCODE_FOR_iwmmxt_waddsubhx
 = 542,

210 
	mCODE_FOR_iwmmxt_wsubaddhx
 = 543,

211 
	mCODE_FOR_addcv4hi3
 = 544,

212 
	mCODE_FOR_addcv2si3
 = 545,

213 
	mCODE_FOR_iwmmxt_avg4
 = 546,

214 
	mCODE_FOR_iwmmxt_avg4r
 = 547,

215 
	mCODE_FOR_iwmmxt_wmaddsx
 = 548,

216 
	mCODE_FOR_iwmmxt_wmaddux
 = 549,

217 
	mCODE_FOR_iwmmxt_wmadd¢
 = 550,

218 
	mCODE_FOR_iwmmxt_wmaddun
 = 551,

219 
	mCODE_FOR_iwmmxt_wmulwsm
 = 552,

220 
	mCODE_FOR_iwmmxt_wmulwum
 = 553,

221 
	mCODE_FOR_iwmmxt_wmulsmr
 = 554,

222 
	mCODE_FOR_iwmmxt_wmulumr
 = 555,

223 
	mCODE_FOR_iwmmxt_wmulwsmr
 = 556,

224 
	mCODE_FOR_iwmmxt_wmulwumr
 = 557,

225 
	mCODE_FOR_iwmmxt_wmulwl
 = 558,

226 
	mCODE_FOR_iwmmxt_wqmulm
 = 559,

227 
	mCODE_FOR_iwmmxt_wqmulwm
 = 560,

228 
	mCODE_FOR_iwmmxt_wqmulmr
 = 561,

229 
	mCODE_FOR_iwmmxt_wqmulwmr
 = 562,

230 
	mCODE_FOR_iwmmxt_waddbhusm
 = 563,

231 
	mCODE_FOR_iwmmxt_waddbhu¶
 = 564,

232 
	mCODE_FOR_iwmmxt_wqmübb
 = 565,

233 
	mCODE_FOR_iwmmxt_wqmübt
 = 566,

234 
	mCODE_FOR_iwmmxt_wqmütb
 = 567,

235 
	mCODE_FOR_iwmmxt_wqmüâ
 = 568,

236 
	mCODE_FOR_iwmmxt_wqmübbn
 = 569,

237 
	mCODE_FOR_iwmmxt_wqmübä
 = 570,

238 
	mCODE_FOR_iwmmxt_wqmütbn
 = 571,

239 
	mCODE_FOR_iwmmxt_wqmüân
 = 572,

240 
	mCODE_FOR_iwmmxt_wmübb
 = 573,

241 
	mCODE_FOR_iwmmxt_wmübt
 = 574,

242 
	mCODE_FOR_iwmmxt_wmütb
 = 575,

243 
	mCODE_FOR_iwmmxt_wmüâ
 = 576,

244 
	mCODE_FOR_iwmmxt_wmübbn
 = 577,

245 
	mCODE_FOR_iwmmxt_wmübä
 = 578,

246 
	mCODE_FOR_iwmmxt_wmütbn
 = 579,

247 
	mCODE_FOR_iwmmxt_wmüân
 = 580,

248 
	mCODE_FOR_iwmmxt_wmüwbb
 = 581,

249 
	mCODE_FOR_iwmmxt_wmüwbt
 = 582,

250 
	mCODE_FOR_iwmmxt_wmüwtb
 = 583,

251 
	mCODE_FOR_iwmmxt_wmüwâ
 = 584,

252 
	mCODE_FOR_iwmmxt_wmüwbbn
 = 585,

253 
	mCODE_FOR_iwmmxt_wmüwbä
 = 586,

254 
	mCODE_FOR_iwmmxt_wmüwtbn
 = 587,

255 
	mCODE_FOR_iwmmxt_wmüwân
 = 588,

256 
	mCODE_FOR_iwmmxt_wmîge
 = 589,

257 
	mCODE_FOR_iwmmxt_èndcv2si3
 = 590,

258 
	mCODE_FOR_iwmmxt_èndcv4hi3
 = 591,

259 
	mCODE_FOR_iwmmxt_èndcv8qi3
 = 592,

260 
	mCODE_FOR_iwmmxt_t‹cv2si3
 = 593,

261 
	mCODE_FOR_iwmmxt_t‹cv4hi3
 = 594,

262 
	mCODE_FOR_iwmmxt_t‹cv8qi3
 = 595,

263 
	mCODE_FOR_iwmmxt_t‹vscv2si3
 = 596,

264 
	mCODE_FOR_iwmmxt_t‹vscv4hi3
 = 597,

265 
	mCODE_FOR_iwmmxt_t‹vscv8qi3
 = 598,

266 
	mCODE_FOR_iwmmxt_ãxåcv2si3
 = 599,

267 
	mCODE_FOR_iwmmxt_ãxåcv4hi3
 = 600,

268 
	mCODE_FOR_iwmmxt_ãxåcv8qi3
 = 601,

269 
	mCODE_FOR_fmasf4
 = 638,

270 
	mCODE_FOR_fmadf4
 = 639,

271 
	mCODE_FOR_exãndhfsf2
 = 648,

272 
	mCODE_FOR_åuncsfhf2
 = 649,

273 
	mCODE_FOR_fixuns_åuncsfsi2
 = 652,

274 
	mCODE_FOR_fixuns_åuncdfsi2
 = 653,

275 
	mCODE_FOR_Êﬂtunssisf2
 = 656,

276 
	mCODE_FOR_Êﬂtunssidf2
 = 657,

277 
	mCODE_FOR_båuncsf2
 = 675,

278 
	mCODE_FOR_˚ûsf2
 = 676,

279 
	mCODE_FOR_Êo‹sf2
 = 677,

280 
	mCODE_FOR_√¨byötsf2
 = 678,

281 
	mCODE_FOR_rötsf2
 = 679,

282 
	mCODE_FOR_roundsf2
 = 680,

283 
	mCODE_FOR_båuncdf2
 = 681,

284 
	mCODE_FOR_˚ûdf2
 = 682,

285 
	mCODE_FOR_Êo‹df2
 = 683,

286 
	mCODE_FOR_√¨byötdf2
 = 684,

287 
	mCODE_FOR_rötdf2
 = 685,

288 
	mCODE_FOR_rounddf2
 = 686,

289 
	mCODE_FOR_smaxsf3
 = 687,

290 
	mCODE_FOR_smaxdf3
 = 688,

291 
	mCODE_FOR_smösf3
 = 689,

292 
	mCODE_FOR_smödf3
 = 690,

293 
	mCODE_FOR_thumb1_subsi3_ö¢
 = 694,

294 
	mCODE_FOR_thumb1_bicsi3
 = 698,

295 
	mCODE_FOR_thumb1_exãndhisi2
 = 713,

296 
	mCODE_FOR_thumb1_exãndqisi2
 = 714,

297 
	mCODE_FOR_movmem12b
 = 722,

298 
	mCODE_FOR_movmem8b
 = 723,

299 
	mCODE_FOR_cbønchsi4_ö¢
 = 724,

300 
	mCODE_FOR_cbønchsi4_s¸©ch
 = 725,

301 
	mCODE_FOR_c°‹esi_∆tu_thumb1
 = 736,

302 
	mCODE_FOR_c°‹esi_…u_thumb1
 = 737,

303 
	mCODE_FOR_thumb1_addsi3_addgeu
 = 738,

304 
	mCODE_FOR_thumb1_ˇ£si_di•©ch
 = 746,

305 
	mCODE_FOR_¥ﬁogue_thumb1_öãrw‹k
 = 748,

306 
	mCODE_FOR_thumb_eh_ªtu∫
 = 752,

307 
	mCODE_FOR_és_lﬂd_dŸ_∂us_four
 = 762,

308 
	mCODE_FOR_thumb2_zîo_exãndqisi2_v6
 = 787,

309 
	mCODE_FOR_thumb2_ˇ£si_öã∫Æ
 = 788,

310 
	mCODE_FOR_thumb2_ˇ£si_öã∫Æ_pic
 = 789,

311 
	mCODE_FOR_thumb2_eh_ªtu∫
 = 791,

312 
	mCODE_FOR_thumb2_addsi3_com∑ª0
 = 799,

313 
	mCODE_FOR_vec_£tv8qi_öã∫Æ
 = 845,

314 
	mCODE_FOR_vec_£tv4hi_öã∫Æ
 = 846,

315 
	mCODE_FOR_vec_£tv2si_öã∫Æ
 = 847,

316 
	mCODE_FOR_vec_£tv2sf_öã∫Æ
 = 848,

317 
	mCODE_FOR_vec_£tv16qi_öã∫Æ
 = 849,

318 
	mCODE_FOR_vec_£tv8hi_öã∫Æ
 = 850,

319 
	mCODE_FOR_vec_£tv4si_öã∫Æ
 = 851,

320 
	mCODE_FOR_vec_£tv4sf_öã∫Æ
 = 852,

321 
	mCODE_FOR_vec_£tv2di_öã∫Æ
 = 853,

322 
	mCODE_FOR_vec_exåa˘v8qi
 = 854,

323 
	mCODE_FOR_vec_exåa˘v4hi
 = 855,

324 
	mCODE_FOR_vec_exåa˘v2si
 = 856,

325 
	mCODE_FOR_vec_exåa˘v2sf
 = 857,

326 
	mCODE_FOR_vec_exåa˘v16qi
 = 858,

327 
	mCODE_FOR_vec_exåa˘v8hi
 = 859,

328 
	mCODE_FOR_vec_exåa˘v4si
 = 860,

329 
	mCODE_FOR_vec_exåa˘v4sf
 = 861,

330 
	mCODE_FOR_vec_exåa˘v2di
 = 862,

331 
	mCODE_FOR_adddi3_√⁄
 = 872,

332 
	mCODE_FOR_subdi3_√⁄
 = 882,

333 
	mCODE_FOR_mulv8qi3addv8qi_√⁄
 = 891,

334 
	mCODE_FOR_mulv16qi3addv16qi_√⁄
 = 892,

335 
	mCODE_FOR_mulv4hi3addv4hi_√⁄
 = 893,

336 
	mCODE_FOR_mulv8hi3addv8hi_√⁄
 = 894,

337 
	mCODE_FOR_mulv2si3addv2si_√⁄
 = 895,

338 
	mCODE_FOR_mulv4si3addv4si_√⁄
 = 896,

339 
	mCODE_FOR_mulv2sf3addv2sf_√⁄
 = 897,

340 
	mCODE_FOR_mulv4sf3addv4sf_√⁄
 = 898,

341 
	mCODE_FOR_mulv8qi3√gv8qüddv8qi_√⁄
 = 899,

342 
	mCODE_FOR_mulv16qi3√gv16qüddv16qi_√⁄
 = 900,

343 
	mCODE_FOR_mulv4hi3√gv4hüddv4hi_√⁄
 = 901,

344 
	mCODE_FOR_mulv8hi3√gv8hüddv8hi_√⁄
 = 902,

345 
	mCODE_FOR_mulv2si3√gv2süddv2si_√⁄
 = 903,

346 
	mCODE_FOR_mulv4si3√gv4süddv4si_√⁄
 = 904,

347 
	mCODE_FOR_mulv2sf3√gv2sÁddv2sf_√⁄
 = 905,

348 
	mCODE_FOR_mulv4sf3√gv4sÁddv4sf_√⁄
 = 906,

349 
	mCODE_FOR_fmav2sf4
 = 907,

350 
	mCODE_FOR_fmav4sf4
 = 908,

351 
	mCODE_FOR_fmav2sf4_öåösic
 = 909,

352 
	mCODE_FOR_fmav4sf4_öåösic
 = 910,

353 
	mCODE_FOR_fmsubv2sf4_öåösic
 = 913,

354 
	mCODE_FOR_fmsubv4sf4_öåösic
 = 914,

355 
	mCODE_FOR_√⁄_vröçv2sf
 = 915,

356 
	mCODE_FOR_√⁄_vrötzv2sf
 = 916,

357 
	mCODE_FOR_√⁄_vrötmv2sf
 = 917,

358 
	mCODE_FOR_√⁄_vrötxv2sf
 = 918,

359 
	mCODE_FOR_√⁄_vröèv2sf
 = 919,

360 
	mCODE_FOR_√⁄_vröäv2sf
 = 920,

361 
	mCODE_FOR_√⁄_vröçv4sf
 = 921,

362 
	mCODE_FOR_√⁄_vrötzv4sf
 = 922,

363 
	mCODE_FOR_√⁄_vrötmv4sf
 = 923,

364 
	mCODE_FOR_√⁄_vrötxv4sf
 = 924,

365 
	mCODE_FOR_√⁄_vröèv4sf
 = 925,

366 
	mCODE_FOR_√⁄_vröäv4sf
 = 926,

367 
	mCODE_FOR_i‹v8qi3
 = 927,

368 
	mCODE_FOR_i‹v16qi3
 = 928,

369 
	mCODE_FOR_i‹v4hi3
 = 929,

370 
	mCODE_FOR_i‹v8hi3
 = 930,

371 
	mCODE_FOR_i‹v2si3
 = 931,

372 
	mCODE_FOR_i‹v4si3
 = 932,

373 
	mCODE_FOR_i‹v2sf3
 = 933,

374 
	mCODE_FOR_i‹v4sf3
 = 934,

375 
	mCODE_FOR_i‹v2di3
 = 935,

376 
	mCODE_FOR_™dv8qi3
 = 936,

377 
	mCODE_FOR_™dv16qi3
 = 937,

378 
	mCODE_FOR_™dv4hi3
 = 938,

379 
	mCODE_FOR_™dv8hi3
 = 939,

380 
	mCODE_FOR_™dv2si3
 = 940,

381 
	mCODE_FOR_™dv4si3
 = 941,

382 
	mCODE_FOR_™dv2sf3
 = 942,

383 
	mCODE_FOR_™dv4sf3
 = 943,

384 
	mCODE_FOR_™dv2di3
 = 944,

385 
	mCODE_FOR_‹nv8qi3_√⁄
 = 945,

386 
	mCODE_FOR_‹nv16qi3_√⁄
 = 946,

387 
	mCODE_FOR_‹nv4hi3_√⁄
 = 947,

388 
	mCODE_FOR_‹nv8hi3_√⁄
 = 948,

389 
	mCODE_FOR_‹nv2si3_√⁄
 = 949,

390 
	mCODE_FOR_‹nv4si3_√⁄
 = 950,

391 
	mCODE_FOR_‹nv2sf3_√⁄
 = 951,

392 
	mCODE_FOR_‹nv4sf3_√⁄
 = 952,

393 
	mCODE_FOR_‹nv2di3_√⁄
 = 953,

394 
	mCODE_FOR_‹ndi3_√⁄
 = 954,

395 
	mCODE_FOR_bicv8qi3_√⁄
 = 955,

396 
	mCODE_FOR_bicv16qi3_√⁄
 = 956,

397 
	mCODE_FOR_bicv4hi3_√⁄
 = 957,

398 
	mCODE_FOR_bicv8hi3_√⁄
 = 958,

399 
	mCODE_FOR_bicv2si3_√⁄
 = 959,

400 
	mCODE_FOR_bicv4si3_√⁄
 = 960,

401 
	mCODE_FOR_bicv2sf3_√⁄
 = 961,

402 
	mCODE_FOR_bicv4sf3_√⁄
 = 962,

403 
	mCODE_FOR_bicv2di3_√⁄
 = 963,

404 
	mCODE_FOR_bicdi3_√⁄
 = 964,

405 
	mCODE_FOR_x‹v8qi3
 = 965,

406 
	mCODE_FOR_x‹v16qi3
 = 966,

407 
	mCODE_FOR_x‹v4hi3
 = 967,

408 
	mCODE_FOR_x‹v8hi3
 = 968,

409 
	mCODE_FOR_x‹v2si3
 = 969,

410 
	mCODE_FOR_x‹v4si3
 = 970,

411 
	mCODE_FOR_x‹v2sf3
 = 971,

412 
	mCODE_FOR_x‹v4sf3
 = 972,

413 
	mCODE_FOR_x‹v2di3
 = 973,

414 
	mCODE_FOR_⁄e_cm∂v8qi2
 = 974,

415 
	mCODE_FOR_⁄e_cm∂v16qi2
 = 975,

416 
	mCODE_FOR_⁄e_cm∂v4hi2
 = 976,

417 
	mCODE_FOR_⁄e_cm∂v8hi2
 = 977,

418 
	mCODE_FOR_⁄e_cm∂v2si2
 = 978,

419 
	mCODE_FOR_⁄e_cm∂v4si2
 = 979,

420 
	mCODE_FOR_⁄e_cm∂v2sf2
 = 980,

421 
	mCODE_FOR_⁄e_cm∂v4sf2
 = 981,

422 
	mCODE_FOR_⁄e_cm∂v2di2
 = 982,

423 
	mCODE_FOR_absv8qi2
 = 983,

424 
	mCODE_FOR_absv16qi2
 = 984,

425 
	mCODE_FOR_absv4hi2
 = 985,

426 
	mCODE_FOR_absv8hi2
 = 986,

427 
	mCODE_FOR_absv2si2
 = 987,

428 
	mCODE_FOR_absv4si2
 = 988,

429 
	mCODE_FOR_absv2sf2
 = 989,

430 
	mCODE_FOR_absv4sf2
 = 990,

431 
	mCODE_FOR_√gv8qi2
 = 991,

432 
	mCODE_FOR_√gv16qi2
 = 992,

433 
	mCODE_FOR_√gv4hi2
 = 993,

434 
	mCODE_FOR_√gv8hi2
 = 994,

435 
	mCODE_FOR_√gv2si2
 = 995,

436 
	mCODE_FOR_√gv4si2
 = 996,

437 
	mCODE_FOR_√gv2sf2
 = 997,

438 
	mCODE_FOR_√gv4sf2
 = 998,

439 
	mCODE_FOR_√gdi2_√⁄
 = 999,

440 
	mCODE_FOR_vashlv8qi3
 = 1028,

441 
	mCODE_FOR_vashlv16qi3
 = 1029,

442 
	mCODE_FOR_vashlv4hi3
 = 1030,

443 
	mCODE_FOR_vashlv8hi3
 = 1031,

444 
	mCODE_FOR_vashlv2si3
 = 1032,

445 
	mCODE_FOR_vashlv4si3
 = 1033,

446 
	mCODE_FOR_vashrv8qi3_imm
 = 1034,

447 
	mCODE_FOR_vashrv16qi3_imm
 = 1035,

448 
	mCODE_FOR_vashrv4hi3_imm
 = 1036,

449 
	mCODE_FOR_vashrv8hi3_imm
 = 1037,

450 
	mCODE_FOR_vashrv2si3_imm
 = 1038,

451 
	mCODE_FOR_vashrv4si3_imm
 = 1039,

452 
	mCODE_FOR_vlshrv8qi3_imm
 = 1040,

453 
	mCODE_FOR_vlshrv16qi3_imm
 = 1041,

454 
	mCODE_FOR_vlshrv4hi3_imm
 = 1042,

455 
	mCODE_FOR_vlshrv8hi3_imm
 = 1043,

456 
	mCODE_FOR_vlshrv2si3_imm
 = 1044,

457 
	mCODE_FOR_vlshrv4si3_imm
 = 1045,

458 
	mCODE_FOR_ashlv8qi3_sig√d
 = 1046,

459 
	mCODE_FOR_ashlv16qi3_sig√d
 = 1047,

460 
	mCODE_FOR_ashlv4hi3_sig√d
 = 1048,

461 
	mCODE_FOR_ashlv8hi3_sig√d
 = 1049,

462 
	mCODE_FOR_ashlv2si3_sig√d
 = 1050,

463 
	mCODE_FOR_ashlv4si3_sig√d
 = 1051,

464 
	mCODE_FOR_ashlv2di3_sig√d
 = 1052,

465 
	mCODE_FOR_ashlv8qi3_unsig√d
 = 1053,

466 
	mCODE_FOR_ashlv16qi3_unsig√d
 = 1054,

467 
	mCODE_FOR_ashlv4hi3_unsig√d
 = 1055,

468 
	mCODE_FOR_ashlv8hi3_unsig√d
 = 1056,

469 
	mCODE_FOR_ashlv2si3_unsig√d
 = 1057,

470 
	mCODE_FOR_ashlv4si3_unsig√d
 = 1058,

471 
	mCODE_FOR_ashlv2di3_unsig√d
 = 1059,

472 
	mCODE_FOR_√⁄_lﬂd_cou¡
 = 1060,

473 
	mCODE_FOR_ashldi3_√⁄_no˛obbî
 = 1061,

474 
	mCODE_FOR_ashldi3_√⁄
 = 1062,

475 
	mCODE_FOR_sig√d_shi·_di3_√⁄
 = 1063,

476 
	mCODE_FOR_unsig√d_shi·_di3_√⁄
 = 1064,

477 
	mCODE_FOR_ashrdi3_√⁄_imm_no˛obbî
 = 1065,

478 
	mCODE_FOR_lshrdi3_√⁄_imm_no˛obbî
 = 1066,

479 
	mCODE_FOR_ashrdi3_√⁄
 = 1067,

480 
	mCODE_FOR_lshrdi3_√⁄
 = 1068,

481 
	mCODE_FOR_widí_ssumv8qi3
 = 1069,

482 
	mCODE_FOR_widí_ssumv4hi3
 = 1070,

483 
	mCODE_FOR_widí_ssumv2si3
 = 1071,

484 
	mCODE_FOR_widí_usumv8qi3
 = 1072,

485 
	mCODE_FOR_widí_usumv4hi3
 = 1073,

486 
	mCODE_FOR_widí_usumv2si3
 = 1074,

487 
	mCODE_FOR_quad_hÆves_∂usv4si
 = 1075,

488 
	mCODE_FOR_quad_hÆves_smöv4si
 = 1076,

489 
	mCODE_FOR_quad_hÆves_smaxv4si
 = 1077,

490 
	mCODE_FOR_quad_hÆves_umöv4si
 = 1078,

491 
	mCODE_FOR_quad_hÆves_umaxv4si
 = 1079,

492 
	mCODE_FOR_quad_hÆves_∂usv4sf
 = 1080,

493 
	mCODE_FOR_quad_hÆves_smöv4sf
 = 1081,

494 
	mCODE_FOR_quad_hÆves_smaxv4sf
 = 1082,

495 
	mCODE_FOR_quad_hÆves_∂usv8hi
 = 1083,

496 
	mCODE_FOR_quad_hÆves_smöv8hi
 = 1084,

497 
	mCODE_FOR_quad_hÆves_smaxv8hi
 = 1085,

498 
	mCODE_FOR_quad_hÆves_umöv8hi
 = 1086,

499 
	mCODE_FOR_quad_hÆves_umaxv8hi
 = 1087,

500 
	mCODE_FOR_quad_hÆves_∂usv16qi
 = 1088,

501 
	mCODE_FOR_quad_hÆves_smöv16qi
 = 1089,

502 
	mCODE_FOR_quad_hÆves_smaxv16qi
 = 1090,

503 
	mCODE_FOR_quad_hÆves_umöv16qi
 = 1091,

504 
	mCODE_FOR_quad_hÆves_umaxv16qi
 = 1092,

505 
	mCODE_FOR_ªduc_•lus_v2di
 = 1093,

506 
	mCODE_FOR_√⁄_v∑dd_öã∫Æv8qi
 = 1094,

507 
	mCODE_FOR_√⁄_v∑dd_öã∫Æv4hi
 = 1095,

508 
	mCODE_FOR_√⁄_v∑dd_öã∫Æv2si
 = 1096,

509 
	mCODE_FOR_√⁄_v∑dd_öã∫Æv2sf
 = 1097,

510 
	mCODE_FOR_√⁄_vpsmöv8qi
 = 1098,

511 
	mCODE_FOR_√⁄_vpsmöv4hi
 = 1099,

512 
	mCODE_FOR_√⁄_vpsmöv2si
 = 1100,

513 
	mCODE_FOR_√⁄_vpsmöv2sf
 = 1101,

514 
	mCODE_FOR_√⁄_vpsmaxv8qi
 = 1102,

515 
	mCODE_FOR_√⁄_vpsmaxv4hi
 = 1103,

516 
	mCODE_FOR_√⁄_vpsmaxv2si
 = 1104,

517 
	mCODE_FOR_√⁄_vpsmaxv2sf
 = 1105,

518 
	mCODE_FOR_√⁄_vpumöv8qi
 = 1106,

519 
	mCODE_FOR_√⁄_vpumöv4hi
 = 1107,

520 
	mCODE_FOR_√⁄_vpumöv2si
 = 1108,

521 
	mCODE_FOR_√⁄_vpumaxv8qi
 = 1109,

522 
	mCODE_FOR_√⁄_vpumaxv4hi
 = 1110,

523 
	mCODE_FOR_√⁄_vpumaxv2si
 = 1111,

524 
	mCODE_FOR_√⁄_vaddv8qi_un•ec
 = 1128,

525 
	mCODE_FOR_√⁄_vaddv16qi_un•ec
 = 1129,

526 
	mCODE_FOR_√⁄_vaddv4hi_un•ec
 = 1130,

527 
	mCODE_FOR_√⁄_vaddv8hi_un•ec
 = 1131,

528 
	mCODE_FOR_√⁄_vaddv2si_un•ec
 = 1132,

529 
	mCODE_FOR_√⁄_vaddv4si_un•ec
 = 1133,

530 
	mCODE_FOR_√⁄_vaddv2sf_un•ec
 = 1134,

531 
	mCODE_FOR_√⁄_vaddv4sf_un•ec
 = 1135,

532 
	mCODE_FOR_√⁄_vadddi_un•ec
 = 1136,

533 
	mCODE_FOR_√⁄_vaddv2di_un•ec
 = 1137,

534 
	mCODE_FOR_√⁄_vaddlv8qi
 = 1138,

535 
	mCODE_FOR_√⁄_vaddlv4hi
 = 1139,

536 
	mCODE_FOR_√⁄_vaddlv2si
 = 1140,

537 
	mCODE_FOR_√⁄_vaddwv8qi
 = 1141,

538 
	mCODE_FOR_√⁄_vaddwv4hi
 = 1142,

539 
	mCODE_FOR_√⁄_vaddwv2si
 = 1143,

540 
	mCODE_FOR_√⁄_vhaddv8qi
 = 1144,

541 
	mCODE_FOR_√⁄_vhaddv16qi
 = 1145,

542 
	mCODE_FOR_√⁄_vhaddv4hi
 = 1146,

543 
	mCODE_FOR_√⁄_vhaddv8hi
 = 1147,

544 
	mCODE_FOR_√⁄_vhaddv2si
 = 1148,

545 
	mCODE_FOR_√⁄_vhaddv4si
 = 1149,

546 
	mCODE_FOR_√⁄_vqaddv8qi
 = 1150,

547 
	mCODE_FOR_√⁄_vqaddv16qi
 = 1151,

548 
	mCODE_FOR_√⁄_vqaddv4hi
 = 1152,

549 
	mCODE_FOR_√⁄_vqaddv8hi
 = 1153,

550 
	mCODE_FOR_√⁄_vqaddv2si
 = 1154,

551 
	mCODE_FOR_√⁄_vqaddv4si
 = 1155,

552 
	mCODE_FOR_√⁄_vqadddi
 = 1156,

553 
	mCODE_FOR_√⁄_vqaddv2di
 = 1157,

554 
	mCODE_FOR_√⁄_vaddhnv8hi
 = 1158,

555 
	mCODE_FOR_√⁄_vaddhnv4si
 = 1159,

556 
	mCODE_FOR_√⁄_vaddhnv2di
 = 1160,

557 
	mCODE_FOR_√⁄_vmulv8qi
 = 1161,

558 
	mCODE_FOR_√⁄_vmulv16qi
 = 1162,

559 
	mCODE_FOR_√⁄_vmulv4hi
 = 1163,

560 
	mCODE_FOR_√⁄_vmulv8hi
 = 1164,

561 
	mCODE_FOR_√⁄_vmulv2si
 = 1165,

562 
	mCODE_FOR_√⁄_vmulv4si
 = 1166,

563 
	mCODE_FOR_√⁄_vmulv2sf
 = 1167,

564 
	mCODE_FOR_√⁄_vmulv4sf
 = 1168,

565 
	mCODE_FOR_√⁄_vmœv8qi_un•ec
 = 1169,

566 
	mCODE_FOR_√⁄_vmœv16qi_un•ec
 = 1170,

567 
	mCODE_FOR_√⁄_vmœv4hi_un•ec
 = 1171,

568 
	mCODE_FOR_√⁄_vmœv8hi_un•ec
 = 1172,

569 
	mCODE_FOR_√⁄_vmœv2si_un•ec
 = 1173,

570 
	mCODE_FOR_√⁄_vmœv4si_un•ec
 = 1174,

571 
	mCODE_FOR_√⁄_vmœv2sf_un•ec
 = 1175,

572 
	mCODE_FOR_√⁄_vmœv4sf_un•ec
 = 1176,

573 
	mCODE_FOR_√⁄_vmœlv8qi
 = 1177,

574 
	mCODE_FOR_√⁄_vmœlv4hi
 = 1178,

575 
	mCODE_FOR_√⁄_vmœlv2si
 = 1179,

576 
	mCODE_FOR_√⁄_vmlsv8qi_un•ec
 = 1180,

577 
	mCODE_FOR_√⁄_vmlsv16qi_un•ec
 = 1181,

578 
	mCODE_FOR_√⁄_vmlsv4hi_un•ec
 = 1182,

579 
	mCODE_FOR_√⁄_vmlsv8hi_un•ec
 = 1183,

580 
	mCODE_FOR_√⁄_vmlsv2si_un•ec
 = 1184,

581 
	mCODE_FOR_√⁄_vmlsv4si_un•ec
 = 1185,

582 
	mCODE_FOR_√⁄_vmlsv2sf_un•ec
 = 1186,

583 
	mCODE_FOR_√⁄_vmlsv4sf_un•ec
 = 1187,

584 
	mCODE_FOR_√⁄_vml¶v8qi
 = 1188,

585 
	mCODE_FOR_√⁄_vml¶v4hi
 = 1189,

586 
	mCODE_FOR_√⁄_vml¶v2si
 = 1190,

587 
	mCODE_FOR_√⁄_vqdmulhv4hi
 = 1191,

588 
	mCODE_FOR_√⁄_vqdmulhv2si
 = 1192,

589 
	mCODE_FOR_√⁄_vqdmulhv8hi
 = 1193,

590 
	mCODE_FOR_√⁄_vqdmulhv4si
 = 1194,

591 
	mCODE_FOR_√⁄_vqdmœlv4hi
 = 1195,

592 
	mCODE_FOR_√⁄_vqdmœlv2si
 = 1196,

593 
	mCODE_FOR_√⁄_vqdml¶v4hi
 = 1197,

594 
	mCODE_FOR_√⁄_vqdml¶v2si
 = 1198,

595 
	mCODE_FOR_√⁄_vmuŒv8qi
 = 1199,

596 
	mCODE_FOR_√⁄_vmuŒv4hi
 = 1200,

597 
	mCODE_FOR_√⁄_vmuŒv2si
 = 1201,

598 
	mCODE_FOR_√⁄_vqdmuŒv4hi
 = 1202,

599 
	mCODE_FOR_√⁄_vqdmuŒv2si
 = 1203,

600 
	mCODE_FOR_√⁄_vsubv8qi_un•ec
 = 1204,

601 
	mCODE_FOR_√⁄_vsubv16qi_un•ec
 = 1205,

602 
	mCODE_FOR_√⁄_vsubv4hi_un•ec
 = 1206,

603 
	mCODE_FOR_√⁄_vsubv8hi_un•ec
 = 1207,

604 
	mCODE_FOR_√⁄_vsubv2si_un•ec
 = 1208,

605 
	mCODE_FOR_√⁄_vsubv4si_un•ec
 = 1209,

606 
	mCODE_FOR_√⁄_vsubv2sf_un•ec
 = 1210,

607 
	mCODE_FOR_√⁄_vsubv4sf_un•ec
 = 1211,

608 
	mCODE_FOR_√⁄_vsubdi_un•ec
 = 1212,

609 
	mCODE_FOR_√⁄_vsubv2di_un•ec
 = 1213,

610 
	mCODE_FOR_√⁄_vsublv8qi
 = 1214,

611 
	mCODE_FOR_√⁄_vsublv4hi
 = 1215,

612 
	mCODE_FOR_√⁄_vsublv2si
 = 1216,

613 
	mCODE_FOR_√⁄_vsubwv8qi
 = 1217,

614 
	mCODE_FOR_√⁄_vsubwv4hi
 = 1218,

615 
	mCODE_FOR_√⁄_vsubwv2si
 = 1219,

616 
	mCODE_FOR_√⁄_vqsubv8qi
 = 1220,

617 
	mCODE_FOR_√⁄_vqsubv16qi
 = 1221,

618 
	mCODE_FOR_√⁄_vqsubv4hi
 = 1222,

619 
	mCODE_FOR_√⁄_vqsubv8hi
 = 1223,

620 
	mCODE_FOR_√⁄_vqsubv2si
 = 1224,

621 
	mCODE_FOR_√⁄_vqsubv4si
 = 1225,

622 
	mCODE_FOR_√⁄_vqsubdi
 = 1226,

623 
	mCODE_FOR_√⁄_vqsubv2di
 = 1227,

624 
	mCODE_FOR_√⁄_vhsubv8qi
 = 1228,

625 
	mCODE_FOR_√⁄_vhsubv16qi
 = 1229,

626 
	mCODE_FOR_√⁄_vhsubv4hi
 = 1230,

627 
	mCODE_FOR_√⁄_vhsubv8hi
 = 1231,

628 
	mCODE_FOR_√⁄_vhsubv2si
 = 1232,

629 
	mCODE_FOR_√⁄_vhsubv4si
 = 1233,

630 
	mCODE_FOR_√⁄_vsubhnv8hi
 = 1234,

631 
	mCODE_FOR_√⁄_vsubhnv4si
 = 1235,

632 
	mCODE_FOR_√⁄_vsubhnv2di
 = 1236,

633 
	mCODE_FOR_√⁄_v˚qv8qi
 = 1237,

634 
	mCODE_FOR_√⁄_v˚qv16qi
 = 1238,

635 
	mCODE_FOR_√⁄_v˚qv4hi
 = 1239,

636 
	mCODE_FOR_√⁄_v˚qv8hi
 = 1240,

637 
	mCODE_FOR_√⁄_v˚qv2si
 = 1241,

638 
	mCODE_FOR_√⁄_v˚qv4si
 = 1242,

639 
	mCODE_FOR_√⁄_v˚qv2sf
 = 1243,

640 
	mCODE_FOR_√⁄_v˚qv4sf
 = 1244,

641 
	mCODE_FOR_√⁄_vcgev8qi
 = 1245,

642 
	mCODE_FOR_√⁄_vcgev16qi
 = 1246,

643 
	mCODE_FOR_√⁄_vcgev4hi
 = 1247,

644 
	mCODE_FOR_√⁄_vcgev8hi
 = 1248,

645 
	mCODE_FOR_√⁄_vcgev2si
 = 1249,

646 
	mCODE_FOR_√⁄_vcgev4si
 = 1250,

647 
	mCODE_FOR_√⁄_vcgev2sf
 = 1251,

648 
	mCODE_FOR_√⁄_vcgev4sf
 = 1252,

649 
	mCODE_FOR_√⁄_vcgeuv8qi
 = 1253,

650 
	mCODE_FOR_√⁄_vcgeuv16qi
 = 1254,

651 
	mCODE_FOR_√⁄_vcgeuv4hi
 = 1255,

652 
	mCODE_FOR_√⁄_vcgeuv8hi
 = 1256,

653 
	mCODE_FOR_√⁄_vcgeuv2si
 = 1257,

654 
	mCODE_FOR_√⁄_vcgeuv4si
 = 1258,

655 
	mCODE_FOR_√⁄_vcgtv8qi
 = 1259,

656 
	mCODE_FOR_√⁄_vcgtv16qi
 = 1260,

657 
	mCODE_FOR_√⁄_vcgtv4hi
 = 1261,

658 
	mCODE_FOR_√⁄_vcgtv8hi
 = 1262,

659 
	mCODE_FOR_√⁄_vcgtv2si
 = 1263,

660 
	mCODE_FOR_√⁄_vcgtv4si
 = 1264,

661 
	mCODE_FOR_√⁄_vcgtv2sf
 = 1265,

662 
	mCODE_FOR_√⁄_vcgtv4sf
 = 1266,

663 
	mCODE_FOR_√⁄_vcgtuv8qi
 = 1267,

664 
	mCODE_FOR_√⁄_vcgtuv16qi
 = 1268,

665 
	mCODE_FOR_√⁄_vcgtuv4hi
 = 1269,

666 
	mCODE_FOR_√⁄_vcgtuv8hi
 = 1270,

667 
	mCODE_FOR_√⁄_vcgtuv2si
 = 1271,

668 
	mCODE_FOR_√⁄_vcgtuv4si
 = 1272,

669 
	mCODE_FOR_√⁄_v˛ev8qi
 = 1273,

670 
	mCODE_FOR_√⁄_v˛ev16qi
 = 1274,

671 
	mCODE_FOR_√⁄_v˛ev4hi
 = 1275,

672 
	mCODE_FOR_√⁄_v˛ev8hi
 = 1276,

673 
	mCODE_FOR_√⁄_v˛ev2si
 = 1277,

674 
	mCODE_FOR_√⁄_v˛ev4si
 = 1278,

675 
	mCODE_FOR_√⁄_v˛ev2sf
 = 1279,

676 
	mCODE_FOR_√⁄_v˛ev4sf
 = 1280,

677 
	mCODE_FOR_√⁄_v˛tv8qi
 = 1281,

678 
	mCODE_FOR_√⁄_v˛tv16qi
 = 1282,

679 
	mCODE_FOR_√⁄_v˛tv4hi
 = 1283,

680 
	mCODE_FOR_√⁄_v˛tv8hi
 = 1284,

681 
	mCODE_FOR_√⁄_v˛tv2si
 = 1285,

682 
	mCODE_FOR_√⁄_v˛tv4si
 = 1286,

683 
	mCODE_FOR_√⁄_v˛tv2sf
 = 1287,

684 
	mCODE_FOR_√⁄_v˛tv4sf
 = 1288,

685 
	mCODE_FOR_√⁄_vˇgev2sf
 = 1289,

686 
	mCODE_FOR_√⁄_vˇgev4sf
 = 1290,

687 
	mCODE_FOR_√⁄_vˇgtv2sf
 = 1291,

688 
	mCODE_FOR_√⁄_vˇgtv4sf
 = 1292,

689 
	mCODE_FOR_√⁄_vt°v8qi
 = 1293,

690 
	mCODE_FOR_√⁄_vt°v16qi
 = 1294,

691 
	mCODE_FOR_√⁄_vt°v4hi
 = 1295,

692 
	mCODE_FOR_√⁄_vt°v8hi
 = 1296,

693 
	mCODE_FOR_√⁄_vt°v2si
 = 1297,

694 
	mCODE_FOR_√⁄_vt°v4si
 = 1298,

695 
	mCODE_FOR_√⁄_vabdv8qi
 = 1299,

696 
	mCODE_FOR_√⁄_vabdv16qi
 = 1300,

697 
	mCODE_FOR_√⁄_vabdv4hi
 = 1301,

698 
	mCODE_FOR_√⁄_vabdv8hi
 = 1302,

699 
	mCODE_FOR_√⁄_vabdv2si
 = 1303,

700 
	mCODE_FOR_√⁄_vabdv4si
 = 1304,

701 
	mCODE_FOR_√⁄_vabdv2sf
 = 1305,

702 
	mCODE_FOR_√⁄_vabdv4sf
 = 1306,

703 
	mCODE_FOR_√⁄_vabdlv8qi
 = 1307,

704 
	mCODE_FOR_√⁄_vabdlv4hi
 = 1308,

705 
	mCODE_FOR_√⁄_vabdlv2si
 = 1309,

706 
	mCODE_FOR_√⁄_vabav8qi
 = 1310,

707 
	mCODE_FOR_√⁄_vabav16qi
 = 1311,

708 
	mCODE_FOR_√⁄_vabav4hi
 = 1312,

709 
	mCODE_FOR_√⁄_vabav8hi
 = 1313,

710 
	mCODE_FOR_√⁄_vabav2si
 = 1314,

711 
	mCODE_FOR_√⁄_vabav4si
 = 1315,

712 
	mCODE_FOR_√⁄_vabÆv8qi
 = 1316,

713 
	mCODE_FOR_√⁄_vabÆv4hi
 = 1317,

714 
	mCODE_FOR_√⁄_vabÆv2si
 = 1318,

715 
	mCODE_FOR_√⁄_vmaxv8qi
 = 1319,

716 
	mCODE_FOR_√⁄_vmaxv16qi
 = 1320,

717 
	mCODE_FOR_√⁄_vmaxv4hi
 = 1321,

718 
	mCODE_FOR_√⁄_vmaxv8hi
 = 1322,

719 
	mCODE_FOR_√⁄_vmaxv2si
 = 1323,

720 
	mCODE_FOR_√⁄_vmaxv4si
 = 1324,

721 
	mCODE_FOR_√⁄_vmaxv2sf
 = 1325,

722 
	mCODE_FOR_√⁄_vmaxv4sf
 = 1326,

723 
	mCODE_FOR_√⁄_vmöv8qi
 = 1327,

724 
	mCODE_FOR_√⁄_vmöv16qi
 = 1328,

725 
	mCODE_FOR_√⁄_vmöv4hi
 = 1329,

726 
	mCODE_FOR_√⁄_vmöv8hi
 = 1330,

727 
	mCODE_FOR_√⁄_vmöv2si
 = 1331,

728 
	mCODE_FOR_√⁄_vmöv4si
 = 1332,

729 
	mCODE_FOR_√⁄_vmöv2sf
 = 1333,

730 
	mCODE_FOR_√⁄_vmöv4sf
 = 1334,

731 
	mCODE_FOR_√⁄_v∑ddlv8qi
 = 1335,

732 
	mCODE_FOR_√⁄_v∑ddlv16qi
 = 1336,

733 
	mCODE_FOR_√⁄_v∑ddlv4hi
 = 1337,

734 
	mCODE_FOR_√⁄_v∑ddlv8hi
 = 1338,

735 
	mCODE_FOR_√⁄_v∑ddlv2si
 = 1339,

736 
	mCODE_FOR_√⁄_v∑ddlv4si
 = 1340,

737 
	mCODE_FOR_√⁄_v∑dÆv8qi
 = 1341,

738 
	mCODE_FOR_√⁄_v∑dÆv16qi
 = 1342,

739 
	mCODE_FOR_√⁄_v∑dÆv4hi
 = 1343,

740 
	mCODE_FOR_√⁄_v∑dÆv8hi
 = 1344,

741 
	mCODE_FOR_√⁄_v∑dÆv2si
 = 1345,

742 
	mCODE_FOR_√⁄_v∑dÆv4si
 = 1346,

743 
	mCODE_FOR_√⁄_vpmaxv8qi
 = 1347,

744 
	mCODE_FOR_√⁄_vpmaxv4hi
 = 1348,

745 
	mCODE_FOR_√⁄_vpmaxv2si
 = 1349,

746 
	mCODE_FOR_√⁄_vpmaxv2sf
 = 1350,

747 
	mCODE_FOR_√⁄_vpmöv8qi
 = 1351,

748 
	mCODE_FOR_√⁄_vpmöv4hi
 = 1352,

749 
	mCODE_FOR_√⁄_vpmöv2si
 = 1353,

750 
	mCODE_FOR_√⁄_vpmöv2sf
 = 1354,

751 
	mCODE_FOR_√⁄_vª˝sv2sf
 = 1355,

752 
	mCODE_FOR_√⁄_vª˝sv4sf
 = 1356,

753 
	mCODE_FOR_√⁄_vrsqπsv2sf
 = 1357,

754 
	mCODE_FOR_√⁄_vrsqπsv4sf
 = 1358,

755 
	mCODE_FOR_√⁄_vqabsv8qi
 = 1359,

756 
	mCODE_FOR_√⁄_vqabsv16qi
 = 1360,

757 
	mCODE_FOR_√⁄_vqabsv4hi
 = 1361,

758 
	mCODE_FOR_√⁄_vqabsv8hi
 = 1362,

759 
	mCODE_FOR_√⁄_vqabsv2si
 = 1363,

760 
	mCODE_FOR_√⁄_vqabsv4si
 = 1364,

761 
	mCODE_FOR_√⁄_vq√gv8qi
 = 1365,

762 
	mCODE_FOR_√⁄_vq√gv16qi
 = 1366,

763 
	mCODE_FOR_√⁄_vq√gv4hi
 = 1367,

764 
	mCODE_FOR_√⁄_vq√gv8hi
 = 1368,

765 
	mCODE_FOR_√⁄_vq√gv2si
 = 1369,

766 
	mCODE_FOR_√⁄_vq√gv4si
 = 1370,

767 
	mCODE_FOR_√⁄_v˛sv8qi
 = 1371,

768 
	mCODE_FOR_√⁄_v˛sv16qi
 = 1372,

769 
	mCODE_FOR_√⁄_v˛sv4hi
 = 1373,

770 
	mCODE_FOR_√⁄_v˛sv8hi
 = 1374,

771 
	mCODE_FOR_√⁄_v˛sv2si
 = 1375,

772 
	mCODE_FOR_√⁄_v˛sv4si
 = 1376,

773 
	mCODE_FOR_˛zv8qi2
 = 1377,

774 
	mCODE_FOR_˛zv16qi2
 = 1378,

775 
	mCODE_FOR_˛zv4hi2
 = 1379,

776 
	mCODE_FOR_˛zv8hi2
 = 1380,

777 
	mCODE_FOR_˛zv2si2
 = 1381,

778 
	mCODE_FOR_˛zv4si2
 = 1382,

779 
	mCODE_FOR_p›cou¡v8qi2
 = 1383,

780 
	mCODE_FOR_p›cou¡v16qi2
 = 1384,

781 
	mCODE_FOR_√⁄_vª˝ev2si
 = 1385,

782 
	mCODE_FOR_√⁄_vª˝ev2sf
 = 1386,

783 
	mCODE_FOR_√⁄_vª˝ev4si
 = 1387,

784 
	mCODE_FOR_√⁄_vª˝ev4sf
 = 1388,

785 
	mCODE_FOR_√⁄_vrsqπev2si
 = 1389,

786 
	mCODE_FOR_√⁄_vrsqπev2sf
 = 1390,

787 
	mCODE_FOR_√⁄_vrsqπev4si
 = 1391,

788 
	mCODE_FOR_√⁄_vrsqπev4sf
 = 1392,

789 
	mCODE_FOR_√⁄_vgë_œ√v8qi_£xt_öã∫Æ
 = 1393,

790 
	mCODE_FOR_√⁄_vgë_œ√v4hi_£xt_öã∫Æ
 = 1394,

791 
	mCODE_FOR_√⁄_vgë_œ√v2si_£xt_öã∫Æ
 = 1395,

792 
	mCODE_FOR_√⁄_vgë_œ√v2sf_£xt_öã∫Æ
 = 1396,

793 
	mCODE_FOR_√⁄_vgë_œ√v8qi_zext_öã∫Æ
 = 1397,

794 
	mCODE_FOR_√⁄_vgë_œ√v4hi_zext_öã∫Æ
 = 1398,

795 
	mCODE_FOR_√⁄_vgë_œ√v2si_zext_öã∫Æ
 = 1399,

796 
	mCODE_FOR_√⁄_vgë_œ√v2sf_zext_öã∫Æ
 = 1400,

797 
	mCODE_FOR_√⁄_vgë_œ√v16qi_£xt_öã∫Æ
 = 1401,

798 
	mCODE_FOR_√⁄_vgë_œ√v8hi_£xt_öã∫Æ
 = 1402,

799 
	mCODE_FOR_√⁄_vgë_œ√v4si_£xt_öã∫Æ
 = 1403,

800 
	mCODE_FOR_√⁄_vgë_œ√v4sf_£xt_öã∫Æ
 = 1404,

801 
	mCODE_FOR_√⁄_vgë_œ√v16qi_zext_öã∫Æ
 = 1405,

802 
	mCODE_FOR_√⁄_vgë_œ√v8hi_zext_öã∫Æ
 = 1406,

803 
	mCODE_FOR_√⁄_vgë_œ√v4si_zext_öã∫Æ
 = 1407,

804 
	mCODE_FOR_√⁄_vgë_œ√v4sf_zext_öã∫Æ
 = 1408,

805 
	mCODE_FOR_√⁄_vdup_nv8qi
 = 1409,

806 
	mCODE_FOR_√⁄_vdup_nv4hi
 = 1410,

807 
	mCODE_FOR_√⁄_vdup_nv16qi
 = 1411,

808 
	mCODE_FOR_√⁄_vdup_nv8hi
 = 1412,

809 
	mCODE_FOR_√⁄_vdup_nv2si
 = 1413,

810 
	mCODE_FOR_√⁄_vdup_nv2sf
 = 1414,

811 
	mCODE_FOR_√⁄_vdup_nv4si
 = 1415,

812 
	mCODE_FOR_√⁄_vdup_nv4sf
 = 1416,

813 
	mCODE_FOR_√⁄_vdup_nv2di
 = 1417,

814 
	mCODE_FOR_√⁄_vdup_œ√v8qi_öã∫Æ
 = 1418,

815 
	mCODE_FOR_√⁄_vdup_œ√v16qi_öã∫Æ
 = 1419,

816 
	mCODE_FOR_√⁄_vdup_œ√v4hi_öã∫Æ
 = 1420,

817 
	mCODE_FOR_√⁄_vdup_œ√v8hi_öã∫Æ
 = 1421,

818 
	mCODE_FOR_√⁄_vdup_œ√v2si_öã∫Æ
 = 1422,

819 
	mCODE_FOR_√⁄_vdup_œ√v4si_öã∫Æ
 = 1423,

820 
	mCODE_FOR_√⁄_vdup_œ√v2sf_öã∫Æ
 = 1424,

821 
	mCODE_FOR_√⁄_vdup_œ√v4sf_öã∫Æ
 = 1425,

822 
	mCODE_FOR_√⁄_vcomböev8qi
 = 1436,

823 
	mCODE_FOR_√⁄_vcomböev4hi
 = 1437,

824 
	mCODE_FOR_√⁄_vcomböev2si
 = 1438,

825 
	mCODE_FOR_√⁄_vcomböev2sf
 = 1439,

826 
	mCODE_FOR_√⁄_vcomböedi
 = 1440,

827 
	mCODE_FOR_Êﬂtv2siv2sf2
 = 1441,

828 
	mCODE_FOR_Êﬂtv4siv4sf2
 = 1442,

829 
	mCODE_FOR_Êﬂtunsv2siv2sf2
 = 1443,

830 
	mCODE_FOR_Êﬂtunsv4siv4sf2
 = 1444,

831 
	mCODE_FOR_fix_åuncv2sfv2si2
 = 1445,

832 
	mCODE_FOR_fix_åuncv4sfv4si2
 = 1446,

833 
	mCODE_FOR_fixuns_åuncv2sfv2si2
 = 1447,

834 
	mCODE_FOR_fixuns_åuncv4sfv4si2
 = 1448,

835 
	mCODE_FOR_√⁄_vcvtv2sf
 = 1449,

836 
	mCODE_FOR_√⁄_vcvtv4sf
 = 1450,

837 
	mCODE_FOR_√⁄_vcvtv2si
 = 1451,

838 
	mCODE_FOR_√⁄_vcvtv4si
 = 1452,

839 
	mCODE_FOR_√⁄_vcvtv4sfv4hf
 = 1453,

840 
	mCODE_FOR_√⁄_vcvtv4hfv4sf
 = 1454,

841 
	mCODE_FOR_√⁄_vcvt_nv2sf
 = 1455,

842 
	mCODE_FOR_√⁄_vcvt_nv4sf
 = 1456,

843 
	mCODE_FOR_√⁄_vcvt_nv2si
 = 1457,

844 
	mCODE_FOR_√⁄_vcvt_nv4si
 = 1458,

845 
	mCODE_FOR_√⁄_vmovnv8hi
 = 1459,

846 
	mCODE_FOR_√⁄_vmovnv4si
 = 1460,

847 
	mCODE_FOR_√⁄_vmovnv2di
 = 1461,

848 
	mCODE_FOR_√⁄_vqmovnv8hi
 = 1462,

849 
	mCODE_FOR_√⁄_vqmovnv4si
 = 1463,

850 
	mCODE_FOR_√⁄_vqmovnv2di
 = 1464,

851 
	mCODE_FOR_√⁄_vqmovunv8hi
 = 1465,

852 
	mCODE_FOR_√⁄_vqmovunv4si
 = 1466,

853 
	mCODE_FOR_√⁄_vqmovunv2di
 = 1467,

854 
	mCODE_FOR_√⁄_vmovlv8qi
 = 1468,

855 
	mCODE_FOR_√⁄_vmovlv4hi
 = 1469,

856 
	mCODE_FOR_√⁄_vmovlv2si
 = 1470,

857 
	mCODE_FOR_√⁄_vmul_œ√v4hi
 = 1471,

858 
	mCODE_FOR_√⁄_vmul_œ√v2si
 = 1472,

859 
	mCODE_FOR_√⁄_vmul_œ√v2sf
 = 1473,

860 
	mCODE_FOR_√⁄_vmul_œ√v8hi
 = 1474,

861 
	mCODE_FOR_√⁄_vmul_œ√v4si
 = 1475,

862 
	mCODE_FOR_√⁄_vmul_œ√v4sf
 = 1476,

863 
	mCODE_FOR_√⁄_vmuŒ_œ√v4hi
 = 1477,

864 
	mCODE_FOR_√⁄_vmuŒ_œ√v2si
 = 1478,

865 
	mCODE_FOR_√⁄_vqdmuŒ_œ√v4hi
 = 1479,

866 
	mCODE_FOR_√⁄_vqdmuŒ_œ√v2si
 = 1480,

867 
	mCODE_FOR_√⁄_vqdmulh_œ√v8hi
 = 1481,

868 
	mCODE_FOR_√⁄_vqdmulh_œ√v4si
 = 1482,

869 
	mCODE_FOR_√⁄_vqdmulh_œ√v4hi
 = 1483,

870 
	mCODE_FOR_√⁄_vqdmulh_œ√v2si
 = 1484,

871 
	mCODE_FOR_√⁄_vmœ_œ√v4hi
 = 1485,

872 
	mCODE_FOR_√⁄_vmœ_œ√v2si
 = 1486,

873 
	mCODE_FOR_√⁄_vmœ_œ√v2sf
 = 1487,

874 
	mCODE_FOR_√⁄_vmœ_œ√v8hi
 = 1488,

875 
	mCODE_FOR_√⁄_vmœ_œ√v4si
 = 1489,

876 
	mCODE_FOR_√⁄_vmœ_œ√v4sf
 = 1490,

877 
	mCODE_FOR_√⁄_vmœl_œ√v4hi
 = 1491,

878 
	mCODE_FOR_√⁄_vmœl_œ√v2si
 = 1492,

879 
	mCODE_FOR_√⁄_vqdmœl_œ√v4hi
 = 1493,

880 
	mCODE_FOR_√⁄_vqdmœl_œ√v2si
 = 1494,

881 
	mCODE_FOR_√⁄_vmls_œ√v4hi
 = 1495,

882 
	mCODE_FOR_√⁄_vmls_œ√v2si
 = 1496,

883 
	mCODE_FOR_√⁄_vmls_œ√v2sf
 = 1497,

884 
	mCODE_FOR_√⁄_vmls_œ√v8hi
 = 1498,

885 
	mCODE_FOR_√⁄_vmls_œ√v4si
 = 1499,

886 
	mCODE_FOR_√⁄_vmls_œ√v4sf
 = 1500,

887 
	mCODE_FOR_√⁄_vml¶_œ√v4hi
 = 1501,

888 
	mCODE_FOR_√⁄_vml¶_œ√v2si
 = 1502,

889 
	mCODE_FOR_√⁄_vqdml¶_œ√v4hi
 = 1503,

890 
	mCODE_FOR_√⁄_vqdml¶_œ√v2si
 = 1504,

891 
	mCODE_FOR_√⁄_vextv8qi
 = 1505,

892 
	mCODE_FOR_√⁄_vextv16qi
 = 1506,

893 
	mCODE_FOR_√⁄_vextv4hi
 = 1507,

894 
	mCODE_FOR_√⁄_vextv8hi
 = 1508,

895 
	mCODE_FOR_√⁄_vextv2si
 = 1509,

896 
	mCODE_FOR_√⁄_vextv4si
 = 1510,

897 
	mCODE_FOR_√⁄_vextv2sf
 = 1511,

898 
	mCODE_FOR_√⁄_vextv4sf
 = 1512,

899 
	mCODE_FOR_√⁄_vextdi
 = 1513,

900 
	mCODE_FOR_√⁄_vextv2di
 = 1514,

901 
	mCODE_FOR_√⁄_vªv64v8qi
 = 1515,

902 
	mCODE_FOR_√⁄_vªv64v16qi
 = 1516,

903 
	mCODE_FOR_√⁄_vªv64v4hi
 = 1517,

904 
	mCODE_FOR_√⁄_vªv64v8hi
 = 1518,

905 
	mCODE_FOR_√⁄_vªv64v2si
 = 1519,

906 
	mCODE_FOR_√⁄_vªv64v4si
 = 1520,

907 
	mCODE_FOR_√⁄_vªv64v2sf
 = 1521,

908 
	mCODE_FOR_√⁄_vªv64v4sf
 = 1522,

909 
	mCODE_FOR_√⁄_vªv64v2di
 = 1523,

910 
	mCODE_FOR_√⁄_vªv32v8qi
 = 1524,

911 
	mCODE_FOR_√⁄_vªv32v4hi
 = 1525,

912 
	mCODE_FOR_√⁄_vªv32v16qi
 = 1526,

913 
	mCODE_FOR_√⁄_vªv32v8hi
 = 1527,

914 
	mCODE_FOR_√⁄_vªv16v8qi
 = 1528,

915 
	mCODE_FOR_√⁄_vªv16v16qi
 = 1529,

916 
	mCODE_FOR_√⁄_vb¶v8qi_öã∫Æ
 = 1530,

917 
	mCODE_FOR_√⁄_vb¶v16qi_öã∫Æ
 = 1531,

918 
	mCODE_FOR_√⁄_vb¶v4hi_öã∫Æ
 = 1532,

919 
	mCODE_FOR_√⁄_vb¶v8hi_öã∫Æ
 = 1533,

920 
	mCODE_FOR_√⁄_vb¶v2si_öã∫Æ
 = 1534,

921 
	mCODE_FOR_√⁄_vb¶v4si_öã∫Æ
 = 1535,

922 
	mCODE_FOR_√⁄_vb¶v2sf_öã∫Æ
 = 1536,

923 
	mCODE_FOR_√⁄_vb¶v4sf_öã∫Æ
 = 1537,

924 
	mCODE_FOR_√⁄_vb¶di_öã∫Æ
 = 1538,

925 
	mCODE_FOR_√⁄_vb¶v2di_öã∫Æ
 = 1539,

926 
	mCODE_FOR_√⁄_vshlv8qi
 = 1540,

927 
	mCODE_FOR_√⁄_vshlv16qi
 = 1541,

928 
	mCODE_FOR_√⁄_vshlv4hi
 = 1542,

929 
	mCODE_FOR_√⁄_vshlv8hi
 = 1543,

930 
	mCODE_FOR_√⁄_vshlv2si
 = 1544,

931 
	mCODE_FOR_√⁄_vshlv4si
 = 1545,

932 
	mCODE_FOR_√⁄_vshldi
 = 1546,

933 
	mCODE_FOR_√⁄_vshlv2di
 = 1547,

934 
	mCODE_FOR_√⁄_vqshlv8qi
 = 1548,

935 
	mCODE_FOR_√⁄_vqshlv16qi
 = 1549,

936 
	mCODE_FOR_√⁄_vqshlv4hi
 = 1550,

937 
	mCODE_FOR_√⁄_vqshlv8hi
 = 1551,

938 
	mCODE_FOR_√⁄_vqshlv2si
 = 1552,

939 
	mCODE_FOR_√⁄_vqshlv4si
 = 1553,

940 
	mCODE_FOR_√⁄_vqshldi
 = 1554,

941 
	mCODE_FOR_√⁄_vqshlv2di
 = 1555,

942 
	mCODE_FOR_√⁄_vshr_nv8qi
 = 1556,

943 
	mCODE_FOR_√⁄_vshr_nv16qi
 = 1557,

944 
	mCODE_FOR_√⁄_vshr_nv4hi
 = 1558,

945 
	mCODE_FOR_√⁄_vshr_nv8hi
 = 1559,

946 
	mCODE_FOR_√⁄_vshr_nv2si
 = 1560,

947 
	mCODE_FOR_√⁄_vshr_nv4si
 = 1561,

948 
	mCODE_FOR_√⁄_vshr_ndi
 = 1562,

949 
	mCODE_FOR_√⁄_vshr_nv2di
 = 1563,

950 
	mCODE_FOR_√⁄_vsh∫_nv8hi
 = 1564,

951 
	mCODE_FOR_√⁄_vsh∫_nv4si
 = 1565,

952 
	mCODE_FOR_√⁄_vsh∫_nv2di
 = 1566,

953 
	mCODE_FOR_√⁄_vqsh∫_nv8hi
 = 1567,

954 
	mCODE_FOR_√⁄_vqsh∫_nv4si
 = 1568,

955 
	mCODE_FOR_√⁄_vqsh∫_nv2di
 = 1569,

956 
	mCODE_FOR_√⁄_vqshrun_nv8hi
 = 1570,

957 
	mCODE_FOR_√⁄_vqshrun_nv4si
 = 1571,

958 
	mCODE_FOR_√⁄_vqshrun_nv2di
 = 1572,

959 
	mCODE_FOR_√⁄_vshl_nv8qi
 = 1573,

960 
	mCODE_FOR_√⁄_vshl_nv16qi
 = 1574,

961 
	mCODE_FOR_√⁄_vshl_nv4hi
 = 1575,

962 
	mCODE_FOR_√⁄_vshl_nv8hi
 = 1576,

963 
	mCODE_FOR_√⁄_vshl_nv2si
 = 1577,

964 
	mCODE_FOR_√⁄_vshl_nv4si
 = 1578,

965 
	mCODE_FOR_√⁄_vshl_ndi
 = 1579,

966 
	mCODE_FOR_√⁄_vshl_nv2di
 = 1580,

967 
	mCODE_FOR_√⁄_vqshl_nv8qi
 = 1581,

968 
	mCODE_FOR_√⁄_vqshl_nv16qi
 = 1582,

969 
	mCODE_FOR_√⁄_vqshl_nv4hi
 = 1583,

970 
	mCODE_FOR_√⁄_vqshl_nv8hi
 = 1584,

971 
	mCODE_FOR_√⁄_vqshl_nv2si
 = 1585,

972 
	mCODE_FOR_√⁄_vqshl_nv4si
 = 1586,

973 
	mCODE_FOR_√⁄_vqshl_ndi
 = 1587,

974 
	mCODE_FOR_√⁄_vqshl_nv2di
 = 1588,

975 
	mCODE_FOR_√⁄_vqshlu_nv8qi
 = 1589,

976 
	mCODE_FOR_√⁄_vqshlu_nv16qi
 = 1590,

977 
	mCODE_FOR_√⁄_vqshlu_nv4hi
 = 1591,

978 
	mCODE_FOR_√⁄_vqshlu_nv8hi
 = 1592,

979 
	mCODE_FOR_√⁄_vqshlu_nv2si
 = 1593,

980 
	mCODE_FOR_√⁄_vqshlu_nv4si
 = 1594,

981 
	mCODE_FOR_√⁄_vqshlu_ndi
 = 1595,

982 
	mCODE_FOR_√⁄_vqshlu_nv2di
 = 1596,

983 
	mCODE_FOR_√⁄_vshŒ_nv8qi
 = 1597,

984 
	mCODE_FOR_√⁄_vshŒ_nv4hi
 = 1598,

985 
	mCODE_FOR_√⁄_vshŒ_nv2si
 = 1599,

986 
	mCODE_FOR_√⁄_v§a_nv8qi
 = 1600,

987 
	mCODE_FOR_√⁄_v§a_nv16qi
 = 1601,

988 
	mCODE_FOR_√⁄_v§a_nv4hi
 = 1602,

989 
	mCODE_FOR_√⁄_v§a_nv8hi
 = 1603,

990 
	mCODE_FOR_√⁄_v§a_nv2si
 = 1604,

991 
	mCODE_FOR_√⁄_v§a_nv4si
 = 1605,

992 
	mCODE_FOR_√⁄_v§a_ndi
 = 1606,

993 
	mCODE_FOR_√⁄_v§a_nv2di
 = 1607,

994 
	mCODE_FOR_√⁄_v§i_nv8qi
 = 1608,

995 
	mCODE_FOR_√⁄_v§i_nv16qi
 = 1609,

996 
	mCODE_FOR_√⁄_v§i_nv4hi
 = 1610,

997 
	mCODE_FOR_√⁄_v§i_nv8hi
 = 1611,

998 
	mCODE_FOR_√⁄_v§i_nv2si
 = 1612,

999 
	mCODE_FOR_√⁄_v§i_nv4si
 = 1613,

1000 
	mCODE_FOR_√⁄_v§i_ndi
 = 1614,

1001 
	mCODE_FOR_√⁄_v§i_nv2di
 = 1615,

1002 
	mCODE_FOR_√⁄_v¶i_nv8qi
 = 1616,

1003 
	mCODE_FOR_√⁄_v¶i_nv16qi
 = 1617,

1004 
	mCODE_FOR_√⁄_v¶i_nv4hi
 = 1618,

1005 
	mCODE_FOR_√⁄_v¶i_nv8hi
 = 1619,

1006 
	mCODE_FOR_√⁄_v¶i_nv2si
 = 1620,

1007 
	mCODE_FOR_√⁄_v¶i_nv4si
 = 1621,

1008 
	mCODE_FOR_√⁄_v¶i_ndi
 = 1622,

1009 
	mCODE_FOR_√⁄_v¶i_nv2di
 = 1623,

1010 
	mCODE_FOR_√⁄_vtbl1v8qi
 = 1624,

1011 
	mCODE_FOR_√⁄_vtbl2v8qi
 = 1625,

1012 
	mCODE_FOR_√⁄_vtbl3v8qi
 = 1626,

1013 
	mCODE_FOR_√⁄_vtbl4v8qi
 = 1627,

1014 
	mCODE_FOR_√⁄_vtbl1v16qi
 = 1628,

1015 
	mCODE_FOR_√⁄_vtbl2v16qi
 = 1629,

1016 
	mCODE_FOR_√⁄_vcomböev16qi
 = 1630,

1017 
	mCODE_FOR_√⁄_vtbx1v8qi
 = 1631,

1018 
	mCODE_FOR_√⁄_vtbx2v8qi
 = 1632,

1019 
	mCODE_FOR_√⁄_vtbx3v8qi
 = 1633,

1020 
	mCODE_FOR_√⁄_vtbx4v8qi
 = 1634,

1021 
	mCODE_FOR_√⁄_vld1v8qi
 = 1659,

1022 
	mCODE_FOR_√⁄_vld1v16qi
 = 1660,

1023 
	mCODE_FOR_√⁄_vld1v4hi
 = 1661,

1024 
	mCODE_FOR_√⁄_vld1v8hi
 = 1662,

1025 
	mCODE_FOR_√⁄_vld1v2si
 = 1663,

1026 
	mCODE_FOR_√⁄_vld1v4si
 = 1664,

1027 
	mCODE_FOR_√⁄_vld1v2sf
 = 1665,

1028 
	mCODE_FOR_√⁄_vld1v4sf
 = 1666,

1029 
	mCODE_FOR_√⁄_vld1di
 = 1667,

1030 
	mCODE_FOR_√⁄_vld1v2di
 = 1668,

1031 
	mCODE_FOR_√⁄_vld1_œ√v8qi
 = 1669,

1032 
	mCODE_FOR_√⁄_vld1_œ√v4hi
 = 1670,

1033 
	mCODE_FOR_√⁄_vld1_œ√v2si
 = 1671,

1034 
	mCODE_FOR_√⁄_vld1_œ√v2sf
 = 1672,

1035 
	mCODE_FOR_√⁄_vld1_œ√di
 = 1673,

1036 
	mCODE_FOR_√⁄_vld1_œ√v16qi
 = 1674,

1037 
	mCODE_FOR_√⁄_vld1_œ√v8hi
 = 1675,

1038 
	mCODE_FOR_√⁄_vld1_œ√v4si
 = 1676,

1039 
	mCODE_FOR_√⁄_vld1_œ√v4sf
 = 1677,

1040 
	mCODE_FOR_√⁄_vld1_œ√v2di
 = 1678,

1041 
	mCODE_FOR_√⁄_vld1_dupv8qi
 = 1679,

1042 
	mCODE_FOR_√⁄_vld1_dupv4hi
 = 1680,

1043 
	mCODE_FOR_√⁄_vld1_dupv2si
 = 1681,

1044 
	mCODE_FOR_√⁄_vld1_dupv2sf
 = 1682,

1045 
	mCODE_FOR_√⁄_vld1_dupv16qi
 = 1683,

1046 
	mCODE_FOR_√⁄_vld1_dupv8hi
 = 1684,

1047 
	mCODE_FOR_√⁄_vld1_dupv4si
 = 1685,

1048 
	mCODE_FOR_√⁄_vld1_dupv4sf
 = 1686,

1049 
	mCODE_FOR_√⁄_vld1_dupv2di
 = 1687,

1050 
	mCODE_FOR_√⁄_v°1v8qi
 = 1688,

1051 
	mCODE_FOR_√⁄_v°1v16qi
 = 1689,

1052 
	mCODE_FOR_√⁄_v°1v4hi
 = 1690,

1053 
	mCODE_FOR_√⁄_v°1v8hi
 = 1691,

1054 
	mCODE_FOR_√⁄_v°1v2si
 = 1692,

1055 
	mCODE_FOR_√⁄_v°1v4si
 = 1693,

1056 
	mCODE_FOR_√⁄_v°1v2sf
 = 1694,

1057 
	mCODE_FOR_√⁄_v°1v4sf
 = 1695,

1058 
	mCODE_FOR_√⁄_v°1di
 = 1696,

1059 
	mCODE_FOR_√⁄_v°1v2di
 = 1697,

1060 
	mCODE_FOR_√⁄_v°1_œ√v8qi
 = 1698,

1061 
	mCODE_FOR_√⁄_v°1_œ√v4hi
 = 1699,

1062 
	mCODE_FOR_√⁄_v°1_œ√v2si
 = 1700,

1063 
	mCODE_FOR_√⁄_v°1_œ√v2sf
 = 1701,

1064 
	mCODE_FOR_√⁄_v°1_œ√di
 = 1702,

1065 
	mCODE_FOR_√⁄_v°1_œ√v16qi
 = 1703,

1066 
	mCODE_FOR_√⁄_v°1_œ√v8hi
 = 1704,

1067 
	mCODE_FOR_√⁄_v°1_œ√v4si
 = 1705,

1068 
	mCODE_FOR_√⁄_v°1_œ√v4sf
 = 1706,

1069 
	mCODE_FOR_√⁄_v°1_œ√v2di
 = 1707,

1070 
	mCODE_FOR_√⁄_vld2v8qi
 = 1708,

1071 
	mCODE_FOR_√⁄_vld2v4hi
 = 1709,

1072 
	mCODE_FOR_√⁄_vld2v2si
 = 1710,

1073 
	mCODE_FOR_√⁄_vld2v2sf
 = 1711,

1074 
	mCODE_FOR_√⁄_vld2di
 = 1712,

1075 
	mCODE_FOR_√⁄_vld2v16qi
 = 1713,

1076 
	mCODE_FOR_√⁄_vld2v8hi
 = 1714,

1077 
	mCODE_FOR_√⁄_vld2v4si
 = 1715,

1078 
	mCODE_FOR_√⁄_vld2v4sf
 = 1716,

1079 
	mCODE_FOR_√⁄_vld2_œ√v8qi
 = 1717,

1080 
	mCODE_FOR_√⁄_vld2_œ√v4hi
 = 1718,

1081 
	mCODE_FOR_√⁄_vld2_œ√v2si
 = 1719,

1082 
	mCODE_FOR_√⁄_vld2_œ√v2sf
 = 1720,

1083 
	mCODE_FOR_√⁄_vld2_œ√v8hi
 = 1721,

1084 
	mCODE_FOR_√⁄_vld2_œ√v4si
 = 1722,

1085 
	mCODE_FOR_√⁄_vld2_œ√v4sf
 = 1723,

1086 
	mCODE_FOR_√⁄_vld2_dupv8qi
 = 1724,

1087 
	mCODE_FOR_√⁄_vld2_dupv4hi
 = 1725,

1088 
	mCODE_FOR_√⁄_vld2_dupv2si
 = 1726,

1089 
	mCODE_FOR_√⁄_vld2_dupv2sf
 = 1727,

1090 
	mCODE_FOR_√⁄_vld2_dupdi
 = 1728,

1091 
	mCODE_FOR_√⁄_v°2v8qi
 = 1729,

1092 
	mCODE_FOR_√⁄_v°2v4hi
 = 1730,

1093 
	mCODE_FOR_√⁄_v°2v2si
 = 1731,

1094 
	mCODE_FOR_√⁄_v°2v2sf
 = 1732,

1095 
	mCODE_FOR_√⁄_v°2di
 = 1733,

1096 
	mCODE_FOR_√⁄_v°2v16qi
 = 1734,

1097 
	mCODE_FOR_√⁄_v°2v8hi
 = 1735,

1098 
	mCODE_FOR_√⁄_v°2v4si
 = 1736,

1099 
	mCODE_FOR_√⁄_v°2v4sf
 = 1737,

1100 
	mCODE_FOR_√⁄_v°2_œ√v8qi
 = 1738,

1101 
	mCODE_FOR_√⁄_v°2_œ√v4hi
 = 1739,

1102 
	mCODE_FOR_√⁄_v°2_œ√v2si
 = 1740,

1103 
	mCODE_FOR_√⁄_v°2_œ√v2sf
 = 1741,

1104 
	mCODE_FOR_√⁄_v°2_œ√v8hi
 = 1742,

1105 
	mCODE_FOR_√⁄_v°2_œ√v4si
 = 1743,

1106 
	mCODE_FOR_√⁄_v°2_œ√v4sf
 = 1744,

1107 
	mCODE_FOR_√⁄_vld3v8qi
 = 1745,

1108 
	mCODE_FOR_√⁄_vld3v4hi
 = 1746,

1109 
	mCODE_FOR_√⁄_vld3v2si
 = 1747,

1110 
	mCODE_FOR_√⁄_vld3v2sf
 = 1748,

1111 
	mCODE_FOR_√⁄_vld3di
 = 1749,

1112 
	mCODE_FOR_√⁄_vld3qav16qi
 = 1750,

1113 
	mCODE_FOR_√⁄_vld3qav8hi
 = 1751,

1114 
	mCODE_FOR_√⁄_vld3qav4si
 = 1752,

1115 
	mCODE_FOR_√⁄_vld3qav4sf
 = 1753,

1116 
	mCODE_FOR_√⁄_vld3qbv16qi
 = 1754,

1117 
	mCODE_FOR_√⁄_vld3qbv8hi
 = 1755,

1118 
	mCODE_FOR_√⁄_vld3qbv4si
 = 1756,

1119 
	mCODE_FOR_√⁄_vld3qbv4sf
 = 1757,

1120 
	mCODE_FOR_√⁄_vld3_œ√v8qi
 = 1758,

1121 
	mCODE_FOR_√⁄_vld3_œ√v4hi
 = 1759,

1122 
	mCODE_FOR_√⁄_vld3_œ√v2si
 = 1760,

1123 
	mCODE_FOR_√⁄_vld3_œ√v2sf
 = 1761,

1124 
	mCODE_FOR_√⁄_vld3_œ√v8hi
 = 1762,

1125 
	mCODE_FOR_√⁄_vld3_œ√v4si
 = 1763,

1126 
	mCODE_FOR_√⁄_vld3_œ√v4sf
 = 1764,

1127 
	mCODE_FOR_√⁄_vld3_dupv8qi
 = 1765,

1128 
	mCODE_FOR_√⁄_vld3_dupv4hi
 = 1766,

1129 
	mCODE_FOR_√⁄_vld3_dupv2si
 = 1767,

1130 
	mCODE_FOR_√⁄_vld3_dupv2sf
 = 1768,

1131 
	mCODE_FOR_√⁄_vld3_dupdi
 = 1769,

1132 
	mCODE_FOR_√⁄_v°3v8qi
 = 1770,

1133 
	mCODE_FOR_√⁄_v°3v4hi
 = 1771,

1134 
	mCODE_FOR_√⁄_v°3v2si
 = 1772,

1135 
	mCODE_FOR_√⁄_v°3v2sf
 = 1773,

1136 
	mCODE_FOR_√⁄_v°3di
 = 1774,

1137 
	mCODE_FOR_√⁄_v°3qav16qi
 = 1775,

1138 
	mCODE_FOR_√⁄_v°3qav8hi
 = 1776,

1139 
	mCODE_FOR_√⁄_v°3qav4si
 = 1777,

1140 
	mCODE_FOR_√⁄_v°3qav4sf
 = 1778,

1141 
	mCODE_FOR_√⁄_v°3qbv16qi
 = 1779,

1142 
	mCODE_FOR_√⁄_v°3qbv8hi
 = 1780,

1143 
	mCODE_FOR_√⁄_v°3qbv4si
 = 1781,

1144 
	mCODE_FOR_√⁄_v°3qbv4sf
 = 1782,

1145 
	mCODE_FOR_√⁄_v°3_œ√v8qi
 = 1783,

1146 
	mCODE_FOR_√⁄_v°3_œ√v4hi
 = 1784,

1147 
	mCODE_FOR_√⁄_v°3_œ√v2si
 = 1785,

1148 
	mCODE_FOR_√⁄_v°3_œ√v2sf
 = 1786,

1149 
	mCODE_FOR_√⁄_v°3_œ√v8hi
 = 1787,

1150 
	mCODE_FOR_√⁄_v°3_œ√v4si
 = 1788,

1151 
	mCODE_FOR_√⁄_v°3_œ√v4sf
 = 1789,

1152 
	mCODE_FOR_√⁄_vld4v8qi
 = 1790,

1153 
	mCODE_FOR_√⁄_vld4v4hi
 = 1791,

1154 
	mCODE_FOR_√⁄_vld4v2si
 = 1792,

1155 
	mCODE_FOR_√⁄_vld4v2sf
 = 1793,

1156 
	mCODE_FOR_√⁄_vld4di
 = 1794,

1157 
	mCODE_FOR_√⁄_vld4qav16qi
 = 1795,

1158 
	mCODE_FOR_√⁄_vld4qav8hi
 = 1796,

1159 
	mCODE_FOR_√⁄_vld4qav4si
 = 1797,

1160 
	mCODE_FOR_√⁄_vld4qav4sf
 = 1798,

1161 
	mCODE_FOR_√⁄_vld4qbv16qi
 = 1799,

1162 
	mCODE_FOR_√⁄_vld4qbv8hi
 = 1800,

1163 
	mCODE_FOR_√⁄_vld4qbv4si
 = 1801,

1164 
	mCODE_FOR_√⁄_vld4qbv4sf
 = 1802,

1165 
	mCODE_FOR_√⁄_vld4_œ√v8qi
 = 1803,

1166 
	mCODE_FOR_√⁄_vld4_œ√v4hi
 = 1804,

1167 
	mCODE_FOR_√⁄_vld4_œ√v2si
 = 1805,

1168 
	mCODE_FOR_√⁄_vld4_œ√v2sf
 = 1806,

1169 
	mCODE_FOR_√⁄_vld4_œ√v8hi
 = 1807,

1170 
	mCODE_FOR_√⁄_vld4_œ√v4si
 = 1808,

1171 
	mCODE_FOR_√⁄_vld4_œ√v4sf
 = 1809,

1172 
	mCODE_FOR_√⁄_vld4_dupv8qi
 = 1810,

1173 
	mCODE_FOR_√⁄_vld4_dupv4hi
 = 1811,

1174 
	mCODE_FOR_√⁄_vld4_dupv2si
 = 1812,

1175 
	mCODE_FOR_√⁄_vld4_dupv2sf
 = 1813,

1176 
	mCODE_FOR_√⁄_vld4_dupdi
 = 1814,

1177 
	mCODE_FOR_√⁄_v°4v8qi
 = 1815,

1178 
	mCODE_FOR_√⁄_v°4v4hi
 = 1816,

1179 
	mCODE_FOR_√⁄_v°4v2si
 = 1817,

1180 
	mCODE_FOR_√⁄_v°4v2sf
 = 1818,

1181 
	mCODE_FOR_√⁄_v°4di
 = 1819,

1182 
	mCODE_FOR_√⁄_v°4qav16qi
 = 1820,

1183 
	mCODE_FOR_√⁄_v°4qav8hi
 = 1821,

1184 
	mCODE_FOR_√⁄_v°4qav4si
 = 1822,

1185 
	mCODE_FOR_√⁄_v°4qav4sf
 = 1823,

1186 
	mCODE_FOR_√⁄_v°4qbv16qi
 = 1824,

1187 
	mCODE_FOR_√⁄_v°4qbv8hi
 = 1825,

1188 
	mCODE_FOR_√⁄_v°4qbv4si
 = 1826,

1189 
	mCODE_FOR_√⁄_v°4qbv4sf
 = 1827,

1190 
	mCODE_FOR_√⁄_v°4_œ√v8qi
 = 1828,

1191 
	mCODE_FOR_√⁄_v°4_œ√v4hi
 = 1829,

1192 
	mCODE_FOR_√⁄_v°4_œ√v2si
 = 1830,

1193 
	mCODE_FOR_√⁄_v°4_œ√v2sf
 = 1831,

1194 
	mCODE_FOR_√⁄_v°4_œ√v8hi
 = 1832,

1195 
	mCODE_FOR_√⁄_v°4_œ√v4si
 = 1833,

1196 
	mCODE_FOR_√⁄_v°4_œ√v4sf
 = 1834,

1197 
	mCODE_FOR_√⁄_vec_u≈acks_lo_v16qi
 = 1835,

1198 
	mCODE_FOR_√⁄_vec_u≈acku_lo_v16qi
 = 1836,

1199 
	mCODE_FOR_√⁄_vec_u≈acks_lo_v8hi
 = 1837,

1200 
	mCODE_FOR_√⁄_vec_u≈acku_lo_v8hi
 = 1838,

1201 
	mCODE_FOR_√⁄_vec_u≈acks_lo_v4si
 = 1839,

1202 
	mCODE_FOR_√⁄_vec_u≈acku_lo_v4si
 = 1840,

1203 
	mCODE_FOR_√⁄_vec_u≈acks_hi_v16qi
 = 1841,

1204 
	mCODE_FOR_√⁄_vec_u≈acku_hi_v16qi
 = 1842,

1205 
	mCODE_FOR_√⁄_vec_u≈acks_hi_v8hi
 = 1843,

1206 
	mCODE_FOR_√⁄_vec_u≈acku_hi_v8hi
 = 1844,

1207 
	mCODE_FOR_√⁄_vec_u≈acks_hi_v4si
 = 1845,

1208 
	mCODE_FOR_√⁄_vec_u≈acku_hi_v4si
 = 1846,

1209 
	mCODE_FOR_√⁄_vec_smu…_lo_v16qi
 = 1847,

1210 
	mCODE_FOR_√⁄_vec_umu…_lo_v16qi
 = 1848,

1211 
	mCODE_FOR_√⁄_vec_smu…_lo_v8hi
 = 1849,

1212 
	mCODE_FOR_√⁄_vec_umu…_lo_v8hi
 = 1850,

1213 
	mCODE_FOR_√⁄_vec_smu…_lo_v4si
 = 1851,

1214 
	mCODE_FOR_√⁄_vec_umu…_lo_v4si
 = 1852,

1215 
	mCODE_FOR_√⁄_vec_smu…_hi_v16qi
 = 1853,

1216 
	mCODE_FOR_√⁄_vec_umu…_hi_v16qi
 = 1854,

1217 
	mCODE_FOR_√⁄_vec_smu…_hi_v8hi
 = 1855,

1218 
	mCODE_FOR_√⁄_vec_umu…_hi_v8hi
 = 1856,

1219 
	mCODE_FOR_√⁄_vec_smu…_hi_v4si
 = 1857,

1220 
	mCODE_FOR_√⁄_vec_umu…_hi_v4si
 = 1858,

1221 
	mCODE_FOR_√⁄_vec_sshi·l_v8qi
 = 1859,

1222 
	mCODE_FOR_√⁄_vec_ushi·l_v8qi
 = 1860,

1223 
	mCODE_FOR_√⁄_vec_sshi·l_v4hi
 = 1861,

1224 
	mCODE_FOR_√⁄_vec_ushi·l_v4hi
 = 1862,

1225 
	mCODE_FOR_√⁄_vec_sshi·l_v2si
 = 1863,

1226 
	mCODE_FOR_√⁄_vec_ushi·l_v2si
 = 1864,

1227 
	mCODE_FOR_√⁄_u≈acks_v8qi
 = 1865,

1228 
	mCODE_FOR_√⁄_u≈acku_v8qi
 = 1866,

1229 
	mCODE_FOR_√⁄_u≈acks_v4hi
 = 1867,

1230 
	mCODE_FOR_√⁄_u≈acku_v4hi
 = 1868,

1231 
	mCODE_FOR_√⁄_u≈acks_v2si
 = 1869,

1232 
	mCODE_FOR_√⁄_u≈acku_v2si
 = 1870,

1233 
	mCODE_FOR_√⁄_vec_smu…_v8qi
 = 1871,

1234 
	mCODE_FOR_√⁄_vec_umu…_v8qi
 = 1872,

1235 
	mCODE_FOR_√⁄_vec_smu…_v4hi
 = 1873,

1236 
	mCODE_FOR_√⁄_vec_umu…_v4hi
 = 1874,

1237 
	mCODE_FOR_√⁄_vec_smu…_v2si
 = 1875,

1238 
	mCODE_FOR_√⁄_vec_umu…_v2si
 = 1876,

1239 
	mCODE_FOR_vec_∑ck_åunc_v8hi
 = 1877,

1240 
	mCODE_FOR_vec_∑ck_åunc_v4si
 = 1878,

1241 
	mCODE_FOR_vec_∑ck_åunc_v2di
 = 1879,

1242 
	mCODE_FOR_√⁄_vec_∑ck_åunc_v8hi
 = 1880,

1243 
	mCODE_FOR_√⁄_vec_∑ck_åunc_v4si
 = 1881,

1244 
	mCODE_FOR_√⁄_vec_∑ck_åunc_v2di
 = 1882,

1245 
	mCODE_FOR_√⁄_vabdv8qi_2
 = 1883,

1246 
	mCODE_FOR_√⁄_vabdv16qi_2
 = 1884,

1247 
	mCODE_FOR_√⁄_vabdv4hi_2
 = 1885,

1248 
	mCODE_FOR_√⁄_vabdv8hi_2
 = 1886,

1249 
	mCODE_FOR_√⁄_vabdv2si_2
 = 1887,

1250 
	mCODE_FOR_√⁄_vabdv4si_2
 = 1888,

1251 
	mCODE_FOR_√⁄_vabdv2sf_2
 = 1889,

1252 
	mCODE_FOR_√⁄_vabdv4sf_2
 = 1890,

1253 
	mCODE_FOR_√⁄_vabdv2di_2
 = 1891,

1254 
	mCODE_FOR_√⁄_vabdv8qi_3
 = 1892,

1255 
	mCODE_FOR_√⁄_vabdv16qi_3
 = 1893,

1256 
	mCODE_FOR_√⁄_vabdv4hi_3
 = 1894,

1257 
	mCODE_FOR_√⁄_vabdv8hi_3
 = 1895,

1258 
	mCODE_FOR_√⁄_vabdv2si_3
 = 1896,

1259 
	mCODE_FOR_√⁄_vabdv4si_3
 = 1897,

1260 
	mCODE_FOR_√⁄_vabdv2sf_3
 = 1898,

1261 
	mCODE_FOR_√⁄_vabdv4sf_3
 = 1899,

1262 
	mCODE_FOR_√⁄_vabdv2di_3
 = 1900,

1263 
	mCODE_FOR_¸y±o_´smc
 = 1901,

1264 
	mCODE_FOR_¸y±o_´simc
 = 1902,

1265 
	mCODE_FOR_¸y±o_´sd
 = 1903,

1266 
	mCODE_FOR_¸y±o_´£
 = 1904,

1267 
	mCODE_FOR_¸y±o_sha1su1
 = 1905,

1268 
	mCODE_FOR_¸y±o_sha256su0
 = 1906,

1269 
	mCODE_FOR_¸y±o_sha1su0
 = 1907,

1270 
	mCODE_FOR_¸y±o_sha256h
 = 1908,

1271 
	mCODE_FOR_¸y±o_sha256h2
 = 1909,

1272 
	mCODE_FOR_¸y±o_sha256su1
 = 1910,

1273 
	mCODE_FOR_¸y±o_sha1h
 = 1911,

1274 
	mCODE_FOR_¸y±o_vmuŒp64
 = 1912,

1275 
	mCODE_FOR_¸y±o_sha1c
 = 1913,

1276 
	mCODE_FOR_¸y±o_sha1m
 = 1914,

1277 
	mCODE_FOR_¸y±o_sha1p
 = 1915,

1278 
	mCODE_FOR_©omic_lﬂdqi
 = 1917,

1279 
	mCODE_FOR_©omic_lﬂdhi
 = 1918,

1280 
	mCODE_FOR_©omic_lﬂdsi
 = 1919,

1281 
	mCODE_FOR_©omic_°‹eqi
 = 1920,

1282 
	mCODE_FOR_©omic_°‹ehi
 = 1921,

1283 
	mCODE_FOR_©omic_°‹esi
 = 1922,

1284 
	mCODE_FOR_©omic_lﬂddi_1
 = 1923,

1285 
	mCODE_FOR_©omic_com∑ª_™d_sw≠qi_1
 = 1924,

1286 
	mCODE_FOR_©omic_com∑ª_™d_sw≠hi_1
 = 1925,

1287 
	mCODE_FOR_©omic_com∑ª_™d_sw≠si_1
 = 1926,

1288 
	mCODE_FOR_©omic_com∑ª_™d_sw≠di_1
 = 1927,

1289 
	mCODE_FOR_©omic_exch™geqi
 = 1928,

1290 
	mCODE_FOR_©omic_exch™gehi
 = 1929,

1291 
	mCODE_FOR_©omic_exch™gesi
 = 1930,

1292 
	mCODE_FOR_©omic_exch™gedi
 = 1931,

1293 
	mCODE_FOR_©omic_addqi
 = 1932,

1294 
	mCODE_FOR_©omic_subqi
 = 1933,

1295 
	mCODE_FOR_©omic_‹qi
 = 1934,

1296 
	mCODE_FOR_©omic_x‹qi
 = 1935,

1297 
	mCODE_FOR_©omic_™dqi
 = 1936,

1298 
	mCODE_FOR_©omic_addhi
 = 1937,

1299 
	mCODE_FOR_©omic_subhi
 = 1938,

1300 
	mCODE_FOR_©omic_‹hi
 = 1939,

1301 
	mCODE_FOR_©omic_x‹hi
 = 1940,

1302 
	mCODE_FOR_©omic_™dhi
 = 1941,

1303 
	mCODE_FOR_©omic_addsi
 = 1942,

1304 
	mCODE_FOR_©omic_subsi
 = 1943,

1305 
	mCODE_FOR_©omic_‹si
 = 1944,

1306 
	mCODE_FOR_©omic_x‹si
 = 1945,

1307 
	mCODE_FOR_©omic_™dsi
 = 1946,

1308 
	mCODE_FOR_©omic_adddi
 = 1947,

1309 
	mCODE_FOR_©omic_subdi
 = 1948,

1310 
	mCODE_FOR_©omic_‹di
 = 1949,

1311 
	mCODE_FOR_©omic_x‹di
 = 1950,

1312 
	mCODE_FOR_©omic_™ddi
 = 1951,

1313 
	mCODE_FOR_©omic_«ndqi
 = 1952,

1314 
	mCODE_FOR_©omic_«ndhi
 = 1953,

1315 
	mCODE_FOR_©omic_«ndsi
 = 1954,

1316 
	mCODE_FOR_©omic_«nddi
 = 1955,

1317 
	mCODE_FOR_©omic_„tch_addqi
 = 1956,

1318 
	mCODE_FOR_©omic_„tch_subqi
 = 1957,

1319 
	mCODE_FOR_©omic_„tch_‹qi
 = 1958,

1320 
	mCODE_FOR_©omic_„tch_x‹qi
 = 1959,

1321 
	mCODE_FOR_©omic_„tch_™dqi
 = 1960,

1322 
	mCODE_FOR_©omic_„tch_addhi
 = 1961,

1323 
	mCODE_FOR_©omic_„tch_subhi
 = 1962,

1324 
	mCODE_FOR_©omic_„tch_‹hi
 = 1963,

1325 
	mCODE_FOR_©omic_„tch_x‹hi
 = 1964,

1326 
	mCODE_FOR_©omic_„tch_™dhi
 = 1965,

1327 
	mCODE_FOR_©omic_„tch_addsi
 = 1966,

1328 
	mCODE_FOR_©omic_„tch_subsi
 = 1967,

1329 
	mCODE_FOR_©omic_„tch_‹si
 = 1968,

1330 
	mCODE_FOR_©omic_„tch_x‹si
 = 1969,

1331 
	mCODE_FOR_©omic_„tch_™dsi
 = 1970,

1332 
	mCODE_FOR_©omic_„tch_adddi
 = 1971,

1333 
	mCODE_FOR_©omic_„tch_subdi
 = 1972,

1334 
	mCODE_FOR_©omic_„tch_‹di
 = 1973,

1335 
	mCODE_FOR_©omic_„tch_x‹di
 = 1974,

1336 
	mCODE_FOR_©omic_„tch_™ddi
 = 1975,

1337 
	mCODE_FOR_©omic_„tch_«ndqi
 = 1976,

1338 
	mCODE_FOR_©omic_„tch_«ndhi
 = 1977,

1339 
	mCODE_FOR_©omic_„tch_«ndsi
 = 1978,

1340 
	mCODE_FOR_©omic_„tch_«nddi
 = 1979,

1341 
	mCODE_FOR_©omic_add_„tchqi
 = 1980,

1342 
	mCODE_FOR_©omic_sub_„tchqi
 = 1981,

1343 
	mCODE_FOR_©omic_‹_„tchqi
 = 1982,

1344 
	mCODE_FOR_©omic_x‹_„tchqi
 = 1983,

1345 
	mCODE_FOR_©omic_™d_„tchqi
 = 1984,

1346 
	mCODE_FOR_©omic_add_„tchhi
 = 1985,

1347 
	mCODE_FOR_©omic_sub_„tchhi
 = 1986,

1348 
	mCODE_FOR_©omic_‹_„tchhi
 = 1987,

1349 
	mCODE_FOR_©omic_x‹_„tchhi
 = 1988,

1350 
	mCODE_FOR_©omic_™d_„tchhi
 = 1989,

1351 
	mCODE_FOR_©omic_add_„tchsi
 = 1990,

1352 
	mCODE_FOR_©omic_sub_„tchsi
 = 1991,

1353 
	mCODE_FOR_©omic_‹_„tchsi
 = 1992,

1354 
	mCODE_FOR_©omic_x‹_„tchsi
 = 1993,

1355 
	mCODE_FOR_©omic_™d_„tchsi
 = 1994,

1356 
	mCODE_FOR_©omic_add_„tchdi
 = 1995,

1357 
	mCODE_FOR_©omic_sub_„tchdi
 = 1996,

1358 
	mCODE_FOR_©omic_‹_„tchdi
 = 1997,

1359 
	mCODE_FOR_©omic_x‹_„tchdi
 = 1998,

1360 
	mCODE_FOR_©omic_™d_„tchdi
 = 1999,

1361 
	mCODE_FOR_©omic_«nd_„tchqi
 = 2000,

1362 
	mCODE_FOR_©omic_«nd_„tchhi
 = 2001,

1363 
	mCODE_FOR_©omic_«nd_„tchsi
 = 2002,

1364 
	mCODE_FOR_©omic_«nd_„tchdi
 = 2003,

1365 
	mCODE_FOR_¨m_lﬂd_ex˛usiveqi
 = 2004,

1366 
	mCODE_FOR_¨m_lﬂd_ex˛usivehi
 = 2005,

1367 
	mCODE_FOR_¨m_lﬂd_acquúe_ex˛usiveqi
 = 2006,

1368 
	mCODE_FOR_¨m_lﬂd_acquúe_ex˛usivehi
 = 2007,

1369 
	mCODE_FOR_¨m_lﬂd_ex˛usivesi
 = 2008,

1370 
	mCODE_FOR_¨m_lﬂd_acquúe_ex˛usivesi
 = 2009,

1371 
	mCODE_FOR_¨m_lﬂd_ex˛usivedi
 = 2010,

1372 
	mCODE_FOR_¨m_lﬂd_acquúe_ex˛usivedi
 = 2011,

1373 
	mCODE_FOR_¨m_°‹e_ex˛usiveqi
 = 2012,

1374 
	mCODE_FOR_¨m_°‹e_ex˛usivehi
 = 2013,

1375 
	mCODE_FOR_¨m_°‹e_ex˛usivesi
 = 2014,

1376 
	mCODE_FOR_¨m_°‹e_ex˛usivedi
 = 2015,

1377 
	mCODE_FOR_¨m_°‹e_ªÀa£_ex˛usivedi
 = 2016,

1378 
	mCODE_FOR_¨m_°‹e_ªÀa£_ex˛usiveqi
 = 2017,

1379 
	mCODE_FOR_¨m_°‹e_ªÀa£_ex˛usivehi
 = 2018,

1380 
	mCODE_FOR_¨m_°‹e_ªÀa£_ex˛usivesi
 = 2019,

1381 
	mCODE_FOR_addqq3
 = 2020,

1382 
	mCODE_FOR_addhq3
 = 2021,

1383 
	mCODE_FOR_addsq3
 = 2022,

1384 
	mCODE_FOR_adduqq3
 = 2023,

1385 
	mCODE_FOR_adduhq3
 = 2024,

1386 
	mCODE_FOR_addusq3
 = 2025,

1387 
	mCODE_FOR_addha3
 = 2026,

1388 
	mCODE_FOR_addß3
 = 2027,

1389 
	mCODE_FOR_adduha3
 = 2028,

1390 
	mCODE_FOR_adduß3
 = 2029,

1391 
	mCODE_FOR_addv4qq3
 = 2030,

1392 
	mCODE_FOR_addv2hq3
 = 2031,

1393 
	mCODE_FOR_addv2ha3
 = 2032,

1394 
	mCODE_FOR_ußddv4uqq3
 = 2033,

1395 
	mCODE_FOR_ußddv2uhq3
 = 2034,

1396 
	mCODE_FOR_ußdduqq3
 = 2035,

1397 
	mCODE_FOR_ußdduhq3
 = 2036,

1398 
	mCODE_FOR_ußddv2uha3
 = 2037,

1399 
	mCODE_FOR_ußdduha3
 = 2038,

1400 
	mCODE_FOR_sßddv4qq3
 = 2039,

1401 
	mCODE_FOR_sßddv2hq3
 = 2040,

1402 
	mCODE_FOR_sßddqq3
 = 2041,

1403 
	mCODE_FOR_sßddhq3
 = 2042,

1404 
	mCODE_FOR_sßddv2ha3
 = 2043,

1405 
	mCODE_FOR_sßddha3
 = 2044,

1406 
	mCODE_FOR_sßddsq3
 = 2045,

1407 
	mCODE_FOR_sßddß3
 = 2046,

1408 
	mCODE_FOR_subqq3
 = 2047,

1409 
	mCODE_FOR_subhq3
 = 2048,

1410 
	mCODE_FOR_subsq3
 = 2049,

1411 
	mCODE_FOR_subuqq3
 = 2050,

1412 
	mCODE_FOR_subuhq3
 = 2051,

1413 
	mCODE_FOR_subusq3
 = 2052,

1414 
	mCODE_FOR_subha3
 = 2053,

1415 
	mCODE_FOR_subß3
 = 2054,

1416 
	mCODE_FOR_subuha3
 = 2055,

1417 
	mCODE_FOR_subuß3
 = 2056,

1418 
	mCODE_FOR_subv4qq3
 = 2057,

1419 
	mCODE_FOR_subv2hq3
 = 2058,

1420 
	mCODE_FOR_subv2ha3
 = 2059,

1421 
	mCODE_FOR_ussubv4uqq3
 = 2060,

1422 
	mCODE_FOR_ussubv2uhq3
 = 2061,

1423 
	mCODE_FOR_ussubuqq3
 = 2062,

1424 
	mCODE_FOR_ussubuhq3
 = 2063,

1425 
	mCODE_FOR_ussubv2uha3
 = 2064,

1426 
	mCODE_FOR_ussubuha3
 = 2065,

1427 
	mCODE_FOR_sssubv4qq3
 = 2066,

1428 
	mCODE_FOR_sssubv2hq3
 = 2067,

1429 
	mCODE_FOR_sssubqq3
 = 2068,

1430 
	mCODE_FOR_sssubhq3
 = 2069,

1431 
	mCODE_FOR_sssubv2ha3
 = 2070,

1432 
	mCODE_FOR_sssubha3
 = 2071,

1433 
	mCODE_FOR_sssubsq3
 = 2072,

1434 
	mCODE_FOR_sssubß3
 = 2073,

1435 
	mCODE_FOR_ssmulß3
 = 2074,

1436 
	mCODE_FOR_usmuluß3
 = 2075,

1437 
	mCODE_FOR_¨m_sßtsihi_shi·
 = 2076,

1438 
	mCODE_FOR_¨m_ußtsihi
 = 2077,

1439 
	mCODE_FOR_adddi3
 = 2078,

1440 
	mCODE_FOR_addsi3
 = 2082,

1441 
	mCODE_FOR_addsf3
 = 2087,

1442 
	mCODE_FOR_adddf3
 = 2088,

1443 
	mCODE_FOR_subdi3
 = 2089,

1444 
	mCODE_FOR_subsi3
 = 2096,

1445 
	mCODE_FOR_subsf3
 = 2099,

1446 
	mCODE_FOR_subdf3
 = 2100,

1447 
	mCODE_FOR_mulhi3
 = 2101,

1448 
	mCODE_FOR_mulsi3
 = 2102,

1449 
	mCODE_FOR_maddsidi4
 = 2103,

1450 
	mCODE_FOR_mulsidi3
 = 2104,

1451 
	mCODE_FOR_umulsidi3
 = 2105,

1452 
	mCODE_FOR_umaddsidi4
 = 2106,

1453 
	mCODE_FOR_smulsi3_high∑π
 = 2107,

1454 
	mCODE_FOR_umulsi3_high∑π
 = 2108,

1455 
	mCODE_FOR_mulsf3
 = 2109,

1456 
	mCODE_FOR_muldf3
 = 2110,

1457 
	mCODE_FOR_divsf3
 = 2111,

1458 
	mCODE_FOR_divdf3
 = 2112,

1459 
	mCODE_FOR_™ddi3
 = 2117,

1460 
	mCODE_FOR_™dsi3
 = 2120,

1461 
	mCODE_FOR_ösv
 = 2128,

1462 
	mCODE_FOR_i‹di3
 = 2132,

1463 
	mCODE_FOR_i‹si3
 = 2134,

1464 
	mCODE_FOR_x‹di3
 = 2137,

1465 
	mCODE_FOR_x‹si3
 = 2139,

1466 
	mCODE_FOR_smaxsi3
 = 2147,

1467 
	mCODE_FOR_smösi3
 = 2149,

1468 
	mCODE_FOR_umaxsi3
 = 2151,

1469 
	mCODE_FOR_umösi3
 = 2153,

1470 
	mCODE_FOR_ashldi3
 = 2156,

1471 
	mCODE_FOR_ashlsi3
 = 2157,

1472 
	mCODE_FOR_ashrdi3
 = 2158,

1473 
	mCODE_FOR_ashrsi3
 = 2159,

1474 
	mCODE_FOR_lshrdi3
 = 2160,

1475 
	mCODE_FOR_lshrsi3
 = 2161,

1476 
	mCODE_FOR_rŸlsi3
 = 2162,

1477 
	mCODE_FOR_rŸrsi3
 = 2163,

1478 
	mCODE_FOR_extzv
 = 2164,

1479 
	mCODE_FOR_extzv_t1
 = 2165,

1480 
	mCODE_FOR_extv
 = 2166,

1481 
	mCODE_FOR_extv_ªgsi
 = 2167,

1482 
	mCODE_FOR_√gdi2
 = 2170,

1483 
	mCODE_FOR_√gsi2
 = 2172,

1484 
	mCODE_FOR_√gsf2
 = 2173,

1485 
	mCODE_FOR_√gdf2
 = 2174,

1486 
	mCODE_FOR_abssi2
 = 2178,

1487 
	mCODE_FOR_abssf2
 = 2181,

1488 
	mCODE_FOR_absdf2
 = 2182,

1489 
	mCODE_FOR_sqπsf2
 = 2183,

1490 
	mCODE_FOR_sqπdf2
 = 2184,

1491 
	mCODE_FOR_⁄e_cm∂si2
 = 2186,

1492 
	mCODE_FOR_Êﬂtsihf2
 = 2187,

1493 
	mCODE_FOR_Êﬂtdihf2
 = 2188,

1494 
	mCODE_FOR_Êﬂtsisf2
 = 2189,

1495 
	mCODE_FOR_Êﬂtsidf2
 = 2190,

1496 
	mCODE_FOR_fix_åunchfsi2
 = 2191,

1497 
	mCODE_FOR_fix_åunchfdi2
 = 2192,

1498 
	mCODE_FOR_fix_åuncsfsi2
 = 2193,

1499 
	mCODE_FOR_fix_åuncdfsi2
 = 2194,

1500 
	mCODE_FOR_åuncdfsf2
 = 2195,

1501 
	mCODE_FOR_åuncdfhf2
 = 2196,

1502 
	mCODE_FOR_zîo_exãndhisi2
 = 2199,

1503 
	mCODE_FOR_zîo_exãndqisi2
 = 2201,

1504 
	mCODE_FOR_exãndhisi2
 = 2207,

1505 
	mCODE_FOR_exãndhisi2_mem
 = 2209,

1506 
	mCODE_FOR_exãndqihi2
 = 2211,

1507 
	mCODE_FOR_exãndqisi2
 = 2212,

1508 
	mCODE_FOR_exãndsfdf2
 = 2214,

1509 
	mCODE_FOR_exãndhfdf2
 = 2215,

1510 
	mCODE_FOR_movdi
 = 2216,

1511 
	mCODE_FOR_movsi
 = 2236,

1512 
	mCODE_FOR_ˇlcuœã_pic_addªss
 = 2240,

1513 
	mCODE_FOR_buûtö_£tjmp_ª˚ivî
 = 2244,

1514 
	mCODE_FOR_°‹ehi
 = 2245,

1515 
	mCODE_FOR_°‹ehi_bigíd
 = 2246,

1516 
	mCODE_FOR_°‹eöthi
 = 2247,

1517 
	mCODE_FOR_°‹ehi_sögÀ_›
 = 2248,

1518 
	mCODE_FOR_movhi
 = 2249,

1519 
	mCODE_FOR_movhi_byãs
 = 2250,

1520 
	mCODE_FOR_movhi_bigíd
 = 2251,

1521 
	mCODE_FOR_ªlﬂd_outhi
 = 2252,

1522 
	mCODE_FOR_ªlﬂd_öhi
 = 2253,

1523 
	mCODE_FOR_movqi
 = 2254,

1524 
	mCODE_FOR_movhf
 = 2255,

1525 
	mCODE_FOR_movsf
 = 2256,

1526 
	mCODE_FOR_movdf
 = 2258,

1527 
	mCODE_FOR_ªlﬂd_outdf
 = 2259,

1528 
	mCODE_FOR_lﬂd_mu…ùÀ
 = 2260,

1529 
	mCODE_FOR_°‹e_mu…ùÀ
 = 2261,

1530 
	mCODE_FOR_movmemqi
 = 2262,

1531 
	mCODE_FOR_cbønchsi4
 = 2263,

1532 
	mCODE_FOR_cbønchsf4
 = 2264,

1533 
	mCODE_FOR_cbønchdf4
 = 2265,

1534 
	mCODE_FOR_cbønchdi4
 = 2266,

1535 
	mCODE_FOR_cbønch_cc
 = 2269,

1536 
	mCODE_FOR_c°‹e_cc
 = 2270,

1537 
	mCODE_FOR_c°‹esi4
 = 2274,

1538 
	mCODE_FOR_c°‹esf4
 = 2275,

1539 
	mCODE_FOR_c°‹edf4
 = 2276,

1540 
	mCODE_FOR_c°‹edi4
 = 2277,

1541 
	mCODE_FOR_movsicc
 = 2278,

1542 
	mCODE_FOR_movsfcc
 = 2279,

1543 
	mCODE_FOR_movdfcc
 = 2280,

1544 
	mCODE_FOR_jump
 = 2282,

1545 
	mCODE_FOR_ˇŒ
 = 2283,

1546 
	mCODE_FOR_ˇŒ_öã∫Æ
 = 2284,

1547 
	mCODE_FOR_ˇŒ_vÆue
 = 2285,

1548 
	mCODE_FOR_ˇŒ_vÆue_öã∫Æ
 = 2286,

1549 
	mCODE_FOR_sibˇŒ
 = 2287,

1550 
	mCODE_FOR_sibˇŒ_vÆue
 = 2288,

1551 
	mCODE_FOR_ªtu∫
 = 2289,

1552 
	mCODE_FOR_sim∂e_ªtu∫
 = 2290,

1553 
	mCODE_FOR_ªtu∫_addr_mask
 = 2291,

1554 
	mCODE_FOR_u¡y≥d_ˇŒ
 = 2292,

1555 
	mCODE_FOR_u¡y≥d_ªtu∫
 = 2293,

1556 
	mCODE_FOR_ˇ£si
 = 2294,

1557 
	mCODE_FOR_ödúe˘_jump
 = 2295,

1558 
	mCODE_FOR_¥ﬁogue
 = 2322,

1559 
	mCODE_FOR_ïûogue
 = 2323,

1560 
	mCODE_FOR_sibˇŒ_ïûogue
 = 2324,

1561 
	mCODE_FOR_eh_ïûogue
 = 2325,

1562 
	mCODE_FOR_˘zsi2
 = 2330,

1563 
	mCODE_FOR_eh_ªtu∫
 = 2331,

1564 
	mCODE_FOR_gë_thªad_poöãrsi
 = 2333,

1565 
	mCODE_FOR_¨m_Àgacy_ªv
 = 2334,

1566 
	mCODE_FOR_thumb_Àgacy_ªv
 = 2335,

1567 
	mCODE_FOR_bsw≠si2
 = 2336,

1568 
	mCODE_FOR_bsw≠hi2
 = 2337,

1569 
	mCODE_FOR_movv2di
 = 2360,

1570 
	mCODE_FOR_movv2si
 = 2361,

1571 
	mCODE_FOR_movv4hi
 = 2362,

1572 
	mCODE_FOR_movv8qi
 = 2363,

1573 
	mCODE_FOR_movv2sf
 = 2364,

1574 
	mCODE_FOR_movv4si
 = 2365,

1575 
	mCODE_FOR_movv8hi
 = 2366,

1576 
	mCODE_FOR_movv16qi
 = 2367,

1577 
	mCODE_FOR_movv4sf
 = 2368,

1578 
	mCODE_FOR_addv2di3
 = 2369,

1579 
	mCODE_FOR_addv2si3
 = 2370,

1580 
	mCODE_FOR_addv4hi3
 = 2371,

1581 
	mCODE_FOR_addv8qi3
 = 2372,

1582 
	mCODE_FOR_addv2sf3
 = 2373,

1583 
	mCODE_FOR_addv4si3
 = 2374,

1584 
	mCODE_FOR_addv8hi3
 = 2375,

1585 
	mCODE_FOR_addv16qi3
 = 2376,

1586 
	mCODE_FOR_addv4sf3
 = 2377,

1587 
	mCODE_FOR_subv2di3
 = 2378,

1588 
	mCODE_FOR_subv2si3
 = 2379,

1589 
	mCODE_FOR_subv4hi3
 = 2380,

1590 
	mCODE_FOR_subv8qi3
 = 2381,

1591 
	mCODE_FOR_subv2sf3
 = 2382,

1592 
	mCODE_FOR_subv4si3
 = 2383,

1593 
	mCODE_FOR_subv8hi3
 = 2384,

1594 
	mCODE_FOR_subv16qi3
 = 2385,

1595 
	mCODE_FOR_subv4sf3
 = 2386,

1596 
	mCODE_FOR_mulv2si3
 = 2387,

1597 
	mCODE_FOR_mulv4hi3
 = 2388,

1598 
	mCODE_FOR_mulv8qi3
 = 2389,

1599 
	mCODE_FOR_mulv2sf3
 = 2390,

1600 
	mCODE_FOR_mulv4si3
 = 2391,

1601 
	mCODE_FOR_mulv8hi3
 = 2392,

1602 
	mCODE_FOR_mulv16qi3
 = 2393,

1603 
	mCODE_FOR_mulv4sf3
 = 2394,

1604 
	mCODE_FOR_smöv2si3
 = 2395,

1605 
	mCODE_FOR_smöv4hi3
 = 2396,

1606 
	mCODE_FOR_smöv8qi3
 = 2397,

1607 
	mCODE_FOR_smöv2sf3
 = 2398,

1608 
	mCODE_FOR_smöv4si3
 = 2399,

1609 
	mCODE_FOR_smöv8hi3
 = 2400,

1610 
	mCODE_FOR_smöv16qi3
 = 2401,

1611 
	mCODE_FOR_smöv4sf3
 = 2402,

1612 
	mCODE_FOR_umöv2si3
 = 2403,

1613 
	mCODE_FOR_umöv4hi3
 = 2404,

1614 
	mCODE_FOR_umöv8qi3
 = 2405,

1615 
	mCODE_FOR_umöv4si3
 = 2406,

1616 
	mCODE_FOR_umöv8hi3
 = 2407,

1617 
	mCODE_FOR_umöv16qi3
 = 2408,

1618 
	mCODE_FOR_smaxv2si3
 = 2409,

1619 
	mCODE_FOR_smaxv4hi3
 = 2410,

1620 
	mCODE_FOR_smaxv8qi3
 = 2411,

1621 
	mCODE_FOR_smaxv2sf3
 = 2412,

1622 
	mCODE_FOR_smaxv4si3
 = 2413,

1623 
	mCODE_FOR_smaxv8hi3
 = 2414,

1624 
	mCODE_FOR_smaxv16qi3
 = 2415,

1625 
	mCODE_FOR_smaxv4sf3
 = 2416,

1626 
	mCODE_FOR_umaxv2si3
 = 2417,

1627 
	mCODE_FOR_umaxv4hi3
 = 2418,

1628 
	mCODE_FOR_umaxv8qi3
 = 2419,

1629 
	mCODE_FOR_umaxv4si3
 = 2420,

1630 
	mCODE_FOR_umaxv8hi3
 = 2421,

1631 
	mCODE_FOR_umaxv16qi3
 = 2422,

1632 
	mCODE_FOR_vec_≥rm_c⁄°v2di
 = 2423,

1633 
	mCODE_FOR_vec_≥rm_c⁄°v2si
 = 2424,

1634 
	mCODE_FOR_vec_≥rm_c⁄°v4hi
 = 2425,

1635 
	mCODE_FOR_vec_≥rm_c⁄°v8qi
 = 2426,

1636 
	mCODE_FOR_vec_≥rm_c⁄°v2sf
 = 2427,

1637 
	mCODE_FOR_vec_≥rm_c⁄°v4si
 = 2428,

1638 
	mCODE_FOR_vec_≥rm_c⁄°v8hi
 = 2429,

1639 
	mCODE_FOR_vec_≥rm_c⁄°v16qi
 = 2430,

1640 
	mCODE_FOR_vec_≥rm_c⁄°v4sf
 = 2431,

1641 
	mCODE_FOR_vec_≥rmv8qi
 = 2432,

1642 
	mCODE_FOR_vec_≥rmv16qi
 = 2433,

1643 
	mCODE_FOR_iwmmxt_£twcgr0
 = 2434,

1644 
	mCODE_FOR_iwmmxt_£twcgr1
 = 2435,

1645 
	mCODE_FOR_iwmmxt_£twcgr2
 = 2436,

1646 
	mCODE_FOR_iwmmxt_£twcgr3
 = 2437,

1647 
	mCODE_FOR_iwmmxt_gëwcgr0
 = 2438,

1648 
	mCODE_FOR_iwmmxt_gëwcgr1
 = 2439,

1649 
	mCODE_FOR_iwmmxt_gëwcgr2
 = 2440,

1650 
	mCODE_FOR_iwmmxt_gëwcgr3
 = 2441,

1651 
	mCODE_FOR_thumb_movhi_˛obbî
 = 2464,

1652 
	mCODE_FOR_cbønchqi4
 = 2465,

1653 
	mCODE_FOR_c°‹esi_eq0_thumb1
 = 2466,

1654 
	mCODE_FOR_c°‹esi_√0_thumb1
 = 2467,

1655 
	mCODE_FOR_thumb1_ˇ£si_öã∫Æ_pic
 = 2469,

1656 
	mCODE_FOR_èbÀjump
 = 2470,

1657 
	mCODE_FOR_dﬁo›_íd
 = 2494,

1658 
	mCODE_FOR_movti
 = 2495,

1659 
	mCODE_FOR_movei
 = 2496,

1660 
	mCODE_FOR_movoi
 = 2497,

1661 
	mCODE_FOR_movci
 = 2498,

1662 
	mCODE_FOR_movxi
 = 2499,

1663 
	mCODE_FOR_movmißlignv8qi
 = 2504,

1664 
	mCODE_FOR_movmißlignv16qi
 = 2505,

1665 
	mCODE_FOR_movmißlignv4hi
 = 2506,

1666 
	mCODE_FOR_movmißlignv8hi
 = 2507,

1667 
	mCODE_FOR_movmißlignv2si
 = 2508,

1668 
	mCODE_FOR_movmißlignv4si
 = 2509,

1669 
	mCODE_FOR_movmißlignv2sf
 = 2510,

1670 
	mCODE_FOR_movmißlignv4sf
 = 2511,

1671 
	mCODE_FOR_movmißligndi
 = 2512,

1672 
	mCODE_FOR_movmißlignv2di
 = 2513,

1673 
	mCODE_FOR_vec_£tv8qi
 = 2514,

1674 
	mCODE_FOR_vec_£tv16qi
 = 2515,

1675 
	mCODE_FOR_vec_£tv4hi
 = 2516,

1676 
	mCODE_FOR_vec_£tv8hi
 = 2517,

1677 
	mCODE_FOR_vec_£tv2si
 = 2518,

1678 
	mCODE_FOR_vec_£tv4si
 = 2519,

1679 
	mCODE_FOR_vec_£tv2sf
 = 2520,

1680 
	mCODE_FOR_vec_£tv4sf
 = 2521,

1681 
	mCODE_FOR_vec_£tv2di
 = 2522,

1682 
	mCODE_FOR_vec_öôv8qi
 = 2523,

1683 
	mCODE_FOR_vec_öôv16qi
 = 2524,

1684 
	mCODE_FOR_vec_öôv4hi
 = 2525,

1685 
	mCODE_FOR_vec_öôv8hi
 = 2526,

1686 
	mCODE_FOR_vec_öôv2si
 = 2527,

1687 
	mCODE_FOR_vec_öôv4si
 = 2528,

1688 
	mCODE_FOR_vec_öôv2sf
 = 2529,

1689 
	mCODE_FOR_vec_öôv4sf
 = 2530,

1690 
	mCODE_FOR_vec_öôv2di
 = 2531,

1691 
	mCODE_FOR_vashrv8qi3
 = 2535,

1692 
	mCODE_FOR_vashrv16qi3
 = 2536,

1693 
	mCODE_FOR_vashrv4hi3
 = 2537,

1694 
	mCODE_FOR_vashrv8hi3
 = 2538,

1695 
	mCODE_FOR_vashrv2si3
 = 2539,

1696 
	mCODE_FOR_vashrv4si3
 = 2540,

1697 
	mCODE_FOR_vlshrv8qi3
 = 2541,

1698 
	mCODE_FOR_vlshrv16qi3
 = 2542,

1699 
	mCODE_FOR_vlshrv4hi3
 = 2543,

1700 
	mCODE_FOR_vlshrv8hi3
 = 2544,

1701 
	mCODE_FOR_vlshrv2si3
 = 2545,

1702 
	mCODE_FOR_vlshrv4si3
 = 2546,

1703 
	mCODE_FOR_vec_shr_v8qi
 = 2550,

1704 
	mCODE_FOR_vec_shr_v16qi
 = 2551,

1705 
	mCODE_FOR_vec_shr_v4hi
 = 2552,

1706 
	mCODE_FOR_vec_shr_v8hi
 = 2553,

1707 
	mCODE_FOR_vec_shr_v2si
 = 2554,

1708 
	mCODE_FOR_vec_shr_v4si
 = 2555,

1709 
	mCODE_FOR_vec_shr_v2sf
 = 2556,

1710 
	mCODE_FOR_vec_shr_v4sf
 = 2557,

1711 
	mCODE_FOR_vec_shr_v2di
 = 2558,

1712 
	mCODE_FOR_vec_shl_v8qi
 = 2559,

1713 
	mCODE_FOR_vec_shl_v16qi
 = 2560,

1714 
	mCODE_FOR_vec_shl_v4hi
 = 2561,

1715 
	mCODE_FOR_vec_shl_v8hi
 = 2562,

1716 
	mCODE_FOR_vec_shl_v2si
 = 2563,

1717 
	mCODE_FOR_vec_shl_v4si
 = 2564,

1718 
	mCODE_FOR_vec_shl_v2sf
 = 2565,

1719 
	mCODE_FOR_vec_shl_v4sf
 = 2566,

1720 
	mCODE_FOR_vec_shl_v2di
 = 2567,

1721 
	mCODE_FOR_move_hi_quad_v2di
 = 2568,

1722 
	mCODE_FOR_move_hi_quad_v2df
 = 2569,

1723 
	mCODE_FOR_move_hi_quad_v16qi
 = 2570,

1724 
	mCODE_FOR_move_hi_quad_v8hi
 = 2571,

1725 
	mCODE_FOR_move_hi_quad_v4si
 = 2572,

1726 
	mCODE_FOR_move_hi_quad_v4sf
 = 2573,

1727 
	mCODE_FOR_move_lo_quad_v2di
 = 2574,

1728 
	mCODE_FOR_move_lo_quad_v2df
 = 2575,

1729 
	mCODE_FOR_move_lo_quad_v16qi
 = 2576,

1730 
	mCODE_FOR_move_lo_quad_v8hi
 = 2577,

1731 
	mCODE_FOR_move_lo_quad_v4si
 = 2578,

1732 
	mCODE_FOR_move_lo_quad_v4sf
 = 2579,

1733 
	mCODE_FOR_ªduc_•lus_v8qi
 = 2580,

1734 
	mCODE_FOR_ªduc_•lus_v4hi
 = 2581,

1735 
	mCODE_FOR_ªduc_•lus_v2si
 = 2582,

1736 
	mCODE_FOR_ªduc_•lus_v2sf
 = 2583,

1737 
	mCODE_FOR_ªduc_•lus_v16qi
 = 2584,

1738 
	mCODE_FOR_ªduc_•lus_v8hi
 = 2585,

1739 
	mCODE_FOR_ªduc_•lus_v4si
 = 2586,

1740 
	mCODE_FOR_ªduc_•lus_v4sf
 = 2587,

1741 
	mCODE_FOR_ªduc_u∂us_v8qi
 = 2588,

1742 
	mCODE_FOR_ªduc_u∂us_v16qi
 = 2589,

1743 
	mCODE_FOR_ªduc_u∂us_v4hi
 = 2590,

1744 
	mCODE_FOR_ªduc_u∂us_v8hi
 = 2591,

1745 
	mCODE_FOR_ªduc_u∂us_v2si
 = 2592,

1746 
	mCODE_FOR_ªduc_u∂us_v4si
 = 2593,

1747 
	mCODE_FOR_ªduc_u∂us_v2di
 = 2594,

1748 
	mCODE_FOR_ªduc_smö_v8qi
 = 2595,

1749 
	mCODE_FOR_ªduc_smö_v4hi
 = 2596,

1750 
	mCODE_FOR_ªduc_smö_v2si
 = 2597,

1751 
	mCODE_FOR_ªduc_smö_v2sf
 = 2598,

1752 
	mCODE_FOR_ªduc_smö_v16qi
 = 2599,

1753 
	mCODE_FOR_ªduc_smö_v8hi
 = 2600,

1754 
	mCODE_FOR_ªduc_smö_v4si
 = 2601,

1755 
	mCODE_FOR_ªduc_smö_v4sf
 = 2602,

1756 
	mCODE_FOR_ªduc_smax_v8qi
 = 2603,

1757 
	mCODE_FOR_ªduc_smax_v4hi
 = 2604,

1758 
	mCODE_FOR_ªduc_smax_v2si
 = 2605,

1759 
	mCODE_FOR_ªduc_smax_v2sf
 = 2606,

1760 
	mCODE_FOR_ªduc_smax_v16qi
 = 2607,

1761 
	mCODE_FOR_ªduc_smax_v8hi
 = 2608,

1762 
	mCODE_FOR_ªduc_smax_v4si
 = 2609,

1763 
	mCODE_FOR_ªduc_smax_v4sf
 = 2610,

1764 
	mCODE_FOR_ªduc_umö_v8qi
 = 2611,

1765 
	mCODE_FOR_ªduc_umö_v4hi
 = 2612,

1766 
	mCODE_FOR_ªduc_umö_v2si
 = 2613,

1767 
	mCODE_FOR_ªduc_umö_v16qi
 = 2614,

1768 
	mCODE_FOR_ªduc_umö_v8hi
 = 2615,

1769 
	mCODE_FOR_ªduc_umö_v4si
 = 2616,

1770 
	mCODE_FOR_ªduc_umax_v8qi
 = 2617,

1771 
	mCODE_FOR_ªduc_umax_v4hi
 = 2618,

1772 
	mCODE_FOR_ªduc_umax_v2si
 = 2619,

1773 
	mCODE_FOR_ªduc_umax_v16qi
 = 2620,

1774 
	mCODE_FOR_ªduc_umax_v8hi
 = 2621,

1775 
	mCODE_FOR_ªduc_umax_v4si
 = 2622,

1776 
	mCODE_FOR_vc⁄dv8qiv8qi
 = 2623,

1777 
	mCODE_FOR_vc⁄dv16qiv16qi
 = 2624,

1778 
	mCODE_FOR_vc⁄dv4hiv4hi
 = 2625,

1779 
	mCODE_FOR_vc⁄dv8hiv8hi
 = 2626,

1780 
	mCODE_FOR_vc⁄dv2siv2si
 = 2627,

1781 
	mCODE_FOR_vc⁄dv4siv4si
 = 2628,

1782 
	mCODE_FOR_vc⁄dv2sfv2sf
 = 2629,

1783 
	mCODE_FOR_vc⁄dv4sfv4sf
 = 2630,

1784 
	mCODE_FOR_vc⁄duv8qiv8qi
 = 2631,

1785 
	mCODE_FOR_vc⁄duv16qiv16qi
 = 2632,

1786 
	mCODE_FOR_vc⁄duv4hiv4hi
 = 2633,

1787 
	mCODE_FOR_vc⁄duv8hiv8hi
 = 2634,

1788 
	mCODE_FOR_vc⁄duv2siv2si
 = 2635,

1789 
	mCODE_FOR_vc⁄duv4siv4si
 = 2636,

1790 
	mCODE_FOR_√⁄_vaddv8qi
 = 2637,

1791 
	mCODE_FOR_√⁄_vaddv16qi
 = 2638,

1792 
	mCODE_FOR_√⁄_vaddv4hi
 = 2639,

1793 
	mCODE_FOR_√⁄_vaddv8hi
 = 2640,

1794 
	mCODE_FOR_√⁄_vaddv2si
 = 2641,

1795 
	mCODE_FOR_√⁄_vaddv4si
 = 2642,

1796 
	mCODE_FOR_√⁄_vaddv2sf
 = 2643,

1797 
	mCODE_FOR_√⁄_vaddv4sf
 = 2644,

1798 
	mCODE_FOR_√⁄_vadddi
 = 2645,

1799 
	mCODE_FOR_√⁄_vaddv2di
 = 2646,

1800 
	mCODE_FOR_√⁄_vmœv8qi
 = 2647,

1801 
	mCODE_FOR_√⁄_vmœv16qi
 = 2648,

1802 
	mCODE_FOR_√⁄_vmœv4hi
 = 2649,

1803 
	mCODE_FOR_√⁄_vmœv8hi
 = 2650,

1804 
	mCODE_FOR_√⁄_vmœv2si
 = 2651,

1805 
	mCODE_FOR_√⁄_vmœv4si
 = 2652,

1806 
	mCODE_FOR_√⁄_vmœv2sf
 = 2653,

1807 
	mCODE_FOR_√⁄_vmœv4sf
 = 2654,

1808 
	mCODE_FOR_√⁄_vfmav2sf
 = 2655,

1809 
	mCODE_FOR_√⁄_vfmav4sf
 = 2656,

1810 
	mCODE_FOR_√⁄_vfmsv2sf
 = 2657,

1811 
	mCODE_FOR_√⁄_vfmsv4sf
 = 2658,

1812 
	mCODE_FOR_√⁄_vmlsv8qi
 = 2659,

1813 
	mCODE_FOR_√⁄_vmlsv16qi
 = 2660,

1814 
	mCODE_FOR_√⁄_vmlsv4hi
 = 2661,

1815 
	mCODE_FOR_√⁄_vmlsv8hi
 = 2662,

1816 
	mCODE_FOR_√⁄_vmlsv2si
 = 2663,

1817 
	mCODE_FOR_√⁄_vmlsv4si
 = 2664,

1818 
	mCODE_FOR_√⁄_vmlsv2sf
 = 2665,

1819 
	mCODE_FOR_√⁄_vmlsv4sf
 = 2666,

1820 
	mCODE_FOR_√⁄_vsubv8qi
 = 2667,

1821 
	mCODE_FOR_√⁄_vsubv16qi
 = 2668,

1822 
	mCODE_FOR_√⁄_vsubv4hi
 = 2669,

1823 
	mCODE_FOR_√⁄_vsubv8hi
 = 2670,

1824 
	mCODE_FOR_√⁄_vsubv2si
 = 2671,

1825 
	mCODE_FOR_√⁄_vsubv4si
 = 2672,

1826 
	mCODE_FOR_√⁄_vsubv2sf
 = 2673,

1827 
	mCODE_FOR_√⁄_vsubv4sf
 = 2674,

1828 
	mCODE_FOR_√⁄_vsubdi
 = 2675,

1829 
	mCODE_FOR_√⁄_vsubv2di
 = 2676,

1830 
	mCODE_FOR_√⁄_v∑ddv8qi
 = 2677,

1831 
	mCODE_FOR_√⁄_v∑ddv4hi
 = 2678,

1832 
	mCODE_FOR_√⁄_v∑ddv2si
 = 2679,

1833 
	mCODE_FOR_√⁄_v∑ddv2sf
 = 2680,

1834 
	mCODE_FOR_√⁄_vabsv8qi
 = 2681,

1835 
	mCODE_FOR_√⁄_vabsv16qi
 = 2682,

1836 
	mCODE_FOR_√⁄_vabsv4hi
 = 2683,

1837 
	mCODE_FOR_√⁄_vabsv8hi
 = 2684,

1838 
	mCODE_FOR_√⁄_vabsv2si
 = 2685,

1839 
	mCODE_FOR_√⁄_vabsv4si
 = 2686,

1840 
	mCODE_FOR_√⁄_vabsv2sf
 = 2687,

1841 
	mCODE_FOR_√⁄_vabsv4sf
 = 2688,

1842 
	mCODE_FOR_√⁄_v√gv8qi
 = 2689,

1843 
	mCODE_FOR_√⁄_v√gv16qi
 = 2690,

1844 
	mCODE_FOR_√⁄_v√gv4hi
 = 2691,

1845 
	mCODE_FOR_√⁄_v√gv8hi
 = 2692,

1846 
	mCODE_FOR_√⁄_v√gv2si
 = 2693,

1847 
	mCODE_FOR_√⁄_v√gv4si
 = 2694,

1848 
	mCODE_FOR_√⁄_v√gv2sf
 = 2695,

1849 
	mCODE_FOR_√⁄_v√gv4sf
 = 2696,

1850 
	mCODE_FOR_√⁄_v˛zv8qi
 = 2697,

1851 
	mCODE_FOR_√⁄_v˛zv16qi
 = 2698,

1852 
	mCODE_FOR_√⁄_v˛zv4hi
 = 2699,

1853 
	mCODE_FOR_√⁄_v˛zv8hi
 = 2700,

1854 
	mCODE_FOR_√⁄_v˛zv2si
 = 2701,

1855 
	mCODE_FOR_√⁄_v˛zv4si
 = 2702,

1856 
	mCODE_FOR_√⁄_v˙tv8qi
 = 2703,

1857 
	mCODE_FOR_√⁄_v˙tv16qi
 = 2704,

1858 
	mCODE_FOR_√⁄_vmvnv8qi
 = 2705,

1859 
	mCODE_FOR_√⁄_vmvnv16qi
 = 2706,

1860 
	mCODE_FOR_√⁄_vmvnv4hi
 = 2707,

1861 
	mCODE_FOR_√⁄_vmvnv8hi
 = 2708,

1862 
	mCODE_FOR_√⁄_vmvnv2si
 = 2709,

1863 
	mCODE_FOR_√⁄_vmvnv4si
 = 2710,

1864 
	mCODE_FOR_√⁄_vgë_œ√v8qi
 = 2711,

1865 
	mCODE_FOR_√⁄_vgë_œ√v16qi
 = 2712,

1866 
	mCODE_FOR_√⁄_vgë_œ√v4hi
 = 2713,

1867 
	mCODE_FOR_√⁄_vgë_œ√v8hi
 = 2714,

1868 
	mCODE_FOR_√⁄_vgë_œ√v2si
 = 2715,

1869 
	mCODE_FOR_√⁄_vgë_œ√v4si
 = 2716,

1870 
	mCODE_FOR_√⁄_vgë_œ√v2sf
 = 2717,

1871 
	mCODE_FOR_√⁄_vgë_œ√v4sf
 = 2718,

1872 
	mCODE_FOR_√⁄_vgë_œ√di
 = 2719,

1873 
	mCODE_FOR_√⁄_vgë_œ√v2di
 = 2720,

1874 
	mCODE_FOR_√⁄_v£t_œ√v8qi
 = 2721,

1875 
	mCODE_FOR_√⁄_v£t_œ√v16qi
 = 2722,

1876 
	mCODE_FOR_√⁄_v£t_œ√v4hi
 = 2723,

1877 
	mCODE_FOR_√⁄_v£t_œ√v8hi
 = 2724,

1878 
	mCODE_FOR_√⁄_v£t_œ√v2si
 = 2725,

1879 
	mCODE_FOR_√⁄_v£t_œ√v4si
 = 2726,

1880 
	mCODE_FOR_√⁄_v£t_œ√v2sf
 = 2727,

1881 
	mCODE_FOR_√⁄_v£t_œ√v4sf
 = 2728,

1882 
	mCODE_FOR_√⁄_v£t_œ√v2di
 = 2729,

1883 
	mCODE_FOR_√⁄_v£t_œ√di
 = 2730,

1884 
	mCODE_FOR_√⁄_v¸óãv8qi
 = 2731,

1885 
	mCODE_FOR_√⁄_v¸óãv4hi
 = 2732,

1886 
	mCODE_FOR_√⁄_v¸óãv2si
 = 2733,

1887 
	mCODE_FOR_√⁄_v¸óãv2sf
 = 2734,

1888 
	mCODE_FOR_√⁄_v¸óãdi
 = 2735,

1889 
	mCODE_FOR_√⁄_vdup_ndi
 = 2736,

1890 
	mCODE_FOR_√⁄_vdup_œ√v8qi
 = 2737,

1891 
	mCODE_FOR_√⁄_vdup_œ√v16qi
 = 2738,

1892 
	mCODE_FOR_√⁄_vdup_œ√v4hi
 = 2739,

1893 
	mCODE_FOR_√⁄_vdup_œ√v8hi
 = 2740,

1894 
	mCODE_FOR_√⁄_vdup_œ√v2si
 = 2741,

1895 
	mCODE_FOR_√⁄_vdup_œ√v4si
 = 2742,

1896 
	mCODE_FOR_√⁄_vdup_œ√v2sf
 = 2743,

1897 
	mCODE_FOR_√⁄_vdup_œ√v4sf
 = 2744,

1898 
	mCODE_FOR_√⁄_vdup_œ√di
 = 2745,

1899 
	mCODE_FOR_√⁄_vdup_œ√v2di
 = 2746,

1900 
	mCODE_FOR_√⁄_vgë_highv16qi
 = 2752,

1901 
	mCODE_FOR_√⁄_vgë_highv8hi
 = 2753,

1902 
	mCODE_FOR_√⁄_vgë_highv4si
 = 2754,

1903 
	mCODE_FOR_√⁄_vgë_highv4sf
 = 2755,

1904 
	mCODE_FOR_√⁄_vgë_highv2di
 = 2756,

1905 
	mCODE_FOR_√⁄_vgë_lowv16qi
 = 2757,

1906 
	mCODE_FOR_√⁄_vgë_lowv8hi
 = 2758,

1907 
	mCODE_FOR_√⁄_vgë_lowv4si
 = 2759,

1908 
	mCODE_FOR_√⁄_vgë_lowv4sf
 = 2760,

1909 
	mCODE_FOR_√⁄_vgë_lowv2di
 = 2761,

1910 
	mCODE_FOR_√⁄_vmul_nv4hi
 = 2762,

1911 
	mCODE_FOR_√⁄_vmul_nv2si
 = 2763,

1912 
	mCODE_FOR_√⁄_vmul_nv2sf
 = 2764,

1913 
	mCODE_FOR_√⁄_vmul_nv8hi
 = 2765,

1914 
	mCODE_FOR_√⁄_vmul_nv4si
 = 2766,

1915 
	mCODE_FOR_√⁄_vmul_nv4sf
 = 2767,

1916 
	mCODE_FOR_√⁄_vmuŒ_nv4hi
 = 2768,

1917 
	mCODE_FOR_√⁄_vmuŒ_nv2si
 = 2769,

1918 
	mCODE_FOR_√⁄_vqdmuŒ_nv4hi
 = 2770,

1919 
	mCODE_FOR_√⁄_vqdmuŒ_nv2si
 = 2771,

1920 
	mCODE_FOR_√⁄_vqdmulh_nv4hi
 = 2772,

1921 
	mCODE_FOR_√⁄_vqdmulh_nv2si
 = 2773,

1922 
	mCODE_FOR_√⁄_vqdmulh_nv8hi
 = 2774,

1923 
	mCODE_FOR_√⁄_vqdmulh_nv4si
 = 2775,

1924 
	mCODE_FOR_√⁄_vmœ_nv4hi
 = 2776,

1925 
	mCODE_FOR_√⁄_vmœ_nv2si
 = 2777,

1926 
	mCODE_FOR_√⁄_vmœ_nv2sf
 = 2778,

1927 
	mCODE_FOR_√⁄_vmœ_nv8hi
 = 2779,

1928 
	mCODE_FOR_√⁄_vmœ_nv4si
 = 2780,

1929 
	mCODE_FOR_√⁄_vmœ_nv4sf
 = 2781,

1930 
	mCODE_FOR_√⁄_vmœl_nv4hi
 = 2782,

1931 
	mCODE_FOR_√⁄_vmœl_nv2si
 = 2783,

1932 
	mCODE_FOR_√⁄_vqdmœl_nv4hi
 = 2784,

1933 
	mCODE_FOR_√⁄_vqdmœl_nv2si
 = 2785,

1934 
	mCODE_FOR_√⁄_vmls_nv4hi
 = 2786,

1935 
	mCODE_FOR_√⁄_vmls_nv2si
 = 2787,

1936 
	mCODE_FOR_√⁄_vmls_nv2sf
 = 2788,

1937 
	mCODE_FOR_√⁄_vmls_nv8hi
 = 2789,

1938 
	mCODE_FOR_√⁄_vmls_nv4si
 = 2790,

1939 
	mCODE_FOR_√⁄_vmls_nv4sf
 = 2791,

1940 
	mCODE_FOR_√⁄_vml¶_nv4hi
 = 2792,

1941 
	mCODE_FOR_√⁄_vml¶_nv2si
 = 2793,

1942 
	mCODE_FOR_√⁄_vqdml¶_nv4hi
 = 2794,

1943 
	mCODE_FOR_√⁄_vqdml¶_nv2si
 = 2795,

1944 
	mCODE_FOR_√⁄_vb¶v8qi
 = 2796,

1945 
	mCODE_FOR_√⁄_vb¶v16qi
 = 2797,

1946 
	mCODE_FOR_√⁄_vb¶v4hi
 = 2798,

1947 
	mCODE_FOR_√⁄_vb¶v8hi
 = 2799,

1948 
	mCODE_FOR_√⁄_vb¶v2si
 = 2800,

1949 
	mCODE_FOR_√⁄_vb¶v4si
 = 2801,

1950 
	mCODE_FOR_√⁄_vb¶v2sf
 = 2802,

1951 
	mCODE_FOR_√⁄_vb¶v4sf
 = 2803,

1952 
	mCODE_FOR_√⁄_vb¶di
 = 2804,

1953 
	mCODE_FOR_√⁄_vb¶v2di
 = 2805,

1954 
	mCODE_FOR_√⁄_vånv8qi_öã∫Æ
 = 2809,

1955 
	mCODE_FOR_√⁄_vånv16qi_öã∫Æ
 = 2810,

1956 
	mCODE_FOR_√⁄_vånv4hi_öã∫Æ
 = 2811,

1957 
	mCODE_FOR_√⁄_vånv8hi_öã∫Æ
 = 2812,

1958 
	mCODE_FOR_√⁄_vånv2si_öã∫Æ
 = 2813,

1959 
	mCODE_FOR_√⁄_vånv4si_öã∫Æ
 = 2814,

1960 
	mCODE_FOR_√⁄_vånv2sf_öã∫Æ
 = 2815,

1961 
	mCODE_FOR_√⁄_vånv4sf_öã∫Æ
 = 2816,

1962 
	mCODE_FOR_√⁄_vånv8qi
 = 2817,

1963 
	mCODE_FOR_√⁄_vånv16qi
 = 2818,

1964 
	mCODE_FOR_√⁄_vånv4hi
 = 2819,

1965 
	mCODE_FOR_√⁄_vånv8hi
 = 2820,

1966 
	mCODE_FOR_√⁄_vånv2si
 = 2821,

1967 
	mCODE_FOR_√⁄_vånv4si
 = 2822,

1968 
	mCODE_FOR_√⁄_vånv2sf
 = 2823,

1969 
	mCODE_FOR_√⁄_vånv4sf
 = 2824,

1970 
	mCODE_FOR_√⁄_vzùv8qi_öã∫Æ
 = 2825,

1971 
	mCODE_FOR_√⁄_vzùv16qi_öã∫Æ
 = 2826,

1972 
	mCODE_FOR_√⁄_vzùv4hi_öã∫Æ
 = 2827,

1973 
	mCODE_FOR_√⁄_vzùv8hi_öã∫Æ
 = 2828,

1974 
	mCODE_FOR_√⁄_vzùv2si_öã∫Æ
 = 2829,

1975 
	mCODE_FOR_√⁄_vzùv4si_öã∫Æ
 = 2830,

1976 
	mCODE_FOR_√⁄_vzùv2sf_öã∫Æ
 = 2831,

1977 
	mCODE_FOR_√⁄_vzùv4sf_öã∫Æ
 = 2832,

1978 
	mCODE_FOR_√⁄_vzùv8qi
 = 2833,

1979 
	mCODE_FOR_√⁄_vzùv16qi
 = 2834,

1980 
	mCODE_FOR_√⁄_vzùv4hi
 = 2835,

1981 
	mCODE_FOR_√⁄_vzùv8hi
 = 2836,

1982 
	mCODE_FOR_√⁄_vzùv2si
 = 2837,

1983 
	mCODE_FOR_√⁄_vzùv4si
 = 2838,

1984 
	mCODE_FOR_√⁄_vzùv2sf
 = 2839,

1985 
	mCODE_FOR_√⁄_vzùv4sf
 = 2840,

1986 
	mCODE_FOR_√⁄_vuzpv8qi_öã∫Æ
 = 2841,

1987 
	mCODE_FOR_√⁄_vuzpv16qi_öã∫Æ
 = 2842,

1988 
	mCODE_FOR_√⁄_vuzpv4hi_öã∫Æ
 = 2843,

1989 
	mCODE_FOR_√⁄_vuzpv8hi_öã∫Æ
 = 2844,

1990 
	mCODE_FOR_√⁄_vuzpv2si_öã∫Æ
 = 2845,

1991 
	mCODE_FOR_√⁄_vuzpv4si_öã∫Æ
 = 2846,

1992 
	mCODE_FOR_√⁄_vuzpv2sf_öã∫Æ
 = 2847,

1993 
	mCODE_FOR_√⁄_vuzpv4sf_öã∫Æ
 = 2848,

1994 
	mCODE_FOR_√⁄_vuzpv8qi
 = 2849,

1995 
	mCODE_FOR_√⁄_vuzpv16qi
 = 2850,

1996 
	mCODE_FOR_√⁄_vuzpv4hi
 = 2851,

1997 
	mCODE_FOR_√⁄_vuzpv8hi
 = 2852,

1998 
	mCODE_FOR_√⁄_vuzpv2si
 = 2853,

1999 
	mCODE_FOR_√⁄_vuzpv4si
 = 2854,

2000 
	mCODE_FOR_√⁄_vuzpv2sf
 = 2855,

2001 
	mCODE_FOR_√⁄_vuzpv4sf
 = 2856,

2002 
	mCODE_FOR_√⁄_vªöãΩªtv8qiv8qi
 = 2857,

2003 
	mCODE_FOR_√⁄_vªöãΩªtv8qiv4hi
 = 2858,

2004 
	mCODE_FOR_√⁄_vªöãΩªtv8qiv2si
 = 2859,

2005 
	mCODE_FOR_√⁄_vªöãΩªtv8qiv2sf
 = 2860,

2006 
	mCODE_FOR_√⁄_vªöãΩªtv8qidi
 = 2861,

2007 
	mCODE_FOR_√⁄_vªöãΩªtv4hiv8qi
 = 2862,

2008 
	mCODE_FOR_√⁄_vªöãΩªtv4hiv4hi
 = 2863,

2009 
	mCODE_FOR_√⁄_vªöãΩªtv4hiv2si
 = 2864,

2010 
	mCODE_FOR_√⁄_vªöãΩªtv4hiv2sf
 = 2865,

2011 
	mCODE_FOR_√⁄_vªöãΩªtv4hidi
 = 2866,

2012 
	mCODE_FOR_√⁄_vªöãΩªtv2siv8qi
 = 2867,

2013 
	mCODE_FOR_√⁄_vªöãΩªtv2siv4hi
 = 2868,

2014 
	mCODE_FOR_√⁄_vªöãΩªtv2siv2si
 = 2869,

2015 
	mCODE_FOR_√⁄_vªöãΩªtv2siv2sf
 = 2870,

2016 
	mCODE_FOR_√⁄_vªöãΩªtv2sidi
 = 2871,

2017 
	mCODE_FOR_√⁄_vªöãΩªtv2sfv8qi
 = 2872,

2018 
	mCODE_FOR_√⁄_vªöãΩªtv2sfv4hi
 = 2873,

2019 
	mCODE_FOR_√⁄_vªöãΩªtv2sfv2si
 = 2874,

2020 
	mCODE_FOR_√⁄_vªöãΩªtv2sfv2sf
 = 2875,

2021 
	mCODE_FOR_√⁄_vªöãΩªtv2sfdi
 = 2876,

2022 
	mCODE_FOR_√⁄_vªöãΩªtdiv8qi
 = 2877,

2023 
	mCODE_FOR_√⁄_vªöãΩªtdiv4hi
 = 2878,

2024 
	mCODE_FOR_√⁄_vªöãΩªtdiv2si
 = 2879,

2025 
	mCODE_FOR_√⁄_vªöãΩªtdiv2sf
 = 2880,

2026 
	mCODE_FOR_√⁄_vªöãΩªtdidi
 = 2881,

2027 
	mCODE_FOR_√⁄_vªöãΩªâiv16qi
 = 2882,

2028 
	mCODE_FOR_√⁄_vªöãΩªâiv8hi
 = 2883,

2029 
	mCODE_FOR_√⁄_vªöãΩªâiv4si
 = 2884,

2030 
	mCODE_FOR_√⁄_vªöãΩªâiv4sf
 = 2885,

2031 
	mCODE_FOR_√⁄_vªöãΩªâiv2di
 = 2886,

2032 
	mCODE_FOR_√⁄_vªöãΩªâôi
 = 2887,

2033 
	mCODE_FOR_√⁄_vªöãΩªtv16qiv16qi
 = 2888,

2034 
	mCODE_FOR_√⁄_vªöãΩªtv16qiv8hi
 = 2889,

2035 
	mCODE_FOR_√⁄_vªöãΩªtv16qiv4si
 = 2890,

2036 
	mCODE_FOR_√⁄_vªöãΩªtv16qiv4sf
 = 2891,

2037 
	mCODE_FOR_√⁄_vªöãΩªtv16qiv2di
 = 2892,

2038 
	mCODE_FOR_√⁄_vªöãΩªtv16qôi
 = 2893,

2039 
	mCODE_FOR_√⁄_vªöãΩªtv8hiv16qi
 = 2894,

2040 
	mCODE_FOR_√⁄_vªöãΩªtv8hiv8hi
 = 2895,

2041 
	mCODE_FOR_√⁄_vªöãΩªtv8hiv4si
 = 2896,

2042 
	mCODE_FOR_√⁄_vªöãΩªtv8hiv4sf
 = 2897,

2043 
	mCODE_FOR_√⁄_vªöãΩªtv8hiv2di
 = 2898,

2044 
	mCODE_FOR_√⁄_vªöãΩªtv8hôi
 = 2899,

2045 
	mCODE_FOR_√⁄_vªöãΩªtv4siv16qi
 = 2900,

2046 
	mCODE_FOR_√⁄_vªöãΩªtv4siv8hi
 = 2901,

2047 
	mCODE_FOR_√⁄_vªöãΩªtv4siv4si
 = 2902,

2048 
	mCODE_FOR_√⁄_vªöãΩªtv4siv4sf
 = 2903,

2049 
	mCODE_FOR_√⁄_vªöãΩªtv4siv2di
 = 2904,

2050 
	mCODE_FOR_√⁄_vªöãΩªtv4sôi
 = 2905,

2051 
	mCODE_FOR_√⁄_vªöãΩªtv4sfv16qi
 = 2906,

2052 
	mCODE_FOR_√⁄_vªöãΩªtv4sfv8hi
 = 2907,

2053 
	mCODE_FOR_√⁄_vªöãΩªtv4sfv4si
 = 2908,

2054 
	mCODE_FOR_√⁄_vªöãΩªtv4sfv4sf
 = 2909,

2055 
	mCODE_FOR_√⁄_vªöãΩªtv4sfv2di
 = 2910,

2056 
	mCODE_FOR_√⁄_vªöãΩªtv4s·i
 = 2911,

2057 
	mCODE_FOR_√⁄_vªöãΩªtv2div16qi
 = 2912,

2058 
	mCODE_FOR_√⁄_vªöãΩªtv2div8hi
 = 2913,

2059 
	mCODE_FOR_√⁄_vªöãΩªtv2div4si
 = 2914,

2060 
	mCODE_FOR_√⁄_vªöãΩªtv2div4sf
 = 2915,

2061 
	mCODE_FOR_√⁄_vªöãΩªtv2div2di
 = 2916,

2062 
	mCODE_FOR_√⁄_vªöãΩªtv2dôi
 = 2917,

2063 
	mCODE_FOR_vec_lﬂd_œ√sv8qiv8qi
 = 2918,

2064 
	mCODE_FOR_vec_lﬂd_œ√sv16qiv16qi
 = 2919,

2065 
	mCODE_FOR_vec_lﬂd_œ√sv4hiv4hi
 = 2920,

2066 
	mCODE_FOR_vec_lﬂd_œ√sv8hiv8hi
 = 2921,

2067 
	mCODE_FOR_vec_lﬂd_œ√sv2siv2si
 = 2922,

2068 
	mCODE_FOR_vec_lﬂd_œ√sv4siv4si
 = 2923,

2069 
	mCODE_FOR_vec_lﬂd_œ√sv2sfv2sf
 = 2924,

2070 
	mCODE_FOR_vec_lﬂd_œ√sv4sfv4sf
 = 2925,

2071 
	mCODE_FOR_vec_lﬂd_œ√sdidi
 = 2926,

2072 
	mCODE_FOR_vec_lﬂd_œ√sv2div2di
 = 2927,

2073 
	mCODE_FOR_√⁄_vld1_dupdi
 = 2928,

2074 
	mCODE_FOR_vec_°‹e_œ√sv8qiv8qi
 = 2930,

2075 
	mCODE_FOR_vec_°‹e_œ√sv16qiv16qi
 = 2931,

2076 
	mCODE_FOR_vec_°‹e_œ√sv4hiv4hi
 = 2932,

2077 
	mCODE_FOR_vec_°‹e_œ√sv8hiv8hi
 = 2933,

2078 
	mCODE_FOR_vec_°‹e_œ√sv2siv2si
 = 2934,

2079 
	mCODE_FOR_vec_°‹e_œ√sv4siv4si
 = 2935,

2080 
	mCODE_FOR_vec_°‹e_œ√sv2sfv2sf
 = 2936,

2081 
	mCODE_FOR_vec_°‹e_œ√sv4sfv4sf
 = 2937,

2082 
	mCODE_FOR_vec_°‹e_œ√sdidi
 = 2938,

2083 
	mCODE_FOR_vec_°‹e_œ√sv2div2di
 = 2939,

2084 
	mCODE_FOR_vec_lﬂd_œ√°iv8qi
 = 2940,

2085 
	mCODE_FOR_vec_lﬂd_œ√°iv4hi
 = 2941,

2086 
	mCODE_FOR_vec_lﬂd_œ√°iv2si
 = 2942,

2087 
	mCODE_FOR_vec_lﬂd_œ√°iv2sf
 = 2943,

2088 
	mCODE_FOR_vec_lﬂd_œ√°idi
 = 2944,

2089 
	mCODE_FOR_vec_lﬂd_œ√soiv16qi
 = 2945,

2090 
	mCODE_FOR_vec_lﬂd_œ√soiv8hi
 = 2946,

2091 
	mCODE_FOR_vec_lﬂd_œ√soiv4si
 = 2947,

2092 
	mCODE_FOR_vec_lﬂd_œ√soiv4sf
 = 2948,

2093 
	mCODE_FOR_vec_°‹e_œ√°iv8qi
 = 2949,

2094 
	mCODE_FOR_vec_°‹e_œ√°iv4hi
 = 2950,

2095 
	mCODE_FOR_vec_°‹e_œ√°iv2si
 = 2951,

2096 
	mCODE_FOR_vec_°‹e_œ√°iv2sf
 = 2952,

2097 
	mCODE_FOR_vec_°‹e_œ√°idi
 = 2953,

2098 
	mCODE_FOR_vec_°‹e_œ√soiv16qi
 = 2954,

2099 
	mCODE_FOR_vec_°‹e_œ√soiv8hi
 = 2955,

2100 
	mCODE_FOR_vec_°‹e_œ√soiv4si
 = 2956,

2101 
	mCODE_FOR_vec_°‹e_œ√soiv4sf
 = 2957,

2102 
	mCODE_FOR_vec_lﬂd_œ√£iv8qi
 = 2958,

2103 
	mCODE_FOR_vec_lﬂd_œ√£iv4hi
 = 2959,

2104 
	mCODE_FOR_vec_lﬂd_œ√£iv2si
 = 2960,

2105 
	mCODE_FOR_vec_lﬂd_œ√£iv2sf
 = 2961,

2106 
	mCODE_FOR_vec_lﬂd_œ√£idi
 = 2962,

2107 
	mCODE_FOR_vec_lﬂd_œ√sciv16qi
 = 2963,

2108 
	mCODE_FOR_vec_lﬂd_œ√sciv8hi
 = 2964,

2109 
	mCODE_FOR_vec_lﬂd_œ√sciv4si
 = 2965,

2110 
	mCODE_FOR_vec_lﬂd_œ√sciv4sf
 = 2966,

2111 
	mCODE_FOR_√⁄_vld3v16qi
 = 2967,

2112 
	mCODE_FOR_√⁄_vld3v8hi
 = 2968,

2113 
	mCODE_FOR_√⁄_vld3v4si
 = 2969,

2114 
	mCODE_FOR_√⁄_vld3v4sf
 = 2970,

2115 
	mCODE_FOR_vec_°‹e_œ√£iv8qi
 = 2971,

2116 
	mCODE_FOR_vec_°‹e_œ√£iv4hi
 = 2972,

2117 
	mCODE_FOR_vec_°‹e_œ√£iv2si
 = 2973,

2118 
	mCODE_FOR_vec_°‹e_œ√£iv2sf
 = 2974,

2119 
	mCODE_FOR_vec_°‹e_œ√£idi
 = 2975,

2120 
	mCODE_FOR_vec_°‹e_œ√sciv16qi
 = 2976,

2121 
	mCODE_FOR_vec_°‹e_œ√sciv8hi
 = 2977,

2122 
	mCODE_FOR_vec_°‹e_œ√sciv4si
 = 2978,

2123 
	mCODE_FOR_vec_°‹e_œ√sciv4sf
 = 2979,

2124 
	mCODE_FOR_√⁄_v°3v16qi
 = 2980,

2125 
	mCODE_FOR_√⁄_v°3v8hi
 = 2981,

2126 
	mCODE_FOR_√⁄_v°3v4si
 = 2982,

2127 
	mCODE_FOR_√⁄_v°3v4sf
 = 2983,

2128 
	mCODE_FOR_vec_lﬂd_œ√soiv8qi
 = 2984,

2129 
	mCODE_FOR_vec_lﬂd_œ√soiv4hi
 = 2985,

2130 
	mCODE_FOR_vec_lﬂd_œ√soiv2si
 = 2986,

2131 
	mCODE_FOR_vec_lﬂd_œ√soiv2sf
 = 2987,

2132 
	mCODE_FOR_vec_lﬂd_œ√soidi
 = 2988,

2133 
	mCODE_FOR_vec_lﬂd_œ√sxiv16qi
 = 2989,

2134 
	mCODE_FOR_vec_lﬂd_œ√sxiv8hi
 = 2990,

2135 
	mCODE_FOR_vec_lﬂd_œ√sxiv4si
 = 2991,

2136 
	mCODE_FOR_vec_lﬂd_œ√sxiv4sf
 = 2992,

2137 
	mCODE_FOR_√⁄_vld4v16qi
 = 2993,

2138 
	mCODE_FOR_√⁄_vld4v8hi
 = 2994,

2139 
	mCODE_FOR_√⁄_vld4v4si
 = 2995,

2140 
	mCODE_FOR_√⁄_vld4v4sf
 = 2996,

2141 
	mCODE_FOR_vec_°‹e_œ√soiv8qi
 = 2997,

2142 
	mCODE_FOR_vec_°‹e_œ√soiv4hi
 = 2998,

2143 
	mCODE_FOR_vec_°‹e_œ√soiv2si
 = 2999,

2144 
	mCODE_FOR_vec_°‹e_œ√soiv2sf
 = 3000,

2145 
	mCODE_FOR_vec_°‹e_œ√soidi
 = 3001,

2146 
	mCODE_FOR_vec_°‹e_œ√sxiv16qi
 = 3002,

2147 
	mCODE_FOR_vec_°‹e_œ√sxiv8hi
 = 3003,

2148 
	mCODE_FOR_vec_°‹e_œ√sxiv4si
 = 3004,

2149 
	mCODE_FOR_vec_°‹e_œ√sxiv4sf
 = 3005,

2150 
	mCODE_FOR_√⁄_v°4v16qi
 = 3006,

2151 
	mCODE_FOR_√⁄_v°4v8hi
 = 3007,

2152 
	mCODE_FOR_√⁄_v°4v4si
 = 3008,

2153 
	mCODE_FOR_√⁄_v°4v4sf
 = 3009,

2154 
	mCODE_FOR_√⁄_v™dv8qi
 = 3010,

2155 
	mCODE_FOR_√⁄_v™dv16qi
 = 3011,

2156 
	mCODE_FOR_√⁄_v™dv4hi
 = 3012,

2157 
	mCODE_FOR_√⁄_v™dv8hi
 = 3013,

2158 
	mCODE_FOR_√⁄_v™dv2si
 = 3014,

2159 
	mCODE_FOR_√⁄_v™dv4si
 = 3015,

2160 
	mCODE_FOR_√⁄_v™dv2sf
 = 3016,

2161 
	mCODE_FOR_√⁄_v™dv4sf
 = 3017,

2162 
	mCODE_FOR_√⁄_v™ddi
 = 3018,

2163 
	mCODE_FOR_√⁄_v™dv2di
 = 3019,

2164 
	mCODE_FOR_√⁄_v‹rv8qi
 = 3020,

2165 
	mCODE_FOR_√⁄_v‹rv16qi
 = 3021,

2166 
	mCODE_FOR_√⁄_v‹rv4hi
 = 3022,

2167 
	mCODE_FOR_√⁄_v‹rv8hi
 = 3023,

2168 
	mCODE_FOR_√⁄_v‹rv2si
 = 3024,

2169 
	mCODE_FOR_√⁄_v‹rv4si
 = 3025,

2170 
	mCODE_FOR_√⁄_v‹rv2sf
 = 3026,

2171 
	mCODE_FOR_√⁄_v‹rv4sf
 = 3027,

2172 
	mCODE_FOR_√⁄_v‹rdi
 = 3028,

2173 
	mCODE_FOR_√⁄_v‹rv2di
 = 3029,

2174 
	mCODE_FOR_√⁄_ve‹v8qi
 = 3030,

2175 
	mCODE_FOR_√⁄_ve‹v16qi
 = 3031,

2176 
	mCODE_FOR_√⁄_ve‹v4hi
 = 3032,

2177 
	mCODE_FOR_√⁄_ve‹v8hi
 = 3033,

2178 
	mCODE_FOR_√⁄_ve‹v2si
 = 3034,

2179 
	mCODE_FOR_√⁄_ve‹v4si
 = 3035,

2180 
	mCODE_FOR_√⁄_ve‹v2sf
 = 3036,

2181 
	mCODE_FOR_√⁄_ve‹v4sf
 = 3037,

2182 
	mCODE_FOR_√⁄_ve‹di
 = 3038,

2183 
	mCODE_FOR_√⁄_ve‹v2di
 = 3039,

2184 
	mCODE_FOR_√⁄_vbicv8qi
 = 3040,

2185 
	mCODE_FOR_√⁄_vbicv16qi
 = 3041,

2186 
	mCODE_FOR_√⁄_vbicv4hi
 = 3042,

2187 
	mCODE_FOR_√⁄_vbicv8hi
 = 3043,

2188 
	mCODE_FOR_√⁄_vbicv2si
 = 3044,

2189 
	mCODE_FOR_√⁄_vbicv4si
 = 3045,

2190 
	mCODE_FOR_√⁄_vbicv2sf
 = 3046,

2191 
	mCODE_FOR_√⁄_vbicv4sf
 = 3047,

2192 
	mCODE_FOR_√⁄_vbicdi
 = 3048,

2193 
	mCODE_FOR_√⁄_vbicv2di
 = 3049,

2194 
	mCODE_FOR_√⁄_v‹nv8qi
 = 3050,

2195 
	mCODE_FOR_√⁄_v‹nv16qi
 = 3051,

2196 
	mCODE_FOR_√⁄_v‹nv4hi
 = 3052,

2197 
	mCODE_FOR_√⁄_v‹nv8hi
 = 3053,

2198 
	mCODE_FOR_√⁄_v‹nv2si
 = 3054,

2199 
	mCODE_FOR_√⁄_v‹nv4si
 = 3055,

2200 
	mCODE_FOR_√⁄_v‹nv2sf
 = 3056,

2201 
	mCODE_FOR_√⁄_v‹nv4sf
 = 3057,

2202 
	mCODE_FOR_√⁄_v‹ndi
 = 3058,

2203 
	mCODE_FOR_√⁄_v‹nv2di
 = 3059,

2204 
	mCODE_FOR_vec_u≈acks_hi_v16qi
 = 3060,

2205 
	mCODE_FOR_vec_u≈acku_hi_v16qi
 = 3061,

2206 
	mCODE_FOR_vec_u≈acks_hi_v8hi
 = 3062,

2207 
	mCODE_FOR_vec_u≈acku_hi_v8hi
 = 3063,

2208 
	mCODE_FOR_vec_u≈acks_hi_v4si
 = 3064,

2209 
	mCODE_FOR_vec_u≈acku_hi_v4si
 = 3065,

2210 
	mCODE_FOR_vec_u≈acks_lo_v16qi
 = 3066,

2211 
	mCODE_FOR_vec_u≈acku_lo_v16qi
 = 3067,

2212 
	mCODE_FOR_vec_u≈acks_lo_v8hi
 = 3068,

2213 
	mCODE_FOR_vec_u≈acku_lo_v8hi
 = 3069,

2214 
	mCODE_FOR_vec_u≈acks_lo_v4si
 = 3070,

2215 
	mCODE_FOR_vec_u≈acku_lo_v4si
 = 3071,

2216 
	mCODE_FOR_vec_widí_smu…_lo_v16qi
 = 3072,

2217 
	mCODE_FOR_vec_widí_umu…_lo_v16qi
 = 3073,

2218 
	mCODE_FOR_vec_widí_smu…_lo_v8hi
 = 3074,

2219 
	mCODE_FOR_vec_widí_umu…_lo_v8hi
 = 3075,

2220 
	mCODE_FOR_vec_widí_smu…_lo_v4si
 = 3076,

2221 
	mCODE_FOR_vec_widí_umu…_lo_v4si
 = 3077,

2222 
	mCODE_FOR_vec_widí_smu…_hi_v16qi
 = 3078,

2223 
	mCODE_FOR_vec_widí_umu…_hi_v16qi
 = 3079,

2224 
	mCODE_FOR_vec_widí_smu…_hi_v8hi
 = 3080,

2225 
	mCODE_FOR_vec_widí_umu…_hi_v8hi
 = 3081,

2226 
	mCODE_FOR_vec_widí_smu…_hi_v4si
 = 3082,

2227 
	mCODE_FOR_vec_widí_umu…_hi_v4si
 = 3083,

2228 
	mCODE_FOR_vec_widí_sshi·l_lo_v16qi
 = 3084,

2229 
	mCODE_FOR_vec_widí_ushi·l_lo_v16qi
 = 3085,

2230 
	mCODE_FOR_vec_widí_sshi·l_lo_v8hi
 = 3086,

2231 
	mCODE_FOR_vec_widí_ushi·l_lo_v8hi
 = 3087,

2232 
	mCODE_FOR_vec_widí_sshi·l_lo_v4si
 = 3088,

2233 
	mCODE_FOR_vec_widí_ushi·l_lo_v4si
 = 3089,

2234 
	mCODE_FOR_vec_widí_sshi·l_hi_v16qi
 = 3090,

2235 
	mCODE_FOR_vec_widí_ushi·l_hi_v16qi
 = 3091,

2236 
	mCODE_FOR_vec_widí_sshi·l_hi_v8hi
 = 3092,

2237 
	mCODE_FOR_vec_widí_ushi·l_hi_v8hi
 = 3093,

2238 
	mCODE_FOR_vec_widí_sshi·l_hi_v4si
 = 3094,

2239 
	mCODE_FOR_vec_widí_ushi·l_hi_v4si
 = 3095,

2240 
	mCODE_FOR_vec_u≈acks_lo_v8qi
 = 3096,

2241 
	mCODE_FOR_vec_u≈acku_lo_v8qi
 = 3097,

2242 
	mCODE_FOR_vec_u≈acks_lo_v4hi
 = 3098,

2243 
	mCODE_FOR_vec_u≈acku_lo_v4hi
 = 3099,

2244 
	mCODE_FOR_vec_u≈acks_lo_v2si
 = 3100,

2245 
	mCODE_FOR_vec_u≈acku_lo_v2si
 = 3101,

2246 
	mCODE_FOR_vec_u≈acks_hi_v8qi
 = 3102,

2247 
	mCODE_FOR_vec_u≈acku_hi_v8qi
 = 3103,

2248 
	mCODE_FOR_vec_u≈acks_hi_v4hi
 = 3104,

2249 
	mCODE_FOR_vec_u≈acku_hi_v4hi
 = 3105,

2250 
	mCODE_FOR_vec_u≈acks_hi_v2si
 = 3106,

2251 
	mCODE_FOR_vec_u≈acku_hi_v2si
 = 3107,

2252 
	mCODE_FOR_vec_widí_smu…_hi_v8qi
 = 3108,

2253 
	mCODE_FOR_vec_widí_umu…_hi_v8qi
 = 3109,

2254 
	mCODE_FOR_vec_widí_smu…_hi_v4hi
 = 3110,

2255 
	mCODE_FOR_vec_widí_umu…_hi_v4hi
 = 3111,

2256 
	mCODE_FOR_vec_widí_smu…_hi_v2si
 = 3112,

2257 
	mCODE_FOR_vec_widí_umu…_hi_v2si
 = 3113,

2258 
	mCODE_FOR_vec_widí_smu…_lo_v8qi
 = 3114,

2259 
	mCODE_FOR_vec_widí_umu…_lo_v8qi
 = 3115,

2260 
	mCODE_FOR_vec_widí_smu…_lo_v4hi
 = 3116,

2261 
	mCODE_FOR_vec_widí_umu…_lo_v4hi
 = 3117,

2262 
	mCODE_FOR_vec_widí_smu…_lo_v2si
 = 3118,

2263 
	mCODE_FOR_vec_widí_umu…_lo_v2si
 = 3119,

2264 
	mCODE_FOR_vec_widí_sshi·l_hi_v8qi
 = 3120,

2265 
	mCODE_FOR_vec_widí_ushi·l_hi_v8qi
 = 3121,

2266 
	mCODE_FOR_vec_widí_sshi·l_hi_v4hi
 = 3122,

2267 
	mCODE_FOR_vec_widí_ushi·l_hi_v4hi
 = 3123,

2268 
	mCODE_FOR_vec_widí_sshi·l_hi_v2si
 = 3124,

2269 
	mCODE_FOR_vec_widí_ushi·l_hi_v2si
 = 3125,

2270 
	mCODE_FOR_vec_widí_sshi·l_lo_v8qi
 = 3126,

2271 
	mCODE_FOR_vec_widí_ushi·l_lo_v8qi
 = 3127,

2272 
	mCODE_FOR_vec_widí_sshi·l_lo_v4hi
 = 3128,

2273 
	mCODE_FOR_vec_widí_ushi·l_lo_v4hi
 = 3129,

2274 
	mCODE_FOR_vec_widí_sshi·l_lo_v2si
 = 3130,

2275 
	mCODE_FOR_vec_widí_ushi·l_lo_v2si
 = 3131,

2276 
	mCODE_FOR_vec_∑ck_åunc_v4hi
 = 3132,

2277 
	mCODE_FOR_vec_∑ck_åunc_v2si
 = 3133,

2278 
	mCODE_FOR_vec_∑ck_åunc_di
 = 3134,

2279 
	mCODE_FOR_mem‹y_b¨rõr
 = 3141,

2280 
	mCODE_FOR_©omic_lﬂddi
 = 3142,

2281 
	mCODE_FOR_©omic_com∑ª_™d_sw≠qi
 = 3143,

2282 
	mCODE_FOR_©omic_com∑ª_™d_sw≠hi
 = 3144,

2283 
	mCODE_FOR_©omic_com∑ª_™d_sw≠si
 = 3145,

2284 
	mCODE_FOR_©omic_com∑ª_™d_sw≠di
 = 3146,

2285 
	mCODE_FOR_mulqq3
 = 3227,

2286 
	mCODE_FOR_mulhq3
 = 3228,

2287 
	mCODE_FOR_mulsq3
 = 3229,

2288 
	mCODE_FOR_mulß3
 = 3230,

2289 
	mCODE_FOR_muluß3
 = 3231,

2290 
	mCODE_FOR_mulha3
 = 3232,

2291 
	mCODE_FOR_muluha3
 = 3233,

2292 
	mCODE_FOR_ssmulha3
 = 3234,

2293 
	mCODE_FOR_usmuluha3
 = 3235,

2294 
	mLAST_INSN_CODE


	@include/insn-constants.h

4 #i‚de‡
GCC_INSN_CONSTANTS_H


5 
	#GCC_INSN_CONSTANTS_H


	)

7 
	#CMP_CMP
 0

	)

8 
	#DOM_CC_NX_OR_Y
 1

	)

9 
	#DOM_CC_X_OR_Y
 2

	)

10 
	#NUM_OF_COND_CMP
 4

	)

11 
	#CC_REGNUM
 100

	)

12 
	#WCGR3
 99

	)

13 
	#SP_REGNUM
 13

	)

14 
	#R1_REGNUM
 1

	)

15 
	#PC_REGNUM
 15

	)

16 
	#WCGR0
 96

	)

17 
	#VFPCC_REGNUM
 101

	)

18 
	#CMP_CMN
 2

	)

19 
	#WCGR2
 98

	)

20 
	#R0_REGNUM
 0

	)

21 
	#WCGR1
 97

	)

22 
	#CMN_CMP
 1

	)

23 
	#LR_REGNUM
 14

	)

24 
	#DOM_CC_X_AND_Y
 0

	)

25 
	#CMN_CMN
 3

	)

26 
	#IP_REGNUM
 12

	)

27 
	#LAST_ARM_REGNUM
 15

	)

29 
	eun•ec
 {

30 
	mUNSPEC_PUSH_MULT
 = 0,

31 
	mUNSPEC_PIC_SYM
 = 1,

32 
	mUNSPEC_PIC_BASE
 = 2,

33 
	mUNSPEC_PRLG_STK
 = 3,

34 
	mUNSPEC_REGISTER_USE
 = 4,

35 
	mUNSPEC_CHECK_ARCH
 = 5,

36 
	mUNSPEC_WSHUFH
 = 6,

37 
	mUNSPEC_WACC
 = 7,

38 
	mUNSPEC_TMOVMSK
 = 8,

39 
	mUNSPEC_WSAD
 = 9,

40 
	mUNSPEC_WSADZ
 = 10,

41 
	mUNSPEC_WMACS
 = 11,

42 
	mUNSPEC_WMACU
 = 12,

43 
	mUNSPEC_WMACSZ
 = 13,

44 
	mUNSPEC_WMACUZ
 = 14,

45 
	mUNSPEC_CLRDI
 = 15,

46 
	mUNSPEC_WALIGNI
 = 16,

47 
	mUNSPEC_TLS
 = 17,

48 
	mUNSPEC_PIC_LABEL
 = 18,

49 
	mUNSPEC_PIC_OFFSET
 = 19,

50 
	mUNSPEC_GOTSYM_OFF
 = 20,

51 
	mUNSPEC_THUMB1_CASESI
 = 21,

52 
	mUNSPEC_RBIT
 = 22,

53 
	mUNSPEC_SYMBOL_OFFSET
 = 23,

54 
	mUNSPEC_MEMORY_BARRIER
 = 24,

55 
	mUNSPEC_UNALIGNED_LOAD
 = 25,

56 
	mUNSPEC_UNALIGNED_STORE
 = 26,

57 
	mUNSPEC_PIC_UNIFIED
 = 27,

58 
	mUNSPEC_LL
 = 28,

59 
	mUNSPEC_VRINTZ
 = 29,

60 
	mUNSPEC_VRINTP
 = 30,

61 
	mUNSPEC_VRINTM
 = 31,

62 
	mUNSPEC_VRINTR
 = 32,

63 
	mUNSPEC_VRINTX
 = 33,

64 
	mUNSPEC_VRINTA
 = 34,

65 
	mUNSPEC_WADDC
 = 35,

66 
	mUNSPEC_WABS
 = 36,

67 
	mUNSPEC_WQMULWMR
 = 37,

68 
	mUNSPEC_WQMULMR
 = 38,

69 
	mUNSPEC_WQMULWM
 = 39,

70 
	mUNSPEC_WQMULM
 = 40,

71 
	mUNSPEC_WQMIAxyn
 = 41,

72 
	mUNSPEC_WQMIAxy
 = 42,

73 
	mUNSPEC_TANDC
 = 43,

74 
	mUNSPEC_TORC
 = 44,

75 
	mUNSPEC_TORVSC
 = 45,

76 
	mUNSPEC_TEXTRC
 = 46,

77 
	mUNSPEC_ASHIFT_SIGNED
 = 47,

78 
	mUNSPEC_ASHIFT_UNSIGNED
 = 48,

79 
	mUNSPEC_CRC32B
 = 49,

80 
	mUNSPEC_CRC32H
 = 50,

81 
	mUNSPEC_CRC32W
 = 51,

82 
	mUNSPEC_CRC32CB
 = 52,

83 
	mUNSPEC_CRC32CH
 = 53,

84 
	mUNSPEC_CRC32CW
 = 54,

85 
	mUNSPEC_AESD
 = 55,

86 
	mUNSPEC_AESE
 = 56,

87 
	mUNSPEC_AESIMC
 = 57,

88 
	mUNSPEC_AESMC
 = 58,

89 
	mUNSPEC_SHA1C
 = 59,

90 
	mUNSPEC_SHA1M
 = 60,

91 
	mUNSPEC_SHA1P
 = 61,

92 
	mUNSPEC_SHA1H
 = 62,

93 
	mUNSPEC_SHA1SU0
 = 63,

94 
	mUNSPEC_SHA1SU1
 = 64,

95 
	mUNSPEC_SHA256H
 = 65,

96 
	mUNSPEC_SHA256H2
 = 66,

97 
	mUNSPEC_SHA256SU0
 = 67,

98 
	mUNSPEC_SHA256SU1
 = 68,

99 
	mUNSPEC_VMULLP64
 = 69,

100 
	mUNSPEC_LOAD_COUNT
 = 70,

101 
	mUNSPEC_VABD
 = 71,

102 
	mUNSPEC_VABDL
 = 72,

103 
	mUNSPEC_VADD
 = 73,

104 
	mUNSPEC_VADDHN
 = 74,

105 
	mUNSPEC_VADDL
 = 75,

106 
	mUNSPEC_VADDW
 = 76,

107 
	mUNSPEC_VBSL
 = 77,

108 
	mUNSPEC_VCAGE
 = 78,

109 
	mUNSPEC_VCAGT
 = 79,

110 
	mUNSPEC_VCEQ
 = 80,

111 
	mUNSPEC_VCGE
 = 81,

112 
	mUNSPEC_VCGEU
 = 82,

113 
	mUNSPEC_VCGT
 = 83,

114 
	mUNSPEC_VCGTU
 = 84,

115 
	mUNSPEC_VCLS
 = 85,

116 
	mUNSPEC_VCONCAT
 = 86,

117 
	mUNSPEC_VCVT
 = 87,

118 
	mUNSPEC_VCVT_N
 = 88,

119 
	mUNSPEC_VEXT
 = 89,

120 
	mUNSPEC_VHADD
 = 90,

121 
	mUNSPEC_VHSUB
 = 91,

122 
	mUNSPEC_VLD1
 = 92,

123 
	mUNSPEC_VLD1_LANE
 = 93,

124 
	mUNSPEC_VLD2
 = 94,

125 
	mUNSPEC_VLD2_DUP
 = 95,

126 
	mUNSPEC_VLD2_LANE
 = 96,

127 
	mUNSPEC_VLD3
 = 97,

128 
	mUNSPEC_VLD3A
 = 98,

129 
	mUNSPEC_VLD3B
 = 99,

130 
	mUNSPEC_VLD3_DUP
 = 100,

131 
	mUNSPEC_VLD3_LANE
 = 101,

132 
	mUNSPEC_VLD4
 = 102,

133 
	mUNSPEC_VLD4A
 = 103,

134 
	mUNSPEC_VLD4B
 = 104,

135 
	mUNSPEC_VLD4_DUP
 = 105,

136 
	mUNSPEC_VLD4_LANE
 = 106,

137 
	mUNSPEC_VMAX
 = 107,

138 
	mUNSPEC_VMIN
 = 108,

139 
	mUNSPEC_VMLA
 = 109,

140 
	mUNSPEC_VMLAL
 = 110,

141 
	mUNSPEC_VMLA_LANE
 = 111,

142 
	mUNSPEC_VMLAL_LANE
 = 112,

143 
	mUNSPEC_VMLS
 = 113,

144 
	mUNSPEC_VMLSL
 = 114,

145 
	mUNSPEC_VMLS_LANE
 = 115,

146 
	mUNSPEC_VMLSL_LANE
 = 116,

147 
	mUNSPEC_VMOVL
 = 117,

148 
	mUNSPEC_VMOVN
 = 118,

149 
	mUNSPEC_VMUL
 = 119,

150 
	mUNSPEC_VMULL
 = 120,

151 
	mUNSPEC_VMUL_LANE
 = 121,

152 
	mUNSPEC_VMULL_LANE
 = 122,

153 
	mUNSPEC_VPADAL
 = 123,

154 
	mUNSPEC_VPADD
 = 124,

155 
	mUNSPEC_VPADDL
 = 125,

156 
	mUNSPEC_VPMAX
 = 126,

157 
	mUNSPEC_VPMIN
 = 127,

158 
	mUNSPEC_VPSMAX
 = 128,

159 
	mUNSPEC_VPSMIN
 = 129,

160 
	mUNSPEC_VPUMAX
 = 130,

161 
	mUNSPEC_VPUMIN
 = 131,

162 
	mUNSPEC_VQABS
 = 132,

163 
	mUNSPEC_VQADD
 = 133,

164 
	mUNSPEC_VQDMLAL
 = 134,

165 
	mUNSPEC_VQDMLAL_LANE
 = 135,

166 
	mUNSPEC_VQDMLSL
 = 136,

167 
	mUNSPEC_VQDMLSL_LANE
 = 137,

168 
	mUNSPEC_VQDMULH
 = 138,

169 
	mUNSPEC_VQDMULH_LANE
 = 139,

170 
	mUNSPEC_VQDMULL
 = 140,

171 
	mUNSPEC_VQDMULL_LANE
 = 141,

172 
	mUNSPEC_VQMOVN
 = 142,

173 
	mUNSPEC_VQMOVUN
 = 143,

174 
	mUNSPEC_VQNEG
 = 144,

175 
	mUNSPEC_VQSHL
 = 145,

176 
	mUNSPEC_VQSHL_N
 = 146,

177 
	mUNSPEC_VQSHLU_N
 = 147,

178 
	mUNSPEC_VQSHRN_N
 = 148,

179 
	mUNSPEC_VQSHRUN_N
 = 149,

180 
	mUNSPEC_VQSUB
 = 150,

181 
	mUNSPEC_VRECPE
 = 151,

182 
	mUNSPEC_VRECPS
 = 152,

183 
	mUNSPEC_VREV16
 = 153,

184 
	mUNSPEC_VREV32
 = 154,

185 
	mUNSPEC_VREV64
 = 155,

186 
	mUNSPEC_VRSQRTE
 = 156,

187 
	mUNSPEC_VRSQRTS
 = 157,

188 
	mUNSPEC_VSHL
 = 158,

189 
	mUNSPEC_VSHLL_N
 = 159,

190 
	mUNSPEC_VSHL_N
 = 160,

191 
	mUNSPEC_VSHR_N
 = 161,

192 
	mUNSPEC_VSHRN_N
 = 162,

193 
	mUNSPEC_VSLI
 = 163,

194 
	mUNSPEC_VSRA_N
 = 164,

195 
	mUNSPEC_VSRI
 = 165,

196 
	mUNSPEC_VST1
 = 166,

197 
	mUNSPEC_VST1_LANE
 = 167,

198 
	mUNSPEC_VST2
 = 168,

199 
	mUNSPEC_VST2_LANE
 = 169,

200 
	mUNSPEC_VST3
 = 170,

201 
	mUNSPEC_VST3A
 = 171,

202 
	mUNSPEC_VST3B
 = 172,

203 
	mUNSPEC_VST3_LANE
 = 173,

204 
	mUNSPEC_VST4
 = 174,

205 
	mUNSPEC_VST4A
 = 175,

206 
	mUNSPEC_VST4B
 = 176,

207 
	mUNSPEC_VST4_LANE
 = 177,

208 
	mUNSPEC_VSTRUCTDUMMY
 = 178,

209 
	mUNSPEC_VSUB
 = 179,

210 
	mUNSPEC_VSUBHN
 = 180,

211 
	mUNSPEC_VSUBL
 = 181,

212 
	mUNSPEC_VSUBW
 = 182,

213 
	mUNSPEC_VTBL
 = 183,

214 
	mUNSPEC_VTBX
 = 184,

215 
	mUNSPEC_VTRN1
 = 185,

216 
	mUNSPEC_VTRN2
 = 186,

217 
	mUNSPEC_VTST
 = 187,

218 
	mUNSPEC_VUZP1
 = 188,

219 
	mUNSPEC_VUZP2
 = 189,

220 
	mUNSPEC_VZIP1
 = 190,

221 
	mUNSPEC_VZIP2
 = 191,

222 
	mUNSPEC_MISALIGNED_ACCESS
 = 192,

223 
	mUNSPEC_VCLE
 = 193,

224 
	mUNSPEC_VCLT
 = 194,

225 
	mUNSPEC_NVRINTZ
 = 195,

226 
	mUNSPEC_NVRINTP
 = 196,

227 
	mUNSPEC_NVRINTM
 = 197,

228 
	mUNSPEC_NVRINTX
 = 198,

229 
	mUNSPEC_NVRINTA
 = 199,

230 
	mUNSPEC_NVRINTN
 = 200

232 
	#NUM_UNSPEC_VALUES
 201

	)

233 c⁄° *c⁄° 
un•ec_°rögs
[];

235 
	eun•ecv
 {

236 
	mVUNSPEC_BLOCKAGE
 = 0,

237 
	mVUNSPEC_EPILOGUE
 = 1,

238 
	mVUNSPEC_THUMB1_INTERWORK
 = 2,

239 
	mVUNSPEC_ALIGN
 = 3,

240 
	mVUNSPEC_POOL_END
 = 4,

241 
	mVUNSPEC_POOL_1
 = 5,

242 
	mVUNSPEC_POOL_2
 = 6,

243 
	mVUNSPEC_POOL_4
 = 7,

244 
	mVUNSPEC_POOL_8
 = 8,

245 
	mVUNSPEC_POOL_16
 = 9,

246 
	mVUNSPEC_TMRC
 = 10,

247 
	mVUNSPEC_TMCR
 = 11,

248 
	mVUNSPEC_ALIGN8
 = 12,

249 
	mVUNSPEC_WCMP_EQ
 = 13,

250 
	mVUNSPEC_WCMP_GTU
 = 14,

251 
	mVUNSPEC_WCMP_GT
 = 15,

252 
	mVUNSPEC_EH_RETURN
 = 16,

253 
	mVUNSPEC_ATOMIC_CAS
 = 17,

254 
	mVUNSPEC_ATOMIC_XCHG
 = 18,

255 
	mVUNSPEC_ATOMIC_OP
 = 19,

256 
	mVUNSPEC_LL
 = 20,

257 
	mVUNSPEC_SC
 = 21,

258 
	mVUNSPEC_LAX
 = 22,

259 
	mVUNSPEC_SLX
 = 23,

260 
	mVUNSPEC_LDA
 = 24,

261 
	mVUNSPEC_STL
 = 25

263 
	#NUM_UNSPECV_VALUES
 26

	)

264 c⁄° *c⁄° 
un•ecv_°rögs
[];

	@include/insn-flags.h

4 #i‚de‡
GCC_INSN_FLAGS_H


5 
	#GCC_INSN_FLAGS_H


	)

7 
	#HAVE_addsi3_com∑ª0
 (
TARGET_ARM
)

	)

8 
	#HAVE_cmpsi2_add√g
 (
TARGET_32BIT
 && 
	`INTVAL
 (
›î™ds
[2]Ë=-INTVAL (›î™ds[3]))

	)

9 
	#HAVE_subsi3_com∑ª
 (
TARGET_32BIT
)

	)

10 
	#HAVE_mulhisi3
 (
TARGET_DSP_MULTIPLY
)

	)

11 
	#HAVE_maddhisi4
 (
TARGET_DSP_MULTIPLY
)

	)

12 
	#HAVE_maddhidi4
 (
TARGET_DSP_MULTIPLY
)

	)

13 
	#HAVE_ösv_zîo
 (
¨m_¨ch_thumb2
)

	)

14 
	#HAVE_ösv_t2
 (
¨m_¨ch_thumb2
)

	)

15 
	#HAVE_™dsi_nŸsi_si
 (
TARGET_32BIT
)

	)

16 
	#HAVE_™dsi_nŸ_shi·si_si
 (
TARGET_ARM
)

	)

17 
	#HAVE_¨m_ashldi3_1bô
 (
TARGET_32BIT
)

	)

18 
	#HAVE_¨m_ashrdi3_1bô
 (
TARGET_32BIT
)

	)

19 
	#HAVE_¨m_lshrdi3_1bô
 (
TARGET_32BIT
)

	)

20 
	#HAVE_u«lig√d_lﬂdsi
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

21 
	#HAVE_u«lig√d_lﬂdhis
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

22 
	#HAVE_u«lig√d_lﬂdhiu
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

23 
	#HAVE_u«lig√d_°‹esi
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

24 
	#HAVE_u«lig√d_°‹ehi
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

25 
	#HAVE_u«lig√d_lﬂddi
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

26 
	#HAVE_u«lig√d_°‹edi
 (
u«lig√d_ac˚ss
 && 
TARGET_32BIT
)

	)

27 
	#HAVE_extzv_t2
 (
¨m_¨ch_thumb2
)

	)

28 
	#HAVE_divsi3
 (
TARGET_IDIV
)

	)

29 
	#HAVE_udivsi3
 (
TARGET_IDIV
)

	)

30 
	#HAVE_⁄e_cm∂di2
 (
TARGET_32BIT
)

	)

31 
	#HAVE_zîo_exãndqidi2
 (
TARGET_32BIT
 )

	)

32 
	#HAVE_zîo_exãndhidi2
 (
TARGET_32BIT
 && 
¨m_¨ch6
)

	)

33 
	#HAVE_zîo_exãndsidi2
 (
TARGET_32BIT
 )

	)

34 
	#HAVE_exãndqidi2
 (
TARGET_32BIT
 && 
¨m_¨ch6
)

	)

35 
	#HAVE_exãndhidi2
 (
TARGET_32BIT
 && 
¨m_¨ch6
)

	)

36 
	#HAVE_exãndsidi2
 (
TARGET_32BIT
 )

	)

37 
	#HAVE_pic_lﬂd_addr_unifõd
 (
Êag_pic
)

	)

38 
	#HAVE_pic_lﬂd_addr_32bô
 (
TARGET_32BIT
 && 
Êag_pic
)

	)

39 
	#HAVE_pic_lﬂd_addr_thumb1
 (
TARGET_THUMB1
 && 
Êag_pic
)

	)

40 
	#HAVE_pic_add_dŸ_∂us_four
 (
TARGET_THUMB
)

	)

41 
	#HAVE_pic_add_dŸ_∂us_eight
 (
TARGET_ARM
)

	)

42 
	#HAVE_és_lﬂd_dŸ_∂us_eight
 (
TARGET_ARM
)

	)

43 
	#HAVE_¨m_c⁄d_bønch
 (
TARGET_32BIT
)

	)

44 
	#HAVE_blockage
 1

	)

45 
	#HAVE_¨m_ˇ£si_öã∫Æ
 (
TARGET_ARM
)

	)

46 
	#HAVE_n›
 1

	)

47 
	#HAVE_å≠
 1

	)

48 
	#HAVE_movc⁄d_addsi
 (
TARGET_32BIT
)

	)

49 
	#HAVE_movc⁄d
 (
TARGET_ARM
)

	)

50 
	#HAVE_°ack_tõ
 1

	)

51 
	#HAVE_Æign_4
 1

	)

52 
	#HAVE_Æign_8
 1

	)

53 
	#HAVE_c⁄°èbÀ_íd
 1

	)

54 
	#HAVE_c⁄°èbÀ_1
 1

	)

55 
	#HAVE_c⁄°èbÀ_2
 1

	)

56 
	#HAVE_c⁄°èbÀ_4
 1

	)

57 
	#HAVE_c⁄°èbÀ_8
 1

	)

58 
	#HAVE_c⁄°èbÀ_16
 1

	)

59 
	#HAVE_˛zsi2
 (
TARGET_32BIT
 && 
¨m_¨ch5
)

	)

60 
	#HAVE_rbôsi2
 (
TARGET_32BIT
 && 
¨m_¨ch_thumb2
)

	)

61 
	#HAVE_¥e„tch
 (
TARGET_32BIT
 && 
¨m_¨ch5e
)

	)

62 
	#HAVE_f‹˚_ªgi°î_u£
 1

	)

63 
	#HAVE_¨m_eh_ªtu∫
 (
TARGET_ARM
)

	)

64 
	#HAVE_lﬂd_ç_h¨d
 (
TARGET_HARD_TP
)

	)

65 
	#HAVE_lﬂd_ç_so·
 (
TARGET_SOFT_TP
)

	)

66 
	#HAVE_ésˇŒ
 (
TARGET_GNU2_TLS
)

	)

67 
	#HAVE_¸c32b
 (
TARGET_CRC32
)

	)

68 
	#HAVE_¸c32h
 (
TARGET_CRC32
)

	)

69 
	#HAVE_¸c32w
 (
TARGET_CRC32
)

	)

70 
	#HAVE_¸c32cb
 (
TARGET_CRC32
)

	)

71 
	#HAVE_¸c32ch
 (
TARGET_CRC32
)

	)

72 
	#HAVE_¸c32cw
 (
TARGET_CRC32
)

	)

73 
	#HAVE_tbc°v8qi
 (
TARGET_REALLY_IWMMXT
)

	)

74 
	#HAVE_tbc°v4hi
 (
TARGET_REALLY_IWMMXT
)

	)

75 
	#HAVE_tbc°v2si
 (
TARGET_REALLY_IWMMXT
)

	)

76 
	#HAVE_iwmmxt_i‹di3
 (
TARGET_REALLY_IWMMXT
)

	)

77 
	#HAVE_iwmmxt_x‹di3
 (
TARGET_REALLY_IWMMXT
)

	)

78 
	#HAVE_iwmmxt_™ddi3
 (
TARGET_REALLY_IWMMXT
)

	)

79 
	#HAVE_iwmmxt_«nddi3
 (
TARGET_REALLY_IWMMXT
)

	)

80 
	#HAVE_movv2si_öã∫Æ
 (
TARGET_REALLY_IWMMXT
)

	)

81 
	#HAVE_movv4hi_öã∫Æ
 (
TARGET_REALLY_IWMMXT
)

	)

82 
	#HAVE_movv8qi_öã∫Æ
 (
TARGET_REALLY_IWMMXT
)

	)

83 
	#HAVE_sßddv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

84 
	#HAVE_sßddv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

85 
	#HAVE_sßddv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

86 
	#HAVE_ußddv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

87 
	#HAVE_ußddv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

88 
	#HAVE_ußddv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

89 
	#HAVE_sssubv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

90 
	#HAVE_sssubv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

91 
	#HAVE_sssubv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

92 
	#HAVE_ussubv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

93 
	#HAVE_ussubv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

94 
	#HAVE_ussubv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

95 
	#HAVE_smulv4hi3_high∑π
 (
TARGET_REALLY_IWMMXT
)

	)

96 
	#HAVE_umulv4hi3_high∑π
 (
TARGET_REALLY_IWMMXT
)

	)

97 
	#HAVE_iwmmxt_wmacs
 (
TARGET_REALLY_IWMMXT
)

	)

98 
	#HAVE_iwmmxt_wmacsz
 (
TARGET_REALLY_IWMMXT
)

	)

99 
	#HAVE_iwmmxt_wmacu
 (
TARGET_REALLY_IWMMXT
)

	)

100 
	#HAVE_iwmmxt_wmacuz
 (
TARGET_REALLY_IWMMXT
)

	)

101 
	#HAVE_iwmmxt_˛rdi
 (
TARGET_REALLY_IWMMXT
)

	)

102 
	#HAVE_iwmmxt_˛rv8qi
 (
TARGET_REALLY_IWMMXT
)

	)

103 
	#HAVE_iwmmxt_˛rv4hi
 (
TARGET_REALLY_IWMMXT
)

	)

104 
	#HAVE_iwmmxt_˛rv2si
 (
TARGET_REALLY_IWMMXT
)

	)

105 
	#HAVE_iwmmxt_uavg∫dv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

106 
	#HAVE_iwmmxt_uavg∫dv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

107 
	#HAVE_iwmmxt_uavgv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

108 
	#HAVE_iwmmxt_uavgv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

109 
	#HAVE_iwmmxt_tö§b
 (
TARGET_REALLY_IWMMXT
)

	)

110 
	#HAVE_iwmmxt_tö§h
 (
TARGET_REALLY_IWMMXT
)

	)

111 
	#HAVE_iwmmxt_tö§w
 (
TARGET_REALLY_IWMMXT
)

	)

112 
	#HAVE_iwmmxt_ãxåmub
 (
TARGET_REALLY_IWMMXT
)

	)

113 
	#HAVE_iwmmxt_ãxåmsb
 (
TARGET_REALLY_IWMMXT
)

	)

114 
	#HAVE_iwmmxt_ãxåmuh
 (
TARGET_REALLY_IWMMXT
)

	)

115 
	#HAVE_iwmmxt_ãxåmsh
 (
TARGET_REALLY_IWMMXT
)

	)

116 
	#HAVE_iwmmxt_ãxåmw
 (
TARGET_REALLY_IWMMXT
)

	)

117 
	#HAVE_iwmmxt_wshufh
 (
TARGET_REALLY_IWMMXT
)

	)

118 
	#HAVE_eqv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

119 
	#HAVE_eqv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

120 
	#HAVE_eqv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

121 
	#HAVE_gtuv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

122 
	#HAVE_gtuv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

123 
	#HAVE_gtuv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

124 
	#HAVE_gtv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

125 
	#HAVE_gtv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

126 
	#HAVE_gtv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

127 
	#HAVE_iwmmxt_w∑ckhss
 (
TARGET_REALLY_IWMMXT
)

	)

128 
	#HAVE_iwmmxt_w∑ckwss
 (
TARGET_REALLY_IWMMXT
)

	)

129 
	#HAVE_iwmmxt_w∑ckdss
 (
TARGET_REALLY_IWMMXT
)

	)

130 
	#HAVE_iwmmxt_w∑ckhus
 (
TARGET_REALLY_IWMMXT
)

	)

131 
	#HAVE_iwmmxt_w∑ckwus
 (
TARGET_REALLY_IWMMXT
)

	)

132 
	#HAVE_iwmmxt_w∑ckdus
 (
TARGET_REALLY_IWMMXT
)

	)

133 
	#HAVE_iwmmxt_wu≈ckihb
 (
TARGET_REALLY_IWMMXT
)

	)

134 
	#HAVE_iwmmxt_wu≈ckihh
 (
TARGET_REALLY_IWMMXT
)

	)

135 
	#HAVE_iwmmxt_wu≈ckihw
 (
TARGET_REALLY_IWMMXT
)

	)

136 
	#HAVE_iwmmxt_wu≈ckûb
 (
TARGET_REALLY_IWMMXT
)

	)

137 
	#HAVE_iwmmxt_wu≈ckûh
 (
TARGET_REALLY_IWMMXT
)

	)

138 
	#HAVE_iwmmxt_wu≈ckûw
 (
TARGET_REALLY_IWMMXT
)

	)

139 
	#HAVE_iwmmxt_wu≈ckehub
 (
TARGET_REALLY_IWMMXT
)

	)

140 
	#HAVE_iwmmxt_wu≈ckehuh
 (
TARGET_REALLY_IWMMXT
)

	)

141 
	#HAVE_iwmmxt_wu≈ckehuw
 (
TARGET_REALLY_IWMMXT
)

	)

142 
	#HAVE_iwmmxt_wu≈ckehsb
 (
TARGET_REALLY_IWMMXT
)

	)

143 
	#HAVE_iwmmxt_wu≈ckehsh
 (
TARGET_REALLY_IWMMXT
)

	)

144 
	#HAVE_iwmmxt_wu≈ckehsw
 (
TARGET_REALLY_IWMMXT
)

	)

145 
	#HAVE_iwmmxt_wu≈ckñub
 (
TARGET_REALLY_IWMMXT
)

	)

146 
	#HAVE_iwmmxt_wu≈ckñuh
 (
TARGET_REALLY_IWMMXT
)

	)

147 
	#HAVE_iwmmxt_wu≈ckñuw
 (
TARGET_REALLY_IWMMXT
)

	)

148 
	#HAVE_iwmmxt_wu≈ckñsb
 (
TARGET_REALLY_IWMMXT
)

	)

149 
	#HAVE_iwmmxt_wu≈ckñsh
 (
TARGET_REALLY_IWMMXT
)

	)

150 
	#HAVE_iwmmxt_wu≈ckñsw
 (
TARGET_REALLY_IWMMXT
)

	)

151 
	#HAVE_r‹v4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

152 
	#HAVE_r‹v2si3
 (
TARGET_REALLY_IWMMXT
)

	)

153 
	#HAVE_r‹di3
 (
TARGET_REALLY_IWMMXT
)

	)

154 
	#HAVE_ashrv4hi3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

155 
	#HAVE_ashrv2si3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

156 
	#HAVE_ashrdi3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

157 
	#HAVE_lshrv4hi3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

158 
	#HAVE_lshrv2si3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

159 
	#HAVE_lshrdi3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

160 
	#HAVE_ashlv4hi3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

161 
	#HAVE_ashlv2si3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

162 
	#HAVE_ashldi3_iwmmxt
 (
TARGET_REALLY_IWMMXT
)

	)

163 
	#HAVE_r‹v4hi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

164 
	#HAVE_r‹v2si3_di
 (
TARGET_REALLY_IWMMXT
)

	)

165 
	#HAVE_r‹di3_di
 (
TARGET_REALLY_IWMMXT
)

	)

166 
	#HAVE_ashrv4hi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

167 
	#HAVE_ashrv2si3_di
 (
TARGET_REALLY_IWMMXT
)

	)

168 
	#HAVE_ashrdi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

169 
	#HAVE_lshrv4hi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

170 
	#HAVE_lshrv2si3_di
 (
TARGET_REALLY_IWMMXT
)

	)

171 
	#HAVE_lshrdi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

172 
	#HAVE_ashlv4hi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

173 
	#HAVE_ashlv2si3_di
 (
TARGET_REALLY_IWMMXT
)

	)

174 
	#HAVE_ashldi3_di
 (
TARGET_REALLY_IWMMXT
)

	)

175 
	#HAVE_iwmmxt_wmadds
 (
TARGET_REALLY_IWMMXT
)

	)

176 
	#HAVE_iwmmxt_wmaddu
 (
TARGET_REALLY_IWMMXT
)

	)

177 
	#HAVE_iwmmxt_tmü
 (
TARGET_REALLY_IWMMXT
)

	)

178 
	#HAVE_iwmmxt_tmüph
 (
TARGET_REALLY_IWMMXT
)

	)

179 
	#HAVE_iwmmxt_tmübb
 (
TARGET_REALLY_IWMMXT
)

	)

180 
	#HAVE_iwmmxt_tmütb
 (
TARGET_REALLY_IWMMXT
)

	)

181 
	#HAVE_iwmmxt_tmübt
 (
TARGET_REALLY_IWMMXT
)

	)

182 
	#HAVE_iwmmxt_tmüâ
 (
TARGET_REALLY_IWMMXT
)

	)

183 
	#HAVE_iwmmxt_tmovmskb
 (
TARGET_REALLY_IWMMXT
)

	)

184 
	#HAVE_iwmmxt_tmovmskh
 (
TARGET_REALLY_IWMMXT
)

	)

185 
	#HAVE_iwmmxt_tmovmskw
 (
TARGET_REALLY_IWMMXT
)

	)

186 
	#HAVE_iwmmxt_waccb
 (
TARGET_REALLY_IWMMXT
)

	)

187 
	#HAVE_iwmmxt_wacch
 (
TARGET_REALLY_IWMMXT
)

	)

188 
	#HAVE_iwmmxt_waccw
 (
TARGET_REALLY_IWMMXT
)

	)

189 
	#HAVE_iwmmxt_wÆigni
 (
TARGET_REALLY_IWMMXT
)

	)

190 
	#HAVE_iwmmxt_wÆigƒ
 (
TARGET_REALLY_IWMMXT
)

	)

191 
	#HAVE_iwmmxt_wÆigƒ0
 (
TARGET_REALLY_IWMMXT
)

	)

192 
	#HAVE_iwmmxt_wÆigƒ1
 (
TARGET_REALLY_IWMMXT
)

	)

193 
	#HAVE_iwmmxt_wÆigƒ2
 (
TARGET_REALLY_IWMMXT
)

	)

194 
	#HAVE_iwmmxt_wÆigƒ3
 (
TARGET_REALLY_IWMMXT
)

	)

195 
	#HAVE_iwmmxt_wßdb
 (
TARGET_REALLY_IWMMXT
)

	)

196 
	#HAVE_iwmmxt_wßdh
 (
TARGET_REALLY_IWMMXT
)

	)

197 
	#HAVE_iwmmxt_wßdbz
 (
TARGET_REALLY_IWMMXT
)

	)

198 
	#HAVE_iwmmxt_wßdhz
 (
TARGET_REALLY_IWMMXT
)

	)

199 
	#HAVE_iwmmxt_wabsv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

200 
	#HAVE_iwmmxt_wabsv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

201 
	#HAVE_iwmmxt_wabsv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

202 
	#HAVE_iwmmxt_wabsdiffb
 (
TARGET_REALLY_IWMMXT
)

	)

203 
	#HAVE_iwmmxt_wabsdiffh
 (
TARGET_REALLY_IWMMXT
)

	)

204 
	#HAVE_iwmmxt_wabsdiffw
 (
TARGET_REALLY_IWMMXT
)

	)

205 
	#HAVE_iwmmxt_waddsubhx
 (
TARGET_REALLY_IWMMXT
)

	)

206 
	#HAVE_iwmmxt_wsubaddhx
 (
TARGET_REALLY_IWMMXT
)

	)

207 
	#HAVE_addcv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

208 
	#HAVE_addcv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

209 
	#HAVE_iwmmxt_avg4
 (
TARGET_REALLY_IWMMXT
)

	)

210 
	#HAVE_iwmmxt_avg4r
 (
TARGET_REALLY_IWMMXT
)

	)

211 
	#HAVE_iwmmxt_wmaddsx
 (
TARGET_REALLY_IWMMXT
)

	)

212 
	#HAVE_iwmmxt_wmaddux
 (
TARGET_REALLY_IWMMXT
)

	)

213 
	#HAVE_iwmmxt_wmadd¢
 (
TARGET_REALLY_IWMMXT
)

	)

214 
	#HAVE_iwmmxt_wmaddun
 (
TARGET_REALLY_IWMMXT
)

	)

215 
	#HAVE_iwmmxt_wmulwsm
 (
TARGET_REALLY_IWMMXT
)

	)

216 
	#HAVE_iwmmxt_wmulwum
 (
TARGET_REALLY_IWMMXT
)

	)

217 
	#HAVE_iwmmxt_wmulsmr
 (
TARGET_REALLY_IWMMXT
)

	)

218 
	#HAVE_iwmmxt_wmulumr
 (
TARGET_REALLY_IWMMXT
)

	)

219 
	#HAVE_iwmmxt_wmulwsmr
 (
TARGET_REALLY_IWMMXT
)

	)

220 
	#HAVE_iwmmxt_wmulwumr
 (
TARGET_REALLY_IWMMXT
)

	)

221 
	#HAVE_iwmmxt_wmulwl
 (
TARGET_REALLY_IWMMXT
)

	)

222 
	#HAVE_iwmmxt_wqmulm
 (
TARGET_REALLY_IWMMXT
)

	)

223 
	#HAVE_iwmmxt_wqmulwm
 (
TARGET_REALLY_IWMMXT
)

	)

224 
	#HAVE_iwmmxt_wqmulmr
 (
TARGET_REALLY_IWMMXT
)

	)

225 
	#HAVE_iwmmxt_wqmulwmr
 (
TARGET_REALLY_IWMMXT
)

	)

226 
	#HAVE_iwmmxt_waddbhusm
 (
TARGET_REALLY_IWMMXT
)

	)

227 
	#HAVE_iwmmxt_waddbhu¶
 (
TARGET_REALLY_IWMMXT
)

	)

228 
	#HAVE_iwmmxt_wqmübb
 (
TARGET_REALLY_IWMMXT
)

	)

229 
	#HAVE_iwmmxt_wqmübt
 (
TARGET_REALLY_IWMMXT
)

	)

230 
	#HAVE_iwmmxt_wqmütb
 (
TARGET_REALLY_IWMMXT
)

	)

231 
	#HAVE_iwmmxt_wqmüâ
 (
TARGET_REALLY_IWMMXT
)

	)

232 
	#HAVE_iwmmxt_wqmübbn
 (
TARGET_REALLY_IWMMXT
)

	)

233 
	#HAVE_iwmmxt_wqmübä
 (
TARGET_REALLY_IWMMXT
)

	)

234 
	#HAVE_iwmmxt_wqmütbn
 (
TARGET_REALLY_IWMMXT
)

	)

235 
	#HAVE_iwmmxt_wqmüân
 (
TARGET_REALLY_IWMMXT
)

	)

236 
	#HAVE_iwmmxt_wmübb
 (
TARGET_REALLY_IWMMXT
)

	)

237 
	#HAVE_iwmmxt_wmübt
 (
TARGET_REALLY_IWMMXT
)

	)

238 
	#HAVE_iwmmxt_wmütb
 (
TARGET_REALLY_IWMMXT
)

	)

239 
	#HAVE_iwmmxt_wmüâ
 (
TARGET_REALLY_IWMMXT
)

	)

240 
	#HAVE_iwmmxt_wmübbn
 (
TARGET_REALLY_IWMMXT
)

	)

241 
	#HAVE_iwmmxt_wmübä
 (
TARGET_REALLY_IWMMXT
)

	)

242 
	#HAVE_iwmmxt_wmütbn
 (
TARGET_REALLY_IWMMXT
)

	)

243 
	#HAVE_iwmmxt_wmüân
 (
TARGET_REALLY_IWMMXT
)

	)

244 
	#HAVE_iwmmxt_wmüwbb
 (
TARGET_REALLY_IWMMXT
)

	)

245 
	#HAVE_iwmmxt_wmüwbt
 (
TARGET_REALLY_IWMMXT
)

	)

246 
	#HAVE_iwmmxt_wmüwtb
 (
TARGET_REALLY_IWMMXT
)

	)

247 
	#HAVE_iwmmxt_wmüwâ
 (
TARGET_REALLY_IWMMXT
)

	)

248 
	#HAVE_iwmmxt_wmüwbbn
 (
TARGET_REALLY_IWMMXT
)

	)

249 
	#HAVE_iwmmxt_wmüwbä
 (
TARGET_REALLY_IWMMXT
)

	)

250 
	#HAVE_iwmmxt_wmüwtbn
 (
TARGET_REALLY_IWMMXT
)

	)

251 
	#HAVE_iwmmxt_wmüwân
 (
TARGET_REALLY_IWMMXT
)

	)

252 
	#HAVE_iwmmxt_wmîge
 (
TARGET_REALLY_IWMMXT
)

	)

253 
	#HAVE_iwmmxt_èndcv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

254 
	#HAVE_iwmmxt_èndcv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

255 
	#HAVE_iwmmxt_èndcv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

256 
	#HAVE_iwmmxt_t‹cv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

257 
	#HAVE_iwmmxt_t‹cv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

258 
	#HAVE_iwmmxt_t‹cv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

259 
	#HAVE_iwmmxt_t‹vscv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

260 
	#HAVE_iwmmxt_t‹vscv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

261 
	#HAVE_iwmmxt_t‹vscv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

262 
	#HAVE_iwmmxt_ãxåcv2si3
 (
TARGET_REALLY_IWMMXT
)

	)

263 
	#HAVE_iwmmxt_ãxåcv4hi3
 (
TARGET_REALLY_IWMMXT
)

	)

264 
	#HAVE_iwmmxt_ãxåcv8qi3
 (
TARGET_REALLY_IWMMXT
)

	)

265 
	#HAVE_fmasf4
 ((
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_FMA
Ë&& (
TARGET_VFP
))

	)

266 
	#HAVE_fmadf4
 ((
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_FMA
Ë&& (
TARGET_VFP_DOUBLE
))

	)

267 
	#HAVE_exãndhfsf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_FP16
)

	)

268 
	#HAVE_åuncsfhf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_FP16
)

	)

269 
	#HAVE_fixuns_åuncsfsi2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP
)

	)

270 
	#HAVE_fixuns_åuncdfsi2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP_DOUBLE
)

	)

271 
	#HAVE_Êﬂtunssisf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP
)

	)

272 
	#HAVE_Êﬂtunssidf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP_DOUBLE
)

	)

273 
	#HAVE_båuncsf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

274 
	#HAVE_˚ûsf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

275 
	#HAVE_Êo‹sf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

276 
	#HAVE_√¨byötsf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

277 
	#HAVE_rötsf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

278 
	#HAVE_roundsf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

279 
	#HAVE_båuncdf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

280 
	#HAVE_˚ûdf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

281 
	#HAVE_Êo‹df2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

282 
	#HAVE_√¨byötdf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

283 
	#HAVE_rötdf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

284 
	#HAVE_rounddf2
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

285 
	#HAVE_smaxsf3
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

286 
	#HAVE_smaxdf3
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

287 
	#HAVE_smösf3
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 ) && (
TARGET_VFP
))

	)

288 
	#HAVE_smödf3
 ((
TARGET_HARD_FLOAT
 && 
TARGET_VFP5
 && 
TARGET_VFP_DOUBLE
Ë&& (TARGET_VFP_DOUBLE))

	)

289 
	#HAVE_thumb1_subsi3_ö¢
 (
TARGET_THUMB1
)

	)

290 
	#HAVE_thumb1_bicsi3
 (
TARGET_THUMB1
)

	)

291 
	#HAVE_thumb1_exãndhisi2
 (
TARGET_THUMB1
)

	)

292 
	#HAVE_thumb1_exãndqisi2
 (
TARGET_THUMB1
)

	)

293 
	#HAVE_movmem12b
 (
TARGET_THUMB1
)

	)

294 
	#HAVE_movmem8b
 (
TARGET_THUMB1
)

	)

295 
	#HAVE_cbønchsi4_ö¢
 (
TARGET_THUMB1
)

	)

296 
	#HAVE_cbønchsi4_s¸©ch
 (
TARGET_THUMB1
)

	)

297 
	#HAVE_c°‹esi_∆tu_thumb1
 (
TARGET_THUMB1
)

	)

298 
	#HAVE_c°‹esi_…u_thumb1
 (
TARGET_THUMB1
)

	)

299 
	#HAVE_thumb1_addsi3_addgeu
 (
TARGET_THUMB1
)

	)

300 
	#HAVE_thumb1_ˇ£si_di•©ch
 (
TARGET_THUMB1
)

	)

301 
	#HAVE_¥ﬁogue_thumb1_öãrw‹k
 (
TARGET_THUMB1
)

	)

302 
	#HAVE_thumb_eh_ªtu∫
 (
TARGET_THUMB1
)

	)

303 
	#HAVE_és_lﬂd_dŸ_∂us_four
 (
TARGET_THUMB2
)

	)

304 
	#HAVE_thumb2_zîo_exãndqisi2_v6
 (
TARGET_THUMB2
 && 
¨m_¨ch6
)

	)

305 
	#HAVE_thumb2_ˇ£si_öã∫Æ
 (
TARGET_THUMB2
 && !
Êag_pic
)

	)

306 
	#HAVE_thumb2_ˇ£si_öã∫Æ_pic
 (
TARGET_THUMB2
 && 
Êag_pic
)

	)

307 
	#HAVE_thumb2_eh_ªtu∫
 (
TARGET_THUMB2
)

	)

308 
	#HAVE_thumb2_addsi3_com∑ª0
 (
TARGET_THUMB2
)

	)

309 
	#HAVE_vec_£tv8qi_öã∫Æ
 (
TARGET_NEON
)

	)

310 
	#HAVE_vec_£tv4hi_öã∫Æ
 (
TARGET_NEON
)

	)

311 
	#HAVE_vec_£tv2si_öã∫Æ
 (
TARGET_NEON
)

	)

312 
	#HAVE_vec_£tv2sf_öã∫Æ
 (
TARGET_NEON
)

	)

313 
	#HAVE_vec_£tv16qi_öã∫Æ
 (
TARGET_NEON
)

	)

314 
	#HAVE_vec_£tv8hi_öã∫Æ
 (
TARGET_NEON
)

	)

315 
	#HAVE_vec_£tv4si_öã∫Æ
 (
TARGET_NEON
)

	)

316 
	#HAVE_vec_£tv4sf_öã∫Æ
 (
TARGET_NEON
)

	)

317 
	#HAVE_vec_£tv2di_öã∫Æ
 (
TARGET_NEON
)

	)

318 
	#HAVE_vec_exåa˘v8qi
 (
TARGET_NEON
)

	)

319 
	#HAVE_vec_exåa˘v4hi
 (
TARGET_NEON
)

	)

320 
	#HAVE_vec_exåa˘v2si
 (
TARGET_NEON
)

	)

321 
	#HAVE_vec_exåa˘v2sf
 (
TARGET_NEON
)

	)

322 
	#HAVE_vec_exåa˘v16qi
 (
TARGET_NEON
)

	)

323 
	#HAVE_vec_exåa˘v8hi
 (
TARGET_NEON
)

	)

324 
	#HAVE_vec_exåa˘v4si
 (
TARGET_NEON
)

	)

325 
	#HAVE_vec_exåa˘v4sf
 (
TARGET_NEON
)

	)

326 
	#HAVE_vec_exåa˘v2di
 (
TARGET_NEON
)

	)

327 
	#HAVE_adddi3_√⁄
 (
TARGET_NEON
)

	)

328 
	#HAVE_subdi3_√⁄
 (
TARGET_NEON
)

	)

329 
	#HAVE_mulv8qi3addv8qi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

330 
	#HAVE_mulv16qi3addv16qi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

331 
	#HAVE_mulv4hi3addv4hi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

332 
	#HAVE_mulv8hi3addv8hi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

333 
	#HAVE_mulv2si3addv2si_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

334 
	#HAVE_mulv4si3addv4si_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

335 
	#HAVE_mulv2sf3addv2sf_√⁄
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

336 
	#HAVE_mulv4sf3addv4sf_√⁄
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

337 
	#HAVE_mulv8qi3√gv8qüddv8qi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

338 
	#HAVE_mulv16qi3√gv16qüddv16qi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

339 
	#HAVE_mulv4hi3√gv4hüddv4hi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

340 
	#HAVE_mulv8hi3√gv8hüddv8hi_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

341 
	#HAVE_mulv2si3√gv2süddv2si_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

342 
	#HAVE_mulv4si3√gv4süddv4si_√⁄
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

343 
	#HAVE_mulv2sf3√gv2sÁddv2sf_√⁄
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

344 
	#HAVE_mulv4sf3√gv4sÁddv4sf_√⁄
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

345 
	#HAVE_fmav2sf4
 (
TARGET_NEON
 && 
TARGET_FMA
 && 
Êag_unß„_m©h_›timiz©i⁄s
)

	)

346 
	#HAVE_fmav4sf4
 (
TARGET_NEON
 && 
TARGET_FMA
 && 
Êag_unß„_m©h_›timiz©i⁄s
)

	)

347 
	#HAVE_fmav2sf4_öåösic
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

348 
	#HAVE_fmav4sf4_öåösic
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

349 
	#HAVE_fmsubv2sf4_öåösic
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

350 
	#HAVE_fmsubv4sf4_öåösic
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

351 
	#HAVE_√⁄_vröçv2sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

352 
	#HAVE_√⁄_vrötzv2sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

353 
	#HAVE_√⁄_vrötmv2sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

354 
	#HAVE_√⁄_vrötxv2sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

355 
	#HAVE_√⁄_vröèv2sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

356 
	#HAVE_√⁄_vröäv2sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

357 
	#HAVE_√⁄_vröçv4sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

358 
	#HAVE_√⁄_vrötzv4sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

359 
	#HAVE_√⁄_vrötmv4sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

360 
	#HAVE_√⁄_vrötxv4sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

361 
	#HAVE_√⁄_vröèv4sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

362 
	#HAVE_√⁄_vröäv4sf
 (
TARGET_NEON
 && 
TARGET_FPU_ARMV8
)

	)

363 
	#HAVE_i‹v8qi3
 (
TARGET_NEON
)

	)

364 
	#HAVE_i‹v16qi3
 (
TARGET_NEON
)

	)

365 
	#HAVE_i‹v4hi3
 (
TARGET_NEON
)

	)

366 
	#HAVE_i‹v8hi3
 (
TARGET_NEON
)

	)

367 
	#HAVE_i‹v2si3
 (
TARGET_NEON
)

	)

368 
	#HAVE_i‹v4si3
 (
TARGET_NEON
)

	)

369 
	#HAVE_i‹v2sf3
 (
TARGET_NEON
)

	)

370 
	#HAVE_i‹v4sf3
 (
TARGET_NEON
)

	)

371 
	#HAVE_i‹v2di3
 (
TARGET_NEON
)

	)

372 
	#HAVE_™dv8qi3
 (
TARGET_NEON
)

	)

373 
	#HAVE_™dv16qi3
 (
TARGET_NEON
)

	)

374 
	#HAVE_™dv4hi3
 (
TARGET_NEON
)

	)

375 
	#HAVE_™dv8hi3
 (
TARGET_NEON
)

	)

376 
	#HAVE_™dv2si3
 (
TARGET_NEON
)

	)

377 
	#HAVE_™dv4si3
 (
TARGET_NEON
)

	)

378 
	#HAVE_™dv2sf3
 (
TARGET_NEON
)

	)

379 
	#HAVE_™dv4sf3
 (
TARGET_NEON
)

	)

380 
	#HAVE_™dv2di3
 (
TARGET_NEON
)

	)

381 
	#HAVE_‹nv8qi3_√⁄
 (
TARGET_NEON
)

	)

382 
	#HAVE_‹nv16qi3_√⁄
 (
TARGET_NEON
)

	)

383 
	#HAVE_‹nv4hi3_√⁄
 (
TARGET_NEON
)

	)

384 
	#HAVE_‹nv8hi3_√⁄
 (
TARGET_NEON
)

	)

385 
	#HAVE_‹nv2si3_√⁄
 (
TARGET_NEON
)

	)

386 
	#HAVE_‹nv4si3_√⁄
 (
TARGET_NEON
)

	)

387 
	#HAVE_‹nv2sf3_√⁄
 (
TARGET_NEON
)

	)

388 
	#HAVE_‹nv4sf3_√⁄
 (
TARGET_NEON
)

	)

389 
	#HAVE_‹nv2di3_√⁄
 (
TARGET_NEON
)

	)

390 
	#HAVE_‹ndi3_√⁄
 (
TARGET_NEON
)

	)

391 
	#HAVE_bicv8qi3_√⁄
 (
TARGET_NEON
)

	)

392 
	#HAVE_bicv16qi3_√⁄
 (
TARGET_NEON
)

	)

393 
	#HAVE_bicv4hi3_√⁄
 (
TARGET_NEON
)

	)

394 
	#HAVE_bicv8hi3_√⁄
 (
TARGET_NEON
)

	)

395 
	#HAVE_bicv2si3_√⁄
 (
TARGET_NEON
)

	)

396 
	#HAVE_bicv4si3_√⁄
 (
TARGET_NEON
)

	)

397 
	#HAVE_bicv2sf3_√⁄
 (
TARGET_NEON
)

	)

398 
	#HAVE_bicv4sf3_√⁄
 (
TARGET_NEON
)

	)

399 
	#HAVE_bicv2di3_√⁄
 (
TARGET_NEON
)

	)

400 
	#HAVE_bicdi3_√⁄
 (
TARGET_NEON
)

	)

401 
	#HAVE_x‹v8qi3
 (
TARGET_NEON
)

	)

402 
	#HAVE_x‹v16qi3
 (
TARGET_NEON
)

	)

403 
	#HAVE_x‹v4hi3
 (
TARGET_NEON
)

	)

404 
	#HAVE_x‹v8hi3
 (
TARGET_NEON
)

	)

405 
	#HAVE_x‹v2si3
 (
TARGET_NEON
)

	)

406 
	#HAVE_x‹v4si3
 (
TARGET_NEON
)

	)

407 
	#HAVE_x‹v2sf3
 (
TARGET_NEON
)

	)

408 
	#HAVE_x‹v4sf3
 (
TARGET_NEON
)

	)

409 
	#HAVE_x‹v2di3
 (
TARGET_NEON
)

	)

410 
	#HAVE_⁄e_cm∂v8qi2
 (
TARGET_NEON
)

	)

411 
	#HAVE_⁄e_cm∂v16qi2
 (
TARGET_NEON
)

	)

412 
	#HAVE_⁄e_cm∂v4hi2
 (
TARGET_NEON
)

	)

413 
	#HAVE_⁄e_cm∂v8hi2
 (
TARGET_NEON
)

	)

414 
	#HAVE_⁄e_cm∂v2si2
 (
TARGET_NEON
)

	)

415 
	#HAVE_⁄e_cm∂v4si2
 (
TARGET_NEON
)

	)

416 
	#HAVE_⁄e_cm∂v2sf2
 (
TARGET_NEON
)

	)

417 
	#HAVE_⁄e_cm∂v4sf2
 (
TARGET_NEON
)

	)

418 
	#HAVE_⁄e_cm∂v2di2
 (
TARGET_NEON
)

	)

419 
	#HAVE_absv8qi2
 (
TARGET_NEON
)

	)

420 
	#HAVE_absv16qi2
 (
TARGET_NEON
)

	)

421 
	#HAVE_absv4hi2
 (
TARGET_NEON
)

	)

422 
	#HAVE_absv8hi2
 (
TARGET_NEON
)

	)

423 
	#HAVE_absv2si2
 (
TARGET_NEON
)

	)

424 
	#HAVE_absv4si2
 (
TARGET_NEON
)

	)

425 
	#HAVE_absv2sf2
 (
TARGET_NEON
)

	)

426 
	#HAVE_absv4sf2
 (
TARGET_NEON
)

	)

427 
	#HAVE_√gv8qi2
 (
TARGET_NEON
)

	)

428 
	#HAVE_√gv16qi2
 (
TARGET_NEON
)

	)

429 
	#HAVE_√gv4hi2
 (
TARGET_NEON
)

	)

430 
	#HAVE_√gv8hi2
 (
TARGET_NEON
)

	)

431 
	#HAVE_√gv2si2
 (
TARGET_NEON
)

	)

432 
	#HAVE_√gv4si2
 (
TARGET_NEON
)

	)

433 
	#HAVE_√gv2sf2
 (
TARGET_NEON
)

	)

434 
	#HAVE_√gv4sf2
 (
TARGET_NEON
)

	)

435 
	#HAVE_√gdi2_√⁄
 (
TARGET_NEON
)

	)

436 
	#HAVE_vashlv8qi3
 (
TARGET_NEON
)

	)

437 
	#HAVE_vashlv16qi3
 (
TARGET_NEON
)

	)

438 
	#HAVE_vashlv4hi3
 (
TARGET_NEON
)

	)

439 
	#HAVE_vashlv8hi3
 (
TARGET_NEON
)

	)

440 
	#HAVE_vashlv2si3
 (
TARGET_NEON
)

	)

441 
	#HAVE_vashlv4si3
 (
TARGET_NEON
)

	)

442 
	#HAVE_vashrv8qi3_imm
 (
TARGET_NEON
)

	)

443 
	#HAVE_vashrv16qi3_imm
 (
TARGET_NEON
)

	)

444 
	#HAVE_vashrv4hi3_imm
 (
TARGET_NEON
)

	)

445 
	#HAVE_vashrv8hi3_imm
 (
TARGET_NEON
)

	)

446 
	#HAVE_vashrv2si3_imm
 (
TARGET_NEON
)

	)

447 
	#HAVE_vashrv4si3_imm
 (
TARGET_NEON
)

	)

448 
	#HAVE_vlshrv8qi3_imm
 (
TARGET_NEON
)

	)

449 
	#HAVE_vlshrv16qi3_imm
 (
TARGET_NEON
)

	)

450 
	#HAVE_vlshrv4hi3_imm
 (
TARGET_NEON
)

	)

451 
	#HAVE_vlshrv8hi3_imm
 (
TARGET_NEON
)

	)

452 
	#HAVE_vlshrv2si3_imm
 (
TARGET_NEON
)

	)

453 
	#HAVE_vlshrv4si3_imm
 (
TARGET_NEON
)

	)

454 
	#HAVE_ashlv8qi3_sig√d
 (
TARGET_NEON
)

	)

455 
	#HAVE_ashlv16qi3_sig√d
 (
TARGET_NEON
)

	)

456 
	#HAVE_ashlv4hi3_sig√d
 (
TARGET_NEON
)

	)

457 
	#HAVE_ashlv8hi3_sig√d
 (
TARGET_NEON
)

	)

458 
	#HAVE_ashlv2si3_sig√d
 (
TARGET_NEON
)

	)

459 
	#HAVE_ashlv4si3_sig√d
 (
TARGET_NEON
)

	)

460 
	#HAVE_ashlv2di3_sig√d
 (
TARGET_NEON
)

	)

461 
	#HAVE_ashlv8qi3_unsig√d
 (
TARGET_NEON
)

	)

462 
	#HAVE_ashlv16qi3_unsig√d
 (
TARGET_NEON
)

	)

463 
	#HAVE_ashlv4hi3_unsig√d
 (
TARGET_NEON
)

	)

464 
	#HAVE_ashlv8hi3_unsig√d
 (
TARGET_NEON
)

	)

465 
	#HAVE_ashlv2si3_unsig√d
 (
TARGET_NEON
)

	)

466 
	#HAVE_ashlv4si3_unsig√d
 (
TARGET_NEON
)

	)

467 
	#HAVE_ashlv2di3_unsig√d
 (
TARGET_NEON
)

	)

468 
	#HAVE_√⁄_lﬂd_cou¡
 (
TARGET_NEON
)

	)

469 
	#HAVE_ashldi3_√⁄_no˛obbî
 (
TARGET_NEON
 && 
ªlﬂd_com∂ëed
 \

470 && (!
	`CONST_INT_P
 (
›î™ds
[2]) \

471 || (
	`INTVAL
 (
›î™ds
[2]Ë>0 && INTVAL (›î™ds[2]Ë< 64)))

	)

472 
	#HAVE_ashldi3_√⁄
 (
TARGET_NEON
)

	)

473 
	#HAVE_sig√d_shi·_di3_√⁄
 (
TARGET_NEON
 && 
ªlﬂd_com∂ëed
)

	)

474 
	#HAVE_unsig√d_shi·_di3_√⁄
 (
TARGET_NEON
 && 
ªlﬂd_com∂ëed
)

	)

475 
	#HAVE_ashrdi3_√⁄_imm_no˛obbî
 (
TARGET_NEON
 && 
ªlﬂd_com∂ëed
 \

476 && 
	`INTVAL
 (
›î™ds
[2]Ë> 0 && INTVAL (›î™ds[2]Ë<64)

	)

477 
	#HAVE_lshrdi3_√⁄_imm_no˛obbî
 (
TARGET_NEON
 && 
ªlﬂd_com∂ëed
 \

478 && 
	`INTVAL
 (
›î™ds
[2]Ë> 0 && INTVAL (›î™ds[2]Ë<64)

	)

479 
	#HAVE_ashrdi3_√⁄
 (
TARGET_NEON
)

	)

480 
	#HAVE_lshrdi3_√⁄
 (
TARGET_NEON
)

	)

481 
	#HAVE_widí_ssumv8qi3
 (
TARGET_NEON
)

	)

482 
	#HAVE_widí_ssumv4hi3
 (
TARGET_NEON
)

	)

483 
	#HAVE_widí_ssumv2si3
 (
TARGET_NEON
)

	)

484 
	#HAVE_widí_usumv8qi3
 (
TARGET_NEON
)

	)

485 
	#HAVE_widí_usumv4hi3
 (
TARGET_NEON
)

	)

486 
	#HAVE_widí_usumv2si3
 (
TARGET_NEON
)

	)

487 
	#HAVE_quad_hÆves_∂usv4si
 (
TARGET_NEON
)

	)

488 
	#HAVE_quad_hÆves_smöv4si
 (
TARGET_NEON
)

	)

489 
	#HAVE_quad_hÆves_smaxv4si
 (
TARGET_NEON
)

	)

490 
	#HAVE_quad_hÆves_umöv4si
 (
TARGET_NEON
)

	)

491 
	#HAVE_quad_hÆves_umaxv4si
 (
TARGET_NEON
)

	)

492 
	#HAVE_quad_hÆves_∂usv4sf
 (
TARGET_NEON
 && 
Êag_unß„_m©h_›timiz©i⁄s
)

	)

493 
	#HAVE_quad_hÆves_smöv4sf
 (
TARGET_NEON
 && 
Êag_unß„_m©h_›timiz©i⁄s
)

	)

494 
	#HAVE_quad_hÆves_smaxv4sf
 (
TARGET_NEON
 && 
Êag_unß„_m©h_›timiz©i⁄s
)

	)

495 
	#HAVE_quad_hÆves_∂usv8hi
 (
TARGET_NEON
)

	)

496 
	#HAVE_quad_hÆves_smöv8hi
 (
TARGET_NEON
)

	)

497 
	#HAVE_quad_hÆves_smaxv8hi
 (
TARGET_NEON
)

	)

498 
	#HAVE_quad_hÆves_umöv8hi
 (
TARGET_NEON
)

	)

499 
	#HAVE_quad_hÆves_umaxv8hi
 (
TARGET_NEON
)

	)

500 
	#HAVE_quad_hÆves_∂usv16qi
 (
TARGET_NEON
)

	)

501 
	#HAVE_quad_hÆves_smöv16qi
 (
TARGET_NEON
)

	)

502 
	#HAVE_quad_hÆves_smaxv16qi
 (
TARGET_NEON
)

	)

503 
	#HAVE_quad_hÆves_umöv16qi
 (
TARGET_NEON
)

	)

504 
	#HAVE_quad_hÆves_umaxv16qi
 (
TARGET_NEON
)

	)

505 
	#HAVE_ªduc_•lus_v2di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

506 
	#HAVE_√⁄_v∑dd_öã∫Æv8qi
 (
TARGET_NEON
)

	)

507 
	#HAVE_√⁄_v∑dd_öã∫Æv4hi
 (
TARGET_NEON
)

	)

508 
	#HAVE_√⁄_v∑dd_öã∫Æv2si
 (
TARGET_NEON
)

	)

509 
	#HAVE_√⁄_v∑dd_öã∫Æv2sf
 (
TARGET_NEON
)

	)

510 
	#HAVE_√⁄_vpsmöv8qi
 (
TARGET_NEON
)

	)

511 
	#HAVE_√⁄_vpsmöv4hi
 (
TARGET_NEON
)

	)

512 
	#HAVE_√⁄_vpsmöv2si
 (
TARGET_NEON
)

	)

513 
	#HAVE_√⁄_vpsmöv2sf
 (
TARGET_NEON
)

	)

514 
	#HAVE_√⁄_vpsmaxv8qi
 (
TARGET_NEON
)

	)

515 
	#HAVE_√⁄_vpsmaxv4hi
 (
TARGET_NEON
)

	)

516 
	#HAVE_√⁄_vpsmaxv2si
 (
TARGET_NEON
)

	)

517 
	#HAVE_√⁄_vpsmaxv2sf
 (
TARGET_NEON
)

	)

518 
	#HAVE_√⁄_vpumöv8qi
 (
TARGET_NEON
)

	)

519 
	#HAVE_√⁄_vpumöv4hi
 (
TARGET_NEON
)

	)

520 
	#HAVE_√⁄_vpumöv2si
 (
TARGET_NEON
)

	)

521 
	#HAVE_√⁄_vpumaxv8qi
 (
TARGET_NEON
)

	)

522 
	#HAVE_√⁄_vpumaxv4hi
 (
TARGET_NEON
)

	)

523 
	#HAVE_√⁄_vpumaxv2si
 (
TARGET_NEON
)

	)

524 
	#HAVE_√⁄_vaddv8qi_un•ec
 (
TARGET_NEON
)

	)

525 
	#HAVE_√⁄_vaddv16qi_un•ec
 (
TARGET_NEON
)

	)

526 
	#HAVE_√⁄_vaddv4hi_un•ec
 (
TARGET_NEON
)

	)

527 
	#HAVE_√⁄_vaddv8hi_un•ec
 (
TARGET_NEON
)

	)

528 
	#HAVE_√⁄_vaddv2si_un•ec
 (
TARGET_NEON
)

	)

529 
	#HAVE_√⁄_vaddv4si_un•ec
 (
TARGET_NEON
)

	)

530 
	#HAVE_√⁄_vaddv2sf_un•ec
 (
TARGET_NEON
)

	)

531 
	#HAVE_√⁄_vaddv4sf_un•ec
 (
TARGET_NEON
)

	)

532 
	#HAVE_√⁄_vadddi_un•ec
 (
TARGET_NEON
)

	)

533 
	#HAVE_√⁄_vaddv2di_un•ec
 (
TARGET_NEON
)

	)

534 
	#HAVE_√⁄_vaddlv8qi
 (
TARGET_NEON
)

	)

535 
	#HAVE_√⁄_vaddlv4hi
 (
TARGET_NEON
)

	)

536 
	#HAVE_√⁄_vaddlv2si
 (
TARGET_NEON
)

	)

537 
	#HAVE_√⁄_vaddwv8qi
 (
TARGET_NEON
)

	)

538 
	#HAVE_√⁄_vaddwv4hi
 (
TARGET_NEON
)

	)

539 
	#HAVE_√⁄_vaddwv2si
 (
TARGET_NEON
)

	)

540 
	#HAVE_√⁄_vhaddv8qi
 (
TARGET_NEON
)

	)

541 
	#HAVE_√⁄_vhaddv16qi
 (
TARGET_NEON
)

	)

542 
	#HAVE_√⁄_vhaddv4hi
 (
TARGET_NEON
)

	)

543 
	#HAVE_√⁄_vhaddv8hi
 (
TARGET_NEON
)

	)

544 
	#HAVE_√⁄_vhaddv2si
 (
TARGET_NEON
)

	)

545 
	#HAVE_√⁄_vhaddv4si
 (
TARGET_NEON
)

	)

546 
	#HAVE_√⁄_vqaddv8qi
 (
TARGET_NEON
)

	)

547 
	#HAVE_√⁄_vqaddv16qi
 (
TARGET_NEON
)

	)

548 
	#HAVE_√⁄_vqaddv4hi
 (
TARGET_NEON
)

	)

549 
	#HAVE_√⁄_vqaddv8hi
 (
TARGET_NEON
)

	)

550 
	#HAVE_√⁄_vqaddv2si
 (
TARGET_NEON
)

	)

551 
	#HAVE_√⁄_vqaddv4si
 (
TARGET_NEON
)

	)

552 
	#HAVE_√⁄_vqadddi
 (
TARGET_NEON
)

	)

553 
	#HAVE_√⁄_vqaddv2di
 (
TARGET_NEON
)

	)

554 
	#HAVE_√⁄_vaddhnv8hi
 (
TARGET_NEON
)

	)

555 
	#HAVE_√⁄_vaddhnv4si
 (
TARGET_NEON
)

	)

556 
	#HAVE_√⁄_vaddhnv2di
 (
TARGET_NEON
)

	)

557 
	#HAVE_√⁄_vmulv8qi
 (
TARGET_NEON
)

	)

558 
	#HAVE_√⁄_vmulv16qi
 (
TARGET_NEON
)

	)

559 
	#HAVE_√⁄_vmulv4hi
 (
TARGET_NEON
)

	)

560 
	#HAVE_√⁄_vmulv8hi
 (
TARGET_NEON
)

	)

561 
	#HAVE_√⁄_vmulv2si
 (
TARGET_NEON
)

	)

562 
	#HAVE_√⁄_vmulv4si
 (
TARGET_NEON
)

	)

563 
	#HAVE_√⁄_vmulv2sf
 (
TARGET_NEON
)

	)

564 
	#HAVE_√⁄_vmulv4sf
 (
TARGET_NEON
)

	)

565 
	#HAVE_√⁄_vmœv8qi_un•ec
 (
TARGET_NEON
)

	)

566 
	#HAVE_√⁄_vmœv16qi_un•ec
 (
TARGET_NEON
)

	)

567 
	#HAVE_√⁄_vmœv4hi_un•ec
 (
TARGET_NEON
)

	)

568 
	#HAVE_√⁄_vmœv8hi_un•ec
 (
TARGET_NEON
)

	)

569 
	#HAVE_√⁄_vmœv2si_un•ec
 (
TARGET_NEON
)

	)

570 
	#HAVE_√⁄_vmœv4si_un•ec
 (
TARGET_NEON
)

	)

571 
	#HAVE_√⁄_vmœv2sf_un•ec
 (
TARGET_NEON
)

	)

572 
	#HAVE_√⁄_vmœv4sf_un•ec
 (
TARGET_NEON
)

	)

573 
	#HAVE_√⁄_vmœlv8qi
 (
TARGET_NEON
)

	)

574 
	#HAVE_√⁄_vmœlv4hi
 (
TARGET_NEON
)

	)

575 
	#HAVE_√⁄_vmœlv2si
 (
TARGET_NEON
)

	)

576 
	#HAVE_√⁄_vmlsv8qi_un•ec
 (
TARGET_NEON
)

	)

577 
	#HAVE_√⁄_vmlsv16qi_un•ec
 (
TARGET_NEON
)

	)

578 
	#HAVE_√⁄_vmlsv4hi_un•ec
 (
TARGET_NEON
)

	)

579 
	#HAVE_√⁄_vmlsv8hi_un•ec
 (
TARGET_NEON
)

	)

580 
	#HAVE_√⁄_vmlsv2si_un•ec
 (
TARGET_NEON
)

	)

581 
	#HAVE_√⁄_vmlsv4si_un•ec
 (
TARGET_NEON
)

	)

582 
	#HAVE_√⁄_vmlsv2sf_un•ec
 (
TARGET_NEON
)

	)

583 
	#HAVE_√⁄_vmlsv4sf_un•ec
 (
TARGET_NEON
)

	)

584 
	#HAVE_√⁄_vml¶v8qi
 (
TARGET_NEON
)

	)

585 
	#HAVE_√⁄_vml¶v4hi
 (
TARGET_NEON
)

	)

586 
	#HAVE_√⁄_vml¶v2si
 (
TARGET_NEON
)

	)

587 
	#HAVE_√⁄_vqdmulhv4hi
 (
TARGET_NEON
)

	)

588 
	#HAVE_√⁄_vqdmulhv2si
 (
TARGET_NEON
)

	)

589 
	#HAVE_√⁄_vqdmulhv8hi
 (
TARGET_NEON
)

	)

590 
	#HAVE_√⁄_vqdmulhv4si
 (
TARGET_NEON
)

	)

591 
	#HAVE_√⁄_vqdmœlv4hi
 (
TARGET_NEON
)

	)

592 
	#HAVE_√⁄_vqdmœlv2si
 (
TARGET_NEON
)

	)

593 
	#HAVE_√⁄_vqdml¶v4hi
 (
TARGET_NEON
)

	)

594 
	#HAVE_√⁄_vqdml¶v2si
 (
TARGET_NEON
)

	)

595 
	#HAVE_√⁄_vmuŒv8qi
 (
TARGET_NEON
)

	)

596 
	#HAVE_√⁄_vmuŒv4hi
 (
TARGET_NEON
)

	)

597 
	#HAVE_√⁄_vmuŒv2si
 (
TARGET_NEON
)

	)

598 
	#HAVE_√⁄_vqdmuŒv4hi
 (
TARGET_NEON
)

	)

599 
	#HAVE_√⁄_vqdmuŒv2si
 (
TARGET_NEON
)

	)

600 
	#HAVE_√⁄_vsubv8qi_un•ec
 (
TARGET_NEON
)

	)

601 
	#HAVE_√⁄_vsubv16qi_un•ec
 (
TARGET_NEON
)

	)

602 
	#HAVE_√⁄_vsubv4hi_un•ec
 (
TARGET_NEON
)

	)

603 
	#HAVE_√⁄_vsubv8hi_un•ec
 (
TARGET_NEON
)

	)

604 
	#HAVE_√⁄_vsubv2si_un•ec
 (
TARGET_NEON
)

	)

605 
	#HAVE_√⁄_vsubv4si_un•ec
 (
TARGET_NEON
)

	)

606 
	#HAVE_√⁄_vsubv2sf_un•ec
 (
TARGET_NEON
)

	)

607 
	#HAVE_√⁄_vsubv4sf_un•ec
 (
TARGET_NEON
)

	)

608 
	#HAVE_√⁄_vsubdi_un•ec
 (
TARGET_NEON
)

	)

609 
	#HAVE_√⁄_vsubv2di_un•ec
 (
TARGET_NEON
)

	)

610 
	#HAVE_√⁄_vsublv8qi
 (
TARGET_NEON
)

	)

611 
	#HAVE_√⁄_vsublv4hi
 (
TARGET_NEON
)

	)

612 
	#HAVE_√⁄_vsublv2si
 (
TARGET_NEON
)

	)

613 
	#HAVE_√⁄_vsubwv8qi
 (
TARGET_NEON
)

	)

614 
	#HAVE_√⁄_vsubwv4hi
 (
TARGET_NEON
)

	)

615 
	#HAVE_√⁄_vsubwv2si
 (
TARGET_NEON
)

	)

616 
	#HAVE_√⁄_vqsubv8qi
 (
TARGET_NEON
)

	)

617 
	#HAVE_√⁄_vqsubv16qi
 (
TARGET_NEON
)

	)

618 
	#HAVE_√⁄_vqsubv4hi
 (
TARGET_NEON
)

	)

619 
	#HAVE_√⁄_vqsubv8hi
 (
TARGET_NEON
)

	)

620 
	#HAVE_√⁄_vqsubv2si
 (
TARGET_NEON
)

	)

621 
	#HAVE_√⁄_vqsubv4si
 (
TARGET_NEON
)

	)

622 
	#HAVE_√⁄_vqsubdi
 (
TARGET_NEON
)

	)

623 
	#HAVE_√⁄_vqsubv2di
 (
TARGET_NEON
)

	)

624 
	#HAVE_√⁄_vhsubv8qi
 (
TARGET_NEON
)

	)

625 
	#HAVE_√⁄_vhsubv16qi
 (
TARGET_NEON
)

	)

626 
	#HAVE_√⁄_vhsubv4hi
 (
TARGET_NEON
)

	)

627 
	#HAVE_√⁄_vhsubv8hi
 (
TARGET_NEON
)

	)

628 
	#HAVE_√⁄_vhsubv2si
 (
TARGET_NEON
)

	)

629 
	#HAVE_√⁄_vhsubv4si
 (
TARGET_NEON
)

	)

630 
	#HAVE_√⁄_vsubhnv8hi
 (
TARGET_NEON
)

	)

631 
	#HAVE_√⁄_vsubhnv4si
 (
TARGET_NEON
)

	)

632 
	#HAVE_√⁄_vsubhnv2di
 (
TARGET_NEON
)

	)

633 
	#HAVE_√⁄_v˚qv8qi
 (
TARGET_NEON
)

	)

634 
	#HAVE_√⁄_v˚qv16qi
 (
TARGET_NEON
)

	)

635 
	#HAVE_√⁄_v˚qv4hi
 (
TARGET_NEON
)

	)

636 
	#HAVE_√⁄_v˚qv8hi
 (
TARGET_NEON
)

	)

637 
	#HAVE_√⁄_v˚qv2si
 (
TARGET_NEON
)

	)

638 
	#HAVE_√⁄_v˚qv4si
 (
TARGET_NEON
)

	)

639 
	#HAVE_√⁄_v˚qv2sf
 (
TARGET_NEON
)

	)

640 
	#HAVE_√⁄_v˚qv4sf
 (
TARGET_NEON
)

	)

641 
	#HAVE_√⁄_vcgev8qi
 (
TARGET_NEON
)

	)

642 
	#HAVE_√⁄_vcgev16qi
 (
TARGET_NEON
)

	)

643 
	#HAVE_√⁄_vcgev4hi
 (
TARGET_NEON
)

	)

644 
	#HAVE_√⁄_vcgev8hi
 (
TARGET_NEON
)

	)

645 
	#HAVE_√⁄_vcgev2si
 (
TARGET_NEON
)

	)

646 
	#HAVE_√⁄_vcgev4si
 (
TARGET_NEON
)

	)

647 
	#HAVE_√⁄_vcgev2sf
 (
TARGET_NEON
)

	)

648 
	#HAVE_√⁄_vcgev4sf
 (
TARGET_NEON
)

	)

649 
	#HAVE_√⁄_vcgeuv8qi
 (
TARGET_NEON
)

	)

650 
	#HAVE_√⁄_vcgeuv16qi
 (
TARGET_NEON
)

	)

651 
	#HAVE_√⁄_vcgeuv4hi
 (
TARGET_NEON
)

	)

652 
	#HAVE_√⁄_vcgeuv8hi
 (
TARGET_NEON
)

	)

653 
	#HAVE_√⁄_vcgeuv2si
 (
TARGET_NEON
)

	)

654 
	#HAVE_√⁄_vcgeuv4si
 (
TARGET_NEON
)

	)

655 
	#HAVE_√⁄_vcgtv8qi
 (
TARGET_NEON
)

	)

656 
	#HAVE_√⁄_vcgtv16qi
 (
TARGET_NEON
)

	)

657 
	#HAVE_√⁄_vcgtv4hi
 (
TARGET_NEON
)

	)

658 
	#HAVE_√⁄_vcgtv8hi
 (
TARGET_NEON
)

	)

659 
	#HAVE_√⁄_vcgtv2si
 (
TARGET_NEON
)

	)

660 
	#HAVE_√⁄_vcgtv4si
 (
TARGET_NEON
)

	)

661 
	#HAVE_√⁄_vcgtv2sf
 (
TARGET_NEON
)

	)

662 
	#HAVE_√⁄_vcgtv4sf
 (
TARGET_NEON
)

	)

663 
	#HAVE_√⁄_vcgtuv8qi
 (
TARGET_NEON
)

	)

664 
	#HAVE_√⁄_vcgtuv16qi
 (
TARGET_NEON
)

	)

665 
	#HAVE_√⁄_vcgtuv4hi
 (
TARGET_NEON
)

	)

666 
	#HAVE_√⁄_vcgtuv8hi
 (
TARGET_NEON
)

	)

667 
	#HAVE_√⁄_vcgtuv2si
 (
TARGET_NEON
)

	)

668 
	#HAVE_√⁄_vcgtuv4si
 (
TARGET_NEON
)

	)

669 
	#HAVE_√⁄_v˛ev8qi
 (
TARGET_NEON
)

	)

670 
	#HAVE_√⁄_v˛ev16qi
 (
TARGET_NEON
)

	)

671 
	#HAVE_√⁄_v˛ev4hi
 (
TARGET_NEON
)

	)

672 
	#HAVE_√⁄_v˛ev8hi
 (
TARGET_NEON
)

	)

673 
	#HAVE_√⁄_v˛ev2si
 (
TARGET_NEON
)

	)

674 
	#HAVE_√⁄_v˛ev4si
 (
TARGET_NEON
)

	)

675 
	#HAVE_√⁄_v˛ev2sf
 (
TARGET_NEON
)

	)

676 
	#HAVE_√⁄_v˛ev4sf
 (
TARGET_NEON
)

	)

677 
	#HAVE_√⁄_v˛tv8qi
 (
TARGET_NEON
)

	)

678 
	#HAVE_√⁄_v˛tv16qi
 (
TARGET_NEON
)

	)

679 
	#HAVE_√⁄_v˛tv4hi
 (
TARGET_NEON
)

	)

680 
	#HAVE_√⁄_v˛tv8hi
 (
TARGET_NEON
)

	)

681 
	#HAVE_√⁄_v˛tv2si
 (
TARGET_NEON
)

	)

682 
	#HAVE_√⁄_v˛tv4si
 (
TARGET_NEON
)

	)

683 
	#HAVE_√⁄_v˛tv2sf
 (
TARGET_NEON
)

	)

684 
	#HAVE_√⁄_v˛tv4sf
 (
TARGET_NEON
)

	)

685 
	#HAVE_√⁄_vˇgev2sf
 (
TARGET_NEON
)

	)

686 
	#HAVE_√⁄_vˇgev4sf
 (
TARGET_NEON
)

	)

687 
	#HAVE_√⁄_vˇgtv2sf
 (
TARGET_NEON
)

	)

688 
	#HAVE_√⁄_vˇgtv4sf
 (
TARGET_NEON
)

	)

689 
	#HAVE_√⁄_vt°v8qi
 (
TARGET_NEON
)

	)

690 
	#HAVE_√⁄_vt°v16qi
 (
TARGET_NEON
)

	)

691 
	#HAVE_√⁄_vt°v4hi
 (
TARGET_NEON
)

	)

692 
	#HAVE_√⁄_vt°v8hi
 (
TARGET_NEON
)

	)

693 
	#HAVE_√⁄_vt°v2si
 (
TARGET_NEON
)

	)

694 
	#HAVE_√⁄_vt°v4si
 (
TARGET_NEON
)

	)

695 
	#HAVE_√⁄_vabdv8qi
 (
TARGET_NEON
)

	)

696 
	#HAVE_√⁄_vabdv16qi
 (
TARGET_NEON
)

	)

697 
	#HAVE_√⁄_vabdv4hi
 (
TARGET_NEON
)

	)

698 
	#HAVE_√⁄_vabdv8hi
 (
TARGET_NEON
)

	)

699 
	#HAVE_√⁄_vabdv2si
 (
TARGET_NEON
)

	)

700 
	#HAVE_√⁄_vabdv4si
 (
TARGET_NEON
)

	)

701 
	#HAVE_√⁄_vabdv2sf
 (
TARGET_NEON
)

	)

702 
	#HAVE_√⁄_vabdv4sf
 (
TARGET_NEON
)

	)

703 
	#HAVE_√⁄_vabdlv8qi
 (
TARGET_NEON
)

	)

704 
	#HAVE_√⁄_vabdlv4hi
 (
TARGET_NEON
)

	)

705 
	#HAVE_√⁄_vabdlv2si
 (
TARGET_NEON
)

	)

706 
	#HAVE_√⁄_vabav8qi
 (
TARGET_NEON
)

	)

707 
	#HAVE_√⁄_vabav16qi
 (
TARGET_NEON
)

	)

708 
	#HAVE_√⁄_vabav4hi
 (
TARGET_NEON
)

	)

709 
	#HAVE_√⁄_vabav8hi
 (
TARGET_NEON
)

	)

710 
	#HAVE_√⁄_vabav2si
 (
TARGET_NEON
)

	)

711 
	#HAVE_√⁄_vabav4si
 (
TARGET_NEON
)

	)

712 
	#HAVE_√⁄_vabÆv8qi
 (
TARGET_NEON
)

	)

713 
	#HAVE_√⁄_vabÆv4hi
 (
TARGET_NEON
)

	)

714 
	#HAVE_√⁄_vabÆv2si
 (
TARGET_NEON
)

	)

715 
	#HAVE_√⁄_vmaxv8qi
 (
TARGET_NEON
)

	)

716 
	#HAVE_√⁄_vmaxv16qi
 (
TARGET_NEON
)

	)

717 
	#HAVE_√⁄_vmaxv4hi
 (
TARGET_NEON
)

	)

718 
	#HAVE_√⁄_vmaxv8hi
 (
TARGET_NEON
)

	)

719 
	#HAVE_√⁄_vmaxv2si
 (
TARGET_NEON
)

	)

720 
	#HAVE_√⁄_vmaxv4si
 (
TARGET_NEON
)

	)

721 
	#HAVE_√⁄_vmaxv2sf
 (
TARGET_NEON
)

	)

722 
	#HAVE_√⁄_vmaxv4sf
 (
TARGET_NEON
)

	)

723 
	#HAVE_√⁄_vmöv8qi
 (
TARGET_NEON
)

	)

724 
	#HAVE_√⁄_vmöv16qi
 (
TARGET_NEON
)

	)

725 
	#HAVE_√⁄_vmöv4hi
 (
TARGET_NEON
)

	)

726 
	#HAVE_√⁄_vmöv8hi
 (
TARGET_NEON
)

	)

727 
	#HAVE_√⁄_vmöv2si
 (
TARGET_NEON
)

	)

728 
	#HAVE_√⁄_vmöv4si
 (
TARGET_NEON
)

	)

729 
	#HAVE_√⁄_vmöv2sf
 (
TARGET_NEON
)

	)

730 
	#HAVE_√⁄_vmöv4sf
 (
TARGET_NEON
)

	)

731 
	#HAVE_√⁄_v∑ddlv8qi
 (
TARGET_NEON
)

	)

732 
	#HAVE_√⁄_v∑ddlv16qi
 (
TARGET_NEON
)

	)

733 
	#HAVE_√⁄_v∑ddlv4hi
 (
TARGET_NEON
)

	)

734 
	#HAVE_√⁄_v∑ddlv8hi
 (
TARGET_NEON
)

	)

735 
	#HAVE_√⁄_v∑ddlv2si
 (
TARGET_NEON
)

	)

736 
	#HAVE_√⁄_v∑ddlv4si
 (
TARGET_NEON
)

	)

737 
	#HAVE_√⁄_v∑dÆv8qi
 (
TARGET_NEON
)

	)

738 
	#HAVE_√⁄_v∑dÆv16qi
 (
TARGET_NEON
)

	)

739 
	#HAVE_√⁄_v∑dÆv4hi
 (
TARGET_NEON
)

	)

740 
	#HAVE_√⁄_v∑dÆv8hi
 (
TARGET_NEON
)

	)

741 
	#HAVE_√⁄_v∑dÆv2si
 (
TARGET_NEON
)

	)

742 
	#HAVE_√⁄_v∑dÆv4si
 (
TARGET_NEON
)

	)

743 
	#HAVE_√⁄_vpmaxv8qi
 (
TARGET_NEON
)

	)

744 
	#HAVE_√⁄_vpmaxv4hi
 (
TARGET_NEON
)

	)

745 
	#HAVE_√⁄_vpmaxv2si
 (
TARGET_NEON
)

	)

746 
	#HAVE_√⁄_vpmaxv2sf
 (
TARGET_NEON
)

	)

747 
	#HAVE_√⁄_vpmöv8qi
 (
TARGET_NEON
)

	)

748 
	#HAVE_√⁄_vpmöv4hi
 (
TARGET_NEON
)

	)

749 
	#HAVE_√⁄_vpmöv2si
 (
TARGET_NEON
)

	)

750 
	#HAVE_√⁄_vpmöv2sf
 (
TARGET_NEON
)

	)

751 
	#HAVE_√⁄_vª˝sv2sf
 (
TARGET_NEON
)

	)

752 
	#HAVE_√⁄_vª˝sv4sf
 (
TARGET_NEON
)

	)

753 
	#HAVE_√⁄_vrsqπsv2sf
 (
TARGET_NEON
)

	)

754 
	#HAVE_√⁄_vrsqπsv4sf
 (
TARGET_NEON
)

	)

755 
	#HAVE_√⁄_vqabsv8qi
 (
TARGET_NEON
)

	)

756 
	#HAVE_√⁄_vqabsv16qi
 (
TARGET_NEON
)

	)

757 
	#HAVE_√⁄_vqabsv4hi
 (
TARGET_NEON
)

	)

758 
	#HAVE_√⁄_vqabsv8hi
 (
TARGET_NEON
)

	)

759 
	#HAVE_√⁄_vqabsv2si
 (
TARGET_NEON
)

	)

760 
	#HAVE_√⁄_vqabsv4si
 (
TARGET_NEON
)

	)

761 
	#HAVE_√⁄_vq√gv8qi
 (
TARGET_NEON
)

	)

762 
	#HAVE_√⁄_vq√gv16qi
 (
TARGET_NEON
)

	)

763 
	#HAVE_√⁄_vq√gv4hi
 (
TARGET_NEON
)

	)

764 
	#HAVE_√⁄_vq√gv8hi
 (
TARGET_NEON
)

	)

765 
	#HAVE_√⁄_vq√gv2si
 (
TARGET_NEON
)

	)

766 
	#HAVE_√⁄_vq√gv4si
 (
TARGET_NEON
)

	)

767 
	#HAVE_√⁄_v˛sv8qi
 (
TARGET_NEON
)

	)

768 
	#HAVE_√⁄_v˛sv16qi
 (
TARGET_NEON
)

	)

769 
	#HAVE_√⁄_v˛sv4hi
 (
TARGET_NEON
)

	)

770 
	#HAVE_√⁄_v˛sv8hi
 (
TARGET_NEON
)

	)

771 
	#HAVE_√⁄_v˛sv2si
 (
TARGET_NEON
)

	)

772 
	#HAVE_√⁄_v˛sv4si
 (
TARGET_NEON
)

	)

773 
	#HAVE_˛zv8qi2
 (
TARGET_NEON
)

	)

774 
	#HAVE_˛zv16qi2
 (
TARGET_NEON
)

	)

775 
	#HAVE_˛zv4hi2
 (
TARGET_NEON
)

	)

776 
	#HAVE_˛zv8hi2
 (
TARGET_NEON
)

	)

777 
	#HAVE_˛zv2si2
 (
TARGET_NEON
)

	)

778 
	#HAVE_˛zv4si2
 (
TARGET_NEON
)

	)

779 
	#HAVE_p›cou¡v8qi2
 (
TARGET_NEON
)

	)

780 
	#HAVE_p›cou¡v16qi2
 (
TARGET_NEON
)

	)

781 
	#HAVE_√⁄_vª˝ev2si
 (
TARGET_NEON
)

	)

782 
	#HAVE_√⁄_vª˝ev2sf
 (
TARGET_NEON
)

	)

783 
	#HAVE_√⁄_vª˝ev4si
 (
TARGET_NEON
)

	)

784 
	#HAVE_√⁄_vª˝ev4sf
 (
TARGET_NEON
)

	)

785 
	#HAVE_√⁄_vrsqπev2si
 (
TARGET_NEON
)

	)

786 
	#HAVE_√⁄_vrsqπev2sf
 (
TARGET_NEON
)

	)

787 
	#HAVE_√⁄_vrsqπev4si
 (
TARGET_NEON
)

	)

788 
	#HAVE_√⁄_vrsqπev4sf
 (
TARGET_NEON
)

	)

789 
	#HAVE_√⁄_vgë_œ√v8qi_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

790 
	#HAVE_√⁄_vgë_œ√v4hi_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

791 
	#HAVE_√⁄_vgë_œ√v2si_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

792 
	#HAVE_√⁄_vgë_œ√v2sf_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

793 
	#HAVE_√⁄_vgë_œ√v8qi_zext_öã∫Æ
 (
TARGET_NEON
)

	)

794 
	#HAVE_√⁄_vgë_œ√v4hi_zext_öã∫Æ
 (
TARGET_NEON
)

	)

795 
	#HAVE_√⁄_vgë_œ√v2si_zext_öã∫Æ
 (
TARGET_NEON
)

	)

796 
	#HAVE_√⁄_vgë_œ√v2sf_zext_öã∫Æ
 (
TARGET_NEON
)

	)

797 
	#HAVE_√⁄_vgë_œ√v16qi_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

798 
	#HAVE_√⁄_vgë_œ√v8hi_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

799 
	#HAVE_√⁄_vgë_œ√v4si_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

800 
	#HAVE_√⁄_vgë_œ√v4sf_£xt_öã∫Æ
 (
TARGET_NEON
)

	)

801 
	#HAVE_√⁄_vgë_œ√v16qi_zext_öã∫Æ
 (
TARGET_NEON
)

	)

802 
	#HAVE_√⁄_vgë_œ√v8hi_zext_öã∫Æ
 (
TARGET_NEON
)

	)

803 
	#HAVE_√⁄_vgë_œ√v4si_zext_öã∫Æ
 (
TARGET_NEON
)

	)

804 
	#HAVE_√⁄_vgë_œ√v4sf_zext_öã∫Æ
 (
TARGET_NEON
)

	)

805 
	#HAVE_√⁄_vdup_nv8qi
 (
TARGET_NEON
)

	)

806 
	#HAVE_√⁄_vdup_nv4hi
 (
TARGET_NEON
)

	)

807 
	#HAVE_√⁄_vdup_nv16qi
 (
TARGET_NEON
)

	)

808 
	#HAVE_√⁄_vdup_nv8hi
 (
TARGET_NEON
)

	)

809 
	#HAVE_√⁄_vdup_nv2si
 (
TARGET_NEON
)

	)

810 
	#HAVE_√⁄_vdup_nv2sf
 (
TARGET_NEON
)

	)

811 
	#HAVE_√⁄_vdup_nv4si
 (
TARGET_NEON
)

	)

812 
	#HAVE_√⁄_vdup_nv4sf
 (
TARGET_NEON
)

	)

813 
	#HAVE_√⁄_vdup_nv2di
 (
TARGET_NEON
)

	)

814 
	#HAVE_√⁄_vdup_œ√v8qi_öã∫Æ
 (
TARGET_NEON
)

	)

815 
	#HAVE_√⁄_vdup_œ√v16qi_öã∫Æ
 (
TARGET_NEON
)

	)

816 
	#HAVE_√⁄_vdup_œ√v4hi_öã∫Æ
 (
TARGET_NEON
)

	)

817 
	#HAVE_√⁄_vdup_œ√v8hi_öã∫Æ
 (
TARGET_NEON
)

	)

818 
	#HAVE_√⁄_vdup_œ√v2si_öã∫Æ
 (
TARGET_NEON
)

	)

819 
	#HAVE_√⁄_vdup_œ√v4si_öã∫Æ
 (
TARGET_NEON
)

	)

820 
	#HAVE_√⁄_vdup_œ√v2sf_öã∫Æ
 (
TARGET_NEON
)

	)

821 
	#HAVE_√⁄_vdup_œ√v4sf_öã∫Æ
 (
TARGET_NEON
)

	)

822 
	#HAVE_√⁄_vcomböev8qi
 (
TARGET_NEON
)

	)

823 
	#HAVE_√⁄_vcomböev4hi
 (
TARGET_NEON
)

	)

824 
	#HAVE_√⁄_vcomböev2si
 (
TARGET_NEON
)

	)

825 
	#HAVE_√⁄_vcomböev2sf
 (
TARGET_NEON
)

	)

826 
	#HAVE_√⁄_vcomböedi
 (
TARGET_NEON
)

	)

827 
	#HAVE_Êﬂtv2siv2sf2
 (
TARGET_NEON
 && !
Êag_roundög_m©h
)

	)

828 
	#HAVE_Êﬂtv4siv4sf2
 (
TARGET_NEON
 && !
Êag_roundög_m©h
)

	)

829 
	#HAVE_Êﬂtunsv2siv2sf2
 (
TARGET_NEON
 && !
Êag_roundög_m©h
)

	)

830 
	#HAVE_Êﬂtunsv4siv4sf2
 (
TARGET_NEON
 && !
Êag_roundög_m©h
)

	)

831 
	#HAVE_fix_åuncv2sfv2si2
 (
TARGET_NEON
)

	)

832 
	#HAVE_fix_åuncv4sfv4si2
 (
TARGET_NEON
)

	)

833 
	#HAVE_fixuns_åuncv2sfv2si2
 (
TARGET_NEON
)

	)

834 
	#HAVE_fixuns_åuncv4sfv4si2
 (
TARGET_NEON
)

	)

835 
	#HAVE_√⁄_vcvtv2sf
 (
TARGET_NEON
)

	)

836 
	#HAVE_√⁄_vcvtv4sf
 (
TARGET_NEON
)

	)

837 
	#HAVE_√⁄_vcvtv2si
 (
TARGET_NEON
)

	)

838 
	#HAVE_√⁄_vcvtv4si
 (
TARGET_NEON
)

	)

839 
	#HAVE_√⁄_vcvtv4sfv4hf
 (
TARGET_NEON
 && 
TARGET_FP16
)

	)

840 
	#HAVE_√⁄_vcvtv4hfv4sf
 (
TARGET_NEON
 && 
TARGET_FP16
)

	)

841 
	#HAVE_√⁄_vcvt_nv2sf
 (
TARGET_NEON
)

	)

842 
	#HAVE_√⁄_vcvt_nv4sf
 (
TARGET_NEON
)

	)

843 
	#HAVE_√⁄_vcvt_nv2si
 (
TARGET_NEON
)

	)

844 
	#HAVE_√⁄_vcvt_nv4si
 (
TARGET_NEON
)

	)

845 
	#HAVE_√⁄_vmovnv8hi
 (
TARGET_NEON
)

	)

846 
	#HAVE_√⁄_vmovnv4si
 (
TARGET_NEON
)

	)

847 
	#HAVE_√⁄_vmovnv2di
 (
TARGET_NEON
)

	)

848 
	#HAVE_√⁄_vqmovnv8hi
 (
TARGET_NEON
)

	)

849 
	#HAVE_√⁄_vqmovnv4si
 (
TARGET_NEON
)

	)

850 
	#HAVE_√⁄_vqmovnv2di
 (
TARGET_NEON
)

	)

851 
	#HAVE_√⁄_vqmovunv8hi
 (
TARGET_NEON
)

	)

852 
	#HAVE_√⁄_vqmovunv4si
 (
TARGET_NEON
)

	)

853 
	#HAVE_√⁄_vqmovunv2di
 (
TARGET_NEON
)

	)

854 
	#HAVE_√⁄_vmovlv8qi
 (
TARGET_NEON
)

	)

855 
	#HAVE_√⁄_vmovlv4hi
 (
TARGET_NEON
)

	)

856 
	#HAVE_√⁄_vmovlv2si
 (
TARGET_NEON
)

	)

857 
	#HAVE_√⁄_vmul_œ√v4hi
 (
TARGET_NEON
)

	)

858 
	#HAVE_√⁄_vmul_œ√v2si
 (
TARGET_NEON
)

	)

859 
	#HAVE_√⁄_vmul_œ√v2sf
 (
TARGET_NEON
)

	)

860 
	#HAVE_√⁄_vmul_œ√v8hi
 (
TARGET_NEON
)

	)

861 
	#HAVE_√⁄_vmul_œ√v4si
 (
TARGET_NEON
)

	)

862 
	#HAVE_√⁄_vmul_œ√v4sf
 (
TARGET_NEON
)

	)

863 
	#HAVE_√⁄_vmuŒ_œ√v4hi
 (
TARGET_NEON
)

	)

864 
	#HAVE_√⁄_vmuŒ_œ√v2si
 (
TARGET_NEON
)

	)

865 
	#HAVE_√⁄_vqdmuŒ_œ√v4hi
 (
TARGET_NEON
)

	)

866 
	#HAVE_√⁄_vqdmuŒ_œ√v2si
 (
TARGET_NEON
)

	)

867 
	#HAVE_√⁄_vqdmulh_œ√v8hi
 (
TARGET_NEON
)

	)

868 
	#HAVE_√⁄_vqdmulh_œ√v4si
 (
TARGET_NEON
)

	)

869 
	#HAVE_√⁄_vqdmulh_œ√v4hi
 (
TARGET_NEON
)

	)

870 
	#HAVE_√⁄_vqdmulh_œ√v2si
 (
TARGET_NEON
)

	)

871 
	#HAVE_√⁄_vmœ_œ√v4hi
 (
TARGET_NEON
)

	)

872 
	#HAVE_√⁄_vmœ_œ√v2si
 (
TARGET_NEON
)

	)

873 
	#HAVE_√⁄_vmœ_œ√v2sf
 (
TARGET_NEON
)

	)

874 
	#HAVE_√⁄_vmœ_œ√v8hi
 (
TARGET_NEON
)

	)

875 
	#HAVE_√⁄_vmœ_œ√v4si
 (
TARGET_NEON
)

	)

876 
	#HAVE_√⁄_vmœ_œ√v4sf
 (
TARGET_NEON
)

	)

877 
	#HAVE_√⁄_vmœl_œ√v4hi
 (
TARGET_NEON
)

	)

878 
	#HAVE_√⁄_vmœl_œ√v2si
 (
TARGET_NEON
)

	)

879 
	#HAVE_√⁄_vqdmœl_œ√v4hi
 (
TARGET_NEON
)

	)

880 
	#HAVE_√⁄_vqdmœl_œ√v2si
 (
TARGET_NEON
)

	)

881 
	#HAVE_√⁄_vmls_œ√v4hi
 (
TARGET_NEON
)

	)

882 
	#HAVE_√⁄_vmls_œ√v2si
 (
TARGET_NEON
)

	)

883 
	#HAVE_√⁄_vmls_œ√v2sf
 (
TARGET_NEON
)

	)

884 
	#HAVE_√⁄_vmls_œ√v8hi
 (
TARGET_NEON
)

	)

885 
	#HAVE_√⁄_vmls_œ√v4si
 (
TARGET_NEON
)

	)

886 
	#HAVE_√⁄_vmls_œ√v4sf
 (
TARGET_NEON
)

	)

887 
	#HAVE_√⁄_vml¶_œ√v4hi
 (
TARGET_NEON
)

	)

888 
	#HAVE_√⁄_vml¶_œ√v2si
 (
TARGET_NEON
)

	)

889 
	#HAVE_√⁄_vqdml¶_œ√v4hi
 (
TARGET_NEON
)

	)

890 
	#HAVE_√⁄_vqdml¶_œ√v2si
 (
TARGET_NEON
)

	)

891 
	#HAVE_√⁄_vextv8qi
 (
TARGET_NEON
)

	)

892 
	#HAVE_√⁄_vextv16qi
 (
TARGET_NEON
)

	)

893 
	#HAVE_√⁄_vextv4hi
 (
TARGET_NEON
)

	)

894 
	#HAVE_√⁄_vextv8hi
 (
TARGET_NEON
)

	)

895 
	#HAVE_√⁄_vextv2si
 (
TARGET_NEON
)

	)

896 
	#HAVE_√⁄_vextv4si
 (
TARGET_NEON
)

	)

897 
	#HAVE_√⁄_vextv2sf
 (
TARGET_NEON
)

	)

898 
	#HAVE_√⁄_vextv4sf
 (
TARGET_NEON
)

	)

899 
	#HAVE_√⁄_vextdi
 (
TARGET_NEON
)

	)

900 
	#HAVE_√⁄_vextv2di
 (
TARGET_NEON
)

	)

901 
	#HAVE_√⁄_vªv64v8qi
 (
TARGET_NEON
)

	)

902 
	#HAVE_√⁄_vªv64v16qi
 (
TARGET_NEON
)

	)

903 
	#HAVE_√⁄_vªv64v4hi
 (
TARGET_NEON
)

	)

904 
	#HAVE_√⁄_vªv64v8hi
 (
TARGET_NEON
)

	)

905 
	#HAVE_√⁄_vªv64v2si
 (
TARGET_NEON
)

	)

906 
	#HAVE_√⁄_vªv64v4si
 (
TARGET_NEON
)

	)

907 
	#HAVE_√⁄_vªv64v2sf
 (
TARGET_NEON
)

	)

908 
	#HAVE_√⁄_vªv64v4sf
 (
TARGET_NEON
)

	)

909 
	#HAVE_√⁄_vªv64v2di
 (
TARGET_NEON
)

	)

910 
	#HAVE_√⁄_vªv32v8qi
 (
TARGET_NEON
)

	)

911 
	#HAVE_√⁄_vªv32v4hi
 (
TARGET_NEON
)

	)

912 
	#HAVE_√⁄_vªv32v16qi
 (
TARGET_NEON
)

	)

913 
	#HAVE_√⁄_vªv32v8hi
 (
TARGET_NEON
)

	)

914 
	#HAVE_√⁄_vªv16v8qi
 (
TARGET_NEON
)

	)

915 
	#HAVE_√⁄_vªv16v16qi
 (
TARGET_NEON
)

	)

916 
	#HAVE_√⁄_vb¶v8qi_öã∫Æ
 (
TARGET_NEON
)

	)

917 
	#HAVE_√⁄_vb¶v16qi_öã∫Æ
 (
TARGET_NEON
)

	)

918 
	#HAVE_√⁄_vb¶v4hi_öã∫Æ
 (
TARGET_NEON
)

	)

919 
	#HAVE_√⁄_vb¶v8hi_öã∫Æ
 (
TARGET_NEON
)

	)

920 
	#HAVE_√⁄_vb¶v2si_öã∫Æ
 (
TARGET_NEON
)

	)

921 
	#HAVE_√⁄_vb¶v4si_öã∫Æ
 (
TARGET_NEON
)

	)

922 
	#HAVE_√⁄_vb¶v2sf_öã∫Æ
 (
TARGET_NEON
)

	)

923 
	#HAVE_√⁄_vb¶v4sf_öã∫Æ
 (
TARGET_NEON
)

	)

924 
	#HAVE_√⁄_vb¶di_öã∫Æ
 (
TARGET_NEON
)

	)

925 
	#HAVE_√⁄_vb¶v2di_öã∫Æ
 (
TARGET_NEON
)

	)

926 
	#HAVE_√⁄_vshlv8qi
 (
TARGET_NEON
)

	)

927 
	#HAVE_√⁄_vshlv16qi
 (
TARGET_NEON
)

	)

928 
	#HAVE_√⁄_vshlv4hi
 (
TARGET_NEON
)

	)

929 
	#HAVE_√⁄_vshlv8hi
 (
TARGET_NEON
)

	)

930 
	#HAVE_√⁄_vshlv2si
 (
TARGET_NEON
)

	)

931 
	#HAVE_√⁄_vshlv4si
 (
TARGET_NEON
)

	)

932 
	#HAVE_√⁄_vshldi
 (
TARGET_NEON
)

	)

933 
	#HAVE_√⁄_vshlv2di
 (
TARGET_NEON
)

	)

934 
	#HAVE_√⁄_vqshlv8qi
 (
TARGET_NEON
)

	)

935 
	#HAVE_√⁄_vqshlv16qi
 (
TARGET_NEON
)

	)

936 
	#HAVE_√⁄_vqshlv4hi
 (
TARGET_NEON
)

	)

937 
	#HAVE_√⁄_vqshlv8hi
 (
TARGET_NEON
)

	)

938 
	#HAVE_√⁄_vqshlv2si
 (
TARGET_NEON
)

	)

939 
	#HAVE_√⁄_vqshlv4si
 (
TARGET_NEON
)

	)

940 
	#HAVE_√⁄_vqshldi
 (
TARGET_NEON
)

	)

941 
	#HAVE_√⁄_vqshlv2di
 (
TARGET_NEON
)

	)

942 
	#HAVE_√⁄_vshr_nv8qi
 (
TARGET_NEON
)

	)

943 
	#HAVE_√⁄_vshr_nv16qi
 (
TARGET_NEON
)

	)

944 
	#HAVE_√⁄_vshr_nv4hi
 (
TARGET_NEON
)

	)

945 
	#HAVE_√⁄_vshr_nv8hi
 (
TARGET_NEON
)

	)

946 
	#HAVE_√⁄_vshr_nv2si
 (
TARGET_NEON
)

	)

947 
	#HAVE_√⁄_vshr_nv4si
 (
TARGET_NEON
)

	)

948 
	#HAVE_√⁄_vshr_ndi
 (
TARGET_NEON
)

	)

949 
	#HAVE_√⁄_vshr_nv2di
 (
TARGET_NEON
)

	)

950 
	#HAVE_√⁄_vsh∫_nv8hi
 (
TARGET_NEON
)

	)

951 
	#HAVE_√⁄_vsh∫_nv4si
 (
TARGET_NEON
)

	)

952 
	#HAVE_√⁄_vsh∫_nv2di
 (
TARGET_NEON
)

	)

953 
	#HAVE_√⁄_vqsh∫_nv8hi
 (
TARGET_NEON
)

	)

954 
	#HAVE_√⁄_vqsh∫_nv4si
 (
TARGET_NEON
)

	)

955 
	#HAVE_√⁄_vqsh∫_nv2di
 (
TARGET_NEON
)

	)

956 
	#HAVE_√⁄_vqshrun_nv8hi
 (
TARGET_NEON
)

	)

957 
	#HAVE_√⁄_vqshrun_nv4si
 (
TARGET_NEON
)

	)

958 
	#HAVE_√⁄_vqshrun_nv2di
 (
TARGET_NEON
)

	)

959 
	#HAVE_√⁄_vshl_nv8qi
 (
TARGET_NEON
)

	)

960 
	#HAVE_√⁄_vshl_nv16qi
 (
TARGET_NEON
)

	)

961 
	#HAVE_√⁄_vshl_nv4hi
 (
TARGET_NEON
)

	)

962 
	#HAVE_√⁄_vshl_nv8hi
 (
TARGET_NEON
)

	)

963 
	#HAVE_√⁄_vshl_nv2si
 (
TARGET_NEON
)

	)

964 
	#HAVE_√⁄_vshl_nv4si
 (
TARGET_NEON
)

	)

965 
	#HAVE_√⁄_vshl_ndi
 (
TARGET_NEON
)

	)

966 
	#HAVE_√⁄_vshl_nv2di
 (
TARGET_NEON
)

	)

967 
	#HAVE_√⁄_vqshl_nv8qi
 (
TARGET_NEON
)

	)

968 
	#HAVE_√⁄_vqshl_nv16qi
 (
TARGET_NEON
)

	)

969 
	#HAVE_√⁄_vqshl_nv4hi
 (
TARGET_NEON
)

	)

970 
	#HAVE_√⁄_vqshl_nv8hi
 (
TARGET_NEON
)

	)

971 
	#HAVE_√⁄_vqshl_nv2si
 (
TARGET_NEON
)

	)

972 
	#HAVE_√⁄_vqshl_nv4si
 (
TARGET_NEON
)

	)

973 
	#HAVE_√⁄_vqshl_ndi
 (
TARGET_NEON
)

	)

974 
	#HAVE_√⁄_vqshl_nv2di
 (
TARGET_NEON
)

	)

975 
	#HAVE_√⁄_vqshlu_nv8qi
 (
TARGET_NEON
)

	)

976 
	#HAVE_√⁄_vqshlu_nv16qi
 (
TARGET_NEON
)

	)

977 
	#HAVE_√⁄_vqshlu_nv4hi
 (
TARGET_NEON
)

	)

978 
	#HAVE_√⁄_vqshlu_nv8hi
 (
TARGET_NEON
)

	)

979 
	#HAVE_√⁄_vqshlu_nv2si
 (
TARGET_NEON
)

	)

980 
	#HAVE_√⁄_vqshlu_nv4si
 (
TARGET_NEON
)

	)

981 
	#HAVE_√⁄_vqshlu_ndi
 (
TARGET_NEON
)

	)

982 
	#HAVE_√⁄_vqshlu_nv2di
 (
TARGET_NEON
)

	)

983 
	#HAVE_√⁄_vshŒ_nv8qi
 (
TARGET_NEON
)

	)

984 
	#HAVE_√⁄_vshŒ_nv4hi
 (
TARGET_NEON
)

	)

985 
	#HAVE_√⁄_vshŒ_nv2si
 (
TARGET_NEON
)

	)

986 
	#HAVE_√⁄_v§a_nv8qi
 (
TARGET_NEON
)

	)

987 
	#HAVE_√⁄_v§a_nv16qi
 (
TARGET_NEON
)

	)

988 
	#HAVE_√⁄_v§a_nv4hi
 (
TARGET_NEON
)

	)

989 
	#HAVE_√⁄_v§a_nv8hi
 (
TARGET_NEON
)

	)

990 
	#HAVE_√⁄_v§a_nv2si
 (
TARGET_NEON
)

	)

991 
	#HAVE_√⁄_v§a_nv4si
 (
TARGET_NEON
)

	)

992 
	#HAVE_√⁄_v§a_ndi
 (
TARGET_NEON
)

	)

993 
	#HAVE_√⁄_v§a_nv2di
 (
TARGET_NEON
)

	)

994 
	#HAVE_√⁄_v§i_nv8qi
 (
TARGET_NEON
)

	)

995 
	#HAVE_√⁄_v§i_nv16qi
 (
TARGET_NEON
)

	)

996 
	#HAVE_√⁄_v§i_nv4hi
 (
TARGET_NEON
)

	)

997 
	#HAVE_√⁄_v§i_nv8hi
 (
TARGET_NEON
)

	)

998 
	#HAVE_√⁄_v§i_nv2si
 (
TARGET_NEON
)

	)

999 
	#HAVE_√⁄_v§i_nv4si
 (
TARGET_NEON
)

	)

1000 
	#HAVE_√⁄_v§i_ndi
 (
TARGET_NEON
)

	)

1001 
	#HAVE_√⁄_v§i_nv2di
 (
TARGET_NEON
)

	)

1002 
	#HAVE_√⁄_v¶i_nv8qi
 (
TARGET_NEON
)

	)

1003 
	#HAVE_√⁄_v¶i_nv16qi
 (
TARGET_NEON
)

	)

1004 
	#HAVE_√⁄_v¶i_nv4hi
 (
TARGET_NEON
)

	)

1005 
	#HAVE_√⁄_v¶i_nv8hi
 (
TARGET_NEON
)

	)

1006 
	#HAVE_√⁄_v¶i_nv2si
 (
TARGET_NEON
)

	)

1007 
	#HAVE_√⁄_v¶i_nv4si
 (
TARGET_NEON
)

	)

1008 
	#HAVE_√⁄_v¶i_ndi
 (
TARGET_NEON
)

	)

1009 
	#HAVE_√⁄_v¶i_nv2di
 (
TARGET_NEON
)

	)

1010 
	#HAVE_√⁄_vtbl1v8qi
 (
TARGET_NEON
)

	)

1011 
	#HAVE_√⁄_vtbl2v8qi
 (
TARGET_NEON
)

	)

1012 
	#HAVE_√⁄_vtbl3v8qi
 (
TARGET_NEON
)

	)

1013 
	#HAVE_√⁄_vtbl4v8qi
 (
TARGET_NEON
)

	)

1014 
	#HAVE_√⁄_vtbl1v16qi
 (
TARGET_NEON
)

	)

1015 
	#HAVE_√⁄_vtbl2v16qi
 (
TARGET_NEON
)

	)

1016 
	#HAVE_√⁄_vcomböev16qi
 (
TARGET_NEON
)

	)

1017 
	#HAVE_√⁄_vtbx1v8qi
 (
TARGET_NEON
)

	)

1018 
	#HAVE_√⁄_vtbx2v8qi
 (
TARGET_NEON
)

	)

1019 
	#HAVE_√⁄_vtbx3v8qi
 (
TARGET_NEON
)

	)

1020 
	#HAVE_√⁄_vtbx4v8qi
 (
TARGET_NEON
)

	)

1021 
	#HAVE_√⁄_vld1v8qi
 (
TARGET_NEON
)

	)

1022 
	#HAVE_√⁄_vld1v16qi
 (
TARGET_NEON
)

	)

1023 
	#HAVE_√⁄_vld1v4hi
 (
TARGET_NEON
)

	)

1024 
	#HAVE_√⁄_vld1v8hi
 (
TARGET_NEON
)

	)

1025 
	#HAVE_√⁄_vld1v2si
 (
TARGET_NEON
)

	)

1026 
	#HAVE_√⁄_vld1v4si
 (
TARGET_NEON
)

	)

1027 
	#HAVE_√⁄_vld1v2sf
 (
TARGET_NEON
)

	)

1028 
	#HAVE_√⁄_vld1v4sf
 (
TARGET_NEON
)

	)

1029 
	#HAVE_√⁄_vld1di
 (
TARGET_NEON
)

	)

1030 
	#HAVE_√⁄_vld1v2di
 (
TARGET_NEON
)

	)

1031 
	#HAVE_√⁄_vld1_œ√v8qi
 (
TARGET_NEON
)

	)

1032 
	#HAVE_√⁄_vld1_œ√v4hi
 (
TARGET_NEON
)

	)

1033 
	#HAVE_√⁄_vld1_œ√v2si
 (
TARGET_NEON
)

	)

1034 
	#HAVE_√⁄_vld1_œ√v2sf
 (
TARGET_NEON
)

	)

1035 
	#HAVE_√⁄_vld1_œ√di
 (
TARGET_NEON
)

	)

1036 
	#HAVE_√⁄_vld1_œ√v16qi
 (
TARGET_NEON
)

	)

1037 
	#HAVE_√⁄_vld1_œ√v8hi
 (
TARGET_NEON
)

	)

1038 
	#HAVE_√⁄_vld1_œ√v4si
 (
TARGET_NEON
)

	)

1039 
	#HAVE_√⁄_vld1_œ√v4sf
 (
TARGET_NEON
)

	)

1040 
	#HAVE_√⁄_vld1_œ√v2di
 (
TARGET_NEON
)

	)

1041 
	#HAVE_√⁄_vld1_dupv8qi
 (
TARGET_NEON
)

	)

1042 
	#HAVE_√⁄_vld1_dupv4hi
 (
TARGET_NEON
)

	)

1043 
	#HAVE_√⁄_vld1_dupv2si
 (
TARGET_NEON
)

	)

1044 
	#HAVE_√⁄_vld1_dupv2sf
 (
TARGET_NEON
)

	)

1045 
	#HAVE_√⁄_vld1_dupv16qi
 (
TARGET_NEON
)

	)

1046 
	#HAVE_√⁄_vld1_dupv8hi
 (
TARGET_NEON
)

	)

1047 
	#HAVE_√⁄_vld1_dupv4si
 (
TARGET_NEON
)

	)

1048 
	#HAVE_√⁄_vld1_dupv4sf
 (
TARGET_NEON
)

	)

1049 
	#HAVE_√⁄_vld1_dupv2di
 (
TARGET_NEON
)

	)

1050 
	#HAVE_√⁄_v°1v8qi
 (
TARGET_NEON
)

	)

1051 
	#HAVE_√⁄_v°1v16qi
 (
TARGET_NEON
)

	)

1052 
	#HAVE_√⁄_v°1v4hi
 (
TARGET_NEON
)

	)

1053 
	#HAVE_√⁄_v°1v8hi
 (
TARGET_NEON
)

	)

1054 
	#HAVE_√⁄_v°1v2si
 (
TARGET_NEON
)

	)

1055 
	#HAVE_√⁄_v°1v4si
 (
TARGET_NEON
)

	)

1056 
	#HAVE_√⁄_v°1v2sf
 (
TARGET_NEON
)

	)

1057 
	#HAVE_√⁄_v°1v4sf
 (
TARGET_NEON
)

	)

1058 
	#HAVE_√⁄_v°1di
 (
TARGET_NEON
)

	)

1059 
	#HAVE_√⁄_v°1v2di
 (
TARGET_NEON
)

	)

1060 
	#HAVE_√⁄_v°1_œ√v8qi
 (
TARGET_NEON
)

	)

1061 
	#HAVE_√⁄_v°1_œ√v4hi
 (
TARGET_NEON
)

	)

1062 
	#HAVE_√⁄_v°1_œ√v2si
 (
TARGET_NEON
)

	)

1063 
	#HAVE_√⁄_v°1_œ√v2sf
 (
TARGET_NEON
)

	)

1064 
	#HAVE_√⁄_v°1_œ√di
 (
TARGET_NEON
)

	)

1065 
	#HAVE_√⁄_v°1_œ√v16qi
 (
TARGET_NEON
)

	)

1066 
	#HAVE_√⁄_v°1_œ√v8hi
 (
TARGET_NEON
)

	)

1067 
	#HAVE_√⁄_v°1_œ√v4si
 (
TARGET_NEON
)

	)

1068 
	#HAVE_√⁄_v°1_œ√v4sf
 (
TARGET_NEON
)

	)

1069 
	#HAVE_√⁄_v°1_œ√v2di
 (
TARGET_NEON
)

	)

1070 
	#HAVE_√⁄_vld2v8qi
 (
TARGET_NEON
)

	)

1071 
	#HAVE_√⁄_vld2v4hi
 (
TARGET_NEON
)

	)

1072 
	#HAVE_√⁄_vld2v2si
 (
TARGET_NEON
)

	)

1073 
	#HAVE_√⁄_vld2v2sf
 (
TARGET_NEON
)

	)

1074 
	#HAVE_√⁄_vld2di
 (
TARGET_NEON
)

	)

1075 
	#HAVE_√⁄_vld2v16qi
 (
TARGET_NEON
)

	)

1076 
	#HAVE_√⁄_vld2v8hi
 (
TARGET_NEON
)

	)

1077 
	#HAVE_√⁄_vld2v4si
 (
TARGET_NEON
)

	)

1078 
	#HAVE_√⁄_vld2v4sf
 (
TARGET_NEON
)

	)

1079 
	#HAVE_√⁄_vld2_œ√v8qi
 (
TARGET_NEON
)

	)

1080 
	#HAVE_√⁄_vld2_œ√v4hi
 (
TARGET_NEON
)

	)

1081 
	#HAVE_√⁄_vld2_œ√v2si
 (
TARGET_NEON
)

	)

1082 
	#HAVE_√⁄_vld2_œ√v2sf
 (
TARGET_NEON
)

	)

1083 
	#HAVE_√⁄_vld2_œ√v8hi
 (
TARGET_NEON
)

	)

1084 
	#HAVE_√⁄_vld2_œ√v4si
 (
TARGET_NEON
)

	)

1085 
	#HAVE_√⁄_vld2_œ√v4sf
 (
TARGET_NEON
)

	)

1086 
	#HAVE_√⁄_vld2_dupv8qi
 (
TARGET_NEON
)

	)

1087 
	#HAVE_√⁄_vld2_dupv4hi
 (
TARGET_NEON
)

	)

1088 
	#HAVE_√⁄_vld2_dupv2si
 (
TARGET_NEON
)

	)

1089 
	#HAVE_√⁄_vld2_dupv2sf
 (
TARGET_NEON
)

	)

1090 
	#HAVE_√⁄_vld2_dupdi
 (
TARGET_NEON
)

	)

1091 
	#HAVE_√⁄_v°2v8qi
 (
TARGET_NEON
)

	)

1092 
	#HAVE_√⁄_v°2v4hi
 (
TARGET_NEON
)

	)

1093 
	#HAVE_√⁄_v°2v2si
 (
TARGET_NEON
)

	)

1094 
	#HAVE_√⁄_v°2v2sf
 (
TARGET_NEON
)

	)

1095 
	#HAVE_√⁄_v°2di
 (
TARGET_NEON
)

	)

1096 
	#HAVE_√⁄_v°2v16qi
 (
TARGET_NEON
)

	)

1097 
	#HAVE_√⁄_v°2v8hi
 (
TARGET_NEON
)

	)

1098 
	#HAVE_√⁄_v°2v4si
 (
TARGET_NEON
)

	)

1099 
	#HAVE_√⁄_v°2v4sf
 (
TARGET_NEON
)

	)

1100 
	#HAVE_√⁄_v°2_œ√v8qi
 (
TARGET_NEON
)

	)

1101 
	#HAVE_√⁄_v°2_œ√v4hi
 (
TARGET_NEON
)

	)

1102 
	#HAVE_√⁄_v°2_œ√v2si
 (
TARGET_NEON
)

	)

1103 
	#HAVE_√⁄_v°2_œ√v2sf
 (
TARGET_NEON
)

	)

1104 
	#HAVE_√⁄_v°2_œ√v8hi
 (
TARGET_NEON
)

	)

1105 
	#HAVE_√⁄_v°2_œ√v4si
 (
TARGET_NEON
)

	)

1106 
	#HAVE_√⁄_v°2_œ√v4sf
 (
TARGET_NEON
)

	)

1107 
	#HAVE_√⁄_vld3v8qi
 (
TARGET_NEON
)

	)

1108 
	#HAVE_√⁄_vld3v4hi
 (
TARGET_NEON
)

	)

1109 
	#HAVE_√⁄_vld3v2si
 (
TARGET_NEON
)

	)

1110 
	#HAVE_√⁄_vld3v2sf
 (
TARGET_NEON
)

	)

1111 
	#HAVE_√⁄_vld3di
 (
TARGET_NEON
)

	)

1112 
	#HAVE_√⁄_vld3qav16qi
 (
TARGET_NEON
)

	)

1113 
	#HAVE_√⁄_vld3qav8hi
 (
TARGET_NEON
)

	)

1114 
	#HAVE_√⁄_vld3qav4si
 (
TARGET_NEON
)

	)

1115 
	#HAVE_√⁄_vld3qav4sf
 (
TARGET_NEON
)

	)

1116 
	#HAVE_√⁄_vld3qbv16qi
 (
TARGET_NEON
)

	)

1117 
	#HAVE_√⁄_vld3qbv8hi
 (
TARGET_NEON
)

	)

1118 
	#HAVE_√⁄_vld3qbv4si
 (
TARGET_NEON
)

	)

1119 
	#HAVE_√⁄_vld3qbv4sf
 (
TARGET_NEON
)

	)

1120 
	#HAVE_√⁄_vld3_œ√v8qi
 (
TARGET_NEON
)

	)

1121 
	#HAVE_√⁄_vld3_œ√v4hi
 (
TARGET_NEON
)

	)

1122 
	#HAVE_√⁄_vld3_œ√v2si
 (
TARGET_NEON
)

	)

1123 
	#HAVE_√⁄_vld3_œ√v2sf
 (
TARGET_NEON
)

	)

1124 
	#HAVE_√⁄_vld3_œ√v8hi
 (
TARGET_NEON
)

	)

1125 
	#HAVE_√⁄_vld3_œ√v4si
 (
TARGET_NEON
)

	)

1126 
	#HAVE_√⁄_vld3_œ√v4sf
 (
TARGET_NEON
)

	)

1127 
	#HAVE_√⁄_vld3_dupv8qi
 (
TARGET_NEON
)

	)

1128 
	#HAVE_√⁄_vld3_dupv4hi
 (
TARGET_NEON
)

	)

1129 
	#HAVE_√⁄_vld3_dupv2si
 (
TARGET_NEON
)

	)

1130 
	#HAVE_√⁄_vld3_dupv2sf
 (
TARGET_NEON
)

	)

1131 
	#HAVE_√⁄_vld3_dupdi
 (
TARGET_NEON
)

	)

1132 
	#HAVE_√⁄_v°3v8qi
 (
TARGET_NEON
)

	)

1133 
	#HAVE_√⁄_v°3v4hi
 (
TARGET_NEON
)

	)

1134 
	#HAVE_√⁄_v°3v2si
 (
TARGET_NEON
)

	)

1135 
	#HAVE_√⁄_v°3v2sf
 (
TARGET_NEON
)

	)

1136 
	#HAVE_√⁄_v°3di
 (
TARGET_NEON
)

	)

1137 
	#HAVE_√⁄_v°3qav16qi
 (
TARGET_NEON
)

	)

1138 
	#HAVE_√⁄_v°3qav8hi
 (
TARGET_NEON
)

	)

1139 
	#HAVE_√⁄_v°3qav4si
 (
TARGET_NEON
)

	)

1140 
	#HAVE_√⁄_v°3qav4sf
 (
TARGET_NEON
)

	)

1141 
	#HAVE_√⁄_v°3qbv16qi
 (
TARGET_NEON
)

	)

1142 
	#HAVE_√⁄_v°3qbv8hi
 (
TARGET_NEON
)

	)

1143 
	#HAVE_√⁄_v°3qbv4si
 (
TARGET_NEON
)

	)

1144 
	#HAVE_√⁄_v°3qbv4sf
 (
TARGET_NEON
)

	)

1145 
	#HAVE_√⁄_v°3_œ√v8qi
 (
TARGET_NEON
)

	)

1146 
	#HAVE_√⁄_v°3_œ√v4hi
 (
TARGET_NEON
)

	)

1147 
	#HAVE_√⁄_v°3_œ√v2si
 (
TARGET_NEON
)

	)

1148 
	#HAVE_√⁄_v°3_œ√v2sf
 (
TARGET_NEON
)

	)

1149 
	#HAVE_√⁄_v°3_œ√v8hi
 (
TARGET_NEON
)

	)

1150 
	#HAVE_√⁄_v°3_œ√v4si
 (
TARGET_NEON
)

	)

1151 
	#HAVE_√⁄_v°3_œ√v4sf
 (
TARGET_NEON
)

	)

1152 
	#HAVE_√⁄_vld4v8qi
 (
TARGET_NEON
)

	)

1153 
	#HAVE_√⁄_vld4v4hi
 (
TARGET_NEON
)

	)

1154 
	#HAVE_√⁄_vld4v2si
 (
TARGET_NEON
)

	)

1155 
	#HAVE_√⁄_vld4v2sf
 (
TARGET_NEON
)

	)

1156 
	#HAVE_√⁄_vld4di
 (
TARGET_NEON
)

	)

1157 
	#HAVE_√⁄_vld4qav16qi
 (
TARGET_NEON
)

	)

1158 
	#HAVE_√⁄_vld4qav8hi
 (
TARGET_NEON
)

	)

1159 
	#HAVE_√⁄_vld4qav4si
 (
TARGET_NEON
)

	)

1160 
	#HAVE_√⁄_vld4qav4sf
 (
TARGET_NEON
)

	)

1161 
	#HAVE_√⁄_vld4qbv16qi
 (
TARGET_NEON
)

	)

1162 
	#HAVE_√⁄_vld4qbv8hi
 (
TARGET_NEON
)

	)

1163 
	#HAVE_√⁄_vld4qbv4si
 (
TARGET_NEON
)

	)

1164 
	#HAVE_√⁄_vld4qbv4sf
 (
TARGET_NEON
)

	)

1165 
	#HAVE_√⁄_vld4_œ√v8qi
 (
TARGET_NEON
)

	)

1166 
	#HAVE_√⁄_vld4_œ√v4hi
 (
TARGET_NEON
)

	)

1167 
	#HAVE_√⁄_vld4_œ√v2si
 (
TARGET_NEON
)

	)

1168 
	#HAVE_√⁄_vld4_œ√v2sf
 (
TARGET_NEON
)

	)

1169 
	#HAVE_√⁄_vld4_œ√v8hi
 (
TARGET_NEON
)

	)

1170 
	#HAVE_√⁄_vld4_œ√v4si
 (
TARGET_NEON
)

	)

1171 
	#HAVE_√⁄_vld4_œ√v4sf
 (
TARGET_NEON
)

	)

1172 
	#HAVE_√⁄_vld4_dupv8qi
 (
TARGET_NEON
)

	)

1173 
	#HAVE_√⁄_vld4_dupv4hi
 (
TARGET_NEON
)

	)

1174 
	#HAVE_√⁄_vld4_dupv2si
 (
TARGET_NEON
)

	)

1175 
	#HAVE_√⁄_vld4_dupv2sf
 (
TARGET_NEON
)

	)

1176 
	#HAVE_√⁄_vld4_dupdi
 (
TARGET_NEON
)

	)

1177 
	#HAVE_√⁄_v°4v8qi
 (
TARGET_NEON
)

	)

1178 
	#HAVE_√⁄_v°4v4hi
 (
TARGET_NEON
)

	)

1179 
	#HAVE_√⁄_v°4v2si
 (
TARGET_NEON
)

	)

1180 
	#HAVE_√⁄_v°4v2sf
 (
TARGET_NEON
)

	)

1181 
	#HAVE_√⁄_v°4di
 (
TARGET_NEON
)

	)

1182 
	#HAVE_√⁄_v°4qav16qi
 (
TARGET_NEON
)

	)

1183 
	#HAVE_√⁄_v°4qav8hi
 (
TARGET_NEON
)

	)

1184 
	#HAVE_√⁄_v°4qav4si
 (
TARGET_NEON
)

	)

1185 
	#HAVE_√⁄_v°4qav4sf
 (
TARGET_NEON
)

	)

1186 
	#HAVE_√⁄_v°4qbv16qi
 (
TARGET_NEON
)

	)

1187 
	#HAVE_√⁄_v°4qbv8hi
 (
TARGET_NEON
)

	)

1188 
	#HAVE_√⁄_v°4qbv4si
 (
TARGET_NEON
)

	)

1189 
	#HAVE_√⁄_v°4qbv4sf
 (
TARGET_NEON
)

	)

1190 
	#HAVE_√⁄_v°4_œ√v8qi
 (
TARGET_NEON
)

	)

1191 
	#HAVE_√⁄_v°4_œ√v4hi
 (
TARGET_NEON
)

	)

1192 
	#HAVE_√⁄_v°4_œ√v2si
 (
TARGET_NEON
)

	)

1193 
	#HAVE_√⁄_v°4_œ√v2sf
 (
TARGET_NEON
)

	)

1194 
	#HAVE_√⁄_v°4_œ√v8hi
 (
TARGET_NEON
)

	)

1195 
	#HAVE_√⁄_v°4_œ√v4si
 (
TARGET_NEON
)

	)

1196 
	#HAVE_√⁄_v°4_œ√v4sf
 (
TARGET_NEON
)

	)

1197 
	#HAVE_√⁄_vec_u≈acks_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1198 
	#HAVE_√⁄_vec_u≈acku_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1199 
	#HAVE_√⁄_vec_u≈acks_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1200 
	#HAVE_√⁄_vec_u≈acku_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1201 
	#HAVE_√⁄_vec_u≈acks_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1202 
	#HAVE_√⁄_vec_u≈acku_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1203 
	#HAVE_√⁄_vec_u≈acks_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1204 
	#HAVE_√⁄_vec_u≈acku_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1205 
	#HAVE_√⁄_vec_u≈acks_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1206 
	#HAVE_√⁄_vec_u≈acku_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1207 
	#HAVE_√⁄_vec_u≈acks_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1208 
	#HAVE_√⁄_vec_u≈acku_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1209 
	#HAVE_√⁄_vec_smu…_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1210 
	#HAVE_√⁄_vec_umu…_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1211 
	#HAVE_√⁄_vec_smu…_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1212 
	#HAVE_√⁄_vec_umu…_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1213 
	#HAVE_√⁄_vec_smu…_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1214 
	#HAVE_√⁄_vec_umu…_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1215 
	#HAVE_√⁄_vec_smu…_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1216 
	#HAVE_√⁄_vec_umu…_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1217 
	#HAVE_√⁄_vec_smu…_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1218 
	#HAVE_√⁄_vec_umu…_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1219 
	#HAVE_√⁄_vec_smu…_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1220 
	#HAVE_√⁄_vec_umu…_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1221 
	#HAVE_√⁄_vec_sshi·l_v8qi
 (
TARGET_NEON
)

	)

1222 
	#HAVE_√⁄_vec_ushi·l_v8qi
 (
TARGET_NEON
)

	)

1223 
	#HAVE_√⁄_vec_sshi·l_v4hi
 (
TARGET_NEON
)

	)

1224 
	#HAVE_√⁄_vec_ushi·l_v4hi
 (
TARGET_NEON
)

	)

1225 
	#HAVE_√⁄_vec_sshi·l_v2si
 (
TARGET_NEON
)

	)

1226 
	#HAVE_√⁄_vec_ushi·l_v2si
 (
TARGET_NEON
)

	)

1227 
	#HAVE_√⁄_u≈acks_v8qi
 (
TARGET_NEON
)

	)

1228 
	#HAVE_√⁄_u≈acku_v8qi
 (
TARGET_NEON
)

	)

1229 
	#HAVE_√⁄_u≈acks_v4hi
 (
TARGET_NEON
)

	)

1230 
	#HAVE_√⁄_u≈acku_v4hi
 (
TARGET_NEON
)

	)

1231 
	#HAVE_√⁄_u≈acks_v2si
 (
TARGET_NEON
)

	)

1232 
	#HAVE_√⁄_u≈acku_v2si
 (
TARGET_NEON
)

	)

1233 
	#HAVE_√⁄_vec_smu…_v8qi
 (
TARGET_NEON
)

	)

1234 
	#HAVE_√⁄_vec_umu…_v8qi
 (
TARGET_NEON
)

	)

1235 
	#HAVE_√⁄_vec_smu…_v4hi
 (
TARGET_NEON
)

	)

1236 
	#HAVE_√⁄_vec_umu…_v4hi
 (
TARGET_NEON
)

	)

1237 
	#HAVE_√⁄_vec_smu…_v2si
 (
TARGET_NEON
)

	)

1238 
	#HAVE_√⁄_vec_umu…_v2si
 (
TARGET_NEON
)

	)

1239 
	#HAVE_vec_∑ck_åunc_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1240 
	#HAVE_vec_∑ck_åunc_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1241 
	#HAVE_vec_∑ck_åunc_v2di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1242 
	#HAVE_√⁄_vec_∑ck_åunc_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1243 
	#HAVE_√⁄_vec_∑ck_åunc_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1244 
	#HAVE_√⁄_vec_∑ck_åunc_v2di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1245 
	#HAVE_√⁄_vabdv8qi_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1246 
	#HAVE_√⁄_vabdv16qi_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1247 
	#HAVE_√⁄_vabdv4hi_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1248 
	#HAVE_√⁄_vabdv8hi_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1249 
	#HAVE_√⁄_vabdv2si_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1250 
	#HAVE_√⁄_vabdv4si_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1251 
	#HAVE_√⁄_vabdv2sf_2
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1252 
	#HAVE_√⁄_vabdv4sf_2
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1253 
	#HAVE_√⁄_vabdv2di_2
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1254 
	#HAVE_√⁄_vabdv8qi_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1255 
	#HAVE_√⁄_vabdv16qi_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1256 
	#HAVE_√⁄_vabdv4hi_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1257 
	#HAVE_√⁄_vabdv8hi_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1258 
	#HAVE_√⁄_vabdv2si_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1259 
	#HAVE_√⁄_vabdv4si_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1260 
	#HAVE_√⁄_vabdv2sf_3
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1261 
	#HAVE_√⁄_vabdv4sf_3
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1262 
	#HAVE_√⁄_vabdv2di_3
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1263 
	#HAVE_¸y±o_´smc
 (
TARGET_CRYPTO
)

	)

1264 
	#HAVE_¸y±o_´simc
 (
TARGET_CRYPTO
)

	)

1265 
	#HAVE_¸y±o_´sd
 (
TARGET_CRYPTO
)

	)

1266 
	#HAVE_¸y±o_´£
 (
TARGET_CRYPTO
)

	)

1267 
	#HAVE_¸y±o_sha1su1
 (
TARGET_CRYPTO
)

	)

1268 
	#HAVE_¸y±o_sha256su0
 (
TARGET_CRYPTO
)

	)

1269 
	#HAVE_¸y±o_sha1su0
 (
TARGET_CRYPTO
)

	)

1270 
	#HAVE_¸y±o_sha256h
 (
TARGET_CRYPTO
)

	)

1271 
	#HAVE_¸y±o_sha256h2
 (
TARGET_CRYPTO
)

	)

1272 
	#HAVE_¸y±o_sha256su1
 (
TARGET_CRYPTO
)

	)

1273 
	#HAVE_¸y±o_sha1h
 (
TARGET_CRYPTO
)

	)

1274 
	#HAVE_¸y±o_vmuŒp64
 (
TARGET_CRYPTO
)

	)

1275 
	#HAVE_¸y±o_sha1c
 (
TARGET_CRYPTO
)

	)

1276 
	#HAVE_¸y±o_sha1m
 (
TARGET_CRYPTO
)

	)

1277 
	#HAVE_¸y±o_sha1p
 (
TARGET_CRYPTO
)

	)

1278 
	#HAVE_©omic_lﬂdqi
 (
TARGET_HAVE_LDACQ
)

	)

1279 
	#HAVE_©omic_lﬂdhi
 (
TARGET_HAVE_LDACQ
)

	)

1280 
	#HAVE_©omic_lﬂdsi
 (
TARGET_HAVE_LDACQ
)

	)

1281 
	#HAVE_©omic_°‹eqi
 (
TARGET_HAVE_LDACQ
)

	)

1282 
	#HAVE_©omic_°‹ehi
 (
TARGET_HAVE_LDACQ
)

	)

1283 
	#HAVE_©omic_°‹esi
 (
TARGET_HAVE_LDACQ
)

	)

1284 
	#HAVE_©omic_lﬂddi_1
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
)

	)

1285 
	#HAVE_©omic_com∑ª_™d_sw≠qi_1
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1286 
	#HAVE_©omic_com∑ª_™d_sw≠hi_1
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1287 
	#HAVE_©omic_com∑ª_™d_sw≠si_1
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1288 
	#HAVE_©omic_com∑ª_™d_sw≠di_1
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1289 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1290 
	#HAVE_©omic_exch™geqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1291 
	#HAVE_©omic_exch™gehi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1292 
	#HAVE_©omic_exch™gesi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1293 
	#HAVE_©omic_exch™gedi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1294 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1295 
	#HAVE_©omic_addqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1296 
	#HAVE_©omic_subqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1297 
	#HAVE_©omic_‹qi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1298 
	#HAVE_©omic_x‹qi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1299 
	#HAVE_©omic_™dqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1300 
	#HAVE_©omic_addhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1301 
	#HAVE_©omic_subhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1302 
	#HAVE_©omic_‹hi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1303 
	#HAVE_©omic_x‹hi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1304 
	#HAVE_©omic_™dhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1305 
	#HAVE_©omic_addsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1306 
	#HAVE_©omic_subsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1307 
	#HAVE_©omic_‹si
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1308 
	#HAVE_©omic_x‹si
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1309 
	#HAVE_©omic_™dsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1310 
	#HAVE_©omic_adddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1311 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1312 
	#HAVE_©omic_subdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1313 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1314 
	#HAVE_©omic_‹di
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1315 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1316 
	#HAVE_©omic_x‹di
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1317 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1318 
	#HAVE_©omic_™ddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1319 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1320 
	#HAVE_©omic_«ndqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1321 
	#HAVE_©omic_«ndhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1322 
	#HAVE_©omic_«ndsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1323 
	#HAVE_©omic_«nddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1324 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1325 
	#HAVE_©omic_„tch_addqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1326 
	#HAVE_©omic_„tch_subqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1327 
	#HAVE_©omic_„tch_‹qi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1328 
	#HAVE_©omic_„tch_x‹qi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1329 
	#HAVE_©omic_„tch_™dqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1330 
	#HAVE_©omic_„tch_addhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1331 
	#HAVE_©omic_„tch_subhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1332 
	#HAVE_©omic_„tch_‹hi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1333 
	#HAVE_©omic_„tch_x‹hi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1334 
	#HAVE_©omic_„tch_™dhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1335 
	#HAVE_©omic_„tch_addsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1336 
	#HAVE_©omic_„tch_subsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1337 
	#HAVE_©omic_„tch_‹si
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1338 
	#HAVE_©omic_„tch_x‹si
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1339 
	#HAVE_©omic_„tch_™dsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1340 
	#HAVE_©omic_„tch_adddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1341 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1342 
	#HAVE_©omic_„tch_subdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1343 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1344 
	#HAVE_©omic_„tch_‹di
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1345 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1346 
	#HAVE_©omic_„tch_x‹di
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1347 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1348 
	#HAVE_©omic_„tch_™ddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1349 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1350 
	#HAVE_©omic_„tch_«ndqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1351 
	#HAVE_©omic_„tch_«ndhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1352 
	#HAVE_©omic_„tch_«ndsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1353 
	#HAVE_©omic_„tch_«nddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1354 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1355 
	#HAVE_©omic_add_„tchqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1356 
	#HAVE_©omic_sub_„tchqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1357 
	#HAVE_©omic_‹_„tchqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1358 
	#HAVE_©omic_x‹_„tchqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1359 
	#HAVE_©omic_™d_„tchqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1360 
	#HAVE_©omic_add_„tchhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1361 
	#HAVE_©omic_sub_„tchhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1362 
	#HAVE_©omic_‹_„tchhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1363 
	#HAVE_©omic_x‹_„tchhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1364 
	#HAVE_©omic_™d_„tchhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1365 
	#HAVE_©omic_add_„tchsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1366 
	#HAVE_©omic_sub_„tchsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1367 
	#HAVE_©omic_‹_„tchsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1368 
	#HAVE_©omic_x‹_„tchsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1369 
	#HAVE_©omic_™d_„tchsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1370 
	#HAVE_©omic_add_„tchdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1371 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1372 
	#HAVE_©omic_sub_„tchdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1373 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1374 
	#HAVE_©omic_‹_„tchdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1375 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1376 
	#HAVE_©omic_x‹_„tchdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1377 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1378 
	#HAVE_©omic_™d_„tchdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1379 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1380 
	#HAVE_©omic_«nd_„tchqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1381 
	#HAVE_©omic_«nd_„tchhi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1382 
	#HAVE_©omic_«nd_„tchsi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1383 
	#HAVE_©omic_«nd_„tchdi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1384 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1385 
	#HAVE_¨m_lﬂd_ex˛usiveqi
 (
TARGET_HAVE_LDREXBH
)

	)

1386 
	#HAVE_¨m_lﬂd_ex˛usivehi
 (
TARGET_HAVE_LDREXBH
)

	)

1387 
	#HAVE_¨m_lﬂd_acquúe_ex˛usiveqi
 (
TARGET_HAVE_LDACQ
)

	)

1388 
	#HAVE_¨m_lﬂd_acquúe_ex˛usivehi
 (
TARGET_HAVE_LDACQ
)

	)

1389 
	#HAVE_¨m_lﬂd_ex˛usivesi
 (
TARGET_HAVE_LDREX
)

	)

1390 
	#HAVE_¨m_lﬂd_acquúe_ex˛usivesi
 (
TARGET_HAVE_LDACQ
)

	)

1391 
	#HAVE_¨m_lﬂd_ex˛usivedi
 (
TARGET_HAVE_LDREXD
)

	)

1392 
	#HAVE_¨m_lﬂd_acquúe_ex˛usivedi
 (
TARGET_HAVE_LDACQ
 && 
ARM_DOUBLEWORD_ALIGN
)

	)

1393 
	#HAVE_¨m_°‹e_ex˛usiveqi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1394 
	#HAVE_¨m_°‹e_ex˛usivehi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1395 
	#HAVE_¨m_°‹e_ex˛usivesi
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1396 
	#HAVE_¨m_°‹e_ex˛usivedi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

1397 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

1398 
	#HAVE_¨m_°‹e_ªÀa£_ex˛usivedi
 (
TARGET_HAVE_LDACQ
 && 
ARM_DOUBLEWORD_ALIGN
)

	)

1399 
	#HAVE_¨m_°‹e_ªÀa£_ex˛usiveqi
 (
TARGET_HAVE_LDACQ
)

	)

1400 
	#HAVE_¨m_°‹e_ªÀa£_ex˛usivehi
 (
TARGET_HAVE_LDACQ
)

	)

1401 
	#HAVE_¨m_°‹e_ªÀa£_ex˛usivesi
 (
TARGET_HAVE_LDACQ
)

	)

1402 
	#HAVE_addqq3
 (
TARGET_32BIT
)

	)

1403 
	#HAVE_addhq3
 (
TARGET_32BIT
)

	)

1404 
	#HAVE_addsq3
 (
TARGET_32BIT
)

	)

1405 
	#HAVE_adduqq3
 (
TARGET_32BIT
)

	)

1406 
	#HAVE_adduhq3
 (
TARGET_32BIT
)

	)

1407 
	#HAVE_addusq3
 (
TARGET_32BIT
)

	)

1408 
	#HAVE_addha3
 (
TARGET_32BIT
)

	)

1409 
	#HAVE_addß3
 (
TARGET_32BIT
)

	)

1410 
	#HAVE_adduha3
 (
TARGET_32BIT
)

	)

1411 
	#HAVE_adduß3
 (
TARGET_32BIT
)

	)

1412 
	#HAVE_addv4qq3
 (
TARGET_INT_SIMD
)

	)

1413 
	#HAVE_addv2hq3
 (
TARGET_INT_SIMD
)

	)

1414 
	#HAVE_addv2ha3
 (
TARGET_INT_SIMD
)

	)

1415 
	#HAVE_ußddv4uqq3
 (
TARGET_INT_SIMD
)

	)

1416 
	#HAVE_ußddv2uhq3
 (
TARGET_INT_SIMD
)

	)

1417 
	#HAVE_ußdduqq3
 (
TARGET_INT_SIMD
)

	)

1418 
	#HAVE_ußdduhq3
 (
TARGET_INT_SIMD
)

	)

1419 
	#HAVE_ußddv2uha3
 (
TARGET_INT_SIMD
)

	)

1420 
	#HAVE_ußdduha3
 (
TARGET_INT_SIMD
)

	)

1421 
	#HAVE_sßddv4qq3
 (
TARGET_INT_SIMD
)

	)

1422 
	#HAVE_sßddv2hq3
 (
TARGET_INT_SIMD
)

	)

1423 
	#HAVE_sßddqq3
 (
TARGET_INT_SIMD
)

	)

1424 
	#HAVE_sßddhq3
 (
TARGET_INT_SIMD
)

	)

1425 
	#HAVE_sßddv2ha3
 (
TARGET_INT_SIMD
)

	)

1426 
	#HAVE_sßddha3
 (
TARGET_INT_SIMD
)

	)

1427 
	#HAVE_sßddsq3
 (
TARGET_INT_SIMD
)

	)

1428 
	#HAVE_sßddß3
 (
TARGET_INT_SIMD
)

	)

1429 
	#HAVE_subqq3
 (
TARGET_32BIT
)

	)

1430 
	#HAVE_subhq3
 (
TARGET_32BIT
)

	)

1431 
	#HAVE_subsq3
 (
TARGET_32BIT
)

	)

1432 
	#HAVE_subuqq3
 (
TARGET_32BIT
)

	)

1433 
	#HAVE_subuhq3
 (
TARGET_32BIT
)

	)

1434 
	#HAVE_subusq3
 (
TARGET_32BIT
)

	)

1435 
	#HAVE_subha3
 (
TARGET_32BIT
)

	)

1436 
	#HAVE_subß3
 (
TARGET_32BIT
)

	)

1437 
	#HAVE_subuha3
 (
TARGET_32BIT
)

	)

1438 
	#HAVE_subuß3
 (
TARGET_32BIT
)

	)

1439 
	#HAVE_subv4qq3
 (
TARGET_INT_SIMD
)

	)

1440 
	#HAVE_subv2hq3
 (
TARGET_INT_SIMD
)

	)

1441 
	#HAVE_subv2ha3
 (
TARGET_INT_SIMD
)

	)

1442 
	#HAVE_ussubv4uqq3
 (
TARGET_INT_SIMD
)

	)

1443 
	#HAVE_ussubv2uhq3
 (
TARGET_INT_SIMD
)

	)

1444 
	#HAVE_ussubuqq3
 (
TARGET_INT_SIMD
)

	)

1445 
	#HAVE_ussubuhq3
 (
TARGET_INT_SIMD
)

	)

1446 
	#HAVE_ussubv2uha3
 (
TARGET_INT_SIMD
)

	)

1447 
	#HAVE_ussubuha3
 (
TARGET_INT_SIMD
)

	)

1448 
	#HAVE_sssubv4qq3
 (
TARGET_INT_SIMD
)

	)

1449 
	#HAVE_sssubv2hq3
 (
TARGET_INT_SIMD
)

	)

1450 
	#HAVE_sssubqq3
 (
TARGET_INT_SIMD
)

	)

1451 
	#HAVE_sssubhq3
 (
TARGET_INT_SIMD
)

	)

1452 
	#HAVE_sssubv2ha3
 (
TARGET_INT_SIMD
)

	)

1453 
	#HAVE_sssubha3
 (
TARGET_INT_SIMD
)

	)

1454 
	#HAVE_sssubsq3
 (
TARGET_INT_SIMD
)

	)

1455 
	#HAVE_sssubß3
 (
TARGET_INT_SIMD
)

	)

1456 
	#HAVE_ssmulß3
 (
TARGET_32BIT
 && 
¨m_¨ch6
)

	)

1457 
	#HAVE_usmuluß3
 (
TARGET_32BIT
 && 
¨m_¨ch6
)

	)

1458 
	#HAVE_¨m_sßtsihi_shi·
 (
TARGET_32BIT
 && 
¨m_¨ch6
)

	)

1459 
	#HAVE_¨m_ußtsihi
 (
TARGET_INT_SIMD
)

	)

1460 
	#HAVE_adddi3
 1

	)

1461 
	#HAVE_addsi3
 1

	)

1462 
	#HAVE_addsf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1463 
	#HAVE_adddf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1464 
	#HAVE_subdi3
 1

	)

1465 
	#HAVE_subsi3
 1

	)

1466 
	#HAVE_subsf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1467 
	#HAVE_subdf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1468 
	#HAVE_mulhi3
 (
TARGET_DSP_MULTIPLY
)

	)

1469 
	#HAVE_mulsi3
 1

	)

1470 
	#HAVE_maddsidi4
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

1471 
	#HAVE_mulsidi3
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

1472 
	#HAVE_umulsidi3
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

1473 
	#HAVE_umaddsidi4
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

1474 
	#HAVE_smulsi3_high∑π
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

1475 
	#HAVE_umulsi3_high∑π
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

1476 
	#HAVE_mulsf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1477 
	#HAVE_muldf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1478 
	#HAVE_divsf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP
)

	)

1479 
	#HAVE_divdf3
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP_DOUBLE
)

	)

1480 
	#HAVE_™ddi3
 (
TARGET_32BIT
)

	)

1481 
	#HAVE_™dsi3
 1

	)

1482 
	#HAVE_ösv
 (
TARGET_ARM
 || 
¨m_¨ch_thumb2
)

	)

1483 
	#HAVE_i‹di3
 (
TARGET_32BIT
)

	)

1484 
	#HAVE_i‹si3
 1

	)

1485 
	#HAVE_x‹di3
 (
TARGET_32BIT
)

	)

1486 
	#HAVE_x‹si3
 1

	)

1487 
	#HAVE_smaxsi3
 (
TARGET_32BIT
)

	)

1488 
	#HAVE_smösi3
 (
TARGET_32BIT
)

	)

1489 
	#HAVE_umaxsi3
 (
TARGET_32BIT
)

	)

1490 
	#HAVE_umösi3
 (
TARGET_32BIT
)

	)

1491 
	#HAVE_ashldi3
 (
TARGET_32BIT
)

	)

1492 
	#HAVE_ashlsi3
 1

	)

1493 
	#HAVE_ashrdi3
 (
TARGET_32BIT
)

	)

1494 
	#HAVE_ashrsi3
 1

	)

1495 
	#HAVE_lshrdi3
 (
TARGET_32BIT
)

	)

1496 
	#HAVE_lshrsi3
 1

	)

1497 
	#HAVE_rŸlsi3
 (
TARGET_32BIT
)

	)

1498 
	#HAVE_rŸrsi3
 1

	)

1499 
	#HAVE_extzv
 (
TARGET_THUMB1
 || 
¨m_¨ch_thumb2
)

	)

1500 
	#HAVE_extzv_t1
 (
TARGET_THUMB1
)

	)

1501 
	#HAVE_extv
 (
¨m_¨ch_thumb2
)

	)

1502 
	#HAVE_extv_ªgsi
 1

	)

1503 
	#HAVE_√gdi2
 1

	)

1504 
	#HAVE_√gsi2
 1

	)

1505 
	#HAVE_√gsf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP
)

	)

1506 
	#HAVE_√gdf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP_DOUBLE
)

	)

1507 
	#HAVE_abssi2
 1

	)

1508 
	#HAVE_abssf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1509 
	#HAVE_absdf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1510 
	#HAVE_sqπsf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP
)

	)

1511 
	#HAVE_sqπdf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP_DOUBLE
)

	)

1512 
	#HAVE_⁄e_cm∂si2
 1

	)

1513 
	#HAVE_Êﬂtsihf2
 1

	)

1514 
	#HAVE_Êﬂtdihf2
 1

	)

1515 
	#HAVE_Êﬂtsisf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1516 
	#HAVE_Êﬂtsidf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1517 
	#HAVE_fix_åunchfsi2
 1

	)

1518 
	#HAVE_fix_åunchfdi2
 1

	)

1519 
	#HAVE_fix_åuncsfsi2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1520 
	#HAVE_fix_åuncdfsi2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1521 
	#HAVE_åuncdfsf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1522 
	#HAVE_åuncdfhf2
 1

	)

1523 
	#HAVE_zîo_exãndhisi2
 1

	)

1524 
	#HAVE_zîo_exãndqisi2
 1

	)

1525 
	#HAVE_exãndhisi2
 1

	)

1526 
	#HAVE_exãndhisi2_mem
 (
TARGET_ARM
)

	)

1527 
	#HAVE_exãndqihi2
 (
TARGET_ARM
)

	)

1528 
	#HAVE_exãndqisi2
 1

	)

1529 
	#HAVE_exãndsfdf2
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1530 
	#HAVE_exãndhfdf2
 1

	)

1531 
	#HAVE_movdi
 1

	)

1532 
	#HAVE_movsi
 1

	)

1533 
	#HAVE_ˇlcuœã_pic_addªss
 (
Êag_pic
)

	)

1534 
	#HAVE_buûtö_£tjmp_ª˚ivî
 (
Êag_pic
)

	)

1535 
	#HAVE_°‹ehi
 (
TARGET_ARM
)

	)

1536 
	#HAVE_°‹ehi_bigíd
 (
TARGET_ARM
)

	)

1537 
	#HAVE_°‹eöthi
 (
TARGET_ARM
)

	)

1538 
	#HAVE_°‹ehi_sögÀ_›
 (
TARGET_32BIT
 && 
¨m_¨ch4
)

	)

1539 
	#HAVE_movhi
 1

	)

1540 
	#HAVE_movhi_byãs
 (
TARGET_ARM
)

	)

1541 
	#HAVE_movhi_bigíd
 (
TARGET_ARM
)

	)

1542 
	#HAVE_ªlﬂd_outhi
 1

	)

1543 
	#HAVE_ªlﬂd_öhi
 1

	)

1544 
	#HAVE_movqi
 1

	)

1545 
	#HAVE_movhf
 1

	)

1546 
	#HAVE_movsf
 1

	)

1547 
	#HAVE_movdf
 1

	)

1548 
	#HAVE_ªlﬂd_outdf
 (
TARGET_THUMB2
)

	)

1549 
	#HAVE_lﬂd_mu…ùÀ
 (
TARGET_32BIT
)

	)

1550 
	#HAVE_°‹e_mu…ùÀ
 (
TARGET_32BIT
)

	)

1551 
	#HAVE_movmemqi
 1

	)

1552 
	#HAVE_cbønchsi4
 1

	)

1553 
	#HAVE_cbønchsf4
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1554 
	#HAVE_cbønchdf4
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1555 
	#HAVE_cbønchdi4
 (
TARGET_32BIT
)

	)

1556 
	#HAVE_cbønch_cc
 (
TARGET_32BIT
)

	)

1557 
	#HAVE_c°‹e_cc
 (
TARGET_32BIT
)

	)

1558 
	#HAVE_c°‹esi4
 (
TARGET_32BIT
 || 
TARGET_THUMB1
)

	)

1559 
	#HAVE_c°‹esf4
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1560 
	#HAVE_c°‹edf4
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && !
TARGET_VFP_SINGLE
)

	)

1561 
	#HAVE_c°‹edi4
 (
TARGET_32BIT
)

	)

1562 
	#HAVE_movsicc
 (
TARGET_32BIT
)

	)

1563 
	#HAVE_movsfcc
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
)

	)

1564 
	#HAVE_movdfcc
 (
TARGET_32BIT
 && 
TARGET_HARD_FLOAT
 && 
TARGET_VFP_DOUBLE
)

	)

1565 
	#HAVE_jump
 1

	)

1566 
	#HAVE_ˇŒ
 1

	)

1567 
	#HAVE_ˇŒ_öã∫Æ
 1

	)

1568 
	#HAVE_ˇŒ_vÆue
 1

	)

1569 
	#HAVE_ˇŒ_vÆue_öã∫Æ
 1

	)

1570 
	#HAVE_sibˇŒ
 (
TARGET_32BIT
)

	)

1571 
	#HAVE_sibˇŒ_vÆue
 (
TARGET_32BIT
)

	)

1572 
	#HAVE_ªtu∫
 ((
TARGET_ARM
 || (
TARGET_THUMB2
 \

1573 && 
	`ARM_FUNC_TYPE
 (
	`¨m_cuºít_func_ty≥
 ()Ë=
ARM_FT_NORMAL
 \

1574 && !
	`IS_STACKALIGN
 (
	`¨m_cuºít_func_ty≥
 ()))) \

1575 && 
	`USE_RETURN_INSN
 (
FALSE
))

	)

1576 
	#HAVE_sim∂e_ªtu∫
 ((
TARGET_ARM
 || (
TARGET_THUMB2
 \

1577 && 
	`ARM_FUNC_TYPE
 (
	`¨m_cuºít_func_ty≥
 ()Ë=
ARM_FT_NORMAL
 \

1578 && !
	`IS_STACKALIGN
 (
	`¨m_cuºít_func_ty≥
 ()))) \

1579 && 
	`u£_sim∂e_ªtu∫_p
 ())

	)

1580 
	#HAVE_ªtu∫_addr_mask
 (
TARGET_ARM
)

	)

1581 
	#HAVE_u¡y≥d_ˇŒ
 1

	)

1582 
	#HAVE_u¡y≥d_ªtu∫
 1

	)

1583 
	#HAVE_ˇ£si
 (
TARGET_32BIT
 || 
›timize_size
 || 
Êag_pic
)

	)

1584 
	#HAVE_ödúe˘_jump
 1

	)

1585 
	#HAVE_¥ﬁogue
 1

	)

1586 
	#HAVE_ïûogue
 1

	)

1587 
	#HAVE_sibˇŒ_ïûogue
 (
TARGET_32BIT
)

	)

1588 
	#HAVE_eh_ïûogue
 1

	)

1589 
	#HAVE_˘zsi2
 (
TARGET_32BIT
 && 
¨m_¨ch_thumb2
)

	)

1590 
	#HAVE_eh_ªtu∫
 1

	)

1591 
	#HAVE_gë_thªad_poöãrsi
 1

	)

1592 
	#HAVE_¨m_Àgacy_ªv
 (
TARGET_32BIT
)

	)

1593 
	#HAVE_thumb_Àgacy_ªv
 (
TARGET_THUMB
)

	)

1594 
	#HAVE_bsw≠si2
 (
TARGET_EITHER
 && (
¨m_¨ch6
 || !
›timize_size
))

	)

1595 
	#HAVE_bsw≠hi2
 (
¨m_¨ch6
)

	)

1596 
	#HAVE_movv2di
 (
TARGET_NEON
 \

1597 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2DImode
)))

	)

1598 
	#HAVE_movv2si
 (
TARGET_NEON
 \

1599 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1600 
	#HAVE_movv4hi
 (
TARGET_NEON
 \

1601 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1602 
	#HAVE_movv8qi
 (
TARGET_NEON
 \

1603 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1604 
	#HAVE_movv2sf
 (
TARGET_NEON
 \

1605 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SFmode
)))

	)

1606 
	#HAVE_movv4si
 (
TARGET_NEON
 \

1607 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1608 
	#HAVE_movv8hi
 (
TARGET_NEON
 \

1609 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1610 
	#HAVE_movv16qi
 (
TARGET_NEON
 \

1611 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1612 
	#HAVE_movv4sf
 (
TARGET_NEON
 \

1613 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SFmode
)))

	)

1614 
	#HAVE_addv2di3
 ((
TARGET_NEON
 && ((
V2DImode
 !
V2SFmode
 && V2DImodê!
V4SFmode
) \

1615 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1616 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2DImode
)))

	)

1617 
	#HAVE_addv2si3
 ((
TARGET_NEON
 && ((
V2SImode
 !
V2SFmode
 && V2SImodê!
V4SFmode
) \

1618 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1619 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1620 
	#HAVE_addv4hi3
 ((
TARGET_NEON
 && ((
V4HImode
 !
V2SFmode
 && V4HImodê!
V4SFmode
) \

1621 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1622 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1623 
	#HAVE_addv8qi3
 ((
TARGET_NEON
 && ((
V8QImode
 !
V2SFmode
 && V8QImodê!
V4SFmode
) \

1624 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1625 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1626 
	#HAVE_addv2sf3
 ((
TARGET_NEON
 && ((
V2SFmode
 !V2SFmodê&& V2SFmodê!
V4SFmode
) \

1627 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1628 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SFmode
)))

	)

1629 
	#HAVE_addv4si3
 ((
TARGET_NEON
 && ((
V4SImode
 !
V2SFmode
 && V4SImodê!
V4SFmode
) \

1630 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1631 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1632 
	#HAVE_addv8hi3
 ((
TARGET_NEON
 && ((
V8HImode
 !
V2SFmode
 && V8HImodê!
V4SFmode
) \

1633 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1634 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1635 
	#HAVE_addv16qi3
 ((
TARGET_NEON
 && ((
V16QImode
 !
V2SFmode
 && V16QImodê!
V4SFmode
) \

1636 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1637 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1638 
	#HAVE_addv4sf3
 ((
TARGET_NEON
 && ((
V4SFmode
 !
V2SFmode
 && V4SFmode != V4SFmode) \

1639 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1640 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SFmode
)))

	)

1641 
	#HAVE_subv2di3
 ((
TARGET_NEON
 && ((
V2DImode
 !
V2SFmode
 && V2DImodê!
V4SFmode
) \

1642 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1643 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2DImode
)))

	)

1644 
	#HAVE_subv2si3
 ((
TARGET_NEON
 && ((
V2SImode
 !
V2SFmode
 && V2SImodê!
V4SFmode
) \

1645 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1646 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1647 
	#HAVE_subv4hi3
 ((
TARGET_NEON
 && ((
V4HImode
 !
V2SFmode
 && V4HImodê!
V4SFmode
) \

1648 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1649 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1650 
	#HAVE_subv8qi3
 ((
TARGET_NEON
 && ((
V8QImode
 !
V2SFmode
 && V8QImodê!
V4SFmode
) \

1651 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1652 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1653 
	#HAVE_subv2sf3
 ((
TARGET_NEON
 && ((
V2SFmode
 !V2SFmodê&& V2SFmodê!
V4SFmode
) \

1654 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1655 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SFmode
)))

	)

1656 
	#HAVE_subv4si3
 ((
TARGET_NEON
 && ((
V4SImode
 !
V2SFmode
 && V4SImodê!
V4SFmode
) \

1657 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1658 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1659 
	#HAVE_subv8hi3
 ((
TARGET_NEON
 && ((
V8HImode
 !
V2SFmode
 && V8HImodê!
V4SFmode
) \

1660 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1661 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1662 
	#HAVE_subv16qi3
 ((
TARGET_NEON
 && ((
V16QImode
 !
V2SFmode
 && V16QImodê!
V4SFmode
) \

1663 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1664 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1665 
	#HAVE_subv4sf3
 ((
TARGET_NEON
 && ((
V4SFmode
 !
V2SFmode
 && V4SFmode != V4SFmode) \

1666 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1667 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SFmode
)))

	)

1668 
	#HAVE_mulv2si3
 ((
TARGET_NEON
 && ((
V2SImode
 !
V2SFmode
 && V2SImodê!
V4SFmode
) \

1669 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1670 || (
V2SImode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1671 
	#HAVE_mulv4hi3
 ((
TARGET_NEON
 && ((
V4HImode
 !
V2SFmode
 && V4HImodê!
V4SFmode
) \

1672 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1673 || (
V4HImode
 =V4HImodê&& 
TARGET_REALLY_IWMMXT
))

	)

1674 
	#HAVE_mulv8qi3
 ((
TARGET_NEON
 && ((
V8QImode
 !
V2SFmode
 && V8QImodê!
V4SFmode
) \

1675 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1676 || (
V8QImode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1677 
	#HAVE_mulv2sf3
 ((
TARGET_NEON
 && ((
V2SFmode
 !V2SFmodê&& V2SFmodê!
V4SFmode
) \

1678 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1679 || (
V2SFmode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1680 
	#HAVE_mulv4si3
 ((
TARGET_NEON
 && ((
V4SImode
 !
V2SFmode
 && V4SImodê!
V4SFmode
) \

1681 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1682 || (
V4SImode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1683 
	#HAVE_mulv8hi3
 ((
TARGET_NEON
 && ((
V8HImode
 !
V2SFmode
 && V8HImodê!
V4SFmode
) \

1684 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1685 || (
V8HImode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1686 
	#HAVE_mulv16qi3
 ((
TARGET_NEON
 && ((
V16QImode
 !
V2SFmode
 && V16QImodê!
V4SFmode
) \

1687 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1688 || (
V16QImode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1689 
	#HAVE_mulv4sf3
 ((
TARGET_NEON
 && ((
V4SFmode
 !
V2SFmode
 && V4SFmode != V4SFmode) \

1690 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1691 || (
V4SFmode
 =
V4HImode
 && 
TARGET_REALLY_IWMMXT
))

	)

1692 
	#HAVE_smöv2si3
 ((
TARGET_NEON
 && ((
V2SImode
 !
V2SFmode
 && V2SImodê!
V4SFmode
) \

1693 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1694 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1695 
	#HAVE_smöv4hi3
 ((
TARGET_NEON
 && ((
V4HImode
 !
V2SFmode
 && V4HImodê!
V4SFmode
) \

1696 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1697 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1698 
	#HAVE_smöv8qi3
 ((
TARGET_NEON
 && ((
V8QImode
 !
V2SFmode
 && V8QImodê!
V4SFmode
) \

1699 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1700 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1701 
	#HAVE_smöv2sf3
 ((
TARGET_NEON
 && ((
V2SFmode
 !V2SFmodê&& V2SFmodê!
V4SFmode
) \

1702 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1703 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SFmode
)))

	)

1704 
	#HAVE_smöv4si3
 ((
TARGET_NEON
 && ((
V4SImode
 !
V2SFmode
 && V4SImodê!
V4SFmode
) \

1705 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1706 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1707 
	#HAVE_smöv8hi3
 ((
TARGET_NEON
 && ((
V8HImode
 !
V2SFmode
 && V8HImodê!
V4SFmode
) \

1708 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1709 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1710 
	#HAVE_smöv16qi3
 ((
TARGET_NEON
 && ((
V16QImode
 !
V2SFmode
 && V16QImodê!
V4SFmode
) \

1711 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1712 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1713 
	#HAVE_smöv4sf3
 ((
TARGET_NEON
 && ((
V4SFmode
 !
V2SFmode
 && V4SFmode != V4SFmode) \

1714 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1715 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SFmode
)))

	)

1716 
	#HAVE_umöv2si3
 (
TARGET_NEON
 \

1717 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1718 
	#HAVE_umöv4hi3
 (
TARGET_NEON
 \

1719 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1720 
	#HAVE_umöv8qi3
 (
TARGET_NEON
 \

1721 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1722 
	#HAVE_umöv4si3
 (
TARGET_NEON
 \

1723 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1724 
	#HAVE_umöv8hi3
 (
TARGET_NEON
 \

1725 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1726 
	#HAVE_umöv16qi3
 (
TARGET_NEON
 \

1727 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1728 
	#HAVE_smaxv2si3
 ((
TARGET_NEON
 && ((
V2SImode
 !
V2SFmode
 && V2SImodê!
V4SFmode
) \

1729 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1730 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1731 
	#HAVE_smaxv4hi3
 ((
TARGET_NEON
 && ((
V4HImode
 !
V2SFmode
 && V4HImodê!
V4SFmode
) \

1732 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1733 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1734 
	#HAVE_smaxv8qi3
 ((
TARGET_NEON
 && ((
V8QImode
 !
V2SFmode
 && V8QImodê!
V4SFmode
) \

1735 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1736 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1737 
	#HAVE_smaxv2sf3
 ((
TARGET_NEON
 && ((
V2SFmode
 !V2SFmodê&& V2SFmodê!
V4SFmode
) \

1738 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1739 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SFmode
)))

	)

1740 
	#HAVE_smaxv4si3
 ((
TARGET_NEON
 && ((
V4SImode
 !
V2SFmode
 && V4SImodê!
V4SFmode
) \

1741 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1742 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1743 
	#HAVE_smaxv8hi3
 ((
TARGET_NEON
 && ((
V8HImode
 !
V2SFmode
 && V8HImodê!
V4SFmode
) \

1744 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1745 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1746 
	#HAVE_smaxv16qi3
 ((
TARGET_NEON
 && ((
V16QImode
 !
V2SFmode
 && V16QImodê!
V4SFmode
) \

1747 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1748 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1749 
	#HAVE_smaxv4sf3
 ((
TARGET_NEON
 && ((
V4SFmode
 !
V2SFmode
 && V4SFmode != V4SFmode) \

1750 || 
Êag_unß„_m©h_›timiz©i⁄s
)) \

1751 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SFmode
)))

	)

1752 
	#HAVE_umaxv2si3
 (
TARGET_NEON
 \

1753 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1754 
	#HAVE_umaxv4hi3
 (
TARGET_NEON
 \

1755 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1756 
	#HAVE_umaxv8qi3
 (
TARGET_NEON
 \

1757 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1758 
	#HAVE_umaxv4si3
 (
TARGET_NEON
 \

1759 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1760 
	#HAVE_umaxv8hi3
 (
TARGET_NEON
 \

1761 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1762 
	#HAVE_umaxv16qi3
 (
TARGET_NEON
 \

1763 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1764 
	#HAVE_vec_≥rm_c⁄°v2di
 (
TARGET_NEON
 \

1765 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2DImode
)))

	)

1766 
	#HAVE_vec_≥rm_c⁄°v2si
 (
TARGET_NEON
 \

1767 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SImode
)))

	)

1768 
	#HAVE_vec_≥rm_c⁄°v4hi
 (
TARGET_NEON
 \

1769 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4HImode
)))

	)

1770 
	#HAVE_vec_≥rm_c⁄°v8qi
 (
TARGET_NEON
 \

1771 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8QImode
)))

	)

1772 
	#HAVE_vec_≥rm_c⁄°v2sf
 (
TARGET_NEON
 \

1773 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V2SFmode
)))

	)

1774 
	#HAVE_vec_≥rm_c⁄°v4si
 (
TARGET_NEON
 \

1775 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SImode
)))

	)

1776 
	#HAVE_vec_≥rm_c⁄°v8hi
 (
TARGET_NEON
 \

1777 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V8HImode
)))

	)

1778 
	#HAVE_vec_≥rm_c⁄°v16qi
 (
TARGET_NEON
 \

1779 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V16QImode
)))

	)

1780 
	#HAVE_vec_≥rm_c⁄°v4sf
 (
TARGET_NEON
 \

1781 || (
TARGET_REALLY_IWMMXT
 && 
	`VALID_IWMMXT_REG_MODE
 (
V4SFmode
)))

	)

1782 
	#HAVE_vec_≥rmv8qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1783 
	#HAVE_vec_≥rmv16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1784 
	#HAVE_iwmmxt_£twcgr0
 (
TARGET_REALLY_IWMMXT
)

	)

1785 
	#HAVE_iwmmxt_£twcgr1
 (
TARGET_REALLY_IWMMXT
)

	)

1786 
	#HAVE_iwmmxt_£twcgr2
 (
TARGET_REALLY_IWMMXT
)

	)

1787 
	#HAVE_iwmmxt_£twcgr3
 (
TARGET_REALLY_IWMMXT
)

	)

1788 
	#HAVE_iwmmxt_gëwcgr0
 (
TARGET_REALLY_IWMMXT
)

	)

1789 
	#HAVE_iwmmxt_gëwcgr1
 (
TARGET_REALLY_IWMMXT
)

	)

1790 
	#HAVE_iwmmxt_gëwcgr2
 (
TARGET_REALLY_IWMMXT
)

	)

1791 
	#HAVE_iwmmxt_gëwcgr3
 (
TARGET_REALLY_IWMMXT
)

	)

1792 
	#HAVE_thumb_movhi_˛obbî
 (
TARGET_THUMB1
)

	)

1793 
	#HAVE_cbønchqi4
 (
TARGET_THUMB1
)

	)

1794 
	#HAVE_c°‹esi_eq0_thumb1
 (
TARGET_THUMB1
)

	)

1795 
	#HAVE_c°‹esi_√0_thumb1
 (
TARGET_THUMB1
)

	)

1796 
	#HAVE_thumb1_ˇ£si_öã∫Æ_pic
 (
TARGET_THUMB1
)

	)

1797 
	#HAVE_èbÀjump
 (
TARGET_THUMB1
)

	)

1798 
	#HAVE_dﬁo›_íd
 (
TARGET_32BIT
)

	)

1799 
	#HAVE_movti
 (
TARGET_NEON
)

	)

1800 
	#HAVE_movei
 (
TARGET_NEON
)

	)

1801 
	#HAVE_movoi
 (
TARGET_NEON
)

	)

1802 
	#HAVE_movci
 (
TARGET_NEON
)

	)

1803 
	#HAVE_movxi
 (
TARGET_NEON
)

	)

1804 
	#HAVE_movmißlignv8qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1805 
	#HAVE_movmißlignv16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1806 
	#HAVE_movmißlignv4hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1807 
	#HAVE_movmißlignv8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1808 
	#HAVE_movmißlignv2si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1809 
	#HAVE_movmißlignv4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1810 
	#HAVE_movmißlignv2sf
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1811 
	#HAVE_movmißlignv4sf
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1812 
	#HAVE_movmißligndi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1813 
	#HAVE_movmißlignv2di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
 && 
u«lig√d_ac˚ss
)

	)

1814 
	#HAVE_vec_£tv8qi
 (
TARGET_NEON
)

	)

1815 
	#HAVE_vec_£tv16qi
 (
TARGET_NEON
)

	)

1816 
	#HAVE_vec_£tv4hi
 (
TARGET_NEON
)

	)

1817 
	#HAVE_vec_£tv8hi
 (
TARGET_NEON
)

	)

1818 
	#HAVE_vec_£tv2si
 (
TARGET_NEON
)

	)

1819 
	#HAVE_vec_£tv4si
 (
TARGET_NEON
)

	)

1820 
	#HAVE_vec_£tv2sf
 (
TARGET_NEON
)

	)

1821 
	#HAVE_vec_£tv4sf
 (
TARGET_NEON
)

	)

1822 
	#HAVE_vec_£tv2di
 (
TARGET_NEON
)

	)

1823 
	#HAVE_vec_öôv8qi
 (
TARGET_NEON
)

	)

1824 
	#HAVE_vec_öôv16qi
 (
TARGET_NEON
)

	)

1825 
	#HAVE_vec_öôv4hi
 (
TARGET_NEON
)

	)

1826 
	#HAVE_vec_öôv8hi
 (
TARGET_NEON
)

	)

1827 
	#HAVE_vec_öôv2si
 (
TARGET_NEON
)

	)

1828 
	#HAVE_vec_öôv4si
 (
TARGET_NEON
)

	)

1829 
	#HAVE_vec_öôv2sf
 (
TARGET_NEON
)

	)

1830 
	#HAVE_vec_öôv4sf
 (
TARGET_NEON
)

	)

1831 
	#HAVE_vec_öôv2di
 (
TARGET_NEON
)

	)

1832 
	#HAVE_vashrv8qi3
 (
TARGET_NEON
)

	)

1833 
	#HAVE_vashrv16qi3
 (
TARGET_NEON
)

	)

1834 
	#HAVE_vashrv4hi3
 (
TARGET_NEON
)

	)

1835 
	#HAVE_vashrv8hi3
 (
TARGET_NEON
)

	)

1836 
	#HAVE_vashrv2si3
 (
TARGET_NEON
)

	)

1837 
	#HAVE_vashrv4si3
 (
TARGET_NEON
)

	)

1838 
	#HAVE_vlshrv8qi3
 (
TARGET_NEON
)

	)

1839 
	#HAVE_vlshrv16qi3
 (
TARGET_NEON
)

	)

1840 
	#HAVE_vlshrv4hi3
 (
TARGET_NEON
)

	)

1841 
	#HAVE_vlshrv8hi3
 (
TARGET_NEON
)

	)

1842 
	#HAVE_vlshrv2si3
 (
TARGET_NEON
)

	)

1843 
	#HAVE_vlshrv4si3
 (
TARGET_NEON
)

	)

1844 
	#HAVE_vec_shr_v8qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1845 
	#HAVE_vec_shr_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1846 
	#HAVE_vec_shr_v4hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1847 
	#HAVE_vec_shr_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1848 
	#HAVE_vec_shr_v2si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1849 
	#HAVE_vec_shr_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1850 
	#HAVE_vec_shr_v2sf
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1851 
	#HAVE_vec_shr_v4sf
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1852 
	#HAVE_vec_shr_v2di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1853 
	#HAVE_vec_shl_v8qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1854 
	#HAVE_vec_shl_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1855 
	#HAVE_vec_shl_v4hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1856 
	#HAVE_vec_shl_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1857 
	#HAVE_vec_shl_v2si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1858 
	#HAVE_vec_shl_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1859 
	#HAVE_vec_shl_v2sf
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1860 
	#HAVE_vec_shl_v4sf
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1861 
	#HAVE_vec_shl_v2di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1862 
	#HAVE_move_hi_quad_v2di
 (
TARGET_NEON
)

	)

1863 
	#HAVE_move_hi_quad_v2df
 (
TARGET_NEON
)

	)

1864 
	#HAVE_move_hi_quad_v16qi
 (
TARGET_NEON
)

	)

1865 
	#HAVE_move_hi_quad_v8hi
 (
TARGET_NEON
)

	)

1866 
	#HAVE_move_hi_quad_v4si
 (
TARGET_NEON
)

	)

1867 
	#HAVE_move_hi_quad_v4sf
 (
TARGET_NEON
)

	)

1868 
	#HAVE_move_lo_quad_v2di
 (
TARGET_NEON
)

	)

1869 
	#HAVE_move_lo_quad_v2df
 (
TARGET_NEON
)

	)

1870 
	#HAVE_move_lo_quad_v16qi
 (
TARGET_NEON
)

	)

1871 
	#HAVE_move_lo_quad_v8hi
 (
TARGET_NEON
)

	)

1872 
	#HAVE_move_lo_quad_v4si
 (
TARGET_NEON
)

	)

1873 
	#HAVE_move_lo_quad_v4sf
 (
TARGET_NEON
)

	)

1874 
	#HAVE_ªduc_•lus_v8qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1875 
	#HAVE_ªduc_•lus_v4hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1876 
	#HAVE_ªduc_•lus_v2si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1877 
	#HAVE_ªduc_•lus_v2sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1878 
	#HAVE_ªduc_•lus_v16qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1879 && !
BYTES_BIG_ENDIAN
)

	)

1880 
	#HAVE_ªduc_•lus_v8hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1881 && !
BYTES_BIG_ENDIAN
)

	)

1882 
	#HAVE_ªduc_•lus_v4si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1883 && !
BYTES_BIG_ENDIAN
)

	)

1884 
	#HAVE_ªduc_•lus_v4sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1885 && !
BYTES_BIG_ENDIAN
)

	)

1886 
	#HAVE_ªduc_u∂us_v8qi
 (
TARGET_NEON
 && (
åue
 || !
BYTES_BIG_ENDIAN
))

	)

1887 
	#HAVE_ªduc_u∂us_v16qi
 (
TARGET_NEON
 && (
Ál£
 || !
BYTES_BIG_ENDIAN
))

	)

1888 
	#HAVE_ªduc_u∂us_v4hi
 (
TARGET_NEON
 && (
åue
 || !
BYTES_BIG_ENDIAN
))

	)

1889 
	#HAVE_ªduc_u∂us_v8hi
 (
TARGET_NEON
 && (
Ál£
 || !
BYTES_BIG_ENDIAN
))

	)

1890 
	#HAVE_ªduc_u∂us_v2si
 (
TARGET_NEON
 && (
åue
 || !
BYTES_BIG_ENDIAN
))

	)

1891 
	#HAVE_ªduc_u∂us_v4si
 (
TARGET_NEON
 && (
Ál£
 || !
BYTES_BIG_ENDIAN
))

	)

1892 
	#HAVE_ªduc_u∂us_v2di
 (
TARGET_NEON
 && (
Ál£
 || !
BYTES_BIG_ENDIAN
))

	)

1893 
	#HAVE_ªduc_smö_v8qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1894 
	#HAVE_ªduc_smö_v4hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1895 
	#HAVE_ªduc_smö_v2si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1896 
	#HAVE_ªduc_smö_v2sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1897 
	#HAVE_ªduc_smö_v16qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1898 && !
BYTES_BIG_ENDIAN
)

	)

1899 
	#HAVE_ªduc_smö_v8hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1900 && !
BYTES_BIG_ENDIAN
)

	)

1901 
	#HAVE_ªduc_smö_v4si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1902 && !
BYTES_BIG_ENDIAN
)

	)

1903 
	#HAVE_ªduc_smö_v4sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1904 && !
BYTES_BIG_ENDIAN
)

	)

1905 
	#HAVE_ªduc_smax_v8qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1906 
	#HAVE_ªduc_smax_v4hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1907 
	#HAVE_ªduc_smax_v2si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1908 
	#HAVE_ªduc_smax_v2sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1909 
	#HAVE_ªduc_smax_v16qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1910 && !
BYTES_BIG_ENDIAN
)

	)

1911 
	#HAVE_ªduc_smax_v8hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1912 && !
BYTES_BIG_ENDIAN
)

	)

1913 
	#HAVE_ªduc_smax_v4si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1914 && !
BYTES_BIG_ENDIAN
)

	)

1915 
	#HAVE_ªduc_smax_v4sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
) \

1916 && !
BYTES_BIG_ENDIAN
)

	)

1917 
	#HAVE_ªduc_umö_v8qi
 (
TARGET_NEON
)

	)

1918 
	#HAVE_ªduc_umö_v4hi
 (
TARGET_NEON
)

	)

1919 
	#HAVE_ªduc_umö_v2si
 (
TARGET_NEON
)

	)

1920 
	#HAVE_ªduc_umö_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1921 
	#HAVE_ªduc_umö_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1922 
	#HAVE_ªduc_umö_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1923 
	#HAVE_ªduc_umax_v8qi
 (
TARGET_NEON
)

	)

1924 
	#HAVE_ªduc_umax_v4hi
 (
TARGET_NEON
)

	)

1925 
	#HAVE_ªduc_umax_v2si
 (
TARGET_NEON
)

	)

1926 
	#HAVE_ªduc_umax_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1927 
	#HAVE_ªduc_umax_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1928 
	#HAVE_ªduc_umax_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

1929 
	#HAVE_vc⁄dv8qiv8qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1930 
	#HAVE_vc⁄dv16qiv16qi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1931 
	#HAVE_vc⁄dv4hiv4hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1932 
	#HAVE_vc⁄dv8hiv8hi
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1933 
	#HAVE_vc⁄dv2siv2si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1934 
	#HAVE_vc⁄dv4siv4si
 (
TARGET_NEON
 && (!
Ál£
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1935 
	#HAVE_vc⁄dv2sfv2sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1936 
	#HAVE_vc⁄dv4sfv4sf
 (
TARGET_NEON
 && (!
åue
 || 
Êag_unß„_m©h_›timiz©i⁄s
))

	)

1937 
	#HAVE_vc⁄duv8qiv8qi
 (
TARGET_NEON
)

	)

1938 
	#HAVE_vc⁄duv16qiv16qi
 (
TARGET_NEON
)

	)

1939 
	#HAVE_vc⁄duv4hiv4hi
 (
TARGET_NEON
)

	)

1940 
	#HAVE_vc⁄duv8hiv8hi
 (
TARGET_NEON
)

	)

1941 
	#HAVE_vc⁄duv2siv2si
 (
TARGET_NEON
)

	)

1942 
	#HAVE_vc⁄duv4siv4si
 (
TARGET_NEON
)

	)

1943 
	#HAVE_√⁄_vaddv8qi
 (
TARGET_NEON
)

	)

1944 
	#HAVE_√⁄_vaddv16qi
 (
TARGET_NEON
)

	)

1945 
	#HAVE_√⁄_vaddv4hi
 (
TARGET_NEON
)

	)

1946 
	#HAVE_√⁄_vaddv8hi
 (
TARGET_NEON
)

	)

1947 
	#HAVE_√⁄_vaddv2si
 (
TARGET_NEON
)

	)

1948 
	#HAVE_√⁄_vaddv4si
 (
TARGET_NEON
)

	)

1949 
	#HAVE_√⁄_vaddv2sf
 (
TARGET_NEON
)

	)

1950 
	#HAVE_√⁄_vaddv4sf
 (
TARGET_NEON
)

	)

1951 
	#HAVE_√⁄_vadddi
 (
TARGET_NEON
)

	)

1952 
	#HAVE_√⁄_vaddv2di
 (
TARGET_NEON
)

	)

1953 
	#HAVE_√⁄_vmœv8qi
 (
TARGET_NEON
)

	)

1954 
	#HAVE_√⁄_vmœv16qi
 (
TARGET_NEON
)

	)

1955 
	#HAVE_√⁄_vmœv4hi
 (
TARGET_NEON
)

	)

1956 
	#HAVE_√⁄_vmœv8hi
 (
TARGET_NEON
)

	)

1957 
	#HAVE_√⁄_vmœv2si
 (
TARGET_NEON
)

	)

1958 
	#HAVE_√⁄_vmœv4si
 (
TARGET_NEON
)

	)

1959 
	#HAVE_√⁄_vmœv2sf
 (
TARGET_NEON
)

	)

1960 
	#HAVE_√⁄_vmœv4sf
 (
TARGET_NEON
)

	)

1961 
	#HAVE_√⁄_vfmav2sf
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

1962 
	#HAVE_√⁄_vfmav4sf
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

1963 
	#HAVE_√⁄_vfmsv2sf
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

1964 
	#HAVE_√⁄_vfmsv4sf
 (
TARGET_NEON
 && 
TARGET_FMA
)

	)

1965 
	#HAVE_√⁄_vmlsv8qi
 (
TARGET_NEON
)

	)

1966 
	#HAVE_√⁄_vmlsv16qi
 (
TARGET_NEON
)

	)

1967 
	#HAVE_√⁄_vmlsv4hi
 (
TARGET_NEON
)

	)

1968 
	#HAVE_√⁄_vmlsv8hi
 (
TARGET_NEON
)

	)

1969 
	#HAVE_√⁄_vmlsv2si
 (
TARGET_NEON
)

	)

1970 
	#HAVE_√⁄_vmlsv4si
 (
TARGET_NEON
)

	)

1971 
	#HAVE_√⁄_vmlsv2sf
 (
TARGET_NEON
)

	)

1972 
	#HAVE_√⁄_vmlsv4sf
 (
TARGET_NEON
)

	)

1973 
	#HAVE_√⁄_vsubv8qi
 (
TARGET_NEON
)

	)

1974 
	#HAVE_√⁄_vsubv16qi
 (
TARGET_NEON
)

	)

1975 
	#HAVE_√⁄_vsubv4hi
 (
TARGET_NEON
)

	)

1976 
	#HAVE_√⁄_vsubv8hi
 (
TARGET_NEON
)

	)

1977 
	#HAVE_√⁄_vsubv2si
 (
TARGET_NEON
)

	)

1978 
	#HAVE_√⁄_vsubv4si
 (
TARGET_NEON
)

	)

1979 
	#HAVE_√⁄_vsubv2sf
 (
TARGET_NEON
)

	)

1980 
	#HAVE_√⁄_vsubv4sf
 (
TARGET_NEON
)

	)

1981 
	#HAVE_√⁄_vsubdi
 (
TARGET_NEON
)

	)

1982 
	#HAVE_√⁄_vsubv2di
 (
TARGET_NEON
)

	)

1983 
	#HAVE_√⁄_v∑ddv8qi
 (
TARGET_NEON
)

	)

1984 
	#HAVE_√⁄_v∑ddv4hi
 (
TARGET_NEON
)

	)

1985 
	#HAVE_√⁄_v∑ddv2si
 (
TARGET_NEON
)

	)

1986 
	#HAVE_√⁄_v∑ddv2sf
 (
TARGET_NEON
)

	)

1987 
	#HAVE_√⁄_vabsv8qi
 (
TARGET_NEON
)

	)

1988 
	#HAVE_√⁄_vabsv16qi
 (
TARGET_NEON
)

	)

1989 
	#HAVE_√⁄_vabsv4hi
 (
TARGET_NEON
)

	)

1990 
	#HAVE_√⁄_vabsv8hi
 (
TARGET_NEON
)

	)

1991 
	#HAVE_√⁄_vabsv2si
 (
TARGET_NEON
)

	)

1992 
	#HAVE_√⁄_vabsv4si
 (
TARGET_NEON
)

	)

1993 
	#HAVE_√⁄_vabsv2sf
 (
TARGET_NEON
)

	)

1994 
	#HAVE_√⁄_vabsv4sf
 (
TARGET_NEON
)

	)

1995 
	#HAVE_√⁄_v√gv8qi
 (
TARGET_NEON
)

	)

1996 
	#HAVE_√⁄_v√gv16qi
 (
TARGET_NEON
)

	)

1997 
	#HAVE_√⁄_v√gv4hi
 (
TARGET_NEON
)

	)

1998 
	#HAVE_√⁄_v√gv8hi
 (
TARGET_NEON
)

	)

1999 
	#HAVE_√⁄_v√gv2si
 (
TARGET_NEON
)

	)

2000 
	#HAVE_√⁄_v√gv4si
 (
TARGET_NEON
)

	)

2001 
	#HAVE_√⁄_v√gv2sf
 (
TARGET_NEON
)

	)

2002 
	#HAVE_√⁄_v√gv4sf
 (
TARGET_NEON
)

	)

2003 
	#HAVE_√⁄_v˛zv8qi
 (
TARGET_NEON
)

	)

2004 
	#HAVE_√⁄_v˛zv16qi
 (
TARGET_NEON
)

	)

2005 
	#HAVE_√⁄_v˛zv4hi
 (
TARGET_NEON
)

	)

2006 
	#HAVE_√⁄_v˛zv8hi
 (
TARGET_NEON
)

	)

2007 
	#HAVE_√⁄_v˛zv2si
 (
TARGET_NEON
)

	)

2008 
	#HAVE_√⁄_v˛zv4si
 (
TARGET_NEON
)

	)

2009 
	#HAVE_√⁄_v˙tv8qi
 (
TARGET_NEON
)

	)

2010 
	#HAVE_√⁄_v˙tv16qi
 (
TARGET_NEON
)

	)

2011 
	#HAVE_√⁄_vmvnv8qi
 (
TARGET_NEON
)

	)

2012 
	#HAVE_√⁄_vmvnv16qi
 (
TARGET_NEON
)

	)

2013 
	#HAVE_√⁄_vmvnv4hi
 (
TARGET_NEON
)

	)

2014 
	#HAVE_√⁄_vmvnv8hi
 (
TARGET_NEON
)

	)

2015 
	#HAVE_√⁄_vmvnv2si
 (
TARGET_NEON
)

	)

2016 
	#HAVE_√⁄_vmvnv4si
 (
TARGET_NEON
)

	)

2017 
	#HAVE_√⁄_vgë_œ√v8qi
 (
TARGET_NEON
)

	)

2018 
	#HAVE_√⁄_vgë_œ√v16qi
 (
TARGET_NEON
)

	)

2019 
	#HAVE_√⁄_vgë_œ√v4hi
 (
TARGET_NEON
)

	)

2020 
	#HAVE_√⁄_vgë_œ√v8hi
 (
TARGET_NEON
)

	)

2021 
	#HAVE_√⁄_vgë_œ√v2si
 (
TARGET_NEON
)

	)

2022 
	#HAVE_√⁄_vgë_œ√v4si
 (
TARGET_NEON
)

	)

2023 
	#HAVE_√⁄_vgë_œ√v2sf
 (
TARGET_NEON
)

	)

2024 
	#HAVE_√⁄_vgë_œ√v4sf
 (
TARGET_NEON
)

	)

2025 
	#HAVE_√⁄_vgë_œ√di
 (
TARGET_NEON
)

	)

2026 
	#HAVE_√⁄_vgë_œ√v2di
 (
TARGET_NEON
)

	)

2027 
	#HAVE_√⁄_v£t_œ√v8qi
 (
TARGET_NEON
)

	)

2028 
	#HAVE_√⁄_v£t_œ√v16qi
 (
TARGET_NEON
)

	)

2029 
	#HAVE_√⁄_v£t_œ√v4hi
 (
TARGET_NEON
)

	)

2030 
	#HAVE_√⁄_v£t_œ√v8hi
 (
TARGET_NEON
)

	)

2031 
	#HAVE_√⁄_v£t_œ√v2si
 (
TARGET_NEON
)

	)

2032 
	#HAVE_√⁄_v£t_œ√v4si
 (
TARGET_NEON
)

	)

2033 
	#HAVE_√⁄_v£t_œ√v2sf
 (
TARGET_NEON
)

	)

2034 
	#HAVE_√⁄_v£t_œ√v4sf
 (
TARGET_NEON
)

	)

2035 
	#HAVE_√⁄_v£t_œ√v2di
 (
TARGET_NEON
)

	)

2036 
	#HAVE_√⁄_v£t_œ√di
 (
TARGET_NEON
)

	)

2037 
	#HAVE_√⁄_v¸óãv8qi
 (
TARGET_NEON
)

	)

2038 
	#HAVE_√⁄_v¸óãv4hi
 (
TARGET_NEON
)

	)

2039 
	#HAVE_√⁄_v¸óãv2si
 (
TARGET_NEON
)

	)

2040 
	#HAVE_√⁄_v¸óãv2sf
 (
TARGET_NEON
)

	)

2041 
	#HAVE_√⁄_v¸óãdi
 (
TARGET_NEON
)

	)

2042 
	#HAVE_√⁄_vdup_ndi
 (
TARGET_NEON
)

	)

2043 
	#HAVE_√⁄_vdup_œ√v8qi
 (
TARGET_NEON
)

	)

2044 
	#HAVE_√⁄_vdup_œ√v16qi
 (
TARGET_NEON
)

	)

2045 
	#HAVE_√⁄_vdup_œ√v4hi
 (
TARGET_NEON
)

	)

2046 
	#HAVE_√⁄_vdup_œ√v8hi
 (
TARGET_NEON
)

	)

2047 
	#HAVE_√⁄_vdup_œ√v2si
 (
TARGET_NEON
)

	)

2048 
	#HAVE_√⁄_vdup_œ√v4si
 (
TARGET_NEON
)

	)

2049 
	#HAVE_√⁄_vdup_œ√v2sf
 (
TARGET_NEON
)

	)

2050 
	#HAVE_√⁄_vdup_œ√v4sf
 (
TARGET_NEON
)

	)

2051 
	#HAVE_√⁄_vdup_œ√di
 (
TARGET_NEON
)

	)

2052 
	#HAVE_√⁄_vdup_œ√v2di
 (
TARGET_NEON
)

	)

2053 
	#HAVE_√⁄_vgë_highv16qi
 (
TARGET_NEON
)

	)

2054 
	#HAVE_√⁄_vgë_highv8hi
 (
TARGET_NEON
)

	)

2055 
	#HAVE_√⁄_vgë_highv4si
 (
TARGET_NEON
)

	)

2056 
	#HAVE_√⁄_vgë_highv4sf
 (
TARGET_NEON
)

	)

2057 
	#HAVE_√⁄_vgë_highv2di
 (
TARGET_NEON
)

	)

2058 
	#HAVE_√⁄_vgë_lowv16qi
 (
TARGET_NEON
)

	)

2059 
	#HAVE_√⁄_vgë_lowv8hi
 (
TARGET_NEON
)

	)

2060 
	#HAVE_√⁄_vgë_lowv4si
 (
TARGET_NEON
)

	)

2061 
	#HAVE_√⁄_vgë_lowv4sf
 (
TARGET_NEON
)

	)

2062 
	#HAVE_√⁄_vgë_lowv2di
 (
TARGET_NEON
)

	)

2063 
	#HAVE_√⁄_vmul_nv4hi
 (
TARGET_NEON
)

	)

2064 
	#HAVE_√⁄_vmul_nv2si
 (
TARGET_NEON
)

	)

2065 
	#HAVE_√⁄_vmul_nv2sf
 (
TARGET_NEON
)

	)

2066 
	#HAVE_√⁄_vmul_nv8hi
 (
TARGET_NEON
)

	)

2067 
	#HAVE_√⁄_vmul_nv4si
 (
TARGET_NEON
)

	)

2068 
	#HAVE_√⁄_vmul_nv4sf
 (
TARGET_NEON
)

	)

2069 
	#HAVE_√⁄_vmuŒ_nv4hi
 (
TARGET_NEON
)

	)

2070 
	#HAVE_√⁄_vmuŒ_nv2si
 (
TARGET_NEON
)

	)

2071 
	#HAVE_√⁄_vqdmuŒ_nv4hi
 (
TARGET_NEON
)

	)

2072 
	#HAVE_√⁄_vqdmuŒ_nv2si
 (
TARGET_NEON
)

	)

2073 
	#HAVE_√⁄_vqdmulh_nv4hi
 (
TARGET_NEON
)

	)

2074 
	#HAVE_√⁄_vqdmulh_nv2si
 (
TARGET_NEON
)

	)

2075 
	#HAVE_√⁄_vqdmulh_nv8hi
 (
TARGET_NEON
)

	)

2076 
	#HAVE_√⁄_vqdmulh_nv4si
 (
TARGET_NEON
)

	)

2077 
	#HAVE_√⁄_vmœ_nv4hi
 (
TARGET_NEON
)

	)

2078 
	#HAVE_√⁄_vmœ_nv2si
 (
TARGET_NEON
)

	)

2079 
	#HAVE_√⁄_vmœ_nv2sf
 (
TARGET_NEON
)

	)

2080 
	#HAVE_√⁄_vmœ_nv8hi
 (
TARGET_NEON
)

	)

2081 
	#HAVE_√⁄_vmœ_nv4si
 (
TARGET_NEON
)

	)

2082 
	#HAVE_√⁄_vmœ_nv4sf
 (
TARGET_NEON
)

	)

2083 
	#HAVE_√⁄_vmœl_nv4hi
 (
TARGET_NEON
)

	)

2084 
	#HAVE_√⁄_vmœl_nv2si
 (
TARGET_NEON
)

	)

2085 
	#HAVE_√⁄_vqdmœl_nv4hi
 (
TARGET_NEON
)

	)

2086 
	#HAVE_√⁄_vqdmœl_nv2si
 (
TARGET_NEON
)

	)

2087 
	#HAVE_√⁄_vmls_nv4hi
 (
TARGET_NEON
)

	)

2088 
	#HAVE_√⁄_vmls_nv2si
 (
TARGET_NEON
)

	)

2089 
	#HAVE_√⁄_vmls_nv2sf
 (
TARGET_NEON
)

	)

2090 
	#HAVE_√⁄_vmls_nv8hi
 (
TARGET_NEON
)

	)

2091 
	#HAVE_√⁄_vmls_nv4si
 (
TARGET_NEON
)

	)

2092 
	#HAVE_√⁄_vmls_nv4sf
 (
TARGET_NEON
)

	)

2093 
	#HAVE_√⁄_vml¶_nv4hi
 (
TARGET_NEON
)

	)

2094 
	#HAVE_√⁄_vml¶_nv2si
 (
TARGET_NEON
)

	)

2095 
	#HAVE_√⁄_vqdml¶_nv4hi
 (
TARGET_NEON
)

	)

2096 
	#HAVE_√⁄_vqdml¶_nv2si
 (
TARGET_NEON
)

	)

2097 
	#HAVE_√⁄_vb¶v8qi
 (
TARGET_NEON
)

	)

2098 
	#HAVE_√⁄_vb¶v16qi
 (
TARGET_NEON
)

	)

2099 
	#HAVE_√⁄_vb¶v4hi
 (
TARGET_NEON
)

	)

2100 
	#HAVE_√⁄_vb¶v8hi
 (
TARGET_NEON
)

	)

2101 
	#HAVE_√⁄_vb¶v2si
 (
TARGET_NEON
)

	)

2102 
	#HAVE_√⁄_vb¶v4si
 (
TARGET_NEON
)

	)

2103 
	#HAVE_√⁄_vb¶v2sf
 (
TARGET_NEON
)

	)

2104 
	#HAVE_√⁄_vb¶v4sf
 (
TARGET_NEON
)

	)

2105 
	#HAVE_√⁄_vb¶di
 (
TARGET_NEON
)

	)

2106 
	#HAVE_√⁄_vb¶v2di
 (
TARGET_NEON
)

	)

2107 
	#HAVE_√⁄_vånv8qi_öã∫Æ
 (
TARGET_NEON
)

	)

2108 
	#HAVE_√⁄_vånv16qi_öã∫Æ
 (
TARGET_NEON
)

	)

2109 
	#HAVE_√⁄_vånv4hi_öã∫Æ
 (
TARGET_NEON
)

	)

2110 
	#HAVE_√⁄_vånv8hi_öã∫Æ
 (
TARGET_NEON
)

	)

2111 
	#HAVE_√⁄_vånv2si_öã∫Æ
 (
TARGET_NEON
)

	)

2112 
	#HAVE_√⁄_vånv4si_öã∫Æ
 (
TARGET_NEON
)

	)

2113 
	#HAVE_√⁄_vånv2sf_öã∫Æ
 (
TARGET_NEON
)

	)

2114 
	#HAVE_√⁄_vånv4sf_öã∫Æ
 (
TARGET_NEON
)

	)

2115 
	#HAVE_√⁄_vånv8qi
 (
TARGET_NEON
)

	)

2116 
	#HAVE_√⁄_vånv16qi
 (
TARGET_NEON
)

	)

2117 
	#HAVE_√⁄_vånv4hi
 (
TARGET_NEON
)

	)

2118 
	#HAVE_√⁄_vånv8hi
 (
TARGET_NEON
)

	)

2119 
	#HAVE_√⁄_vånv2si
 (
TARGET_NEON
)

	)

2120 
	#HAVE_√⁄_vånv4si
 (
TARGET_NEON
)

	)

2121 
	#HAVE_√⁄_vånv2sf
 (
TARGET_NEON
)

	)

2122 
	#HAVE_√⁄_vånv4sf
 (
TARGET_NEON
)

	)

2123 
	#HAVE_√⁄_vzùv8qi_öã∫Æ
 (
TARGET_NEON
)

	)

2124 
	#HAVE_√⁄_vzùv16qi_öã∫Æ
 (
TARGET_NEON
)

	)

2125 
	#HAVE_√⁄_vzùv4hi_öã∫Æ
 (
TARGET_NEON
)

	)

2126 
	#HAVE_√⁄_vzùv8hi_öã∫Æ
 (
TARGET_NEON
)

	)

2127 
	#HAVE_√⁄_vzùv2si_öã∫Æ
 (
TARGET_NEON
)

	)

2128 
	#HAVE_√⁄_vzùv4si_öã∫Æ
 (
TARGET_NEON
)

	)

2129 
	#HAVE_√⁄_vzùv2sf_öã∫Æ
 (
TARGET_NEON
)

	)

2130 
	#HAVE_√⁄_vzùv4sf_öã∫Æ
 (
TARGET_NEON
)

	)

2131 
	#HAVE_√⁄_vzùv8qi
 (
TARGET_NEON
)

	)

2132 
	#HAVE_√⁄_vzùv16qi
 (
TARGET_NEON
)

	)

2133 
	#HAVE_√⁄_vzùv4hi
 (
TARGET_NEON
)

	)

2134 
	#HAVE_√⁄_vzùv8hi
 (
TARGET_NEON
)

	)

2135 
	#HAVE_√⁄_vzùv2si
 (
TARGET_NEON
)

	)

2136 
	#HAVE_√⁄_vzùv4si
 (
TARGET_NEON
)

	)

2137 
	#HAVE_√⁄_vzùv2sf
 (
TARGET_NEON
)

	)

2138 
	#HAVE_√⁄_vzùv4sf
 (
TARGET_NEON
)

	)

2139 
	#HAVE_√⁄_vuzpv8qi_öã∫Æ
 (
TARGET_NEON
)

	)

2140 
	#HAVE_√⁄_vuzpv16qi_öã∫Æ
 (
TARGET_NEON
)

	)

2141 
	#HAVE_√⁄_vuzpv4hi_öã∫Æ
 (
TARGET_NEON
)

	)

2142 
	#HAVE_√⁄_vuzpv8hi_öã∫Æ
 (
TARGET_NEON
)

	)

2143 
	#HAVE_√⁄_vuzpv2si_öã∫Æ
 (
TARGET_NEON
)

	)

2144 
	#HAVE_√⁄_vuzpv4si_öã∫Æ
 (
TARGET_NEON
)

	)

2145 
	#HAVE_√⁄_vuzpv2sf_öã∫Æ
 (
TARGET_NEON
)

	)

2146 
	#HAVE_√⁄_vuzpv4sf_öã∫Æ
 (
TARGET_NEON
)

	)

2147 
	#HAVE_√⁄_vuzpv8qi
 (
TARGET_NEON
)

	)

2148 
	#HAVE_√⁄_vuzpv16qi
 (
TARGET_NEON
)

	)

2149 
	#HAVE_√⁄_vuzpv4hi
 (
TARGET_NEON
)

	)

2150 
	#HAVE_√⁄_vuzpv8hi
 (
TARGET_NEON
)

	)

2151 
	#HAVE_√⁄_vuzpv2si
 (
TARGET_NEON
)

	)

2152 
	#HAVE_√⁄_vuzpv4si
 (
TARGET_NEON
)

	)

2153 
	#HAVE_√⁄_vuzpv2sf
 (
TARGET_NEON
)

	)

2154 
	#HAVE_√⁄_vuzpv4sf
 (
TARGET_NEON
)

	)

2155 
	#HAVE_√⁄_vªöãΩªtv8qiv8qi
 (
TARGET_NEON
)

	)

2156 
	#HAVE_√⁄_vªöãΩªtv8qiv4hi
 (
TARGET_NEON
)

	)

2157 
	#HAVE_√⁄_vªöãΩªtv8qiv2si
 (
TARGET_NEON
)

	)

2158 
	#HAVE_√⁄_vªöãΩªtv8qiv2sf
 (
TARGET_NEON
)

	)

2159 
	#HAVE_√⁄_vªöãΩªtv8qidi
 (
TARGET_NEON
)

	)

2160 
	#HAVE_√⁄_vªöãΩªtv4hiv8qi
 (
TARGET_NEON
)

	)

2161 
	#HAVE_√⁄_vªöãΩªtv4hiv4hi
 (
TARGET_NEON
)

	)

2162 
	#HAVE_√⁄_vªöãΩªtv4hiv2si
 (
TARGET_NEON
)

	)

2163 
	#HAVE_√⁄_vªöãΩªtv4hiv2sf
 (
TARGET_NEON
)

	)

2164 
	#HAVE_√⁄_vªöãΩªtv4hidi
 (
TARGET_NEON
)

	)

2165 
	#HAVE_√⁄_vªöãΩªtv2siv8qi
 (
TARGET_NEON
)

	)

2166 
	#HAVE_√⁄_vªöãΩªtv2siv4hi
 (
TARGET_NEON
)

	)

2167 
	#HAVE_√⁄_vªöãΩªtv2siv2si
 (
TARGET_NEON
)

	)

2168 
	#HAVE_√⁄_vªöãΩªtv2siv2sf
 (
TARGET_NEON
)

	)

2169 
	#HAVE_√⁄_vªöãΩªtv2sidi
 (
TARGET_NEON
)

	)

2170 
	#HAVE_√⁄_vªöãΩªtv2sfv8qi
 (
TARGET_NEON
)

	)

2171 
	#HAVE_√⁄_vªöãΩªtv2sfv4hi
 (
TARGET_NEON
)

	)

2172 
	#HAVE_√⁄_vªöãΩªtv2sfv2si
 (
TARGET_NEON
)

	)

2173 
	#HAVE_√⁄_vªöãΩªtv2sfv2sf
 (
TARGET_NEON
)

	)

2174 
	#HAVE_√⁄_vªöãΩªtv2sfdi
 (
TARGET_NEON
)

	)

2175 
	#HAVE_√⁄_vªöãΩªtdiv8qi
 (
TARGET_NEON
)

	)

2176 
	#HAVE_√⁄_vªöãΩªtdiv4hi
 (
TARGET_NEON
)

	)

2177 
	#HAVE_√⁄_vªöãΩªtdiv2si
 (
TARGET_NEON
)

	)

2178 
	#HAVE_√⁄_vªöãΩªtdiv2sf
 (
TARGET_NEON
)

	)

2179 
	#HAVE_√⁄_vªöãΩªtdidi
 (
TARGET_NEON
)

	)

2180 
	#HAVE_√⁄_vªöãΩªâiv16qi
 (
TARGET_NEON
)

	)

2181 
	#HAVE_√⁄_vªöãΩªâiv8hi
 (
TARGET_NEON
)

	)

2182 
	#HAVE_√⁄_vªöãΩªâiv4si
 (
TARGET_NEON
)

	)

2183 
	#HAVE_√⁄_vªöãΩªâiv4sf
 (
TARGET_NEON
)

	)

2184 
	#HAVE_√⁄_vªöãΩªâiv2di
 (
TARGET_NEON
)

	)

2185 
	#HAVE_√⁄_vªöãΩªâôi
 (
TARGET_NEON
)

	)

2186 
	#HAVE_√⁄_vªöãΩªtv16qiv16qi
 (
TARGET_NEON
)

	)

2187 
	#HAVE_√⁄_vªöãΩªtv16qiv8hi
 (
TARGET_NEON
)

	)

2188 
	#HAVE_√⁄_vªöãΩªtv16qiv4si
 (
TARGET_NEON
)

	)

2189 
	#HAVE_√⁄_vªöãΩªtv16qiv4sf
 (
TARGET_NEON
)

	)

2190 
	#HAVE_√⁄_vªöãΩªtv16qiv2di
 (
TARGET_NEON
)

	)

2191 
	#HAVE_√⁄_vªöãΩªtv16qôi
 (
TARGET_NEON
)

	)

2192 
	#HAVE_√⁄_vªöãΩªtv8hiv16qi
 (
TARGET_NEON
)

	)

2193 
	#HAVE_√⁄_vªöãΩªtv8hiv8hi
 (
TARGET_NEON
)

	)

2194 
	#HAVE_√⁄_vªöãΩªtv8hiv4si
 (
TARGET_NEON
)

	)

2195 
	#HAVE_√⁄_vªöãΩªtv8hiv4sf
 (
TARGET_NEON
)

	)

2196 
	#HAVE_√⁄_vªöãΩªtv8hiv2di
 (
TARGET_NEON
)

	)

2197 
	#HAVE_√⁄_vªöãΩªtv8hôi
 (
TARGET_NEON
)

	)

2198 
	#HAVE_√⁄_vªöãΩªtv4siv16qi
 (
TARGET_NEON
)

	)

2199 
	#HAVE_√⁄_vªöãΩªtv4siv8hi
 (
TARGET_NEON
)

	)

2200 
	#HAVE_√⁄_vªöãΩªtv4siv4si
 (
TARGET_NEON
)

	)

2201 
	#HAVE_√⁄_vªöãΩªtv4siv4sf
 (
TARGET_NEON
)

	)

2202 
	#HAVE_√⁄_vªöãΩªtv4siv2di
 (
TARGET_NEON
)

	)

2203 
	#HAVE_√⁄_vªöãΩªtv4sôi
 (
TARGET_NEON
)

	)

2204 
	#HAVE_√⁄_vªöãΩªtv4sfv16qi
 (
TARGET_NEON
)

	)

2205 
	#HAVE_√⁄_vªöãΩªtv4sfv8hi
 (
TARGET_NEON
)

	)

2206 
	#HAVE_√⁄_vªöãΩªtv4sfv4si
 (
TARGET_NEON
)

	)

2207 
	#HAVE_√⁄_vªöãΩªtv4sfv4sf
 (
TARGET_NEON
)

	)

2208 
	#HAVE_√⁄_vªöãΩªtv4sfv2di
 (
TARGET_NEON
)

	)

2209 
	#HAVE_√⁄_vªöãΩªtv4s·i
 (
TARGET_NEON
)

	)

2210 
	#HAVE_√⁄_vªöãΩªtv2div16qi
 (
TARGET_NEON
)

	)

2211 
	#HAVE_√⁄_vªöãΩªtv2div8hi
 (
TARGET_NEON
)

	)

2212 
	#HAVE_√⁄_vªöãΩªtv2div4si
 (
TARGET_NEON
)

	)

2213 
	#HAVE_√⁄_vªöãΩªtv2div4sf
 (
TARGET_NEON
)

	)

2214 
	#HAVE_√⁄_vªöãΩªtv2div2di
 (
TARGET_NEON
)

	)

2215 
	#HAVE_√⁄_vªöãΩªtv2dôi
 (
TARGET_NEON
)

	)

2216 
	#HAVE_vec_lﬂd_œ√sv8qiv8qi
 (
TARGET_NEON
)

	)

2217 
	#HAVE_vec_lﬂd_œ√sv16qiv16qi
 (
TARGET_NEON
)

	)

2218 
	#HAVE_vec_lﬂd_œ√sv4hiv4hi
 (
TARGET_NEON
)

	)

2219 
	#HAVE_vec_lﬂd_œ√sv8hiv8hi
 (
TARGET_NEON
)

	)

2220 
	#HAVE_vec_lﬂd_œ√sv2siv2si
 (
TARGET_NEON
)

	)

2221 
	#HAVE_vec_lﬂd_œ√sv4siv4si
 (
TARGET_NEON
)

	)

2222 
	#HAVE_vec_lﬂd_œ√sv2sfv2sf
 (
TARGET_NEON
)

	)

2223 
	#HAVE_vec_lﬂd_œ√sv4sfv4sf
 (
TARGET_NEON
)

	)

2224 
	#HAVE_vec_lﬂd_œ√sdidi
 (
TARGET_NEON
)

	)

2225 
	#HAVE_vec_lﬂd_œ√sv2div2di
 (
TARGET_NEON
)

	)

2226 
	#HAVE_√⁄_vld1_dupdi
 (
TARGET_NEON
)

	)

2227 
	#HAVE_vec_°‹e_œ√sv8qiv8qi
 (
TARGET_NEON
)

	)

2228 
	#HAVE_vec_°‹e_œ√sv16qiv16qi
 (
TARGET_NEON
)

	)

2229 
	#HAVE_vec_°‹e_œ√sv4hiv4hi
 (
TARGET_NEON
)

	)

2230 
	#HAVE_vec_°‹e_œ√sv8hiv8hi
 (
TARGET_NEON
)

	)

2231 
	#HAVE_vec_°‹e_œ√sv2siv2si
 (
TARGET_NEON
)

	)

2232 
	#HAVE_vec_°‹e_œ√sv4siv4si
 (
TARGET_NEON
)

	)

2233 
	#HAVE_vec_°‹e_œ√sv2sfv2sf
 (
TARGET_NEON
)

	)

2234 
	#HAVE_vec_°‹e_œ√sv4sfv4sf
 (
TARGET_NEON
)

	)

2235 
	#HAVE_vec_°‹e_œ√sdidi
 (
TARGET_NEON
)

	)

2236 
	#HAVE_vec_°‹e_œ√sv2div2di
 (
TARGET_NEON
)

	)

2237 
	#HAVE_vec_lﬂd_œ√°iv8qi
 (
TARGET_NEON
)

	)

2238 
	#HAVE_vec_lﬂd_œ√°iv4hi
 (
TARGET_NEON
)

	)

2239 
	#HAVE_vec_lﬂd_œ√°iv2si
 (
TARGET_NEON
)

	)

2240 
	#HAVE_vec_lﬂd_œ√°iv2sf
 (
TARGET_NEON
)

	)

2241 
	#HAVE_vec_lﬂd_œ√°idi
 (
TARGET_NEON
)

	)

2242 
	#HAVE_vec_lﬂd_œ√soiv16qi
 (
TARGET_NEON
)

	)

2243 
	#HAVE_vec_lﬂd_œ√soiv8hi
 (
TARGET_NEON
)

	)

2244 
	#HAVE_vec_lﬂd_œ√soiv4si
 (
TARGET_NEON
)

	)

2245 
	#HAVE_vec_lﬂd_œ√soiv4sf
 (
TARGET_NEON
)

	)

2246 
	#HAVE_vec_°‹e_œ√°iv8qi
 (
TARGET_NEON
)

	)

2247 
	#HAVE_vec_°‹e_œ√°iv4hi
 (
TARGET_NEON
)

	)

2248 
	#HAVE_vec_°‹e_œ√°iv2si
 (
TARGET_NEON
)

	)

2249 
	#HAVE_vec_°‹e_œ√°iv2sf
 (
TARGET_NEON
)

	)

2250 
	#HAVE_vec_°‹e_œ√°idi
 (
TARGET_NEON
)

	)

2251 
	#HAVE_vec_°‹e_œ√soiv16qi
 (
TARGET_NEON
)

	)

2252 
	#HAVE_vec_°‹e_œ√soiv8hi
 (
TARGET_NEON
)

	)

2253 
	#HAVE_vec_°‹e_œ√soiv4si
 (
TARGET_NEON
)

	)

2254 
	#HAVE_vec_°‹e_œ√soiv4sf
 (
TARGET_NEON
)

	)

2255 
	#HAVE_vec_lﬂd_œ√£iv8qi
 (
TARGET_NEON
)

	)

2256 
	#HAVE_vec_lﬂd_œ√£iv4hi
 (
TARGET_NEON
)

	)

2257 
	#HAVE_vec_lﬂd_œ√£iv2si
 (
TARGET_NEON
)

	)

2258 
	#HAVE_vec_lﬂd_œ√£iv2sf
 (
TARGET_NEON
)

	)

2259 
	#HAVE_vec_lﬂd_œ√£idi
 (
TARGET_NEON
)

	)

2260 
	#HAVE_vec_lﬂd_œ√sciv16qi
 (
TARGET_NEON
)

	)

2261 
	#HAVE_vec_lﬂd_œ√sciv8hi
 (
TARGET_NEON
)

	)

2262 
	#HAVE_vec_lﬂd_œ√sciv4si
 (
TARGET_NEON
)

	)

2263 
	#HAVE_vec_lﬂd_œ√sciv4sf
 (
TARGET_NEON
)

	)

2264 
	#HAVE_√⁄_vld3v16qi
 (
TARGET_NEON
)

	)

2265 
	#HAVE_√⁄_vld3v8hi
 (
TARGET_NEON
)

	)

2266 
	#HAVE_√⁄_vld3v4si
 (
TARGET_NEON
)

	)

2267 
	#HAVE_√⁄_vld3v4sf
 (
TARGET_NEON
)

	)

2268 
	#HAVE_vec_°‹e_œ√£iv8qi
 (
TARGET_NEON
)

	)

2269 
	#HAVE_vec_°‹e_œ√£iv4hi
 (
TARGET_NEON
)

	)

2270 
	#HAVE_vec_°‹e_œ√£iv2si
 (
TARGET_NEON
)

	)

2271 
	#HAVE_vec_°‹e_œ√£iv2sf
 (
TARGET_NEON
)

	)

2272 
	#HAVE_vec_°‹e_œ√£idi
 (
TARGET_NEON
)

	)

2273 
	#HAVE_vec_°‹e_œ√sciv16qi
 (
TARGET_NEON
)

	)

2274 
	#HAVE_vec_°‹e_œ√sciv8hi
 (
TARGET_NEON
)

	)

2275 
	#HAVE_vec_°‹e_œ√sciv4si
 (
TARGET_NEON
)

	)

2276 
	#HAVE_vec_°‹e_œ√sciv4sf
 (
TARGET_NEON
)

	)

2277 
	#HAVE_√⁄_v°3v16qi
 (
TARGET_NEON
)

	)

2278 
	#HAVE_√⁄_v°3v8hi
 (
TARGET_NEON
)

	)

2279 
	#HAVE_√⁄_v°3v4si
 (
TARGET_NEON
)

	)

2280 
	#HAVE_√⁄_v°3v4sf
 (
TARGET_NEON
)

	)

2281 
	#HAVE_vec_lﬂd_œ√soiv8qi
 (
TARGET_NEON
)

	)

2282 
	#HAVE_vec_lﬂd_œ√soiv4hi
 (
TARGET_NEON
)

	)

2283 
	#HAVE_vec_lﬂd_œ√soiv2si
 (
TARGET_NEON
)

	)

2284 
	#HAVE_vec_lﬂd_œ√soiv2sf
 (
TARGET_NEON
)

	)

2285 
	#HAVE_vec_lﬂd_œ√soidi
 (
TARGET_NEON
)

	)

2286 
	#HAVE_vec_lﬂd_œ√sxiv16qi
 (
TARGET_NEON
)

	)

2287 
	#HAVE_vec_lﬂd_œ√sxiv8hi
 (
TARGET_NEON
)

	)

2288 
	#HAVE_vec_lﬂd_œ√sxiv4si
 (
TARGET_NEON
)

	)

2289 
	#HAVE_vec_lﬂd_œ√sxiv4sf
 (
TARGET_NEON
)

	)

2290 
	#HAVE_√⁄_vld4v16qi
 (
TARGET_NEON
)

	)

2291 
	#HAVE_√⁄_vld4v8hi
 (
TARGET_NEON
)

	)

2292 
	#HAVE_√⁄_vld4v4si
 (
TARGET_NEON
)

	)

2293 
	#HAVE_√⁄_vld4v4sf
 (
TARGET_NEON
)

	)

2294 
	#HAVE_vec_°‹e_œ√soiv8qi
 (
TARGET_NEON
)

	)

2295 
	#HAVE_vec_°‹e_œ√soiv4hi
 (
TARGET_NEON
)

	)

2296 
	#HAVE_vec_°‹e_œ√soiv2si
 (
TARGET_NEON
)

	)

2297 
	#HAVE_vec_°‹e_œ√soiv2sf
 (
TARGET_NEON
)

	)

2298 
	#HAVE_vec_°‹e_œ√soidi
 (
TARGET_NEON
)

	)

2299 
	#HAVE_vec_°‹e_œ√sxiv16qi
 (
TARGET_NEON
)

	)

2300 
	#HAVE_vec_°‹e_œ√sxiv8hi
 (
TARGET_NEON
)

	)

2301 
	#HAVE_vec_°‹e_œ√sxiv4si
 (
TARGET_NEON
)

	)

2302 
	#HAVE_vec_°‹e_œ√sxiv4sf
 (
TARGET_NEON
)

	)

2303 
	#HAVE_√⁄_v°4v16qi
 (
TARGET_NEON
)

	)

2304 
	#HAVE_√⁄_v°4v8hi
 (
TARGET_NEON
)

	)

2305 
	#HAVE_√⁄_v°4v4si
 (
TARGET_NEON
)

	)

2306 
	#HAVE_√⁄_v°4v4sf
 (
TARGET_NEON
)

	)

2307 
	#HAVE_√⁄_v™dv8qi
 (
TARGET_NEON
)

	)

2308 
	#HAVE_√⁄_v™dv16qi
 (
TARGET_NEON
)

	)

2309 
	#HAVE_√⁄_v™dv4hi
 (
TARGET_NEON
)

	)

2310 
	#HAVE_√⁄_v™dv8hi
 (
TARGET_NEON
)

	)

2311 
	#HAVE_√⁄_v™dv2si
 (
TARGET_NEON
)

	)

2312 
	#HAVE_√⁄_v™dv4si
 (
TARGET_NEON
)

	)

2313 
	#HAVE_√⁄_v™dv2sf
 (
TARGET_NEON
)

	)

2314 
	#HAVE_√⁄_v™dv4sf
 (
TARGET_NEON
)

	)

2315 
	#HAVE_√⁄_v™ddi
 (
TARGET_NEON
)

	)

2316 
	#HAVE_√⁄_v™dv2di
 (
TARGET_NEON
)

	)

2317 
	#HAVE_√⁄_v‹rv8qi
 (
TARGET_NEON
)

	)

2318 
	#HAVE_√⁄_v‹rv16qi
 (
TARGET_NEON
)

	)

2319 
	#HAVE_√⁄_v‹rv4hi
 (
TARGET_NEON
)

	)

2320 
	#HAVE_√⁄_v‹rv8hi
 (
TARGET_NEON
)

	)

2321 
	#HAVE_√⁄_v‹rv2si
 (
TARGET_NEON
)

	)

2322 
	#HAVE_√⁄_v‹rv4si
 (
TARGET_NEON
)

	)

2323 
	#HAVE_√⁄_v‹rv2sf
 (
TARGET_NEON
)

	)

2324 
	#HAVE_√⁄_v‹rv4sf
 (
TARGET_NEON
)

	)

2325 
	#HAVE_√⁄_v‹rdi
 (
TARGET_NEON
)

	)

2326 
	#HAVE_√⁄_v‹rv2di
 (
TARGET_NEON
)

	)

2327 
	#HAVE_√⁄_ve‹v8qi
 (
TARGET_NEON
)

	)

2328 
	#HAVE_√⁄_ve‹v16qi
 (
TARGET_NEON
)

	)

2329 
	#HAVE_√⁄_ve‹v4hi
 (
TARGET_NEON
)

	)

2330 
	#HAVE_√⁄_ve‹v8hi
 (
TARGET_NEON
)

	)

2331 
	#HAVE_√⁄_ve‹v2si
 (
TARGET_NEON
)

	)

2332 
	#HAVE_√⁄_ve‹v4si
 (
TARGET_NEON
)

	)

2333 
	#HAVE_√⁄_ve‹v2sf
 (
TARGET_NEON
)

	)

2334 
	#HAVE_√⁄_ve‹v4sf
 (
TARGET_NEON
)

	)

2335 
	#HAVE_√⁄_ve‹di
 (
TARGET_NEON
)

	)

2336 
	#HAVE_√⁄_ve‹v2di
 (
TARGET_NEON
)

	)

2337 
	#HAVE_√⁄_vbicv8qi
 (
TARGET_NEON
)

	)

2338 
	#HAVE_√⁄_vbicv16qi
 (
TARGET_NEON
)

	)

2339 
	#HAVE_√⁄_vbicv4hi
 (
TARGET_NEON
)

	)

2340 
	#HAVE_√⁄_vbicv8hi
 (
TARGET_NEON
)

	)

2341 
	#HAVE_√⁄_vbicv2si
 (
TARGET_NEON
)

	)

2342 
	#HAVE_√⁄_vbicv4si
 (
TARGET_NEON
)

	)

2343 
	#HAVE_√⁄_vbicv2sf
 (
TARGET_NEON
)

	)

2344 
	#HAVE_√⁄_vbicv4sf
 (
TARGET_NEON
)

	)

2345 
	#HAVE_√⁄_vbicdi
 (
TARGET_NEON
)

	)

2346 
	#HAVE_√⁄_vbicv2di
 (
TARGET_NEON
)

	)

2347 
	#HAVE_√⁄_v‹nv8qi
 (
TARGET_NEON
)

	)

2348 
	#HAVE_√⁄_v‹nv16qi
 (
TARGET_NEON
)

	)

2349 
	#HAVE_√⁄_v‹nv4hi
 (
TARGET_NEON
)

	)

2350 
	#HAVE_√⁄_v‹nv8hi
 (
TARGET_NEON
)

	)

2351 
	#HAVE_√⁄_v‹nv2si
 (
TARGET_NEON
)

	)

2352 
	#HAVE_√⁄_v‹nv4si
 (
TARGET_NEON
)

	)

2353 
	#HAVE_√⁄_v‹nv2sf
 (
TARGET_NEON
)

	)

2354 
	#HAVE_√⁄_v‹nv4sf
 (
TARGET_NEON
)

	)

2355 
	#HAVE_√⁄_v‹ndi
 (
TARGET_NEON
)

	)

2356 
	#HAVE_√⁄_v‹nv2di
 (
TARGET_NEON
)

	)

2357 
	#HAVE_vec_u≈acks_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2358 
	#HAVE_vec_u≈acku_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2359 
	#HAVE_vec_u≈acks_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2360 
	#HAVE_vec_u≈acku_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2361 
	#HAVE_vec_u≈acks_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2362 
	#HAVE_vec_u≈acku_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2363 
	#HAVE_vec_u≈acks_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2364 
	#HAVE_vec_u≈acku_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2365 
	#HAVE_vec_u≈acks_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2366 
	#HAVE_vec_u≈acku_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2367 
	#HAVE_vec_u≈acks_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2368 
	#HAVE_vec_u≈acku_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2369 
	#HAVE_vec_widí_smu…_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2370 
	#HAVE_vec_widí_umu…_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2371 
	#HAVE_vec_widí_smu…_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2372 
	#HAVE_vec_widí_umu…_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2373 
	#HAVE_vec_widí_smu…_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2374 
	#HAVE_vec_widí_umu…_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2375 
	#HAVE_vec_widí_smu…_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2376 
	#HAVE_vec_widí_umu…_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2377 
	#HAVE_vec_widí_smu…_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2378 
	#HAVE_vec_widí_umu…_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2379 
	#HAVE_vec_widí_smu…_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2380 
	#HAVE_vec_widí_umu…_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2381 
	#HAVE_vec_widí_sshi·l_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2382 
	#HAVE_vec_widí_ushi·l_lo_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2383 
	#HAVE_vec_widí_sshi·l_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2384 
	#HAVE_vec_widí_ushi·l_lo_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2385 
	#HAVE_vec_widí_sshi·l_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2386 
	#HAVE_vec_widí_ushi·l_lo_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2387 
	#HAVE_vec_widí_sshi·l_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2388 
	#HAVE_vec_widí_ushi·l_hi_v16qi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2389 
	#HAVE_vec_widí_sshi·l_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2390 
	#HAVE_vec_widí_ushi·l_hi_v8hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2391 
	#HAVE_vec_widí_sshi·l_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2392 
	#HAVE_vec_widí_ushi·l_hi_v4si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2393 
	#HAVE_vec_u≈acks_lo_v8qi
 (
TARGET_NEON
)

	)

2394 
	#HAVE_vec_u≈acku_lo_v8qi
 (
TARGET_NEON
)

	)

2395 
	#HAVE_vec_u≈acks_lo_v4hi
 (
TARGET_NEON
)

	)

2396 
	#HAVE_vec_u≈acku_lo_v4hi
 (
TARGET_NEON
)

	)

2397 
	#HAVE_vec_u≈acks_lo_v2si
 (
TARGET_NEON
)

	)

2398 
	#HAVE_vec_u≈acku_lo_v2si
 (
TARGET_NEON
)

	)

2399 
	#HAVE_vec_u≈acks_hi_v8qi
 (
TARGET_NEON
)

	)

2400 
	#HAVE_vec_u≈acku_hi_v8qi
 (
TARGET_NEON
)

	)

2401 
	#HAVE_vec_u≈acks_hi_v4hi
 (
TARGET_NEON
)

	)

2402 
	#HAVE_vec_u≈acku_hi_v4hi
 (
TARGET_NEON
)

	)

2403 
	#HAVE_vec_u≈acks_hi_v2si
 (
TARGET_NEON
)

	)

2404 
	#HAVE_vec_u≈acku_hi_v2si
 (
TARGET_NEON
)

	)

2405 
	#HAVE_vec_widí_smu…_hi_v8qi
 (
TARGET_NEON
)

	)

2406 
	#HAVE_vec_widí_umu…_hi_v8qi
 (
TARGET_NEON
)

	)

2407 
	#HAVE_vec_widí_smu…_hi_v4hi
 (
TARGET_NEON
)

	)

2408 
	#HAVE_vec_widí_umu…_hi_v4hi
 (
TARGET_NEON
)

	)

2409 
	#HAVE_vec_widí_smu…_hi_v2si
 (
TARGET_NEON
)

	)

2410 
	#HAVE_vec_widí_umu…_hi_v2si
 (
TARGET_NEON
)

	)

2411 
	#HAVE_vec_widí_smu…_lo_v8qi
 (
TARGET_NEON
)

	)

2412 
	#HAVE_vec_widí_umu…_lo_v8qi
 (
TARGET_NEON
)

	)

2413 
	#HAVE_vec_widí_smu…_lo_v4hi
 (
TARGET_NEON
)

	)

2414 
	#HAVE_vec_widí_umu…_lo_v4hi
 (
TARGET_NEON
)

	)

2415 
	#HAVE_vec_widí_smu…_lo_v2si
 (
TARGET_NEON
)

	)

2416 
	#HAVE_vec_widí_umu…_lo_v2si
 (
TARGET_NEON
)

	)

2417 
	#HAVE_vec_widí_sshi·l_hi_v8qi
 (
TARGET_NEON
)

	)

2418 
	#HAVE_vec_widí_ushi·l_hi_v8qi
 (
TARGET_NEON
)

	)

2419 
	#HAVE_vec_widí_sshi·l_hi_v4hi
 (
TARGET_NEON
)

	)

2420 
	#HAVE_vec_widí_ushi·l_hi_v4hi
 (
TARGET_NEON
)

	)

2421 
	#HAVE_vec_widí_sshi·l_hi_v2si
 (
TARGET_NEON
)

	)

2422 
	#HAVE_vec_widí_ushi·l_hi_v2si
 (
TARGET_NEON
)

	)

2423 
	#HAVE_vec_widí_sshi·l_lo_v8qi
 (
TARGET_NEON
)

	)

2424 
	#HAVE_vec_widí_ushi·l_lo_v8qi
 (
TARGET_NEON
)

	)

2425 
	#HAVE_vec_widí_sshi·l_lo_v4hi
 (
TARGET_NEON
)

	)

2426 
	#HAVE_vec_widí_ushi·l_lo_v4hi
 (
TARGET_NEON
)

	)

2427 
	#HAVE_vec_widí_sshi·l_lo_v2si
 (
TARGET_NEON
)

	)

2428 
	#HAVE_vec_widí_ushi·l_lo_v2si
 (
TARGET_NEON
)

	)

2429 
	#HAVE_vec_∑ck_åunc_v4hi
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2430 
	#HAVE_vec_∑ck_åunc_v2si
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2431 
	#HAVE_vec_∑ck_åunc_di
 (
TARGET_NEON
 && !
BYTES_BIG_ENDIAN
)

	)

2432 
	#HAVE_mem‹y_b¨rõr
 (
TARGET_HAVE_MEMORY_BARRIER
)

	)

2433 
	#HAVE_©omic_lﬂddi
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
)

	)

2434 
	#HAVE_©omic_com∑ª_™d_sw≠qi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

2435 
	#HAVE_©omic_com∑ª_™d_sw≠hi
 (
TARGET_HAVE_LDREXBH
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

2436 
	#HAVE_©omic_com∑ª_™d_sw≠si
 (
TARGET_HAVE_LDREX
 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

2437 
	#HAVE_©omic_com∑ª_™d_sw≠di
 (
TARGET_HAVE_LDREXD
 && 
ARM_DOUBLEWORD_ALIGN
 \

2438 && 
TARGET_HAVE_MEMORY_BARRIER
)

	)

2439 
	#HAVE_mulqq3
 (
TARGET_DSP_MULTIPLY
 && 
¨m_¨ch_thumb2
)

	)

2440 
	#HAVE_mulhq3
 (
TARGET_DSP_MULTIPLY
 && 
¨m_¨ch_thumb2
)

	)

2441 
	#HAVE_mulsq3
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

2442 
	#HAVE_mulß3
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

2443 
	#HAVE_muluß3
 (
TARGET_32BIT
 && 
¨m_¨ch3m
)

	)

2444 
	#HAVE_mulha3
 (
TARGET_DSP_MULTIPLY
 && 
¨m_¨ch_thumb2
)

	)

2445 
	#HAVE_muluha3
 (
TARGET_DSP_MULTIPLY
)

	)

2446 
	#HAVE_ssmulha3
 (
TARGET_32BIT
 && 
TARGET_DSP_MULTIPLY
 && 
¨m_¨ch6
)

	)

2447 
	#HAVE_usmuluha3
 (
TARGET_INT_SIMD
)

	)

2448 
πx
 
gí_addsi3_com∑ª0
 (rtx,Ñtx,Ñtx);

2449 
πx
 
gí_cmpsi2_add√g
 (rtx,Ñtx,Ñtx,Ñtx);

2450 
πx
 
gí_subsi3_com∑ª
 (rtx,Ñtx,Ñtx);

2451 
πx
 
gí_mulhisi3
 (rtx,Ñtx,Ñtx);

2452 
πx
 
gí_maddhisi4
 (rtx,Ñtx,Ñtx,Ñtx);

2453 
πx
 
gí_maddhidi4
 (rtx,Ñtx,Ñtx,Ñtx);

2454 
πx
 
gí_ösv_zîo
 (rtx,Ñtx,Ñtx);

2455 
πx
 
gí_ösv_t2
 (rtx,Ñtx,Ñtx,Ñtx);

2456 
πx
 
gí_™dsi_nŸsi_si
 (rtx,Ñtx,Ñtx);

2457 
πx
 
gí_™dsi_nŸ_shi·si_si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

2458 
πx
 
gí_¨m_ashldi3_1bô
 (rtx,Ñtx);

2459 
πx
 
gí_¨m_ashrdi3_1bô
 (rtx,Ñtx);

2460 
πx
 
gí_¨m_lshrdi3_1bô
 (rtx,Ñtx);

2461 
πx
 
gí_u«lig√d_lﬂdsi
 (rtx,Ñtx);

2462 
πx
 
gí_u«lig√d_lﬂdhis
 (rtx,Ñtx);

2463 
πx
 
gí_u«lig√d_lﬂdhiu
 (rtx,Ñtx);

2464 
πx
 
gí_u«lig√d_°‹esi
 (rtx,Ñtx);

2465 
πx
 
gí_u«lig√d_°‹ehi
 (rtx,Ñtx);

2466 
πx
 
gí_u«lig√d_lﬂddi
 (rtx,Ñtx);

2467 
πx
 
gí_u«lig√d_°‹edi
 (rtx,Ñtx);

2468 
πx
 
gí_extzv_t2
 (rtx,Ñtx,Ñtx,Ñtx);

2469 
πx
 
gí_divsi3
 (rtx,Ñtx,Ñtx);

2470 
πx
 
gí_udivsi3
 (rtx,Ñtx,Ñtx);

2471 
πx
 
gí_⁄e_cm∂di2
 (rtx,Ñtx);

2472 
πx
 
gí_zîo_exãndqidi2
 (rtx,Ñtx);

2473 
πx
 
gí_zîo_exãndhidi2
 (rtx,Ñtx);

2474 
πx
 
gí_zîo_exãndsidi2
 (rtx,Ñtx);

2475 
πx
 
gí_exãndqidi2
 (rtx,Ñtx);

2476 
πx
 
gí_exãndhidi2
 (rtx,Ñtx);

2477 
πx
 
gí_exãndsidi2
 (rtx,Ñtx);

2478 
πx
 
gí_pic_lﬂd_addr_unifõd
 (rtx,Ñtx,Ñtx);

2479 
πx
 
gí_pic_lﬂd_addr_32bô
 (rtx,Ñtx);

2480 
πx
 
gí_pic_lﬂd_addr_thumb1
 (rtx,Ñtx);

2481 
πx
 
gí_pic_add_dŸ_∂us_four
 (rtx,Ñtx,Ñtx);

2482 
πx
 
gí_pic_add_dŸ_∂us_eight
 (rtx,Ñtx,Ñtx);

2483 
πx
 
gí_és_lﬂd_dŸ_∂us_eight
 (rtx,Ñtx,Ñtx);

2484 
ölöe
 
πx
 
gí_pic_off£t_¨m
 (rtx,Ñtx,Ñtx);

2485 
ölöe
 
πx


2486 
gí_pic_off£t_¨m
(
πx
 
ARG_UNUSED
 (
a
),Ñtx ARG_UNUSED (
b
),Ñtx 
	$ARG_UNUSED
 (
c
))

2489 
	}
}

2490 
πx
 
gí_¨m_c⁄d_bønch
 (rtx,Ñtx,Ñtx);

2491 
πx
 
gí_blockage
 ();

2492 
πx
 
gí_¨m_ˇ£si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2493 
πx
 
gí_n›
 ();

2494 
πx
 
gí_å≠
 ();

2495 
πx
 
gí_movc⁄d_addsi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

2496 
πx
 
gí_movc⁄d
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

2497 
πx
 
gí_°ack_tõ
 (rtx,Ñtx);

2498 
πx
 
gí_Æign_4
 ();

2499 
πx
 
gí_Æign_8
 ();

2500 
πx
 
gí_c⁄°èbÀ_íd
 ();

2501 
πx
 
gí_c⁄°èbÀ_1
 (rtx);

2502 
πx
 
gí_c⁄°èbÀ_2
 (rtx);

2503 
πx
 
gí_c⁄°èbÀ_4
 (rtx);

2504 
πx
 
gí_c⁄°èbÀ_8
 (rtx);

2505 
πx
 
gí_c⁄°èbÀ_16
 (rtx);

2506 
πx
 
gí_˛zsi2
 (rtx,Ñtx);

2507 
πx
 
gí_rbôsi2
 (rtx,Ñtx);

2508 
πx
 
gí_¥e„tch
 (rtx,Ñtx,Ñtx);

2509 
πx
 
gí_f‹˚_ªgi°î_u£
 (rtx);

2510 
πx
 
gí_¨m_eh_ªtu∫
 (rtx);

2511 
πx
 
gí_lﬂd_ç_h¨d
 (rtx);

2512 
πx
 
gí_lﬂd_ç_so·
 ();

2513 
πx
 
gí_ésˇŒ
 (rtx,Ñtx);

2514 
πx
 
gí_¸c32b
 (rtx,Ñtx,Ñtx);

2515 
πx
 
gí_¸c32h
 (rtx,Ñtx,Ñtx);

2516 
πx
 
gí_¸c32w
 (rtx,Ñtx,Ñtx);

2517 
πx
 
gí_¸c32cb
 (rtx,Ñtx,Ñtx);

2518 
πx
 
gí_¸c32ch
 (rtx,Ñtx,Ñtx);

2519 
πx
 
gí_¸c32cw
 (rtx,Ñtx,Ñtx);

2520 
πx
 
gí_tbc°v8qi
 (rtx,Ñtx);

2521 
πx
 
gí_tbc°v4hi
 (rtx,Ñtx);

2522 
πx
 
gí_tbc°v2si
 (rtx,Ñtx);

2523 
πx
 
gí_iwmmxt_i‹di3
 (rtx,Ñtx,Ñtx);

2524 
πx
 
gí_iwmmxt_x‹di3
 (rtx,Ñtx,Ñtx);

2525 
πx
 
gí_iwmmxt_™ddi3
 (rtx,Ñtx,Ñtx);

2526 
πx
 
gí_iwmmxt_«nddi3
 (rtx,Ñtx,Ñtx);

2527 
πx
 
gí_movv2si_öã∫Æ
 (rtx,Ñtx);

2528 
πx
 
gí_movv4hi_öã∫Æ
 (rtx,Ñtx);

2529 
πx
 
gí_movv8qi_öã∫Æ
 (rtx,Ñtx);

2530 
πx
 
gí_sßddv8qi3
 (rtx,Ñtx,Ñtx);

2531 
πx
 
gí_sßddv4hi3
 (rtx,Ñtx,Ñtx);

2532 
πx
 
gí_sßddv2si3
 (rtx,Ñtx,Ñtx);

2533 
πx
 
gí_ußddv8qi3
 (rtx,Ñtx,Ñtx);

2534 
πx
 
gí_ußddv4hi3
 (rtx,Ñtx,Ñtx);

2535 
πx
 
gí_ußddv2si3
 (rtx,Ñtx,Ñtx);

2536 
πx
 
gí_sssubv8qi3
 (rtx,Ñtx,Ñtx);

2537 
πx
 
gí_sssubv4hi3
 (rtx,Ñtx,Ñtx);

2538 
πx
 
gí_sssubv2si3
 (rtx,Ñtx,Ñtx);

2539 
πx
 
gí_ussubv8qi3
 (rtx,Ñtx,Ñtx);

2540 
πx
 
gí_ussubv4hi3
 (rtx,Ñtx,Ñtx);

2541 
πx
 
gí_ussubv2si3
 (rtx,Ñtx,Ñtx);

2542 
πx
 
gí_smulv4hi3_high∑π
 (rtx,Ñtx,Ñtx);

2543 
πx
 
gí_umulv4hi3_high∑π
 (rtx,Ñtx,Ñtx);

2544 
πx
 
gí_iwmmxt_wmacs
 (rtx,Ñtx,Ñtx,Ñtx);

2545 
πx
 
gí_iwmmxt_wmacsz
 (rtx,Ñtx,Ñtx);

2546 
πx
 
gí_iwmmxt_wmacu
 (rtx,Ñtx,Ñtx,Ñtx);

2547 
πx
 
gí_iwmmxt_wmacuz
 (rtx,Ñtx,Ñtx);

2548 
πx
 
gí_iwmmxt_˛rdi
 (rtx);

2549 
πx
 
gí_iwmmxt_˛rv8qi
 (rtx);

2550 
πx
 
gí_iwmmxt_˛rv4hi
 (rtx);

2551 
πx
 
gí_iwmmxt_˛rv2si
 (rtx);

2552 
πx
 
gí_iwmmxt_uavg∫dv8qi3
 (rtx,Ñtx,Ñtx);

2553 
πx
 
gí_iwmmxt_uavg∫dv4hi3
 (rtx,Ñtx,Ñtx);

2554 
πx
 
gí_iwmmxt_uavgv8qi3
 (rtx,Ñtx,Ñtx);

2555 
πx
 
gí_iwmmxt_uavgv4hi3
 (rtx,Ñtx,Ñtx);

2556 
πx
 
gí_iwmmxt_tö§b
 (rtx,Ñtx,Ñtx,Ñtx);

2557 
πx
 
gí_iwmmxt_tö§h
 (rtx,Ñtx,Ñtx,Ñtx);

2558 
πx
 
gí_iwmmxt_tö§w
 (rtx,Ñtx,Ñtx,Ñtx);

2559 
πx
 
gí_iwmmxt_ãxåmub
 (rtx,Ñtx,Ñtx);

2560 
πx
 
gí_iwmmxt_ãxåmsb
 (rtx,Ñtx,Ñtx);

2561 
πx
 
gí_iwmmxt_ãxåmuh
 (rtx,Ñtx,Ñtx);

2562 
πx
 
gí_iwmmxt_ãxåmsh
 (rtx,Ñtx,Ñtx);

2563 
πx
 
gí_iwmmxt_ãxåmw
 (rtx,Ñtx,Ñtx);

2564 
πx
 
gí_iwmmxt_wshufh
 (rtx,Ñtx,Ñtx);

2565 
πx
 
gí_eqv8qi3
 (rtx,Ñtx,Ñtx);

2566 
πx
 
gí_eqv4hi3
 (rtx,Ñtx,Ñtx);

2567 
πx
 
gí_eqv2si3
 (rtx,Ñtx,Ñtx);

2568 
πx
 
gí_gtuv8qi3
 (rtx,Ñtx,Ñtx);

2569 
πx
 
gí_gtuv4hi3
 (rtx,Ñtx,Ñtx);

2570 
πx
 
gí_gtuv2si3
 (rtx,Ñtx,Ñtx);

2571 
πx
 
gí_gtv8qi3
 (rtx,Ñtx,Ñtx);

2572 
πx
 
gí_gtv4hi3
 (rtx,Ñtx,Ñtx);

2573 
πx
 
gí_gtv2si3
 (rtx,Ñtx,Ñtx);

2574 
πx
 
gí_iwmmxt_w∑ckhss
 (rtx,Ñtx,Ñtx);

2575 
πx
 
gí_iwmmxt_w∑ckwss
 (rtx,Ñtx,Ñtx);

2576 
πx
 
gí_iwmmxt_w∑ckdss
 (rtx,Ñtx,Ñtx);

2577 
πx
 
gí_iwmmxt_w∑ckhus
 (rtx,Ñtx,Ñtx);

2578 
πx
 
gí_iwmmxt_w∑ckwus
 (rtx,Ñtx,Ñtx);

2579 
πx
 
gí_iwmmxt_w∑ckdus
 (rtx,Ñtx,Ñtx);

2580 
πx
 
gí_iwmmxt_wu≈ckihb
 (rtx,Ñtx,Ñtx);

2581 
πx
 
gí_iwmmxt_wu≈ckihh
 (rtx,Ñtx,Ñtx);

2582 
πx
 
gí_iwmmxt_wu≈ckihw
 (rtx,Ñtx,Ñtx);

2583 
πx
 
gí_iwmmxt_wu≈ckûb
 (rtx,Ñtx,Ñtx);

2584 
πx
 
gí_iwmmxt_wu≈ckûh
 (rtx,Ñtx,Ñtx);

2585 
πx
 
gí_iwmmxt_wu≈ckûw
 (rtx,Ñtx,Ñtx);

2586 
πx
 
gí_iwmmxt_wu≈ckehub
 (rtx,Ñtx);

2587 
πx
 
gí_iwmmxt_wu≈ckehuh
 (rtx,Ñtx);

2588 
πx
 
gí_iwmmxt_wu≈ckehuw
 (rtx,Ñtx);

2589 
πx
 
gí_iwmmxt_wu≈ckehsb
 (rtx,Ñtx);

2590 
πx
 
gí_iwmmxt_wu≈ckehsh
 (rtx,Ñtx);

2591 
πx
 
gí_iwmmxt_wu≈ckehsw
 (rtx,Ñtx);

2592 
πx
 
gí_iwmmxt_wu≈ckñub
 (rtx,Ñtx);

2593 
πx
 
gí_iwmmxt_wu≈ckñuh
 (rtx,Ñtx);

2594 
πx
 
gí_iwmmxt_wu≈ckñuw
 (rtx,Ñtx);

2595 
πx
 
gí_iwmmxt_wu≈ckñsb
 (rtx,Ñtx);

2596 
πx
 
gí_iwmmxt_wu≈ckñsh
 (rtx,Ñtx);

2597 
πx
 
gí_iwmmxt_wu≈ckñsw
 (rtx,Ñtx);

2598 
πx
 
gí_r‹v4hi3
 (rtx,Ñtx,Ñtx);

2599 
πx
 
gí_r‹v2si3
 (rtx,Ñtx,Ñtx);

2600 
πx
 
gí_r‹di3
 (rtx,Ñtx,Ñtx);

2601 
πx
 
gí_ashrv4hi3_iwmmxt
 (rtx,Ñtx,Ñtx);

2602 
πx
 
gí_ashrv2si3_iwmmxt
 (rtx,Ñtx,Ñtx);

2603 
πx
 
gí_ashrdi3_iwmmxt
 (rtx,Ñtx,Ñtx);

2604 
πx
 
gí_lshrv4hi3_iwmmxt
 (rtx,Ñtx,Ñtx);

2605 
πx
 
gí_lshrv2si3_iwmmxt
 (rtx,Ñtx,Ñtx);

2606 
πx
 
gí_lshrdi3_iwmmxt
 (rtx,Ñtx,Ñtx);

2607 
πx
 
gí_ashlv4hi3_iwmmxt
 (rtx,Ñtx,Ñtx);

2608 
πx
 
gí_ashlv2si3_iwmmxt
 (rtx,Ñtx,Ñtx);

2609 
πx
 
gí_ashldi3_iwmmxt
 (rtx,Ñtx,Ñtx);

2610 
πx
 
gí_r‹v4hi3_di
 (rtx,Ñtx,Ñtx);

2611 
πx
 
gí_r‹v2si3_di
 (rtx,Ñtx,Ñtx);

2612 
πx
 
gí_r‹di3_di
 (rtx,Ñtx,Ñtx);

2613 
πx
 
gí_ashrv4hi3_di
 (rtx,Ñtx,Ñtx);

2614 
πx
 
gí_ashrv2si3_di
 (rtx,Ñtx,Ñtx);

2615 
πx
 
gí_ashrdi3_di
 (rtx,Ñtx,Ñtx);

2616 
πx
 
gí_lshrv4hi3_di
 (rtx,Ñtx,Ñtx);

2617 
πx
 
gí_lshrv2si3_di
 (rtx,Ñtx,Ñtx);

2618 
πx
 
gí_lshrdi3_di
 (rtx,Ñtx,Ñtx);

2619 
πx
 
gí_ashlv4hi3_di
 (rtx,Ñtx,Ñtx);

2620 
πx
 
gí_ashlv2si3_di
 (rtx,Ñtx,Ñtx);

2621 
πx
 
gí_ashldi3_di
 (rtx,Ñtx,Ñtx);

2622 
πx
 
gí_iwmmxt_wmadds
 (rtx,Ñtx,Ñtx);

2623 
πx
 
gí_iwmmxt_wmaddu
 (rtx,Ñtx,Ñtx);

2624 
πx
 
gí_iwmmxt_tmü
 (rtx,Ñtx,Ñtx,Ñtx);

2625 
πx
 
gí_iwmmxt_tmüph
 (rtx,Ñtx,Ñtx,Ñtx);

2626 
πx
 
gí_iwmmxt_tmübb
 (rtx,Ñtx,Ñtx,Ñtx);

2627 
πx
 
gí_iwmmxt_tmütb
 (rtx,Ñtx,Ñtx,Ñtx);

2628 
πx
 
gí_iwmmxt_tmübt
 (rtx,Ñtx,Ñtx,Ñtx);

2629 
πx
 
gí_iwmmxt_tmüâ
 (rtx,Ñtx,Ñtx,Ñtx);

2630 
πx
 
gí_iwmmxt_tmovmskb
 (rtx,Ñtx);

2631 
πx
 
gí_iwmmxt_tmovmskh
 (rtx,Ñtx);

2632 
πx
 
gí_iwmmxt_tmovmskw
 (rtx,Ñtx);

2633 
πx
 
gí_iwmmxt_waccb
 (rtx,Ñtx);

2634 
πx
 
gí_iwmmxt_wacch
 (rtx,Ñtx);

2635 
πx
 
gí_iwmmxt_waccw
 (rtx,Ñtx);

2636 
πx
 
gí_iwmmxt_wÆigni
 (rtx,Ñtx,Ñtx,Ñtx);

2637 
πx
 
gí_iwmmxt_wÆigƒ
 (rtx,Ñtx,Ñtx,Ñtx);

2638 
πx
 
gí_iwmmxt_wÆigƒ0
 (rtx,Ñtx,Ñtx);

2639 
πx
 
gí_iwmmxt_wÆigƒ1
 (rtx,Ñtx,Ñtx);

2640 
πx
 
gí_iwmmxt_wÆigƒ2
 (rtx,Ñtx,Ñtx);

2641 
πx
 
gí_iwmmxt_wÆigƒ3
 (rtx,Ñtx,Ñtx);

2642 
πx
 
gí_iwmmxt_wßdb
 (rtx,Ñtx,Ñtx,Ñtx);

2643 
πx
 
gí_iwmmxt_wßdh
 (rtx,Ñtx,Ñtx,Ñtx);

2644 
πx
 
gí_iwmmxt_wßdbz
 (rtx,Ñtx,Ñtx);

2645 
πx
 
gí_iwmmxt_wßdhz
 (rtx,Ñtx,Ñtx);

2646 
πx
 
gí_iwmmxt_wabsv2si3
 (rtx,Ñtx);

2647 
πx
 
gí_iwmmxt_wabsv4hi3
 (rtx,Ñtx);

2648 
πx
 
gí_iwmmxt_wabsv8qi3
 (rtx,Ñtx);

2649 
πx
 
gí_iwmmxt_wabsdiffb
 (rtx,Ñtx,Ñtx);

2650 
πx
 
gí_iwmmxt_wabsdiffh
 (rtx,Ñtx,Ñtx);

2651 
πx
 
gí_iwmmxt_wabsdiffw
 (rtx,Ñtx,Ñtx);

2652 
πx
 
gí_iwmmxt_waddsubhx
 (rtx,Ñtx,Ñtx);

2653 
πx
 
gí_iwmmxt_wsubaddhx
 (rtx,Ñtx,Ñtx);

2654 
πx
 
gí_addcv4hi3
 (rtx,Ñtx,Ñtx);

2655 
πx
 
gí_addcv2si3
 (rtx,Ñtx,Ñtx);

2656 
πx
 
gí_iwmmxt_avg4
 (rtx,Ñtx,Ñtx);

2657 
πx
 
gí_iwmmxt_avg4r
 (rtx,Ñtx,Ñtx);

2658 
πx
 
gí_iwmmxt_wmaddsx
 (rtx,Ñtx,Ñtx);

2659 
πx
 
gí_iwmmxt_wmaddux
 (rtx,Ñtx,Ñtx);

2660 
πx
 
gí_iwmmxt_wmadd¢
 (rtx,Ñtx,Ñtx);

2661 
πx
 
gí_iwmmxt_wmaddun
 (rtx,Ñtx,Ñtx);

2662 
πx
 
gí_iwmmxt_wmulwsm
 (rtx,Ñtx,Ñtx);

2663 
πx
 
gí_iwmmxt_wmulwum
 (rtx,Ñtx,Ñtx);

2664 
πx
 
gí_iwmmxt_wmulsmr
 (rtx,Ñtx,Ñtx);

2665 
πx
 
gí_iwmmxt_wmulumr
 (rtx,Ñtx,Ñtx);

2666 
πx
 
gí_iwmmxt_wmulwsmr
 (rtx,Ñtx,Ñtx);

2667 
πx
 
gí_iwmmxt_wmulwumr
 (rtx,Ñtx,Ñtx);

2668 
πx
 
gí_iwmmxt_wmulwl
 (rtx,Ñtx,Ñtx);

2669 
πx
 
gí_iwmmxt_wqmulm
 (rtx,Ñtx,Ñtx);

2670 
πx
 
gí_iwmmxt_wqmulwm
 (rtx,Ñtx,Ñtx);

2671 
πx
 
gí_iwmmxt_wqmulmr
 (rtx,Ñtx,Ñtx);

2672 
πx
 
gí_iwmmxt_wqmulwmr
 (rtx,Ñtx,Ñtx);

2673 
πx
 
gí_iwmmxt_waddbhusm
 (rtx,Ñtx,Ñtx);

2674 
πx
 
gí_iwmmxt_waddbhu¶
 (rtx,Ñtx,Ñtx);

2675 
πx
 
gí_iwmmxt_wqmübb
 (rtx,Ñtx,Ñtx,Ñtx);

2676 
πx
 
gí_iwmmxt_wqmübt
 (rtx,Ñtx,Ñtx,Ñtx);

2677 
πx
 
gí_iwmmxt_wqmütb
 (rtx,Ñtx,Ñtx,Ñtx);

2678 
πx
 
gí_iwmmxt_wqmüâ
 (rtx,Ñtx,Ñtx,Ñtx);

2679 
πx
 
gí_iwmmxt_wqmübbn
 (rtx,Ñtx,Ñtx,Ñtx);

2680 
πx
 
gí_iwmmxt_wqmübä
 (rtx,Ñtx,Ñtx,Ñtx);

2681 
πx
 
gí_iwmmxt_wqmütbn
 (rtx,Ñtx,Ñtx,Ñtx);

2682 
πx
 
gí_iwmmxt_wqmüân
 (rtx,Ñtx,Ñtx,Ñtx);

2683 
πx
 
gí_iwmmxt_wmübb
 (rtx,Ñtx,Ñtx,Ñtx);

2684 
πx
 
gí_iwmmxt_wmübt
 (rtx,Ñtx,Ñtx,Ñtx);

2685 
πx
 
gí_iwmmxt_wmütb
 (rtx,Ñtx,Ñtx,Ñtx);

2686 
πx
 
gí_iwmmxt_wmüâ
 (rtx,Ñtx,Ñtx,Ñtx);

2687 
πx
 
gí_iwmmxt_wmübbn
 (rtx,Ñtx,Ñtx,Ñtx);

2688 
πx
 
gí_iwmmxt_wmübä
 (rtx,Ñtx,Ñtx,Ñtx);

2689 
πx
 
gí_iwmmxt_wmütbn
 (rtx,Ñtx,Ñtx,Ñtx);

2690 
πx
 
gí_iwmmxt_wmüân
 (rtx,Ñtx,Ñtx,Ñtx);

2691 
πx
 
gí_iwmmxt_wmüwbb
 (rtx,Ñtx,Ñtx,Ñtx);

2692 
πx
 
gí_iwmmxt_wmüwbt
 (rtx,Ñtx,Ñtx,Ñtx);

2693 
πx
 
gí_iwmmxt_wmüwtb
 (rtx,Ñtx,Ñtx,Ñtx);

2694 
πx
 
gí_iwmmxt_wmüwâ
 (rtx,Ñtx,Ñtx,Ñtx);

2695 
πx
 
gí_iwmmxt_wmüwbbn
 (rtx,Ñtx,Ñtx,Ñtx);

2696 
πx
 
gí_iwmmxt_wmüwbä
 (rtx,Ñtx,Ñtx,Ñtx);

2697 
πx
 
gí_iwmmxt_wmüwtbn
 (rtx,Ñtx,Ñtx,Ñtx);

2698 
πx
 
gí_iwmmxt_wmüwân
 (rtx,Ñtx,Ñtx,Ñtx);

2699 
πx
 
gí_iwmmxt_wmîge
 (rtx,Ñtx,Ñtx,Ñtx);

2700 
πx
 
gí_iwmmxt_èndcv2si3
 ();

2701 
πx
 
gí_iwmmxt_èndcv4hi3
 ();

2702 
πx
 
gí_iwmmxt_èndcv8qi3
 ();

2703 
πx
 
gí_iwmmxt_t‹cv2si3
 ();

2704 
πx
 
gí_iwmmxt_t‹cv4hi3
 ();

2705 
πx
 
gí_iwmmxt_t‹cv8qi3
 ();

2706 
πx
 
gí_iwmmxt_t‹vscv2si3
 ();

2707 
πx
 
gí_iwmmxt_t‹vscv4hi3
 ();

2708 
πx
 
gí_iwmmxt_t‹vscv8qi3
 ();

2709 
πx
 
gí_iwmmxt_ãxåcv2si3
 (rtx);

2710 
πx
 
gí_iwmmxt_ãxåcv4hi3
 (rtx);

2711 
πx
 
gí_iwmmxt_ãxåcv8qi3
 (rtx);

2712 
πx
 
gí_fmasf4
 (rtx,Ñtx,Ñtx,Ñtx);

2713 
πx
 
gí_fmadf4
 (rtx,Ñtx,Ñtx,Ñtx);

2714 
πx
 
gí_exãndhfsf2
 (rtx,Ñtx);

2715 
πx
 
gí_åuncsfhf2
 (rtx,Ñtx);

2716 
πx
 
gí_fixuns_åuncsfsi2
 (rtx,Ñtx);

2717 
πx
 
gí_fixuns_åuncdfsi2
 (rtx,Ñtx);

2718 
πx
 
gí_Êﬂtunssisf2
 (rtx,Ñtx);

2719 
πx
 
gí_Êﬂtunssidf2
 (rtx,Ñtx);

2720 
πx
 
gí_båuncsf2
 (rtx,Ñtx);

2721 
πx
 
gí_˚ûsf2
 (rtx,Ñtx);

2722 
πx
 
gí_Êo‹sf2
 (rtx,Ñtx);

2723 
πx
 
gí_√¨byötsf2
 (rtx,Ñtx);

2724 
πx
 
gí_rötsf2
 (rtx,Ñtx);

2725 
πx
 
gí_roundsf2
 (rtx,Ñtx);

2726 
πx
 
gí_båuncdf2
 (rtx,Ñtx);

2727 
πx
 
gí_˚ûdf2
 (rtx,Ñtx);

2728 
πx
 
gí_Êo‹df2
 (rtx,Ñtx);

2729 
πx
 
gí_√¨byötdf2
 (rtx,Ñtx);

2730 
πx
 
gí_rötdf2
 (rtx,Ñtx);

2731 
πx
 
gí_rounddf2
 (rtx,Ñtx);

2732 
πx
 
gí_smaxsf3
 (rtx,Ñtx,Ñtx);

2733 
πx
 
gí_smaxdf3
 (rtx,Ñtx,Ñtx);

2734 
πx
 
gí_smösf3
 (rtx,Ñtx,Ñtx);

2735 
πx
 
gí_smödf3
 (rtx,Ñtx,Ñtx);

2736 
πx
 
gí_thumb1_subsi3_ö¢
 (rtx,Ñtx,Ñtx);

2737 
πx
 
gí_thumb1_bicsi3
 (rtx,Ñtx,Ñtx);

2738 
πx
 
gí_thumb1_exãndhisi2
 (rtx,Ñtx);

2739 
πx
 
gí_thumb1_exãndqisi2
 (rtx,Ñtx);

2740 
πx
 
gí_movmem12b
 (rtx,Ñtx,Ñtx,Ñtx);

2741 
πx
 
gí_movmem8b
 (rtx,Ñtx,Ñtx,Ñtx);

2742 
πx
 
gí_cbønchsi4_ö¢
 (rtx,Ñtx,Ñtx,Ñtx);

2743 
πx
 
gí_cbønchsi4_s¸©ch
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

2744 
πx
 
gí_c°‹esi_∆tu_thumb1
 (rtx,Ñtx,Ñtx);

2745 
πx
 
gí_c°‹esi_…u_thumb1
 (rtx,Ñtx,Ñtx);

2746 
πx
 
gí_thumb1_addsi3_addgeu
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

2747 
πx
 
gí_thumb1_ˇ£si_di•©ch
 (rtx);

2748 
πx
 
gí_¥ﬁogue_thumb1_öãrw‹k
 ();

2749 
πx
 
gí_thumb_eh_ªtu∫
 (rtx);

2750 
πx
 
gí_és_lﬂd_dŸ_∂us_four
 (rtx,Ñtx,Ñtx,Ñtx);

2751 
πx
 
gí_thumb2_zîo_exãndqisi2_v6
 (rtx,Ñtx);

2752 
πx
 
gí_thumb2_ˇ£si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2753 
πx
 
gí_thumb2_ˇ£si_öã∫Æ_pic
 (rtx,Ñtx,Ñtx,Ñtx);

2754 
πx
 
gí_thumb2_eh_ªtu∫
 (rtx);

2755 
πx
 
gí_thumb2_addsi3_com∑ª0
 (rtx,Ñtx,Ñtx);

2756 
πx
 
gí_vec_£tv8qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2757 
πx
 
gí_vec_£tv4hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2758 
πx
 
gí_vec_£tv2si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2759 
πx
 
gí_vec_£tv2sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2760 
πx
 
gí_vec_£tv16qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2761 
πx
 
gí_vec_£tv8hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2762 
πx
 
gí_vec_£tv4si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2763 
πx
 
gí_vec_£tv4sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2764 
πx
 
gí_vec_£tv2di_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

2765 
πx
 
gí_vec_exåa˘v8qi
 (rtx,Ñtx,Ñtx);

2766 
πx
 
gí_vec_exåa˘v4hi
 (rtx,Ñtx,Ñtx);

2767 
πx
 
gí_vec_exåa˘v2si
 (rtx,Ñtx,Ñtx);

2768 
πx
 
gí_vec_exåa˘v2sf
 (rtx,Ñtx,Ñtx);

2769 
πx
 
gí_vec_exåa˘v16qi
 (rtx,Ñtx,Ñtx);

2770 
πx
 
gí_vec_exåa˘v8hi
 (rtx,Ñtx,Ñtx);

2771 
πx
 
gí_vec_exåa˘v4si
 (rtx,Ñtx,Ñtx);

2772 
πx
 
gí_vec_exåa˘v4sf
 (rtx,Ñtx,Ñtx);

2773 
πx
 
gí_vec_exåa˘v2di
 (rtx,Ñtx,Ñtx);

2774 
πx
 
gí_adddi3_√⁄
 (rtx,Ñtx,Ñtx);

2775 
πx
 
gí_subdi3_√⁄
 (rtx,Ñtx,Ñtx);

2776 
πx
 
gí_mulv8qi3addv8qi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2777 
πx
 
gí_mulv16qi3addv16qi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2778 
πx
 
gí_mulv4hi3addv4hi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2779 
πx
 
gí_mulv8hi3addv8hi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2780 
πx
 
gí_mulv2si3addv2si_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2781 
πx
 
gí_mulv4si3addv4si_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2782 
πx
 
gí_mulv2sf3addv2sf_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2783 
πx
 
gí_mulv4sf3addv4sf_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2784 
πx
 
gí_mulv8qi3√gv8qüddv8qi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2785 
πx
 
gí_mulv16qi3√gv16qüddv16qi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2786 
πx
 
gí_mulv4hi3√gv4hüddv4hi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2787 
πx
 
gí_mulv8hi3√gv8hüddv8hi_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2788 
πx
 
gí_mulv2si3√gv2süddv2si_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2789 
πx
 
gí_mulv4si3√gv4süddv4si_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2790 
πx
 
gí_mulv2sf3√gv2sÁddv2sf_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2791 
πx
 
gí_mulv4sf3√gv4sÁddv4sf_√⁄
 (rtx,Ñtx,Ñtx,Ñtx);

2792 
πx
 
gí_fmav2sf4
 (rtx,Ñtx,Ñtx,Ñtx);

2793 
πx
 
gí_fmav4sf4
 (rtx,Ñtx,Ñtx,Ñtx);

2794 
πx
 
gí_fmav2sf4_öåösic
 (rtx,Ñtx,Ñtx,Ñtx);

2795 
πx
 
gí_fmav4sf4_öåösic
 (rtx,Ñtx,Ñtx,Ñtx);

2796 
πx
 
gí_fmsubv2sf4_öåösic
 (rtx,Ñtx,Ñtx,Ñtx);

2797 
πx
 
gí_fmsubv4sf4_öåösic
 (rtx,Ñtx,Ñtx,Ñtx);

2798 
πx
 
gí_√⁄_vröçv2sf
 (rtx,Ñtx);

2799 
πx
 
gí_√⁄_vrötzv2sf
 (rtx,Ñtx);

2800 
πx
 
gí_√⁄_vrötmv2sf
 (rtx,Ñtx);

2801 
πx
 
gí_√⁄_vrötxv2sf
 (rtx,Ñtx);

2802 
πx
 
gí_√⁄_vröèv2sf
 (rtx,Ñtx);

2803 
πx
 
gí_√⁄_vröäv2sf
 (rtx,Ñtx);

2804 
πx
 
gí_√⁄_vröçv4sf
 (rtx,Ñtx);

2805 
πx
 
gí_√⁄_vrötzv4sf
 (rtx,Ñtx);

2806 
πx
 
gí_√⁄_vrötmv4sf
 (rtx,Ñtx);

2807 
πx
 
gí_√⁄_vrötxv4sf
 (rtx,Ñtx);

2808 
πx
 
gí_√⁄_vröèv4sf
 (rtx,Ñtx);

2809 
πx
 
gí_√⁄_vröäv4sf
 (rtx,Ñtx);

2810 
πx
 
gí_i‹v8qi3
 (rtx,Ñtx,Ñtx);

2811 
πx
 
gí_i‹v16qi3
 (rtx,Ñtx,Ñtx);

2812 
πx
 
gí_i‹v4hi3
 (rtx,Ñtx,Ñtx);

2813 
πx
 
gí_i‹v8hi3
 (rtx,Ñtx,Ñtx);

2814 
πx
 
gí_i‹v2si3
 (rtx,Ñtx,Ñtx);

2815 
πx
 
gí_i‹v4si3
 (rtx,Ñtx,Ñtx);

2816 
πx
 
gí_i‹v2sf3
 (rtx,Ñtx,Ñtx);

2817 
πx
 
gí_i‹v4sf3
 (rtx,Ñtx,Ñtx);

2818 
πx
 
gí_i‹v2di3
 (rtx,Ñtx,Ñtx);

2819 
πx
 
gí_™dv8qi3
 (rtx,Ñtx,Ñtx);

2820 
πx
 
gí_™dv16qi3
 (rtx,Ñtx,Ñtx);

2821 
πx
 
gí_™dv4hi3
 (rtx,Ñtx,Ñtx);

2822 
πx
 
gí_™dv8hi3
 (rtx,Ñtx,Ñtx);

2823 
πx
 
gí_™dv2si3
 (rtx,Ñtx,Ñtx);

2824 
πx
 
gí_™dv4si3
 (rtx,Ñtx,Ñtx);

2825 
πx
 
gí_™dv2sf3
 (rtx,Ñtx,Ñtx);

2826 
πx
 
gí_™dv4sf3
 (rtx,Ñtx,Ñtx);

2827 
πx
 
gí_™dv2di3
 (rtx,Ñtx,Ñtx);

2828 
πx
 
gí_‹nv8qi3_√⁄
 (rtx,Ñtx,Ñtx);

2829 
πx
 
gí_‹nv16qi3_√⁄
 (rtx,Ñtx,Ñtx);

2830 
πx
 
gí_‹nv4hi3_√⁄
 (rtx,Ñtx,Ñtx);

2831 
πx
 
gí_‹nv8hi3_√⁄
 (rtx,Ñtx,Ñtx);

2832 
πx
 
gí_‹nv2si3_√⁄
 (rtx,Ñtx,Ñtx);

2833 
πx
 
gí_‹nv4si3_√⁄
 (rtx,Ñtx,Ñtx);

2834 
πx
 
gí_‹nv2sf3_√⁄
 (rtx,Ñtx,Ñtx);

2835 
πx
 
gí_‹nv4sf3_√⁄
 (rtx,Ñtx,Ñtx);

2836 
πx
 
gí_‹nv2di3_√⁄
 (rtx,Ñtx,Ñtx);

2837 
πx
 
gí_‹ndi3_√⁄
 (rtx,Ñtx,Ñtx);

2838 
πx
 
gí_bicv8qi3_√⁄
 (rtx,Ñtx,Ñtx);

2839 
πx
 
gí_bicv16qi3_√⁄
 (rtx,Ñtx,Ñtx);

2840 
πx
 
gí_bicv4hi3_√⁄
 (rtx,Ñtx,Ñtx);

2841 
πx
 
gí_bicv8hi3_√⁄
 (rtx,Ñtx,Ñtx);

2842 
πx
 
gí_bicv2si3_√⁄
 (rtx,Ñtx,Ñtx);

2843 
πx
 
gí_bicv4si3_√⁄
 (rtx,Ñtx,Ñtx);

2844 
πx
 
gí_bicv2sf3_√⁄
 (rtx,Ñtx,Ñtx);

2845 
πx
 
gí_bicv4sf3_√⁄
 (rtx,Ñtx,Ñtx);

2846 
πx
 
gí_bicv2di3_√⁄
 (rtx,Ñtx,Ñtx);

2847 
πx
 
gí_bicdi3_√⁄
 (rtx,Ñtx,Ñtx);

2848 
πx
 
gí_x‹v8qi3
 (rtx,Ñtx,Ñtx);

2849 
πx
 
gí_x‹v16qi3
 (rtx,Ñtx,Ñtx);

2850 
πx
 
gí_x‹v4hi3
 (rtx,Ñtx,Ñtx);

2851 
πx
 
gí_x‹v8hi3
 (rtx,Ñtx,Ñtx);

2852 
πx
 
gí_x‹v2si3
 (rtx,Ñtx,Ñtx);

2853 
πx
 
gí_x‹v4si3
 (rtx,Ñtx,Ñtx);

2854 
πx
 
gí_x‹v2sf3
 (rtx,Ñtx,Ñtx);

2855 
πx
 
gí_x‹v4sf3
 (rtx,Ñtx,Ñtx);

2856 
πx
 
gí_x‹v2di3
 (rtx,Ñtx,Ñtx);

2857 
πx
 
gí_⁄e_cm∂v8qi2
 (rtx,Ñtx);

2858 
πx
 
gí_⁄e_cm∂v16qi2
 (rtx,Ñtx);

2859 
πx
 
gí_⁄e_cm∂v4hi2
 (rtx,Ñtx);

2860 
πx
 
gí_⁄e_cm∂v8hi2
 (rtx,Ñtx);

2861 
πx
 
gí_⁄e_cm∂v2si2
 (rtx,Ñtx);

2862 
πx
 
gí_⁄e_cm∂v4si2
 (rtx,Ñtx);

2863 
πx
 
gí_⁄e_cm∂v2sf2
 (rtx,Ñtx);

2864 
πx
 
gí_⁄e_cm∂v4sf2
 (rtx,Ñtx);

2865 
πx
 
gí_⁄e_cm∂v2di2
 (rtx,Ñtx);

2866 
πx
 
gí_absv8qi2
 (rtx,Ñtx);

2867 
πx
 
gí_absv16qi2
 (rtx,Ñtx);

2868 
πx
 
gí_absv4hi2
 (rtx,Ñtx);

2869 
πx
 
gí_absv8hi2
 (rtx,Ñtx);

2870 
πx
 
gí_absv2si2
 (rtx,Ñtx);

2871 
πx
 
gí_absv4si2
 (rtx,Ñtx);

2872 
πx
 
gí_absv2sf2
 (rtx,Ñtx);

2873 
πx
 
gí_absv4sf2
 (rtx,Ñtx);

2874 
πx
 
gí_√gv8qi2
 (rtx,Ñtx);

2875 
πx
 
gí_√gv16qi2
 (rtx,Ñtx);

2876 
πx
 
gí_√gv4hi2
 (rtx,Ñtx);

2877 
πx
 
gí_√gv8hi2
 (rtx,Ñtx);

2878 
πx
 
gí_√gv2si2
 (rtx,Ñtx);

2879 
πx
 
gí_√gv4si2
 (rtx,Ñtx);

2880 
πx
 
gí_√gv2sf2
 (rtx,Ñtx);

2881 
πx
 
gí_√gv4sf2
 (rtx,Ñtx);

2882 
πx
 
gí_√gdi2_√⁄
 (rtx,Ñtx);

2883 
πx
 
gí_vashlv8qi3
 (rtx,Ñtx,Ñtx);

2884 
πx
 
gí_vashlv16qi3
 (rtx,Ñtx,Ñtx);

2885 
πx
 
gí_vashlv4hi3
 (rtx,Ñtx,Ñtx);

2886 
πx
 
gí_vashlv8hi3
 (rtx,Ñtx,Ñtx);

2887 
πx
 
gí_vashlv2si3
 (rtx,Ñtx,Ñtx);

2888 
πx
 
gí_vashlv4si3
 (rtx,Ñtx,Ñtx);

2889 
πx
 
gí_vashrv8qi3_imm
 (rtx,Ñtx,Ñtx);

2890 
πx
 
gí_vashrv16qi3_imm
 (rtx,Ñtx,Ñtx);

2891 
πx
 
gí_vashrv4hi3_imm
 (rtx,Ñtx,Ñtx);

2892 
πx
 
gí_vashrv8hi3_imm
 (rtx,Ñtx,Ñtx);

2893 
πx
 
gí_vashrv2si3_imm
 (rtx,Ñtx,Ñtx);

2894 
πx
 
gí_vashrv4si3_imm
 (rtx,Ñtx,Ñtx);

2895 
πx
 
gí_vlshrv8qi3_imm
 (rtx,Ñtx,Ñtx);

2896 
πx
 
gí_vlshrv16qi3_imm
 (rtx,Ñtx,Ñtx);

2897 
πx
 
gí_vlshrv4hi3_imm
 (rtx,Ñtx,Ñtx);

2898 
πx
 
gí_vlshrv8hi3_imm
 (rtx,Ñtx,Ñtx);

2899 
πx
 
gí_vlshrv2si3_imm
 (rtx,Ñtx,Ñtx);

2900 
πx
 
gí_vlshrv4si3_imm
 (rtx,Ñtx,Ñtx);

2901 
πx
 
gí_ashlv8qi3_sig√d
 (rtx,Ñtx,Ñtx);

2902 
πx
 
gí_ashlv16qi3_sig√d
 (rtx,Ñtx,Ñtx);

2903 
πx
 
gí_ashlv4hi3_sig√d
 (rtx,Ñtx,Ñtx);

2904 
πx
 
gí_ashlv8hi3_sig√d
 (rtx,Ñtx,Ñtx);

2905 
πx
 
gí_ashlv2si3_sig√d
 (rtx,Ñtx,Ñtx);

2906 
πx
 
gí_ashlv4si3_sig√d
 (rtx,Ñtx,Ñtx);

2907 
πx
 
gí_ashlv2di3_sig√d
 (rtx,Ñtx,Ñtx);

2908 
πx
 
gí_ashlv8qi3_unsig√d
 (rtx,Ñtx,Ñtx);

2909 
πx
 
gí_ashlv16qi3_unsig√d
 (rtx,Ñtx,Ñtx);

2910 
πx
 
gí_ashlv4hi3_unsig√d
 (rtx,Ñtx,Ñtx);

2911 
πx
 
gí_ashlv8hi3_unsig√d
 (rtx,Ñtx,Ñtx);

2912 
πx
 
gí_ashlv2si3_unsig√d
 (rtx,Ñtx,Ñtx);

2913 
πx
 
gí_ashlv4si3_unsig√d
 (rtx,Ñtx,Ñtx);

2914 
πx
 
gí_ashlv2di3_unsig√d
 (rtx,Ñtx,Ñtx);

2915 
πx
 
gí_√⁄_lﬂd_cou¡
 (rtx,Ñtx);

2916 
πx
 
gí_ashldi3_√⁄_no˛obbî
 (rtx,Ñtx,Ñtx);

2917 
πx
 
gí_ashldi3_√⁄
 (rtx,Ñtx,Ñtx);

2918 
πx
 
gí_sig√d_shi·_di3_√⁄
 (rtx,Ñtx,Ñtx);

2919 
πx
 
gí_unsig√d_shi·_di3_√⁄
 (rtx,Ñtx,Ñtx);

2920 
πx
 
gí_ashrdi3_√⁄_imm_no˛obbî
 (rtx,Ñtx,Ñtx);

2921 
πx
 
gí_lshrdi3_√⁄_imm_no˛obbî
 (rtx,Ñtx,Ñtx);

2922 
πx
 
gí_ashrdi3_√⁄
 (rtx,Ñtx,Ñtx);

2923 
πx
 
gí_lshrdi3_√⁄
 (rtx,Ñtx,Ñtx);

2924 
πx
 
gí_widí_ssumv8qi3
 (rtx,Ñtx,Ñtx);

2925 
πx
 
gí_widí_ssumv4hi3
 (rtx,Ñtx,Ñtx);

2926 
πx
 
gí_widí_ssumv2si3
 (rtx,Ñtx,Ñtx);

2927 
πx
 
gí_widí_usumv8qi3
 (rtx,Ñtx,Ñtx);

2928 
πx
 
gí_widí_usumv4hi3
 (rtx,Ñtx,Ñtx);

2929 
πx
 
gí_widí_usumv2si3
 (rtx,Ñtx,Ñtx);

2930 
πx
 
gí_quad_hÆves_∂usv4si
 (rtx,Ñtx);

2931 
πx
 
gí_quad_hÆves_smöv4si
 (rtx,Ñtx);

2932 
πx
 
gí_quad_hÆves_smaxv4si
 (rtx,Ñtx);

2933 
πx
 
gí_quad_hÆves_umöv4si
 (rtx,Ñtx);

2934 
πx
 
gí_quad_hÆves_umaxv4si
 (rtx,Ñtx);

2935 
πx
 
gí_quad_hÆves_∂usv4sf
 (rtx,Ñtx);

2936 
πx
 
gí_quad_hÆves_smöv4sf
 (rtx,Ñtx);

2937 
πx
 
gí_quad_hÆves_smaxv4sf
 (rtx,Ñtx);

2938 
πx
 
gí_quad_hÆves_∂usv8hi
 (rtx,Ñtx);

2939 
πx
 
gí_quad_hÆves_smöv8hi
 (rtx,Ñtx);

2940 
πx
 
gí_quad_hÆves_smaxv8hi
 (rtx,Ñtx);

2941 
πx
 
gí_quad_hÆves_umöv8hi
 (rtx,Ñtx);

2942 
πx
 
gí_quad_hÆves_umaxv8hi
 (rtx,Ñtx);

2943 
πx
 
gí_quad_hÆves_∂usv16qi
 (rtx,Ñtx);

2944 
πx
 
gí_quad_hÆves_smöv16qi
 (rtx,Ñtx);

2945 
πx
 
gí_quad_hÆves_smaxv16qi
 (rtx,Ñtx);

2946 
πx
 
gí_quad_hÆves_umöv16qi
 (rtx,Ñtx);

2947 
πx
 
gí_quad_hÆves_umaxv16qi
 (rtx,Ñtx);

2948 
πx
 
gí_ªduc_•lus_v2di
 (rtx,Ñtx);

2949 
πx
 
gí_√⁄_v∑dd_öã∫Æv8qi
 (rtx,Ñtx,Ñtx);

2950 
πx
 
gí_√⁄_v∑dd_öã∫Æv4hi
 (rtx,Ñtx,Ñtx);

2951 
πx
 
gí_√⁄_v∑dd_öã∫Æv2si
 (rtx,Ñtx,Ñtx);

2952 
πx
 
gí_√⁄_v∑dd_öã∫Æv2sf
 (rtx,Ñtx,Ñtx);

2953 
πx
 
gí_√⁄_vpsmöv8qi
 (rtx,Ñtx,Ñtx);

2954 
πx
 
gí_√⁄_vpsmöv4hi
 (rtx,Ñtx,Ñtx);

2955 
πx
 
gí_√⁄_vpsmöv2si
 (rtx,Ñtx,Ñtx);

2956 
πx
 
gí_√⁄_vpsmöv2sf
 (rtx,Ñtx,Ñtx);

2957 
πx
 
gí_√⁄_vpsmaxv8qi
 (rtx,Ñtx,Ñtx);

2958 
πx
 
gí_√⁄_vpsmaxv4hi
 (rtx,Ñtx,Ñtx);

2959 
πx
 
gí_√⁄_vpsmaxv2si
 (rtx,Ñtx,Ñtx);

2960 
πx
 
gí_√⁄_vpsmaxv2sf
 (rtx,Ñtx,Ñtx);

2961 
πx
 
gí_√⁄_vpumöv8qi
 (rtx,Ñtx,Ñtx);

2962 
πx
 
gí_√⁄_vpumöv4hi
 (rtx,Ñtx,Ñtx);

2963 
πx
 
gí_√⁄_vpumöv2si
 (rtx,Ñtx,Ñtx);

2964 
πx
 
gí_√⁄_vpumaxv8qi
 (rtx,Ñtx,Ñtx);

2965 
πx
 
gí_√⁄_vpumaxv4hi
 (rtx,Ñtx,Ñtx);

2966 
πx
 
gí_√⁄_vpumaxv2si
 (rtx,Ñtx,Ñtx);

2967 
πx
 
gí_√⁄_vaddv8qi_un•ec
 (rtx,Ñtx,Ñtx);

2968 
πx
 
gí_√⁄_vaddv16qi_un•ec
 (rtx,Ñtx,Ñtx);

2969 
πx
 
gí_√⁄_vaddv4hi_un•ec
 (rtx,Ñtx,Ñtx);

2970 
πx
 
gí_√⁄_vaddv8hi_un•ec
 (rtx,Ñtx,Ñtx);

2971 
πx
 
gí_√⁄_vaddv2si_un•ec
 (rtx,Ñtx,Ñtx);

2972 
πx
 
gí_√⁄_vaddv4si_un•ec
 (rtx,Ñtx,Ñtx);

2973 
πx
 
gí_√⁄_vaddv2sf_un•ec
 (rtx,Ñtx,Ñtx);

2974 
πx
 
gí_√⁄_vaddv4sf_un•ec
 (rtx,Ñtx,Ñtx);

2975 
πx
 
gí_√⁄_vadddi_un•ec
 (rtx,Ñtx,Ñtx);

2976 
πx
 
gí_√⁄_vaddv2di_un•ec
 (rtx,Ñtx,Ñtx);

2977 
πx
 
gí_√⁄_vaddlv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

2978 
πx
 
gí_√⁄_vaddlv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

2979 
πx
 
gí_√⁄_vaddlv2si
 (rtx,Ñtx,Ñtx,Ñtx);

2980 
πx
 
gí_√⁄_vaddwv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

2981 
πx
 
gí_√⁄_vaddwv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

2982 
πx
 
gí_√⁄_vaddwv2si
 (rtx,Ñtx,Ñtx,Ñtx);

2983 
πx
 
gí_√⁄_vhaddv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

2984 
πx
 
gí_√⁄_vhaddv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

2985 
πx
 
gí_√⁄_vhaddv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

2986 
πx
 
gí_√⁄_vhaddv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

2987 
πx
 
gí_√⁄_vhaddv2si
 (rtx,Ñtx,Ñtx,Ñtx);

2988 
πx
 
gí_√⁄_vhaddv4si
 (rtx,Ñtx,Ñtx,Ñtx);

2989 
πx
 
gí_√⁄_vqaddv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

2990 
πx
 
gí_√⁄_vqaddv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

2991 
πx
 
gí_√⁄_vqaddv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

2992 
πx
 
gí_√⁄_vqaddv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

2993 
πx
 
gí_√⁄_vqaddv2si
 (rtx,Ñtx,Ñtx,Ñtx);

2994 
πx
 
gí_√⁄_vqaddv4si
 (rtx,Ñtx,Ñtx,Ñtx);

2995 
πx
 
gí_√⁄_vqadddi
 (rtx,Ñtx,Ñtx,Ñtx);

2996 
πx
 
gí_√⁄_vqaddv2di
 (rtx,Ñtx,Ñtx,Ñtx);

2997 
πx
 
gí_√⁄_vaddhnv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

2998 
πx
 
gí_√⁄_vaddhnv4si
 (rtx,Ñtx,Ñtx,Ñtx);

2999 
πx
 
gí_√⁄_vaddhnv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3000 
πx
 
gí_√⁄_vmulv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3001 
πx
 
gí_√⁄_vmulv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3002 
πx
 
gí_√⁄_vmulv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3003 
πx
 
gí_√⁄_vmulv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3004 
πx
 
gí_√⁄_vmulv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3005 
πx
 
gí_√⁄_vmulv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3006 
πx
 
gí_√⁄_vmulv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3007 
πx
 
gí_√⁄_vmulv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3008 
πx
 
gí_√⁄_vmœv8qi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3009 
πx
 
gí_√⁄_vmœv16qi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3010 
πx
 
gí_√⁄_vmœv4hi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3011 
πx
 
gí_√⁄_vmœv8hi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3012 
πx
 
gí_√⁄_vmœv2si_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3013 
πx
 
gí_√⁄_vmœv4si_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3014 
πx
 
gí_√⁄_vmœv2sf_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3015 
πx
 
gí_√⁄_vmœv4sf_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3016 
πx
 
gí_√⁄_vmœlv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3017 
πx
 
gí_√⁄_vmœlv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3018 
πx
 
gí_√⁄_vmœlv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3019 
πx
 
gí_√⁄_vmlsv8qi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3020 
πx
 
gí_√⁄_vmlsv16qi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3021 
πx
 
gí_√⁄_vmlsv4hi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3022 
πx
 
gí_√⁄_vmlsv8hi_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3023 
πx
 
gí_√⁄_vmlsv2si_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3024 
πx
 
gí_√⁄_vmlsv4si_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3025 
πx
 
gí_√⁄_vmlsv2sf_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3026 
πx
 
gí_√⁄_vmlsv4sf_un•ec
 (rtx,Ñtx,Ñtx,Ñtx);

3027 
πx
 
gí_√⁄_vml¶v8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3028 
πx
 
gí_√⁄_vml¶v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3029 
πx
 
gí_√⁄_vml¶v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3030 
πx
 
gí_√⁄_vqdmulhv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3031 
πx
 
gí_√⁄_vqdmulhv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3032 
πx
 
gí_√⁄_vqdmulhv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3033 
πx
 
gí_√⁄_vqdmulhv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3034 
πx
 
gí_√⁄_vqdmœlv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3035 
πx
 
gí_√⁄_vqdmœlv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3036 
πx
 
gí_√⁄_vqdml¶v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3037 
πx
 
gí_√⁄_vqdml¶v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3038 
πx
 
gí_√⁄_vmuŒv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3039 
πx
 
gí_√⁄_vmuŒv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3040 
πx
 
gí_√⁄_vmuŒv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3041 
πx
 
gí_√⁄_vqdmuŒv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3042 
πx
 
gí_√⁄_vqdmuŒv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3043 
πx
 
gí_√⁄_vsubv8qi_un•ec
 (rtx,Ñtx,Ñtx);

3044 
πx
 
gí_√⁄_vsubv16qi_un•ec
 (rtx,Ñtx,Ñtx);

3045 
πx
 
gí_√⁄_vsubv4hi_un•ec
 (rtx,Ñtx,Ñtx);

3046 
πx
 
gí_√⁄_vsubv8hi_un•ec
 (rtx,Ñtx,Ñtx);

3047 
πx
 
gí_√⁄_vsubv2si_un•ec
 (rtx,Ñtx,Ñtx);

3048 
πx
 
gí_√⁄_vsubv4si_un•ec
 (rtx,Ñtx,Ñtx);

3049 
πx
 
gí_√⁄_vsubv2sf_un•ec
 (rtx,Ñtx,Ñtx);

3050 
πx
 
gí_√⁄_vsubv4sf_un•ec
 (rtx,Ñtx,Ñtx);

3051 
πx
 
gí_√⁄_vsubdi_un•ec
 (rtx,Ñtx,Ñtx);

3052 
πx
 
gí_√⁄_vsubv2di_un•ec
 (rtx,Ñtx,Ñtx);

3053 
πx
 
gí_√⁄_vsublv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3054 
πx
 
gí_√⁄_vsublv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3055 
πx
 
gí_√⁄_vsublv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3056 
πx
 
gí_√⁄_vsubwv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3057 
πx
 
gí_√⁄_vsubwv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3058 
πx
 
gí_√⁄_vsubwv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3059 
πx
 
gí_√⁄_vqsubv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3060 
πx
 
gí_√⁄_vqsubv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3061 
πx
 
gí_√⁄_vqsubv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3062 
πx
 
gí_√⁄_vqsubv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3063 
πx
 
gí_√⁄_vqsubv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3064 
πx
 
gí_√⁄_vqsubv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3065 
πx
 
gí_√⁄_vqsubdi
 (rtx,Ñtx,Ñtx,Ñtx);

3066 
πx
 
gí_√⁄_vqsubv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3067 
πx
 
gí_√⁄_vhsubv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3068 
πx
 
gí_√⁄_vhsubv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3069 
πx
 
gí_√⁄_vhsubv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3070 
πx
 
gí_√⁄_vhsubv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3071 
πx
 
gí_√⁄_vhsubv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3072 
πx
 
gí_√⁄_vhsubv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3073 
πx
 
gí_√⁄_vsubhnv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3074 
πx
 
gí_√⁄_vsubhnv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3075 
πx
 
gí_√⁄_vsubhnv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3076 
πx
 
gí_√⁄_v˚qv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3077 
πx
 
gí_√⁄_v˚qv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3078 
πx
 
gí_√⁄_v˚qv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3079 
πx
 
gí_√⁄_v˚qv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3080 
πx
 
gí_√⁄_v˚qv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3081 
πx
 
gí_√⁄_v˚qv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3082 
πx
 
gí_√⁄_v˚qv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3083 
πx
 
gí_√⁄_v˚qv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3084 
πx
 
gí_√⁄_vcgev8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3085 
πx
 
gí_√⁄_vcgev16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3086 
πx
 
gí_√⁄_vcgev4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3087 
πx
 
gí_√⁄_vcgev8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3088 
πx
 
gí_√⁄_vcgev2si
 (rtx,Ñtx,Ñtx,Ñtx);

3089 
πx
 
gí_√⁄_vcgev4si
 (rtx,Ñtx,Ñtx,Ñtx);

3090 
πx
 
gí_√⁄_vcgev2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3091 
πx
 
gí_√⁄_vcgev4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3092 
πx
 
gí_√⁄_vcgeuv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3093 
πx
 
gí_√⁄_vcgeuv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3094 
πx
 
gí_√⁄_vcgeuv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3095 
πx
 
gí_√⁄_vcgeuv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3096 
πx
 
gí_√⁄_vcgeuv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3097 
πx
 
gí_√⁄_vcgeuv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3098 
πx
 
gí_√⁄_vcgtv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3099 
πx
 
gí_√⁄_vcgtv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3100 
πx
 
gí_√⁄_vcgtv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3101 
πx
 
gí_√⁄_vcgtv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3102 
πx
 
gí_√⁄_vcgtv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3103 
πx
 
gí_√⁄_vcgtv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3104 
πx
 
gí_√⁄_vcgtv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3105 
πx
 
gí_√⁄_vcgtv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3106 
πx
 
gí_√⁄_vcgtuv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3107 
πx
 
gí_√⁄_vcgtuv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3108 
πx
 
gí_√⁄_vcgtuv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3109 
πx
 
gí_√⁄_vcgtuv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3110 
πx
 
gí_√⁄_vcgtuv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3111 
πx
 
gí_√⁄_vcgtuv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3112 
πx
 
gí_√⁄_v˛ev8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3113 
πx
 
gí_√⁄_v˛ev16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3114 
πx
 
gí_√⁄_v˛ev4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3115 
πx
 
gí_√⁄_v˛ev8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3116 
πx
 
gí_√⁄_v˛ev2si
 (rtx,Ñtx,Ñtx,Ñtx);

3117 
πx
 
gí_√⁄_v˛ev4si
 (rtx,Ñtx,Ñtx,Ñtx);

3118 
πx
 
gí_√⁄_v˛ev2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3119 
πx
 
gí_√⁄_v˛ev4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3120 
πx
 
gí_√⁄_v˛tv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3121 
πx
 
gí_√⁄_v˛tv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3122 
πx
 
gí_√⁄_v˛tv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3123 
πx
 
gí_√⁄_v˛tv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3124 
πx
 
gí_√⁄_v˛tv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3125 
πx
 
gí_√⁄_v˛tv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3126 
πx
 
gí_√⁄_v˛tv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3127 
πx
 
gí_√⁄_v˛tv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3128 
πx
 
gí_√⁄_vˇgev2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3129 
πx
 
gí_√⁄_vˇgev4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3130 
πx
 
gí_√⁄_vˇgtv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3131 
πx
 
gí_√⁄_vˇgtv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3132 
πx
 
gí_√⁄_vt°v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3133 
πx
 
gí_√⁄_vt°v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3134 
πx
 
gí_√⁄_vt°v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3135 
πx
 
gí_√⁄_vt°v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3136 
πx
 
gí_√⁄_vt°v2si
 (rtx,Ñtx,Ñtx,Ñtx);

3137 
πx
 
gí_√⁄_vt°v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3138 
πx
 
gí_√⁄_vabdv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3139 
πx
 
gí_√⁄_vabdv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3140 
πx
 
gí_√⁄_vabdv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3141 
πx
 
gí_√⁄_vabdv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3142 
πx
 
gí_√⁄_vabdv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3143 
πx
 
gí_√⁄_vabdv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3144 
πx
 
gí_√⁄_vabdv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3145 
πx
 
gí_√⁄_vabdv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3146 
πx
 
gí_√⁄_vabdlv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3147 
πx
 
gí_√⁄_vabdlv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3148 
πx
 
gí_√⁄_vabdlv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3149 
πx
 
gí_√⁄_vabav8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3150 
πx
 
gí_√⁄_vabav16qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3151 
πx
 
gí_√⁄_vabav4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3152 
πx
 
gí_√⁄_vabav8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3153 
πx
 
gí_√⁄_vabav2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3154 
πx
 
gí_√⁄_vabav4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3155 
πx
 
gí_√⁄_vabÆv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3156 
πx
 
gí_√⁄_vabÆv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3157 
πx
 
gí_√⁄_vabÆv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3158 
πx
 
gí_√⁄_vmaxv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3159 
πx
 
gí_√⁄_vmaxv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3160 
πx
 
gí_√⁄_vmaxv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3161 
πx
 
gí_√⁄_vmaxv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3162 
πx
 
gí_√⁄_vmaxv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3163 
πx
 
gí_√⁄_vmaxv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3164 
πx
 
gí_√⁄_vmaxv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3165 
πx
 
gí_√⁄_vmaxv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3166 
πx
 
gí_√⁄_vmöv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3167 
πx
 
gí_√⁄_vmöv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3168 
πx
 
gí_√⁄_vmöv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3169 
πx
 
gí_√⁄_vmöv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3170 
πx
 
gí_√⁄_vmöv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3171 
πx
 
gí_√⁄_vmöv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3172 
πx
 
gí_√⁄_vmöv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3173 
πx
 
gí_√⁄_vmöv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3174 
πx
 
gí_√⁄_v∑ddlv8qi
 (rtx,Ñtx,Ñtx);

3175 
πx
 
gí_√⁄_v∑ddlv16qi
 (rtx,Ñtx,Ñtx);

3176 
πx
 
gí_√⁄_v∑ddlv4hi
 (rtx,Ñtx,Ñtx);

3177 
πx
 
gí_√⁄_v∑ddlv8hi
 (rtx,Ñtx,Ñtx);

3178 
πx
 
gí_√⁄_v∑ddlv2si
 (rtx,Ñtx,Ñtx);

3179 
πx
 
gí_√⁄_v∑ddlv4si
 (rtx,Ñtx,Ñtx);

3180 
πx
 
gí_√⁄_v∑dÆv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3181 
πx
 
gí_√⁄_v∑dÆv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3182 
πx
 
gí_√⁄_v∑dÆv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3183 
πx
 
gí_√⁄_v∑dÆv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3184 
πx
 
gí_√⁄_v∑dÆv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3185 
πx
 
gí_√⁄_v∑dÆv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3186 
πx
 
gí_√⁄_vpmaxv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3187 
πx
 
gí_√⁄_vpmaxv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3188 
πx
 
gí_√⁄_vpmaxv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3189 
πx
 
gí_√⁄_vpmaxv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3190 
πx
 
gí_√⁄_vpmöv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3191 
πx
 
gí_√⁄_vpmöv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3192 
πx
 
gí_√⁄_vpmöv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3193 
πx
 
gí_√⁄_vpmöv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3194 
πx
 
gí_√⁄_vª˝sv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3195 
πx
 
gí_√⁄_vª˝sv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3196 
πx
 
gí_√⁄_vrsqπsv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3197 
πx
 
gí_√⁄_vrsqπsv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3198 
πx
 
gí_√⁄_vqabsv8qi
 (rtx,Ñtx,Ñtx);

3199 
πx
 
gí_√⁄_vqabsv16qi
 (rtx,Ñtx,Ñtx);

3200 
πx
 
gí_√⁄_vqabsv4hi
 (rtx,Ñtx,Ñtx);

3201 
πx
 
gí_√⁄_vqabsv8hi
 (rtx,Ñtx,Ñtx);

3202 
πx
 
gí_√⁄_vqabsv2si
 (rtx,Ñtx,Ñtx);

3203 
πx
 
gí_√⁄_vqabsv4si
 (rtx,Ñtx,Ñtx);

3204 
πx
 
gí_√⁄_vq√gv8qi
 (rtx,Ñtx,Ñtx);

3205 
πx
 
gí_√⁄_vq√gv16qi
 (rtx,Ñtx,Ñtx);

3206 
πx
 
gí_√⁄_vq√gv4hi
 (rtx,Ñtx,Ñtx);

3207 
πx
 
gí_√⁄_vq√gv8hi
 (rtx,Ñtx,Ñtx);

3208 
πx
 
gí_√⁄_vq√gv2si
 (rtx,Ñtx,Ñtx);

3209 
πx
 
gí_√⁄_vq√gv4si
 (rtx,Ñtx,Ñtx);

3210 
πx
 
gí_√⁄_v˛sv8qi
 (rtx,Ñtx,Ñtx);

3211 
πx
 
gí_√⁄_v˛sv16qi
 (rtx,Ñtx,Ñtx);

3212 
πx
 
gí_√⁄_v˛sv4hi
 (rtx,Ñtx,Ñtx);

3213 
πx
 
gí_√⁄_v˛sv8hi
 (rtx,Ñtx,Ñtx);

3214 
πx
 
gí_√⁄_v˛sv2si
 (rtx,Ñtx,Ñtx);

3215 
πx
 
gí_√⁄_v˛sv4si
 (rtx,Ñtx,Ñtx);

3216 
πx
 
gí_˛zv8qi2
 (rtx,Ñtx);

3217 
πx
 
gí_˛zv16qi2
 (rtx,Ñtx);

3218 
πx
 
gí_˛zv4hi2
 (rtx,Ñtx);

3219 
πx
 
gí_˛zv8hi2
 (rtx,Ñtx);

3220 
πx
 
gí_˛zv2si2
 (rtx,Ñtx);

3221 
πx
 
gí_˛zv4si2
 (rtx,Ñtx);

3222 
πx
 
gí_p›cou¡v8qi2
 (rtx,Ñtx);

3223 
πx
 
gí_p›cou¡v16qi2
 (rtx,Ñtx);

3224 
πx
 
gí_√⁄_vª˝ev2si
 (rtx,Ñtx,Ñtx);

3225 
πx
 
gí_√⁄_vª˝ev2sf
 (rtx,Ñtx,Ñtx);

3226 
πx
 
gí_√⁄_vª˝ev4si
 (rtx,Ñtx,Ñtx);

3227 
πx
 
gí_√⁄_vª˝ev4sf
 (rtx,Ñtx,Ñtx);

3228 
πx
 
gí_√⁄_vrsqπev2si
 (rtx,Ñtx,Ñtx);

3229 
πx
 
gí_√⁄_vrsqπev2sf
 (rtx,Ñtx,Ñtx);

3230 
πx
 
gí_√⁄_vrsqπev4si
 (rtx,Ñtx,Ñtx);

3231 
πx
 
gí_√⁄_vrsqπev4sf
 (rtx,Ñtx,Ñtx);

3232 
πx
 
gí_√⁄_vgë_œ√v8qi_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3233 
πx
 
gí_√⁄_vgë_œ√v4hi_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3234 
πx
 
gí_√⁄_vgë_œ√v2si_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3235 
πx
 
gí_√⁄_vgë_œ√v2sf_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3236 
πx
 
gí_√⁄_vgë_œ√v8qi_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3237 
πx
 
gí_√⁄_vgë_œ√v4hi_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3238 
πx
 
gí_√⁄_vgë_œ√v2si_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3239 
πx
 
gí_√⁄_vgë_œ√v2sf_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3240 
πx
 
gí_√⁄_vgë_œ√v16qi_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3241 
πx
 
gí_√⁄_vgë_œ√v8hi_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3242 
πx
 
gí_√⁄_vgë_œ√v4si_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3243 
πx
 
gí_√⁄_vgë_œ√v4sf_£xt_öã∫Æ
 (rtx,Ñtx,Ñtx);

3244 
πx
 
gí_√⁄_vgë_œ√v16qi_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3245 
πx
 
gí_√⁄_vgë_œ√v8hi_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3246 
πx
 
gí_√⁄_vgë_œ√v4si_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3247 
πx
 
gí_√⁄_vgë_œ√v4sf_zext_öã∫Æ
 (rtx,Ñtx,Ñtx);

3248 
πx
 
gí_√⁄_vdup_nv8qi
 (rtx,Ñtx);

3249 
πx
 
gí_√⁄_vdup_nv4hi
 (rtx,Ñtx);

3250 
πx
 
gí_√⁄_vdup_nv16qi
 (rtx,Ñtx);

3251 
πx
 
gí_√⁄_vdup_nv8hi
 (rtx,Ñtx);

3252 
πx
 
gí_√⁄_vdup_nv2si
 (rtx,Ñtx);

3253 
πx
 
gí_√⁄_vdup_nv2sf
 (rtx,Ñtx);

3254 
πx
 
gí_√⁄_vdup_nv4si
 (rtx,Ñtx);

3255 
πx
 
gí_√⁄_vdup_nv4sf
 (rtx,Ñtx);

3256 
πx
 
gí_√⁄_vdup_nv2di
 (rtx,Ñtx);

3257 
πx
 
gí_√⁄_vdup_œ√v8qi_öã∫Æ
 (rtx,Ñtx,Ñtx);

3258 
πx
 
gí_√⁄_vdup_œ√v16qi_öã∫Æ
 (rtx,Ñtx,Ñtx);

3259 
πx
 
gí_√⁄_vdup_œ√v4hi_öã∫Æ
 (rtx,Ñtx,Ñtx);

3260 
πx
 
gí_√⁄_vdup_œ√v8hi_öã∫Æ
 (rtx,Ñtx,Ñtx);

3261 
πx
 
gí_√⁄_vdup_œ√v2si_öã∫Æ
 (rtx,Ñtx,Ñtx);

3262 
πx
 
gí_√⁄_vdup_œ√v4si_öã∫Æ
 (rtx,Ñtx,Ñtx);

3263 
πx
 
gí_√⁄_vdup_œ√v2sf_öã∫Æ
 (rtx,Ñtx,Ñtx);

3264 
πx
 
gí_√⁄_vdup_œ√v4sf_öã∫Æ
 (rtx,Ñtx,Ñtx);

3265 
πx
 
gí_√⁄_vcomböev8qi
 (rtx,Ñtx,Ñtx);

3266 
πx
 
gí_√⁄_vcomböev4hi
 (rtx,Ñtx,Ñtx);

3267 
πx
 
gí_√⁄_vcomböev2si
 (rtx,Ñtx,Ñtx);

3268 
πx
 
gí_√⁄_vcomböev2sf
 (rtx,Ñtx,Ñtx);

3269 
πx
 
gí_√⁄_vcomböedi
 (rtx,Ñtx,Ñtx);

3270 
πx
 
gí_Êﬂtv2siv2sf2
 (rtx,Ñtx);

3271 
πx
 
gí_Êﬂtv4siv4sf2
 (rtx,Ñtx);

3272 
πx
 
gí_Êﬂtunsv2siv2sf2
 (rtx,Ñtx);

3273 
πx
 
gí_Êﬂtunsv4siv4sf2
 (rtx,Ñtx);

3274 
πx
 
gí_fix_åuncv2sfv2si2
 (rtx,Ñtx);

3275 
πx
 
gí_fix_åuncv4sfv4si2
 (rtx,Ñtx);

3276 
πx
 
gí_fixuns_åuncv2sfv2si2
 (rtx,Ñtx);

3277 
πx
 
gí_fixuns_åuncv4sfv4si2
 (rtx,Ñtx);

3278 
πx
 
gí_√⁄_vcvtv2sf
 (rtx,Ñtx,Ñtx);

3279 
πx
 
gí_√⁄_vcvtv4sf
 (rtx,Ñtx,Ñtx);

3280 
πx
 
gí_√⁄_vcvtv2si
 (rtx,Ñtx,Ñtx);

3281 
πx
 
gí_√⁄_vcvtv4si
 (rtx,Ñtx,Ñtx);

3282 
πx
 
gí_√⁄_vcvtv4sfv4hf
 (rtx,Ñtx);

3283 
πx
 
gí_√⁄_vcvtv4hfv4sf
 (rtx,Ñtx);

3284 
πx
 
gí_√⁄_vcvt_nv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3285 
πx
 
gí_√⁄_vcvt_nv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3286 
πx
 
gí_√⁄_vcvt_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3287 
πx
 
gí_√⁄_vcvt_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3288 
πx
 
gí_√⁄_vmovnv8hi
 (rtx,Ñtx,Ñtx);

3289 
πx
 
gí_√⁄_vmovnv4si
 (rtx,Ñtx,Ñtx);

3290 
πx
 
gí_√⁄_vmovnv2di
 (rtx,Ñtx,Ñtx);

3291 
πx
 
gí_√⁄_vqmovnv8hi
 (rtx,Ñtx,Ñtx);

3292 
πx
 
gí_√⁄_vqmovnv4si
 (rtx,Ñtx,Ñtx);

3293 
πx
 
gí_√⁄_vqmovnv2di
 (rtx,Ñtx,Ñtx);

3294 
πx
 
gí_√⁄_vqmovunv8hi
 (rtx,Ñtx,Ñtx);

3295 
πx
 
gí_√⁄_vqmovunv4si
 (rtx,Ñtx,Ñtx);

3296 
πx
 
gí_√⁄_vqmovunv2di
 (rtx,Ñtx,Ñtx);

3297 
πx
 
gí_√⁄_vmovlv8qi
 (rtx,Ñtx,Ñtx);

3298 
πx
 
gí_√⁄_vmovlv4hi
 (rtx,Ñtx,Ñtx);

3299 
πx
 
gí_√⁄_vmovlv2si
 (rtx,Ñtx,Ñtx);

3300 
πx
 
gí_√⁄_vmul_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3301 
πx
 
gí_√⁄_vmul_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3302 
πx
 
gí_√⁄_vmul_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3303 
πx
 
gí_√⁄_vmul_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3304 
πx
 
gí_√⁄_vmul_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3305 
πx
 
gí_√⁄_vmul_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3306 
πx
 
gí_√⁄_vmuŒ_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3307 
πx
 
gí_√⁄_vmuŒ_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3308 
πx
 
gí_√⁄_vqdmuŒ_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3309 
πx
 
gí_√⁄_vqdmuŒ_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3310 
πx
 
gí_√⁄_vqdmulh_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3311 
πx
 
gí_√⁄_vqdmulh_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3312 
πx
 
gí_√⁄_vqdmulh_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3313 
πx
 
gí_√⁄_vqdmulh_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3314 
πx
 
gí_√⁄_vmœ_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3315 
πx
 
gí_√⁄_vmœ_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3316 
πx
 
gí_√⁄_vmœ_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3317 
πx
 
gí_√⁄_vmœ_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3318 
πx
 
gí_√⁄_vmœ_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3319 
πx
 
gí_√⁄_vmœ_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3320 
πx
 
gí_√⁄_vmœl_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3321 
πx
 
gí_√⁄_vmœl_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3322 
πx
 
gí_√⁄_vqdmœl_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3323 
πx
 
gí_√⁄_vqdmœl_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3324 
πx
 
gí_√⁄_vmls_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3325 
πx
 
gí_√⁄_vmls_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3326 
πx
 
gí_√⁄_vmls_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3327 
πx
 
gí_√⁄_vmls_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3328 
πx
 
gí_√⁄_vmls_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3329 
πx
 
gí_√⁄_vmls_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3330 
πx
 
gí_√⁄_vml¶_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3331 
πx
 
gí_√⁄_vml¶_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3332 
πx
 
gí_√⁄_vqdml¶_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3333 
πx
 
gí_√⁄_vqdml¶_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3334 
πx
 
gí_√⁄_vextv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3335 
πx
 
gí_√⁄_vextv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3336 
πx
 
gí_√⁄_vextv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3337 
πx
 
gí_√⁄_vextv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3338 
πx
 
gí_√⁄_vextv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3339 
πx
 
gí_√⁄_vextv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3340 
πx
 
gí_√⁄_vextv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3341 
πx
 
gí_√⁄_vextv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3342 
πx
 
gí_√⁄_vextdi
 (rtx,Ñtx,Ñtx,Ñtx);

3343 
πx
 
gí_√⁄_vextv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3344 
πx
 
gí_√⁄_vªv64v8qi
 (rtx,Ñtx,Ñtx);

3345 
πx
 
gí_√⁄_vªv64v16qi
 (rtx,Ñtx,Ñtx);

3346 
πx
 
gí_√⁄_vªv64v4hi
 (rtx,Ñtx,Ñtx);

3347 
πx
 
gí_√⁄_vªv64v8hi
 (rtx,Ñtx,Ñtx);

3348 
πx
 
gí_√⁄_vªv64v2si
 (rtx,Ñtx,Ñtx);

3349 
πx
 
gí_√⁄_vªv64v4si
 (rtx,Ñtx,Ñtx);

3350 
πx
 
gí_√⁄_vªv64v2sf
 (rtx,Ñtx,Ñtx);

3351 
πx
 
gí_√⁄_vªv64v4sf
 (rtx,Ñtx,Ñtx);

3352 
πx
 
gí_√⁄_vªv64v2di
 (rtx,Ñtx,Ñtx);

3353 
πx
 
gí_√⁄_vªv32v8qi
 (rtx,Ñtx,Ñtx);

3354 
πx
 
gí_√⁄_vªv32v4hi
 (rtx,Ñtx,Ñtx);

3355 
πx
 
gí_√⁄_vªv32v16qi
 (rtx,Ñtx,Ñtx);

3356 
πx
 
gí_√⁄_vªv32v8hi
 (rtx,Ñtx,Ñtx);

3357 
πx
 
gí_√⁄_vªv16v8qi
 (rtx,Ñtx,Ñtx);

3358 
πx
 
gí_√⁄_vªv16v16qi
 (rtx,Ñtx,Ñtx);

3359 
πx
 
gí_√⁄_vb¶v8qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3360 
πx
 
gí_√⁄_vb¶v16qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3361 
πx
 
gí_√⁄_vb¶v4hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3362 
πx
 
gí_√⁄_vb¶v8hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3363 
πx
 
gí_√⁄_vb¶v2si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3364 
πx
 
gí_√⁄_vb¶v4si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3365 
πx
 
gí_√⁄_vb¶v2sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3366 
πx
 
gí_√⁄_vb¶v4sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3367 
πx
 
gí_√⁄_vb¶di_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3368 
πx
 
gí_√⁄_vb¶v2di_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3369 
πx
 
gí_√⁄_vshlv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3370 
πx
 
gí_√⁄_vshlv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3371 
πx
 
gí_√⁄_vshlv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3372 
πx
 
gí_√⁄_vshlv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3373 
πx
 
gí_√⁄_vshlv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3374 
πx
 
gí_√⁄_vshlv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3375 
πx
 
gí_√⁄_vshldi
 (rtx,Ñtx,Ñtx,Ñtx);

3376 
πx
 
gí_√⁄_vshlv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3377 
πx
 
gí_√⁄_vqshlv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3378 
πx
 
gí_√⁄_vqshlv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3379 
πx
 
gí_√⁄_vqshlv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3380 
πx
 
gí_√⁄_vqshlv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3381 
πx
 
gí_√⁄_vqshlv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3382 
πx
 
gí_√⁄_vqshlv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3383 
πx
 
gí_√⁄_vqshldi
 (rtx,Ñtx,Ñtx,Ñtx);

3384 
πx
 
gí_√⁄_vqshlv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3385 
πx
 
gí_√⁄_vshr_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3386 
πx
 
gí_√⁄_vshr_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3387 
πx
 
gí_√⁄_vshr_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3388 
πx
 
gí_√⁄_vshr_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3389 
πx
 
gí_√⁄_vshr_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3390 
πx
 
gí_√⁄_vshr_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3391 
πx
 
gí_√⁄_vshr_ndi
 (rtx,Ñtx,Ñtx,Ñtx);

3392 
πx
 
gí_√⁄_vshr_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3393 
πx
 
gí_√⁄_vsh∫_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3394 
πx
 
gí_√⁄_vsh∫_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3395 
πx
 
gí_√⁄_vsh∫_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3396 
πx
 
gí_√⁄_vqsh∫_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3397 
πx
 
gí_√⁄_vqsh∫_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3398 
πx
 
gí_√⁄_vqsh∫_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3399 
πx
 
gí_√⁄_vqshrun_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3400 
πx
 
gí_√⁄_vqshrun_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3401 
πx
 
gí_√⁄_vqshrun_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3402 
πx
 
gí_√⁄_vshl_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3403 
πx
 
gí_√⁄_vshl_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3404 
πx
 
gí_√⁄_vshl_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3405 
πx
 
gí_√⁄_vshl_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3406 
πx
 
gí_√⁄_vshl_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3407 
πx
 
gí_√⁄_vshl_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3408 
πx
 
gí_√⁄_vshl_ndi
 (rtx,Ñtx,Ñtx,Ñtx);

3409 
πx
 
gí_√⁄_vshl_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3410 
πx
 
gí_√⁄_vqshl_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3411 
πx
 
gí_√⁄_vqshl_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3412 
πx
 
gí_√⁄_vqshl_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3413 
πx
 
gí_√⁄_vqshl_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3414 
πx
 
gí_√⁄_vqshl_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3415 
πx
 
gí_√⁄_vqshl_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3416 
πx
 
gí_√⁄_vqshl_ndi
 (rtx,Ñtx,Ñtx,Ñtx);

3417 
πx
 
gí_√⁄_vqshl_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3418 
πx
 
gí_√⁄_vqshlu_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3419 
πx
 
gí_√⁄_vqshlu_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3420 
πx
 
gí_√⁄_vqshlu_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3421 
πx
 
gí_√⁄_vqshlu_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3422 
πx
 
gí_√⁄_vqshlu_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3423 
πx
 
gí_√⁄_vqshlu_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3424 
πx
 
gí_√⁄_vqshlu_ndi
 (rtx,Ñtx,Ñtx,Ñtx);

3425 
πx
 
gí_√⁄_vqshlu_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3426 
πx
 
gí_√⁄_vshŒ_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3427 
πx
 
gí_√⁄_vshŒ_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3428 
πx
 
gí_√⁄_vshŒ_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3429 
πx
 
gí_√⁄_v§a_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3430 
πx
 
gí_√⁄_v§a_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3431 
πx
 
gí_√⁄_v§a_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3432 
πx
 
gí_√⁄_v§a_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3433 
πx
 
gí_√⁄_v§a_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3434 
πx
 
gí_√⁄_v§a_nv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3435 
πx
 
gí_√⁄_v§a_ndi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3436 
πx
 
gí_√⁄_v§a_nv2di
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3437 
πx
 
gí_√⁄_v§i_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3438 
πx
 
gí_√⁄_v§i_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3439 
πx
 
gí_√⁄_v§i_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3440 
πx
 
gí_√⁄_v§i_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3441 
πx
 
gí_√⁄_v§i_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3442 
πx
 
gí_√⁄_v§i_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3443 
πx
 
gí_√⁄_v§i_ndi
 (rtx,Ñtx,Ñtx,Ñtx);

3444 
πx
 
gí_√⁄_v§i_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3445 
πx
 
gí_√⁄_v¶i_nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3446 
πx
 
gí_√⁄_v¶i_nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3447 
πx
 
gí_√⁄_v¶i_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3448 
πx
 
gí_√⁄_v¶i_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3449 
πx
 
gí_√⁄_v¶i_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

3450 
πx
 
gí_√⁄_v¶i_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

3451 
πx
 
gí_√⁄_v¶i_ndi
 (rtx,Ñtx,Ñtx,Ñtx);

3452 
πx
 
gí_√⁄_v¶i_nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

3453 
πx
 
gí_√⁄_vtbl1v8qi
 (rtx,Ñtx,Ñtx);

3454 
πx
 
gí_√⁄_vtbl2v8qi
 (rtx,Ñtx,Ñtx);

3455 
πx
 
gí_√⁄_vtbl3v8qi
 (rtx,Ñtx,Ñtx);

3456 
πx
 
gí_√⁄_vtbl4v8qi
 (rtx,Ñtx,Ñtx);

3457 
πx
 
gí_√⁄_vtbl1v16qi
 (rtx,Ñtx,Ñtx);

3458 
πx
 
gí_√⁄_vtbl2v16qi
 (rtx,Ñtx,Ñtx);

3459 
πx
 
gí_√⁄_vcomböev16qi
 (rtx,Ñtx,Ñtx);

3460 
πx
 
gí_√⁄_vtbx1v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3461 
πx
 
gí_√⁄_vtbx2v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3462 
πx
 
gí_√⁄_vtbx3v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3463 
πx
 
gí_√⁄_vtbx4v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3464 
πx
 
gí_√⁄_vld1v8qi
 (rtx,Ñtx);

3465 
πx
 
gí_√⁄_vld1v16qi
 (rtx,Ñtx);

3466 
πx
 
gí_√⁄_vld1v4hi
 (rtx,Ñtx);

3467 
πx
 
gí_√⁄_vld1v8hi
 (rtx,Ñtx);

3468 
πx
 
gí_√⁄_vld1v2si
 (rtx,Ñtx);

3469 
πx
 
gí_√⁄_vld1v4si
 (rtx,Ñtx);

3470 
πx
 
gí_√⁄_vld1v2sf
 (rtx,Ñtx);

3471 
πx
 
gí_√⁄_vld1v4sf
 (rtx,Ñtx);

3472 
πx
 
gí_√⁄_vld1di
 (rtx,Ñtx);

3473 
πx
 
gí_√⁄_vld1v2di
 (rtx,Ñtx);

3474 
πx
 
gí_√⁄_vld1_œ√v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3475 
πx
 
gí_√⁄_vld1_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3476 
πx
 
gí_√⁄_vld1_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx);

3477 
πx
 
gí_√⁄_vld1_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3478 
πx
 
gí_√⁄_vld1_œ√di
 (rtx,Ñtx,Ñtx,Ñtx);

3479 
πx
 
gí_√⁄_vld1_œ√v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3480 
πx
 
gí_√⁄_vld1_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3481 
πx
 
gí_√⁄_vld1_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3482 
πx
 
gí_√⁄_vld1_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3483 
πx
 
gí_√⁄_vld1_œ√v2di
 (rtx,Ñtx,Ñtx,Ñtx);

3484 
πx
 
gí_√⁄_vld1_dupv8qi
 (rtx,Ñtx);

3485 
πx
 
gí_√⁄_vld1_dupv4hi
 (rtx,Ñtx);

3486 
πx
 
gí_√⁄_vld1_dupv2si
 (rtx,Ñtx);

3487 
πx
 
gí_√⁄_vld1_dupv2sf
 (rtx,Ñtx);

3488 
πx
 
gí_√⁄_vld1_dupv16qi
 (rtx,Ñtx);

3489 
πx
 
gí_√⁄_vld1_dupv8hi
 (rtx,Ñtx);

3490 
πx
 
gí_√⁄_vld1_dupv4si
 (rtx,Ñtx);

3491 
πx
 
gí_√⁄_vld1_dupv4sf
 (rtx,Ñtx);

3492 
πx
 
gí_√⁄_vld1_dupv2di
 (rtx,Ñtx);

3493 
πx
 
gí_√⁄_v°1v8qi
 (rtx,Ñtx);

3494 
πx
 
gí_√⁄_v°1v16qi
 (rtx,Ñtx);

3495 
πx
 
gí_√⁄_v°1v4hi
 (rtx,Ñtx);

3496 
πx
 
gí_√⁄_v°1v8hi
 (rtx,Ñtx);

3497 
πx
 
gí_√⁄_v°1v2si
 (rtx,Ñtx);

3498 
πx
 
gí_√⁄_v°1v4si
 (rtx,Ñtx);

3499 
πx
 
gí_√⁄_v°1v2sf
 (rtx,Ñtx);

3500 
πx
 
gí_√⁄_v°1v4sf
 (rtx,Ñtx);

3501 
πx
 
gí_√⁄_v°1di
 (rtx,Ñtx);

3502 
πx
 
gí_√⁄_v°1v2di
 (rtx,Ñtx);

3503 
πx
 
gí_√⁄_v°1_œ√v8qi
 (rtx,Ñtx,Ñtx);

3504 
πx
 
gí_√⁄_v°1_œ√v4hi
 (rtx,Ñtx,Ñtx);

3505 
πx
 
gí_√⁄_v°1_œ√v2si
 (rtx,Ñtx,Ñtx);

3506 
πx
 
gí_√⁄_v°1_œ√v2sf
 (rtx,Ñtx,Ñtx);

3507 
πx
 
gí_√⁄_v°1_œ√di
 (rtx,Ñtx,Ñtx);

3508 
πx
 
gí_√⁄_v°1_œ√v16qi
 (rtx,Ñtx,Ñtx);

3509 
πx
 
gí_√⁄_v°1_œ√v8hi
 (rtx,Ñtx,Ñtx);

3510 
πx
 
gí_√⁄_v°1_œ√v4si
 (rtx,Ñtx,Ñtx);

3511 
πx
 
gí_√⁄_v°1_œ√v4sf
 (rtx,Ñtx,Ñtx);

3512 
πx
 
gí_√⁄_v°1_œ√v2di
 (rtx,Ñtx,Ñtx);

3513 
πx
 
gí_√⁄_vld2v8qi
 (rtx,Ñtx);

3514 
πx
 
gí_√⁄_vld2v4hi
 (rtx,Ñtx);

3515 
πx
 
gí_√⁄_vld2v2si
 (rtx,Ñtx);

3516 
πx
 
gí_√⁄_vld2v2sf
 (rtx,Ñtx);

3517 
πx
 
gí_√⁄_vld2di
 (rtx,Ñtx);

3518 
πx
 
gí_√⁄_vld2v16qi
 (rtx,Ñtx);

3519 
πx
 
gí_√⁄_vld2v8hi
 (rtx,Ñtx);

3520 
πx
 
gí_√⁄_vld2v4si
 (rtx,Ñtx);

3521 
πx
 
gí_√⁄_vld2v4sf
 (rtx,Ñtx);

3522 
πx
 
gí_√⁄_vld2_œ√v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3523 
πx
 
gí_√⁄_vld2_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3524 
πx
 
gí_√⁄_vld2_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx);

3525 
πx
 
gí_√⁄_vld2_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3526 
πx
 
gí_√⁄_vld2_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3527 
πx
 
gí_√⁄_vld2_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3528 
πx
 
gí_√⁄_vld2_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3529 
πx
 
gí_√⁄_vld2_dupv8qi
 (rtx,Ñtx);

3530 
πx
 
gí_√⁄_vld2_dupv4hi
 (rtx,Ñtx);

3531 
πx
 
gí_√⁄_vld2_dupv2si
 (rtx,Ñtx);

3532 
πx
 
gí_√⁄_vld2_dupv2sf
 (rtx,Ñtx);

3533 
πx
 
gí_√⁄_vld2_dupdi
 (rtx,Ñtx);

3534 
πx
 
gí_√⁄_v°2v8qi
 (rtx,Ñtx);

3535 
πx
 
gí_√⁄_v°2v4hi
 (rtx,Ñtx);

3536 
πx
 
gí_√⁄_v°2v2si
 (rtx,Ñtx);

3537 
πx
 
gí_√⁄_v°2v2sf
 (rtx,Ñtx);

3538 
πx
 
gí_√⁄_v°2di
 (rtx,Ñtx);

3539 
πx
 
gí_√⁄_v°2v16qi
 (rtx,Ñtx);

3540 
πx
 
gí_√⁄_v°2v8hi
 (rtx,Ñtx);

3541 
πx
 
gí_√⁄_v°2v4si
 (rtx,Ñtx);

3542 
πx
 
gí_√⁄_v°2v4sf
 (rtx,Ñtx);

3543 
πx
 
gí_√⁄_v°2_œ√v8qi
 (rtx,Ñtx,Ñtx);

3544 
πx
 
gí_√⁄_v°2_œ√v4hi
 (rtx,Ñtx,Ñtx);

3545 
πx
 
gí_√⁄_v°2_œ√v2si
 (rtx,Ñtx,Ñtx);

3546 
πx
 
gí_√⁄_v°2_œ√v2sf
 (rtx,Ñtx,Ñtx);

3547 
πx
 
gí_√⁄_v°2_œ√v8hi
 (rtx,Ñtx,Ñtx);

3548 
πx
 
gí_√⁄_v°2_œ√v4si
 (rtx,Ñtx,Ñtx);

3549 
πx
 
gí_√⁄_v°2_œ√v4sf
 (rtx,Ñtx,Ñtx);

3550 
πx
 
gí_√⁄_vld3v8qi
 (rtx,Ñtx);

3551 
πx
 
gí_√⁄_vld3v4hi
 (rtx,Ñtx);

3552 
πx
 
gí_√⁄_vld3v2si
 (rtx,Ñtx);

3553 
πx
 
gí_√⁄_vld3v2sf
 (rtx,Ñtx);

3554 
πx
 
gí_√⁄_vld3di
 (rtx,Ñtx);

3555 
πx
 
gí_√⁄_vld3qav16qi
 (rtx,Ñtx);

3556 
πx
 
gí_√⁄_vld3qav8hi
 (rtx,Ñtx);

3557 
πx
 
gí_√⁄_vld3qav4si
 (rtx,Ñtx);

3558 
πx
 
gí_√⁄_vld3qav4sf
 (rtx,Ñtx);

3559 
πx
 
gí_√⁄_vld3qbv16qi
 (rtx,Ñtx,Ñtx);

3560 
πx
 
gí_√⁄_vld3qbv8hi
 (rtx,Ñtx,Ñtx);

3561 
πx
 
gí_√⁄_vld3qbv4si
 (rtx,Ñtx,Ñtx);

3562 
πx
 
gí_√⁄_vld3qbv4sf
 (rtx,Ñtx,Ñtx);

3563 
πx
 
gí_√⁄_vld3_œ√v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3564 
πx
 
gí_√⁄_vld3_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3565 
πx
 
gí_√⁄_vld3_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx);

3566 
πx
 
gí_√⁄_vld3_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3567 
πx
 
gí_√⁄_vld3_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3568 
πx
 
gí_√⁄_vld3_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3569 
πx
 
gí_√⁄_vld3_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3570 
πx
 
gí_√⁄_vld3_dupv8qi
 (rtx,Ñtx);

3571 
πx
 
gí_√⁄_vld3_dupv4hi
 (rtx,Ñtx);

3572 
πx
 
gí_√⁄_vld3_dupv2si
 (rtx,Ñtx);

3573 
πx
 
gí_√⁄_vld3_dupv2sf
 (rtx,Ñtx);

3574 
πx
 
gí_√⁄_vld3_dupdi
 (rtx,Ñtx);

3575 
πx
 
gí_√⁄_v°3v8qi
 (rtx,Ñtx);

3576 
πx
 
gí_√⁄_v°3v4hi
 (rtx,Ñtx);

3577 
πx
 
gí_√⁄_v°3v2si
 (rtx,Ñtx);

3578 
πx
 
gí_√⁄_v°3v2sf
 (rtx,Ñtx);

3579 
πx
 
gí_√⁄_v°3di
 (rtx,Ñtx);

3580 
πx
 
gí_√⁄_v°3qav16qi
 (rtx,Ñtx);

3581 
πx
 
gí_√⁄_v°3qav8hi
 (rtx,Ñtx);

3582 
πx
 
gí_√⁄_v°3qav4si
 (rtx,Ñtx);

3583 
πx
 
gí_√⁄_v°3qav4sf
 (rtx,Ñtx);

3584 
πx
 
gí_√⁄_v°3qbv16qi
 (rtx,Ñtx);

3585 
πx
 
gí_√⁄_v°3qbv8hi
 (rtx,Ñtx);

3586 
πx
 
gí_√⁄_v°3qbv4si
 (rtx,Ñtx);

3587 
πx
 
gí_√⁄_v°3qbv4sf
 (rtx,Ñtx);

3588 
πx
 
gí_√⁄_v°3_œ√v8qi
 (rtx,Ñtx,Ñtx);

3589 
πx
 
gí_√⁄_v°3_œ√v4hi
 (rtx,Ñtx,Ñtx);

3590 
πx
 
gí_√⁄_v°3_œ√v2si
 (rtx,Ñtx,Ñtx);

3591 
πx
 
gí_√⁄_v°3_œ√v2sf
 (rtx,Ñtx,Ñtx);

3592 
πx
 
gí_√⁄_v°3_œ√v8hi
 (rtx,Ñtx,Ñtx);

3593 
πx
 
gí_√⁄_v°3_œ√v4si
 (rtx,Ñtx,Ñtx);

3594 
πx
 
gí_√⁄_v°3_œ√v4sf
 (rtx,Ñtx,Ñtx);

3595 
πx
 
gí_√⁄_vld4v8qi
 (rtx,Ñtx);

3596 
πx
 
gí_√⁄_vld4v4hi
 (rtx,Ñtx);

3597 
πx
 
gí_√⁄_vld4v2si
 (rtx,Ñtx);

3598 
πx
 
gí_√⁄_vld4v2sf
 (rtx,Ñtx);

3599 
πx
 
gí_√⁄_vld4di
 (rtx,Ñtx);

3600 
πx
 
gí_√⁄_vld4qav16qi
 (rtx,Ñtx);

3601 
πx
 
gí_√⁄_vld4qav8hi
 (rtx,Ñtx);

3602 
πx
 
gí_√⁄_vld4qav4si
 (rtx,Ñtx);

3603 
πx
 
gí_√⁄_vld4qav4sf
 (rtx,Ñtx);

3604 
πx
 
gí_√⁄_vld4qbv16qi
 (rtx,Ñtx,Ñtx);

3605 
πx
 
gí_√⁄_vld4qbv8hi
 (rtx,Ñtx,Ñtx);

3606 
πx
 
gí_√⁄_vld4qbv4si
 (rtx,Ñtx,Ñtx);

3607 
πx
 
gí_√⁄_vld4qbv4sf
 (rtx,Ñtx,Ñtx);

3608 
πx
 
gí_√⁄_vld4_œ√v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

3609 
πx
 
gí_√⁄_vld4_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

3610 
πx
 
gí_√⁄_vld4_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx);

3611 
πx
 
gí_√⁄_vld4_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

3612 
πx
 
gí_√⁄_vld4_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3613 
πx
 
gí_√⁄_vld4_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3614 
πx
 
gí_√⁄_vld4_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

3615 
πx
 
gí_√⁄_vld4_dupv8qi
 (rtx,Ñtx);

3616 
πx
 
gí_√⁄_vld4_dupv4hi
 (rtx,Ñtx);

3617 
πx
 
gí_√⁄_vld4_dupv2si
 (rtx,Ñtx);

3618 
πx
 
gí_√⁄_vld4_dupv2sf
 (rtx,Ñtx);

3619 
πx
 
gí_√⁄_vld4_dupdi
 (rtx,Ñtx);

3620 
πx
 
gí_√⁄_v°4v8qi
 (rtx,Ñtx);

3621 
πx
 
gí_√⁄_v°4v4hi
 (rtx,Ñtx);

3622 
πx
 
gí_√⁄_v°4v2si
 (rtx,Ñtx);

3623 
πx
 
gí_√⁄_v°4v2sf
 (rtx,Ñtx);

3624 
πx
 
gí_√⁄_v°4di
 (rtx,Ñtx);

3625 
πx
 
gí_√⁄_v°4qav16qi
 (rtx,Ñtx);

3626 
πx
 
gí_√⁄_v°4qav8hi
 (rtx,Ñtx);

3627 
πx
 
gí_√⁄_v°4qav4si
 (rtx,Ñtx);

3628 
πx
 
gí_√⁄_v°4qav4sf
 (rtx,Ñtx);

3629 
πx
 
gí_√⁄_v°4qbv16qi
 (rtx,Ñtx);

3630 
πx
 
gí_√⁄_v°4qbv8hi
 (rtx,Ñtx);

3631 
πx
 
gí_√⁄_v°4qbv4si
 (rtx,Ñtx);

3632 
πx
 
gí_√⁄_v°4qbv4sf
 (rtx,Ñtx);

3633 
πx
 
gí_√⁄_v°4_œ√v8qi
 (rtx,Ñtx,Ñtx);

3634 
πx
 
gí_√⁄_v°4_œ√v4hi
 (rtx,Ñtx,Ñtx);

3635 
πx
 
gí_√⁄_v°4_œ√v2si
 (rtx,Ñtx,Ñtx);

3636 
πx
 
gí_√⁄_v°4_œ√v2sf
 (rtx,Ñtx,Ñtx);

3637 
πx
 
gí_√⁄_v°4_œ√v8hi
 (rtx,Ñtx,Ñtx);

3638 
πx
 
gí_√⁄_v°4_œ√v4si
 (rtx,Ñtx,Ñtx);

3639 
πx
 
gí_√⁄_v°4_œ√v4sf
 (rtx,Ñtx,Ñtx);

3640 
πx
 
gí_√⁄_vec_u≈acks_lo_v16qi
 (rtx,Ñtx,Ñtx);

3641 
πx
 
gí_√⁄_vec_u≈acku_lo_v16qi
 (rtx,Ñtx,Ñtx);

3642 
πx
 
gí_√⁄_vec_u≈acks_lo_v8hi
 (rtx,Ñtx,Ñtx);

3643 
πx
 
gí_√⁄_vec_u≈acku_lo_v8hi
 (rtx,Ñtx,Ñtx);

3644 
πx
 
gí_√⁄_vec_u≈acks_lo_v4si
 (rtx,Ñtx,Ñtx);

3645 
πx
 
gí_√⁄_vec_u≈acku_lo_v4si
 (rtx,Ñtx,Ñtx);

3646 
πx
 
gí_√⁄_vec_u≈acks_hi_v16qi
 (rtx,Ñtx,Ñtx);

3647 
πx
 
gí_√⁄_vec_u≈acku_hi_v16qi
 (rtx,Ñtx,Ñtx);

3648 
πx
 
gí_√⁄_vec_u≈acks_hi_v8hi
 (rtx,Ñtx,Ñtx);

3649 
πx
 
gí_√⁄_vec_u≈acku_hi_v8hi
 (rtx,Ñtx,Ñtx);

3650 
πx
 
gí_√⁄_vec_u≈acks_hi_v4si
 (rtx,Ñtx,Ñtx);

3651 
πx
 
gí_√⁄_vec_u≈acku_hi_v4si
 (rtx,Ñtx,Ñtx);

3652 
πx
 
gí_√⁄_vec_smu…_lo_v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3653 
πx
 
gí_√⁄_vec_umu…_lo_v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3654 
πx
 
gí_√⁄_vec_smu…_lo_v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3655 
πx
 
gí_√⁄_vec_umu…_lo_v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3656 
πx
 
gí_√⁄_vec_smu…_lo_v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3657 
πx
 
gí_√⁄_vec_umu…_lo_v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3658 
πx
 
gí_√⁄_vec_smu…_hi_v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3659 
πx
 
gí_√⁄_vec_umu…_hi_v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

3660 
πx
 
gí_√⁄_vec_smu…_hi_v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3661 
πx
 
gí_√⁄_vec_umu…_hi_v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

3662 
πx
 
gí_√⁄_vec_smu…_hi_v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3663 
πx
 
gí_√⁄_vec_umu…_hi_v4si
 (rtx,Ñtx,Ñtx,Ñtx);

3664 
πx
 
gí_√⁄_vec_sshi·l_v8qi
 (rtx,Ñtx,Ñtx);

3665 
πx
 
gí_√⁄_vec_ushi·l_v8qi
 (rtx,Ñtx,Ñtx);

3666 
πx
 
gí_√⁄_vec_sshi·l_v4hi
 (rtx,Ñtx,Ñtx);

3667 
πx
 
gí_√⁄_vec_ushi·l_v4hi
 (rtx,Ñtx,Ñtx);

3668 
πx
 
gí_√⁄_vec_sshi·l_v2si
 (rtx,Ñtx,Ñtx);

3669 
πx
 
gí_√⁄_vec_ushi·l_v2si
 (rtx,Ñtx,Ñtx);

3670 
πx
 
gí_√⁄_u≈acks_v8qi
 (rtx,Ñtx);

3671 
πx
 
gí_√⁄_u≈acku_v8qi
 (rtx,Ñtx);

3672 
πx
 
gí_√⁄_u≈acks_v4hi
 (rtx,Ñtx);

3673 
πx
 
gí_√⁄_u≈acku_v4hi
 (rtx,Ñtx);

3674 
πx
 
gí_√⁄_u≈acks_v2si
 (rtx,Ñtx);

3675 
πx
 
gí_√⁄_u≈acku_v2si
 (rtx,Ñtx);

3676 
πx
 
gí_√⁄_vec_smu…_v8qi
 (rtx,Ñtx,Ñtx);

3677 
πx
 
gí_√⁄_vec_umu…_v8qi
 (rtx,Ñtx,Ñtx);

3678 
πx
 
gí_√⁄_vec_smu…_v4hi
 (rtx,Ñtx,Ñtx);

3679 
πx
 
gí_√⁄_vec_umu…_v4hi
 (rtx,Ñtx,Ñtx);

3680 
πx
 
gí_√⁄_vec_smu…_v2si
 (rtx,Ñtx,Ñtx);

3681 
πx
 
gí_√⁄_vec_umu…_v2si
 (rtx,Ñtx,Ñtx);

3682 
πx
 
gí_vec_∑ck_åunc_v8hi
 (rtx,Ñtx,Ñtx);

3683 
πx
 
gí_vec_∑ck_åunc_v4si
 (rtx,Ñtx,Ñtx);

3684 
πx
 
gí_vec_∑ck_åunc_v2di
 (rtx,Ñtx,Ñtx);

3685 
πx
 
gí_√⁄_vec_∑ck_åunc_v8hi
 (rtx,Ñtx);

3686 
πx
 
gí_√⁄_vec_∑ck_åunc_v4si
 (rtx,Ñtx);

3687 
πx
 
gí_√⁄_vec_∑ck_åunc_v2di
 (rtx,Ñtx);

3688 
πx
 
gí_√⁄_vabdv8qi_2
 (rtx,Ñtx,Ñtx);

3689 
πx
 
gí_√⁄_vabdv16qi_2
 (rtx,Ñtx,Ñtx);

3690 
πx
 
gí_√⁄_vabdv4hi_2
 (rtx,Ñtx,Ñtx);

3691 
πx
 
gí_√⁄_vabdv8hi_2
 (rtx,Ñtx,Ñtx);

3692 
πx
 
gí_√⁄_vabdv2si_2
 (rtx,Ñtx,Ñtx);

3693 
πx
 
gí_√⁄_vabdv4si_2
 (rtx,Ñtx,Ñtx);

3694 
πx
 
gí_√⁄_vabdv2sf_2
 (rtx,Ñtx,Ñtx);

3695 
πx
 
gí_√⁄_vabdv4sf_2
 (rtx,Ñtx,Ñtx);

3696 
πx
 
gí_√⁄_vabdv2di_2
 (rtx,Ñtx,Ñtx);

3697 
πx
 
gí_√⁄_vabdv8qi_3
 (rtx,Ñtx,Ñtx);

3698 
πx
 
gí_√⁄_vabdv16qi_3
 (rtx,Ñtx,Ñtx);

3699 
πx
 
gí_√⁄_vabdv4hi_3
 (rtx,Ñtx,Ñtx);

3700 
πx
 
gí_√⁄_vabdv8hi_3
 (rtx,Ñtx,Ñtx);

3701 
πx
 
gí_√⁄_vabdv2si_3
 (rtx,Ñtx,Ñtx);

3702 
πx
 
gí_√⁄_vabdv4si_3
 (rtx,Ñtx,Ñtx);

3703 
πx
 
gí_√⁄_vabdv2sf_3
 (rtx,Ñtx,Ñtx);

3704 
πx
 
gí_√⁄_vabdv4sf_3
 (rtx,Ñtx,Ñtx);

3705 
πx
 
gí_√⁄_vabdv2di_3
 (rtx,Ñtx,Ñtx);

3706 
πx
 
gí_¸y±o_´smc
 (rtx,Ñtx);

3707 
πx
 
gí_¸y±o_´simc
 (rtx,Ñtx);

3708 
πx
 
gí_¸y±o_´sd
 (rtx,Ñtx,Ñtx);

3709 
πx
 
gí_¸y±o_´£
 (rtx,Ñtx,Ñtx);

3710 
πx
 
gí_¸y±o_sha1su1
 (rtx,Ñtx,Ñtx);

3711 
πx
 
gí_¸y±o_sha256su0
 (rtx,Ñtx,Ñtx);

3712 
πx
 
gí_¸y±o_sha1su0
 (rtx,Ñtx,Ñtx,Ñtx);

3713 
πx
 
gí_¸y±o_sha256h
 (rtx,Ñtx,Ñtx,Ñtx);

3714 
πx
 
gí_¸y±o_sha256h2
 (rtx,Ñtx,Ñtx,Ñtx);

3715 
πx
 
gí_¸y±o_sha256su1
 (rtx,Ñtx,Ñtx,Ñtx);

3716 
πx
 
gí_¸y±o_sha1h
 (rtx,Ñtx,Ñtx);

3717 
πx
 
gí_¸y±o_vmuŒp64
 (rtx,Ñtx,Ñtx);

3718 
πx
 
gí_¸y±o_sha1c
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3719 
πx
 
gí_¸y±o_sha1m
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3720 
πx
 
gí_¸y±o_sha1p
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3721 
πx
 
gí_©omic_lﬂdqi
 (rtx,Ñtx,Ñtx);

3722 
πx
 
gí_©omic_lﬂdhi
 (rtx,Ñtx,Ñtx);

3723 
πx
 
gí_©omic_lﬂdsi
 (rtx,Ñtx,Ñtx);

3724 
πx
 
gí_©omic_°‹eqi
 (rtx,Ñtx,Ñtx);

3725 
πx
 
gí_©omic_°‹ehi
 (rtx,Ñtx,Ñtx);

3726 
πx
 
gí_©omic_°‹esi
 (rtx,Ñtx,Ñtx);

3727 
πx
 
gí_©omic_lﬂddi_1
 (rtx,Ñtx);

3728 
πx
 
gí_©omic_com∑ª_™d_sw≠qi_1
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3729 
πx
 
gí_©omic_com∑ª_™d_sw≠hi_1
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3730 
πx
 
gí_©omic_com∑ª_™d_sw≠si_1
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3731 
πx
 
gí_©omic_com∑ª_™d_sw≠di_1
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

3732 
πx
 
gí_©omic_exch™geqi
 (rtx,Ñtx,Ñtx,Ñtx);

3733 
πx
 
gí_©omic_exch™gehi
 (rtx,Ñtx,Ñtx,Ñtx);

3734 
πx
 
gí_©omic_exch™gesi
 (rtx,Ñtx,Ñtx,Ñtx);

3735 
πx
 
gí_©omic_exch™gedi
 (rtx,Ñtx,Ñtx,Ñtx);

3736 
πx
 
gí_©omic_addqi
 (rtx,Ñtx,Ñtx);

3737 
πx
 
gí_©omic_subqi
 (rtx,Ñtx,Ñtx);

3738 
πx
 
gí_©omic_‹qi
 (rtx,Ñtx,Ñtx);

3739 
πx
 
gí_©omic_x‹qi
 (rtx,Ñtx,Ñtx);

3740 
πx
 
gí_©omic_™dqi
 (rtx,Ñtx,Ñtx);

3741 
πx
 
gí_©omic_addhi
 (rtx,Ñtx,Ñtx);

3742 
πx
 
gí_©omic_subhi
 (rtx,Ñtx,Ñtx);

3743 
πx
 
gí_©omic_‹hi
 (rtx,Ñtx,Ñtx);

3744 
πx
 
gí_©omic_x‹hi
 (rtx,Ñtx,Ñtx);

3745 
πx
 
gí_©omic_™dhi
 (rtx,Ñtx,Ñtx);

3746 
πx
 
gí_©omic_addsi
 (rtx,Ñtx,Ñtx);

3747 
πx
 
gí_©omic_subsi
 (rtx,Ñtx,Ñtx);

3748 
πx
 
gí_©omic_‹si
 (rtx,Ñtx,Ñtx);

3749 
πx
 
gí_©omic_x‹si
 (rtx,Ñtx,Ñtx);

3750 
πx
 
gí_©omic_™dsi
 (rtx,Ñtx,Ñtx);

3751 
πx
 
gí_©omic_adddi
 (rtx,Ñtx,Ñtx);

3752 
πx
 
gí_©omic_subdi
 (rtx,Ñtx,Ñtx);

3753 
πx
 
gí_©omic_‹di
 (rtx,Ñtx,Ñtx);

3754 
πx
 
gí_©omic_x‹di
 (rtx,Ñtx,Ñtx);

3755 
πx
 
gí_©omic_™ddi
 (rtx,Ñtx,Ñtx);

3756 
πx
 
gí_©omic_«ndqi
 (rtx,Ñtx,Ñtx);

3757 
πx
 
gí_©omic_«ndhi
 (rtx,Ñtx,Ñtx);

3758 
πx
 
gí_©omic_«ndsi
 (rtx,Ñtx,Ñtx);

3759 
πx
 
gí_©omic_«nddi
 (rtx,Ñtx,Ñtx);

3760 
πx
 
gí_©omic_„tch_addqi
 (rtx,Ñtx,Ñtx,Ñtx);

3761 
πx
 
gí_©omic_„tch_subqi
 (rtx,Ñtx,Ñtx,Ñtx);

3762 
πx
 
gí_©omic_„tch_‹qi
 (rtx,Ñtx,Ñtx,Ñtx);

3763 
πx
 
gí_©omic_„tch_x‹qi
 (rtx,Ñtx,Ñtx,Ñtx);

3764 
πx
 
gí_©omic_„tch_™dqi
 (rtx,Ñtx,Ñtx,Ñtx);

3765 
πx
 
gí_©omic_„tch_addhi
 (rtx,Ñtx,Ñtx,Ñtx);

3766 
πx
 
gí_©omic_„tch_subhi
 (rtx,Ñtx,Ñtx,Ñtx);

3767 
πx
 
gí_©omic_„tch_‹hi
 (rtx,Ñtx,Ñtx,Ñtx);

3768 
πx
 
gí_©omic_„tch_x‹hi
 (rtx,Ñtx,Ñtx,Ñtx);

3769 
πx
 
gí_©omic_„tch_™dhi
 (rtx,Ñtx,Ñtx,Ñtx);

3770 
πx
 
gí_©omic_„tch_addsi
 (rtx,Ñtx,Ñtx,Ñtx);

3771 
πx
 
gí_©omic_„tch_subsi
 (rtx,Ñtx,Ñtx,Ñtx);

3772 
πx
 
gí_©omic_„tch_‹si
 (rtx,Ñtx,Ñtx,Ñtx);

3773 
πx
 
gí_©omic_„tch_x‹si
 (rtx,Ñtx,Ñtx,Ñtx);

3774 
πx
 
gí_©omic_„tch_™dsi
 (rtx,Ñtx,Ñtx,Ñtx);

3775 
πx
 
gí_©omic_„tch_adddi
 (rtx,Ñtx,Ñtx,Ñtx);

3776 
πx
 
gí_©omic_„tch_subdi
 (rtx,Ñtx,Ñtx,Ñtx);

3777 
πx
 
gí_©omic_„tch_‹di
 (rtx,Ñtx,Ñtx,Ñtx);

3778 
πx
 
gí_©omic_„tch_x‹di
 (rtx,Ñtx,Ñtx,Ñtx);

3779 
πx
 
gí_©omic_„tch_™ddi
 (rtx,Ñtx,Ñtx,Ñtx);

3780 
πx
 
gí_©omic_„tch_«ndqi
 (rtx,Ñtx,Ñtx,Ñtx);

3781 
πx
 
gí_©omic_„tch_«ndhi
 (rtx,Ñtx,Ñtx,Ñtx);

3782 
πx
 
gí_©omic_„tch_«ndsi
 (rtx,Ñtx,Ñtx,Ñtx);

3783 
πx
 
gí_©omic_„tch_«nddi
 (rtx,Ñtx,Ñtx,Ñtx);

3784 
πx
 
gí_©omic_add_„tchqi
 (rtx,Ñtx,Ñtx,Ñtx);

3785 
πx
 
gí_©omic_sub_„tchqi
 (rtx,Ñtx,Ñtx,Ñtx);

3786 
πx
 
gí_©omic_‹_„tchqi
 (rtx,Ñtx,Ñtx,Ñtx);

3787 
πx
 
gí_©omic_x‹_„tchqi
 (rtx,Ñtx,Ñtx,Ñtx);

3788 
πx
 
gí_©omic_™d_„tchqi
 (rtx,Ñtx,Ñtx,Ñtx);

3789 
πx
 
gí_©omic_add_„tchhi
 (rtx,Ñtx,Ñtx,Ñtx);

3790 
πx
 
gí_©omic_sub_„tchhi
 (rtx,Ñtx,Ñtx,Ñtx);

3791 
πx
 
gí_©omic_‹_„tchhi
 (rtx,Ñtx,Ñtx,Ñtx);

3792 
πx
 
gí_©omic_x‹_„tchhi
 (rtx,Ñtx,Ñtx,Ñtx);

3793 
πx
 
gí_©omic_™d_„tchhi
 (rtx,Ñtx,Ñtx,Ñtx);

3794 
πx
 
gí_©omic_add_„tchsi
 (rtx,Ñtx,Ñtx,Ñtx);

3795 
πx
 
gí_©omic_sub_„tchsi
 (rtx,Ñtx,Ñtx,Ñtx);

3796 
πx
 
gí_©omic_‹_„tchsi
 (rtx,Ñtx,Ñtx,Ñtx);

3797 
πx
 
gí_©omic_x‹_„tchsi
 (rtx,Ñtx,Ñtx,Ñtx);

3798 
πx
 
gí_©omic_™d_„tchsi
 (rtx,Ñtx,Ñtx,Ñtx);

3799 
πx
 
gí_©omic_add_„tchdi
 (rtx,Ñtx,Ñtx,Ñtx);

3800 
πx
 
gí_©omic_sub_„tchdi
 (rtx,Ñtx,Ñtx,Ñtx);

3801 
πx
 
gí_©omic_‹_„tchdi
 (rtx,Ñtx,Ñtx,Ñtx);

3802 
πx
 
gí_©omic_x‹_„tchdi
 (rtx,Ñtx,Ñtx,Ñtx);

3803 
πx
 
gí_©omic_™d_„tchdi
 (rtx,Ñtx,Ñtx,Ñtx);

3804 
πx
 
gí_©omic_«nd_„tchqi
 (rtx,Ñtx,Ñtx,Ñtx);

3805 
πx
 
gí_©omic_«nd_„tchhi
 (rtx,Ñtx,Ñtx,Ñtx);

3806 
πx
 
gí_©omic_«nd_„tchsi
 (rtx,Ñtx,Ñtx,Ñtx);

3807 
πx
 
gí_©omic_«nd_„tchdi
 (rtx,Ñtx,Ñtx,Ñtx);

3808 
πx
 
gí_¨m_lﬂd_ex˛usiveqi
 (rtx,Ñtx);

3809 
πx
 
gí_¨m_lﬂd_ex˛usivehi
 (rtx,Ñtx);

3810 
πx
 
gí_¨m_lﬂd_acquúe_ex˛usiveqi
 (rtx,Ñtx);

3811 
πx
 
gí_¨m_lﬂd_acquúe_ex˛usivehi
 (rtx,Ñtx);

3812 
πx
 
gí_¨m_lﬂd_ex˛usivesi
 (rtx,Ñtx);

3813 
πx
 
gí_¨m_lﬂd_acquúe_ex˛usivesi
 (rtx,Ñtx);

3814 
πx
 
gí_¨m_lﬂd_ex˛usivedi
 (rtx,Ñtx);

3815 
πx
 
gí_¨m_lﬂd_acquúe_ex˛usivedi
 (rtx,Ñtx);

3816 
πx
 
gí_¨m_°‹e_ex˛usiveqi
 (rtx,Ñtx,Ñtx);

3817 
πx
 
gí_¨m_°‹e_ex˛usivehi
 (rtx,Ñtx,Ñtx);

3818 
πx
 
gí_¨m_°‹e_ex˛usivesi
 (rtx,Ñtx,Ñtx);

3819 
πx
 
gí_¨m_°‹e_ex˛usivedi
 (rtx,Ñtx,Ñtx);

3820 
πx
 
gí_¨m_°‹e_ªÀa£_ex˛usivedi
 (rtx,Ñtx,Ñtx);

3821 
πx
 
gí_¨m_°‹e_ªÀa£_ex˛usiveqi
 (rtx,Ñtx,Ñtx);

3822 
πx
 
gí_¨m_°‹e_ªÀa£_ex˛usivehi
 (rtx,Ñtx,Ñtx);

3823 
πx
 
gí_¨m_°‹e_ªÀa£_ex˛usivesi
 (rtx,Ñtx,Ñtx);

3824 
πx
 
gí_addqq3
 (rtx,Ñtx,Ñtx);

3825 
πx
 
gí_addhq3
 (rtx,Ñtx,Ñtx);

3826 
πx
 
gí_addsq3
 (rtx,Ñtx,Ñtx);

3827 
πx
 
gí_adduqq3
 (rtx,Ñtx,Ñtx);

3828 
πx
 
gí_adduhq3
 (rtx,Ñtx,Ñtx);

3829 
πx
 
gí_addusq3
 (rtx,Ñtx,Ñtx);

3830 
πx
 
gí_addha3
 (rtx,Ñtx,Ñtx);

3831 
πx
 
gí_addß3
 (rtx,Ñtx,Ñtx);

3832 
πx
 
gí_adduha3
 (rtx,Ñtx,Ñtx);

3833 
πx
 
gí_adduß3
 (rtx,Ñtx,Ñtx);

3834 
πx
 
gí_addv4qq3
 (rtx,Ñtx,Ñtx);

3835 
πx
 
gí_addv2hq3
 (rtx,Ñtx,Ñtx);

3836 
πx
 
gí_addv2ha3
 (rtx,Ñtx,Ñtx);

3837 
πx
 
gí_ußddv4uqq3
 (rtx,Ñtx,Ñtx);

3838 
πx
 
gí_ußddv2uhq3
 (rtx,Ñtx,Ñtx);

3839 
πx
 
gí_ußdduqq3
 (rtx,Ñtx,Ñtx);

3840 
πx
 
gí_ußdduhq3
 (rtx,Ñtx,Ñtx);

3841 
πx
 
gí_ußddv2uha3
 (rtx,Ñtx,Ñtx);

3842 
πx
 
gí_ußdduha3
 (rtx,Ñtx,Ñtx);

3843 
πx
 
gí_sßddv4qq3
 (rtx,Ñtx,Ñtx);

3844 
πx
 
gí_sßddv2hq3
 (rtx,Ñtx,Ñtx);

3845 
πx
 
gí_sßddqq3
 (rtx,Ñtx,Ñtx);

3846 
πx
 
gí_sßddhq3
 (rtx,Ñtx,Ñtx);

3847 
πx
 
gí_sßddv2ha3
 (rtx,Ñtx,Ñtx);

3848 
πx
 
gí_sßddha3
 (rtx,Ñtx,Ñtx);

3849 
πx
 
gí_sßddsq3
 (rtx,Ñtx,Ñtx);

3850 
πx
 
gí_sßddß3
 (rtx,Ñtx,Ñtx);

3851 
πx
 
gí_subqq3
 (rtx,Ñtx,Ñtx);

3852 
πx
 
gí_subhq3
 (rtx,Ñtx,Ñtx);

3853 
πx
 
gí_subsq3
 (rtx,Ñtx,Ñtx);

3854 
πx
 
gí_subuqq3
 (rtx,Ñtx,Ñtx);

3855 
πx
 
gí_subuhq3
 (rtx,Ñtx,Ñtx);

3856 
πx
 
gí_subusq3
 (rtx,Ñtx,Ñtx);

3857 
πx
 
gí_subha3
 (rtx,Ñtx,Ñtx);

3858 
πx
 
gí_subß3
 (rtx,Ñtx,Ñtx);

3859 
πx
 
gí_subuha3
 (rtx,Ñtx,Ñtx);

3860 
πx
 
gí_subuß3
 (rtx,Ñtx,Ñtx);

3861 
πx
 
gí_subv4qq3
 (rtx,Ñtx,Ñtx);

3862 
πx
 
gí_subv2hq3
 (rtx,Ñtx,Ñtx);

3863 
πx
 
gí_subv2ha3
 (rtx,Ñtx,Ñtx);

3864 
πx
 
gí_ussubv4uqq3
 (rtx,Ñtx,Ñtx);

3865 
πx
 
gí_ussubv2uhq3
 (rtx,Ñtx,Ñtx);

3866 
πx
 
gí_ussubuqq3
 (rtx,Ñtx,Ñtx);

3867 
πx
 
gí_ussubuhq3
 (rtx,Ñtx,Ñtx);

3868 
πx
 
gí_ussubv2uha3
 (rtx,Ñtx,Ñtx);

3869 
πx
 
gí_ussubuha3
 (rtx,Ñtx,Ñtx);

3870 
πx
 
gí_sssubv4qq3
 (rtx,Ñtx,Ñtx);

3871 
πx
 
gí_sssubv2hq3
 (rtx,Ñtx,Ñtx);

3872 
πx
 
gí_sssubqq3
 (rtx,Ñtx,Ñtx);

3873 
πx
 
gí_sssubhq3
 (rtx,Ñtx,Ñtx);

3874 
πx
 
gí_sssubv2ha3
 (rtx,Ñtx,Ñtx);

3875 
πx
 
gí_sssubha3
 (rtx,Ñtx,Ñtx);

3876 
πx
 
gí_sssubsq3
 (rtx,Ñtx,Ñtx);

3877 
πx
 
gí_sssubß3
 (rtx,Ñtx,Ñtx);

3878 
πx
 
gí_ssmulß3
 (rtx,Ñtx,Ñtx);

3879 
πx
 
gí_usmuluß3
 (rtx,Ñtx,Ñtx);

3880 
πx
 
gí_¨m_sßtsihi_shi·
 (rtx,Ñtx,Ñtx,Ñtx);

3881 
πx
 
gí_¨m_ußtsihi
 (rtx,Ñtx);

3882 
πx
 
gí_adddi3
 (rtx,Ñtx,Ñtx);

3883 
πx
 
gí_addsi3
 (rtx,Ñtx,Ñtx);

3884 
πx
 
gí_addsf3
 (rtx,Ñtx,Ñtx);

3885 
πx
 
gí_adddf3
 (rtx,Ñtx,Ñtx);

3886 
πx
 
gí_subdi3
 (rtx,Ñtx,Ñtx);

3887 
πx
 
gí_subsi3
 (rtx,Ñtx,Ñtx);

3888 
πx
 
gí_subsf3
 (rtx,Ñtx,Ñtx);

3889 
πx
 
gí_subdf3
 (rtx,Ñtx,Ñtx);

3890 
πx
 
gí_mulhi3
 (rtx,Ñtx,Ñtx);

3891 
πx
 
gí_mulsi3
 (rtx,Ñtx,Ñtx);

3892 
πx
 
gí_maddsidi4
 (rtx,Ñtx,Ñtx,Ñtx);

3893 
πx
 
gí_mulsidi3
 (rtx,Ñtx,Ñtx);

3894 
πx
 
gí_umulsidi3
 (rtx,Ñtx,Ñtx);

3895 
πx
 
gí_umaddsidi4
 (rtx,Ñtx,Ñtx,Ñtx);

3896 
πx
 
gí_smulsi3_high∑π
 (rtx,Ñtx,Ñtx);

3897 
πx
 
gí_umulsi3_high∑π
 (rtx,Ñtx,Ñtx);

3898 
πx
 
gí_mulsf3
 (rtx,Ñtx,Ñtx);

3899 
πx
 
gí_muldf3
 (rtx,Ñtx,Ñtx);

3900 
πx
 
gí_divsf3
 (rtx,Ñtx,Ñtx);

3901 
πx
 
gí_divdf3
 (rtx,Ñtx,Ñtx);

3902 
πx
 
gí_™ddi3
 (rtx,Ñtx,Ñtx);

3903 
πx
 
gí_™dsi3
 (rtx,Ñtx,Ñtx);

3904 
πx
 
gí_ösv
 (rtx,Ñtx,Ñtx,Ñtx);

3905 
πx
 
gí_i‹di3
 (rtx,Ñtx,Ñtx);

3906 
πx
 
gí_i‹si3
 (rtx,Ñtx,Ñtx);

3907 
πx
 
gí_x‹di3
 (rtx,Ñtx,Ñtx);

3908 
πx
 
gí_x‹si3
 (rtx,Ñtx,Ñtx);

3909 
πx
 
gí_smaxsi3
 (rtx,Ñtx,Ñtx);

3910 
πx
 
gí_smösi3
 (rtx,Ñtx,Ñtx);

3911 
πx
 
gí_umaxsi3
 (rtx,Ñtx,Ñtx);

3912 
πx
 
gí_umösi3
 (rtx,Ñtx,Ñtx);

3913 
πx
 
gí_ashldi3
 (rtx,Ñtx,Ñtx);

3914 
πx
 
gí_ashlsi3
 (rtx,Ñtx,Ñtx);

3915 
πx
 
gí_ashrdi3
 (rtx,Ñtx,Ñtx);

3916 
πx
 
gí_ashrsi3
 (rtx,Ñtx,Ñtx);

3917 
πx
 
gí_lshrdi3
 (rtx,Ñtx,Ñtx);

3918 
πx
 
gí_lshrsi3
 (rtx,Ñtx,Ñtx);

3919 
πx
 
gí_rŸlsi3
 (rtx,Ñtx,Ñtx);

3920 
πx
 
gí_rŸrsi3
 (rtx,Ñtx,Ñtx);

3921 
πx
 
gí_extzv
 (rtx,Ñtx,Ñtx,Ñtx);

3922 
πx
 
gí_extzv_t1
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

3923 
πx
 
gí_extv
 (rtx,Ñtx,Ñtx,Ñtx);

3924 
πx
 
gí_extv_ªgsi
 (rtx,Ñtx,Ñtx,Ñtx);

3925 
πx
 
gí_√gdi2
 (rtx,Ñtx);

3926 
πx
 
gí_√gsi2
 (rtx,Ñtx);

3927 
πx
 
gí_√gsf2
 (rtx,Ñtx);

3928 
πx
 
gí_√gdf2
 (rtx,Ñtx);

3929 
πx
 
gí_abssi2
 (rtx,Ñtx);

3930 
πx
 
gí_abssf2
 (rtx,Ñtx);

3931 
πx
 
gí_absdf2
 (rtx,Ñtx);

3932 
πx
 
gí_sqπsf2
 (rtx,Ñtx);

3933 
πx
 
gí_sqπdf2
 (rtx,Ñtx);

3934 
πx
 
gí_⁄e_cm∂si2
 (rtx,Ñtx);

3935 
πx
 
gí_Êﬂtsihf2
 (rtx,Ñtx);

3936 
πx
 
gí_Êﬂtdihf2
 (rtx,Ñtx);

3937 
πx
 
gí_Êﬂtsisf2
 (rtx,Ñtx);

3938 
πx
 
gí_Êﬂtsidf2
 (rtx,Ñtx);

3939 
πx
 
gí_fix_åunchfsi2
 (rtx,Ñtx);

3940 
πx
 
gí_fix_åunchfdi2
 (rtx,Ñtx);

3941 
πx
 
gí_fix_åuncsfsi2
 (rtx,Ñtx);

3942 
πx
 
gí_fix_åuncdfsi2
 (rtx,Ñtx);

3943 
πx
 
gí_åuncdfsf2
 (rtx,Ñtx);

3944 
πx
 
gí_åuncdfhf2
 (rtx,Ñtx);

3945 
πx
 
gí_zîo_exãndhisi2
 (rtx,Ñtx);

3946 
πx
 
gí_zîo_exãndqisi2
 (rtx,Ñtx);

3947 
πx
 
gí_exãndhisi2
 (rtx,Ñtx);

3948 
πx
 
gí_exãndhisi2_mem
 (rtx,Ñtx);

3949 
πx
 
gí_exãndqihi2
 (rtx,Ñtx);

3950 
πx
 
gí_exãndqisi2
 (rtx,Ñtx);

3951 
πx
 
gí_exãndsfdf2
 (rtx,Ñtx);

3952 
πx
 
gí_exãndhfdf2
 (rtx,Ñtx);

3953 
πx
 
gí_movdi
 (rtx,Ñtx);

3954 
πx
 
gí_movsi
 (rtx,Ñtx);

3955 
πx
 
gí_ˇlcuœã_pic_addªss
 (rtx,Ñtx,Ñtx);

3956 
πx
 
gí_buûtö_£tjmp_ª˚ivî
 (rtx);

3957 
πx
 
gí_°‹ehi
 (rtx,Ñtx);

3958 
πx
 
gí_°‹ehi_bigíd
 (rtx,Ñtx);

3959 
πx
 
gí_°‹eöthi
 (rtx,Ñtx);

3960 
πx
 
gí_°‹ehi_sögÀ_›
 (rtx,Ñtx);

3961 
πx
 
gí_movhi
 (rtx,Ñtx);

3962 
πx
 
gí_movhi_byãs
 (rtx,Ñtx);

3963 
πx
 
gí_movhi_bigíd
 (rtx,Ñtx);

3964 
πx
 
gí_ªlﬂd_outhi
 (rtx,Ñtx,Ñtx);

3965 
πx
 
gí_ªlﬂd_öhi
 (rtx,Ñtx,Ñtx);

3966 
πx
 
gí_movqi
 (rtx,Ñtx);

3967 
πx
 
gí_movhf
 (rtx,Ñtx);

3968 
πx
 
gí_movsf
 (rtx,Ñtx);

3969 
πx
 
gí_movdf
 (rtx,Ñtx);

3970 
πx
 
gí_ªlﬂd_outdf
 (rtx,Ñtx,Ñtx);

3971 
πx
 
gí_lﬂd_mu…ùÀ
 (rtx,Ñtx,Ñtx);

3972 
πx
 
gí_°‹e_mu…ùÀ
 (rtx,Ñtx,Ñtx);

3973 
πx
 
gí_movmemqi
 (rtx,Ñtx,Ñtx,Ñtx);

3974 
πx
 
gí_cbønchsi4
 (rtx,Ñtx,Ñtx,Ñtx);

3975 
πx
 
gí_cbønchsf4
 (rtx,Ñtx,Ñtx,Ñtx);

3976 
πx
 
gí_cbønchdf4
 (rtx,Ñtx,Ñtx,Ñtx);

3977 
πx
 
gí_cbønchdi4
 (rtx,Ñtx,Ñtx,Ñtx);

3978 
πx
 
gí_cbønch_cc
 (rtx,Ñtx,Ñtx,Ñtx);

3979 
πx
 
gí_c°‹e_cc
 (rtx,Ñtx,Ñtx,Ñtx);

3980 
πx
 
gí_c°‹esi4
 (rtx,Ñtx,Ñtx,Ñtx);

3981 
πx
 
gí_c°‹esf4
 (rtx,Ñtx,Ñtx,Ñtx);

3982 
πx
 
gí_c°‹edf4
 (rtx,Ñtx,Ñtx,Ñtx);

3983 
πx
 
gí_c°‹edi4
 (rtx,Ñtx,Ñtx,Ñtx);

3984 
πx
 
gí_movsicc
 (rtx,Ñtx,Ñtx,Ñtx);

3985 
πx
 
gí_movsfcc
 (rtx,Ñtx,Ñtx,Ñtx);

3986 
πx
 
gí_movdfcc
 (rtx,Ñtx,Ñtx,Ñtx);

3987 
πx
 
gí_jump
 (rtx);

3988 
	#GEN_CALL
(
A
, 
B
, 
C
, 
D
Ë
	`gí_ˇŒ
 ((A), (B), (C))

	)

3989 
πx
 
gí_ˇŒ
 (rtx,Ñtx,Ñtx);

3990 
πx
 
gí_ˇŒ_öã∫Æ
 (rtx,Ñtx,Ñtx);

3991 
	#GEN_CALL_VALUE
(
A
, 
B
, 
C
, 
D
, 
E
Ë
	`gí_ˇŒ_vÆue
 ((A), (B), (C), (D))

	)

3992 
πx
 
gí_ˇŒ_vÆue
 (rtx,Ñtx,Ñtx,Ñtx);

3993 
πx
 
gí_ˇŒ_vÆue_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

3994 
	#GEN_SIBCALL
(
A
, 
B
, 
C
, 
D
Ë
	`gí_sibˇŒ
 ((A), (B), (C))

	)

3995 
πx
 
gí_sibˇŒ
 (rtx,Ñtx,Ñtx);

3996 
	#GEN_SIBCALL_VALUE
(
A
, 
B
, 
C
, 
D
, 
E
Ë
	`gí_sibˇŒ_vÆue
 ((A), (B), (C), (D))

	)

3997 
πx
 
gí_sibˇŒ_vÆue
 (rtx,Ñtx,Ñtx,Ñtx);

3998 
πx
 
gí_ªtu∫
 ();

3999 
πx
 
gí_sim∂e_ªtu∫
 ();

4000 
πx
 
gí_ªtu∫_addr_mask
 (rtx);

4001 
πx
 
gí_u¡y≥d_ˇŒ
 (rtx,Ñtx,Ñtx);

4002 
πx
 
gí_u¡y≥d_ªtu∫
 (rtx,Ñtx);

4003 
πx
 
gí_ˇ£si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4004 
πx
 
gí_ödúe˘_jump
 (rtx);

4005 
πx
 
gí_¥ﬁogue
 ();

4006 
πx
 
gí_ïûogue
 ();

4007 
πx
 
gí_sibˇŒ_ïûogue
 ();

4008 
πx
 
gí_eh_ïûogue
 (rtx,Ñtx,Ñtx);

4009 
πx
 
gí_˘zsi2
 (rtx,Ñtx);

4010 
πx
 
gí_eh_ªtu∫
 (rtx);

4011 
πx
 
gí_gë_thªad_poöãrsi
 (rtx);

4012 
πx
 
gí_¨m_Àgacy_ªv
 (rtx,Ñtx,Ñtx,Ñtx);

4013 
πx
 
gí_thumb_Àgacy_ªv
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4014 
πx
 
gí_bsw≠si2
 (rtx,Ñtx);

4015 
πx
 
gí_bsw≠hi2
 (rtx,Ñtx);

4016 
πx
 
gí_movv2di
 (rtx,Ñtx);

4017 
πx
 
gí_movv2si
 (rtx,Ñtx);

4018 
πx
 
gí_movv4hi
 (rtx,Ñtx);

4019 
πx
 
gí_movv8qi
 (rtx,Ñtx);

4020 
πx
 
gí_movv2sf
 (rtx,Ñtx);

4021 
πx
 
gí_movv4si
 (rtx,Ñtx);

4022 
πx
 
gí_movv8hi
 (rtx,Ñtx);

4023 
πx
 
gí_movv16qi
 (rtx,Ñtx);

4024 
πx
 
gí_movv4sf
 (rtx,Ñtx);

4025 
πx
 
gí_addv2di3
 (rtx,Ñtx,Ñtx);

4026 
πx
 
gí_addv2si3
 (rtx,Ñtx,Ñtx);

4027 
πx
 
gí_addv4hi3
 (rtx,Ñtx,Ñtx);

4028 
πx
 
gí_addv8qi3
 (rtx,Ñtx,Ñtx);

4029 
πx
 
gí_addv2sf3
 (rtx,Ñtx,Ñtx);

4030 
πx
 
gí_addv4si3
 (rtx,Ñtx,Ñtx);

4031 
πx
 
gí_addv8hi3
 (rtx,Ñtx,Ñtx);

4032 
πx
 
gí_addv16qi3
 (rtx,Ñtx,Ñtx);

4033 
πx
 
gí_addv4sf3
 (rtx,Ñtx,Ñtx);

4034 
πx
 
gí_subv2di3
 (rtx,Ñtx,Ñtx);

4035 
πx
 
gí_subv2si3
 (rtx,Ñtx,Ñtx);

4036 
πx
 
gí_subv4hi3
 (rtx,Ñtx,Ñtx);

4037 
πx
 
gí_subv8qi3
 (rtx,Ñtx,Ñtx);

4038 
πx
 
gí_subv2sf3
 (rtx,Ñtx,Ñtx);

4039 
πx
 
gí_subv4si3
 (rtx,Ñtx,Ñtx);

4040 
πx
 
gí_subv8hi3
 (rtx,Ñtx,Ñtx);

4041 
πx
 
gí_subv16qi3
 (rtx,Ñtx,Ñtx);

4042 
πx
 
gí_subv4sf3
 (rtx,Ñtx,Ñtx);

4043 
πx
 
gí_mulv2si3
 (rtx,Ñtx,Ñtx);

4044 
πx
 
gí_mulv4hi3
 (rtx,Ñtx,Ñtx);

4045 
πx
 
gí_mulv8qi3
 (rtx,Ñtx,Ñtx);

4046 
πx
 
gí_mulv2sf3
 (rtx,Ñtx,Ñtx);

4047 
πx
 
gí_mulv4si3
 (rtx,Ñtx,Ñtx);

4048 
πx
 
gí_mulv8hi3
 (rtx,Ñtx,Ñtx);

4049 
πx
 
gí_mulv16qi3
 (rtx,Ñtx,Ñtx);

4050 
πx
 
gí_mulv4sf3
 (rtx,Ñtx,Ñtx);

4051 
πx
 
gí_smöv2si3
 (rtx,Ñtx,Ñtx);

4052 
πx
 
gí_smöv4hi3
 (rtx,Ñtx,Ñtx);

4053 
πx
 
gí_smöv8qi3
 (rtx,Ñtx,Ñtx);

4054 
πx
 
gí_smöv2sf3
 (rtx,Ñtx,Ñtx);

4055 
πx
 
gí_smöv4si3
 (rtx,Ñtx,Ñtx);

4056 
πx
 
gí_smöv8hi3
 (rtx,Ñtx,Ñtx);

4057 
πx
 
gí_smöv16qi3
 (rtx,Ñtx,Ñtx);

4058 
πx
 
gí_smöv4sf3
 (rtx,Ñtx,Ñtx);

4059 
πx
 
gí_umöv2si3
 (rtx,Ñtx,Ñtx);

4060 
πx
 
gí_umöv4hi3
 (rtx,Ñtx,Ñtx);

4061 
πx
 
gí_umöv8qi3
 (rtx,Ñtx,Ñtx);

4062 
πx
 
gí_umöv4si3
 (rtx,Ñtx,Ñtx);

4063 
πx
 
gí_umöv8hi3
 (rtx,Ñtx,Ñtx);

4064 
πx
 
gí_umöv16qi3
 (rtx,Ñtx,Ñtx);

4065 
πx
 
gí_smaxv2si3
 (rtx,Ñtx,Ñtx);

4066 
πx
 
gí_smaxv4hi3
 (rtx,Ñtx,Ñtx);

4067 
πx
 
gí_smaxv8qi3
 (rtx,Ñtx,Ñtx);

4068 
πx
 
gí_smaxv2sf3
 (rtx,Ñtx,Ñtx);

4069 
πx
 
gí_smaxv4si3
 (rtx,Ñtx,Ñtx);

4070 
πx
 
gí_smaxv8hi3
 (rtx,Ñtx,Ñtx);

4071 
πx
 
gí_smaxv16qi3
 (rtx,Ñtx,Ñtx);

4072 
πx
 
gí_smaxv4sf3
 (rtx,Ñtx,Ñtx);

4073 
πx
 
gí_umaxv2si3
 (rtx,Ñtx,Ñtx);

4074 
πx
 
gí_umaxv4hi3
 (rtx,Ñtx,Ñtx);

4075 
πx
 
gí_umaxv8qi3
 (rtx,Ñtx,Ñtx);

4076 
πx
 
gí_umaxv4si3
 (rtx,Ñtx,Ñtx);

4077 
πx
 
gí_umaxv8hi3
 (rtx,Ñtx,Ñtx);

4078 
πx
 
gí_umaxv16qi3
 (rtx,Ñtx,Ñtx);

4079 
πx
 
gí_vec_≥rm_c⁄°v2di
 (rtx,Ñtx,Ñtx,Ñtx);

4080 
πx
 
gí_vec_≥rm_c⁄°v2si
 (rtx,Ñtx,Ñtx,Ñtx);

4081 
πx
 
gí_vec_≥rm_c⁄°v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4082 
πx
 
gí_vec_≥rm_c⁄°v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4083 
πx
 
gí_vec_≥rm_c⁄°v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4084 
πx
 
gí_vec_≥rm_c⁄°v4si
 (rtx,Ñtx,Ñtx,Ñtx);

4085 
πx
 
gí_vec_≥rm_c⁄°v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4086 
πx
 
gí_vec_≥rm_c⁄°v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4087 
πx
 
gí_vec_≥rm_c⁄°v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4088 
πx
 
gí_vec_≥rmv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4089 
πx
 
gí_vec_≥rmv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4090 
πx
 
gí_iwmmxt_£twcgr0
 (rtx);

4091 
πx
 
gí_iwmmxt_£twcgr1
 (rtx);

4092 
πx
 
gí_iwmmxt_£twcgr2
 (rtx);

4093 
πx
 
gí_iwmmxt_£twcgr3
 (rtx);

4094 
πx
 
gí_iwmmxt_gëwcgr0
 (rtx);

4095 
πx
 
gí_iwmmxt_gëwcgr1
 (rtx);

4096 
πx
 
gí_iwmmxt_gëwcgr2
 (rtx);

4097 
πx
 
gí_iwmmxt_gëwcgr3
 (rtx);

4098 
πx
 
gí_thumb_movhi_˛obbî
 (rtx,Ñtx,Ñtx);

4099 
πx
 
gí_cbønchqi4
 (rtx,Ñtx,Ñtx,Ñtx);

4100 
πx
 
gí_c°‹esi_eq0_thumb1
 (rtx,Ñtx);

4101 
πx
 
gí_c°‹esi_√0_thumb1
 (rtx,Ñtx);

4102 
πx
 
gí_thumb1_ˇ£si_öã∫Æ_pic
 (rtx,Ñtx,Ñtx,Ñtx);

4103 
πx
 
gí_èbÀjump
 (rtx,Ñtx);

4104 
πx
 
gí_dﬁo›_íd
 (rtx,Ñtx);

4105 
πx
 
gí_movti
 (rtx,Ñtx);

4106 
πx
 
gí_movei
 (rtx,Ñtx);

4107 
πx
 
gí_movoi
 (rtx,Ñtx);

4108 
πx
 
gí_movci
 (rtx,Ñtx);

4109 
πx
 
gí_movxi
 (rtx,Ñtx);

4110 
πx
 
gí_movmißlignv8qi
 (rtx,Ñtx);

4111 
πx
 
gí_movmißlignv16qi
 (rtx,Ñtx);

4112 
πx
 
gí_movmißlignv4hi
 (rtx,Ñtx);

4113 
πx
 
gí_movmißlignv8hi
 (rtx,Ñtx);

4114 
πx
 
gí_movmißlignv2si
 (rtx,Ñtx);

4115 
πx
 
gí_movmißlignv4si
 (rtx,Ñtx);

4116 
πx
 
gí_movmißlignv2sf
 (rtx,Ñtx);

4117 
πx
 
gí_movmißlignv4sf
 (rtx,Ñtx);

4118 
πx
 
gí_movmißligndi
 (rtx,Ñtx);

4119 
πx
 
gí_movmißlignv2di
 (rtx,Ñtx);

4120 
πx
 
gí_vec_£tv8qi
 (rtx,Ñtx,Ñtx);

4121 
πx
 
gí_vec_£tv16qi
 (rtx,Ñtx,Ñtx);

4122 
πx
 
gí_vec_£tv4hi
 (rtx,Ñtx,Ñtx);

4123 
πx
 
gí_vec_£tv8hi
 (rtx,Ñtx,Ñtx);

4124 
πx
 
gí_vec_£tv2si
 (rtx,Ñtx,Ñtx);

4125 
πx
 
gí_vec_£tv4si
 (rtx,Ñtx,Ñtx);

4126 
πx
 
gí_vec_£tv2sf
 (rtx,Ñtx,Ñtx);

4127 
πx
 
gí_vec_£tv4sf
 (rtx,Ñtx,Ñtx);

4128 
πx
 
gí_vec_£tv2di
 (rtx,Ñtx,Ñtx);

4129 
πx
 
gí_vec_öôv8qi
 (rtx,Ñtx);

4130 
πx
 
gí_vec_öôv16qi
 (rtx,Ñtx);

4131 
πx
 
gí_vec_öôv4hi
 (rtx,Ñtx);

4132 
πx
 
gí_vec_öôv8hi
 (rtx,Ñtx);

4133 
πx
 
gí_vec_öôv2si
 (rtx,Ñtx);

4134 
πx
 
gí_vec_öôv4si
 (rtx,Ñtx);

4135 
πx
 
gí_vec_öôv2sf
 (rtx,Ñtx);

4136 
πx
 
gí_vec_öôv4sf
 (rtx,Ñtx);

4137 
πx
 
gí_vec_öôv2di
 (rtx,Ñtx);

4138 
πx
 
gí_vashrv8qi3
 (rtx,Ñtx,Ñtx);

4139 
πx
 
gí_vashrv16qi3
 (rtx,Ñtx,Ñtx);

4140 
πx
 
gí_vashrv4hi3
 (rtx,Ñtx,Ñtx);

4141 
πx
 
gí_vashrv8hi3
 (rtx,Ñtx,Ñtx);

4142 
πx
 
gí_vashrv2si3
 (rtx,Ñtx,Ñtx);

4143 
πx
 
gí_vashrv4si3
 (rtx,Ñtx,Ñtx);

4144 
πx
 
gí_vlshrv8qi3
 (rtx,Ñtx,Ñtx);

4145 
πx
 
gí_vlshrv16qi3
 (rtx,Ñtx,Ñtx);

4146 
πx
 
gí_vlshrv4hi3
 (rtx,Ñtx,Ñtx);

4147 
πx
 
gí_vlshrv8hi3
 (rtx,Ñtx,Ñtx);

4148 
πx
 
gí_vlshrv2si3
 (rtx,Ñtx,Ñtx);

4149 
πx
 
gí_vlshrv4si3
 (rtx,Ñtx,Ñtx);

4150 
πx
 
gí_vec_shr_v8qi
 (rtx,Ñtx,Ñtx);

4151 
πx
 
gí_vec_shr_v16qi
 (rtx,Ñtx,Ñtx);

4152 
πx
 
gí_vec_shr_v4hi
 (rtx,Ñtx,Ñtx);

4153 
πx
 
gí_vec_shr_v8hi
 (rtx,Ñtx,Ñtx);

4154 
πx
 
gí_vec_shr_v2si
 (rtx,Ñtx,Ñtx);

4155 
πx
 
gí_vec_shr_v4si
 (rtx,Ñtx,Ñtx);

4156 
πx
 
gí_vec_shr_v2sf
 (rtx,Ñtx,Ñtx);

4157 
πx
 
gí_vec_shr_v4sf
 (rtx,Ñtx,Ñtx);

4158 
πx
 
gí_vec_shr_v2di
 (rtx,Ñtx,Ñtx);

4159 
πx
 
gí_vec_shl_v8qi
 (rtx,Ñtx,Ñtx);

4160 
πx
 
gí_vec_shl_v16qi
 (rtx,Ñtx,Ñtx);

4161 
πx
 
gí_vec_shl_v4hi
 (rtx,Ñtx,Ñtx);

4162 
πx
 
gí_vec_shl_v8hi
 (rtx,Ñtx,Ñtx);

4163 
πx
 
gí_vec_shl_v2si
 (rtx,Ñtx,Ñtx);

4164 
πx
 
gí_vec_shl_v4si
 (rtx,Ñtx,Ñtx);

4165 
πx
 
gí_vec_shl_v2sf
 (rtx,Ñtx,Ñtx);

4166 
πx
 
gí_vec_shl_v4sf
 (rtx,Ñtx,Ñtx);

4167 
πx
 
gí_vec_shl_v2di
 (rtx,Ñtx,Ñtx);

4168 
πx
 
gí_move_hi_quad_v2di
 (rtx,Ñtx);

4169 
πx
 
gí_move_hi_quad_v2df
 (rtx,Ñtx);

4170 
πx
 
gí_move_hi_quad_v16qi
 (rtx,Ñtx);

4171 
πx
 
gí_move_hi_quad_v8hi
 (rtx,Ñtx);

4172 
πx
 
gí_move_hi_quad_v4si
 (rtx,Ñtx);

4173 
πx
 
gí_move_hi_quad_v4sf
 (rtx,Ñtx);

4174 
πx
 
gí_move_lo_quad_v2di
 (rtx,Ñtx);

4175 
πx
 
gí_move_lo_quad_v2df
 (rtx,Ñtx);

4176 
πx
 
gí_move_lo_quad_v16qi
 (rtx,Ñtx);

4177 
πx
 
gí_move_lo_quad_v8hi
 (rtx,Ñtx);

4178 
πx
 
gí_move_lo_quad_v4si
 (rtx,Ñtx);

4179 
πx
 
gí_move_lo_quad_v4sf
 (rtx,Ñtx);

4180 
πx
 
gí_ªduc_•lus_v8qi
 (rtx,Ñtx);

4181 
πx
 
gí_ªduc_•lus_v4hi
 (rtx,Ñtx);

4182 
πx
 
gí_ªduc_•lus_v2si
 (rtx,Ñtx);

4183 
πx
 
gí_ªduc_•lus_v2sf
 (rtx,Ñtx);

4184 
πx
 
gí_ªduc_•lus_v16qi
 (rtx,Ñtx);

4185 
πx
 
gí_ªduc_•lus_v8hi
 (rtx,Ñtx);

4186 
πx
 
gí_ªduc_•lus_v4si
 (rtx,Ñtx);

4187 
πx
 
gí_ªduc_•lus_v4sf
 (rtx,Ñtx);

4188 
πx
 
gí_ªduc_u∂us_v8qi
 (rtx,Ñtx);

4189 
πx
 
gí_ªduc_u∂us_v16qi
 (rtx,Ñtx);

4190 
πx
 
gí_ªduc_u∂us_v4hi
 (rtx,Ñtx);

4191 
πx
 
gí_ªduc_u∂us_v8hi
 (rtx,Ñtx);

4192 
πx
 
gí_ªduc_u∂us_v2si
 (rtx,Ñtx);

4193 
πx
 
gí_ªduc_u∂us_v4si
 (rtx,Ñtx);

4194 
πx
 
gí_ªduc_u∂us_v2di
 (rtx,Ñtx);

4195 
πx
 
gí_ªduc_smö_v8qi
 (rtx,Ñtx);

4196 
πx
 
gí_ªduc_smö_v4hi
 (rtx,Ñtx);

4197 
πx
 
gí_ªduc_smö_v2si
 (rtx,Ñtx);

4198 
πx
 
gí_ªduc_smö_v2sf
 (rtx,Ñtx);

4199 
πx
 
gí_ªduc_smö_v16qi
 (rtx,Ñtx);

4200 
πx
 
gí_ªduc_smö_v8hi
 (rtx,Ñtx);

4201 
πx
 
gí_ªduc_smö_v4si
 (rtx,Ñtx);

4202 
πx
 
gí_ªduc_smö_v4sf
 (rtx,Ñtx);

4203 
πx
 
gí_ªduc_smax_v8qi
 (rtx,Ñtx);

4204 
πx
 
gí_ªduc_smax_v4hi
 (rtx,Ñtx);

4205 
πx
 
gí_ªduc_smax_v2si
 (rtx,Ñtx);

4206 
πx
 
gí_ªduc_smax_v2sf
 (rtx,Ñtx);

4207 
πx
 
gí_ªduc_smax_v16qi
 (rtx,Ñtx);

4208 
πx
 
gí_ªduc_smax_v8hi
 (rtx,Ñtx);

4209 
πx
 
gí_ªduc_smax_v4si
 (rtx,Ñtx);

4210 
πx
 
gí_ªduc_smax_v4sf
 (rtx,Ñtx);

4211 
πx
 
gí_ªduc_umö_v8qi
 (rtx,Ñtx);

4212 
πx
 
gí_ªduc_umö_v4hi
 (rtx,Ñtx);

4213 
πx
 
gí_ªduc_umö_v2si
 (rtx,Ñtx);

4214 
πx
 
gí_ªduc_umö_v16qi
 (rtx,Ñtx);

4215 
πx
 
gí_ªduc_umö_v8hi
 (rtx,Ñtx);

4216 
πx
 
gí_ªduc_umö_v4si
 (rtx,Ñtx);

4217 
πx
 
gí_ªduc_umax_v8qi
 (rtx,Ñtx);

4218 
πx
 
gí_ªduc_umax_v4hi
 (rtx,Ñtx);

4219 
πx
 
gí_ªduc_umax_v2si
 (rtx,Ñtx);

4220 
πx
 
gí_ªduc_umax_v16qi
 (rtx,Ñtx);

4221 
πx
 
gí_ªduc_umax_v8hi
 (rtx,Ñtx);

4222 
πx
 
gí_ªduc_umax_v4si
 (rtx,Ñtx);

4223 
πx
 
gí_vc⁄dv8qiv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4224 
πx
 
gí_vc⁄dv16qiv16qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4225 
πx
 
gí_vc⁄dv4hiv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4226 
πx
 
gí_vc⁄dv8hiv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4227 
πx
 
gí_vc⁄dv2siv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4228 
πx
 
gí_vc⁄dv4siv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4229 
πx
 
gí_vc⁄dv2sfv2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4230 
πx
 
gí_vc⁄dv4sfv4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4231 
πx
 
gí_vc⁄duv8qiv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4232 
πx
 
gí_vc⁄duv16qiv16qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4233 
πx
 
gí_vc⁄duv4hiv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4234 
πx
 
gí_vc⁄duv8hiv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4235 
πx
 
gí_vc⁄duv2siv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4236 
πx
 
gí_vc⁄duv4siv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4237 
πx
 
gí_√⁄_vaddv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4238 
πx
 
gí_√⁄_vaddv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4239 
πx
 
gí_√⁄_vaddv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4240 
πx
 
gí_√⁄_vaddv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4241 
πx
 
gí_√⁄_vaddv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4242 
πx
 
gí_√⁄_vaddv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4243 
πx
 
gí_√⁄_vaddv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4244 
πx
 
gí_√⁄_vaddv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4245 
πx
 
gí_√⁄_vadddi
 (rtx,Ñtx,Ñtx,Ñtx);

4246 
πx
 
gí_√⁄_vaddv2di
 (rtx,Ñtx,Ñtx,Ñtx);

4247 
πx
 
gí_√⁄_vmœv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4248 
πx
 
gí_√⁄_vmœv16qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4249 
πx
 
gí_√⁄_vmœv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4250 
πx
 
gí_√⁄_vmœv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4251 
πx
 
gí_√⁄_vmœv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4252 
πx
 
gí_√⁄_vmœv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4253 
πx
 
gí_√⁄_vmœv2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4254 
πx
 
gí_√⁄_vmœv4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4255 
πx
 
gí_√⁄_vfmav2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4256 
πx
 
gí_√⁄_vfmav4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4257 
πx
 
gí_√⁄_vfmsv2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4258 
πx
 
gí_√⁄_vfmsv4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4259 
πx
 
gí_√⁄_vmlsv8qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4260 
πx
 
gí_√⁄_vmlsv16qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4261 
πx
 
gí_√⁄_vmlsv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4262 
πx
 
gí_√⁄_vmlsv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4263 
πx
 
gí_√⁄_vmlsv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4264 
πx
 
gí_√⁄_vmlsv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4265 
πx
 
gí_√⁄_vmlsv2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4266 
πx
 
gí_√⁄_vmlsv4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4267 
πx
 
gí_√⁄_vsubv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4268 
πx
 
gí_√⁄_vsubv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4269 
πx
 
gí_√⁄_vsubv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4270 
πx
 
gí_√⁄_vsubv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4271 
πx
 
gí_√⁄_vsubv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4272 
πx
 
gí_√⁄_vsubv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4273 
πx
 
gí_√⁄_vsubv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4274 
πx
 
gí_√⁄_vsubv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4275 
πx
 
gí_√⁄_vsubdi
 (rtx,Ñtx,Ñtx,Ñtx);

4276 
πx
 
gí_√⁄_vsubv2di
 (rtx,Ñtx,Ñtx,Ñtx);

4277 
πx
 
gí_√⁄_v∑ddv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4278 
πx
 
gí_√⁄_v∑ddv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4279 
πx
 
gí_√⁄_v∑ddv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4280 
πx
 
gí_√⁄_v∑ddv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4281 
πx
 
gí_√⁄_vabsv8qi
 (rtx,Ñtx,Ñtx);

4282 
πx
 
gí_√⁄_vabsv16qi
 (rtx,Ñtx,Ñtx);

4283 
πx
 
gí_√⁄_vabsv4hi
 (rtx,Ñtx,Ñtx);

4284 
πx
 
gí_√⁄_vabsv8hi
 (rtx,Ñtx,Ñtx);

4285 
πx
 
gí_√⁄_vabsv2si
 (rtx,Ñtx,Ñtx);

4286 
πx
 
gí_√⁄_vabsv4si
 (rtx,Ñtx,Ñtx);

4287 
πx
 
gí_√⁄_vabsv2sf
 (rtx,Ñtx,Ñtx);

4288 
πx
 
gí_√⁄_vabsv4sf
 (rtx,Ñtx,Ñtx);

4289 
πx
 
gí_√⁄_v√gv8qi
 (rtx,Ñtx,Ñtx);

4290 
πx
 
gí_√⁄_v√gv16qi
 (rtx,Ñtx,Ñtx);

4291 
πx
 
gí_√⁄_v√gv4hi
 (rtx,Ñtx,Ñtx);

4292 
πx
 
gí_√⁄_v√gv8hi
 (rtx,Ñtx,Ñtx);

4293 
πx
 
gí_√⁄_v√gv2si
 (rtx,Ñtx,Ñtx);

4294 
πx
 
gí_√⁄_v√gv4si
 (rtx,Ñtx,Ñtx);

4295 
πx
 
gí_√⁄_v√gv2sf
 (rtx,Ñtx,Ñtx);

4296 
πx
 
gí_√⁄_v√gv4sf
 (rtx,Ñtx,Ñtx);

4297 
πx
 
gí_√⁄_v˛zv8qi
 (rtx,Ñtx,Ñtx);

4298 
πx
 
gí_√⁄_v˛zv16qi
 (rtx,Ñtx,Ñtx);

4299 
πx
 
gí_√⁄_v˛zv4hi
 (rtx,Ñtx,Ñtx);

4300 
πx
 
gí_√⁄_v˛zv8hi
 (rtx,Ñtx,Ñtx);

4301 
πx
 
gí_√⁄_v˛zv2si
 (rtx,Ñtx,Ñtx);

4302 
πx
 
gí_√⁄_v˛zv4si
 (rtx,Ñtx,Ñtx);

4303 
πx
 
gí_√⁄_v˙tv8qi
 (rtx,Ñtx,Ñtx);

4304 
πx
 
gí_√⁄_v˙tv16qi
 (rtx,Ñtx,Ñtx);

4305 
πx
 
gí_√⁄_vmvnv8qi
 (rtx,Ñtx,Ñtx);

4306 
πx
 
gí_√⁄_vmvnv16qi
 (rtx,Ñtx,Ñtx);

4307 
πx
 
gí_√⁄_vmvnv4hi
 (rtx,Ñtx,Ñtx);

4308 
πx
 
gí_√⁄_vmvnv8hi
 (rtx,Ñtx,Ñtx);

4309 
πx
 
gí_√⁄_vmvnv2si
 (rtx,Ñtx,Ñtx);

4310 
πx
 
gí_√⁄_vmvnv4si
 (rtx,Ñtx,Ñtx);

4311 
πx
 
gí_√⁄_vgë_œ√v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4312 
πx
 
gí_√⁄_vgë_œ√v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4313 
πx
 
gí_√⁄_vgë_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4314 
πx
 
gí_√⁄_vgë_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4315 
πx
 
gí_√⁄_vgë_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx);

4316 
πx
 
gí_√⁄_vgë_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx);

4317 
πx
 
gí_√⁄_vgë_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4318 
πx
 
gí_√⁄_vgë_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4319 
πx
 
gí_√⁄_vgë_œ√di
 (rtx,Ñtx,Ñtx,Ñtx);

4320 
πx
 
gí_√⁄_vgë_œ√v2di
 (rtx,Ñtx,Ñtx,Ñtx);

4321 
πx
 
gí_√⁄_v£t_œ√v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4322 
πx
 
gí_√⁄_v£t_œ√v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4323 
πx
 
gí_√⁄_v£t_œ√v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4324 
πx
 
gí_√⁄_v£t_œ√v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4325 
πx
 
gí_√⁄_v£t_œ√v2si
 (rtx,Ñtx,Ñtx,Ñtx);

4326 
πx
 
gí_√⁄_v£t_œ√v4si
 (rtx,Ñtx,Ñtx,Ñtx);

4327 
πx
 
gí_√⁄_v£t_œ√v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4328 
πx
 
gí_√⁄_v£t_œ√v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4329 
πx
 
gí_√⁄_v£t_œ√v2di
 (rtx,Ñtx,Ñtx,Ñtx);

4330 
πx
 
gí_√⁄_v£t_œ√di
 (rtx,Ñtx,Ñtx,Ñtx);

4331 
πx
 
gí_√⁄_v¸óãv8qi
 (rtx,Ñtx);

4332 
πx
 
gí_√⁄_v¸óãv4hi
 (rtx,Ñtx);

4333 
πx
 
gí_√⁄_v¸óãv2si
 (rtx,Ñtx);

4334 
πx
 
gí_√⁄_v¸óãv2sf
 (rtx,Ñtx);

4335 
πx
 
gí_√⁄_v¸óãdi
 (rtx,Ñtx);

4336 
πx
 
gí_√⁄_vdup_ndi
 (rtx,Ñtx);

4337 
πx
 
gí_√⁄_vdup_œ√v8qi
 (rtx,Ñtx,Ñtx);

4338 
πx
 
gí_√⁄_vdup_œ√v16qi
 (rtx,Ñtx,Ñtx);

4339 
πx
 
gí_√⁄_vdup_œ√v4hi
 (rtx,Ñtx,Ñtx);

4340 
πx
 
gí_√⁄_vdup_œ√v8hi
 (rtx,Ñtx,Ñtx);

4341 
πx
 
gí_√⁄_vdup_œ√v2si
 (rtx,Ñtx,Ñtx);

4342 
πx
 
gí_√⁄_vdup_œ√v4si
 (rtx,Ñtx,Ñtx);

4343 
πx
 
gí_√⁄_vdup_œ√v2sf
 (rtx,Ñtx,Ñtx);

4344 
πx
 
gí_√⁄_vdup_œ√v4sf
 (rtx,Ñtx,Ñtx);

4345 
πx
 
gí_√⁄_vdup_œ√di
 (rtx,Ñtx,Ñtx);

4346 
πx
 
gí_√⁄_vdup_œ√v2di
 (rtx,Ñtx,Ñtx);

4347 
πx
 
gí_√⁄_vgë_highv16qi
 (rtx,Ñtx);

4348 
πx
 
gí_√⁄_vgë_highv8hi
 (rtx,Ñtx);

4349 
πx
 
gí_√⁄_vgë_highv4si
 (rtx,Ñtx);

4350 
πx
 
gí_√⁄_vgë_highv4sf
 (rtx,Ñtx);

4351 
πx
 
gí_√⁄_vgë_highv2di
 (rtx,Ñtx);

4352 
πx
 
gí_√⁄_vgë_lowv16qi
 (rtx,Ñtx);

4353 
πx
 
gí_√⁄_vgë_lowv8hi
 (rtx,Ñtx);

4354 
πx
 
gí_√⁄_vgë_lowv4si
 (rtx,Ñtx);

4355 
πx
 
gí_√⁄_vgë_lowv4sf
 (rtx,Ñtx);

4356 
πx
 
gí_√⁄_vgë_lowv2di
 (rtx,Ñtx);

4357 
πx
 
gí_√⁄_vmul_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4358 
πx
 
gí_√⁄_vmul_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4359 
πx
 
gí_√⁄_vmul_nv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4360 
πx
 
gí_√⁄_vmul_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4361 
πx
 
gí_√⁄_vmul_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4362 
πx
 
gí_√⁄_vmul_nv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4363 
πx
 
gí_√⁄_vmuŒ_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4364 
πx
 
gí_√⁄_vmuŒ_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4365 
πx
 
gí_√⁄_vqdmuŒ_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4366 
πx
 
gí_√⁄_vqdmuŒ_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4367 
πx
 
gí_√⁄_vqdmulh_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4368 
πx
 
gí_√⁄_vqdmulh_nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4369 
πx
 
gí_√⁄_vqdmulh_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4370 
πx
 
gí_√⁄_vqdmulh_nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4371 
πx
 
gí_√⁄_vmœ_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4372 
πx
 
gí_√⁄_vmœ_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4373 
πx
 
gí_√⁄_vmœ_nv2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4374 
πx
 
gí_√⁄_vmœ_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4375 
πx
 
gí_√⁄_vmœ_nv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4376 
πx
 
gí_√⁄_vmœ_nv4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4377 
πx
 
gí_√⁄_vmœl_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4378 
πx
 
gí_√⁄_vmœl_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4379 
πx
 
gí_√⁄_vqdmœl_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4380 
πx
 
gí_√⁄_vqdmœl_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4381 
πx
 
gí_√⁄_vmls_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4382 
πx
 
gí_√⁄_vmls_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4383 
πx
 
gí_√⁄_vmls_nv2sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4384 
πx
 
gí_√⁄_vmls_nv8hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4385 
πx
 
gí_√⁄_vmls_nv4si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4386 
πx
 
gí_√⁄_vmls_nv4sf
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4387 
πx
 
gí_√⁄_vml¶_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4388 
πx
 
gí_√⁄_vml¶_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4389 
πx
 
gí_√⁄_vqdml¶_nv4hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4390 
πx
 
gí_√⁄_vqdml¶_nv2si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx);

4391 
πx
 
gí_√⁄_vb¶v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4392 
πx
 
gí_√⁄_vb¶v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4393 
πx
 
gí_√⁄_vb¶v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4394 
πx
 
gí_√⁄_vb¶v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4395 
πx
 
gí_√⁄_vb¶v2si
 (rtx,Ñtx,Ñtx,Ñtx);

4396 
πx
 
gí_√⁄_vb¶v4si
 (rtx,Ñtx,Ñtx,Ñtx);

4397 
πx
 
gí_√⁄_vb¶v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4398 
πx
 
gí_√⁄_vb¶v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4399 
πx
 
gí_√⁄_vb¶di
 (rtx,Ñtx,Ñtx,Ñtx);

4400 
πx
 
gí_√⁄_vb¶v2di
 (rtx,Ñtx,Ñtx,Ñtx);

4401 
πx
 
gí_√⁄_vånv8qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4402 
πx
 
gí_√⁄_vånv16qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4403 
πx
 
gí_√⁄_vånv4hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4404 
πx
 
gí_√⁄_vånv8hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4405 
πx
 
gí_√⁄_vånv2si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4406 
πx
 
gí_√⁄_vånv4si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4407 
πx
 
gí_√⁄_vånv2sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4408 
πx
 
gí_√⁄_vånv4sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4409 
πx
 
gí_√⁄_vånv8qi
 (rtx,Ñtx,Ñtx);

4410 
πx
 
gí_√⁄_vånv16qi
 (rtx,Ñtx,Ñtx);

4411 
πx
 
gí_√⁄_vånv4hi
 (rtx,Ñtx,Ñtx);

4412 
πx
 
gí_√⁄_vånv8hi
 (rtx,Ñtx,Ñtx);

4413 
πx
 
gí_√⁄_vånv2si
 (rtx,Ñtx,Ñtx);

4414 
πx
 
gí_√⁄_vånv4si
 (rtx,Ñtx,Ñtx);

4415 
πx
 
gí_√⁄_vånv2sf
 (rtx,Ñtx,Ñtx);

4416 
πx
 
gí_√⁄_vånv4sf
 (rtx,Ñtx,Ñtx);

4417 
πx
 
gí_√⁄_vzùv8qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4418 
πx
 
gí_√⁄_vzùv16qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4419 
πx
 
gí_√⁄_vzùv4hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4420 
πx
 
gí_√⁄_vzùv8hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4421 
πx
 
gí_√⁄_vzùv2si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4422 
πx
 
gí_√⁄_vzùv4si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4423 
πx
 
gí_√⁄_vzùv2sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4424 
πx
 
gí_√⁄_vzùv4sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4425 
πx
 
gí_√⁄_vzùv8qi
 (rtx,Ñtx,Ñtx);

4426 
πx
 
gí_√⁄_vzùv16qi
 (rtx,Ñtx,Ñtx);

4427 
πx
 
gí_√⁄_vzùv4hi
 (rtx,Ñtx,Ñtx);

4428 
πx
 
gí_√⁄_vzùv8hi
 (rtx,Ñtx,Ñtx);

4429 
πx
 
gí_√⁄_vzùv2si
 (rtx,Ñtx,Ñtx);

4430 
πx
 
gí_√⁄_vzùv4si
 (rtx,Ñtx,Ñtx);

4431 
πx
 
gí_√⁄_vzùv2sf
 (rtx,Ñtx,Ñtx);

4432 
πx
 
gí_√⁄_vzùv4sf
 (rtx,Ñtx,Ñtx);

4433 
πx
 
gí_√⁄_vuzpv8qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4434 
πx
 
gí_√⁄_vuzpv16qi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4435 
πx
 
gí_√⁄_vuzpv4hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4436 
πx
 
gí_√⁄_vuzpv8hi_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4437 
πx
 
gí_√⁄_vuzpv2si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4438 
πx
 
gí_√⁄_vuzpv4si_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4439 
πx
 
gí_√⁄_vuzpv2sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4440 
πx
 
gí_√⁄_vuzpv4sf_öã∫Æ
 (rtx,Ñtx,Ñtx,Ñtx);

4441 
πx
 
gí_√⁄_vuzpv8qi
 (rtx,Ñtx,Ñtx);

4442 
πx
 
gí_√⁄_vuzpv16qi
 (rtx,Ñtx,Ñtx);

4443 
πx
 
gí_√⁄_vuzpv4hi
 (rtx,Ñtx,Ñtx);

4444 
πx
 
gí_√⁄_vuzpv8hi
 (rtx,Ñtx,Ñtx);

4445 
πx
 
gí_√⁄_vuzpv2si
 (rtx,Ñtx,Ñtx);

4446 
πx
 
gí_√⁄_vuzpv4si
 (rtx,Ñtx,Ñtx);

4447 
πx
 
gí_√⁄_vuzpv2sf
 (rtx,Ñtx,Ñtx);

4448 
πx
 
gí_√⁄_vuzpv4sf
 (rtx,Ñtx,Ñtx);

4449 
πx
 
gí_√⁄_vªöãΩªtv8qiv8qi
 (rtx,Ñtx);

4450 
πx
 
gí_√⁄_vªöãΩªtv8qiv4hi
 (rtx,Ñtx);

4451 
πx
 
gí_√⁄_vªöãΩªtv8qiv2si
 (rtx,Ñtx);

4452 
πx
 
gí_√⁄_vªöãΩªtv8qiv2sf
 (rtx,Ñtx);

4453 
πx
 
gí_√⁄_vªöãΩªtv8qidi
 (rtx,Ñtx);

4454 
πx
 
gí_√⁄_vªöãΩªtv4hiv8qi
 (rtx,Ñtx);

4455 
πx
 
gí_√⁄_vªöãΩªtv4hiv4hi
 (rtx,Ñtx);

4456 
πx
 
gí_√⁄_vªöãΩªtv4hiv2si
 (rtx,Ñtx);

4457 
πx
 
gí_√⁄_vªöãΩªtv4hiv2sf
 (rtx,Ñtx);

4458 
πx
 
gí_√⁄_vªöãΩªtv4hidi
 (rtx,Ñtx);

4459 
πx
 
gí_√⁄_vªöãΩªtv2siv8qi
 (rtx,Ñtx);

4460 
πx
 
gí_√⁄_vªöãΩªtv2siv4hi
 (rtx,Ñtx);

4461 
πx
 
gí_√⁄_vªöãΩªtv2siv2si
 (rtx,Ñtx);

4462 
πx
 
gí_√⁄_vªöãΩªtv2siv2sf
 (rtx,Ñtx);

4463 
πx
 
gí_√⁄_vªöãΩªtv2sidi
 (rtx,Ñtx);

4464 
πx
 
gí_√⁄_vªöãΩªtv2sfv8qi
 (rtx,Ñtx);

4465 
πx
 
gí_√⁄_vªöãΩªtv2sfv4hi
 (rtx,Ñtx);

4466 
πx
 
gí_√⁄_vªöãΩªtv2sfv2si
 (rtx,Ñtx);

4467 
πx
 
gí_√⁄_vªöãΩªtv2sfv2sf
 (rtx,Ñtx);

4468 
πx
 
gí_√⁄_vªöãΩªtv2sfdi
 (rtx,Ñtx);

4469 
πx
 
gí_√⁄_vªöãΩªtdiv8qi
 (rtx,Ñtx);

4470 
πx
 
gí_√⁄_vªöãΩªtdiv4hi
 (rtx,Ñtx);

4471 
πx
 
gí_√⁄_vªöãΩªtdiv2si
 (rtx,Ñtx);

4472 
πx
 
gí_√⁄_vªöãΩªtdiv2sf
 (rtx,Ñtx);

4473 
πx
 
gí_√⁄_vªöãΩªtdidi
 (rtx,Ñtx);

4474 
πx
 
gí_√⁄_vªöãΩªâiv16qi
 (rtx,Ñtx);

4475 
πx
 
gí_√⁄_vªöãΩªâiv8hi
 (rtx,Ñtx);

4476 
πx
 
gí_√⁄_vªöãΩªâiv4si
 (rtx,Ñtx);

4477 
πx
 
gí_√⁄_vªöãΩªâiv4sf
 (rtx,Ñtx);

4478 
πx
 
gí_√⁄_vªöãΩªâiv2di
 (rtx,Ñtx);

4479 
πx
 
gí_√⁄_vªöãΩªâôi
 (rtx,Ñtx);

4480 
πx
 
gí_√⁄_vªöãΩªtv16qiv16qi
 (rtx,Ñtx);

4481 
πx
 
gí_√⁄_vªöãΩªtv16qiv8hi
 (rtx,Ñtx);

4482 
πx
 
gí_√⁄_vªöãΩªtv16qiv4si
 (rtx,Ñtx);

4483 
πx
 
gí_√⁄_vªöãΩªtv16qiv4sf
 (rtx,Ñtx);

4484 
πx
 
gí_√⁄_vªöãΩªtv16qiv2di
 (rtx,Ñtx);

4485 
πx
 
gí_√⁄_vªöãΩªtv16qôi
 (rtx,Ñtx);

4486 
πx
 
gí_√⁄_vªöãΩªtv8hiv16qi
 (rtx,Ñtx);

4487 
πx
 
gí_√⁄_vªöãΩªtv8hiv8hi
 (rtx,Ñtx);

4488 
πx
 
gí_√⁄_vªöãΩªtv8hiv4si
 (rtx,Ñtx);

4489 
πx
 
gí_√⁄_vªöãΩªtv8hiv4sf
 (rtx,Ñtx);

4490 
πx
 
gí_√⁄_vªöãΩªtv8hiv2di
 (rtx,Ñtx);

4491 
πx
 
gí_√⁄_vªöãΩªtv8hôi
 (rtx,Ñtx);

4492 
πx
 
gí_√⁄_vªöãΩªtv4siv16qi
 (rtx,Ñtx);

4493 
πx
 
gí_√⁄_vªöãΩªtv4siv8hi
 (rtx,Ñtx);

4494 
πx
 
gí_√⁄_vªöãΩªtv4siv4si
 (rtx,Ñtx);

4495 
πx
 
gí_√⁄_vªöãΩªtv4siv4sf
 (rtx,Ñtx);

4496 
πx
 
gí_√⁄_vªöãΩªtv4siv2di
 (rtx,Ñtx);

4497 
πx
 
gí_√⁄_vªöãΩªtv4sôi
 (rtx,Ñtx);

4498 
πx
 
gí_√⁄_vªöãΩªtv4sfv16qi
 (rtx,Ñtx);

4499 
πx
 
gí_√⁄_vªöãΩªtv4sfv8hi
 (rtx,Ñtx);

4500 
πx
 
gí_√⁄_vªöãΩªtv4sfv4si
 (rtx,Ñtx);

4501 
πx
 
gí_√⁄_vªöãΩªtv4sfv4sf
 (rtx,Ñtx);

4502 
πx
 
gí_√⁄_vªöãΩªtv4sfv2di
 (rtx,Ñtx);

4503 
πx
 
gí_√⁄_vªöãΩªtv4s·i
 (rtx,Ñtx);

4504 
πx
 
gí_√⁄_vªöãΩªtv2div16qi
 (rtx,Ñtx);

4505 
πx
 
gí_√⁄_vªöãΩªtv2div8hi
 (rtx,Ñtx);

4506 
πx
 
gí_√⁄_vªöãΩªtv2div4si
 (rtx,Ñtx);

4507 
πx
 
gí_√⁄_vªöãΩªtv2div4sf
 (rtx,Ñtx);

4508 
πx
 
gí_√⁄_vªöãΩªtv2div2di
 (rtx,Ñtx);

4509 
πx
 
gí_√⁄_vªöãΩªtv2dôi
 (rtx,Ñtx);

4510 
πx
 
gí_vec_lﬂd_œ√sv8qiv8qi
 (rtx,Ñtx);

4511 
πx
 
gí_vec_lﬂd_œ√sv16qiv16qi
 (rtx,Ñtx);

4512 
πx
 
gí_vec_lﬂd_œ√sv4hiv4hi
 (rtx,Ñtx);

4513 
πx
 
gí_vec_lﬂd_œ√sv8hiv8hi
 (rtx,Ñtx);

4514 
πx
 
gí_vec_lﬂd_œ√sv2siv2si
 (rtx,Ñtx);

4515 
πx
 
gí_vec_lﬂd_œ√sv4siv4si
 (rtx,Ñtx);

4516 
πx
 
gí_vec_lﬂd_œ√sv2sfv2sf
 (rtx,Ñtx);

4517 
πx
 
gí_vec_lﬂd_œ√sv4sfv4sf
 (rtx,Ñtx);

4518 
πx
 
gí_vec_lﬂd_œ√sdidi
 (rtx,Ñtx);

4519 
πx
 
gí_vec_lﬂd_œ√sv2div2di
 (rtx,Ñtx);

4520 
πx
 
gí_√⁄_vld1_dupdi
 (rtx,Ñtx);

4521 
πx
 
gí_vec_°‹e_œ√sv8qiv8qi
 (rtx,Ñtx);

4522 
πx
 
gí_vec_°‹e_œ√sv16qiv16qi
 (rtx,Ñtx);

4523 
πx
 
gí_vec_°‹e_œ√sv4hiv4hi
 (rtx,Ñtx);

4524 
πx
 
gí_vec_°‹e_œ√sv8hiv8hi
 (rtx,Ñtx);

4525 
πx
 
gí_vec_°‹e_œ√sv2siv2si
 (rtx,Ñtx);

4526 
πx
 
gí_vec_°‹e_œ√sv4siv4si
 (rtx,Ñtx);

4527 
πx
 
gí_vec_°‹e_œ√sv2sfv2sf
 (rtx,Ñtx);

4528 
πx
 
gí_vec_°‹e_œ√sv4sfv4sf
 (rtx,Ñtx);

4529 
πx
 
gí_vec_°‹e_œ√sdidi
 (rtx,Ñtx);

4530 
πx
 
gí_vec_°‹e_œ√sv2div2di
 (rtx,Ñtx);

4531 
πx
 
gí_vec_lﬂd_œ√°iv8qi
 (rtx,Ñtx);

4532 
πx
 
gí_vec_lﬂd_œ√°iv4hi
 (rtx,Ñtx);

4533 
πx
 
gí_vec_lﬂd_œ√°iv2si
 (rtx,Ñtx);

4534 
πx
 
gí_vec_lﬂd_œ√°iv2sf
 (rtx,Ñtx);

4535 
πx
 
gí_vec_lﬂd_œ√°idi
 (rtx,Ñtx);

4536 
πx
 
gí_vec_lﬂd_œ√soiv16qi
 (rtx,Ñtx);

4537 
πx
 
gí_vec_lﬂd_œ√soiv8hi
 (rtx,Ñtx);

4538 
πx
 
gí_vec_lﬂd_œ√soiv4si
 (rtx,Ñtx);

4539 
πx
 
gí_vec_lﬂd_œ√soiv4sf
 (rtx,Ñtx);

4540 
πx
 
gí_vec_°‹e_œ√°iv8qi
 (rtx,Ñtx);

4541 
πx
 
gí_vec_°‹e_œ√°iv4hi
 (rtx,Ñtx);

4542 
πx
 
gí_vec_°‹e_œ√°iv2si
 (rtx,Ñtx);

4543 
πx
 
gí_vec_°‹e_œ√°iv2sf
 (rtx,Ñtx);

4544 
πx
 
gí_vec_°‹e_œ√°idi
 (rtx,Ñtx);

4545 
πx
 
gí_vec_°‹e_œ√soiv16qi
 (rtx,Ñtx);

4546 
πx
 
gí_vec_°‹e_œ√soiv8hi
 (rtx,Ñtx);

4547 
πx
 
gí_vec_°‹e_œ√soiv4si
 (rtx,Ñtx);

4548 
πx
 
gí_vec_°‹e_œ√soiv4sf
 (rtx,Ñtx);

4549 
πx
 
gí_vec_lﬂd_œ√£iv8qi
 (rtx,Ñtx);

4550 
πx
 
gí_vec_lﬂd_œ√£iv4hi
 (rtx,Ñtx);

4551 
πx
 
gí_vec_lﬂd_œ√£iv2si
 (rtx,Ñtx);

4552 
πx
 
gí_vec_lﬂd_œ√£iv2sf
 (rtx,Ñtx);

4553 
πx
 
gí_vec_lﬂd_œ√£idi
 (rtx,Ñtx);

4554 
πx
 
gí_vec_lﬂd_œ√sciv16qi
 (rtx,Ñtx);

4555 
πx
 
gí_vec_lﬂd_œ√sciv8hi
 (rtx,Ñtx);

4556 
πx
 
gí_vec_lﬂd_œ√sciv4si
 (rtx,Ñtx);

4557 
πx
 
gí_vec_lﬂd_œ√sciv4sf
 (rtx,Ñtx);

4558 
πx
 
gí_√⁄_vld3v16qi
 (rtx,Ñtx);

4559 
πx
 
gí_√⁄_vld3v8hi
 (rtx,Ñtx);

4560 
πx
 
gí_√⁄_vld3v4si
 (rtx,Ñtx);

4561 
πx
 
gí_√⁄_vld3v4sf
 (rtx,Ñtx);

4562 
πx
 
gí_vec_°‹e_œ√£iv8qi
 (rtx,Ñtx);

4563 
πx
 
gí_vec_°‹e_œ√£iv4hi
 (rtx,Ñtx);

4564 
πx
 
gí_vec_°‹e_œ√£iv2si
 (rtx,Ñtx);

4565 
πx
 
gí_vec_°‹e_œ√£iv2sf
 (rtx,Ñtx);

4566 
πx
 
gí_vec_°‹e_œ√£idi
 (rtx,Ñtx);

4567 
πx
 
gí_vec_°‹e_œ√sciv16qi
 (rtx,Ñtx);

4568 
πx
 
gí_vec_°‹e_œ√sciv8hi
 (rtx,Ñtx);

4569 
πx
 
gí_vec_°‹e_œ√sciv4si
 (rtx,Ñtx);

4570 
πx
 
gí_vec_°‹e_œ√sciv4sf
 (rtx,Ñtx);

4571 
πx
 
gí_√⁄_v°3v16qi
 (rtx,Ñtx);

4572 
πx
 
gí_√⁄_v°3v8hi
 (rtx,Ñtx);

4573 
πx
 
gí_√⁄_v°3v4si
 (rtx,Ñtx);

4574 
πx
 
gí_√⁄_v°3v4sf
 (rtx,Ñtx);

4575 
πx
 
gí_vec_lﬂd_œ√soiv8qi
 (rtx,Ñtx);

4576 
πx
 
gí_vec_lﬂd_œ√soiv4hi
 (rtx,Ñtx);

4577 
πx
 
gí_vec_lﬂd_œ√soiv2si
 (rtx,Ñtx);

4578 
πx
 
gí_vec_lﬂd_œ√soiv2sf
 (rtx,Ñtx);

4579 
πx
 
gí_vec_lﬂd_œ√soidi
 (rtx,Ñtx);

4580 
πx
 
gí_vec_lﬂd_œ√sxiv16qi
 (rtx,Ñtx);

4581 
πx
 
gí_vec_lﬂd_œ√sxiv8hi
 (rtx,Ñtx);

4582 
πx
 
gí_vec_lﬂd_œ√sxiv4si
 (rtx,Ñtx);

4583 
πx
 
gí_vec_lﬂd_œ√sxiv4sf
 (rtx,Ñtx);

4584 
πx
 
gí_√⁄_vld4v16qi
 (rtx,Ñtx);

4585 
πx
 
gí_√⁄_vld4v8hi
 (rtx,Ñtx);

4586 
πx
 
gí_√⁄_vld4v4si
 (rtx,Ñtx);

4587 
πx
 
gí_√⁄_vld4v4sf
 (rtx,Ñtx);

4588 
πx
 
gí_vec_°‹e_œ√soiv8qi
 (rtx,Ñtx);

4589 
πx
 
gí_vec_°‹e_œ√soiv4hi
 (rtx,Ñtx);

4590 
πx
 
gí_vec_°‹e_œ√soiv2si
 (rtx,Ñtx);

4591 
πx
 
gí_vec_°‹e_œ√soiv2sf
 (rtx,Ñtx);

4592 
πx
 
gí_vec_°‹e_œ√soidi
 (rtx,Ñtx);

4593 
πx
 
gí_vec_°‹e_œ√sxiv16qi
 (rtx,Ñtx);

4594 
πx
 
gí_vec_°‹e_œ√sxiv8hi
 (rtx,Ñtx);

4595 
πx
 
gí_vec_°‹e_œ√sxiv4si
 (rtx,Ñtx);

4596 
πx
 
gí_vec_°‹e_œ√sxiv4sf
 (rtx,Ñtx);

4597 
πx
 
gí_√⁄_v°4v16qi
 (rtx,Ñtx);

4598 
πx
 
gí_√⁄_v°4v8hi
 (rtx,Ñtx);

4599 
πx
 
gí_√⁄_v°4v4si
 (rtx,Ñtx);

4600 
πx
 
gí_√⁄_v°4v4sf
 (rtx,Ñtx);

4601 
πx
 
gí_√⁄_v™dv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4602 
πx
 
gí_√⁄_v™dv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4603 
πx
 
gí_√⁄_v™dv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4604 
πx
 
gí_√⁄_v™dv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4605 
πx
 
gí_√⁄_v™dv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4606 
πx
 
gí_√⁄_v™dv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4607 
πx
 
gí_√⁄_v™dv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4608 
πx
 
gí_√⁄_v™dv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4609 
πx
 
gí_√⁄_v™ddi
 (rtx,Ñtx,Ñtx,Ñtx);

4610 
πx
 
gí_√⁄_v™dv2di
 (rtx,Ñtx,Ñtx,Ñtx);

4611 
πx
 
gí_√⁄_v‹rv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4612 
πx
 
gí_√⁄_v‹rv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4613 
πx
 
gí_√⁄_v‹rv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4614 
πx
 
gí_√⁄_v‹rv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4615 
πx
 
gí_√⁄_v‹rv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4616 
πx
 
gí_√⁄_v‹rv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4617 
πx
 
gí_√⁄_v‹rv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4618 
πx
 
gí_√⁄_v‹rv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4619 
πx
 
gí_√⁄_v‹rdi
 (rtx,Ñtx,Ñtx,Ñtx);

4620 
πx
 
gí_√⁄_v‹rv2di
 (rtx,Ñtx,Ñtx,Ñtx);

4621 
πx
 
gí_√⁄_ve‹v8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4622 
πx
 
gí_√⁄_ve‹v16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4623 
πx
 
gí_√⁄_ve‹v4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4624 
πx
 
gí_√⁄_ve‹v8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4625 
πx
 
gí_√⁄_ve‹v2si
 (rtx,Ñtx,Ñtx,Ñtx);

4626 
πx
 
gí_√⁄_ve‹v4si
 (rtx,Ñtx,Ñtx,Ñtx);

4627 
πx
 
gí_√⁄_ve‹v2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4628 
πx
 
gí_√⁄_ve‹v4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4629 
πx
 
gí_√⁄_ve‹di
 (rtx,Ñtx,Ñtx,Ñtx);

4630 
πx
 
gí_√⁄_ve‹v2di
 (rtx,Ñtx,Ñtx,Ñtx);

4631 
πx
 
gí_√⁄_vbicv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4632 
πx
 
gí_√⁄_vbicv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4633 
πx
 
gí_√⁄_vbicv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4634 
πx
 
gí_√⁄_vbicv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4635 
πx
 
gí_√⁄_vbicv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4636 
πx
 
gí_√⁄_vbicv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4637 
πx
 
gí_√⁄_vbicv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4638 
πx
 
gí_√⁄_vbicv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4639 
πx
 
gí_√⁄_vbicdi
 (rtx,Ñtx,Ñtx,Ñtx);

4640 
πx
 
gí_√⁄_vbicv2di
 (rtx,Ñtx,Ñtx,Ñtx);

4641 
πx
 
gí_√⁄_v‹nv8qi
 (rtx,Ñtx,Ñtx,Ñtx);

4642 
πx
 
gí_√⁄_v‹nv16qi
 (rtx,Ñtx,Ñtx,Ñtx);

4643 
πx
 
gí_√⁄_v‹nv4hi
 (rtx,Ñtx,Ñtx,Ñtx);

4644 
πx
 
gí_√⁄_v‹nv8hi
 (rtx,Ñtx,Ñtx,Ñtx);

4645 
πx
 
gí_√⁄_v‹nv2si
 (rtx,Ñtx,Ñtx,Ñtx);

4646 
πx
 
gí_√⁄_v‹nv4si
 (rtx,Ñtx,Ñtx,Ñtx);

4647 
πx
 
gí_√⁄_v‹nv2sf
 (rtx,Ñtx,Ñtx,Ñtx);

4648 
πx
 
gí_√⁄_v‹nv4sf
 (rtx,Ñtx,Ñtx,Ñtx);

4649 
πx
 
gí_√⁄_v‹ndi
 (rtx,Ñtx,Ñtx,Ñtx);

4650 
πx
 
gí_√⁄_v‹nv2di
 (rtx,Ñtx,Ñtx,Ñtx);

4651 
πx
 
gí_vec_u≈acks_hi_v16qi
 (rtx,Ñtx);

4652 
πx
 
gí_vec_u≈acku_hi_v16qi
 (rtx,Ñtx);

4653 
πx
 
gí_vec_u≈acks_hi_v8hi
 (rtx,Ñtx);

4654 
πx
 
gí_vec_u≈acku_hi_v8hi
 (rtx,Ñtx);

4655 
πx
 
gí_vec_u≈acks_hi_v4si
 (rtx,Ñtx);

4656 
πx
 
gí_vec_u≈acku_hi_v4si
 (rtx,Ñtx);

4657 
πx
 
gí_vec_u≈acks_lo_v16qi
 (rtx,Ñtx);

4658 
πx
 
gí_vec_u≈acku_lo_v16qi
 (rtx,Ñtx);

4659 
πx
 
gí_vec_u≈acks_lo_v8hi
 (rtx,Ñtx);

4660 
πx
 
gí_vec_u≈acku_lo_v8hi
 (rtx,Ñtx);

4661 
πx
 
gí_vec_u≈acks_lo_v4si
 (rtx,Ñtx);

4662 
πx
 
gí_vec_u≈acku_lo_v4si
 (rtx,Ñtx);

4663 
πx
 
gí_vec_widí_smu…_lo_v16qi
 (rtx,Ñtx,Ñtx);

4664 
πx
 
gí_vec_widí_umu…_lo_v16qi
 (rtx,Ñtx,Ñtx);

4665 
πx
 
gí_vec_widí_smu…_lo_v8hi
 (rtx,Ñtx,Ñtx);

4666 
πx
 
gí_vec_widí_umu…_lo_v8hi
 (rtx,Ñtx,Ñtx);

4667 
πx
 
gí_vec_widí_smu…_lo_v4si
 (rtx,Ñtx,Ñtx);

4668 
πx
 
gí_vec_widí_umu…_lo_v4si
 (rtx,Ñtx,Ñtx);

4669 
πx
 
gí_vec_widí_smu…_hi_v16qi
 (rtx,Ñtx,Ñtx);

4670 
πx
 
gí_vec_widí_umu…_hi_v16qi
 (rtx,Ñtx,Ñtx);

4671 
πx
 
gí_vec_widí_smu…_hi_v8hi
 (rtx,Ñtx,Ñtx);

4672 
πx
 
gí_vec_widí_umu…_hi_v8hi
 (rtx,Ñtx,Ñtx);

4673 
πx
 
gí_vec_widí_smu…_hi_v4si
 (rtx,Ñtx,Ñtx);

4674 
πx
 
gí_vec_widí_umu…_hi_v4si
 (rtx,Ñtx,Ñtx);

4675 
πx
 
gí_vec_widí_sshi·l_lo_v16qi
 (rtx,Ñtx,Ñtx);

4676 
πx
 
gí_vec_widí_ushi·l_lo_v16qi
 (rtx,Ñtx,Ñtx);

4677 
πx
 
gí_vec_widí_sshi·l_lo_v8hi
 (rtx,Ñtx,Ñtx);

4678 
πx
 
gí_vec_widí_ushi·l_lo_v8hi
 (rtx,Ñtx,Ñtx);

4679 
πx
 
gí_vec_widí_sshi·l_lo_v4si
 (rtx,Ñtx,Ñtx);

4680 
πx
 
gí_vec_widí_ushi·l_lo_v4si
 (rtx,Ñtx,Ñtx);

4681 
πx
 
gí_vec_widí_sshi·l_hi_v16qi
 (rtx,Ñtx,Ñtx);

4682 
πx
 
gí_vec_widí_ushi·l_hi_v16qi
 (rtx,Ñtx,Ñtx);

4683 
πx
 
gí_vec_widí_sshi·l_hi_v8hi
 (rtx,Ñtx,Ñtx);

4684 
πx
 
gí_vec_widí_ushi·l_hi_v8hi
 (rtx,Ñtx,Ñtx);

4685 
πx
 
gí_vec_widí_sshi·l_hi_v4si
 (rtx,Ñtx,Ñtx);

4686 
πx
 
gí_vec_widí_ushi·l_hi_v4si
 (rtx,Ñtx,Ñtx);

4687 
πx
 
gí_vec_u≈acks_lo_v8qi
 (rtx,Ñtx);

4688 
πx
 
gí_vec_u≈acku_lo_v8qi
 (rtx,Ñtx);

4689 
πx
 
gí_vec_u≈acks_lo_v4hi
 (rtx,Ñtx);

4690 
πx
 
gí_vec_u≈acku_lo_v4hi
 (rtx,Ñtx);

4691 
πx
 
gí_vec_u≈acks_lo_v2si
 (rtx,Ñtx);

4692 
πx
 
gí_vec_u≈acku_lo_v2si
 (rtx,Ñtx);

4693 
πx
 
gí_vec_u≈acks_hi_v8qi
 (rtx,Ñtx);

4694 
πx
 
gí_vec_u≈acku_hi_v8qi
 (rtx,Ñtx);

4695 
πx
 
gí_vec_u≈acks_hi_v4hi
 (rtx,Ñtx);

4696 
πx
 
gí_vec_u≈acku_hi_v4hi
 (rtx,Ñtx);

4697 
πx
 
gí_vec_u≈acks_hi_v2si
 (rtx,Ñtx);

4698 
πx
 
gí_vec_u≈acku_hi_v2si
 (rtx,Ñtx);

4699 
πx
 
gí_vec_widí_smu…_hi_v8qi
 (rtx,Ñtx,Ñtx);

4700 
πx
 
gí_vec_widí_umu…_hi_v8qi
 (rtx,Ñtx,Ñtx);

4701 
πx
 
gí_vec_widí_smu…_hi_v4hi
 (rtx,Ñtx,Ñtx);

4702 
πx
 
gí_vec_widí_umu…_hi_v4hi
 (rtx,Ñtx,Ñtx);

4703 
πx
 
gí_vec_widí_smu…_hi_v2si
 (rtx,Ñtx,Ñtx);

4704 
πx
 
gí_vec_widí_umu…_hi_v2si
 (rtx,Ñtx,Ñtx);

4705 
πx
 
gí_vec_widí_smu…_lo_v8qi
 (rtx,Ñtx,Ñtx);

4706 
πx
 
gí_vec_widí_umu…_lo_v8qi
 (rtx,Ñtx,Ñtx);

4707 
πx
 
gí_vec_widí_smu…_lo_v4hi
 (rtx,Ñtx,Ñtx);

4708 
πx
 
gí_vec_widí_umu…_lo_v4hi
 (rtx,Ñtx,Ñtx);

4709 
πx
 
gí_vec_widí_smu…_lo_v2si
 (rtx,Ñtx,Ñtx);

4710 
πx
 
gí_vec_widí_umu…_lo_v2si
 (rtx,Ñtx,Ñtx);

4711 
πx
 
gí_vec_widí_sshi·l_hi_v8qi
 (rtx,Ñtx,Ñtx);

4712 
πx
 
gí_vec_widí_ushi·l_hi_v8qi
 (rtx,Ñtx,Ñtx);

4713 
πx
 
gí_vec_widí_sshi·l_hi_v4hi
 (rtx,Ñtx,Ñtx);

4714 
πx
 
gí_vec_widí_ushi·l_hi_v4hi
 (rtx,Ñtx,Ñtx);

4715 
πx
 
gí_vec_widí_sshi·l_hi_v2si
 (rtx,Ñtx,Ñtx);

4716 
πx
 
gí_vec_widí_ushi·l_hi_v2si
 (rtx,Ñtx,Ñtx);

4717 
πx
 
gí_vec_widí_sshi·l_lo_v8qi
 (rtx,Ñtx,Ñtx);

4718 
πx
 
gí_vec_widí_ushi·l_lo_v8qi
 (rtx,Ñtx,Ñtx);

4719 
πx
 
gí_vec_widí_sshi·l_lo_v4hi
 (rtx,Ñtx,Ñtx);

4720 
πx
 
gí_vec_widí_ushi·l_lo_v4hi
 (rtx,Ñtx,Ñtx);

4721 
πx
 
gí_vec_widí_sshi·l_lo_v2si
 (rtx,Ñtx,Ñtx);

4722 
πx
 
gí_vec_widí_ushi·l_lo_v2si
 (rtx,Ñtx,Ñtx);

4723 
πx
 
gí_vec_∑ck_åunc_v4hi
 (rtx,Ñtx,Ñtx);

4724 
πx
 
gí_vec_∑ck_åunc_v2si
 (rtx,Ñtx,Ñtx);

4725 
πx
 
gí_vec_∑ck_åunc_di
 (rtx,Ñtx,Ñtx);

4726 
πx
 
gí_mem‹y_b¨rõr
 ();

4727 
πx
 
gí_©omic_lﬂddi
 (rtx,Ñtx,Ñtx);

4728 
πx
 
gí_©omic_com∑ª_™d_sw≠qi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4729 
πx
 
gí_©omic_com∑ª_™d_sw≠hi
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4730 
πx
 
gí_©omic_com∑ª_™d_sw≠si
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4731 
πx
 
gí_©omic_com∑ª_™d_sw≠di
 (rtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx,Ñtx);

4732 
πx
 
gí_mulqq3
 (rtx,Ñtx,Ñtx);

4733 
πx
 
gí_mulhq3
 (rtx,Ñtx,Ñtx);

4734 
πx
 
gí_mulsq3
 (rtx,Ñtx,Ñtx);

4735 
πx
 
gí_mulß3
 (rtx,Ñtx,Ñtx);

4736 
πx
 
gí_muluß3
 (rtx,Ñtx,Ñtx);

4737 
πx
 
gí_mulha3
 (rtx,Ñtx,Ñtx);

4738 
πx
 
gí_muluha3
 (rtx,Ñtx,Ñtx);

4739 
πx
 
gí_ssmulha3
 (rtx,Ñtx,Ñtx);

4740 
πx
 
gí_usmuluha3
 (rtx,Ñtx,Ñtx);

	@include/insn-modes.h

4 #i‚de‡
GCC_INSN_MODES_H


5 
	#GCC_INSN_MODES_H


	)

7 
	emachöe_mode


9 
	mVOIDmode
,

10 
	mBLKmode
,

11 
	mCCmode
,

12 
	mCC_NOOVmode
,

13 
	mCC_Zmode
,

14 
	mCC_CZmode
,

15 
	mCC_NCVmode
,

16 
	mCC_SWPmode
,

17 
	mCCFPmode
,

18 
	mCCFPEmode
,

19 
	mCC_DNEmode
,

20 
	mCC_DEQmode
,

21 
	mCC_DLEmode
,

22 
	mCC_DLTmode
,

23 
	mCC_DGEmode
,

24 
	mCC_DGTmode
,

25 
	mCC_DLEUmode
,

26 
	mCC_DLTUmode
,

27 
	mCC_DGEUmode
,

28 
	mCC_DGTUmode
,

29 
	mCC_Cmode
,

30 
	mCC_Nmode
,

31 
	mBImode
,

32 
	mQImode
,

33 
	mHImode
,

34 
	mSImode
,

35 
	mDImode
,

36 
	mTImode
,

37 
	mEImode
,

38 
	mOImode
,

39 
	mCImode
,

40 
	mXImode
,

41 
	mQQmode
,

42 
	mHQmode
,

43 
	mSQmode
,

44 
	mDQmode
,

45 
	mTQmode
,

46 
	mUQQmode
,

47 
	mUHQmode
,

48 
	mUSQmode
,

49 
	mUDQmode
,

50 
	mUTQmode
,

51 
	mHAmode
,

52 
	mSAmode
,

53 
	mDAmode
,

54 
	mTAmode
,

55 
	mUHAmode
,

56 
	mUSAmode
,

57 
	mUDAmode
,

58 
	mUTAmode
,

59 
	mHFmode
,

60 
	mSFmode
,

61 
	mDFmode
,

62 
	mXFmode
,

63 
	mSDmode
,

64 
	mDDmode
,

65 
	mTDmode
,

66 
	mCQImode
,

67 
	mCHImode
,

68 
	mCSImode
,

69 
	mCDImode
,

70 
	mCTImode
,

71 
	mCEImode
,

72 
	mCOImode
,

73 
	mCCImode
,

74 
	mCXImode
,

75 
	mHCmode
,

76 
	mSCmode
,

77 
	mDCmode
,

78 
	mXCmode
,

79 
	mV4QImode
,

80 
	mV2HImode
,

81 
	mV8QImode
,

82 
	mV4HImode
,

83 
	mV2SImode
,

84 
	mV16QImode
,

85 
	mV8HImode
,

86 
	mV4SImode
,

87 
	mV2DImode
,

88 
	mV4QQmode
,

89 
	mV2HQmode
,

90 
	mV4UQQmode
,

91 
	mV2UHQmode
,

92 
	mV2HAmode
,

93 
	mV2UHAmode
,

94 
	mV4HFmode
,

95 
	mV2SFmode
,

96 
	mV8HFmode
,

97 
	mV4SFmode
,

98 
	mV2DFmode
,

99 
	mMAX_MACHINE_MODE
,

101 
	mMIN_MODE_RANDOM
 = 
VOIDmode
,

102 
	mMAX_MODE_RANDOM
 = 
BLKmode
,

104 
	mMIN_MODE_CC
 = 
CCmode
,

105 
	mMAX_MODE_CC
 = 
CC_Nmode
,

107 
	mMIN_MODE_INT
 = 
QImode
,

108 
	mMAX_MODE_INT
 = 
XImode
,

110 
	mMIN_MODE_PARTIAL_INT
 = 
VOIDmode
,

111 
	mMAX_MODE_PARTIAL_INT
 = 
VOIDmode
,

113 
	mMIN_MODE_FRACT
 = 
QQmode
,

114 
	mMAX_MODE_FRACT
 = 
TQmode
,

116 
	mMIN_MODE_UFRACT
 = 
UQQmode
,

117 
	mMAX_MODE_UFRACT
 = 
UTQmode
,

119 
	mMIN_MODE_ACCUM
 = 
HAmode
,

120 
	mMAX_MODE_ACCUM
 = 
TAmode
,

122 
	mMIN_MODE_UACCUM
 = 
UHAmode
,

123 
	mMAX_MODE_UACCUM
 = 
UTAmode
,

125 
	mMIN_MODE_FLOAT
 = 
HFmode
,

126 
	mMAX_MODE_FLOAT
 = 
XFmode
,

128 
	mMIN_MODE_DECIMAL_FLOAT
 = 
SDmode
,

129 
	mMAX_MODE_DECIMAL_FLOAT
 = 
TDmode
,

131 
	mMIN_MODE_COMPLEX_INT
 = 
CQImode
,

132 
	mMAX_MODE_COMPLEX_INT
 = 
CXImode
,

134 
	mMIN_MODE_COMPLEX_FLOAT
 = 
HCmode
,

135 
	mMAX_MODE_COMPLEX_FLOAT
 = 
XCmode
,

137 
	mMIN_MODE_VECTOR_INT
 = 
V4QImode
,

138 
	mMAX_MODE_VECTOR_INT
 = 
V2DImode
,

140 
	mMIN_MODE_VECTOR_FRACT
 = 
V4QQmode
,

141 
	mMAX_MODE_VECTOR_FRACT
 = 
V2HQmode
,

143 
	mMIN_MODE_VECTOR_UFRACT
 = 
V4UQQmode
,

144 
	mMAX_MODE_VECTOR_UFRACT
 = 
V2UHQmode
,

146 
	mMIN_MODE_VECTOR_ACCUM
 = 
V2HAmode
,

147 
	mMAX_MODE_VECTOR_ACCUM
 = 
V2HAmode
,

149 
	mMIN_MODE_VECTOR_UACCUM
 = 
V2UHAmode
,

150 
	mMAX_MODE_VECTOR_UACCUM
 = 
V2UHAmode
,

152 
	mMIN_MODE_VECTOR_FLOAT
 = 
V4HFmode
,

153 
	mMAX_MODE_VECTOR_FLOAT
 = 
V2DFmode
,

155 
	mNUM_MACHINE_MODES
 = 
MAX_MACHINE_MODE


158 
	#CONST_MODE_SIZE
 c⁄°

	)

159 
	#CONST_MODE_BASE_ALIGN
 c⁄°

	)

160 
	#CONST_MODE_IBIT
 c⁄°

	)

161 
	#CONST_MODE_FBIT
 c⁄°

	)

163 
	#BITS_PER_UNIT
 (8)

	)

164 
	#MAX_BITSIZE_MODE_ANY_INT
 (64*
BITS_PER_UNIT
)

	)

165 
	#MAX_BITSIZE_MODE_ANY_MODE
 (128*
BITS_PER_UNIT
)

	)

	@include/internal-fn.h

20 #i‚de‡
GCC_INTERNAL_FN_H


21 
	#GCC_INTERNAL_FN_H


	)

23 
	eöã∫Æ_‚
 {

24 
	#DEF_INTERNAL_FN
(
CODE
, 
FLAGS
, 
FNSPEC
Ë
IFN_
##CODE,

	)

25 
	~"öã∫Æ-‚.def
"

26 #unde‡
DEF_INTERNAL_FN


27 
	mIFN_LAST


32 
öô_öã∫Æ_‚s
 ();

37 c⁄° *c⁄° 
öã∫Æ_‚_«me_¨øy
[];

39 
ölöe
 const *

40 
	$öã∫Æ_‚_«me
 (
öã∫Æ_‚
 
‚
)

42  
öã∫Æ_‚_«me_¨øy
[(Ë
‚
];

43 
	}
}

47 c⁄° 
öã∫Æ_‚_Êags_¨øy
[];

49 
ölöe
 

50 
	$öã∫Æ_‚_Êags
 (
öã∫Æ_‚
 
‚
)

52  
öã∫Æ_‚_Êags_¨øy
[(Ë
‚
];

53 
	}
}

57 
GTY
(()Ë
c⁄°_åì
 
öã∫Æ_‚_‚•ec_¨øy
[
IFN_LAST
 + 1];

59 
ölöe
 
c⁄°_åì


60 
	$öã∫Æ_‚_‚•ec
 (
öã∫Æ_‚
 
‚
)

62  
öã∫Æ_‚_‚•ec_¨øy
[(Ë
‚
];

63 
	}
}

65 
ex∑nd_öã∫Æ_ˇŒ
 (
gim∂e
);

	@include/intl.h

18 #i‚de‡
GCC_INTL_H


19 
	#GCC_INTL_H


	)

21 #ifde‡
HAVE_LOCALE_H


22 
	~<loˇÀ.h
>

25 #i‚de‡
HAVE_SETLOCALE


26 
	#£éoˇÀ
(
ˇãg‹y
, 
loˇÀ
Ë÷oˇÀ)

	)

29 #ifde‡
ENABLE_NLS


30 
	~<liböé.h
>

31 
gcc_öô_liböé
 ();

32 
size_t
 
gcc_gëãxt_width
 (const *);

35 #unde‡
ãxtdomaö


36 
	#ãxtdomaö
(
domaö
Ë(domaö)

	)

37 #unde‡
bödãxtdomaö


38 
	#bödãxtdomaö
(
domaö
, 
dúe˘‹y
Ë(domaö)

	)

39 #unde‡
gëãxt


40 
	#gëãxt
(
msgid
Ë(msgid)

	)

41 
	#ngëãxt
(
söguœr
,
∂uøl
,
n
Ë
	`Áke_ngëãxt
 (söguœr,Öluøl,Ç)

	)

42 
	#gcc_öô_liböé
(Ë

	)

43 
	#gcc_gëãxt_width
(
s
Ë
	`°æí
 (s)

	)

45 c⁄° *
Áke_ngëãxt
 (c⁄° *
söguœr
, c⁄° *
∂uøl
,

46 
n
);

50 #i‚de‡
_


51 
	#_
(
msgid
Ë
	`gëãxt
 (msgid)

	)

54 #i‚de‡
N_


55 
	#N_
(
msgid
Ë
	)
msgid

58 #i‚de‡
G_


59 
	#G_
(
gmsgid
Ë
	)
gmsgid

62 *
gë_•a˚s
 (const *);

64 c⁄° *
›í_quŸe
;

65 c⁄° *
˛o£_quŸe
;

66 c⁄° *
loˇÀ_ícodög
;

67 
boﬁ
 
loˇÀ_utf8
;

	@include/ipa-prop.h

20 #i‚de‡
IPA_PROP_H


21 
	#IPA_PROP_H


	)

23 
	~"vec.h
"

24 
	~"cgøph.h
"

25 
	~"Æloc-poﬁ.h
"

30 
	#IPA_UNDESCRIBED_USE
 -1

	)

67 
	ejump_func_ty≥


69 
	mIPA_JF_UNKNOWN
 = 0,

70 
	mIPA_JF_KNOWN_TYPE
,

71 
	mIPA_JF_CONST
,

72 
	mIPA_JF_PASS_THROUGH
,

73 
	mIPA_JF_ANCESTOR


77 
GTY
(()Ë
	gùa_known_ty≥_d©a


80 
HOST_WIDE_INT
 
	goff£t
;

82 
åì
 
	gba£_ty≥
;

84 
åì
 
	gcomp⁄ít_ty≥
;

87 
	gùa_c°_ªf_desc
;

90 
GTY
(()Ë
	gùa_c⁄°™t_d©a


93 
åì
 
	gvÆue
;

95 
ùa_c°_ªf_desc
 
GTY
((
skù
)Ë*
	grdesc
;

100 
GTY
(()Ë
	gùa_∑ss_through_d©a


104 
åì
 
	g›î™d
;

106 
	gf‹mÆ_id
;

111 
åì_code
 
	g›î©i⁄
;

118 
	gagg_¥e£rved
 : 1;

123 
	gty≥_¥e£rved
 : 1;

129 
GTY
(()Ë
	gùa_™˚°‹_jf_d©a


132 
HOST_WIDE_INT
 
	goff£t
;

136 
åì
 
	gty≥
;

138 
	gf‹mÆ_id
;

140 
	gagg_¥e£rved
 : 1;

144 
	gty≥_¥e£rved
 : 1;

157 
GTY
(()Ë
	gùa_agg_jf_ôem


160 
HOST_WIDE_INT
 
	goff£t
;

163 
åì
 
	gvÆue
;

170 
GTY
(()Ë
	gùa_agg_jump_fun˘i⁄


173 
	gvec
<
	gùa_agg_jf_ôem
, 
	gva_gc
> *
	gôems
;

175 
boﬁ
 
	gby_ªf
;

178 
ùa_agg_jump_fun˘i⁄
 *
	tùa_agg_jump_fun˘i⁄_p
;

183 
GTY
 (()Ë
	gùa_jump_func


187 
ùa_agg_jump_fun˘i⁄
 
	gagg
;

189 
jump_func_ty≥
 
	gty≥
;

193 
	ujump_func_vÆue


195 
ùa_known_ty≥_d©a
 
GTY
 ((
èg
 ("IPA_JF_KNOWN_TYPE"))Ë
	gknown_ty≥
;

196 
ùa_c⁄°™t_d©a
 
GTY
 ((
èg
 ("IPA_JF_CONST"))Ë
	gc⁄°™t
;

197 
ùa_∑ss_through_d©a
 
GTY
 ((
èg
 ("IPA_JF_PASS_THROUGH"))Ë
	g∑ss_through
;

198 
ùa_™˚°‹_jf_d©a
 
GTY
 ((
èg
 ("IPA_JF_ANCESTOR"))Ë
	g™˚°‹
;

199 } 
GTY
 ((
desc
 ("%1.ty≥"))Ë
	gvÆue
;

206 
ölöe
 
HOST_WIDE_INT


207 
	$ùa_gë_jf_known_ty≥_off£t
 (
ùa_jump_func
 *
jfunc
)

209 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_KNOWN_TYPE
);

210  
jfunc
->
vÆue
.
known_ty≥
.
off£t
;

211 
	}
}

215 
ölöe
 
åì


216 
	$ùa_gë_jf_known_ty≥_ba£_ty≥
 (
ùa_jump_func
 *
jfunc
)

218 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_KNOWN_TYPE
);

219  
jfunc
->
vÆue
.
known_ty≥
.
ba£_ty≥
;

220 
	}
}

224 
ölöe
 
åì


225 
	$ùa_gë_jf_known_ty≥_comp⁄ít_ty≥
 (
ùa_jump_func
 *
jfunc
)

227 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_KNOWN_TYPE
);

228  
jfunc
->
vÆue
.
known_ty≥
.
comp⁄ít_ty≥
;

229 
	}
}

233 
ölöe
 
åì


234 
	$ùa_gë_jf_c⁄°™t
 (
ùa_jump_func
 *
jfunc
)

236 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_CONST
);

237  
jfunc
->
vÆue
.
c⁄°™t
.value;

238 
	}
}

240 
ölöe
 
ùa_c°_ªf_desc
 *

241 
	$ùa_gë_jf_c⁄°™t_rdesc
 (
ùa_jump_func
 *
jfunc
)

243 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_CONST
);

244  
jfunc
->
vÆue
.
c⁄°™t
.
rdesc
;

245 
	}
}

249 
ölöe
 
åì


250 
	$ùa_gë_jf_∑ss_through_›î™d
 (
ùa_jump_func
 *
jfunc
)

252 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_PASS_THROUGH
);

253  
jfunc
->
vÆue
.
∑ss_through
.
›î™d
;

254 
	}
}

259 
ölöe
 

260 
	$ùa_gë_jf_∑ss_through_f‹mÆ_id
 (
ùa_jump_func
 *
jfunc
)

262 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_PASS_THROUGH
);

263  
jfunc
->
vÆue
.
∑ss_through
.
f‹mÆ_id
;

264 
	}
}

268 
ölöe
 
åì_code


269 
	$ùa_gë_jf_∑ss_through_›î©i⁄
 (
ùa_jump_func
 *
jfunc
)

271 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_PASS_THROUGH
);

272  
jfunc
->
vÆue
.
∑ss_through
.
›î©i⁄
;

273 
	}
}

277 
ölöe
 
boﬁ


278 
	$ùa_gë_jf_∑ss_through_agg_¥e£rved
 (
ùa_jump_func
 *
jfunc
)

280 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_PASS_THROUGH
);

281  
jfunc
->
vÆue
.
∑ss_through
.
agg_¥e£rved
;

282 
	}
}

286 
ölöe
 
boﬁ


287 
	$ùa_gë_jf_∑ss_through_ty≥_¥e£rved
 (
ùa_jump_func
 *
jfunc
)

289 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_PASS_THROUGH
);

290  
jfunc
->
vÆue
.
∑ss_through
.
ty≥_¥e£rved
;

291 
	}
}

295 
ölöe
 
HOST_WIDE_INT


296 
	$ùa_gë_jf_™˚°‹_off£t
 (
ùa_jump_func
 *
jfunc
)

298 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_ANCESTOR
);

299  
jfunc
->
vÆue
.
™˚°‹
.
off£t
;

300 
	}
}

304 
ölöe
 
åì


305 
	$ùa_gë_jf_™˚°‹_ty≥
 (
ùa_jump_func
 *
jfunc
)

307 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_ANCESTOR
);

308  
jfunc
->
vÆue
.
™˚°‹
.
ty≥
;

309 
	}
}

314 
ölöe
 

315 
	$ùa_gë_jf_™˚°‹_f‹mÆ_id
 (
ùa_jump_func
 *
jfunc
)

317 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_ANCESTOR
);

318  
jfunc
->
vÆue
.
™˚°‹
.
f‹mÆ_id
;

319 
	}
}

323 
ölöe
 
boﬁ


324 
	$ùa_gë_jf_™˚°‹_agg_¥e£rved
 (
ùa_jump_func
 *
jfunc
)

326 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_ANCESTOR
);

327  
jfunc
->
vÆue
.
™˚°‹
.
agg_¥e£rved
;

328 
	}
}

332 
ölöe
 
boﬁ


333 
	$ùa_gë_jf_™˚°‹_ty≥_¥e£rved
 (
ùa_jump_func
 *
jfunc
)

335 
	`gcc_checkög_as£π
 (
jfunc
->
ty≥
 =
IPA_JF_ANCESTOR
);

336  
jfunc
->
vÆue
.
™˚°‹
.
ty≥_¥e£rved
;

337 
	}
}

341 
	sùa_∑øm_des¸ùt‹


344 
åì
 
	mde˛
;

348 
	mc⁄åﬁÀd_u£s
;

349 
	mmove_co°
 : 31;

351 
	mu£d
 : 1;

354 
	gù˝_œâi˚
;

360 
	sùa_node_∑øms


364 
	mvec
<
	mùa_∑øm_des¸ùt‹
> 
	mdes¸ùt‹s
;

367 
ù˝_∑øm_œâi˚s
 *
	mœâi˚s
;

370 
cgøph_node
 *
	mù˝_‹ig_node
;

373 
	mvec
<
	måì
> 
	mknown_vÆs
;

375 
	mu£s_™Æysis_d⁄e
 : 1;

377 
	mnode_íqueued
 : 1;

380 
	mdo_˛⁄e_f‹_Æl_c⁄ãxts
 : 1;

382 
	mis_Æl_c⁄ãxts_˛⁄e
 : 1;

385 
	mnode_dód
 : 1;

393 
ölöe
 

394 
	$ùa_gë_∑øm_cou¡
 (
ùa_node_∑øms
 *
öfo
)

396  
öfo
->
des¸ùt‹s
.
	`Àngth
 ();

397 
	}
}

403 
ölöe
 
åì


404 
	$ùa_gë_∑øm
 (
ùa_node_∑øms
 *
öfo
, 
i
)

406 
	`gcc_checkög_as£π
 (!
Êag_w∑
);

407  
öfo
->
des¸ùt‹s
[
i
].
de˛
;

408 
	}
}

413 
ölöe
 

414 
	$ùa_gë_∑øm_move_co°
 (
ùa_node_∑øms
 *
öfo
, 
i
)

416  
öfo
->
des¸ùt‹s
[
i
].
move_co°
;

417 
	}
}

422 
ölöe
 

423 
	$ùa_£t_∑øm_u£d
 (
ùa_node_∑øms
 *
öfo
, 
i
, 
boﬁ
 
vÆ
)

425 
öfo
->
des¸ùt‹s
[
i
].
u£d
 = 
vÆ
;

426 
	}
}

431 
ölöe
 

432 
	$ùa_gë_c⁄åﬁÀd_u£s
 (
ùa_node_∑øms
 *
öfo
, 
i
)

434  
öfo
->
des¸ùt‹s
[
i
].
c⁄åﬁÀd_u£s
;

435 
	}
}

439 
ölöe
 

440 
	$ùa_£t_c⁄åﬁÀd_u£s
 (
ùa_node_∑øms
 *
öfo
, 
i
, 
vÆ
)

442 
öfo
->
des¸ùt‹s
[
i
].
c⁄åﬁÀd_u£s
 = 
vÆ
;

443 
	}
}

448 
ölöe
 
boﬁ


449 
	$ùa_is_∑øm_u£d
 (
ùa_node_∑øms
 *
öfo
, 
i
)

451  
öfo
->
des¸ùt‹s
[
i
].
u£d
;

452 
	}
}

456 
GTY
(()Ë
	gùa_agg_ª∂a˚mít_vÆue


459 
ùa_agg_ª∂a˚mít_vÆue
 *
	g√xt
;

461 
HOST_WIDE_INT
 
	goff£t
;

463 
åì
 
	gvÆue
;

465 
	gödex
;

467 
boﬁ
 
	gby_ªf
;

470 
ùa_agg_ª∂a˚mít_vÆue
 *
	tùa_agg_ª∂a˚mít_vÆue_p
;

472 
ùa_£t_node_agg_vÆue_chaö
 (
cgøph_node
 *
node
,

473 
ùa_agg_ª∂a˚mít_vÆue
 *
aggvÆs
);

477 
GTY
(()Ë
	gùa_edge_¨gs


480 
	gvec
<
	gùa_jump_func
, 
	gva_gc
> *
	gjump_fun˘i⁄s
;

488 
ölöe
 

489 
	$ùa_gë_cs_¨gumít_cou¡
 (
ùa_edge_¨gs
 *
¨gs
)

491  
	`vec_ß„_Àngth
 (
¨gs
->
jump_fun˘i⁄s
);

492 
	}
}

498 
ölöe
 
ùa_jump_func
 *

499 
	$ùa_gë_ôh_jump_func
 (
ùa_edge_¨gs
 *
¨gs
, 
i
)

501  &(*
¨gs
->
jump_fun˘i⁄s
)[
i
];

502 
	}
}

507 
vec
<
ùa_node_∑øms
> 
ùa_node_∑øms_ve˘‹
;

509 
GTY
(()Ë
vec
<
ùa_agg_ª∂a˚mít_vÆue_p
, 
va_gc
> *
ùa_node_agg_ª∂a˚míts
;

511 
GTY
(()Ë
vec
<
ùa_edge_¨gs
, 
va_gc
> *
ùa_edge_¨gs_ve˘‹
;

515 
	#IPA_NODE_REF
(
NODE
Ë(&
ùa_node_∑øms_ve˘‹
[(NODE)->
uid
])

	)

516 
	#IPA_EDGE_REF
(
EDGE
Ë(&(*
ùa_edge_¨gs_ve˘‹
)[(EDGE)->
uid
])

	)

519 
	#IS_VALID_JUMP_FUNC_INDEX
(
I
Ë((IË!-1)

	)

522 
ùa_¸óã_Æl_node_∑øms
 ();

523 
ùa_¸óã_Æl_edge_¨gs
 ();

524 
ùa_‰ì_edge_¨gs_sub°ru˘uªs
 (
ùa_edge_¨gs
 *);

525 
ùa_‰ì_node_∑øms_sub°ru˘uªs
 (
ùa_node_∑øms
 *);

526 
ùa_‰ì_Æl_node_∑øms
 ();

527 
ùa_‰ì_Æl_edge_¨gs
 ();

528 
ùa_‰ì_Æl_°ru˘uªs_a·î_ùa_˝
 ();

529 
ùa_‰ì_Æl_°ru˘uªs_a·î_iö 
 ();

530 
ùa_ªgi°î_cgøph_hooks
 ();

535 
ölöe
 

536 
	$ùa_check_¸óã_node_∑øms
 ()

538 i‡(!
ùa_node_∑øms_ve˘‹
.
	`exi°s
 ())

539 
ùa_node_∑øms_ve˘‹
.
	`¸óã
 (
cgøph_max_uid
);

541 i‡(
ùa_node_∑øms_ve˘‹
.
	`Àngth
 (Ë<(Ë
cgøph_max_uid
)

542 
ùa_node_∑øms_ve˘‹
.
	`ß„_grow_˛óªd
 (
cgøph_max_uid
 + 1);

543 
	}
}

548 
ölöe
 

549 
	$ùa_check_¸óã_edge_¨gs
 ()

551 i‡(
	`vec_ß„_Àngth
 (
ùa_edge_¨gs_ve˘‹
Ë<(Ë
cgøph_edge_max_uid
)

552 
	`vec_ß„_grow_˛óªd
 (
ùa_edge_¨gs_ve˘‹
, 
cgøph_edge_max_uid
 + 1);

553 
	}
}

559 
ölöe
 
boﬁ


560 
	$ùa_edge_¨gs_öfo_avaûabÀ_f‹_edge_p
 (
cgøph_edge
 *
edge
)

562  ((Ë
edge
->
uid
 < 
	`vec_ß„_Àngth
 (
ùa_edge_¨gs_ve˘‹
));

563 
	}
}

567 
ölöe
 
ùa_agg_ª∂a˚mít_vÆue
 *

568 
	$ùa_gë_agg_ª∂a˚míts_f‹_node
 (
cgøph_node
 *
node
)

570 i‡((Ë
node
->
uid
 >
	`vec_ß„_Àngth
 (
ùa_node_agg_ª∂a˚míts
))

571  
NULL
;

572  (*
ùa_node_agg_ª∂a˚míts
)[
node
->
uid
];

573 
	}
}

576 
ùa_öôülize_node_∑øms
 (
cgøph_node
 *
node
);

577 
boﬁ
 
ùa_¥›ag©e_ödúe˘_ˇŒ_öfos
 (
cgøph_edge
 *
cs
,

578 
vec
<
cgøph_edge_p
> *
√w_edges
);

581 
åì
 
ùa_gë_ödúe˘_edge_èrgë
 (
cgøph_edge
 *
õ
,

582 
vec
<
åì
> ,

583 
vec
<
åì
> ,

584 
vec
<
ùa_agg_jump_fun˘i⁄_p
> );

585 
cgøph_edge
 *
ùa_make_edge_dúe˘_to_èrgë
 (cgøph_edgê*, 
åì
);

586 
åì
 
ùa_böfo_‰om_known_ty≥_jfunc
 (
ùa_jump_func
 *);

587 
åì
 
ùa_öå≠ro˚duøl_devútuÆiz©i⁄
 (
gim∂e
);

588 
åì
 
ùa_impossibÀ_devút_èrgë
 (
cgøph_edge
 *,Åree);

591 
ùa_™Æyze_node
 (
cgøph_node
 *);

594 
åì
 
ùa_föd_agg_c°_f‹_∑øm
 (
ùa_agg_jump_fun˘i⁄
 *, 
HOST_WIDE_INT
,

595 
boﬁ
);

596 
boﬁ
 
ùa_lﬂd_‰om_∑rm_agg
 (
ùa_node_∑øms
 *, 
gim∂e
, 
åì
, *,

597 
HOST_WIDE_INT
 *, 
boﬁ
 *);

600 
ùa_¥öt_node_∑øms
 (
FILE
 *, 
cgøph_node
 *
node
);

601 
ùa_¥öt_Æl_∑øms
 (
FILE
 *);

602 
ùa_¥öt_node_jump_fun˘i⁄s
 (
FILE
 *
f
, 
cgøph_node
 *
node
);

603 
ùa_¥öt_Æl_jump_fun˘i⁄s
 (
FILE
 * 
f
);

604 
ù˝_vîify_¥›ag©ed_vÆues
 ();

606 
Æloc_poﬁ
 
ù˝_vÆues_poﬁ
;

607 
Æloc_poﬁ
 
ù˝_sour˚s_poﬁ
;

608 
Æloc_poﬁ
 
ù˝_agg_œâi˚_poﬁ
;

612 
	eùa_∑rm_›
 {

613 
	mIPA_PARM_OP_NONE
,

620 
	mIPA_PARM_OP_NEW
,

623 
	mIPA_PARM_OP_COPY
,

628 
	mIPA_PARM_OP_REMOVE


637 
	sùa_∑rm_adju°mít


644 
åì
 
	mba£
;

648 
åì
 
	mty≥
;

652 
åì
 
	mÆüs_±r_ty≥
;

658 
åì
 
	m√w_de˛
;

662 
åì
 
	m√w_sß_ba£
;

666 
åì
 
	mn⁄loˇl_vÆue
;

669 c⁄° *
	m¨g_¥efix
;

673 
HOST_WIDE_INT
 
	moff£t
;

676 
	mba£_ödex
;

680 
ùa_∑rm_›
 
	m›
;

683 
	mby_ªf
 : 1;

686 
	gvec
<
	tùa_∑rm_adju°mít
> 
	tùa_∑rm_adju°mít_vec
;

688 
	gvec
<
	gåì
> 
ùa_gë_ve˘‹_of_f‹mÆ_∑rms
 (
åì
 
‚de˛
);

689 
	gvec
<
	gåì
> 
ùa_gë_ve˘‹_of_f‹mÆ_∑rm_ty≥s
 (
åì
 
‚ty≥
);

690 
ùa_modify_f‹mÆ_∑ømëîs
 (
åì
 
‚de˛
, 
ùa_∑rm_adju°mít_vec
);

691 
ùa_modify_ˇŒ_¨gumíts
 (
cgøph_edge
 *, 
gim∂e
,

692 
ùa_∑rm_adju°mít_vec
);

693 
ùa_∑rm_adju°mít_vec
 
ùa_comböe_adju°míts
 (ipa_parm_adjustment_vec,

694 
ùa_∑rm_adju°mít_vec
);

695 
ùa_dump_∑øm_adju°míts
 (
FILE
 *, 
ùa_∑rm_adju°mít_vec
, 
åì
);

696 
ùa_dump_agg_ª∂a˚mít_vÆues
 (
FILE
 *
f
,

697 
ùa_agg_ª∂a˚mít_vÆue
 *
av
);

698 
ùa_¥›_wrôe_jump_fun˘i⁄s
 ();

699 
ùa_¥›_ªad_jump_fun˘i⁄s
 ();

700 
ùa_¥›_wrôe_Æl_agg_ª∂a˚mít
 ();

701 
ùa_¥›_ªad_Æl_agg_ª∂a˚mít
 ();

702 
ùa_upd©e_a·î_…o_ªad
 ();

703 
ùa_gë_∑øm_de˛_ödex
 (
ùa_node_∑øms
 *, 
åì
);

704 
åì
 
ùa_vÆue_‰om_jfunc
 (
ùa_node_∑øms
 *
öfo
,

705 
ùa_jump_func
 *
jfunc
);

706 
ù˝_å™sf‹m_fun˘i⁄
 (
cgøph_node
 *
node
);

707 
ùa_dump_∑øm
 (
FILE
 *, 
ùa_node_∑øms
 *
öfo
, 
i
);

708 
boﬁ
 
ùa_modify_ex¥
 (
åì
 *, boﬁ, 
ùa_∑rm_adju°mít_vec
);

709 
ùa_∑rm_adju°mít
 *
ùa_gë_adju°mít_ˇndid©e
 (
åì
 **, 
boﬁ
 *,

710 
ùa_∑rm_adju°mít_vec
,

711 
boﬁ
);

715 
åì
 
buûd_ªf_f‹_off£t
 (
loˇti⁄_t
,Åªe, 
HOST_WIDE_INT
,Åree,

716 
gim∂e_°mt_ôî©‹
 *, 
boﬁ
);

	@include/ipa-ref-inline.h

22 
ölöe
 
cgøph_node
 *

23 
	$ùa_ªf_node
 (
ùa_ªf
 *
ªf
)

25  
	`cgøph
 (
ªf
->
ª„ºed
);

26 
	}
}

30 
ölöe
 
v¨poﬁ_node
 *

31 
	$ùa_ªf_v¨poﬁ_node
 (
ùa_ªf
 *
ªf
)

33  
	`v¨poﬁ
 (
ªf
->
ª„ºed
);

34 
	}
}

38 
ölöe
 
cgøph_node
 *

39 
	$ùa_ªf_ª„ºög_node
 (
ùa_ªf
 *
ªf
)

41  
	`cgøph
 (
ªf
->
ª„ºög
);

42 
	}
}

46 
ölöe
 
v¨poﬁ_node
 *

47 
	$ùa_ªf_ª„ºög_v¨poﬁ_node
 (
ùa_ªf
 *
ªf
)

49  
	`v¨poﬁ
 (
ªf
->
ª„ºög
);

50 
	}
}

54 
ölöe
 
ùa_ªf_li°
 *

55 
	$ùa_ªf_ª„ºög_ªf_li°
 (
ùa_ªf
 *
ªf
)

57  &
ªf
->
ª„ºög
->
ªf_li°
;

58 
	}
}

62 
ölöe
 
ùa_ªf_li°
 *

63 
	$ùa_ªf_ª„ºed_ªf_li°
 (
ùa_ªf
 *
ªf
)

65  &
ªf
->
ª„ºed
->
ªf_li°
;

66 
	}
}

70 
ölöe
 
ùa_ªf
 *

71 
	$ùa_ªf_li°_fú°_ª„ªn˚
 (
ùa_ªf_li°
 *
li°
)

73 i‡(!
	`vec_ß„_Àngth
 (
li°
->
ª„ªn˚s
))

74  
NULL
;

75  &(*
li°
->
ª„ªn˚s
)[0];

76 
	}
}

80 
ölöe
 
ùa_ªf
 *

81 
	$ùa_ªf_li°_fú°_ª„ºög
 (
ùa_ªf_li°
 *
li°
)

83 i‡(!
li°
->
ª„ºög
.
	`Àngth
 ())

84  
NULL
;

85  
li°
->
ª„ºög
[0];

86 
	}
}

90 
ölöe
 

91 
	$ùa_em±y_ªf_li°
 (
ùa_ªf_li°
 *
li°
)

93 
li°
->
ª„ºög
.
	`¸óã
 (0);

94 
li°
->
ª„ªn˚s
 = 
NULL
;

95 
	}
}

99 
ölöe
 

100 
	$ùa_ªf_li°_ƒe„ªn˚s
 (
ùa_ªf_li°
 *
li°
)

102  
	`vec_ß„_Àngth
 (
li°
->
ª„ªn˚s
);

103 
	}
}

105 
	#ùa_ªf_li°_ª„ªn˚_ôî©e
(
L
,
I
,
P
) \

106 
	`vec_ß„_ôî©e
 ((
L
)->
ª„ªn˚s
, (
I
), &(
P
))

	)

107 
	#ùa_ªf_li°_ª„ºög_ôî©e
(
L
,
I
,
P
) \

108 (
L
)->
ª„ºög
.
	`ôî©e
 ((
I
), &(
P
))

	)

	@include/ipa-ref.h

21 
	gcgøph_node
;

22 
˛ass
 
	gv¨poﬁ_node
;

23 
˛ass
 
	gsymèb_node
;

27 
GTY
(()Ë
	gùa_ªf_u£


29 
	gIPA_REF_LOAD
,

30 
	gIPA_REF_STORE
,

31 
	gIPA_REF_ADDR
,

32 
	gIPA_REF_ALIAS


36 
GTY
(()Ë
	gùa_ªf


38 
symèb_node
 *
	gª„ºög
;

39 
symèb_node
 *
	gª„ºed
;

40 
gim∂e
 
	g°mt
;

41 
	g…o_°mt_uid
;

42 
	gª„ºed_ödex
;

43 
ENUM_BITFIELD
 (
ùa_ªf_u£
Ë
	gu£
:2;

44 
	g•ecuœtive
:1;

47 
ùa_ªf
 
	tùa_ªf_t
;

48 
ùa_ªf
 *
	tùa_ªf_±r
;

52 
GTY
(()Ë
	gùa_ªf_li°


55 
	gvec
<
	gùa_ªf_t
, 
	gva_gc
> *
	gª„ªn˚s
;

58 
	gvec
<
	gùa_ªf_±r
> 
GTY
((
skù
)Ë
	gª„ºög
;

61 
ùa_ªf
 * 
ùa_ªc‹d_ª„ªn˚
 (
symèb_node
 *,

62 
symèb_node
 *,

63 
ùa_ªf_u£
, 
gim∂e
);

64 
ùa_ªf
 * 
ùa_maybe_ªc‹d_ª„ªn˚
 (
symèb_node
 *, 
åì
,

65 
ùa_ªf_u£
, 
gim∂e
);

67 
ùa_ªmove_ª„ªn˚
 (
ùa_ªf
 *);

68 
ùa_ªmove_Æl_ª„ªn˚s
 (
ùa_ªf_li°
 *);

69 
ùa_ªmove_Æl_ª„ºög
 (
ùa_ªf_li°
 *);

70 
ùa_dump_ª„ªn˚s
 (
FILE
 *, 
ùa_ªf_li°
 *);

71 
ùa_dump_ª„ºög
 (
FILE
 *, 
ùa_ªf_li°
 *);

72 
ùa_˛⁄e_ª„ªn˚s
 (
symèb_node
 *, 
ùa_ªf_li°
 *);

73 
ùa_˛⁄e_ª„ºög
 (
symèb_node
 *, 
ùa_ªf_li°
 *);

74 
ùa_ªf
 * 
ùa_˛⁄e_ªf
 (ùa_ª‡*, 
symèb_node
 *, 
gim∂e
);

75 
boﬁ
 
ùa_ªf_ˇ¬Ÿ_Àad_to_ªtu∫
 (
ùa_ªf
 *);

76 
boﬁ
 
ùa_ªf_has_Æü£s_p
 (
ùa_ªf_li°
 *);

77 
ùa_ªf
 * 
ùa_föd_ª„ªn˚
 (
symèb_node
 *, symèb_nodê*, 
gim∂e
, );

78 
ùa_ªmove_°mt_ª„ªn˚s
 (
symèb_node
 *, 
gim∂e
);

79 
ùa_˛ór_°mts_ö_ª„ªn˚s
 (
symèb_node
 *);

	@include/ipa-reference.h

21 #i‚de‡
GCC_IPA_REFERENCE_H


22 
	#GCC_IPA_REFERENCE_H


	)

23 
	~"bôm≠.h
"

24 
	~"cgøph.h
"

27 
bôm≠
 
ùa_ª„ªn˚_gë_nŸ_ªad_globÆ
 (
cgøph_node
 *
‚
);

28 
bôm≠
 
ùa_ª„ªn˚_gë_nŸ_wrôãn_globÆ
 (
cgøph_node
 *
‚
);

	@include/ipa-utils.h

21 #i‚de‡
GCC_IPA_UTILS_H


22 
	#GCC_IPA_UTILS_H


	)

23 
	~"cgøph.h
"

25 
	sùa_dfs_öfo
 {

26 
	md‚_numbî
;

27 
	mlow_lök
;

30 
	mscc_no
;

31 
boﬁ
 
	m√w_node
;

32 
boﬁ
 
	m⁄_°ack
;

33 
cgøph_node
* 
	m√xt_cy˛e
;

34 
PTR
 
	maux
;

39 
	sùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 {

42 
HOST_WIDE_INT
 
	moff£t
;

43 
åì
 
	mouãr_ty≥
;

45 
boﬁ
 
	mmaybe_ö_c⁄°ru˘i⁄
;

47 
boﬁ
 
	mmaybe_dîived_ty≥
;

51 c⁄° 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 
ùa_dummy_pﬁym‹phic_ˇŒ_c⁄ãxt
;

54 
ùa_¥öt_‹dî
 (
FILE
*, c⁄° *, 
cgøph_node
**, );

55 
ùa_ªdu˚d_po°‹dî
 (
cgøph_node
 **, 
boﬁ
, bool,

56 
	$boﬁ
 (*
ign‹e_edge
Ë(
cgøph_edge
 *));

57 
	`ùa_‰ì_po°‹dî_öfo
 ();

58 
vec
<
cgøph_node_±r
> 
	`ùa_gë_nodes_ö_cy˛e
 (
cgøph_node
 *);

59 
boﬁ
 
	`ùa_edge_wôhö_scc
 (
cgøph_edge
 *);

60 
	`ùa_ªvî£_po°‹dî
 (
cgøph_node
 **);

61 
åì
 
	`gë_ba£_v¨
 (tree);

62 
	`ùa_mîge_¥ofûes
 (
cgøph_node
 *
d°
,

63 
cgøph_node
 *
§c
);

64 
boﬁ
 
	`ªcursive_ˇŒ_p
 (
åì
,Åree);

67 
boﬁ
 
	`ùa_¥›ag©e_‰equícy
 (
cgøph_node
 *
node
);

71 
odr_ty≥_d
;

72 
odr_ty≥_d
 *
	todr_ty≥
;

73 
	`buûd_ty≥_öhîô™˚_gøph
 ();

74 
	`upd©e_ty≥_öhîô™˚_gøph
 ();

75 
vec
 <
cgøph_node
 *>

76 
	`possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
åì
, 
HOST_WIDE_INT
,

77 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
,

78 
boﬁ
 *
föÆ
 = 
NULL
,

79 **
ˇche_tokí
 = 
NULL
,

80 *
n⁄c⁄°ru˘i⁄_èrgës
 = 
NULL
);

81 
odr_ty≥
 
	`gë_odr_ty≥
 (
åì
, 
boﬁ
 
ö£π
 = 
Ál£
);

82 
	`dump_possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
FILE
 *, 
åì
, 
HOST_WIDE_INT
,

83 c⁄° 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 &);

84 
boﬁ
 
	`possibÀ_pﬁym‹phic_ˇŒ_èrgë_p
 (
åì
, 
HOST_WIDE_INT
,

85 c⁄° 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 &,

86 
cgøph_node
 *
n
);

87 
åì
 
	`mëhod_˛ass_ty≥
 (tree);

88 
åì
 
	`gë_pﬁym‹phic_ˇŒ_öfo
 (tree,Åree,Åree *,

89 
HOST_WIDE_INT
 *,

90 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 *);

91 
boﬁ
 
	`gë_pﬁym‹phic_ˇŒ_öfo_‰om_öv¨ü¡
 (
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 *,

92 
åì
,Åªe, 
HOST_WIDE_INT
);

93 
åì
 
	`vèbÀ_poöãr_vÆue_to_böfo
 (åì 
t
);

94 
boﬁ
 
	`vèbÀ_poöãr_vÆue_to_vèbÀ
 (
åì
,Åªê*, 
HOST_WIDE_INT
 *);

106 
ölöe
 
vec
 <
cgøph_node
 *>

107 
	$possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
cgøph_edge
 *
e
,

108 
boﬁ
 *
föÆ
 = 
NULL
,

109 **
ˇche_tokí
 = 
NULL
,

110 *
n⁄c⁄°ru˘i⁄_èrgës
 = 
NULL
)

112 
	`gcc_checkög_as£π
 (
e
->
ödúe˘_öfo
->
pﬁym‹phic
);

113 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 
c⁄ãxt
 = {
e
->
ödúe˘_öfo
->
off£t
,

114 
e
->
ödúe˘_öfo
->
ouãr_ty≥
,

115 
e
->
ödúe˘_öfo
->
maybe_ö_c⁄°ru˘i⁄
,

116 
e
->
ödúe˘_öfo
->
maybe_dîived_ty≥
};

117  
	`possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
e
->
ödúe˘_öfo
->
Ÿr_ty≥
,

118 
e
->
ödúe˘_öfo
->
Ÿr_tokí
,

119 
c⁄ãxt
,

120 
föÆ
, 
ˇche_tokí
,

121 
n⁄c⁄°ru˘i⁄_èrgës
);

122 
	}
}

126 
ölöe
 
	gvec
 <
	gcgøph_node
 *>

127 
	$possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
åì
 
ˇŒ
,

128 
boﬁ
 *
föÆ
 = 
NULL
,

129 **
ˇche_tokí
 = 
NULL
)

131 
åì
 
Ÿr_ty≥
;

132 
HOST_WIDE_INT
 
Ÿr_tokí
;

133 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 
c⁄ãxt
;

135 
	`gë_pﬁym‹phic_ˇŒ_öfo
 (
cuºít_fun˘i⁄_de˛
,

136 
ˇŒ
,

137 &
Ÿr_ty≥
, &
Ÿr_tokí
, &
c⁄ãxt
);

138  
	`possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
	`obj_ty≥_ªf_˛ass
 (
ˇŒ
),

139 
åì_to_uhwi


140 (
	`OBJ_TYPE_REF_TOKEN
 (
ˇŒ
)),

141 
c⁄ãxt
,

142 
föÆ
, 
ˇche_tokí
);

143 
	}
}

147 
ölöe
 

148 
	$dump_possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
FILE
 *
f
, 
cgøph_edge
 *
e
)

150 
	`gcc_checkög_as£π
 (
e
->
ödúe˘_öfo
->
pﬁym‹phic
);

151 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 
c⁄ãxt
 = {
e
->
ödúe˘_öfo
->
off£t
,

152 
e
->
ödúe˘_öfo
->
ouãr_ty≥
,

153 
e
->
ödúe˘_öfo
->
maybe_ö_c⁄°ru˘i⁄
,

154 
e
->
ödúe˘_öfo
->
maybe_dîived_ty≥
};

155 
	`dump_possibÀ_pﬁym‹phic_ˇŒ_èrgës
 (
f
, 
e
->
ödúe˘_öfo
->
Ÿr_ty≥
,

156 
e
->
ödúe˘_öfo
->
Ÿr_tokí
,

157 
c⁄ãxt
);

158 
	}
}

163 
ölöe
 
boﬁ


164 
	$possibÀ_pﬁym‹phic_ˇŒ_èrgë_p
 (
cgøph_edge
 *
e
,

165 
cgøph_node
 *
n
)

167 
ùa_pﬁym‹phic_ˇŒ_c⁄ãxt
 
c⁄ãxt
 = {
e
->
ödúe˘_öfo
->
off£t
,

168 
e
->
ödúe˘_öfo
->
ouãr_ty≥
,

169 
e
->
ödúe˘_öfo
->
maybe_ö_c⁄°ru˘i⁄
,

170 
e
->
ödúe˘_öfo
->
maybe_dîived_ty≥
};

171  
	`possibÀ_pﬁym‹phic_ˇŒ_èrgë_p
 (
e
->
ödúe˘_öfo
->
Ÿr_ty≥
,

172 
e
->
ödúe˘_öfo
->
Ÿr_tokí
,

173 
c⁄ãxt
, 
n
);

174 
	}
}

179 
ölöe
 
boﬁ


180 
	$possibÀ_pﬁym‹phic_ˇŒ_èrgë_p
 (
åì
 
ˇŒ
,

181 
cgøph_node
 *
n
)

183  
	`possibÀ_pﬁym‹phic_ˇŒ_èrgë_p
 (
	`obj_ty≥_ªf_˛ass
 (
ˇŒ
),

184 
åì_to_uhwi


185 (
	`OBJ_TYPE_REF_TOKEN
 (
ˇŒ
)),

186 
ùa_dummy_pﬁym‹phic_ˇŒ_c⁄ãxt
,

187 
n
);

188 
	}
}

	@include/is-a.h

132 #i‚de‡
GCC_IS_A_H


133 
	#GCC_IS_A_H


	)

137 
	gãm∂©e
 <
ty≥«me
 
	gT
>

138 
	sis_a_hñ≥r


140 
	mãm∂©e
 <
ty≥«me
 
	mU
>

141 
ölöe
 
boﬁ
 
ã°
 (
U
 *
p
);

142 
	mãm∂©e
 <
ty≥«me
 
	mU
>

143 
ölöe
 
T
 *
ˇ°
 (
U
 *
p
);

155 
	gãm∂©e
 <
ty≥«me
 
	gT
>

156 
	gãm∂©e
 <
ty≥«me
 
	gU
>

157 
ölöe
 
T
 *

158 
	gis_a_hñ≥r
 <
	gT
>::
	$ˇ°
 (
U
 *
p
)

160  
ªöãΩªt_ˇ°
 <
T
 *> (
p
);

161 
	}
}

170 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

171 
ölöe
 
boﬁ


172 
	$is_a
 (
U
 *
p
)

174  
is_a_hñ≥r
<
T
>::
	`ã°
 (
p
);

175 
	}
}

180 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

181 
ölöe
 
T
 *

182 
	$as_a
 (
U
 *
p
)

184 
	`gcc_checkög_as£π
 (
is_a
 <
T
> (
p
));

185  
is_a_hñ≥r
 <
T
>::
	`ˇ°
 (
p
);

186 
	}
}

191 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

192 
ölöe
 
T
 *

193 
	$dyn_ˇ°
 (
U
 *
p
)

195 i‡(
is_a
 <
T
> (
p
))

196  
is_a_hñ≥r
 <
T
>::
	`ˇ°
 (
p
);

198  
°©ic_ˇ°
 <
T
 *> (0);

199 
	}
}

	@include/langhooks.h

20 #i‚de‡
GCC_LANG_HOOKS_H


21 
	#GCC_LANG_HOOKS_H


	)

25 
	gdügno°ic_öfo
;

27 
	ggim∂ify_omp_˘x
;

29 
	g¨øy_des¸_öfo
;

32 (*
	tœng_¥öt_åì_hook
Ë(
	tFILE
 *, 
	tåì
, 
	tödít
);

34 
	e˛assify_ªc‹d


35 { 
RECORD_IS_STRUCT
, 
RECORD_IS_CLASS
, 
RECORD_IS_INTERFACE
 };

40 
	sœng_hooks_f‹_åì_ölöög


42 
	`boﬁ
 (*
v¨_mod_ty≥_p
Ë(
åì
,Åree);

47 
	sœng_hooks_f‹_åì_dump


51 
	`boﬁ
 (*
dump_åì
Ë(*, 
åì
);

54 (*
ty≥_quÆs
Ë(
c⁄°_åì
);

59 
	sœng_hooks_f‹_ty≥s


63 
	`åì
 (*
make_ty≥
Ë(
åì_code
);

68 
	`˛assify_ªc‹d
 (*
˛assify_ªc‹d
Ë(
åì
);

72 
	`åì
 (*
ty≥_f‹_mode
Ë(
machöe_mode
, );

76 
	`åì
 (*
ty≥_f‹_size
) (, );

80 
	`boﬁ
 (*
gíîic_p
Ë(
c⁄°_åì
);

83 
	`åì
 (*
gë_¨gumít_∑ck_ñems
Ë(
c⁄°_åì
);

89 
	`åì
 (*
ty≥_¥omŸes_to
Ë(
åì
);

98 (*
ªgi°î_buûtö_ty≥
Ë(
åì
, const *);

104 (*
öcom∂ëe_ty≥_îr‹
Ë(
c⁄°_åì
 
vÆue
, c⁄°_åì 
ty≥
);

108 
	`åì
 (*
max_size
Ë(
c⁄°_åì
);

112 (*
omp_fú°¥iv©ize_ty≥_sizes
Ë(
gim∂ify_omp_˘x
 *, 
åì
);

115 
	`boﬁ
 (*
omp_m≠∑bÀ_ty≥
Ë(
åì
 
ty≥
);

121 
	`boﬁ
 (*
ty≥_hash_eq
Ë(
c⁄°_åì
, const_tree);

125 
	`boﬁ
 (*
gë_¨øy_des¸_öfo
Ë(
c⁄°_åì
, 
¨øy_des¸_öfo
 *);

128 (*
gë_subønge_bounds
Ë(
c⁄°_åì
, 
åì
 *,Åree *);

133 
	`åì
 (*
des¸ùtive_ty≥
Ë(
c⁄°_åì
);

139 
	`åì
 (*
ªc⁄°ru˘_com∂ex_ty≥
Ë(
åì
,Åree);

144 
	sœng_hooks_f‹_de˛s


149 
	`boﬁ
 (*
globÆ_bödögs_p
) ();

155 
	`åì
 (*
pushde˛
Ë(
åì
);

158 
	`åì
 (*
gëde˛s
) ();

161 
	`boﬁ
 (*
fun˘i⁄_de˛_ex∂icô_p
Ë(
åì
);

165 
	`boﬁ
 (*
gíîic_gíîic_∑ømëî_de˛_p
Ë(
c⁄°_åì
);

169 
	`boﬁ
 (*
fun˘i⁄_∑rm_ex∑nded_‰om_∑ck_p
Ë(
åì
,Åree);

172 
	`åì
 (*
gë_gíîic_fun˘i⁄_de˛
Ë(
c⁄°_åì
);

176 
	`boﬁ
 (*
w¨n_unu£d_globÆ
Ë(
c⁄°_åì
);

180 (*
föÆ_wrôe_globÆs
) ();

183 
	`boﬁ
 (*
ok_f‹_sibˇŒ
Ë(
c⁄°_åì
);

187 
	`boﬁ
 (*
omp_¥iv©ize_by_ª„ªn˚
Ë(
c⁄°_åì
);

191 
	`omp_˛au£_deÁu…_köd
 (*
omp_¥edëîmöed_sh¨ög
Ë(
åì
);

195 
	`åì
 (*
omp_ªp‹t_de˛
Ë(
åì
);

201 
	`boﬁ
 (*
omp_di§eg¨d_vÆue_ex¥
Ë(
åì
, 
boﬁ
);

205 
	`boﬁ
 (*
omp_¥iv©e_debug_˛au£
Ë(
åì
, 
boﬁ
);

209 
	`boﬁ
 (*
omp_¥iv©e_ouãr_ªf
Ë(
åì
);

214 
	`åì
 (*
omp_˛au£_deÁu…_˘‹
Ë(
åì
 
˛au£
,Åªê
de˛
,Åªê
ouãr
);

217 
	`åì
 (*
omp_˛au£_c›y_˘‹
Ë(
åì
 
˛au£
,Åªê
d°
,Åªê
§c
);

220 
	`åì
 (*
omp_˛au£_assign_›
Ë(
åì
 
˛au£
,Åªê
d°
,Åªê
§c
);

224 
	`åì
 (*
omp_˛au£_löór_˘‹
Ë(
åì
 
˛au£
,Åªê
d°
,Åªê
§c
,Åªê
add
);

228 
	`åì
 (*
omp_˛au£_dt‹
Ë(
åì
 
˛au£
,Åªê
de˛
);

231 (*
omp_föish_˛au£
Ë(
åì
 
˛au£
, 
gim∂e_£q
 *
¥e_p
);

236 
	sœng_hooks_f‹_…o


239 (*
begö_£˘i⁄
Ë(c⁄° *
«me
);

245 (*
≠≥nd_d©a
Ë(c⁄° *
d©a
, 
size_t
 
Àn
, *
block
);

248 (*
íd_£˘i⁄
) ();

253 
	sœng_hooks


256 c⁄° *
«me
;

260 
size_t
 
idítifõr_size
;

263 (*
‰ì_œng_d©a
Ë(
åì
);

269 
	`size_t
 (*
åì_size
Ë(
åì_code
);

273 (*
›ti⁄_œng_mask
) ();

276 (*
öô_›ti⁄s_°ru˘
Ë(
gcc_›ti⁄s
 *
›ts
);

281 (*
öô_›ti⁄s
Ë(
decoded_›ti⁄s_cou¡
,

282 
˛_decoded_›ti⁄
 *
decoded_›ti⁄s
);

286 (*
öôülize_dügno°ics
Ë(
dügno°ic_c⁄ãxt
 *);

291 
	`boﬁ
 (*
com∂aö_wr⁄g_œng_p
Ë(c⁄° 
˛_›ti⁄
 *
›ti⁄
);

303 
	`boﬁ
 (*
h™dÀ_›ti⁄
Ë(
size_t
 
code
, c⁄° *
¨g
, 
vÆue
, 
köd
,

304 
loˇti⁄_t
 
loc
,

305 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
);

315 
	`boﬁ
 (*
po°_›ti⁄s
) (const **);

320 
	`boﬁ
 (*
öô
) ();

323 (*
föish
) ();

326 (*
∑r£_fûe
) ();

329 
	`boﬁ
 (*
missög_n‹ëu∫_ok_p
Ë(
åì
);

333 
	`Æüs_£t_ty≥
 (*
gë_Æüs_£t
Ë(
åì
);

337 (*
föish_öcom∂ëe_de˛
Ë(
åì
);

341 (*
dup_œng_•ecific_de˛
Ë(
åì
);

348 (*
£t_de˛_as£mbÀr_«me
Ë(
åì
);

352 (*
¥öt_°©i°ics
) ();

356 
œng_¥öt_åì_hook
 
¥öt_xnode
;

360 
œng_¥öt_åì_hook
 
¥öt_de˛
;

361 
œng_¥öt_åì_hook
 
¥öt_ty≥
;

362 
œng_¥öt_åì_hook
 
¥öt_idítifõr
;

373 c⁄° *(*
de˛_¥öèbÀ_«me
Ë(
åì
 
de˛
, 
vîbosôy
);

378 c⁄° *(*
dw¨f_«me
Ë(
åì
, 
vîbosôy
);

383 (*
ty≥s_com∑tibÀ_p
Ë(
åì
 
x
,Åªê
y
);

386 (*
¥öt_îr‹_fun˘i⁄
Ë(
dügno°ic_c⁄ãxt
 *, const *,

387 
dügno°ic_öfo
 *);

396 
	`HOST_WIDE_INT
 (*
to_èrgë_ch¨£t
Ë(
HOST_WIDE_INT
);

403 c⁄° 
©åibuã_•ec
 *
©åibuã_èbÀ
;

404 c⁄° 
©åibuã_•ec
 *
comm⁄_©åibuã_èbÀ
;

405 c⁄° 
©åibuã_•ec
 *
f‹m©_©åibuã_èbÀ
;

407 
œng_hooks_f‹_åì_ölöög
 
åì_ölöög
;

409 
œng_hooks_f‹_åì_dump
 
åì_dump
;

411 
œng_hooks_f‹_de˛s
 
de˛s
;

413 
œng_hooks_f‹_ty≥s
 
ty≥s
;

415 
œng_hooks_f‹_…o
 
…o
;

421 
	`åì
 (*
gë_ö√rmo°_gíîic_∑rms
Ë(
c⁄°_åì
);

425 
	`åì
 (*
gë_ö√rmo°_gíîic_¨gs
Ë(
c⁄°_åì
);

428 
	`boﬁ
 (*
fun˘i⁄_∑ømëî_∑ck_p
Ë(
c⁄°_åì
);

432 (*
gim∂ify_ex¥
Ë(
åì
 *, 
gim∂e_£q
 *, gimple_seq *);

435 
	`åì
 (*
buûtö_fun˘i⁄
Ë(
åì
 
de˛
);

443 
	`åì
 (*
buûtö_fun˘i⁄_ext_sc›e
Ë(
åì
 
de˛
);

446 (*
öô_ts
) ();

451 
	`åì
 (*
ex¥_to_de˛
Ë(
åì
 
ex¥
, 
boﬁ
 *
tc
, boﬁ *
£
);

454 
	`åì
 (*
eh_≥rs⁄Æôy
) ();

457 
	`åì
 (*
eh_ru¡ime_ty≥
Ë(
åì
);

465 
	`åì
 (*
eh_¥Ÿe˘_˛ónup_a˘i⁄s
) ();

469 
	`boﬁ
 (*
block_may_ÁŒthru
Ë(
c⁄°_åì
);

473 
boﬁ
 
eh_u£_cxa_íd_˛ónup
;

477 
boﬁ
 
dìp_unsh¨ög
;

484 
œng_hooks
Üang_hooks;

486 
åì
 
	`add_buûtö_fun˘i⁄
 (c⁄° *
«me
,Åªê
ty≥
,

487 
fun˘i⁄_code
, 
buût_ö_˛ass
 
˛
,

488 c⁄° *
libøry_«me
,

489 
åì
 
©ås
);

491 
åì
 
	`add_buûtö_fun˘i⁄_ext_sc›e
 (c⁄° *
«me
,Åªê
ty≥
,

492 
fun˘i⁄_code
,

493 
buût_ö_˛ass
 
˛
,

494 c⁄° *
libøry_«me
,

495 
åì
 
©ås
);

496 
åì
 
	`add_buûtö_ty≥
 (c⁄° *
«me
,Åªê
ty≥
);

	@include/libiberty.h

36 #i‚de‡
LIBIBERTY_H


37 
	#LIBIBERTY_H


	)

39 #ifde‡
__˝lu•lus


43 
	~"™side˛.h
"

46 
	~<°ddef.h
>

48 
	~<°d¨g.h
>

50 
	~<°dio.h
>

56 
u∆ock_°ªam
 (
FILE
 *);

62 
u∆ock_°d_°ªams
 ();

68 
FILE
 *
f›í_u∆ocked
 (const *, const *);

69 
FILE
 *
fd›í_u∆ocked
 (, const *);

70 
FILE
 *
‰e›í_u∆ocked
 (const *, const *, FILE *);

75 **
buûd¨gv
 (c⁄° *Ë
ATTRIBUTE_MALLOC
;

79 
‰ì¨gv
 (**);

84 **
du∑rgv
 (**Ë
ATTRIBUTE_MALLOC
;

88 
ex∑nd¨gv
 (*, ***);

92 
wrôórgv
 (**, 
FILE
 *);

96 
cou¡¨gv
 (**);

108 #i‡!
HAVE_DECL_BASENAME


109 #i‡
deföed
 (
__GNU_LIBRARY__
 ) || deföed (
__löux__
Ë|| deföed (
__FªeBSD__
Ë|| deföed (
__O≥nBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed (
__CYGWIN__
Ë|| deföed (
__CYGWIN32__
Ë|| deföed (
__MINGW32__
Ë|| deföed (
HAVE_DECL_BASENAME
)

110 *
ba£«me
 (c⁄° *Ë
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_NONNULL
(1);

115 
	#ba£«me
 
ba£«me_ˇ¬Ÿ_be_u£d_wôhout_a_¥ŸŸy≥


	)

121 c⁄° *
lba£«me
 (c⁄° *Ë
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_NONNULL
(1);

126 c⁄° *
dos_lba£«me
 (c⁄° *Ë
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_NONNULL
(1);

132 c⁄° *
unix_lba£«me
 (c⁄° *Ë
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_NONNULL
(1);

136 *
ÃóÕ©h
 (const *);

142 *
c⁄ˇt
 (c⁄° *, ...Ë
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_SENTINEL
;

151 *
ªc⁄ˇt
 (*, c⁄° *, ...Ë
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_SENTINEL
;

157 
c⁄ˇt_Àngth
 (c⁄° *, ...Ë
ATTRIBUTE_SENTINEL
;

164 *
c⁄ˇt_c›y
 (*, c⁄° *, ...Ë
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_NONNULL
(1Ë
ATTRIBUTE_SENTINEL
;

171 *
c⁄ˇt_c›y2
 (c⁄° *, ...Ë
ATTRIBUTE_RETURNS_NONNULL
 
ATTRIBUTE_SENTINEL
;

175 *
libibîty_c⁄ˇt_±r
;

181 
	#ACONCAT
(
ACONCAT_PARAMS
) \

182 (
libibîty_c⁄ˇt_±r
 = (*Ë
	`Æloˇ
 (
c⁄ˇt_Àngth
 
ACONCAT_PARAMS
 + 1), \

183 
c⁄ˇt_c›y2
 
ACONCAT_PARAMS
)

	)

187 
fdm©ch
 (
fd1
, 
fd2
);

192 #i‡
deföed
 (
HAVE_DECL_FFS
) && !HAVE_DECL_FFS

193 
ffs
();

199 * 
gëpwd
 ();

204 #ifde‡
__MINGW32__


206 
	gtimevÆ
;

207 
gëtimeofday
 (
timevÆ
 *, *);

212 
gë_run_time
 ();

217 *
make_ªœtive_¥efix
 (const *, const *,

218 c⁄° *Ë
ATTRIBUTE_MALLOC
;

224 *
make_ªœtive_¥efix_ign‹e_löks
 (const *, const *,

225 c⁄° *Ë
ATTRIBUTE_MALLOC
;

229 *
choo£_ãmp_ba£
 (Ë
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
;

233 *
make_ãmp_fûe
 (c⁄° *Ë
ATTRIBUTE_MALLOC
;

237 
u∆ök_if_‹dö¨y
 (const *);

241 c⁄° *
•a˚s
 (
cou¡
);

246 
î∫o_max
 ();

251 c⁄° *
°ªºno
 ();

255 
°π€ºno
 (const *);

259 *
x°ªº‹
 (Ë
ATTRIBUTE_RETURNS_NONNULL
;

264 
signo_max
 ();

276 c⁄° *
°rsigno
 ();

280 
°πosigno
 (const *);

284 
x©exô
 ((*
‚
) ());

288 
xexô
 (
°©us
Ë
ATTRIBUTE_NORETURN
;

292 
xmÆloc_£t_¥ogøm_«me
 (const *);

295 
xmÆloc_Áûed
 (
size_t
Ë
ATTRIBUTE_NORETURN
;

301 *
xmÆloc
 (
size_t
Ë
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
;

307 *
xªÆloc
 (*, 
size_t
Ë
ATTRIBUTE_RETURNS_NONNULL
;

312 *
xˇŒoc
 (
size_t
, size_tË
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
;

316 *
x°rdup
 (c⁄° *Ë
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
;

320 *
x°∫dup
 (c⁄° *, 
size_t
Ë
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
;

324 *
xmemdup
 (c⁄° *, 
size_t
, size_tË
ATTRIBUTE_MALLOC
 
ATTRIBUTE_RETURNS_NONNULL
;

327 
physmem_tŸÆ
 ();

328 
physmem_avaûabÀ
 ();

331 
x¸c32
 (const *, , );

341 
	#XALLOCA
(
T
Ë((T *Ë
	`Æloˇ
 ( (T)))

	)

342 
	#XNEW
(
T
Ë((T *Ë
	`xmÆloc
 ( (T)))

	)

343 
	#XCNEW
(
T
Ë((T *Ë
	`xˇŒoc
 (1,  (T)))

	)

344 
	#XDUP
(
T
, 
P
Ë((T *Ë
	`xmemdup
 ((P),  (T),  (T)))

	)

345 
	#XDELETE
(
P
Ë
	`‰ì
 ((*Ë(P))

	)

349 
	#XALLOCAVEC
(
T
, 
N
Ë((T *Ë
	`Æloˇ
 ( (TË* (N)))

	)

350 
	#XNEWVEC
(
T
, 
N
Ë((T *Ë
	`xmÆloc
 ( (TË* (N)))

	)

351 
	#XCNEWVEC
(
T
, 
N
Ë((T *Ë
	`xˇŒoc
 ((N),  (T)))

	)

352 
	#XDUPVEC
(
T
, 
P
, 
N
Ë((T *Ë
	`xmemdup
 ((P),  (TË* (N),  (TË* (N)))

	)

353 
	#XRESIZEVEC
(
T
, 
P
, 
N
Ë((T *Ë
	`xªÆloc
 ((*Ë(P),  (TË* (N)))

	)

354 
	#XDELETEVEC
(
P
Ë
	`‰ì
 ((*Ë(P))

	)

358 
	#XALLOCAVAR
(
T
, 
S
Ë((T *Ë
	`Æloˇ
 ((S)))

	)

359 
	#XNEWVAR
(
T
, 
S
Ë((T *Ë
	`xmÆloc
 ((S)))

	)

360 
	#XCNEWVAR
(
T
, 
S
Ë((T *Ë
	`xˇŒoc
 (1, (S)))

	)

361 
	#XDUPVAR
(
T
, 
P
, 
S1
, 
S2
Ë((T *Ë
	`xmemdup
 ((P), (S1), (S2)))

	)

362 
	#XRESIZEVAR
(
T
, 
P
, 
S
Ë((T *Ë
	`xªÆloc
 ((P), (S)))

	)

366 
	#XOBNEW
(
O
, 
T
Ë((T *Ë
	`ob°ack_Æloc
 ((O),  (T)))

	)

367 
	#XOBNEWVEC
(
O
, 
T
, 
N
Ë((T *Ë
	`ob°ack_Æloc
 ((O),  (TË* (N)))

	)

368 
	#XOBNEWVAR
(
O
, 
T
, 
S
Ë((T *Ë
	`ob°ack_Æloc
 ((O), (S)))

	)

369 
	#XOBFINISH
(
O
, 
T
Ë((TË
	`ob°ack_föish
 ((O)))

	)

373 
	#_hex_¨øy_size
 256

	)

374 
	#_hex_bad
 99

	)

375 c⁄° 
_hex_vÆue
[
_hex_¨øy_size
];

376 
hex_öô
 ();

377 
	#hex_p
(
c
Ë(
	`hex_vÆue
 (cË!
_hex_bad
)

	)

380 
	#hex_vÆue
(
c
Ë((Ë
_hex_vÆue
[(Ë(c)])

	)

385 
	#PEX_RECORD_TIMES
 0x1

	)

388 
	#PEX_USE_PIPES
 0x2

	)

391 
	#PEX_SAVE_TEMPS
 0x4

	)

401 
≥x_obj
 *
≥x_öô
 (
Êags
, c⁄° *
≤ame
,

402 c⁄° *
ãmpba£
Ë
ATTRIBUTE_RETURNS_NONNULL
;

411 
	#PEX_LAST
 0x1

	)

414 
	#PEX_SEARCH
 0x2

	)

417 
	#PEX_SUFFIX
 0x4

	)

420 
	#PEX_STDERR_TO_STDOUT
 0x8

	)

424 
	#PEX_BINARY_INPUT
 0x10

	)

431 
	#PEX_BINARY_OUTPUT
 0x20

	)

439 
	#PEX_STDERR_TO_PIPE
 0x40

	)

443 
	#PEX_BINARY_ERROR
 0x80

	)

496 c⁄° *
≥x_run
 (
≥x_obj
 *
obj
, 
Êags
,

497 c⁄° *
execuèbÀ
, * c⁄° *
¨gv
,

498 c⁄° *
ouäame
, c⁄° *
î∫ame
,

499 *
îr
);

511 c⁄° *
≥x_run_ö_ívú⁄mít
 (
≥x_obj
 *
obj
, 
Êags
,

512 c⁄° *
execuèbÀ
,

513 * c⁄° *
¨gv
,

514 * c⁄° *
ív
,

515 c⁄° *
ouäame
,

516 c⁄° *
î∫ame
, *
îr
);

522 
FILE
 *
≥x_öput_fûe
 (
≥x_obj
 *
obj
, 
Êags
,

523 c⁄° *
ö_«me
);

530 
FILE
 *
≥x_öput_pùe
 (
≥x_obj
 *
obj
, 
bö¨y
);

538 
FILE
 *
≥x_ªad_ouçut
 (
≥x_obj
 *, 
bö¨y
);

546 
FILE
 *
≥x_ªad_îr
 (
≥x_obj
 *, 
bö¨y
);

552 
≥x_gë_°©us
 (
≥x_obj
 *, 
cou¡
, *
ve˘‹
);

559 
	s≥x_time


561 
	gu£r_£c⁄ds
;

562 
	gu£r_mi¸o£c⁄ds
;

563 
	gsy°em_£c⁄ds
;

564 
	gsy°em_mi¸o£c⁄ds
;

567 
≥x_gë_times
 (
≥x_obj
 *, 
cou¡
,

568 
≥x_time
 *
ve˘‹
);

573 
≥x_‰ì
 (
≥x_obj
 *);

586 c⁄° *
≥x_⁄e
 (
Êags
, c⁄° *
execuèbÀ
,

587 * c⁄° *
¨gv
, c⁄° *
≤ame
,

588 c⁄° *
ouäame
, c⁄° *
î∫ame
,

589 *
°©us
, *
îr
);

597 
	#PEXECUTE_FIRST
 1

	)

598 
	#PEXECUTE_LAST
 2

	)

599 
	#PEXECUTE_ONE
 (
PEXECUTE_FIRST
 + 
PEXECUTE_LAST
)

	)

600 
	#PEXECUTE_SEARCH
 4

	)

601 
	#PEXECUTE_VERBOSE
 8

	)

605 
≥xecuã
 (const *, * const *, const *,

610 
pwaô
 (, *, );

612 #i‡!
HAVE_DECL_ASPRINTF


616 
a•rötf
 (**, c⁄° *, ...Ë
ATTRIBUTE_PRINTF_2
;

619 #i‡!
HAVE_DECL_VASPRINTF


623 
va•rötf
 (**, c⁄° *, 
va_li°
Ë
ATTRIBUTE_PRINTF
(2,0);

626 #i‡
deföed
(
HAVE_DECL_SNPRINTF
) && !HAVE_DECL_SNPRINTF

628 
¢¥ötf
 (*, 
size_t
, c⁄° *, ...Ë
ATTRIBUTE_PRINTF_3
;

631 #i‡
deföed
(
HAVE_DECL_VSNPRINTF
) && !HAVE_DECL_VSNPRINTF

633 
v¢¥ötf
 (*, 
size_t
, c⁄° *, 
va_li°
Ë
ATTRIBUTE_PRINTF
(3,0);

636 #i‡
deföed
(
HAVE_DECL_STRVERSCMP
) && !HAVE_DECL_STRVERSCMP

638 
°rvîscmp
 (const *, const *);

642 
£çro˘ôÀ
 (c⁄° *
«me
, ...);

645 
°ack_limô_ö¸ó£
 ();

647 
	#ARRAY_SIZE
(
a
Ë( (aË/  (◊)[0]))

	)

655 *
C_Æloˇ
 (
size_t
Ë
ATTRIBUTE_MALLOC
;

656 #unde‡
Æloˇ


657 #i‡
GCC_VERSION
 >2000 && !
deföed
 
USE_C_ALLOCA


658 
	#Æloˇ
(
x
Ë
	`__buûtö_Æloˇ
(x)

	)

659 #unde‡
C_ALLOCA


660 
	#ASTRDUP
(
X
) \

661 (
	`__exãnsi⁄__
 ({ c⁄° *c⁄° 
libibîty_›å
 = (
X
); \

662 c⁄° 
libibîty_Àn
 = 
	`°æí
 (
libibîty_›å
) + 1; \

663 *c⁄° 
libibîty_≈å
 = (*c⁄°Ë
	`Æloˇ
 (
libibîty_Àn
); \

664 (*Ë
	`mem˝y
 (
libibîty_≈å
, 
libibîty_›å
, 
libibîty_Àn
); }))

	)

666 
	#Æloˇ
(
x
Ë
	`C_Æloˇ
(x)

	)

667 #unde‡
USE_C_ALLOCA


668 
	#USE_C_ALLOCA
 1

	)

669 #unde‡
C_ALLOCA


670 
	#C_ALLOCA
 1

	)

671 c⁄° *
libibîty_›å
;

672 *
libibîty_≈å
;

673 
libibîty_Àn
;

674 
	#ASTRDUP
(
X
) \

675 (
libibîty_›å
 = (
X
), \

676 
libibîty_Àn
 = 
	`°æí
 (
libibîty_›å
) + 1, \

677 
libibîty_≈å
 = (*Ë
	`Æloˇ
 (
libibîty_Àn
), \

678 (*Ë
	`mem˝y
 (
libibîty_≈å
, 
libibîty_›å
, 
libibîty_Àn
))

	)

681 #ifde‡
__˝lu•lus


	@include/line-map.h

22 #i‚de‡
LIBCPP_LINE_MAP_H


23 
	#LIBCPP_LINE_MAP_H


	)

25 #i‚de‡
GTY


26 
	#GTY
(
x
Ë

	)

36 
	elc_ªas⁄


38 
	mLC_ENTER
 = 0,

39 
	mLC_LEAVE
,

40 
	mLC_RENAME
,

41 
	mLC_RENAME_VERBATIM
,

42 
	mLC_ENTER_MACRO


47 
	tlöíum_ty≥
;

50 
	tsour˚_loˇti⁄
;

53 *(*
	tlöe_m≠_ªÆloc
Ë(*, 
	tsize_t
);

57 
	$size_t
 (*
	tlöe_m≠_round_Æloc_size_func
Ë(
	tsize_t
);

70 
	`GTY
(()Ë
löe_m≠_‹dö¨y
 {

71 c⁄° *
to_fûe
;

72 
löíum_ty≥
 
to_löe
;

77 
ö˛uded_‰om
;

83 
sy•
;

86 
cﬁumn_bôs
 : 8;

87 
	}
};

91 
	#MAX_SOURCE_LOCATION
 0x7FFFFFFF

	)

93 
	g˝p_hashnode
;

104 
GTY
(()Ë
	glöe_m≠_ma¸o
 {

106 
˝p_hashnode
 * 
GTY
 ((
√°ed_±r
 (
åì_node
,

109 
	gma¸o
;

112 
	gn_tokís
;

167 
sour˚_loˇti⁄
 * 
GTY
((
©omic
)Ë
	gma¸o_loˇti⁄s
;

174 
sour˚_loˇti⁄
 
	gex∑nsi⁄
;

203 
GTY
(()Ë
	glöe_m≠
 {

204 
sour˚_loˇti⁄
 
	g°¨t_loˇti⁄
;

207 
ENUM_BITFIELD
 (
lc_ªas⁄
Ë
	gªas⁄
 : 
CHAR_BIT
;

209 
	um≠_u
 {

210 
löe_m≠_‹dö¨y
 
GTY
((
èg
 ("0"))Ë
	g‹dö¨y
;

211 
löe_m≠_ma¸o
 
GTY
((
èg
 ("1"))Ë
	gma¸o
;

212 } 
GTY
((
desc
 ("%1.ªas⁄ =LC_ENTER_MACRO"))Ë
	gd
;

215 
	#MAP_START_LOCATION
(
MAP
Ë(MAP)->
°¨t_loˇti⁄


	)

217 
	#ORDINARY_MAP_FILE_NAME
(
MAP
) \

218 
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
to_fûe


	)

220 
	#ORDINARY_MAP_STARTING_LINE_NUMBER
(
MAP
) \

221 
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
to_löe


	)

223 
	#ORDINARY_MAP_INCLUDER_FILE_INDEX
(
MAP
) \

224 
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
ö˛uded_‰om


	)

226 
	#ORDINARY_MAP_IN_SYSTEM_HEADER_P
(
MAP
) \

227 
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
sy•


	)

229 
	#ORDINARY_MAP_NUMBER_OF_COLUMN_BITS
(
MAP
) \

230 
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
cﬁumn_bôs


	)

232 
	#MACRO_MAP_MACRO
(
MAP
Ë(MAP)->
d
.
ma¸o
.
	)
macro

234 
	#MACRO_MAP_NUM_MACRO_TOKENS
(
MAP
Ë(MAP)->
d
.
ma¸o
.
n_tokís


	)

236 
	#MACRO_MAP_LOCATIONS
(
MAP
Ë(MAP)->
d
.
ma¸o
.
ma¸o_loˇti⁄s


	)

238 
	#MACRO_MAP_EXPANSION_POINT_LOCATION
(
MAP
Ë(MAP)->
d
.
ma¸o
.
ex∑nsi⁄


	)

243 
GTY
(()Ë
	gm≠s_öfo
 {

249 
löe_m≠
 * 
GTY
 ((
Àngth
 ("%h.u£d"))Ë
	gm≠s
;

252 
	gÆloˇãd
;

256 
	gu£d
;

258 
	gˇche
;

262 
GTY
(()Ë
	gloˇti⁄_adhoc_d©a
 {

263 
sour˚_loˇti⁄
 
	glocus
;

264 * 
GTY
((
skù
)Ë
	gd©a
;

267 
	ghèb
;

279 
GTY
(()Ë
	gloˇti⁄_adhoc_d©a_m≠
 {

280 
hèb
 * 
GTY
((
skù
)Ë
	ghèb
;

281 
sour˚_loˇti⁄
 
	gcuº_loc
;

282 
	gÆloˇãd
;

283 
loˇti⁄_adhoc_d©a
 
GTY
((
Àngth
 ("%h.Æloˇãd"))Ë*
	gd©a
;

287 
GTY
(()Ë
	glöe_m≠s
 {

289 
m≠s_öfo
 
	göfo_‹dö¨y
;

291 
m≠s_öfo
 
	göfo_ma¸o
;

294 
	gdïth
;

297 
boﬁ
 
	gåa˚_ö˛udes
;

300 
sour˚_loˇti⁄
 
	ghighe°_loˇti⁄
;

303 
sour˚_loˇti⁄
 
	ghighe°_löe
;

307 
	gmax_cﬁumn_höt
;

311 
löe_m≠_ªÆloc
 
	gªÆloˇt‹
;

315 
löe_m≠_round_Æloc_size_func
 
	ground_Æloc_size
;

317 
loˇti⁄_adhoc_d©a_m≠
 
	gloˇti⁄_adhoc_d©a_m≠
;

323 
	#LINEMAPS_MAP_INFO
(
SET
, 
MACRO_MAP_P
) \

324 ((
MACRO_MAP_P
) \

325 ? &((
SET
)->
öfo_ma¸o
) \

326 : &((
SET
)->
öfo_‹dö¨y
))

	)

331 
	#LINEMAPS_MAPS
(
SET
, 
MAP_KIND
) \

332 (
	`LINEMAPS_MAP_INFO
 (
SET
, 
MAP_KIND
))->
m≠s


	)

336 
	#LINEMAPS_ALLOCATED
(
SET
, 
MAP_KIND
) \

337 (
	`LINEMAPS_MAP_INFO
 (
SET
, 
MAP_KIND
))->
Æloˇãd


	)

341 
	#LINEMAPS_USED
(
SET
, 
MAP_KIND
) \

342 (
	`LINEMAPS_MAP_INFO
 (
SET
, 
MAP_KIND
))->
u£d


	)

347 
	#LINEMAPS_CACHE
(
SET
, 
MAP_KIND
) \

348 (
	`LINEMAPS_MAP_INFO
 (
SET
, 
MAP_KIND
))->
ˇche


	)

351 
	#LINEMAPS_MAP_AT
(
SET
, 
MAP_KIND
, 
INDEX
) \

352 (&((
	`LINEMAPS_MAPS
 (
SET
, 
MAP_KIND
))[(
INDEX
)]))

	)

357 
	#LINEMAPS_LAST_MAP
(
SET
, 
MAP_KIND
) \

358 
	`LINEMAPS_MAP_AT
 (
SET
, 
MAP_KIND
, (
	`LINEMAPS_USED
 (SET, MAP_KINDË- 1))

	)

363 
	#LINEMAPS_LAST_ALLOCATED_MAP
(
SET
, 
MAP_KIND
) \

364 
	`LINEMAPS_MAP_AT
 (
SET
, 
MAP_KIND
, 
	`LINEMAPS_ALLOCATED
 (SET, MAP_KINDË- 1)

	)

368 
	#LINEMAPS_ORDINARY_MAPS
(
SET
) \

369 
	`LINEMAPS_MAPS
 (
SET
, 
Ál£
)

	)

372 
	#LINEMAPS_ORDINARY_MAP_AT
(
SET
, 
INDEX
) \

373 
	`LINEMAPS_MAP_AT
 (
SET
, 
Ál£
, 
INDEX
)

	)

377 
	#LINEMAPS_ORDINARY_ALLOCATED
(
SET
) \

378 
	`LINEMAPS_ALLOCATED
(
SET
, 
Ál£
)

	)

381 
	#LINEMAPS_ORDINARY_USED
(
SET
) \

382 
	`LINEMAPS_USED
(
SET
, 
Ál£
)

	)

386 
	#LINEMAPS_ORDINARY_CACHE
(
SET
) \

387 
	`LINEMAPS_CACHE
(
SET
, 
Ál£
)

	)

391 
	#LINEMAPS_LAST_ORDINARY_MAP
(
SET
) \

392 
	`LINEMAPS_LAST_MAP
(
SET
, 
Ál£
)

	)

396 
	#LINEMAPS_LAST_ALLOCATED_ORDINARY_MAP
(
SET
) \

397 
	`LINEMAPS_LAST_ALLOCATED_MAP
(
SET
, 
Ál£
)

	)

401 
	#LINEMAPS_MACRO_MAPS
(
SET
) \

402 
	`LINEMAPS_MAPS
(
SET
, 
åue
)

	)

405 
	#LINEMAPS_MACRO_MAP_AT
(
SET
, 
INDEX
) \

406 
	`LINEMAPS_MAP_AT
 (
SET
, 
åue
, 
INDEX
)

	)

410 
	#LINEMAPS_MACRO_ALLOCATED
(
SET
) \

411 
	`LINEMAPS_ALLOCATED
(
SET
, 
åue
)

	)

414 
	#LINEMAPS_MACRO_USED
(
SET
) \

415 
	`LINEMAPS_USED
(
SET
, 
åue
)

	)

419 
	#LINEMAPS_MACRO_CACHE
(
SET
) \

420 
	`LINEMAPS_CACHE
(
SET
, 
åue
)

	)

424 
	#LINEMAPS_MACRO_LOWEST_LOCATION
(
SET
) \

425 (
	`LINEMAPS_MACRO_USED
 (
£t
) \

426 ? 
	`MAP_START_LOCATION
 (
	`LINEMAPS_LAST_MACRO_MAP
 (
£t
)) \

427 : 
MAX_SOURCE_LOCATION
)

	)

430 
	#LINEMAPS_LAST_MACRO_MAP
(
SET
) \

431 
	`LINEMAPS_LAST_MAP
 (
SET
, 
åue
)

	)

434 
	#LINEMAPS_LAST_ALLOCATED_MACRO_MAP
(
SET
) \

435 
	`LINEMAPS_LAST_ALLOCATED_MAP
 (
SET
, 
åue
)

	)

437 
loˇti⁄_adhoc_d©a_föi
 (
löe_m≠s
 *);

438 
sour˚_loˇti⁄
 
gë_comböed_adhoc_loc
 (
löe_m≠s
 *,

439 
sour˚_loˇti⁄
, *);

440 *
gë_d©a_‰om_adhoc_loc
 (
löe_m≠s
 *, 
sour˚_loˇti⁄
);

441 
sour˚_loˇti⁄
 
gë_loˇti⁄_‰om_adhoc_loc
 (
löe_m≠s
 *,

442 
sour˚_loˇti⁄
);

444 
	#IS_ADHOC_LOC
(
LOC
Ë(((LOCË& 
MAX_SOURCE_LOCATION
Ë!(LOC))

	)

445 
	#COMBINE_LOCATION_DATA
(
SET
, 
LOC
, 
BLOCK
) \

446 
	`gë_comböed_adhoc_loc
 ((
SET
), (
LOC
), (
BLOCK
))

	)

448 
ªbuûd_loˇti⁄_adhoc_hèb
 (
löe_m≠s
 *);

451 
löem≠_öô
 (
löe_m≠s
 *);

455 
löem≠_check_fûes_exôed
 (
löe_m≠s
 *);

463 
sour˚_loˇti⁄
 
löem≠_löe_°¨t


464 (
löe_m≠s
 *
£t
, 
löíum_ty≥
 
to_löe
, 
max_cﬁumn_höt
);

479 c⁄° 
löe_m≠
 *
löem≠_add


480 (
löe_m≠s
 *, 
lc_ªas⁄
, 
sy•
,

481 c⁄° *
to_fûe
, 
löíum_ty≥
 
to_löe
);

489 c⁄° 
löe_m≠
 *
löem≠_lookup


490 (
löe_m≠s
 *, 
sour˚_loˇti⁄
);

494 
boﬁ
 
löem≠_åacks_ma¸o_ex∑nsi⁄_locs_p
 (
löe_m≠s
 *);

498 
boﬁ
 
löem≠_ma¸o_ex∑nsi⁄_m≠_p
 (c⁄° 
löe_m≠
 *);

501 c⁄° * 
löem≠_m≠_gë_ma¸o_«me
 (c⁄° 
löe_m≠
*);

512 
löem≠_loˇti⁄_ö_sy°em_hódî_p
 (
löe_m≠s
 *,

513 
sour˚_loˇti⁄
);

518 
boﬁ
 
löem≠_loˇti⁄_‰om_ma¸o_ex∑nsi⁄_p
 (
löe_m≠s
 *,

519 
sour˚_loˇti⁄
);

524 
	#RESERVED_LOCATION_COUNT
 2

	)

527 
	#SOURCE_LINE
(
MAP
, 
LOC
) \

528 (((((
LOC
Ë- 
	`löem≠_check_‹dö¨y
 (
MAP
)->
°¨t_loˇti⁄
) \

529 >> (
MAP
)->
d
.
‹dö¨y
.
cﬁumn_bôs
Ë+ (MAP)->d.‹dö¨y.
to_löe
))

	)

532 
	#SOURCE_COLUMN
(
MAP
, 
LOC
) \

533 ((((
LOC
Ë- 
	`löem≠_check_‹dö¨y
 (
MAP
)->
°¨t_loˇti⁄
) \

534 & ((1 << (
MAP
)->
d
.
‹dö¨y
.
cﬁumn_bôs
Ë- 1)))

	)

539 
	#LAST_SOURCE_LINE
(
MAP
) \

540 
	`SOURCE_LINE
 (
MAP
, 
	`LAST_SOURCE_LINE_LOCATION
 (MAP))

	)

543 
	#LAST_SOURCE_COLUMN
(
MAP
) \

544 
	`SOURCE_COLUMN
 (
MAP
, 
	`LAST_SOURCE_LINE_LOCATION
 (MAP))

	)

548 
	#LAST_SOURCE_LINE_LOCATION
(
MAP
) \

549 ((((
	`löem≠_check_‹dö¨y
 (
MAP
)[1].
°¨t_loˇti⁄
 - 1 \

550 - (
MAP
)->
°¨t_loˇti⁄
) \

551 & ~((1 << (
MAP
)->
d
.
‹dö¨y
.
cﬁumn_bôs
) - 1)) \

552 + (
MAP
)->
°¨t_loˇti⁄
))

	)

557 
	#INCLUDED_FROM
(
SET
, 
MAP
) \

558 ((
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
ö˛uded_‰om
 == -1) \

559 ? 
NULL
 \

560 : (&
	`LINEMAPS_ORDINARY_MAPS
 (
SET
)[(
MAP
)->
d
.
‹dö¨y
.
ö˛uded_‰om
]))

	)

563 
	#MAIN_FILE_P
(
MAP
) \

564 ((
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
ö˛uded_‰om
 < 0))

	)

566 #i‡
deföed
 
ENABLE_CHECKING
 && (
GCC_VERSION
 >= 2007)

569 
	#löem≠_as£π
(
EXPR
) \

571 i‡(! (
EXPR
)) \

572 
	`ab‹t
 (); \

573 } 0)

	)

577 
	#löem≠_check_‹dö¨y
(
LINE_MAP
Ë
__exãnsi⁄__
 \

578 ({
	`löem≠_as£π
 (!
	`löem≠_ma¸o_ex∑nsi⁄_m≠_p
 (
LINE_MAP
)); \

579 (
LINE_MAP
);})

	)

581 
	#löem≠_as£π
(
EXPR
)

	)

582 
	#löem≠_check_‹dö¨y
(
LINE_MAP
Ë(LINE_MAP)

	)

589 
sour˚_loˇti⁄


590 
löem≠_posôi⁄_f‹_cﬁumn
 (
löe_m≠s
 *, );

594 
sour˚_loˇti⁄
 
löem≠_posôi⁄_f‹_löe_™d_cﬁumn
 (
löe_m≠
 *,

595 
löíum_ty≥
,

598 
	#LINEMAP_FILE
(
MAP
) \

599 (
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
to_fûe
)

	)

602 
	#LINEMAP_LINE
(
MAP
) \

603 (
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
to_löe
)

	)

609 
	#LINEMAP_SYSP
(
MAP
) \

610 (
	`löem≠_check_‹dö¨y
 (
MAP
)->
d
.
‹dö¨y
.
sy•
)

	)

616 
löem≠_com∑ª_loˇti⁄s
 (
löe_m≠s
 *
£t
,

617 
sour˚_loˇti⁄
 
¥e
,

618 
sour˚_loˇti⁄
 
po°
);

623 
	#löem≠_loˇti⁄_bef‹e_p
(
SET
, 
LOC_A
, 
LOC_B
) \

624 (
	`löem≠_com∑ª_loˇti⁄s
 ((
SET
), (
LOC_A
), (
LOC_B
)Ë>0)

	)

629 c⁄° *
	mfûe
;

632 
	mlöe
;

634 
	mcﬁumn
;

636 *
	md©a
;

639 
boﬁ
 
	msy•
;

640 } 
	tex∑nded_loˇti⁄
;

645 
	eloˇti⁄_ªsﬁuti⁄_köd


647 
	mLRK_MACRO_EXPANSION_POINT
,

648 
	mLRK_SPELLING_LOCATION
,

649 
	mLRK_MACRO_DEFINITION_LOCATION


700 
sour˚_loˇti⁄
 
löem≠_ªsﬁve_loˇti⁄
 (
löe_m≠s
 *,

701 
sour˚_loˇti⁄
 
loc
,

702 
loˇti⁄_ªsﬁuti⁄_köd
 
Ãk
,

703 c⁄° 
löe_m≠
 **
loc_m≠
);

712 
sour˚_loˇti⁄
 
löem≠_unwöd_tow¨d_ex∑nsi⁄
 (
löe_m≠s
 *,

713 
sour˚_loˇti⁄
 
loc
,

714 c⁄° 
löe_m≠
 **
loc_m≠
);

730 
sour˚_loˇti⁄
 
löem≠_unwöd_to_fú°_n⁄_ª£rved_loc
 (
löe_m≠s
 *,

731 
sour˚_loˇti⁄
 
loc
,

732 c⁄° 
löe_m≠
 **
m≠
);

738 
ex∑nded_loˇti⁄
 
löem≠_ex∑nd_loˇti⁄
 (
löe_m≠s
 *,

739 c⁄° 
löe_m≠
 *,

740 
sour˚_loˇti⁄
 
loc
);

744 
	slöem≠_°©s


746 
	mnum_‹dö¨y_m≠s_Æloˇãd
;

747 
	mnum_‹dö¨y_m≠s_u£d
;

748 
	m‹dö¨y_m≠s_Æloˇãd_size
;

749 
	m‹dö¨y_m≠s_u£d_size
;

750 
	mnum_ex∑nded_ma¸os
;

751 
	mnum_ma¸o_tokís
;

752 
	mnum_ma¸o_m≠s_u£d
;

753 
	mma¸o_m≠s_Æloˇãd_size
;

754 
	mma¸o_m≠s_u£d_size
;

755 
	mma¸o_m≠s_loˇti⁄s_size
;

756 
	mdu∂iˇãd_ma¸o_m≠s_loˇti⁄s_size
;

763 
boﬁ
 
löem≠_gë_fûe_highe°_loˇti⁄
 (
löe_m≠s
 * 
£t
,

764 c⁄° *
fûe_«me
,

765 
sour˚_loˇti⁄
 *
loc
);

769 
löem≠_gë_°©i°ics
 (
löe_m≠s
 *, 
löem≠_°©s
 *);

773 
löem≠_dump_loˇti⁄
 (
löe_m≠s
 *, 
sour˚_loˇti⁄
, 
FILE
 *);

778 
löem≠_dump
 (
FILE
 *, 
löe_m≠s
 *, , 
boﬁ
);

783 
löe_èbÀ_dump
 (
FILE
 *, 
löe_m≠s
 *, , );

	@include/machmode.h

20 #i‚de‡
HAVE_MACHINE_MODES


21 
	#HAVE_MACHINE_MODES


	)

24 
	~"ö¢-modes.h
"

28 c⁄° * c⁄° 
mode_«me
[
NUM_MACHINE_MODES
];

29 
	#GET_MODE_NAME
(
MODE
Ë
mode_«me
[MODE]

	)

33 
	~"mode-˛as£s.def
"

34 
	#DEF_MODE_CLASS
(
M
Ë
	)
M

35 
	emode_˛ass
 { 
	mMODE_CLASSES
, 
	mMAX_MODE_CLASS
 };

36 #unde‡
DEF_MODE_CLASS


37 #unde‡
MODE_CLASSES


42 c⁄° 
mode_˛ass
[
NUM_MACHINE_MODES
];

43 
	#GET_MODE_CLASS
(
MODE
Ë((
mode_˛ass
Ëmode_˛ass[MODE])

	)

46 
	#INTEGRAL_MODE_P
(
MODE
) \

47 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_INT
 \

48 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_PARTIAL_INT
 \

49 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_COMPLEX_INT
 \

50 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_INT
)

	)

53 
	#FLOAT_MODE_P
(
MODE
) \

54 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_FLOAT
 \

55 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_DECIMAL_FLOAT
 \

56 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_COMPLEX_FLOAT
 \

57 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_FLOAT
)

	)

60 
	#COMPLEX_MODE_P
(
MODE
) \

61 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_COMPLEX_INT
 \

62 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_COMPLEX_FLOAT
)

	)

65 
	#VECTOR_MODE_P
(
MODE
) \

66 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_INT
 \

67 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_FLOAT
 \

68 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_FRACT
 \

69 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_UFRACT
 \

70 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_ACCUM
 \

71 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_UACCUM
)

	)

74 
	#SCALAR_INT_MODE_P
(
MODE
) \

75 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_INT
 \

76 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_PARTIAL_INT
)

	)

79 
	#SCALAR_FLOAT_MODE_P
(
MODE
) \

80 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_FLOAT
 \

81 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_DECIMAL_FLOAT
)

	)

84 
	#DECIMAL_FLOAT_MODE_P
(
MODE
) \

85 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_DECIMAL_FLOAT
)

	)

88 
	#SCALAR_FRACT_MODE_P
(
MODE
) \

89 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_FRACT
)

	)

92 
	#SCALAR_UFRACT_MODE_P
(
MODE
) \

93 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_UFRACT
)

	)

96 
	#ALL_SCALAR_FRACT_MODE_P
(
MODE
) \

97 (
	`SCALAR_FRACT_MODE_P
 (
MODE
Ë|| 
	`SCALAR_UFRACT_MODE_P
 (MODE))

	)

100 
	#SCALAR_ACCUM_MODE_P
(
MODE
) \

101 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_ACCUM
)

	)

104 
	#SCALAR_UACCUM_MODE_P
(
MODE
) \

105 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_UACCUM
)

	)

108 
	#ALL_SCALAR_ACCUM_MODE_P
(
MODE
) \

109 (
	`SCALAR_ACCUM_MODE_P
 (
MODE
Ë|| 
	`SCALAR_UACCUM_MODE_P
 (MODE))

	)

112 
	#SIGNED_SCALAR_FIXED_POINT_MODE_P
(
MODE
) \

113 (
	`SCALAR_FRACT_MODE_P
 (
MODE
Ë|| 
	`SCALAR_ACCUM_MODE_P
 (MODE))

	)

116 
	#UNSIGNED_SCALAR_FIXED_POINT_MODE_P
(
MODE
) \

117 (
	`SCALAR_UFRACT_MODE_P
 (
MODE
Ë|| 
	`SCALAR_UACCUM_MODE_P
 (MODE))

	)

120 
	#ALL_SCALAR_FIXED_POINT_MODE_P
(
MODE
) \

121 (
	`SIGNED_SCALAR_FIXED_POINT_MODE_P
 (
MODE
) \

122 || 
	`UNSIGNED_SCALAR_FIXED_POINT_MODE_P
 (
MODE
))

	)

125 
	#FRACT_MODE_P
(
MODE
) \

126 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_FRACT
 \

127 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_FRACT
)

	)

130 
	#UFRACT_MODE_P
(
MODE
) \

131 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_UFRACT
 \

132 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_UFRACT
)

	)

135 
	#ALL_FRACT_MODE_P
(
MODE
) \

136 (
	`FRACT_MODE_P
 (
MODE
Ë|| 
	`UFRACT_MODE_P
 (MODE))

	)

139 
	#ACCUM_MODE_P
(
MODE
) \

140 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_ACCUM
 \

141 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_ACCUM
)

	)

144 
	#UACCUM_MODE_P
(
MODE
) \

145 (
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_UACCUM
 \

146 || 
	`GET_MODE_CLASS
 (
MODE
Ë=
MODE_VECTOR_UACCUM
)

	)

149 
	#ALL_ACCUM_MODE_P
(
MODE
) \

150 (
	`ACCUM_MODE_P
 (
MODE
Ë|| 
	`UACCUM_MODE_P
 (MODE))

	)

153 
	#SIGNED_FIXED_POINT_MODE_P
(
MODE
) \

154 (
	`FRACT_MODE_P
 (
MODE
Ë|| 
	`ACCUM_MODE_P
 (MODE))

	)

157 
	#UNSIGNED_FIXED_POINT_MODE_P
(
MODE
) \

158 (
	`UFRACT_MODE_P
 (
MODE
Ë|| 
	`UACCUM_MODE_P
 (MODE))

	)

161 
	#ALL_FIXED_POINT_MODE_P
(
MODE
) \

162 (
	`SIGNED_FIXED_POINT_MODE_P
 (
MODE
) \

163 || 
	`UNSIGNED_FIXED_POINT_MODE_P
 (
MODE
))

	)

166 
	#CLASS_HAS_WIDER_MODES_P
(
CLASS
) \

167 (
CLASS
 =
MODE_INT
 \

168 || 
CLASS
 =
MODE_PARTIAL_INT
 \

169 || 
CLASS
 =
MODE_FLOAT
 \

170 || 
CLASS
 =
MODE_DECIMAL_FLOAT
 \

171 || 
CLASS
 =
MODE_COMPLEX_FLOAT
 \

172 || 
CLASS
 =
MODE_FRACT
 \

173 || 
CLASS
 =
MODE_UFRACT
 \

174 || 
CLASS
 =
MODE_ACCUM
 \

175 || 
CLASS
 =
MODE_UACCUM
)

	)

179 
CONST_MODE_SIZE
 
mode_size
[
NUM_MACHINE_MODES
];

180 
	#GET_MODE_SIZE
(
MODE
Ë((Ë
mode_size
[MODE])

	)

181 
	#GET_MODE_BITSIZE
(
MODE
) \

182 ((Ë(
	`GET_MODE_SIZE
 (
MODE
Ë* 
BITS_PER_UNIT
))

	)

185 c⁄° 
mode_¥ecisi⁄
[
NUM_MACHINE_MODES
];

186 
	#GET_MODE_PRECISION
(
MODE
Ë
mode_¥ecisi⁄
[MODE]

	)

189 
CONST_MODE_IBIT
 
mode_ibô
[
NUM_MACHINE_MODES
];

190 
	#GET_MODE_IBIT
(
MODE
Ë
mode_ibô
[MODE]

	)

193 
CONST_MODE_FBIT
 
mode_fbô
[
NUM_MACHINE_MODES
];

194 
	#GET_MODE_FBIT
(
MODE
Ë
mode_fbô
[MODE]

	)

199 c⁄° 
HOST_WIDE_INT
 
mode_mask_¨øy
[
NUM_MACHINE_MODES
];

201 
	#GET_MODE_MASK
(
MODE
Ë
mode_mask_¨øy
[MODE]

	)

205 c⁄° 
mode_ö√r
[
NUM_MACHINE_MODES
];

206 
	#GET_MODE_INNER
(
MODE
Ë((
machöe_mode
Ë
mode_ö√r
[MODE])

	)

211 
	#GET_MODE_UNIT_SIZE
(
MODE
) \

212 (
	`GET_MODE_INNER
 (
MODE
Ë=
VOIDmode
 \

213 ? 
	`GET_MODE_SIZE
 (
MODE
) \

214 : 
	`GET_MODE_SIZE
 (
	`GET_MODE_INNER
 (
MODE
)))

	)

216 
	#GET_MODE_UNIT_BITSIZE
(
MODE
) \

217 ((Ë(
	`GET_MODE_UNIT_SIZE
 (
MODE
Ë* 
BITS_PER_UNIT
))

	)

219 
	#GET_MODE_UNIT_PRECISION
(
MODE
) \

220 (
	`GET_MODE_INNER
 (
MODE
Ë=
VOIDmode
 \

221 ? 
	`GET_MODE_PRECISION
 (
MODE
) \

222 : 
	`GET_MODE_PRECISION
 (
	`GET_MODE_INNER
 (
MODE
)))

	)

226 c⁄° 
mode_nunôs
[
NUM_MACHINE_MODES
];

227 
	#GET_MODE_NUNITS
(
MODE
Ë
mode_nunôs
[MODE]

	)

231 c⁄° 
mode_widî
[
NUM_MACHINE_MODES
];

232 
	#GET_MODE_WIDER_MODE
(
MODE
Ë((
machöe_mode
Ë
mode_widî
[MODE])

	)

236 c⁄° 
mode_2xwidî
[
NUM_MACHINE_MODES
];

237 
	#GET_MODE_2XWIDER_MODE
(
MODE
Ë((
machöe_mode
Ë
mode_2xwidî
[MODE])

	)

243 
machöe_mode
 
mode_f‹_size
 (, 
mode_˛ass
, );

247 
machöe_mode
 
smÆÀ°_mode_f‹_size
 (,

248 
mode_˛ass
);

254 
machöe_mode
 
öt_mode_f‹_mode
 (machine_mode);

259 
machöe_mode
 
mode_f‹_ve˘‹
 (machine_mode, );

262 ˛as†
	cbô_fõld_mode_ôî©‹


264 
	mpublic
:

265 
bô_fõld_mode_ôî©‹
 (
HOST_WIDE_INT
, HOST_WIDE_INT,

266 
HOST_WIDE_INT
, HOST_WIDE_INT,

267 , 
boﬁ
);

268 
boﬁ
 
√xt_mode
 (
machöe_mode
 *);

269 
boﬁ
 
¥e„r_smÆÀr_modes
 ();

271 
	m¥iv©e
:

272 
machöe_mode
 
m_mode
;

275 
HOST_WIDE_INT
 
	mm_bôsize
;

276 
HOST_WIDE_INT
 
	mm_bôpos
;

277 
HOST_WIDE_INT
 
	mm_bôªgi⁄_°¨t
;

278 
HOST_WIDE_INT
 
	mm_bôªgi⁄_íd
;

279 
	mm_Æign
;

280 
boﬁ
 
	mm_vﬁ©ûï
;

281 
	mm_cou¡
;

286 
machöe_mode
 
gë_be°_mode
 (, ,

287 
HOST_WIDE_INT
,

288 
HOST_WIDE_INT
,

290 
machöe_mode
, 
boﬁ
);

294 
CONST_MODE_BASE_ALIGN
 
mode_ba£_Æign
[
NUM_MACHINE_MODES
];

296 
gë_mode_Æignmít
 (
machöe_mode
);

298 
	#GET_MODE_ALIGNMENT
(
MODE
Ë
	`gë_mode_Æignmít
 (MODE)

	)

302 
ñemít_¥ecisi⁄
 (
machöe_mode
);

306 c⁄° 
˛ass_«ºowe°_mode
[
MAX_MODE_CLASS
];

307 
	#GET_CLASS_NARROWEST_MODE
(
CLASS
) \

308 ((
machöe_mode
Ë
˛ass_«ºowe°_mode
[
CLASS
])

	)

313 
machöe_mode
 
byã_mode
;

314 
machöe_mode
 
w‹d_mode
;

315 
machöe_mode
 
±r_mode
;

318 
öô_adju°_machöe_modes
 ();

320 
	#TRULY_NOOP_TRUNCATION_MODES_P
(
MODE1
, 
MODE2
) \

321 
	`TRULY_NOOP_TRUNCATION
 (
	`GET_MODE_PRECISION
 (
MODE1
), \

322 
	`GET_MODE_PRECISION
 (
MODE2
))

	)

324 
	#HWI_COMPUTABLE_MODE_P
(
MODE
) \

325 (
	`SCALAR_INT_MODE_P
 (
MODE
) \

326 && 
	`GET_MODE_PRECISION
 (
MODE
Ë<
HOST_BITS_PER_WIDE_INT
)

	)

	@include/md5.h

21 #i‚de‡
_MD5_H


22 
	#_MD5_H
 1

	)

24 
	~<°dio.h
>

26 #i‡
deföed
 
HAVE_LIMITS_H
 || 
_LIBC


27 
	~<limôs.h
>

30 
	~"™side˛.h
"

39 #ifde‡
_LIBC


40 
	~<sys/ty≥s.h
>

41 
u_öt32_t
 
	tmd5_uöt32
;

42 
uöçå_t
 
	tmd5_uöçå
;

43 #ñi‡
deföed
 (
HAVE_SYS_TYPES_H
Ë&& deföed (
HAVE_STDINT_H
)

44 
	~<°döt.h
>

45 
	~<sys/ty≥s.h
>

46 
uöt32_t
 
	tmd5_uöt32
;

47 
uöçå_t
 
	tmd5_uöçå
;

49 
	#INT_MAX_32_BITS
 2147483647

	)

56 #i‚de‡
INT_MAX


57 
	#INT_MAX
 
INT_MAX_32_BITS


	)

60 #i‡
INT_MAX
 =
INT_MAX_32_BITS


61 
	tmd5_uöt32
;

63 #i‡
SHRT_MAX
 =
INT_MAX_32_BITS


64 
	tmd5_uöt32
;

66 #i‡
LONG_MAX
 =
INT_MAX_32_BITS


67 
	tmd5_uöt32
;

77 
	tmd5_uöçå
;

80 #ifde‡
__˝lu•lus


85 
	smd5_˘x


87 
md5_uöt32
 
A
;

88 
md5_uöt32
 
B
;

89 
md5_uöt32
 
C
;

90 
md5_uöt32
 
D
;

92 
md5_uöt32
 
tŸÆ
[2];

93 
md5_uöt32
 
buÊí
;

94 
buf„r
[128] 
ATTRIBUTE_ALIGNED_ALIGNOF
(
md5_uöt32
);

104 
md5_öô_˘x
 (
md5_˘x
 *
˘x
);

110 
md5_¥o˚ss_block
 (c⁄° *
buf„r
, 
size_t
 
Àn
,

111 
md5_˘x
 *
˘x
);

117 
md5_¥o˚ss_byãs
 (c⁄° *
buf„r
, 
size_t
 
Àn
,

118 
md5_˘x
 *
˘x
);

127 *
md5_föish_˘x
 (
md5_˘x
 *
˘x
, *
ªsbuf
);

136 *
md5_ªad_˘x
 (c⁄° 
md5_˘x
 *
˘x
, *
ªsbuf
);

142 
md5_°ªam
 (
FILE
 *
°ªam
, *
ªsblock
);

148 *
md5_buf„r
 (c⁄° *
buf„r
, 
size_t
 
Àn
, *
ªsblock
);

150 #ifde‡
__˝lu•lus


	@include/obstack.h

110 #i‚de‡
_OBSTACK_H


111 
	#_OBSTACK_H
 1

	)

113 #ifde‡
__˝lu•lus


121 #i‚de‡
__PTR_TO_INT


122 
	#__PTR_TO_INT
(
P
Ë((PË- (*Ë0)

	)

125 #i‚de‡
__INT_TO_PTR


126 
	#__INT_TO_PTR
(
P
Ë((PË+ (*Ë0)

	)

135 #ifde‡
__PTRDIFF_TYPE__


136 
	#PTR_INT_TYPE
 
__PTRDIFF_TYPE__


	)

138 #ifde‡
HAVE_STDDEF_H


139 
	~<°ddef.h
>

140 
	#PTR_INT_TYPE
 
±rdiff_t


	)

142 
	#PTR_INT_TYPE
 

	)

146 #i‡
deföed
 
_LIBC
 || deföed 
HAVE_STRING_H


147 
	~<°rög.h
>

148 
	#_ob°ack_mem˝y
(
To
, 
From
, 
N
Ë
	`mem˝y
 ((To), (From), (N))

	)

150 #ifde‡
mem˝y


151 
	#_ob°ack_mem˝y
(
To
, 
From
, 
N
Ë
	`mem˝y
 ((To), (*)(From), (N))

	)

153 
	#_ob°ack_mem˝y
(
To
, 
From
, 
N
Ë
	`bc›y
 ((*)(From), (To), (N))

	)

157 
	s_ob°ack_chunk


159 *
limô
;

160 
_ob°ack_chunk
 *
¥ev
;

161 
c⁄ã¡s
[4];

164 
	sob°ack


166 
chunk_size
;

167 
_ob°ack_chunk
 *
chunk
;

168 *
obje˘_ba£
;

169 *
√xt_‰ì
;

170 *
chunk_limô
;

171 
PTR_INT_TYPE
 
ãmp
;

172 
Æignmít_mask
;

176 
_ob°ack_chunk
 *(*
chunkfun
) (*, );

177 (*
‰ìfun
Ë(*, 
_ob°ack_chunk
 *);

178 *
exåa_¨g
;

179 
u£_exåa_¨g
:1;

180 
maybe_em±y_obje˘
:1;

184 
Æloc_Áûed
:1;

191 
_ob°ack_√wchunk
 (
ob°ack
 *, );

192 
_ob°ack_‰ì
 (
ob°ack
 *, *);

193 
_ob°ack_begö
 (
ob°ack
 *, , ,

195 
_ob°ack_begö_1
 (
ob°ack
 *, , ,

198 
_ob°ack_mem‹y_u£d
 (
ob°ack
 *);

203 
ob°ack_öô
 (
ob°ack
 *obstack);

205 * 
ob°ack_Æloc
 (
ob°ack
 *ob°ack, 
size
);

207 * 
ob°ack_c›y
 (
ob°ack
 *ob°ack, *
addªss
, 
size
);

208 * 
ob°ack_c›y0
 (
ob°ack
 *ob°ack, *
addªss
, 
size
);

210 
ob°ack_‰ì
 (
ob°ack
 *ob°ack, *
block
);

212 
ob°ack_bœnk
 (
ob°ack
 *ob°ack, 
size
);

214 
ob°ack_grow
 (
ob°ack
 *ob°ack, *
d©a
, 
size
);

215 
ob°ack_grow0
 (
ob°ack
 *ob°ack, *
d©a
, 
size
);

217 
ob°ack_1grow
 (
ob°ack
 *ob°ack, 
d©a_ch¨
);

218 
ob°ack_±r_grow
 (
ob°ack
 *ob°ack, *
d©a
);

219 
ob°ack_öt_grow
 (
ob°ack
 *ob°ack, 
d©a
);

221 * 
ob°ack_föish
 (
ob°ack
 *obstack);

223 
ob°ack_obje˘_size
 (
ob°ack
 *obstack);

225 
ob°ack_room
 (
ob°ack
 *obstack);

226 
ob°ack_make_room
 (
ob°ack
 *ob°ack, 
size
);

227 
ob°ack_1grow_Á°
 (
ob°ack
 *ob°ack, 
d©a_ch¨
);

228 
ob°ack_±r_grow_Á°
 (
ob°ack
 *ob°ack, *
d©a
);

229 
ob°ack_öt_grow_Á°
 (
ob°ack
 *ob°ack, 
d©a
);

230 
ob°ack_bœnk_Á°
 (
ob°ack
 *ob°ack, 
size
);

232 * 
ob°ack_ba£
 (
ob°ack
 *obstack);

233 * 
ob°ack_√xt_‰ì
 (
ob°ack
 *obstack);

234 
ob°ack_Æignmít_mask
 (
ob°ack
 *obstack);

235 
ob°ack_chunk_size
 (
ob°ack
 *obstack);

236 
ob°ack_mem‹y_u£d
 (
ob°ack
 *obstack);

241 (*
ob°ack_Æloc_Áûed_h™dÀr
) ();

244 
ob°ack_exô_Áûuª
;

250 
	#ob°ack_ba£
(
h
Ë((h)->
obje˘_ba£
)

	)

254 
	#ob°ack_chunk_size
(
h
Ë((h)->
chunk_size
)

	)

258 
	#ob°ack_√xt_‰ì
(
h
Ë((h)->
√xt_‰ì
)

	)

262 
	#ob°ack_Æignmít_mask
(
h
Ë((h)->
Æignmít_mask
)

	)

266 
	#ob°ack_öô
(
h
) \

267 
	`_ob°ack_begö
 ((
h
), 0, 0, \

268 (*(*Ë()Ë
ob°ack_chunk_Æloc
, ((*Ë(*)Ë
ob°ack_chunk_‰ì
)

	)

270 
	#ob°ack_begö
(
h
, 
size
) \

271 
	`_ob°ack_begö
 ((
h
), (
size
), 0, \

272 (*(*Ë()Ë
ob°ack_chunk_Æloc
, ((*Ë(*)Ë
ob°ack_chunk_‰ì
)

	)

274 
	#ob°ack_•ecify_Æloˇti⁄
(
h
, 
size
, 
Æignmít
, 
chunkfun
, 
‰ìfun
) \

275 
	`_ob°ack_begö
 ((
h
), (
size
), (
Æignmít
), \

276 (*(*Ë()Ë(
chunkfun
), ((*Ë(*)Ë(
‰ìfun
))

	)

278 
	#ob°ack_•ecify_Æloˇti⁄_wôh_¨g
(
h
, 
size
, 
Æignmít
, 
chunkfun
, 
‰ìfun
, 
¨g
) \

279 
	`_ob°ack_begö_1
 ((
h
), (
size
), (
Æignmít
), \

280 (*(*Ë(*, )Ë(
chunkfun
), \

281 ((*Ë(*, *)Ë(
‰ìfun
), (
¨g
))

	)

283 
	#ob°ack_chunkfun
(
h
, 
√wchunkfun
) \

284 ((
h
Ë-> 
chunkfun
 = (
_ob°ack_chunk
 *(*)(*, )Ë(
√wchunkfun
))

	)

286 
	#ob°ack_‰ìfun
(
h
, 
√w‰ìfun
) \

287 ((
h
Ë-> 
‰ìfun
 = ((*)(*, 
_ob°ack_chunk
 *)Ë(
√w‰ìfun
))

	)

289 
	#ob°ack_1grow_Á°
(
h
,
ach¨
Ë(*((h)->
√xt_‰ì
)++ = (ach¨))

	)

291 
	#ob°ack_bœnk_Á°
(
h
,
n
Ë((h)->
√xt_‰ì
 +“))

	)

293 
	#ob°ack_mem‹y_u£d
(
h
Ë
	`_ob°ack_mem‹y_u£d
 (h)

	)

295 #i‡
deföed
 
__GNUC__
 && deföed 
__STDC__
 && __STDC__

299 #i‡
__GNUC__
 < 2 || (
__NeXT__
 && !
__GNUC_MINOR__
)

300 
	#__exãnsi⁄__


	)

308 
	#ob°ack_obje˘_size
(
OBSTACK
) \

309 
__exãnsi⁄__
 \

310 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

311 (Ë(
__o
->
√xt_‰ì
 - __o->
obje˘_ba£
); })

	)

313 
	#ob°ack_room
(
OBSTACK
) \

314 
__exãnsi⁄__
 \

315 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

316 (Ë(
__o
->
chunk_limô
 - __o->
√xt_‰ì
); })

	)

318 
	#ob°ack_make_room
(
OBSTACK
,
Àngth
) \

319 
__exãnsi⁄__
 \

320 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

321 
__Àn
 = (
Àngth
); \

322 i‡(
__o
->
chunk_limô
 - __o->
√xt_‰ì
 < 
__Àn
) \

323 
	`_ob°ack_√wchunk
 (
__o
, 
__Àn
); \

324 (Ë0; })

	)

326 
	#ob°ack_em±y_p
(
OBSTACK
) \

327 
__exãnsi⁄__
 \

328 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

329 (
__o
->
chunk
->
¥ev
 =0 && __o->
√xt_‰ì
 - __o->chunk->
c⁄ã¡s
 =0); })

	)

331 
	#ob°ack_grow
(
OBSTACK
,
whîe
,
Àngth
) \

332 
__exãnsi⁄__
 \

333 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

334 
__Àn
 = (
Àngth
); \

335 i‡(
__o
->
√xt_‰ì
 + 
__Àn
 > __o->
chunk_limô
) \

336 
	`_ob°ack_√wchunk
 (
__o
, 
__Àn
); \

337 
	`_ob°ack_mem˝y
 (
__o
->
√xt_‰ì
, (
whîe
), 
__Àn
); \

338 
__o
->
√xt_‰ì
 +
__Àn
; \

339 (Ë0; })

	)

341 
	#ob°ack_grow0
(
OBSTACK
,
whîe
,
Àngth
) \

342 
__exãnsi⁄__
 \

343 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

344 
__Àn
 = (
Àngth
); \

345 i‡(
__o
->
√xt_‰ì
 + 
__Àn
 + 1 > __o->
chunk_limô
) \

346 
	`_ob°ack_√wchunk
 (
__o
, 
__Àn
 + 1); \

347 
	`_ob°ack_mem˝y
 (
__o
->
√xt_‰ì
, (
whîe
), 
__Àn
); \

348 
__o
->
√xt_‰ì
 +
__Àn
; \

349 *(
__o
->
√xt_‰ì
)++ = 0; \

350 (Ë0; })

	)

352 
	#ob°ack_1grow
(
OBSTACK
,
d©um
) \

353 
__exãnsi⁄__
 \

354 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

355 i‡(
__o
->
√xt_‰ì
 + 1 > __o->
chunk_limô
) \

356 
	`_ob°ack_√wchunk
 (
__o
, 1); \

357 
	`ob°ack_1grow_Á°
 (
__o
, 
d©um
); \

358 (Ë0; })

	)

364 
	#ob°ack_±r_grow
(
OBSTACK
,
d©um
) \

365 
__exãnsi⁄__
 \

366 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

367 i‡(
__o
->
√xt_‰ì
 +  (*Ë> __o->
chunk_limô
) \

368 
	`_ob°ack_√wchunk
 (
__o
,  (*)); \

369 
	`ob°ack_±r_grow_Á°
 (
__o
, 
d©um
); })

	)

371 
	#ob°ack_öt_grow
(
OBSTACK
,
d©um
) \

372 
__exãnsi⁄__
 \

373 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

374 i‡(
__o
->
√xt_‰ì
 +  (Ë> __o->
chunk_limô
) \

375 
	`_ob°ack_√wchunk
 (
__o
,  ()); \

376 
	`ob°ack_öt_grow_Á°
 (
__o
, 
d©um
); })

	)

378 
	#ob°ack_±r_grow_Á°
(
OBSTACK
,
≠å
) \

379 
__exãnsi⁄__
 \

380 ({ 
ob°ack
 *
__o1
 = (
OBSTACK
); \

381 *(c⁄° **Ë
__o1
->
√xt_‰ì
 = (
≠å
); \

382 
__o1
->
√xt_‰ì
 +=  (const *); \

383 (Ë0; })

	)

385 
	#ob°ack_öt_grow_Á°
(
OBSTACK
,
aöt
) \

386 
__exãnsi⁄__
 \

387 ({ 
ob°ack
 *
__o1
 = (
OBSTACK
); \

388 *(*Ë
__o1
->
√xt_‰ì
 = (
aöt
); \

389 
__o1
->
√xt_‰ì
 +=  (); \

390 (Ë0; })

	)

392 
	#ob°ack_bœnk
(
OBSTACK
,
Àngth
) \

393 
__exãnsi⁄__
 \

394 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

395 
__Àn
 = (
Àngth
); \

396 i‡(
__o
->
chunk_limô
 - __o->
√xt_‰ì
 < 
__Àn
) \

397 
	`_ob°ack_√wchunk
 (
__o
, 
__Àn
); \

398 
	`ob°ack_bœnk_Á°
 (
__o
, 
__Àn
); \

399 (Ë0; })

	)

401 
	#ob°ack_Æloc
(
OBSTACK
,
Àngth
) \

402 
__exãnsi⁄__
 \

403 ({ 
ob°ack
 *
__h
 = (
OBSTACK
); \

404 
	`ob°ack_bœnk
 (
__h
, (
Àngth
)); \

405 
	`ob°ack_föish
 (
__h
); })

	)

407 
	#ob°ack_c›y
(
OBSTACK
,
whîe
,
Àngth
) \

408 
__exãnsi⁄__
 \

409 ({ 
ob°ack
 *
__h
 = (
OBSTACK
); \

410 
	`ob°ack_grow
 (
__h
, (
whîe
), (
Àngth
)); \

411 
	`ob°ack_föish
 (
__h
); })

	)

413 
	#ob°ack_c›y0
(
OBSTACK
,
whîe
,
Àngth
) \

414 
__exãnsi⁄__
 \

415 ({ 
ob°ack
 *
__h
 = (
OBSTACK
); \

416 
	`ob°ack_grow0
 (
__h
, (
whîe
), (
Àngth
)); \

417 
	`ob°ack_föish
 (
__h
); })

	)

421 
	#ob°ack_föish
(
OBSTACK
) \

422 
__exãnsi⁄__
 \

423 ({ 
ob°ack
 *
__o1
 = (
OBSTACK
); \

424 *
vÆue
; \

425 
vÆue
 = (*Ë
__o1
->
obje˘_ba£
; \

426 i‡(
__o1
->
√xt_‰ì
 =
vÆue
) \

427 
__o1
->
maybe_em±y_obje˘
 = 1; \

428 
__o1
->
√xt_‰ì
 \

429 
	`__INT_TO_PTR
 ((
	`__PTR_TO_INT
 (
__o1
->
√xt_‰ì
)+__o1->
Æignmít_mask
)\

430 & ~ (
__o1
->
Æignmít_mask
)); \

431 i‡(
__o1
->
√xt_‰ì
 - (*)__o1->
chunk
 \

432 > 
__o1
->
chunk_limô
 - (*)__o1->
chunk
) \

433 
__o1
->
√xt_‰ì
 = __o1->
chunk_limô
; \

434 
__o1
->
obje˘_ba£
 = __o1->
√xt_‰ì
; \

435 
vÆue
; })

	)

437 
	#ob°ack_‰ì
(
OBSTACK
, 
OBJ
) \

438 
__exãnsi⁄__
 \

439 ({ 
ob°ack
 *
__o
 = (
OBSTACK
); \

440 *
__obj
 = (*Ë(
OBJ
); \

441 i‡(
__obj
 > (*)
__o
->
chunk
 && __obj < (*)__o->
chunk_limô
) \

442 
__o
->
√xt_‰ì
 = __o->
obje˘_ba£
 = (*Ë
__obj
; \

443 (
ob°ack_‰ì
Ë(
__o
, 
__obj
); })

	)

447 
	#ob°ack_obje˘_size
(
h
) \

448 (Ë((
h
)->
√xt_‰ì
 - (h)->
obje˘_ba£
)

	)

450 
	#ob°ack_room
(
h
) \

451 (Ë((
h
)->
chunk_limô
 - (h)->
√xt_‰ì
)

	)

453 
	#ob°ack_em±y_p
(
h
) \

454 ((
h
)->
chunk
->
¥ev
 =0 && (h)->
√xt_‰ì
 - (h)->chunk->
c⁄ã¡s
 =0)

	)

462 
	#ob°ack_make_room
(
h
,
Àngth
) \

463 –(
h
)->
ãmp
 = (
Àngth
), \

464 (((
h
)->
√xt_‰ì
 + (h)->
ãmp
 > (h)->
chunk_limô
) \

465 ? (
	`_ob°ack_√wchunk
 ((
h
), (h)->
ãmp
), 0Ë: 0))

	)

467 
	#ob°ack_grow
(
h
,
whîe
,
Àngth
) \

468 –(
h
)->
ãmp
 = (
Àngth
), \

469 (((
h
)->
√xt_‰ì
 + (h)->
ãmp
 > (h)->
chunk_limô
) \

470 ? (
	`_ob°ack_√wchunk
 ((
h
), (h)->
ãmp
), 0) : 0), \

471 
	`_ob°ack_mem˝y
 ((
h
)->
√xt_‰ì
, (
whîe
), (h)->
ãmp
), \

472 (
h
)->
√xt_‰ì
 +(h)->
ãmp
)

	)

474 
	#ob°ack_grow0
(
h
,
whîe
,
Àngth
) \

475 –(
h
)->
ãmp
 = (
Àngth
), \

476 (((
h
)->
√xt_‰ì
 + (h)->
ãmp
 + 1 > (h)->
chunk_limô
) \

477 ? (
	`_ob°ack_√wchunk
 ((
h
), (h)->
ãmp
 + 1), 0) : 0), \

478 
	`_ob°ack_mem˝y
 ((
h
)->
√xt_‰ì
, (
whîe
), (h)->
ãmp
), \

479 (
h
)->
√xt_‰ì
 +(h)->
ãmp
, \

480 *((
h
)->
√xt_‰ì
)++ = 0)

	)

482 
	#ob°ack_1grow
(
h
,
d©um
) \

483 –(((
h
)->
√xt_‰ì
 + 1 > (h)->
chunk_limô
) \

484 ? (
	`_ob°ack_√wchunk
 ((
h
), 1), 0) : 0), \

485 
	`ob°ack_1grow_Á°
 (
h
, 
d©um
))

	)

487 
	#ob°ack_±r_grow
(
h
,
d©um
) \

488 –(((
h
)->
√xt_‰ì
 +  (*Ë> (h)->
chunk_limô
) \

489 ? (
	`_ob°ack_√wchunk
 ((
h
),  (*)), 0) : 0), \

490 
	`ob°ack_±r_grow_Á°
 (
h
, 
d©um
))

	)

492 
	#ob°ack_öt_grow
(
h
,
d©um
) \

493 –(((
h
)->
√xt_‰ì
 +  (Ë> (h)->
chunk_limô
) \

494 ? (
	`_ob°ack_√wchunk
 ((
h
),  ()), 0) : 0), \

495 
	`ob°ack_öt_grow_Á°
 (
h
, 
d©um
))

	)

497 
	#ob°ack_±r_grow_Á°
(
h
,
≠å
) \

498 (((c⁄° **Ë((
h
)->
√xt_‰ì
 + (*)))[-1] = (
≠å
))

	)

500 
	#ob°ack_öt_grow_Á°
(
h
,
aöt
) \

501 (((*Ë((
h
)->
√xt_‰ì
 + ()))[-1] = (
≠å
))

	)

503 
	#ob°ack_bœnk
(
h
,
Àngth
) \

504 –(
h
)->
ãmp
 = (
Àngth
), \

505 (((
h
)->
chunk_limô
 - (h)->
√xt_‰ì
 < (h)->
ãmp
) \

506 ? (
	`_ob°ack_√wchunk
 ((
h
), (h)->
ãmp
), 0) : 0), \

507 
	`ob°ack_bœnk_Á°
 (
h
, (h)->
ãmp
))

	)

509 
	#ob°ack_Æloc
(
h
,
Àngth
) \

510 (
	`ob°ack_bœnk
 ((
h
), (
Àngth
)), 
	`ob°ack_föish
 ((h)))

	)

512 
	#ob°ack_c›y
(
h
,
whîe
,
Àngth
) \

513 (
	`ob°ack_grow
 ((
h
), (
whîe
), (
Àngth
)), 
	`ob°ack_föish
 ((h)))

	)

515 
	#ob°ack_c›y0
(
h
,
whîe
,
Àngth
) \

516 (
	`ob°ack_grow0
 ((
h
), (
whîe
), (
Àngth
)), 
	`ob°ack_föish
 ((h)))

	)

518 
	#ob°ack_föish
(
h
) \

519 –((
h
)->
√xt_‰ì
 =(h)->
obje˘_ba£
 \

520 ? (((
h
)->
maybe_em±y_obje˘
 = 1), 0) \

522 (
h
)->
ãmp
 = 
	`__PTR_TO_INT
 ((h)->
obje˘_ba£
), \

523 (
h
)->
√xt_‰ì
 \

524 
	`__INT_TO_PTR
 ((
	`__PTR_TO_INT
 ((
h
)->
√xt_‰ì
)+(h)->
Æignmít_mask
) \

525 & ~ ((
h
)->
Æignmít_mask
)), \

526 (((
h
)->
√xt_‰ì
 - (*Ë(h)->
chunk
 \

527 > (
h
)->
chunk_limô
 - (*Ë(h)->
chunk
) \

528 ? ((
h
)->
√xt_‰ì
 = (h)->
chunk_limô
) : 0), \

529 (
h
)->
obje˘_ba£
 = (h)->
√xt_‰ì
, \

530 (*Ë
	`__INT_TO_PTR
 ((
h
)->
ãmp
))

	)

532 
	#ob°ack_‰ì
(
h
,
obj
) \

533 –(
h
)->
ãmp
 = (*Ë(
obj
Ë- (*Ë(h)->
chunk
, \

534 (((
h
)->
ãmp
 > 0 && (h)->ãm∞< (h)->
chunk_limô
 - (*Ë(h)->
chunk
)\

535 ? (((
h
)->
√xt_‰ì
 = (h)->
obje˘_ba£
 \

536 (
h
)->
ãmp
 + (*Ë(h)->
chunk
), 0) \

537 : ((
ob°ack_‰ì
Ë((
h
), (h)->
ãmp
 + (*Ë(h)->
chunk
), 0)))

	)

541 #ifde‡
__˝lu•lus


	@include/options.h

3 #i‚de‡
OPTIONS_H


4 
	#OPTIONS_H


	)

6 
	~"Êag-ty≥s.h
"

8 
	~"c⁄fig/¨m/¨m-›ts.h
"

10 #i‡!
deföed
(
IN_LIBGCC2
Ë&& !deföed(
IN_TARGET_LIBS
Ë&& !deföed(
IN_RTS
)

11 #i‚de‡
GENERATOR_FILE


12 #i‡!
deföed
(
IN_LIBGCC2
Ë&& !deföed(
IN_TARGET_LIBS
)

13 
GTY
(()Ë
	ggcc_›ti⁄s


15 
	ggcc_›ti⁄s


19 #ifde‡
GENERATOR_FILE


20 
HOST_WIDE_INT
 
‰ame_œrgî_th™_size
;

22 
HOST_WIDE_INT
 
	gx_‰ame_œrgî_th™_size
;

23 
	#‰ame_œrgî_th™_size
 
globÆ_›ti⁄s
.
x_‰ame_œrgî_th™_size


	)

25 #ifde‡
GENERATOR_FILE


26 
HOST_WIDE_INT
 
œrgî_th™_size
;

28 
HOST_WIDE_INT
 
	gx_œrgî_th™_size
;

29 
	#œrgî_th™_size
 
globÆ_›ti⁄s
.
x_œrgî_th™_size


	)

31 #ifde‡
GENERATOR_FILE


32 
boﬁ
 
dump_ba£_«me_¥efixed
;

34 
boﬁ
 
	gx_dump_ba£_«me_¥efixed
;

35 
	#dump_ba£_«me_¥efixed
 
globÆ_›ti⁄s
.
x_dump_ba£_«me_¥efixed


	)

37 #ifde‡
GENERATOR_FILE


38 
boﬁ
 
exô_a·î_›ti⁄s
;

40 
boﬁ
 
	gx_exô_a·î_›ti⁄s
;

41 
	#exô_a·î_›ti⁄s
 
globÆ_›ti⁄s
.
x_exô_a·î_›ti⁄s


	)

43 #ifde‡
GENERATOR_FILE


44 
boﬁ
 
Êag_dump_Æl_∑s£d
;

46 
boﬁ
 
	gx_Êag_dump_Æl_∑s£d
;

47 
	#Êag_dump_Æl_∑s£d
 
globÆ_›ti⁄s
.
x_Êag_dump_Æl_∑s£d


	)

49 #ifde‡
GENERATOR_FILE


50 
boﬁ
 
Êag_›ts_föished
;

52 
boﬁ
 
	gx_Êag_›ts_föished
;

53 
	#Êag_›ts_föished
 
globÆ_›ti⁄s
.
x_Êag_›ts_föished


	)

55 #ifde‡
GENERATOR_FILE


56 
boﬁ
 
Êag_°ack_ußge_öfo
;

58 
boﬁ
 
	gx_Êag_°ack_ußge_öfo
;

59 
	#Êag_°ack_ußge_öfo
 
globÆ_›ti⁄s
.
x_Êag_°ack_ußge_öfo


	)

61 #ifde‡
GENERATOR_FILE


62 
boﬁ
 
Êag_w¨n_unu£d_ªsu…
;

64 
boﬁ
 
	gx_Êag_w¨n_unu£d_ªsu…
;

65 
	#Êag_w¨n_unu£d_ªsu…
 
globÆ_›ti⁄s
.
x_Êag_w¨n_unu£d_ªsu…


	)

67 #ifde‡
GENERATOR_FILE


68 
boﬁ
 
ö_…o_p
;

70 
boﬁ
 
	gx_ö_…o_p
;

71 
	#ö_…o_p
 
globÆ_›ti⁄s
.
x_ö_…o_p


	)

73 #ifde‡
GENERATOR_FILE


74 
boﬁ
 
u£_gnu_debug_öfo_exãnsi⁄s
;

76 
boﬁ
 
	gx_u£_gnu_debug_öfo_exãnsi⁄s
;

77 
	#u£_gnu_debug_öfo_exãnsi⁄s
 
globÆ_›ti⁄s
.
x_u£_gnu_debug_öfo_exãnsi⁄s


	)

79 #ifde‡
GENERATOR_FILE


80 
boﬁ
 
w¨n_‰ame_œrgî_th™
;

82 
boﬁ
 
	gx_w¨n_‰ame_œrgî_th™
;

83 
	#w¨n_‰ame_œrgî_th™
 
globÆ_›ti⁄s
.
x_w¨n_‰ame_œrgî_th™


	)

85 #ifde‡
GENERATOR_FILE


86 
boﬁ
 
w¨n_œrgî_th™
;

88 
boﬁ
 
	gx_w¨n_œrgî_th™
;

89 
	#w¨n_œrgî_th™
 
globÆ_›ti⁄s
.
x_w¨n_œrgî_th™


	)

91 #ifde‡
GENERATOR_FILE


92 *
hñp_íum_¥öãd
;

94 * 
	gx_hñp_íum_¥öãd
;

95 
	#hñp_íum_¥öãd
 
globÆ_›ti⁄s
.
x_hñp_íum_¥öãd


	)

97 #ifde‡
GENERATOR_FILE


98 *
hñp_¥öãd
;

100 * 
	gx_hñp_¥öãd
;

101 
	#hñp_¥öãd
 
globÆ_›ti⁄s
.
x_hñp_¥öãd


	)

103 #ifde‡
GENERATOR_FILE


104 c⁄° *
maö_öput_ba£«me
;

106 c⁄° * 
	gx_maö_öput_ba£«me
;

107 
	#maö_öput_ba£«me
 
globÆ_›ti⁄s
.
x_maö_öput_ba£«me


	)

109 #ifde‡
GENERATOR_FILE


110 c⁄° *
maö_öput_fûíame
;

112 c⁄° * 
	gx_maö_öput_fûíame
;

113 
	#maö_öput_fûíame
 
globÆ_›ti⁄s
.
x_maö_öput_fûíame


	)

115 #ifde‡
GENERATOR_FILE


116 
debug_öfo_Àvñs
 
debug_öfo_Àvñ
;

118 
debug_öfo_Àvñs
 
	gx_debug_öfo_Àvñ
;

119 
	#debug_öfo_Àvñ
 
globÆ_›ti⁄s
.
x_debug_öfo_Àvñ


	)

121 #ifde‡
GENERATOR_FILE


122 
debug_öfo_ty≥
 
wrôe_symbﬁs
;

124 
debug_öfo_ty≥
 
	gx_wrôe_symbﬁs
;

125 
	#wrôe_symbﬁs
 
globÆ_›ti⁄s
.
x_wrôe_symbﬁs


	)

127 #ifde‡
GENERATOR_FILE


128 
debug_°ru˘_fûe
 
debug_°ru˘_gíîic
[
DINFO_USAGE_NUM_ENUMS
];

130 
debug_°ru˘_fûe
 
	gx_debug_°ru˘_gíîic
[
DINFO_USAGE_NUM_ENUMS
];

131 
	#debug_°ru˘_gíîic
 
globÆ_›ti⁄s
.
x_debug_°ru˘_gíîic


	)

133 #ifde‡
GENERATOR_FILE


134 
debug_°ru˘_fûe
 
debug_°ru˘_‹dö¨y
[
DINFO_USAGE_NUM_ENUMS
];

136 
debug_°ru˘_fûe
 
	gx_debug_°ru˘_‹dö¨y
[
DINFO_USAGE_NUM_ENUMS
];

137 
	#debug_°ru˘_‹dö¨y
 
globÆ_›ti⁄s
.
x_debug_°ru˘_‹dö¨y


	)

139 #ifde‡
GENERATOR_FILE


140 
°ack_check_ty≥
 
Êag_°ack_check
;

142 
°ack_check_ty≥
 
	gx_Êag_°ack_check
;

143 
	#Êag_°ack_check
 
globÆ_›ti⁄s
.
x_Êag_°ack_check


	)

145 #ifde‡
GENERATOR_FILE


146 *
∑øm_vÆues
;

148 * 
	gx_∑øm_vÆues
;

149 
	#∑øm_vÆues
 
globÆ_›ti⁄s
.
x_∑øm_vÆues


	)

151 #ifde‡
GENERATOR_FILE


152 
Êag_com∂ex_mëhod
;

154 
	gx_Êag_com∂ex_mëhod
;

155 
	#Êag_com∂ex_mëhod
 
globÆ_›ti⁄s
.
x_Êag_com∂ex_mëhod


	)

157 #ifde‡
GENERATOR_FILE


158 
Êag_debug_asm
;

160 
	gx_Êag_debug_asm
;

161 
	#Êag_debug_asm
 
globÆ_›ti⁄s
.
x_Êag_debug_asm


	)

163 #ifde‡
GENERATOR_FILE


164 
Êag_dump_πl_ö_asm
;

166 
	gx_Êag_dump_πl_ö_asm
;

167 
	#Êag_dump_πl_ö_asm
 
globÆ_›ti⁄s
.
x_Êag_dump_πl_ö_asm


	)

169 #ifde‡
GENERATOR_FILE


170 
Êag_evÆu©i⁄_‹dî
;

172 
	gx_Êag_evÆu©i⁄_‹dî
;

173 
	#Êag_evÆu©i⁄_‹dî
 
globÆ_›ti⁄s
.
x_Êag_evÆu©i⁄_‹dî


	)

175 #ifde‡
GENERATOR_FILE


176 
Êag_gí_aux_öfo
;

178 
	gx_Êag_gí_aux_öfo
;

179 
	#Êag_gí_aux_öfo
 
globÆ_›ti⁄s
.
x_Êag_gí_aux_öfo


	)

181 #ifde‡
GENERATOR_FILE


182 
Êag_gíî©e_…o
;

184 
	gx_Êag_gíî©e_…o
;

185 
	#Êag_gíî©e_…o
 
globÆ_›ti⁄s
.
x_Êag_gíî©e_…o


	)

187 #ifde‡
GENERATOR_FILE


188 
Êag_¥öt_asm_«me
;

190 
	gx_Êag_¥öt_asm_«me
;

191 
	#Êag_¥öt_asm_«me
 
globÆ_›ti⁄s
.
x_Êag_¥öt_asm_«me


	)

193 #ifde‡
GENERATOR_FILE


194 
Êag_shlib
;

196 
	gx_Êag_shlib
;

197 
	#Êag_shlib
 
globÆ_›ti⁄s
.
x_Êag_shlib


	)

199 #ifde‡
GENERATOR_FILE


200 
maö_öput_ba£Àngth
;

202 
	gx_maö_öput_ba£Àngth
;

203 
	#maö_öput_ba£Àngth
 
globÆ_›ti⁄s
.
x_maö_öput_ba£Àngth


	)

205 #ifde‡
GENERATOR_FILE


206 
›timize
;

208 
	gx_›timize
;

209 
	#›timize
 
globÆ_›ti⁄s
.
x_›timize


	)

211 #ifde‡
GENERATOR_FILE


212 
›timize_debug
;

214 
	gx_›timize_debug
;

215 
	#›timize_debug
 
globÆ_›ti⁄s
.
x_›timize_debug


	)

217 #ifde‡
GENERATOR_FILE


218 
›timize_Á°
;

220 
	gx_›timize_Á°
;

221 
	#›timize_Á°
 
globÆ_›ti⁄s
.
x_›timize_Á°


	)

223 #ifde‡
GENERATOR_FILE


224 
›timize_size
;

226 
	gx_›timize_size
;

227 
	#›timize_size
 
globÆ_›ti⁄s
.
x_›timize_size


	)

229 #ifde‡
GENERATOR_FILE


230 
πl_dump_™d_exô
;

232 
	gx_πl_dump_™d_exô
;

233 
	#πl_dump_™d_exô
 
globÆ_›ti⁄s
.
x_πl_dump_™d_exô


	)

235 #ifde‡
GENERATOR_FILE


236 
èrgë_Êags
;

238 
	gx_èrgë_Êags
;

239 
	#èrgë_Êags
 
globÆ_›ti⁄s
.
x_èrgë_Êags


	)

241 #ifde‡
GENERATOR_FILE


242 
Êag_ßnôize
;

244 
	gx_Êag_ßnôize
;

245 
	#Êag_ßnôize
 
globÆ_›ti⁄s
.
x_Êag_ßnôize


	)

247 #ifde‡
GENERATOR_FILE


248 
hñp_cﬁumns
;

250 
	gx_hñp_cﬁumns
;

251 
	#hñp_cﬁumns
 
globÆ_›ti⁄s
.
x_hñp_cﬁumns


	)

253 #ifde‡
GENERATOR_FILE


254 
öôül_max_Êd_Æign
;

256 
	gx_öôül_max_Êd_Æign
;

257 
	#öôül_max_Êd_Æign
 
globÆ_›ti⁄s
.
x_öôül_max_Êd_Æign


	)

259 #ifde‡
GENERATOR_FILE


260 *
Êag_ö°rumít_fun˘i⁄s_ex˛ude_fûes
;

262 * 
	gx_Êag_ö°rumít_fun˘i⁄s_ex˛ude_fûes
;

263 
	#Êag_ö°rumít_fun˘i⁄s_ex˛ude_fûes
 
globÆ_›ti⁄s
.
x_Êag_ö°rumít_fun˘i⁄s_ex˛ude_fûes


	)

265 #ifde‡
GENERATOR_FILE


266 *
Êag_ö°rumít_fun˘i⁄s_ex˛ude_fun˘i⁄s
;

268 * 
	gx_Êag_ö°rumít_fun˘i⁄s_ex˛ude_fun˘i⁄s
;

269 
	#Êag_ö°rumít_fun˘i⁄s_ex˛ude_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_ö°rumít_fun˘i⁄s_ex˛ude_fun˘i⁄s


	)

271 #ifde‡
GENERATOR_FILE


272 
hñp_Êag
;

274 
	gx_hñp_Êag
;

275 
	#hñp_Êag
 
globÆ_›ti⁄s
.
x_hñp_Êag


	)

277 #ifde‡
GENERATOR_FILE


278 
no_sy§oŸ_suffix
;

280 
	gx_no_sy§oŸ_suffix
;

281 
	#no_sy§oŸ_suffix
 
globÆ_›ti⁄s
.
x_no_sy§oŸ_suffix


	)

283 #ifde‡
GENERATOR_FILE


284 
Êag_¥ïro˚ss_⁄ly
;

286 
	gx_Êag_¥ïro˚ss_⁄ly
;

287 
	#Êag_¥ïro˚ss_⁄ly
 
globÆ_›ti⁄s
.
x_Êag_¥ïro˚ss_⁄ly


	)

289 #ifde‡
GENERATOR_FILE


290 
w¨n_abi
;

292 
	gx_w¨n_abi
;

293 
	#w¨n_abi
 
globÆ_›ti⁄s
.
x_w¨n_abi


	)

295 #ifde‡
GENERATOR_FILE


296 
w¨n_abi_èg
;

298 
	gx_w¨n_abi_èg
;

299 
	#w¨n_abi_èg
 
globÆ_›ti⁄s
.
x_w¨n_abi_èg


	)

301 #ifde‡
GENERATOR_FILE


302 
w¨n_addªss
;

304 
	gx_w¨n_addªss
;

305 
	#w¨n_addªss
 
globÆ_›ti⁄s
.
x_w¨n_addªss


	)

307 #ifde‡
GENERATOR_FILE


308 
w¨n_aggªg©e_ªtu∫
;

310 
	gx_w¨n_aggªg©e_ªtu∫
;

311 
	#w¨n_aggªg©e_ªtu∫
 
globÆ_›ti⁄s
.
x_w¨n_aggªg©e_ªtu∫


	)

313 #ifde‡
GENERATOR_FILE


314 
w¨n_aggªssive_lo›_›timiz©i⁄s
;

316 
	gx_w¨n_aggªssive_lo›_›timiz©i⁄s
;

317 
	#w¨n_aggªssive_lo›_›timiz©i⁄s
 
globÆ_›ti⁄s
.
x_w¨n_aggªssive_lo›_›timiz©i⁄s


	)

319 #ifde‡
GENERATOR_FILE


320 
w¨n_¨øy_bounds
;

322 
	gx_w¨n_¨øy_bounds
;

323 
	#w¨n_¨øy_bounds
 
globÆ_›ti⁄s
.
x_w¨n_¨øy_bounds


	)

325 #ifde‡
GENERATOR_FILE


326 
w¨n_assign_öãr˚±
;

328 
	gx_w¨n_assign_öãr˚±
;

329 
	#w¨n_assign_öãr˚±
 
globÆ_›ti⁄s
.
x_w¨n_assign_öãr˚±


	)

331 #ifde‡
GENERATOR_FILE


332 
w¨n_©åibuãs
;

334 
	gx_w¨n_©åibuãs
;

335 
	#w¨n_©åibuãs
 
globÆ_›ti⁄s
.
x_w¨n_©åibuãs


	)

337 #ifde‡
GENERATOR_FILE


338 
w¨n_bad_fun˘i⁄_ˇ°
;

340 
	gx_w¨n_bad_fun˘i⁄_ˇ°
;

341 
	#w¨n_bad_fun˘i⁄_ˇ°
 
globÆ_›ti⁄s
.
x_w¨n_bad_fun˘i⁄_ˇ°


	)

343 #ifde‡
GENERATOR_FILE


344 
w¨n_cxx_com∑t
;

346 
	gx_w¨n_cxx_com∑t
;

347 
	#w¨n_cxx_com∑t
 
globÆ_›ti⁄s
.
x_w¨n_cxx_com∑t


	)

349 #ifde‡
GENERATOR_FILE


350 
w¨n_cxx0x_com∑t
;

352 
	gx_w¨n_cxx0x_com∑t
;

353 
	#w¨n_cxx0x_com∑t
 
globÆ_›ti⁄s
.
x_w¨n_cxx0x_com∑t


	)

355 #ifde‡
GENERATOR_FILE


356 
w¨n_ˇ°_Æign
;

358 
	gx_w¨n_ˇ°_Æign
;

359 
	#w¨n_ˇ°_Æign
 
globÆ_›ti⁄s
.
x_w¨n_ˇ°_Æign


	)

361 #ifde‡
GENERATOR_FILE


362 
w¨n_ˇ°_quÆ
;

364 
	gx_w¨n_ˇ°_quÆ
;

365 
	#w¨n_ˇ°_quÆ
 
globÆ_›ti⁄s
.
x_w¨n_ˇ°_quÆ


	)

367 #ifde‡
GENERATOR_FILE


368 
w¨n_ch¨_subs¸ùts
;

370 
	gx_w¨n_ch¨_subs¸ùts
;

371 
	#w¨n_ch¨_subs¸ùts
 
globÆ_›ti⁄s
.
x_w¨n_ch¨_subs¸ùts


	)

373 #ifde‡
GENERATOR_FILE


374 
w¨n_˛obbîed
;

376 
	gx_w¨n_˛obbîed
;

377 
	#w¨n_˛obbîed
 
globÆ_›ti⁄s
.
x_w¨n_˛obbîed


	)

379 #ifde‡
GENERATOR_FILE


380 
w¨n_c⁄dôi⁄Æly_suµ‹ãd
;

382 
	gx_w¨n_c⁄dôi⁄Æly_suµ‹ãd
;

383 
	#w¨n_c⁄dôi⁄Æly_suµ‹ãd
 
globÆ_›ti⁄s
.
x_w¨n_c⁄dôi⁄Æly_suµ‹ãd


	)

385 #ifde‡
GENERATOR_FILE


386 
w¨n_c⁄vîsi⁄
;

388 
	gx_w¨n_c⁄vîsi⁄
;

389 
	#w¨n_c⁄vîsi⁄
 
globÆ_›ti⁄s
.
x_w¨n_c⁄vîsi⁄


	)

391 #ifde‡
GENERATOR_FILE


392 
w¨n_c⁄vîsi⁄_nuŒ
;

394 
	gx_w¨n_c⁄vîsi⁄_nuŒ
;

395 
	#w¨n_c⁄vîsi⁄_nuŒ
 
globÆ_›ti⁄s
.
x_w¨n_c⁄vîsi⁄_nuŒ


	)

397 #ifde‡
GENERATOR_FILE


398 
w¨n_covîage_mism©ch
;

400 
	gx_w¨n_covîage_mism©ch
;

401 
	#w¨n_covîage_mism©ch
 
globÆ_›ti⁄s
.
x_w¨n_covîage_mism©ch


	)

403 #ifde‡
GENERATOR_FILE


404 
w¨n_˝p
;

406 
	gx_w¨n_˝p
;

407 
	#w¨n_˝p
 
globÆ_›ti⁄s
.
x_w¨n_˝p


	)

409 #ifde‡
GENERATOR_FILE


410 
w¨n_˘‹_dt‹_¥ivacy
;

412 
	gx_w¨n_˘‹_dt‹_¥ivacy
;

413 
	#w¨n_˘‹_dt‹_¥ivacy
 
globÆ_›ti⁄s
.
x_w¨n_˘‹_dt‹_¥ivacy


	)

415 #ifde‡
GENERATOR_FILE


416 
˝p_w¨n_d©e_time
;

418 
	gx_˝p_w¨n_d©e_time
;

419 
	#˝p_w¨n_d©e_time
 
globÆ_›ti⁄s
.
x_˝p_w¨n_d©e_time


	)

421 #ifde‡
GENERATOR_FILE


422 
w¨n_de˛¨©i⁄_a·î_°©emít
;

424 
	gx_w¨n_de˛¨©i⁄_a·î_°©emít
;

425 
	#w¨n_de˛¨©i⁄_a·î_°©emít
 
globÆ_›ti⁄s
.
x_w¨n_de˛¨©i⁄_a·î_°©emít


	)

427 #ifde‡
GENERATOR_FILE


428 
w¨n_dñëe_öcom∂ëe
;

430 
	gx_w¨n_dñëe_öcom∂ëe
;

431 
	#w¨n_dñëe_öcom∂ëe
 
globÆ_›ti⁄s
.
x_w¨n_dñëe_öcom∂ëe


	)

433 #ifde‡
GENERATOR_FILE


434 
w¨n_dñn⁄vdt‹
;

436 
	gx_w¨n_dñn⁄vdt‹
;

437 
	#w¨n_dñn⁄vdt‹
 
globÆ_›ti⁄s
.
x_w¨n_dñn⁄vdt‹


	)

439 #ifde‡
GENERATOR_FILE


440 
w¨n_dïªˇãd
;

442 
	gx_w¨n_dïªˇãd
;

443 
	#w¨n_dïªˇãd
 
globÆ_›ti⁄s
.
x_w¨n_dïªˇãd


	)

445 #ifde‡
GENERATOR_FILE


446 
w¨n_dïªˇãd_de˛
;

448 
	gx_w¨n_dïªˇãd_de˛
;

449 
	#w¨n_dïªˇãd_de˛
 
globÆ_›ti⁄s
.
x_w¨n_dïªˇãd_de˛


	)

451 #ifde‡
GENERATOR_FILE


452 
w¨n_dißbÀd_›timiz©i⁄
;

454 
	gx_w¨n_dißbÀd_›timiz©i⁄
;

455 
	#w¨n_dißbÀd_›timiz©i⁄
 
globÆ_›ti⁄s
.
x_w¨n_dißbÀd_›timiz©i⁄


	)

457 #ifde‡
GENERATOR_FILE


458 
w¨n_div_by_zîo
;

460 
	gx_w¨n_div_by_zîo
;

461 
	#w¨n_div_by_zîo
 
globÆ_›ti⁄s
.
x_w¨n_div_by_zîo


	)

463 #ifde‡
GENERATOR_FILE


464 
w¨n_doubÀ_¥omŸi⁄
;

466 
	gx_w¨n_doubÀ_¥omŸi⁄
;

467 
	#w¨n_doubÀ_¥omŸi⁄
 
globÆ_›ti⁄s
.
x_w¨n_doubÀ_¥omŸi⁄


	)

469 #ifde‡
GENERATOR_FILE


470 
w¨n_e˝p
;

472 
	gx_w¨n_e˝p
;

473 
	#w¨n_e˝p
 
globÆ_›ti⁄s
.
x_w¨n_e˝p


	)

475 #ifde‡
GENERATOR_FILE


476 
w¨n_em±y_body
;

478 
	gx_w¨n_em±y_body
;

479 
	#w¨n_em±y_body
 
globÆ_›ti⁄s
.
x_w¨n_em±y_body


	)

481 #ifde‡
GENERATOR_FILE


482 
w¨n_íum_com∑ª
;

484 
	gx_w¨n_íum_com∑ª
;

485 
	#w¨n_íum_com∑ª
 
globÆ_›ti⁄s
.
x_w¨n_íum_com∑ª


	)

487 #ifde‡
GENERATOR_FILE


488 
w¨nögs_¨e_îr‹s
;

490 
	gx_w¨nögs_¨e_îr‹s
;

491 
	#w¨nögs_¨e_îr‹s
 
globÆ_›ti⁄s
.
x_w¨nögs_¨e_îr‹s


	)

493 #ifde‡
GENERATOR_FILE


494 
exåa_w¨nögs
;

496 
	gx_exåa_w¨nögs
;

497 
	#exåa_w¨nögs
 
globÆ_›ti⁄s
.
x_exåa_w¨nögs


	)

499 #ifde‡
GENERATOR_FILE


500 
Êag_exå™eous_£micﬁ⁄
;

502 
	gx_Êag_exå™eous_£micﬁ⁄
;

503 
	#Êag_exå™eous_£micﬁ⁄
 
globÆ_›ti⁄s
.
x_Êag_exå™eous_£micﬁ⁄


	)

505 #ifde‡
GENERATOR_FILE


506 
Êag_Áèl_îr‹s
;

508 
	gx_Êag_Áèl_îr‹s
;

509 
	#Êag_Áèl_îr‹s
 
globÆ_›ti⁄s
.
x_Êag_Áèl_îr‹s


	)

511 #ifde‡
GENERATOR_FILE


512 
w¨n_Êﬂt_c⁄vîsi⁄
;

514 
	gx_w¨n_Êﬂt_c⁄vîsi⁄
;

515 
	#w¨n_Êﬂt_c⁄vîsi⁄
 
globÆ_›ti⁄s
.
x_w¨n_Êﬂt_c⁄vîsi⁄


	)

517 #ifde‡
GENERATOR_FILE


518 
w¨n_Êﬂt_equÆ
;

520 
	gx_w¨n_Êﬂt_equÆ
;

521 
	#w¨n_Êﬂt_equÆ
 
globÆ_›ti⁄s
.
x_w¨n_Êﬂt_equÆ


	)

523 #ifde‡
GENERATOR_FILE


524 
w¨n_f‹m©_c⁄èös_nul
;

526 
	gx_w¨n_f‹m©_c⁄èös_nul
;

527 
	#w¨n_f‹m©_c⁄èös_nul
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©_c⁄èös_nul


	)

529 #ifde‡
GENERATOR_FILE


530 
w¨n_f‹m©_exåa_¨gs
;

532 
	gx_w¨n_f‹m©_exåa_¨gs
;

533 
	#w¨n_f‹m©_exåa_¨gs
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©_exåa_¨gs


	)

535 #ifde‡
GENERATOR_FILE


536 
w¨n_f‹m©_n⁄lôîÆ
;

538 
	gx_w¨n_f‹m©_n⁄lôîÆ
;

539 
	#w¨n_f‹m©_n⁄lôîÆ
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©_n⁄lôîÆ


	)

541 #ifde‡
GENERATOR_FILE


542 
w¨n_f‹m©_£curôy
;

544 
	gx_w¨n_f‹m©_£curôy
;

545 
	#w¨n_f‹m©_£curôy
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©_£curôy


	)

547 #ifde‡
GENERATOR_FILE


548 
w¨n_f‹m©_y2k
;

550 
	gx_w¨n_f‹m©_y2k
;

551 
	#w¨n_f‹m©_y2k
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©_y2k


	)

553 #ifde‡
GENERATOR_FILE


554 
w¨n_f‹m©_zîo_Àngth
;

556 
	gx_w¨n_f‹m©_zîo_Àngth
;

557 
	#w¨n_f‹m©_zîo_Àngth
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©_zîo_Àngth


	)

559 #ifde‡
GENERATOR_FILE


560 
w¨n_f‹m©
;

562 
	gx_w¨n_f‹m©
;

563 
	#w¨n_f‹m©
 
globÆ_›ti⁄s
.
x_w¨n_f‹m©


	)

565 #ifde‡
GENERATOR_FILE


566 
w¨n_‰ì_n⁄hóp_obje˘
;

568 
	gx_w¨n_‰ì_n⁄hóp_obje˘
;

569 
	#w¨n_‰ì_n⁄hóp_obje˘
 
globÆ_›ti⁄s
.
x_w¨n_‰ì_n⁄hóp_obje˘


	)

571 #ifde‡
GENERATOR_FILE


572 
w¨n_ign‹ed_quÆifõrs
;

574 
	gx_w¨n_ign‹ed_quÆifõrs
;

575 
	#w¨n_ign‹ed_quÆifõrs
 
globÆ_›ti⁄s
.
x_w¨n_ign‹ed_quÆifõrs


	)

577 #ifde‡
GENERATOR_FILE


578 
w¨n_im∂icô
;

580 
	gx_w¨n_im∂icô
;

581 
	#w¨n_im∂icô
 
globÆ_›ti⁄s
.
x_w¨n_im∂icô


	)

583 #ifde‡
GENERATOR_FILE


584 
w¨n_im∂icô_fun˘i⁄_de˛¨©i⁄
;

586 
	gx_w¨n_im∂icô_fun˘i⁄_de˛¨©i⁄
;

587 
	#w¨n_im∂icô_fun˘i⁄_de˛¨©i⁄
 
globÆ_›ti⁄s
.
x_w¨n_im∂icô_fun˘i⁄_de˛¨©i⁄


	)

589 #ifde‡
GENERATOR_FILE


590 
w¨n_im∂icô_öt
;

592 
	gx_w¨n_im∂icô_öt
;

593 
	#w¨n_im∂icô_öt
 
globÆ_›ti⁄s
.
x_w¨n_im∂icô_öt


	)

595 #ifde‡
GENERATOR_FILE


596 
w¨n_öh_v¨_˘‹
;

598 
	gx_w¨n_öh_v¨_˘‹
;

599 
	#w¨n_öh_v¨_˘‹
 
globÆ_›ti⁄s
.
x_w¨n_öh_v¨_˘‹


	)

601 #ifde‡
GENERATOR_FILE


602 
w¨n_öô_£lf
;

604 
	gx_w¨n_öô_£lf
;

605 
	#w¨n_öô_£lf
 
globÆ_›ti⁄s
.
x_w¨n_öô_£lf


	)

607 #ifde‡
GENERATOR_FILE


608 
w¨n_ölöe
;

610 
	gx_w¨n_ölöe
;

611 
	#w¨n_ölöe
 
globÆ_›ti⁄s
.
x_w¨n_ölöe


	)

613 #ifde‡
GENERATOR_FILE


614 
w¨n_öt_to_poöãr_ˇ°
;

616 
	gx_w¨n_öt_to_poöãr_ˇ°
;

617 
	#w¨n_öt_to_poöãr_ˇ°
 
globÆ_›ti⁄s
.
x_w¨n_öt_to_poöãr_ˇ°


	)

619 #ifde‡
GENERATOR_FILE


620 
w¨n_övÆid_mem‹y_modñ
;

622 
	gx_w¨n_övÆid_mem‹y_modñ
;

623 
	#w¨n_övÆid_mem‹y_modñ
 
globÆ_›ti⁄s
.
x_w¨n_övÆid_mem‹y_modñ


	)

625 #ifde‡
GENERATOR_FILE


626 
w¨n_övÆid_off£tof
;

628 
	gx_w¨n_övÆid_off£tof
;

629 
	#w¨n_övÆid_off£tof
 
globÆ_›ti⁄s
.
x_w¨n_övÆid_off£tof


	)

631 #ifde‡
GENERATOR_FILE


632 
w¨n_jump_mis£s_öô
;

634 
	gx_w¨n_jump_mis£s_öô
;

635 
	#w¨n_jump_mis£s_öô
 
globÆ_›ti⁄s
.
x_w¨n_jump_mis£s_öô


	)

637 #ifde‡
GENERATOR_FILE


638 
w¨n_logiˇl_›
;

640 
	gx_w¨n_logiˇl_›
;

641 
	#w¨n_logiˇl_›
 
globÆ_›ti⁄s
.
x_w¨n_logiˇl_›


	)

643 #ifde‡
GENERATOR_FILE


644 
w¨n_l⁄g_l⁄g
;

646 
	gx_w¨n_l⁄g_l⁄g
;

647 
	#w¨n_l⁄g_l⁄g
 
globÆ_›ti⁄s
.
x_w¨n_l⁄g_l⁄g


	)

649 #ifde‡
GENERATOR_FILE


650 
w¨n_maö
;

652 
	gx_w¨n_maö
;

653 
	#w¨n_maö
 
globÆ_›ti⁄s
.
x_w¨n_maö


	)

655 #ifde‡
GENERATOR_FILE


656 
w¨n_maybe_unöôülized
;

658 
	gx_w¨n_maybe_unöôülized
;

659 
	#w¨n_maybe_unöôülized
 
globÆ_›ti⁄s
.
x_w¨n_maybe_unöôülized


	)

661 #ifde‡
GENERATOR_FILE


662 
w¨n_missög_bø˚s
;

664 
	gx_w¨n_missög_bø˚s
;

665 
	#w¨n_missög_bø˚s
 
globÆ_›ti⁄s
.
x_w¨n_missög_bø˚s


	)

667 #ifde‡
GENERATOR_FILE


668 
w¨n_missög_de˛¨©i⁄s
;

670 
	gx_w¨n_missög_de˛¨©i⁄s
;

671 
	#w¨n_missög_de˛¨©i⁄s
 
globÆ_›ti⁄s
.
x_w¨n_missög_de˛¨©i⁄s


	)

673 #ifde‡
GENERATOR_FILE


674 
w¨n_missög_fõld_öôülizîs
;

676 
	gx_w¨n_missög_fõld_öôülizîs
;

677 
	#w¨n_missög_fõld_öôülizîs
 
globÆ_›ti⁄s
.
x_w¨n_missög_fõld_öôülizîs


	)

679 #ifde‡
GENERATOR_FILE


680 
w¨n_missög_∑ømëî_ty≥
;

682 
	gx_w¨n_missög_∑ømëî_ty≥
;

683 
	#w¨n_missög_∑ømëî_ty≥
 
globÆ_›ti⁄s
.
x_w¨n_missög_∑ømëî_ty≥


	)

685 #ifde‡
GENERATOR_FILE


686 
w¨n_missög_¥ŸŸy≥s
;

688 
	gx_w¨n_missög_¥ŸŸy≥s
;

689 
	#w¨n_missög_¥ŸŸy≥s
 
globÆ_›ti⁄s
.
x_w¨n_missög_¥ŸŸy≥s


	)

691 #ifde‡
GENERATOR_FILE


692 
w¨n_«ºowög
;

694 
	gx_w¨n_«ºowög
;

695 
	#w¨n_«ºowög
 
globÆ_›ti⁄s
.
x_w¨n_«ºowög


	)

697 #ifde‡
GENERATOR_FILE


698 
w¨n_√°ed_exã∫s
;

700 
	gx_w¨n_√°ed_exã∫s
;

701 
	#w¨n_√°ed_exã∫s
 
globÆ_›ti⁄s
.
x_w¨n_√°ed_exã∫s


	)

703 #ifde‡
GENERATOR_FILE


704 
w¨n_n€x˚±
;

706 
	gx_w¨n_n€x˚±
;

707 
	#w¨n_n€x˚±
 
globÆ_›ti⁄s
.
x_w¨n_n€x˚±


	)

709 #ifde‡
GENERATOR_FILE


710 
w¨n_n⁄ãm∂©e_‰õnd
;

712 
	gx_w¨n_n⁄ãm∂©e_‰õnd
;

713 
	#w¨n_n⁄ãm∂©e_‰õnd
 
globÆ_›ti⁄s
.
x_w¨n_n⁄ãm∂©e_‰õnd


	)

715 #ifde‡
GENERATOR_FILE


716 
w¨n_n⁄vdt‹
;

718 
	gx_w¨n_n⁄vdt‹
;

719 
	#w¨n_n⁄vdt‹
 
globÆ_›ti⁄s
.
x_w¨n_n⁄vdt‹


	)

721 #ifde‡
GENERATOR_FILE


722 
w¨n_n⁄nuŒ
;

724 
	gx_w¨n_n⁄nuŒ
;

725 
	#w¨n_n⁄nuŒ
 
globÆ_›ti⁄s
.
x_w¨n_n⁄nuŒ


	)

727 #ifde‡
GENERATOR_FILE


728 
w¨n_ﬁd_°yÀ_ˇ°
;

730 
	gx_w¨n_ﬁd_°yÀ_ˇ°
;

731 
	#w¨n_ﬁd_°yÀ_ˇ°
 
globÆ_›ti⁄s
.
x_w¨n_ﬁd_°yÀ_ˇ°


	)

733 #ifde‡
GENERATOR_FILE


734 
w¨n_ﬁd_°yÀ_de˛¨©i⁄
;

736 
	gx_w¨n_ﬁd_°yÀ_de˛¨©i⁄
;

737 
	#w¨n_ﬁd_°yÀ_de˛¨©i⁄
 
globÆ_›ti⁄s
.
x_w¨n_ﬁd_°yÀ_de˛¨©i⁄


	)

739 #ifde‡
GENERATOR_FILE


740 
w¨n_ﬁd_°yÀ_deföôi⁄
;

742 
	gx_w¨n_ﬁd_°yÀ_deföôi⁄
;

743 
	#w¨n_ﬁd_°yÀ_deföôi⁄
 
globÆ_›ti⁄s
.
x_w¨n_ﬁd_°yÀ_deföôi⁄


	)

745 #ifde‡
GENERATOR_FILE


746 
w¨n_›ímp_simd
;

748 
	gx_w¨n_›ímp_simd
;

749 
	#w¨n_›ímp_simd
 
globÆ_›ti⁄s
.
x_w¨n_›ímp_simd


	)

751 #ifde‡
GENERATOR_FILE


752 
Êag_√wî
;

754 
	gx_Êag_√wî
;

755 
	#Êag_√wî
 
globÆ_›ti⁄s
.
x_Êag_√wî


	)

757 #ifde‡
GENERATOR_FILE


758 
w¨n_ovîÊow
;

760 
	gx_w¨n_ovîÊow
;

761 
	#w¨n_ovîÊow
 
globÆ_›ti⁄s
.
x_w¨n_ovîÊow


	)

763 #ifde‡
GENERATOR_FILE


764 
w¨n_ovîÀngth_°rögs
;

766 
	gx_w¨n_ovîÀngth_°rögs
;

767 
	#w¨n_ovîÀngth_°rögs
 
globÆ_›ti⁄s
.
x_w¨n_ovîÀngth_°rögs


	)

769 #ifde‡
GENERATOR_FILE


770 
w¨n_ovîlﬂded_vútuÆ
;

772 
	gx_w¨n_ovîlﬂded_vútuÆ
;

773 
	#w¨n_ovîlﬂded_vútuÆ
 
globÆ_›ti⁄s
.
x_w¨n_ovîlﬂded_vútuÆ


	)

775 #ifde‡
GENERATOR_FILE


776 
w¨n_ovîride_öô
;

778 
	gx_w¨n_ovîride_öô
;

779 
	#w¨n_ovîride_öô
 
globÆ_›ti⁄s
.
x_w¨n_ovîride_öô


	)

781 #ifde‡
GENERATOR_FILE


782 
w¨n_∑cked
;

784 
	gx_w¨n_∑cked
;

785 
	#w¨n_∑cked
 
globÆ_›ti⁄s
.
x_w¨n_∑cked


	)

787 #ifde‡
GENERATOR_FILE


788 
w¨n_∑cked_bôfõld_com∑t
;

790 
	gx_w¨n_∑cked_bôfõld_com∑t
;

791 
	#w¨n_∑cked_bôfõld_com∑t
 
globÆ_›ti⁄s
.
x_w¨n_∑cked_bôfõld_com∑t


	)

793 #ifde‡
GENERATOR_FILE


794 
w¨n_∑dded
;

796 
	gx_w¨n_∑dded
;

797 
	#w¨n_∑dded
 
globÆ_›ti⁄s
.
x_w¨n_∑dded


	)

799 #ifde‡
GENERATOR_FILE


800 
w¨n_∑ª¡he£s
;

802 
	gx_w¨n_∑ª¡he£s
;

803 
	#w¨n_∑ª¡he£s
 
globÆ_›ti⁄s
.
x_w¨n_∑ª¡he£s


	)

805 #ifde‡
GENERATOR_FILE


806 
≥d™tic
;

808 
	gx_≥d™tic
;

809 
	#≥d™tic
 
globÆ_›ti⁄s
.
x_≥d™tic


	)

811 #ifde‡
GENERATOR_FILE


812 
w¨n_pmf2±r
;

814 
	gx_w¨n_pmf2±r
;

815 
	#w¨n_pmf2±r
 
globÆ_›ti⁄s
.
x_w¨n_pmf2±r


	)

817 #ifde‡
GENERATOR_FILE


818 
w¨n_poöãr_¨ôh
;

820 
	gx_w¨n_poöãr_¨ôh
;

821 
	#w¨n_poöãr_¨ôh
 
globÆ_›ti⁄s
.
x_w¨n_poöãr_¨ôh


	)

823 #ifde‡
GENERATOR_FILE


824 
w¨n_poöãr_sign
;

826 
	gx_w¨n_poöãr_sign
;

827 
	#w¨n_poöãr_sign
 
globÆ_›ti⁄s
.
x_w¨n_poöãr_sign


	)

829 #ifde‡
GENERATOR_FILE


830 
w¨n_poöãr_to_öt_ˇ°
;

832 
	gx_w¨n_poöãr_to_öt_ˇ°
;

833 
	#w¨n_poöãr_to_öt_ˇ°
 
globÆ_›ti⁄s
.
x_w¨n_poöãr_to_öt_ˇ°


	)

835 #ifde‡
GENERATOR_FILE


836 
w¨n_¥agmas
;

838 
	gx_w¨n_¥agmas
;

839 
	#w¨n_¥agmas
 
globÆ_›ti⁄s
.
x_w¨n_¥agmas


	)

841 #ifde‡
GENERATOR_FILE


842 
w¨n_¥›îty_assign_deÁu…
;

844 
	gx_w¨n_¥›îty_assign_deÁu…
;

845 
	#w¨n_¥›îty_assign_deÁu…
 
globÆ_›ti⁄s
.
x_w¨n_¥›îty_assign_deÁu…


	)

847 #ifde‡
GENERATOR_FILE


848 
w¨n_¥Ÿocﬁ
;

850 
	gx_w¨n_¥Ÿocﬁ
;

851 
	#w¨n_¥Ÿocﬁ
 
globÆ_›ti⁄s
.
x_w¨n_¥Ÿocﬁ


	)

853 #ifde‡
GENERATOR_FILE


854 
w¨n_pßbi
;

856 
	gx_w¨n_pßbi
;

857 
	#w¨n_pßbi
 
globÆ_›ti⁄s
.
x_w¨n_pßbi


	)

859 #ifde‡
GENERATOR_FILE


860 
w¨n_ªdund™t_de˛s
;

862 
	gx_w¨n_ªdund™t_de˛s
;

863 
	#w¨n_ªdund™t_de˛s
 
globÆ_›ti⁄s
.
x_w¨n_ªdund™t_de˛s


	)

865 #ifde‡
GENERATOR_FILE


866 
Êag_ªdund™t
;

868 
	gx_Êag_ªdund™t
;

869 
	#Êag_ªdund™t
 
globÆ_›ti⁄s
.
x_Êag_ªdund™t


	)

871 #ifde‡
GENERATOR_FILE


872 
w¨n_ª‹dî
;

874 
	gx_w¨n_ª‹dî
;

875 
	#w¨n_ª‹dî
 
globÆ_›ti⁄s
.
x_w¨n_ª‹dî


	)

877 #ifde‡
GENERATOR_FILE


878 
w¨n_ªtu∫_loˇl_addr
;

880 
	gx_w¨n_ªtu∫_loˇl_addr
;

881 
	#w¨n_ªtu∫_loˇl_addr
 
globÆ_›ti⁄s
.
x_w¨n_ªtu∫_loˇl_addr


	)

883 #ifde‡
GENERATOR_FILE


884 
w¨n_ªtu∫_ty≥
;

886 
	gx_w¨n_ªtu∫_ty≥
;

887 
	#w¨n_ªtu∫_ty≥
 
globÆ_›ti⁄s
.
x_w¨n_ªtu∫_ty≥


	)

889 #ifde‡
GENERATOR_FILE


890 
w¨n_£À˘‹
;

892 
	gx_w¨n_£À˘‹
;

893 
	#w¨n_£À˘‹
 
globÆ_›ti⁄s
.
x_w¨n_£À˘‹


	)

895 #ifde‡
GENERATOR_FILE


896 
w¨n_£quí˚_poöt
;

898 
	gx_w¨n_£quí˚_poöt
;

899 
	#w¨n_£quí˚_poöt
 
globÆ_›ti⁄s
.
x_w¨n_£quí˚_poöt


	)

901 #ifde‡
GENERATOR_FILE


902 
w¨n_shadow
;

904 
	gx_w¨n_shadow
;

905 
	#w¨n_shadow
 
globÆ_›ti⁄s
.
x_w¨n_shadow


	)

907 #ifde‡
GENERATOR_FILE


908 
w¨n_sign_com∑ª
;

910 
	gx_w¨n_sign_com∑ª
;

911 
	#w¨n_sign_com∑ª
 
globÆ_›ti⁄s
.
x_w¨n_sign_com∑ª


	)

913 #ifde‡
GENERATOR_FILE


914 
w¨n_sign_c⁄vîsi⁄
;

916 
	gx_w¨n_sign_c⁄vîsi⁄
;

917 
	#w¨n_sign_c⁄vîsi⁄
 
globÆ_›ti⁄s
.
x_w¨n_sign_c⁄vîsi⁄


	)

919 #ifde‡
GENERATOR_FILE


920 
w¨n_sign_¥omo
;

922 
	gx_w¨n_sign_¥omo
;

923 
	#w¨n_sign_¥omo
 
globÆ_›ti⁄s
.
x_w¨n_sign_¥omo


	)

925 #ifde‡
GENERATOR_FILE


926 
w¨n_sizeof_poöãr_memac˚ss
;

928 
	gx_w¨n_sizeof_poöãr_memac˚ss
;

929 
	#w¨n_sizeof_poöãr_memac˚ss
 
globÆ_›ti⁄s
.
x_w¨n_sizeof_poöãr_memac˚ss


	)

931 #ifde‡
GENERATOR_FILE


932 
w¨n_°ack_¥Ÿe˘
;

934 
	gx_w¨n_°ack_¥Ÿe˘
;

935 
	#w¨n_°ack_¥Ÿe˘
 
globÆ_›ti⁄s
.
x_w¨n_°ack_¥Ÿe˘


	)

937 #ifde‡
GENERATOR_FILE


938 
w¨n_°ack_ußge
;

940 
	gx_w¨n_°ack_ußge
;

941 
	#w¨n_°ack_ußge
 
globÆ_›ti⁄s
.
x_w¨n_°ack_ußge


	)

943 #ifde‡
GENERATOR_FILE


944 
w¨n_°ri˘_Æüsög
;

946 
	gx_w¨n_°ri˘_Æüsög
;

947 
	#w¨n_°ri˘_Æüsög
 
globÆ_›ti⁄s
.
x_w¨n_°ri˘_Æüsög


	)

949 #ifde‡
GENERATOR_FILE


950 
w¨n_°ri˘_nuŒ_£¡öñ
;

952 
	gx_w¨n_°ri˘_nuŒ_£¡öñ
;

953 
	#w¨n_°ri˘_nuŒ_£¡öñ
 
globÆ_›ti⁄s
.
x_w¨n_°ri˘_nuŒ_£¡öñ


	)

955 #ifde‡
GENERATOR_FILE


956 
w¨n_°ri˘_ovîÊow
;

958 
	gx_w¨n_°ri˘_ovîÊow
;

959 
	#w¨n_°ri˘_ovîÊow
 
globÆ_›ti⁄s
.
x_w¨n_°ri˘_ovîÊow


	)

961 #ifde‡
GENERATOR_FILE


962 
w¨n_°ri˘_¥ŸŸy≥s
;

964 
	gx_w¨n_°ri˘_¥ŸŸy≥s
;

965 
	#w¨n_°ri˘_¥ŸŸy≥s
 
globÆ_›ti⁄s
.
x_w¨n_°ri˘_¥ŸŸy≥s


	)

967 #ifde‡
GENERATOR_FILE


968 
w¨n_°ri˘_£À˘‹_m©ch
;

970 
	gx_w¨n_°ri˘_£À˘‹_m©ch
;

971 
	#w¨n_°ri˘_£À˘‹_m©ch
 
globÆ_›ti⁄s
.
x_w¨n_°ri˘_£À˘‹_m©ch


	)

973 #ifde‡
GENERATOR_FILE


974 
w¨n_sugge°_©åibuã_c⁄°
;

976 
	gx_w¨n_sugge°_©åibuã_c⁄°
;

977 
	#w¨n_sugge°_©åibuã_c⁄°
 
globÆ_›ti⁄s
.
x_w¨n_sugge°_©åibuã_c⁄°


	)

979 #ifde‡
GENERATOR_FILE


980 
w¨n_sugge°_©åibuã_f‹m©
;

982 
	gx_w¨n_sugge°_©åibuã_f‹m©
;

983 
	#w¨n_sugge°_©åibuã_f‹m©
 
globÆ_›ti⁄s
.
x_w¨n_sugge°_©åibuã_f‹m©


	)

985 #ifde‡
GENERATOR_FILE


986 
w¨n_sugge°_©åibuã_n‹ëu∫
;

988 
	gx_w¨n_sugge°_©åibuã_n‹ëu∫
;

989 
	#w¨n_sugge°_©åibuã_n‹ëu∫
 
globÆ_›ti⁄s
.
x_w¨n_sugge°_©åibuã_n‹ëu∫


	)

991 #ifde‡
GENERATOR_FILE


992 
w¨n_sugge°_©åibuã_puª
;

994 
	gx_w¨n_sugge°_©åibuã_puª
;

995 
	#w¨n_sugge°_©åibuã_puª
 
globÆ_›ti⁄s
.
x_w¨n_sugge°_©åibuã_puª


	)

997 #ifde‡
GENERATOR_FILE


998 
w¨n_swôch
;

1000 
	gx_w¨n_swôch
;

1001 
	#w¨n_swôch
 
globÆ_›ti⁄s
.
x_w¨n_swôch


	)

1003 #ifde‡
GENERATOR_FILE


1004 
w¨n_swôch_deÁu…
;

1006 
	gx_w¨n_swôch_deÁu…
;

1007 
	#w¨n_swôch_deÁu…
 
globÆ_›ti⁄s
.
x_w¨n_swôch_deÁu…


	)

1009 #ifde‡
GENERATOR_FILE


1010 
w¨n_swôch_íum
;

1012 
	gx_w¨n_swôch_íum
;

1013 
	#w¨n_swôch_íum
 
globÆ_›ti⁄s
.
x_w¨n_swôch_íum


	)

1015 #ifde‡
GENERATOR_FILE


1016 
w¨n_sync_«nd
;

1018 
	gx_w¨n_sync_«nd
;

1019 
	#w¨n_sync_«nd
 
globÆ_›ti⁄s
.
x_w¨n_sync_«nd


	)

1021 #ifde‡
GENERATOR_FILE


1022 
w¨n_sy¡h
;

1024 
	gx_w¨n_sy¡h
;

1025 
	#w¨n_sy¡h
 
globÆ_›ti⁄s
.
x_w¨n_sy¡h


	)

1027 #ifde‡
GENERATOR_FILE


1028 
w¨n_sy°em_hódîs
;

1030 
	gx_w¨n_sy°em_hódîs
;

1031 
	#w¨n_sy°em_hódîs
 
globÆ_›ti⁄s
.
x_w¨n_sy°em_hódîs


	)

1033 #ifde‡
GENERATOR_FILE


1034 
w¨n_åadôi⁄Æ
;

1036 
	gx_w¨n_åadôi⁄Æ
;

1037 
	#w¨n_åadôi⁄Æ
 
globÆ_›ti⁄s
.
x_w¨n_åadôi⁄Æ


	)

1039 #ifde‡
GENERATOR_FILE


1040 
w¨n_åadôi⁄Æ_c⁄vîsi⁄
;

1042 
	gx_w¨n_åadôi⁄Æ_c⁄vîsi⁄
;

1043 
	#w¨n_åadôi⁄Æ_c⁄vîsi⁄
 
globÆ_›ti⁄s
.
x_w¨n_åadôi⁄Æ_c⁄vîsi⁄


	)

1045 #ifde‡
GENERATOR_FILE


1046 
w¨n_åampﬁöes
;

1048 
	gx_w¨n_åampﬁöes
;

1049 
	#w¨n_åampﬁöes
 
globÆ_›ti⁄s
.
x_w¨n_åampﬁöes


	)

1051 #ifde‡
GENERATOR_FILE


1052 
w¨n_ty≥_limôs
;

1054 
	gx_w¨n_ty≥_limôs
;

1055 
	#w¨n_ty≥_limôs
 
globÆ_›ti⁄s
.
x_w¨n_ty≥_limôs


	)

1057 #ifde‡
GENERATOR_FILE


1058 
w¨n_unde˛¨ed_£À˘‹
;

1060 
	gx_w¨n_unde˛¨ed_£À˘‹
;

1061 
	#w¨n_unde˛¨ed_£À˘‹
 
globÆ_›ti⁄s
.
x_w¨n_unde˛¨ed_£À˘‹


	)

1063 #ifde‡
GENERATOR_FILE


1064 
w¨n_unöôülized
;

1066 
	gx_w¨n_unöôülized
;

1067 
	#w¨n_unöôülized
 
globÆ_›ti⁄s
.
x_w¨n_unöôülized


	)

1069 #ifde‡
GENERATOR_FILE


1070 
w¨n_unknown_¥agmas
;

1072 
	gx_w¨n_unknown_¥agmas
;

1073 
	#w¨n_unknown_¥agmas
 
globÆ_›ti⁄s
.
x_w¨n_unknown_¥agmas


	)

1075 #ifde‡
GENERATOR_FILE


1076 
w¨n_unß„_lo›_›timiz©i⁄s
;

1078 
	gx_w¨n_unß„_lo›_›timiz©i⁄s
;

1079 
	#w¨n_unß„_lo›_›timiz©i⁄s
 
globÆ_›ti⁄s
.
x_w¨n_unß„_lo›_›timiz©i⁄s


	)

1081 #ifde‡
GENERATOR_FILE


1082 
w¨n_unsuffixed_Êﬂt_c⁄°™ts
;

1084 
	gx_w¨n_unsuffixed_Êﬂt_c⁄°™ts
;

1085 
	#w¨n_unsuffixed_Êﬂt_c⁄°™ts
 
globÆ_›ti⁄s
.
x_w¨n_unsuffixed_Êﬂt_c⁄°™ts


	)

1087 #ifde‡
GENERATOR_FILE


1088 
w¨n_unu£d
;

1090 
	gx_w¨n_unu£d
;

1091 
	#w¨n_unu£d
 
globÆ_›ti⁄s
.
x_w¨n_unu£d


	)

1093 #ifde‡
GENERATOR_FILE


1094 
w¨n_unu£d_but_£t_∑ømëî
;

1096 
	gx_w¨n_unu£d_but_£t_∑ømëî
;

1097 
	#w¨n_unu£d_but_£t_∑ømëî
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_but_£t_∑ømëî


	)

1099 #ifde‡
GENERATOR_FILE


1100 
w¨n_unu£d_but_£t_v¨übÀ
;

1102 
	gx_w¨n_unu£d_but_£t_v¨übÀ
;

1103 
	#w¨n_unu£d_but_£t_v¨übÀ
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_but_£t_v¨übÀ


	)

1105 #ifde‡
GENERATOR_FILE


1106 
w¨n_unu£d_fun˘i⁄
;

1108 
	gx_w¨n_unu£d_fun˘i⁄
;

1109 
	#w¨n_unu£d_fun˘i⁄
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_fun˘i⁄


	)

1111 #ifde‡
GENERATOR_FILE


1112 
w¨n_unu£d_œbñ
;

1114 
	gx_w¨n_unu£d_œbñ
;

1115 
	#w¨n_unu£d_œbñ
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_œbñ


	)

1117 #ifde‡
GENERATOR_FILE


1118 
w¨n_unu£d_loˇl_ty≥defs
;

1120 
	gx_w¨n_unu£d_loˇl_ty≥defs
;

1121 
	#w¨n_unu£d_loˇl_ty≥defs
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_loˇl_ty≥defs


	)

1123 #ifde‡
GENERATOR_FILE


1124 
˝p_w¨n_unu£d_ma¸os
;

1126 
	gx_˝p_w¨n_unu£d_ma¸os
;

1127 
	#˝p_w¨n_unu£d_ma¸os
 
globÆ_›ti⁄s
.
x_˝p_w¨n_unu£d_ma¸os


	)

1129 #ifde‡
GENERATOR_FILE


1130 
w¨n_unu£d_∑ømëî
;

1132 
	gx_w¨n_unu£d_∑ømëî
;

1133 
	#w¨n_unu£d_∑ømëî
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_∑ømëî


	)

1135 #ifde‡
GENERATOR_FILE


1136 
w¨n_unu£d_ªsu…
;

1138 
	gx_w¨n_unu£d_ªsu…
;

1139 
	#w¨n_unu£d_ªsu…
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_ªsu…


	)

1141 #ifde‡
GENERATOR_FILE


1142 
w¨n_unu£d_vÆue
;

1144 
	gx_w¨n_unu£d_vÆue
;

1145 
	#w¨n_unu£d_vÆue
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_vÆue


	)

1147 #ifde‡
GENERATOR_FILE


1148 
w¨n_unu£d_v¨übÀ
;

1150 
	gx_w¨n_unu£d_v¨übÀ
;

1151 
	#w¨n_unu£d_v¨übÀ
 
globÆ_›ti⁄s
.
x_w¨n_unu£d_v¨übÀ


	)

1153 #ifde‡
GENERATOR_FILE


1154 
w¨n_u£Àss_ˇ°
;

1156 
	gx_w¨n_u£Àss_ˇ°
;

1157 
	#w¨n_u£Àss_ˇ°
 
globÆ_›ti⁄s
.
x_w¨n_u£Àss_ˇ°


	)

1159 #ifde‡
GENERATOR_FILE


1160 
w¨n_v¨¨gs
;

1162 
	gx_w¨n_v¨¨gs
;

1163 
	#w¨n_v¨¨gs
 
globÆ_›ti⁄s
.
x_w¨n_v¨¨gs


	)

1165 #ifde‡
GENERATOR_FILE


1166 
˝p_w¨n_v¨üdic_ma¸os
;

1168 
	gx_˝p_w¨n_v¨üdic_ma¸os
;

1169 
	#˝p_w¨n_v¨üdic_ma¸os
 
globÆ_›ti⁄s
.
x_˝p_w¨n_v¨üdic_ma¸os


	)

1171 #ifde‡
GENERATOR_FILE


1172 
w¨n_ve˘‹_›î©i⁄_≥rf‹m™˚
;

1174 
	gx_w¨n_ve˘‹_›î©i⁄_≥rf‹m™˚
;

1175 
	#w¨n_ve˘‹_›î©i⁄_≥rf‹m™˚
 
globÆ_›ti⁄s
.
x_w¨n_ve˘‹_›î©i⁄_≥rf‹m™˚


	)

1177 #ifde‡
GENERATOR_FILE


1178 
w¨n_vútuÆ_move_assign
;

1180 
	gx_w¨n_vútuÆ_move_assign
;

1181 
	#w¨n_vútuÆ_move_assign
 
globÆ_›ti⁄s
.
x_w¨n_vútuÆ_move_assign


	)

1183 #ifde‡
GENERATOR_FILE


1184 
w¨n_vœ
;

1186 
	gx_w¨n_vœ
;

1187 
	#w¨n_vœ
 
globÆ_›ti⁄s
.
x_w¨n_vœ


	)

1189 #ifde‡
GENERATOR_FILE


1190 
w¨n_vﬁ©ûe_ªgi°î_v¨
;

1192 
	gx_w¨n_vﬁ©ûe_ªgi°î_v¨
;

1193 
	#w¨n_vﬁ©ûe_ªgi°î_v¨
 
globÆ_›ti⁄s
.
x_w¨n_vﬁ©ûe_ªgi°î_v¨


	)

1195 #ifde‡
GENERATOR_FILE


1196 
w¨n_wrôe_°rögs
;

1198 
	gx_w¨n_wrôe_°rögs
;

1199 
	#w¨n_wrôe_°rögs
 
globÆ_›ti⁄s
.
x_w¨n_wrôe_°rögs


	)

1201 #ifde‡
GENERATOR_FILE


1202 
w¨n_zîo_as_nuŒ_poöãr_c⁄°™t
;

1204 
	gx_w¨n_zîo_as_nuŒ_poöãr_c⁄°™t
;

1205 
	#w¨n_zîo_as_nuŒ_poöãr_c⁄°™t
 
globÆ_›ti⁄s
.
x_w¨n_zîo_as_nuŒ_poöãr_c⁄°™t


	)

1207 #ifde‡
GENERATOR_FILE


1208 c⁄° *
aux_öfo_fûe_«me
;

1210 c⁄° *
	gx_aux_öfo_fûe_«me
;

1211 
	#aux_öfo_fûe_«me
 
globÆ_›ti⁄s
.
x_aux_öfo_fûe_«me


	)

1213 #ifde‡
GENERATOR_FILE


1214 c⁄° *
aux_ba£_«me
;

1216 c⁄° *
	gx_aux_ba£_«me
;

1217 
	#aux_ba£_«me
 
globÆ_›ti⁄s
.
x_aux_ba£_«me


	)

1219 #ifde‡
GENERATOR_FILE


1220 c⁄° *
dump_ba£_«me
;

1222 c⁄° *
	gx_dump_ba£_«me
;

1223 
	#dump_ba£_«me
 
globÆ_›ti⁄s
.
x_dump_ba£_«me


	)

1225 #ifde‡
GENERATOR_FILE


1226 c⁄° *
dump_dú_«me
;

1228 c⁄° *
	gx_dump_dú_«me
;

1229 
	#dump_dú_«me
 
globÆ_›ti⁄s
.
x_dump_dú_«me


	)

1231 #ifde‡
GENERATOR_FILE


1232 
Êag_pic
;

1234 
	gx_Êag_pic
;

1235 
	#Êag_pic
 
globÆ_›ti⁄s
.
x_Êag_pic


	)

1237 #ifde‡
GENERATOR_FILE


1238 
Êag_põ
;

1240 
	gx_Êag_põ
;

1241 
	#Êag_põ
 
globÆ_›ti⁄s
.
x_Êag_põ


	)

1243 #ifde‡
GENERATOR_FILE


1244 
Êag_abi_vîsi⁄
;

1246 
	gx_Êag_abi_vîsi⁄
;

1247 
	#Êag_abi_vîsi⁄
 
globÆ_›ti⁄s
.
x_Êag_abi_vîsi⁄


	)

1249 #ifde‡
GENERATOR_FILE


1250 
Êag_ac˚ss_c⁄åﬁ
;

1252 
	gx_Êag_ac˚ss_c⁄åﬁ
;

1253 
	#Êag_ac˚ss_c⁄åﬁ
 
globÆ_›ti⁄s
.
x_Êag_ac˚ss_c⁄åﬁ


	)

1255 #ifde‡
GENERATOR_FILE


1256 c⁄° *
ada_•ecs_∑ª¡
;

1258 c⁄° *
	gx_ada_•ecs_∑ª¡
;

1259 
	#ada_•ecs_∑ª¡
 
globÆ_›ti⁄s
.
x_ada_•ecs_∑ª¡


	)

1261 #ifde‡
GENERATOR_FILE


1262 
Êag_aggªssive_lo›_›timiz©i⁄s
;

1264 
	gx_Êag_aggªssive_lo›_›timiz©i⁄s
;

1265 
	#Êag_aggªssive_lo›_›timiz©i⁄s
 
globÆ_›ti⁄s
.
x_Êag_aggªssive_lo›_›timiz©i⁄s


	)

1267 #ifde‡
GENERATOR_FILE


1268 
Æign_fun˘i⁄s
;

1270 
	gx_Æign_fun˘i⁄s
;

1271 
	#Æign_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Æign_fun˘i⁄s


	)

1273 #ifde‡
GENERATOR_FILE


1274 
Æign_jumps
;

1276 
	gx_Æign_jumps
;

1277 
	#Æign_jumps
 
globÆ_›ti⁄s
.
x_Æign_jumps


	)

1279 #ifde‡
GENERATOR_FILE


1280 
Æign_œbñs
;

1282 
	gx_Æign_œbñs
;

1283 
	#Æign_œbñs
 
globÆ_›ti⁄s
.
x_Æign_œbñs


	)

1285 #ifde‡
GENERATOR_FILE


1286 
Æign_lo›s
;

1288 
	gx_Æign_lo›s
;

1289 
	#Æign_lo›s
 
globÆ_›ti⁄s
.
x_Æign_lo›s


	)

1291 #ifde‡
GENERATOR_FILE


1292 
Êag_Ælow_∑ømëîÀss_v¨üdic_fun˘i⁄s
;

1294 
	gx_Êag_Ælow_∑ømëîÀss_v¨üdic_fun˘i⁄s
;

1295 
	#Êag_Ælow_∑ømëîÀss_v¨üdic_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_Ælow_∑ømëîÀss_v¨üdic_fun˘i⁄s


	)

1297 #ifde‡
GENERATOR_FILE


1298 
Êag_no_asm
;

1300 
	gx_Êag_no_asm
;

1301 
	#Êag_no_asm
 
globÆ_›ti⁄s
.
x_Êag_no_asm


	)

1303 #ifde‡
GENERATOR_FILE


1304 
Êag_as£π
;

1306 
	gx_Êag_as£π
;

1307 
	#Êag_as£π
 
globÆ_›ti⁄s
.
x_Êag_as£π


	)

1309 #ifde‡
GENERATOR_FILE


1310 
Êag_assocütive_m©h
;

1312 
	gx_Êag_assocütive_m©h
;

1313 
	#Êag_assocütive_m©h
 
globÆ_›ti⁄s
.
x_Êag_assocütive_m©h


	)

1315 #ifde‡
GENERATOR_FILE


1316 
Êag_asynchr⁄ous_unwöd_èbÀs
;

1318 
	gx_Êag_asynchr⁄ous_unwöd_èbÀs
;

1319 
	#Êag_asynchr⁄ous_unwöd_èbÀs
 
globÆ_›ti⁄s
.
x_Êag_asynchr⁄ous_unwöd_èbÀs


	)

1321 #ifde‡
GENERATOR_FILE


1322 
Êag_auto_öc_dec
;

1324 
	gx_Êag_auto_öc_dec
;

1325 
	#Êag_auto_öc_dec
 
globÆ_›ti⁄s
.
x_Êag_auto_öc_dec


	)

1327 #ifde‡
GENERATOR_FILE


1328 
Êag_boŸ°øp_˛as£s
;

1330 
	gx_Êag_boŸ°øp_˛as£s
;

1331 
	#Êag_boŸ°øp_˛as£s
 
globÆ_›ti⁄s
.
x_Êag_boŸ°øp_˛as£s


	)

1333 #ifde‡
GENERATOR_FILE


1334 
Êag_bounds_check
;

1336 
	gx_Êag_bounds_check
;

1337 
	#Êag_bounds_check
 
globÆ_›ti⁄s
.
x_Êag_bounds_check


	)

1339 #ifde‡
GENERATOR_FILE


1340 
Êag_bønch_⁄_cou¡_ªg
;

1342 
	gx_Êag_bønch_⁄_cou¡_ªg
;

1343 
	#Êag_bønch_⁄_cou¡_ªg
 
globÆ_›ti⁄s
.
x_Êag_bønch_⁄_cou¡_ªg


	)

1345 #ifde‡
GENERATOR_FILE


1346 
Êag_bønch_¥obabûôõs
;

1348 
	gx_Êag_bønch_¥obabûôõs
;

1349 
	#Êag_bønch_¥obabûôõs
 
globÆ_›ti⁄s
.
x_Êag_bønch_¥obabûôõs


	)

1351 #ifde‡
GENERATOR_FILE


1352 
Êag_bønch_èrgë_lﬂd_›timize
;

1354 
	gx_Êag_bønch_èrgë_lﬂd_›timize
;

1355 
	#Êag_bønch_èrgë_lﬂd_›timize
 
globÆ_›ti⁄s
.
x_Êag_bønch_èrgë_lﬂd_›timize


	)

1357 #ifde‡
GENERATOR_FILE


1358 
Êag_bønch_èrgë_lﬂd_›timize2
;

1360 
	gx_Êag_bønch_èrgë_lﬂd_›timize2
;

1361 
	#Êag_bønch_èrgë_lﬂd_›timize2
 
globÆ_›ti⁄s
.
x_Êag_bønch_èrgë_lﬂd_›timize2


	)

1363 #ifde‡
GENERATOR_FILE


1364 
Êag_bå_bb_ex˛usive
;

1366 
	gx_Êag_bå_bb_ex˛usive
;

1367 
	#Êag_bå_bb_ex˛usive
 
globÆ_›ti⁄s
.
x_Êag_bå_bb_ex˛usive


	)

1369 #ifde‡
GENERATOR_FILE


1370 
Êag_buûdög_libgcc
;

1372 
	gx_Êag_buûdög_libgcc
;

1373 
	#Êag_buûdög_libgcc
 
globÆ_›ti⁄s
.
x_Êag_buûdög_libgcc


	)

1375 #ifde‡
GENERATOR_FILE


1376 
Êag_no_buûtö
;

1378 
	gx_Êag_no_buûtö
;

1379 
	#Êag_no_buûtö
 
globÆ_›ti⁄s
.
x_Êag_no_buûtö


	)

1381 #ifde‡
GENERATOR_FILE


1382 *
comm⁄_de„ºed_›ti⁄s
;

1384 *
	gx_comm⁄_de„ºed_›ti⁄s
;

1385 
	#comm⁄_de„ºed_›ti⁄s
 
globÆ_›ti⁄s
.
x_comm⁄_de„ºed_›ti⁄s


	)

1387 #ifde‡
GENERATOR_FILE


1388 
Êag_ˇŒî_ßves
;

1390 
	gx_Êag_ˇŒî_ßves
;

1391 
	#Êag_ˇŒî_ßves
 
globÆ_›ti⁄s
.
x_Êag_ˇŒî_ßves


	)

1393 #ifde‡
GENERATOR_FILE


1394 
Êag_check_d©a_dïs
;

1396 
	gx_Êag_check_d©a_dïs
;

1397 
	#Êag_check_d©a_dïs
 
globÆ_›ti⁄s
.
x_Êag_check_d©a_dïs


	)

1399 #ifde‡
GENERATOR_FILE


1400 
Êag_check_√w
;

1402 
	gx_Êag_check_√w
;

1403 
	#Êag_check_√w
 
globÆ_›ti⁄s
.
x_Êag_check_√w


	)

1405 #ifde‡
GENERATOR_FILE


1406 
Êag_check_ª„ªn˚s
;

1408 
	gx_Êag_check_ª„ªn˚s
;

1409 
	#Êag_check_ª„ªn˚s
 
globÆ_›ti⁄s
.
x_Êag_check_ª„ªn˚s


	)

1411 #ifde‡
GENERATOR_FILE


1412 
Êag_cûk∂us
;

1414 
	gx_Êag_cûk∂us
;

1415 
	#Êag_cûk∂us
 
globÆ_›ti⁄s
.
x_Êag_cûk∂us


	)

1417 #ifde‡
GENERATOR_FILE


1418 
Êag_comböe_°ack_adju°míts
;

1420 
	gx_Êag_comböe_°ack_adju°míts
;

1421 
	#Êag_comböe_°ack_adju°míts
 
globÆ_›ti⁄s
.
x_Êag_comböe_°ack_adju°míts


	)

1423 #ifde‡
GENERATOR_FILE


1424 
Êag_no_comm⁄
;

1426 
	gx_Êag_no_comm⁄
;

1427 
	#Êag_no_comm⁄
 
globÆ_›ti⁄s
.
x_Êag_no_comm⁄


	)

1429 #ifde‡
GENERATOR_FILE


1430 
Êag_com∑ª_debug
;

1432 
	gx_Êag_com∑ª_debug
;

1433 
	#Êag_com∑ª_debug
 
globÆ_›ti⁄s
.
x_Êag_com∑ª_debug


	)

1435 #ifde‡
GENERATOR_FILE


1436 c⁄° *
Êag_com∑ª_debug_›t
;

1438 c⁄° *
	gx_Êag_com∑ª_debug_›t
;

1439 
	#Êag_com∑ª_debug_›t
 
globÆ_›ti⁄s
.
x_Êag_com∑ª_debug_›t


	)

1441 #ifde‡
GENERATOR_FILE


1442 
Êag_com∑ª_ñim_a·î_ªlﬂd
;

1444 
	gx_Êag_com∑ª_ñim_a·î_ªlﬂd
;

1445 
	#Êag_com∑ª_ñim_a·î_ªlﬂd
 
globÆ_›ti⁄s
.
x_Êag_com∑ª_ñim_a·î_ªlﬂd


	)

1447 #ifde‡
GENERATOR_FILE


1448 
Êag_c⁄£rve_•a˚
;

1450 
	gx_Êag_c⁄£rve_•a˚
;

1451 
	#Êag_c⁄£rve_•a˚
 
globÆ_›ti⁄s
.
x_Êag_c⁄£rve_•a˚


	)

1453 #ifde‡
GENERATOR_FILE


1454 
Êag_c⁄£rve_°ack
;

1456 
	gx_Êag_c⁄£rve_°ack
;

1457 
	#Êag_c⁄£rve_°ack
 
globÆ_›ti⁄s
.
x_Êag_c⁄£rve_°ack


	)

1459 #ifde‡
GENERATOR_FILE


1460 
max_c⁄°ex¥_dïth
;

1462 
	gx_max_c⁄°ex¥_dïth
;

1463 
	#max_c⁄°ex¥_dïth
 
globÆ_›ti⁄s
.
x_max_c⁄°ex¥_dïth


	)

1465 #ifde‡
GENERATOR_FILE


1466 
Êag_˝r›_ªgi°îs
;

1468 
	gx_Êag_˝r›_ªgi°îs
;

1469 
	#Êag_˝r›_ªgi°îs
 
globÆ_›ti⁄s
.
x_Êag_˝r›_ªgi°îs


	)

1471 #ifde‡
GENERATOR_FILE


1472 
Êag_¸ossjumpög
;

1474 
	gx_Êag_¸ossjumpög
;

1475 
	#Êag_¸ossjumpög
 
globÆ_›ti⁄s
.
x_Êag_¸ossjumpög


	)

1477 #ifde‡
GENERATOR_FILE


1478 
Êag_c£_fﬁlow_jumps
;

1480 
	gx_Êag_c£_fﬁlow_jumps
;

1481 
	#Êag_c£_fﬁlow_jumps
 
globÆ_›ti⁄s
.
x_Êag_c£_fﬁlow_jumps


	)

1483 #ifde‡
GENERATOR_FILE


1484 
Êag_cx_f‹å™_ruÀs
;

1486 
	gx_Êag_cx_f‹å™_ruÀs
;

1487 
	#Êag_cx_f‹å™_ruÀs
 
globÆ_›ti⁄s
.
x_Êag_cx_f‹å™_ruÀs


	)

1489 #ifde‡
GENERATOR_FILE


1490 
Êag_cx_limôed_ønge
;

1492 
	gx_Êag_cx_limôed_ønge
;

1493 
	#Êag_cx_limôed_ønge
 
globÆ_›ti⁄s
.
x_Êag_cx_limôed_ønge


	)

1495 #ifde‡
GENERATOR_FILE


1496 
Êag_d©a_£˘i⁄s
;

1498 
	gx_Êag_d©a_£˘i⁄s
;

1499 
	#Êag_d©a_£˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_d©a_£˘i⁄s


	)

1501 #ifde‡
GENERATOR_FILE


1502 
Êag_d˚
;

1504 
	gx_Êag_d˚
;

1505 
	#Êag_d˚
 
globÆ_›ti⁄s
.
x_Êag_d˚


	)

1507 #ifde‡
GENERATOR_FILE


1508 
Êag_debug_ty≥s_£˘i⁄
;

1510 
	gx_Êag_debug_ty≥s_£˘i⁄
;

1511 
	#Êag_debug_ty≥s_£˘i⁄
 
globÆ_›ti⁄s
.
x_Êag_debug_ty≥s_£˘i⁄


	)

1513 #ifde‡
GENERATOR_FILE


1514 
Êag_de˛⁄e_˘‹_dt‹
;

1516 
	gx_Êag_de˛⁄e_˘‹_dt‹
;

1517 
	#Êag_de˛⁄e_˘‹_dt‹
 
globÆ_›ti⁄s
.
x_Êag_de˛⁄e_˘‹_dt‹


	)

1519 #ifde‡
GENERATOR_FILE


1520 
Êag_dedu˚_öô_li°
;

1522 
	gx_Êag_dedu˚_öô_li°
;

1523 
	#Êag_dedu˚_öô_li°
 
globÆ_›ti⁄s
.
x_Êag_dedu˚_öô_li°


	)

1525 #ifde‡
GENERATOR_FILE


1526 
Êag_de„r_p›
;

1528 
	gx_Êag_de„r_p›
;

1529 
	#Êag_de„r_p›
 
globÆ_›ti⁄s
.
x_Êag_de„r_p›


	)

1531 #ifde‡
GENERATOR_FILE


1532 
Êag_dñayed_bønch
;

1534 
	gx_Êag_dñayed_bønch
;

1535 
	#Êag_dñayed_bønch
 
globÆ_›ti⁄s
.
x_Êag_dñayed_bønch


	)

1537 #ifde‡
GENERATOR_FILE


1538 
Êag_dñëe_dód_ex˚±i⁄s
;

1540 
	gx_Êag_dñëe_dód_ex˚±i⁄s
;

1541 
	#Êag_dñëe_dód_ex˚±i⁄s
 
globÆ_›ti⁄s
.
x_Êag_dñëe_dód_ex˚±i⁄s


	)

1543 #ifde‡
GENERATOR_FILE


1544 
Êag_dñëe_nuŒ_poöãr_checks
;

1546 
	gx_Êag_dñëe_nuŒ_poöãr_checks
;

1547 
	#Êag_dñëe_nuŒ_poöãr_checks
 
globÆ_›ti⁄s
.
x_Êag_dñëe_nuŒ_poöãr_checks


	)

1549 #ifde‡
GENERATOR_FILE


1550 
Êag_devútuÆize
;

1552 
	gx_Êag_devútuÆize
;

1553 
	#Êag_devútuÆize
 
globÆ_›ti⁄s
.
x_Êag_devútuÆize


	)

1555 #ifde‡
GENERATOR_FILE


1556 
Êag_devútuÆize_•ecuœtivñy
;

1558 
	gx_Êag_devútuÆize_•ecuœtivñy
;

1559 
	#Êag_devútuÆize_•ecuœtivñy
 
globÆ_›ti⁄s
.
x_Êag_devútuÆize_•ecuœtivñy


	)

1561 #ifde‡
GENERATOR_FILE


1562 
Êag_dügno°ics_show_cﬁ‹
;

1564 
	gx_Êag_dügno°ics_show_cﬁ‹
;

1565 
	#Êag_dügno°ics_show_cﬁ‹
 
globÆ_›ti⁄s
.
x_Êag_dügno°ics_show_cﬁ‹


	)

1567 #ifde‡
GENERATOR_FILE


1568 
Êag_dügno°ics_show_ˇªt
;

1570 
	gx_Êag_dügno°ics_show_ˇªt
;

1571 
	#Êag_dügno°ics_show_ˇªt
 
globÆ_›ti⁄s
.
x_Êag_dügno°ics_show_ˇªt


	)

1573 #ifde‡
GENERATOR_FILE


1574 
Êag_dügno°ics_show_›ti⁄
;

1576 
	gx_Êag_dügno°ics_show_›ti⁄
;

1577 
	#Êag_dügno°ics_show_›ti⁄
 
globÆ_›ti⁄s
.
x_Êag_dügno°ics_show_›ti⁄


	)

1579 #ifde‡
GENERATOR_FILE


1580 
Êag_d£
;

1582 
	gx_Êag_d£
;

1583 
	#Êag_d£
 
globÆ_›ti⁄s
.
x_Êag_d£


	)

1585 #ifde‡
GENERATOR_FILE


1586 
Êag_dump_ada_•ec
;

1588 
	gx_Êag_dump_ada_•ec
;

1589 
	#Êag_dump_ada_•ec
 
globÆ_›ti⁄s
.
x_Êag_dump_ada_•ec


	)

1591 #ifde‡
GENERATOR_FILE


1592 
Êag_dump_ada_•ec_¶im
;

1594 
	gx_Êag_dump_ada_•ec_¶im
;

1595 
	#Êag_dump_ada_•ec_¶im
 
globÆ_›ti⁄s
.
x_Êag_dump_ada_•ec_¶im


	)

1597 #ifde‡
GENERATOR_FILE


1598 c⁄° *
Êag_dump_föÆ_ö¢s
;

1600 c⁄° *
	gx_Êag_dump_föÆ_ö¢s
;

1601 
	#Êag_dump_föÆ_ö¢s
 
globÆ_›ti⁄s
.
x_Êag_dump_föÆ_ö¢s


	)

1603 #ifde‡
GENERATOR_FILE


1604 c⁄° *
Êag_dump_go_•ec
;

1606 c⁄° *
	gx_Êag_dump_go_•ec
;

1607 
	#Êag_dump_go_•ec
 
globÆ_›ti⁄s
.
x_Êag_dump_go_•ec


	)

1609 #ifde‡
GENERATOR_FILE


1610 
Êag_dump_nﬂddr
;

1612 
	gx_Êag_dump_nﬂddr
;

1613 
	#Êag_dump_nﬂddr
 
globÆ_›ti⁄s
.
x_Êag_dump_nﬂddr


	)

1615 #ifde‡
GENERATOR_FILE


1616 
Êag_dump_∑s£s
;

1618 
	gx_Êag_dump_∑s£s
;

1619 
	#Êag_dump_∑s£s
 
globÆ_›ti⁄s
.
x_Êag_dump_∑s£s


	)

1621 #ifde‡
GENERATOR_FILE


1622 
Êag_dump_u¬umbîed
;

1624 
	gx_Êag_dump_u¬umbîed
;

1625 
	#Êag_dump_u¬umbîed
 
globÆ_›ti⁄s
.
x_Êag_dump_u¬umbîed


	)

1627 #ifde‡
GENERATOR_FILE


1628 
Êag_dump_u¬umbîed_löks
;

1630 
	gx_Êag_dump_u¬umbîed_löks
;

1631 
	#Êag_dump_u¬umbîed_löks
 
globÆ_›ti⁄s
.
x_Êag_dump_u¬umbîed_löks


	)

1633 #ifde‡
GENERATOR_FILE


1634 
Êag_dw¨f2_cfi_asm
;

1636 
	gx_Êag_dw¨f2_cfi_asm
;

1637 
	#Êag_dw¨f2_cfi_asm
 
globÆ_›ti⁄s
.
x_Êag_dw¨f2_cfi_asm


	)

1639 #ifde‡
GENERATOR_FILE


1640 
Êag_óæy_ölöög
;

1642 
	gx_Êag_óæy_ölöög
;

1643 
	#Êag_óæy_ölöög
 
globÆ_›ti⁄s
.
x_Êag_óæy_ölöög


	)

1645 #ifde‡
GENERATOR_FILE


1646 
Êag_ñide_c⁄°ru˘‹s
;

1648 
	gx_Êag_ñide_c⁄°ru˘‹s
;

1649 
	#Êag_ñide_c⁄°ru˘‹s
 
globÆ_›ti⁄s
.
x_Êag_ñide_c⁄°ru˘‹s


	)

1651 #ifde‡
GENERATOR_FILE


1652 
Êag_ñimö©e_dw¨f2_dups
;

1654 
	gx_Êag_ñimö©e_dw¨f2_dups
;

1655 
	#Êag_ñimö©e_dw¨f2_dups
 
globÆ_›ti⁄s
.
x_Êag_ñimö©e_dw¨f2_dups


	)

1657 #ifde‡
GENERATOR_FILE


1658 
Êag_debug_⁄ly_u£d_symbﬁs
;

1660 
	gx_Êag_debug_⁄ly_u£d_symbﬁs
;

1661 
	#Êag_debug_⁄ly_u£d_symbﬁs
 
globÆ_›ti⁄s
.
x_Êag_debug_⁄ly_u£d_symbﬁs


	)

1663 #ifde‡
GENERATOR_FILE


1664 
Êag_ñimö©e_unu£d_debug_ty≥s
;

1666 
	gx_Êag_ñimö©e_unu£d_debug_ty≥s
;

1667 
	#Êag_ñimö©e_unu£d_debug_ty≥s
 
globÆ_›ti⁄s
.
x_Êag_ñimö©e_unu£d_debug_ty≥s


	)

1669 #ifde‡
GENERATOR_FILE


1670 
Êag_emô_˛ass_debug_Æways
;

1672 
	gx_Êag_emô_˛ass_debug_Æways
;

1673 
	#Êag_emô_˛ass_debug_Æways
 
globÆ_›ti⁄s
.
x_Êag_emô_˛ass_debug_Æways


	)

1675 #ifde‡
GENERATOR_FILE


1676 
Êag_emô_˛ass_fûes
;

1678 
	gx_Êag_emô_˛ass_fûes
;

1679 
	#Êag_emô_˛ass_fûes
 
globÆ_›ti⁄s
.
x_Êag_emô_˛ass_fûes


	)

1681 #ifde‡
GENERATOR_FILE


1682 
Êag_íf‹˚_eh_•ecs
;

1684 
	gx_Êag_íf‹˚_eh_•ecs
;

1685 
	#Êag_íf‹˚_eh_•ecs
 
globÆ_›ti⁄s
.
x_Êag_íf‹˚_eh_•ecs


	)

1687 #ifde‡
GENERATOR_FILE


1688 
Êag_ex˚±i⁄s
;

1690 
	gx_Êag_ex˚±i⁄s
;

1691 
	#Êag_ex˚±i⁄s
 
globÆ_›ti⁄s
.
x_Êag_ex˚±i⁄s


	)

1693 #ifde‡
GENERATOR_FILE


1694 
ex˚ss_¥ecisi⁄
 
Êag_ex˚ss_¥ecisi⁄_cmdlöe
;

1696 
ex˚ss_¥ecisi⁄
 
	gx_Êag_ex˚ss_¥ecisi⁄_cmdlöe
;

1697 
	#Êag_ex˚ss_¥ecisi⁄_cmdlöe
 
globÆ_›ti⁄s
.
x_Êag_ex˚ss_¥ecisi⁄_cmdlöe


	)

1699 #ifde‡
GENERATOR_FILE


1700 
Êag_ex≥nsive_›timiz©i⁄s
;

1702 
	gx_Êag_ex≥nsive_›timiz©i⁄s
;

1703 
	#Êag_ex≥nsive_›timiz©i⁄s
 
globÆ_›ti⁄s
.
x_Êag_ex≥nsive_›timiz©i⁄s


	)

1705 #ifde‡
GENERATOR_FILE


1706 
Êag_exã∫_és_öô
;

1708 
	gx_Êag_exã∫_és_öô
;

1709 
	#Êag_exã∫_és_öô
 
globÆ_›ti⁄s
.
x_Êag_exã∫_és_öô


	)

1711 #ifde‡
GENERATOR_FILE


1712 
Êag_Át_…o_obje˘s
;

1714 
	gx_Êag_Át_…o_obje˘s
;

1715 
	#Êag_Át_…o_obje˘s
 
globÆ_›ti⁄s
.
x_Êag_Át_…o_obje˘s


	)

1717 #ifde‡
GENERATOR_FILE


1718 
Êag_fûñi°_fûe
;

1720 
	gx_Êag_fûñi°_fûe
;

1721 
	#Êag_fûñi°_fûe
 
globÆ_›ti⁄s
.
x_Êag_fûñi°_fûe


	)

1723 #ifde‡
GENERATOR_FILE


1724 
Êag_föôe_m©h_⁄ly
;

1726 
	gx_Êag_föôe_m©h_⁄ly
;

1727 
	#Êag_föôe_m©h_⁄ly
 
globÆ_›ti⁄s
.
x_Êag_föôe_m©h_⁄ly


	)

1729 #ifde‡
GENERATOR_FILE


1730 
Êag_Êﬂt_°‹e
;

1732 
	gx_Êag_Êﬂt_°‹e
;

1733 
	#Êag_Êﬂt_°‹e
 
globÆ_›ti⁄s
.
x_Êag_Êﬂt_°‹e


	)

1735 #ifde‡
GENERATOR_FILE


1736 
Êag_√w_f‹_sc›e
;

1738 
	gx_Êag_√w_f‹_sc›e
;

1739 
	#Êag_√w_f‹_sc›e
 
globÆ_›ti⁄s
.
x_Êag_√w_f‹_sc›e


	)

1741 #ifde‡
GENERATOR_FILE


1742 
Êag_f‹˚_˛as£s_¨chive_check
;

1744 
	gx_Êag_f‹˚_˛as£s_¨chive_check
;

1745 
	#Êag_f‹˚_˛as£s_¨chive_check
 
globÆ_›ti⁄s
.
x_Êag_f‹˚_˛as£s_¨chive_check


	)

1747 #ifde‡
GENERATOR_FILE


1748 
Êag_f‹w¨d_¥›ag©e
;

1750 
	gx_Êag_f‹w¨d_¥›ag©e
;

1751 
	#Êag_f‹w¨d_¥›ag©e
 
globÆ_›ti⁄s
.
x_Êag_f‹w¨d_¥›ag©e


	)

1753 #ifde‡
GENERATOR_FILE


1754 
Â_c⁄åa˘_mode
 
Êag_Â_c⁄åa˘_mode
;

1756 
Â_c⁄åa˘_mode
 
	gx_Êag_Â_c⁄åa˘_mode
;

1757 
	#Êag_Â_c⁄åa˘_mode
 
globÆ_›ti⁄s
.
x_Êag_Â_c⁄åa˘_mode


	)

1759 #ifde‡
GENERATOR_FILE


1760 
Êag_‰õnd_öje˘i⁄
;

1762 
	gx_Êag_‰õnd_öje˘i⁄
;

1763 
	#Êag_‰õnd_öje˘i⁄
 
globÆ_›ti⁄s
.
x_Êag_‰õnd_öje˘i⁄


	)

1765 #ifde‡
GENERATOR_FILE


1766 
Êag_no_fun˘i⁄_c£
;

1768 
	gx_Êag_no_fun˘i⁄_c£
;

1769 
	#Êag_no_fun˘i⁄_c£
 
globÆ_›ti⁄s
.
x_Êag_no_fun˘i⁄_c£


	)

1771 #ifde‡
GENERATOR_FILE


1772 
Êag_fun˘i⁄_£˘i⁄s
;

1774 
	gx_Êag_fun˘i⁄_£˘i⁄s
;

1775 
	#Êag_fun˘i⁄_£˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_fun˘i⁄_£˘i⁄s


	)

1777 #ifde‡
GENERATOR_FILE


1778 
Êag_gc£
;

1780 
	gx_Êag_gc£
;

1781 
	#Êag_gc£
 
globÆ_›ti⁄s
.
x_Êag_gc£


	)

1783 #ifde‡
GENERATOR_FILE


1784 
Êag_gc£_a·î_ªlﬂd
;

1786 
	gx_Êag_gc£_a·î_ªlﬂd
;

1787 
	#Êag_gc£_a·î_ªlﬂd
 
globÆ_›ti⁄s
.
x_Êag_gc£_a·î_ªlﬂd


	)

1789 #ifde‡
GENERATOR_FILE


1790 
Êag_gc£_œs
;

1792 
	gx_Êag_gc£_œs
;

1793 
	#Êag_gc£_œs
 
globÆ_›ti⁄s
.
x_Êag_gc£_œs


	)

1795 #ifde‡
GENERATOR_FILE


1796 
Êag_gc£_lm
;

1798 
	gx_Êag_gc£_lm
;

1799 
	#Êag_gc£_lm
 
globÆ_›ti⁄s
.
x_Êag_gc£_lm


	)

1801 #ifde‡
GENERATOR_FILE


1802 
Êag_gc£_sm
;

1804 
	gx_Êag_gc£_sm
;

1805 
	#Êag_gc£_sm
 
globÆ_›ti⁄s
.
x_Êag_gc£_sm


	)

1807 #ifde‡
GENERATOR_FILE


1808 
Êag_no_gnu_keyw‹ds
;

1810 
	gx_Êag_no_gnu_keyw‹ds
;

1811 
	#Êag_no_gnu_keyw‹ds
 
globÆ_›ti⁄s
.
x_Êag_no_gnu_keyw‹ds


	)

1813 #ifde‡
GENERATOR_FILE


1814 
Êag_√xt_ru¡ime
;

1816 
	gx_Êag_√xt_ru¡ime
;

1817 
	#Êag_√xt_ru¡ime
 
globÆ_›ti⁄s
.
x_Êag_√xt_ru¡ime


	)

1819 #ifde‡
GENERATOR_FILE


1820 
Êag_tm
;

1822 
	gx_Êag_tm
;

1823 
	#Êag_tm
 
globÆ_›ti⁄s
.
x_Êag_tm


	)

1825 #ifde‡
GENERATOR_FILE


1826 
Êag_gnu_unique
;

1828 
	gx_Êag_gnu_unique
;

1829 
	#Êag_gnu_unique
 
globÆ_›ti⁄s
.
x_Êag_gnu_unique


	)

1831 #ifde‡
GENERATOR_FILE


1832 
Êag_gnu89_ölöe
;

1834 
	gx_Êag_gnu89_ölöe
;

1835 
	#Êag_gnu89_ölöe
 
globÆ_›ti⁄s
.
x_Êag_gnu89_ölöe


	)

1837 #ifde‡
GENERATOR_FILE


1838 
go_check_divide_ovîÊow
;

1840 
	gx_go_check_divide_ovîÊow
;

1841 
	#go_check_divide_ovîÊow
 
globÆ_›ti⁄s
.
x_go_check_divide_ovîÊow


	)

1843 #ifde‡
GENERATOR_FILE


1844 
go_check_divide_zîo
;

1846 
	gx_go_check_divide_zîo
;

1847 
	#go_check_divide_zîo
 
globÆ_›ti⁄s
.
x_go_check_divide_zîo


	)

1849 #ifde‡
GENERATOR_FILE


1850 
Êag_gøphôe
;

1852 
	gx_Êag_gøphôe
;

1853 
	#Êag_gøphôe
 
globÆ_›ti⁄s
.
x_Êag_gøphôe


	)

1855 #ifde‡
GENERATOR_FILE


1856 
Êag_gøphôe_idítôy
;

1858 
	gx_Êag_gøphôe_idítôy
;

1859 
	#Êag_gøphôe_idítôy
 
globÆ_›ti⁄s
.
x_Êag_gøphôe_idítôy


	)

1861 #ifde‡
GENERATOR_FILE


1862 
Êag_guess_bønch_¥ob
;

1864 
	gx_Êag_guess_bønch_¥ob
;

1865 
	#Êag_guess_bønch_¥ob
 
globÆ_›ti⁄s
.
x_Êag_guess_bønch_¥ob


	)

1867 #ifde‡
GENERATOR_FILE


1868 
Êag_hash_synchr⁄iz©i⁄
;

1870 
	gx_Êag_hash_synchr⁄iz©i⁄
;

1871 
	#Êag_hash_synchr⁄iz©i⁄
 
globÆ_›ti⁄s
.
x_Êag_hash_synchr⁄iz©i⁄


	)

1873 #ifde‡
GENERATOR_FILE


1874 
Êag_hoi°_adja˚¡_lﬂds
;

1876 
	gx_Êag_hoi°_adja˚¡_lﬂds
;

1877 
	#Êag_hoi°_adja˚¡_lﬂds
 
globÆ_›ti⁄s
.
x_Êag_hoi°_adja˚¡_lﬂds


	)

1879 #ifde‡
GENERATOR_FILE


1880 
Êag_no_idít
;

1882 
	gx_Êag_no_idít
;

1883 
	#Êag_no_idít
 
globÆ_›ti⁄s
.
x_Êag_no_idít


	)

1885 #ifde‡
GENERATOR_FILE


1886 
Êag_if_c⁄vîsi⁄
;

1888 
	gx_Êag_if_c⁄vîsi⁄
;

1889 
	#Êag_if_c⁄vîsi⁄
 
globÆ_›ti⁄s
.
x_Êag_if_c⁄vîsi⁄


	)

1891 #ifde‡
GENERATOR_FILE


1892 
Êag_if_c⁄vîsi⁄2
;

1894 
	gx_Êag_if_c⁄vîsi⁄2
;

1895 
	#Êag_if_c⁄vîsi⁄2
 
globÆ_›ti⁄s
.
x_Êag_if_c⁄vîsi⁄2


	)

1897 #ifde‡
GENERATOR_FILE


1898 
Êag_im∂emít_ölöes
;

1900 
	gx_Êag_im∂emít_ölöes
;

1901 
	#Êag_im∂emít_ölöes
 
globÆ_›ti⁄s
.
x_Êag_im∂emít_ölöes


	)

1903 #ifde‡
GENERATOR_FILE


1904 
Êag_im∂icô_ölöe_ãm∂©es
;

1906 
	gx_Êag_im∂icô_ölöe_ãm∂©es
;

1907 
	#Êag_im∂icô_ölöe_ãm∂©es
 
globÆ_›ti⁄s
.
x_Êag_im∂icô_ölöe_ãm∂©es


	)

1909 #ifde‡
GENERATOR_FILE


1910 
Êag_im∂icô_ãm∂©es
;

1912 
	gx_Êag_im∂icô_ãm∂©es
;

1913 
	#Êag_im∂icô_ãm∂©es
 
globÆ_›ti⁄s
.
x_Êag_im∂icô_ãm∂©es


	)

1915 #ifde‡
GENERATOR_FILE


1916 
Êag_ödúe˘_˛as£s
;

1918 
	gx_Êag_ödúe˘_˛as£s
;

1919 
	#Êag_ödúe˘_˛as£s
 
globÆ_›ti⁄s
.
x_Êag_ödúe˘_˛as£s


	)

1921 #ifde‡
GENERATOR_FILE


1922 
Êag_ödúe˘_di•©ch
;

1924 
	gx_Êag_ödúe˘_di•©ch
;

1925 
	#Êag_ödúe˘_di•©ch
 
globÆ_›ti⁄s
.
x_Êag_ödúe˘_di•©ch


	)

1927 #ifde‡
GENERATOR_FILE


1928 
Êag_ödúe˘_ölöög
;

1930 
	gx_Êag_ödúe˘_ölöög
;

1931 
	#Êag_ödúe˘_ölöög
 
globÆ_›ti⁄s
.
x_Êag_ödúe˘_ölöög


	)

1933 #ifde‡
GENERATOR_FILE


1934 
Êag_öhibô_size_dúe˘ive
;

1936 
	gx_Êag_öhibô_size_dúe˘ive
;

1937 
	#Êag_öhibô_size_dúe˘ive
 
globÆ_›ti⁄s
.
x_Êag_öhibô_size_dúe˘ive


	)

1939 #ifde‡
GENERATOR_FILE


1940 
Êag_no_ölöe
;

1942 
	gx_Êag_no_ölöe
;

1943 
	#Êag_no_ölöe
 
globÆ_›ti⁄s
.
x_Êag_no_ölöe


	)

1945 #ifde‡
GENERATOR_FILE


1946 
Êag_ölöe_©omics
;

1948 
	gx_Êag_ölöe_©omics
;

1949 
	#Êag_ölöe_©omics
 
globÆ_›ti⁄s
.
x_Êag_ölöe_©omics


	)

1951 #ifde‡
GENERATOR_FILE


1952 
Êag_ölöe_fun˘i⁄s
;

1954 
	gx_Êag_ölöe_fun˘i⁄s
;

1955 
	#Êag_ölöe_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_ölöe_fun˘i⁄s


	)

1957 #ifde‡
GENERATOR_FILE


1958 
Êag_ölöe_fun˘i⁄s_ˇŒed_⁄˚
;

1960 
	gx_Êag_ölöe_fun˘i⁄s_ˇŒed_⁄˚
;

1961 
	#Êag_ölöe_fun˘i⁄s_ˇŒed_⁄˚
 
globÆ_›ti⁄s
.
x_Êag_ölöe_fun˘i⁄s_ˇŒed_⁄˚


	)

1963 #ifde‡
GENERATOR_FILE


1964 
Êag_ölöe_smÆl_fun˘i⁄s
;

1966 
	gx_Êag_ölöe_smÆl_fun˘i⁄s
;

1967 
	#Êag_ölöe_smÆl_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_ölöe_smÆl_fun˘i⁄s


	)

1969 #ifde‡
GENERATOR_FILE


1970 
Êag_ö°rumít_fun˘i⁄_íåy_exô
;

1972 
	gx_Êag_ö°rumít_fun˘i⁄_íåy_exô
;

1973 
	#Êag_ö°rumít_fun˘i⁄_íåy_exô
 
globÆ_›ti⁄s
.
x_Êag_ö°rumít_fun˘i⁄_íåy_exô


	)

1975 #ifde‡
GENERATOR_FILE


1976 
Êag_ùa_˝
;

1978 
	gx_Êag_ùa_˝
;

1979 
	#Êag_ùa_˝
 
globÆ_›ti⁄s
.
x_Êag_ùa_˝


	)

1981 #ifde‡
GENERATOR_FILE


1982 
Êag_ùa_˝_˛⁄e
;

1984 
	gx_Êag_ùa_˝_˛⁄e
;

1985 
	#Êag_ùa_˝_˛⁄e
 
globÆ_›ti⁄s
.
x_Êag_ùa_˝_˛⁄e


	)

1987 #ifde‡
GENERATOR_FILE


1988 
Êag_ùa_¥ofûe
;

1990 
	gx_Êag_ùa_¥ofûe
;

1991 
	#Êag_ùa_¥ofûe
 
globÆ_›ti⁄s
.
x_Êag_ùa_¥ofûe


	)

1993 #ifde‡
GENERATOR_FILE


1994 
Êag_ùa_±a
;

1996 
	gx_Êag_ùa_±a
;

1997 
	#Êag_ùa_±a
 
globÆ_›ti⁄s
.
x_Êag_ùa_±a


	)

1999 #ifde‡
GENERATOR_FILE


2000 
Êag_ùa_puª_c⁄°
;

2002 
	gx_Êag_ùa_puª_c⁄°
;

2003 
	#Êag_ùa_puª_c⁄°
 
globÆ_›ti⁄s
.
x_Êag_ùa_puª_c⁄°


	)

2005 #ifde‡
GENERATOR_FILE


2006 
Êag_ùa_ª„ªn˚
;

2008 
	gx_Êag_ùa_ª„ªn˚
;

2009 
	#Êag_ùa_ª„ªn˚
 
globÆ_›ti⁄s
.
x_Êag_ùa_ª„ªn˚


	)

2011 #ifde‡
GENERATOR_FILE


2012 
Êag_ùa_§a
;

2014 
	gx_Êag_ùa_§a
;

2015 
	#Êag_ùa_§a
 
globÆ_›ti⁄s
.
x_Êag_ùa_§a


	)

2017 #ifde‡
GENERATOR_FILE


2018 
úa_Æg‹ôhm
 
Êag_úa_Æg‹ôhm
;

2020 
úa_Æg‹ôhm
 
	gx_Êag_úa_Æg‹ôhm
;

2021 
	#Êag_úa_Æg‹ôhm
 
globÆ_›ti⁄s
.
x_Êag_úa_Æg‹ôhm


	)

2023 #ifde‡
GENERATOR_FILE


2024 
Êag_úa_hoi°_¥essuª
;

2026 
	gx_Êag_úa_hoi°_¥essuª
;

2027 
	#Êag_úa_hoi°_¥essuª
 
globÆ_›ti⁄s
.
x_Êag_úa_hoi°_¥essuª


	)

2029 #ifde‡
GENERATOR_FILE


2030 
Êag_úa_lo›_¥essuª
;

2032 
	gx_Êag_úa_lo›_¥essuª
;

2033 
	#Êag_úa_lo›_¥essuª
 
globÆ_›ti⁄s
.
x_Êag_úa_lo›_¥essuª


	)

2035 #ifde‡
GENERATOR_FILE


2036 
úa_ªgi⁄
 
Êag_úa_ªgi⁄
;

2038 
úa_ªgi⁄
 
	gx_Êag_úa_ªgi⁄
;

2039 
	#Êag_úa_ªgi⁄
 
globÆ_›ti⁄s
.
x_Êag_úa_ªgi⁄


	)

2041 #ifde‡
GENERATOR_FILE


2042 
Êag_úa_sh¨e_ßve_¶Ÿs
;

2044 
	gx_Êag_úa_sh¨e_ßve_¶Ÿs
;

2045 
	#Êag_úa_sh¨e_ßve_¶Ÿs
 
globÆ_›ti⁄s
.
x_Êag_úa_sh¨e_ßve_¶Ÿs


	)

2047 #ifde‡
GENERATOR_FILE


2048 
Êag_úa_sh¨e_•ûl_¶Ÿs
;

2050 
	gx_Êag_úa_sh¨e_•ûl_¶Ÿs
;

2051 
	#Êag_úa_sh¨e_•ûl_¶Ÿs
 
globÆ_›ti⁄s
.
x_Êag_úa_sh¨e_•ûl_¶Ÿs


	)

2053 #ifde‡
GENERATOR_FILE


2054 
Êag_úa_vîbo£
;

2056 
	gx_Êag_úa_vîbo£
;

2057 
	#Êag_úa_vîbo£
 
globÆ_›ti⁄s
.
x_Êag_úa_vîbo£


	)

2059 #ifde‡
GENERATOR_FILE


2060 
Êag_isﬁ©e_îr⁄eous_∑ths_©åibuã
;

2062 
	gx_Êag_isﬁ©e_îr⁄eous_∑ths_©åibuã
;

2063 
	#Êag_isﬁ©e_îr⁄eous_∑ths_©åibuã
 
globÆ_›ti⁄s
.
x_Êag_isﬁ©e_îr⁄eous_∑ths_©åibuã


	)

2065 #ifde‡
GENERATOR_FILE


2066 
Êag_isﬁ©e_îr⁄eous_∑ths_dîe„ªn˚
;

2068 
	gx_Êag_isﬁ©e_îr⁄eous_∑ths_dîe„ªn˚
;

2069 
	#Êag_isﬁ©e_îr⁄eous_∑ths_dîe„ªn˚
 
globÆ_›ti⁄s
.
x_Êag_isﬁ©e_îr⁄eous_∑ths_dîe„ªn˚


	)

2071 #ifde‡
GENERATOR_FILE


2072 
Êag_iv›ts
;

2074 
	gx_Êag_iv›ts
;

2075 
	#Êag_iv›ts
 
globÆ_›ti⁄s
.
x_Êag_iv›ts


	)

2077 #ifde‡
GENERATOR_FILE


2078 
Êag_jni
;

2080 
	gx_Êag_jni
;

2081 
	#Êag_jni
 
globÆ_›ti⁄s
.
x_Êag_jni


	)

2083 #ifde‡
GENERATOR_FILE


2084 
Êag_jump_èbÀs
;

2086 
	gx_Êag_jump_èbÀs
;

2087 
	#Êag_jump_èbÀs
 
globÆ_›ti⁄s
.
x_Êag_jump_èbÀs


	)

2089 #ifde‡
GENERATOR_FILE


2090 
Êag_kìp_ölöe_dŒexp‹t
;

2092 
	gx_Êag_kìp_ölöe_dŒexp‹t
;

2093 
	#Êag_kìp_ölöe_dŒexp‹t
 
globÆ_›ti⁄s
.
x_Êag_kìp_ölöe_dŒexp‹t


	)

2095 #ifde‡
GENERATOR_FILE


2096 
Êag_kìp_ölöe_fun˘i⁄s
;

2098 
	gx_Êag_kìp_ölöe_fun˘i⁄s
;

2099 
	#Êag_kìp_ölöe_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_kìp_ölöe_fun˘i⁄s


	)

2101 #ifde‡
GENERATOR_FILE


2102 
Êag_kìp_°©ic_c⁄°s
;

2104 
	gx_Êag_kìp_°©ic_c⁄°s
;

2105 
	#Êag_kìp_°©ic_c⁄°s
 
globÆ_›ti⁄s
.
x_Êag_kìp_°©ic_c⁄°s


	)

2107 #ifde‡
GENERATOR_FILE


2108 
Êag_œx_ve˘‹_c⁄vîsi⁄s
;

2110 
	gx_Êag_œx_ve˘‹_c⁄vîsi⁄s
;

2111 
	#Êag_œx_ve˘‹_c⁄vîsi⁄s
 
globÆ_›ti⁄s
.
x_Êag_œx_ve˘‹_c⁄vîsi⁄s


	)

2113 #ifde‡
GENERATOR_FILE


2114 
Êag_Àadög_undîsc‹e
;

2116 
	gx_Êag_Àadög_undîsc‹e
;

2117 
	#Êag_Àadög_undîsc‹e
 
globÆ_›ti⁄s
.
x_Êag_Àadög_undîsc‹e


	)

2119 #ifde‡
GENERATOR_FILE


2120 
Êag_li„time_d£
;

2122 
	gx_Êag_li„time_d£
;

2123 
	#Êag_li„time_d£
 
globÆ_›ti⁄s
.
x_Êag_li„time_d£


	)

2125 #ifde‡
GENERATOR_FILE


2126 
Êag_live_ønge_shrökage
;

2128 
	gx_Êag_live_ønge_shrökage
;

2129 
	#Êag_live_ønge_shrökage
 
globÆ_›ti⁄s
.
x_Êag_live_ønge_shrökage


	)

2131 #ifde‡
GENERATOR_FILE


2132 
Êag_lo›_block
;

2134 
	gx_Êag_lo›_block
;

2135 
	#Êag_lo›_block
 
globÆ_›ti⁄s
.
x_Êag_lo›_block


	)

2137 #ifde‡
GENERATOR_FILE


2138 
Êag_lo›_öãrch™ge
;

2140 
	gx_Êag_lo›_öãrch™ge
;

2141 
	#Êag_lo›_öãrch™ge
 
globÆ_›ti⁄s
.
x_Êag_lo›_öãrch™ge


	)

2143 #ifde‡
GENERATOR_FILE


2144 
Êag_lo›_›timize_i¶
;

2146 
	gx_Êag_lo›_›timize_i¶
;

2147 
	#Êag_lo›_›timize_i¶
 
globÆ_›ti⁄s
.
x_Êag_lo›_›timize_i¶


	)

2149 #ifde‡
GENERATOR_FILE


2150 
Êag_lo›_∑øŒñize_Æl
;

2152 
	gx_Êag_lo›_∑øŒñize_Æl
;

2153 
	#Êag_lo›_∑øŒñize_Æl
 
globÆ_›ti⁄s
.
x_Êag_lo›_∑øŒñize_Æl


	)

2155 #ifde‡
GENERATOR_FILE


2156 
Êag_lo›_°rù_möe
;

2158 
	gx_Êag_lo›_°rù_möe
;

2159 
	#Êag_lo›_°rù_möe
 
globÆ_›ti⁄s
.
x_Êag_lo›_°rù_möe


	)

2161 #ifde‡
GENERATOR_FILE


2162 
Êag_…o_com¥essi⁄_Àvñ
;

2164 
	gx_Êag_…o_com¥essi⁄_Àvñ
;

2165 
	#Êag_…o_com¥essi⁄_Àvñ
 
globÆ_›ti⁄s
.
x_Êag_…o_com¥essi⁄_Àvñ


	)

2167 #ifde‡
GENERATOR_FILE


2168 
Êag_…o_∑πôi⁄_1to1
;

2170 
	gx_Êag_…o_∑πôi⁄_1to1
;

2171 
	#Êag_…o_∑πôi⁄_1to1
 
globÆ_›ti⁄s
.
x_Êag_…o_∑πôi⁄_1to1


	)

2173 #ifde‡
GENERATOR_FILE


2174 
Êag_…o_∑πôi⁄_bÆ™˚d
;

2176 
	gx_Êag_…o_∑πôi⁄_bÆ™˚d
;

2177 
	#Êag_…o_∑πôi⁄_bÆ™˚d
 
globÆ_›ti⁄s
.
x_Êag_…o_∑πôi⁄_bÆ™˚d


	)

2179 #ifde‡
GENERATOR_FILE


2180 
Êag_…o_∑πôi⁄_max
;

2182 
	gx_Êag_…o_∑πôi⁄_max
;

2183 
	#Êag_…o_∑πôi⁄_max
 
globÆ_›ti⁄s
.
x_Êag_…o_∑πôi⁄_max


	)

2185 #ifde‡
GENERATOR_FILE


2186 
Êag_…o_∑πôi⁄_n⁄e
;

2188 
	gx_Êag_…o_∑πôi⁄_n⁄e
;

2189 
	#Êag_…o_∑πôi⁄_n⁄e
 
globÆ_›ti⁄s
.
x_Êag_…o_∑πôi⁄_n⁄e


	)

2191 #ifde‡
GENERATOR_FILE


2192 
Êag_…o_ªp‹t
;

2194 
	gx_Êag_…o_ªp‹t
;

2195 
	#Êag_…o_ªp‹t
 
globÆ_›ti⁄s
.
x_Êag_…o_ªp‹t


	)

2197 #ifde‡
GENERATOR_FILE


2198 
Êag_…o_ªp‹t_w∑
;

2200 
	gx_Êag_…o_ªp‹t_w∑
;

2201 
	#Êag_…o_ªp‹t_w∑
 
globÆ_›ti⁄s
.
x_Êag_…o_ªp‹t_w∑


	)

2203 #ifde‡
GENERATOR_FILE


2204 c⁄° *
Êag_…o
;

2206 c⁄° *
	gx_Êag_…o
;

2207 
	#Êag_…o
 
globÆ_›ti⁄s
.
x_Êag_…o


	)

2209 #ifde‡
GENERATOR_FILE


2210 
Êag_…øns
;

2212 
	gx_Êag_…øns
;

2213 
	#Êag_…øns
 
globÆ_›ti⁄s
.
x_Êag_…øns


	)

2215 #ifde‡
GENERATOR_FILE


2216 c⁄° *
…øns_ouçut_li°
;

2218 c⁄° *
	gx_…øns_ouçut_li°
;

2219 
	#…øns_ouçut_li°
 
globÆ_›ti⁄s
.
x_…øns_ouçut_li°


	)

2221 #ifde‡
GENERATOR_FILE


2222 
Êag_î∫o_m©h
;

2224 
	gx_Êag_î∫o_m©h
;

2225 
	#Êag_î∫o_m©h
 
globÆ_›ti⁄s
.
x_Êag_î∫o_m©h


	)

2227 #ifde‡
GENERATOR_FILE


2228 
Êag_max_îr‹s
;

2230 
	gx_Êag_max_îr‹s
;

2231 
	#Êag_max_îr‹s
 
globÆ_›ti⁄s
.
x_Êag_max_îr‹s


	)

2233 #ifde‡
GENERATOR_FILE


2234 
mem_ªp‹t
;

2236 
	gx_mem_ªp‹t
;

2237 
	#mem_ªp‹t
 
globÆ_›ti⁄s
.
x_mem_ªp‹t


	)

2239 #ifde‡
GENERATOR_FILE


2240 
mem_ªp‹t_w∑
;

2242 
	gx_mem_ªp‹t_w∑
;

2243 
	#mem_ªp‹t_w∑
 
globÆ_›ti⁄s
.
x_mem_ªp‹t_w∑


	)

2245 #ifde‡
GENERATOR_FILE


2246 
Êag_mîge_c⁄°™ts
;

2248 
	gx_Êag_mîge_c⁄°™ts
;

2249 
	#Êag_mîge_c⁄°™ts
 
globÆ_›ti⁄s
.
x_Êag_mîge_c⁄°™ts


	)

2251 #ifde‡
GENERATOR_FILE


2252 
Êag_mîge_debug_°rögs
;

2254 
	gx_Êag_mîge_debug_°rögs
;

2255 
	#Êag_mîge_debug_°rögs
 
globÆ_›ti⁄s
.
x_Êag_mîge_debug_°rögs


	)

2257 #ifde‡
GENERATOR_FILE


2258 
Êag_modulo_sched
;

2260 
	gx_Êag_modulo_sched
;

2261 
	#Êag_modulo_sched
 
globÆ_›ti⁄s
.
x_Êag_modulo_sched


	)

2263 #ifde‡
GENERATOR_FILE


2264 
Êag_modulo_sched_Ælow_ªgmoves
;

2266 
	gx_Êag_modulo_sched_Ælow_ªgmoves
;

2267 
	#Êag_modulo_sched_Ælow_ªgmoves
 
globÆ_›ti⁄s
.
x_Êag_modulo_sched_Ælow_ªgmoves


	)

2269 #ifde‡
GENERATOR_FILE


2270 
Êag_move_lo›_öv¨ü¡s
;

2272 
	gx_Êag_move_lo›_öv¨ü¡s
;

2273 
	#Êag_move_lo›_öv¨ü¡s
 
globÆ_›ti⁄s
.
x_Êag_move_lo›_öv¨ü¡s


	)

2275 #ifde‡
GENERATOR_FILE


2276 
Êag_ms_exãnsi⁄s
;

2278 
	gx_Êag_ms_exãnsi⁄s
;

2279 
	#Êag_ms_exãnsi⁄s
 
globÆ_›ti⁄s
.
x_Êag_ms_exãnsi⁄s


	)

2281 #ifde‡
GENERATOR_FILE


2282 
Êag_nû_ª˚ivîs
;

2284 
	gx_Êag_nû_ª˚ivîs
;

2285 
	#Êag_nû_ª˚ivîs
 
globÆ_›ti⁄s
.
x_Êag_nû_ª˚ivîs


	)

2287 #ifde‡
GENERATOR_FILE


2288 
Êag_n⁄_ˇŒ_ex˚±i⁄s
;

2290 
	gx_Êag_n⁄_ˇŒ_ex˚±i⁄s
;

2291 
	#Êag_n⁄_ˇŒ_ex˚±i⁄s
 
globÆ_›ti⁄s
.
x_Êag_n⁄_ˇŒ_ex˚±i⁄s


	)

2293 #ifde‡
GENERATOR_FILE


2294 
Êag_no_n⁄™si_buûtö
;

2296 
	gx_Êag_no_n⁄™si_buûtö
;

2297 
	#Êag_no_n⁄™si_buûtö
 
globÆ_›ti⁄s
.
x_Êag_no_n⁄™si_buûtö


	)

2299 #ifde‡
GENERATOR_FILE


2300 
Êag_nŸhrow_›t
;

2302 
	gx_Êag_nŸhrow_›t
;

2303 
	#Êag_nŸhrow_›t
 
globÆ_›ti⁄s
.
x_Êag_nŸhrow_›t


	)

2305 #ifde‡
GENERATOR_FILE


2306 
Êag_objc_abi
;

2308 
	gx_Êag_objc_abi
;

2309 
	#Êag_objc_abi
 
globÆ_›ti⁄s
.
x_Êag_objc_abi


	)

2311 #ifde‡
GENERATOR_FILE


2312 
Êag_objc_ˇŒ_cxx_cdt‹s
;

2314 
	gx_Êag_objc_ˇŒ_cxx_cdt‹s
;

2315 
	#Êag_objc_ˇŒ_cxx_cdt‹s
 
globÆ_›ti⁄s
.
x_Êag_objc_ˇŒ_cxx_cdt‹s


	)

2317 #ifde‡
GENERATOR_FILE


2318 
Êag_objc_dúe˘_di•©ch
;

2320 
	gx_Êag_objc_dúe˘_di•©ch
;

2321 
	#Êag_objc_dúe˘_di•©ch
 
globÆ_›ti⁄s
.
x_Êag_objc_dúe˘_di•©ch


	)

2323 #ifde‡
GENERATOR_FILE


2324 
Êag_objc_ex˚±i⁄s
;

2326 
	gx_Êag_objc_ex˚±i⁄s
;

2327 
	#Êag_objc_ex˚±i⁄s
 
globÆ_›ti⁄s
.
x_Êag_objc_ex˚±i⁄s


	)

2329 #ifde‡
GENERATOR_FILE


2330 
Êag_objc_gc
;

2332 
	gx_Êag_objc_gc
;

2333 
	#Êag_objc_gc
 
globÆ_›ti⁄s
.
x_Êag_objc_gc


	)

2335 #ifde‡
GENERATOR_FILE


2336 
Êag_objc_nûcheck
;

2338 
	gx_Êag_objc_nûcheck
;

2339 
	#Êag_objc_nûcheck
 
globÆ_›ti⁄s
.
x_Êag_objc_nûcheck


	)

2341 #ifde‡
GENERATOR_FILE


2342 
Êag_objc_sjlj_ex˚±i⁄s
;

2344 
	gx_Êag_objc_sjlj_ex˚±i⁄s
;

2345 
	#Êag_objc_sjlj_ex˚±i⁄s
 
globÆ_›ti⁄s
.
x_Êag_objc_sjlj_ex˚±i⁄s


	)

2347 #ifde‡
GENERATOR_FILE


2348 
Êag_objc1_⁄ly
;

2350 
	gx_Êag_objc1_⁄ly
;

2351 
	#Êag_objc1_⁄ly
 
globÆ_›ti⁄s
.
x_Êag_objc1_⁄ly


	)

2353 #ifde‡
GENERATOR_FILE


2354 
Êag_omô_‰ame_poöãr
;

2356 
	gx_Êag_omô_‰ame_poöãr
;

2357 
	#Êag_omô_‰ame_poöãr
 
globÆ_›ti⁄s
.
x_Êag_omô_‰ame_poöãr


	)

2359 #ifde‡
GENERATOR_FILE


2360 
Êag_›ímp
;

2362 
	gx_Êag_›ímp
;

2363 
	#Êag_›ímp
 
globÆ_›ti⁄s
.
x_Êag_›ímp


	)

2365 #ifde‡
GENERATOR_FILE


2366 
Êag_›ímp_simd
;

2368 
	gx_Êag_›ímp_simd
;

2369 
	#Êag_›ímp_simd
 
globÆ_›ti⁄s
.
x_Êag_›ímp_simd


	)

2371 #ifde‡
GENERATOR_FILE


2372 
Êag_›t_öfo
;

2374 
	gx_Êag_›t_öfo
;

2375 
	#Êag_›t_öfo
 
globÆ_›ti⁄s
.
x_Êag_›t_öfo


	)

2377 #ifde‡
GENERATOR_FILE


2378 
Êag_›timize_siblög_ˇŒs
;

2380 
	gx_Êag_›timize_siblög_ˇŒs
;

2381 
	#Êag_›timize_siblög_ˇŒs
 
globÆ_›ti⁄s
.
x_Êag_›timize_siblög_ˇŒs


	)

2383 #ifde‡
GENERATOR_FILE


2384 
Êag_›timize_sci
;

2386 
	gx_Êag_›timize_sci
;

2387 
	#Êag_›timize_sci
 
globÆ_›ti⁄s
.
x_Êag_›timize_sci


	)

2389 #ifde‡
GENERATOR_FILE


2390 
Êag_›timize_°æí
;

2392 
	gx_Êag_›timize_°æí
;

2393 
	#Êag_›timize_°æí
 
globÆ_›ti⁄s
.
x_Êag_›timize_°æí


	)

2395 #ifde‡
GENERATOR_FILE


2396 
Êag_∑ck_°ru˘
;

2398 
	gx_Êag_∑ck_°ru˘
;

2399 
	#Êag_∑ck_°ru˘
 
globÆ_›ti⁄s
.
x_Êag_∑ck_°ru˘


	)

2401 #ifde‡
GENERATOR_FILE


2402 
Êag_∑πül_ölöög
;

2404 
	gx_Êag_∑πül_ölöög
;

2405 
	#Êag_∑πül_ölöög
 
globÆ_›ti⁄s
.
x_Êag_∑πül_ölöög


	)

2407 #ifde‡
GENERATOR_FILE


2408 
Êag_pcc_°ru˘_ªtu∫
;

2410 
	gx_Êag_pcc_°ru˘_ªtu∫
;

2411 
	#Êag_pcc_°ru˘_ªtu∫
 
globÆ_›ti⁄s
.
x_Êag_pcc_°ru˘_ªtu∫


	)

2413 #ifde‡
GENERATOR_FILE


2414 
Êag_≥ñ_lo›s
;

2416 
	gx_Êag_≥ñ_lo›s
;

2417 
	#Êag_≥ñ_lo›s
 
globÆ_›ti⁄s
.
x_Êag_≥ñ_lo›s


	)

2419 #ifde‡
GENERATOR_FILE


2420 
Êag_no_≥ïhﬁe
;

2422 
	gx_Êag_no_≥ïhﬁe
;

2423 
	#Êag_no_≥ïhﬁe
 
globÆ_›ti⁄s
.
x_Êag_no_≥ïhﬁe


	)

2425 #ifde‡
GENERATOR_FILE


2426 
Êag_≥ïhﬁe2
;

2428 
	gx_Êag_≥ïhﬁe2
;

2429 
	#Êag_≥ïhﬁe2
 
globÆ_›ti⁄s
.
x_Êag_≥ïhﬁe2


	)

2431 #ifde‡
GENERATOR_FILE


2432 
Êag_≥rmissive
;

2434 
	gx_Êag_≥rmissive
;

2435 
	#Êag_≥rmissive
 
globÆ_›ti⁄s
.
x_Êag_≥rmissive


	)

2437 #ifde‡
GENERATOR_FILE


2438 
Êag_∂™9_exãnsi⁄s
;

2440 
	gx_Êag_∂™9_exãnsi⁄s
;

2441 
	#Êag_∂™9_exãnsi⁄s
 
globÆ_›ti⁄s
.
x_Êag_∂™9_exãnsi⁄s


	)

2443 #ifde‡
GENERATOR_FILE


2444 
po°_ùa_mem_ªp‹t
;

2446 
	gx_po°_ùa_mem_ªp‹t
;

2447 
	#po°_ùa_mem_ªp‹t
 
globÆ_›ti⁄s
.
x_po°_ùa_mem_ªp‹t


	)

2449 #ifde‡
GENERATOR_FILE


2450 
¥e_ùa_mem_ªp‹t
;

2452 
	gx_¥e_ùa_mem_ªp‹t
;

2453 
	#¥e_ùa_mem_ªp‹t
 
globÆ_›ti⁄s
.
x_¥e_ùa_mem_ªp‹t


	)

2455 #ifde‡
GENERATOR_FILE


2456 
Êag_¥edi˘ive_comm⁄ög
;

2458 
	gx_Êag_¥edi˘ive_comm⁄ög
;

2459 
	#Êag_¥edi˘ive_comm⁄ög
 
globÆ_›ti⁄s
.
x_Êag_¥edi˘ive_comm⁄ög


	)

2461 #ifde‡
GENERATOR_FILE


2462 
Êag_¥e„tch_lo›_¨øys
;

2464 
	gx_Êag_¥e„tch_lo›_¨øys
;

2465 
	#Êag_¥e„tch_lo›_¨øys
 
globÆ_›ti⁄s
.
x_Êag_¥e„tch_lo›_¨øys


	)

2467 #ifde‡
GENERATOR_FILE


2468 
Êag_¥ëty_ãm∂©es
;

2470 
	gx_Êag_¥ëty_ãm∂©es
;

2471 
	#Êag_¥ëty_ãm∂©es
 
globÆ_›ti⁄s
.
x_Êag_¥ëty_ãm∂©es


	)

2473 #ifde‡
GENERATOR_FILE


2474 
¥ofûe_Êag
;

2476 
	gx_¥ofûe_Êag
;

2477 
	#¥ofûe_Êag
 
globÆ_›ti⁄s
.
x_¥ofûe_Êag


	)

2479 #ifde‡
GENERATOR_FILE


2480 
¥ofûe_¨c_Êag
;

2482 
	gx_¥ofûe_¨c_Êag
;

2483 
	#¥ofûe_¨c_Êag
 
globÆ_›ti⁄s
.
x_¥ofûe_¨c_Êag


	)

2485 #ifde‡
GENERATOR_FILE


2486 
Êag_¥ofûe_c‹ª˘i⁄
;

2488 
	gx_Êag_¥ofûe_c‹ª˘i⁄
;

2489 
	#Êag_¥ofûe_c‹ª˘i⁄
 
globÆ_›ti⁄s
.
x_Êag_¥ofûe_c‹ª˘i⁄


	)

2491 #ifde‡
GENERATOR_FILE


2492 c⁄° *
¥ofûe_d©a_¥efix
;

2494 c⁄° *
	gx_¥ofûe_d©a_¥efix
;

2495 
	#¥ofûe_d©a_¥efix
 
globÆ_›ti⁄s
.
x_¥ofûe_d©a_¥efix


	)

2497 #ifde‡
GENERATOR_FILE


2498 
Êag_¥ofûe_ª‹dî_fun˘i⁄s
;

2500 
	gx_Êag_¥ofûe_ª‹dî_fun˘i⁄s
;

2501 
	#Êag_¥ofûe_ª‹dî_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_¥ofûe_ª‹dî_fun˘i⁄s


	)

2503 #ifde‡
GENERATOR_FILE


2504 
¥ofûe_ªp‹t
;

2506 
	gx_¥ofûe_ªp‹t
;

2507 
	#¥ofûe_ªp‹t
 
globÆ_›ti⁄s
.
x_¥ofûe_ªp‹t


	)

2509 #ifde‡
GENERATOR_FILE


2510 
Êag_¥ofûe_u£
;

2512 
	gx_Êag_¥ofûe_u£
;

2513 
	#Êag_¥ofûe_u£
 
globÆ_›ti⁄s
.
x_Êag_¥ofûe_u£


	)

2515 #ifde‡
GENERATOR_FILE


2516 
Êag_¥ofûe_vÆues
;

2518 
	gx_Êag_¥ofûe_vÆues
;

2519 
	#Êag_¥ofûe_vÆues
 
globÆ_›ti⁄s
.
x_Êag_¥ofûe_vÆues


	)

2521 #ifde‡
GENERATOR_FILE


2522 
Êag_ªcùroˇl_m©h
;

2524 
	gx_Êag_ªcùroˇl_m©h
;

2525 
	#Êag_ªcùroˇl_m©h
 
globÆ_›ti⁄s
.
x_Êag_ªcùroˇl_m©h


	)

2527 #ifde‡
GENERATOR_FILE


2528 
Êag_ªc‹d_gcc_swôches
;

2530 
	gx_Êag_ªc‹d_gcc_swôches
;

2531 
	#Êag_ªc‹d_gcc_swôches
 
globÆ_›ti⁄s
.
x_Êag_ªc‹d_gcc_swôches


	)

2533 #ifde‡
GENERATOR_FILE


2534 
Êag_ªdu˚d_ªÊe˘i⁄
;

2536 
	gx_Êag_ªdu˚d_ªÊe˘i⁄
;

2537 
	#Êag_ªdu˚d_ªÊe˘i⁄
 
globÆ_›ti⁄s
.
x_Êag_ªdu˚d_ªÊe˘i⁄


	)

2539 #ifde‡
GENERATOR_FILE


2540 
Êag_ªe
;

2542 
	gx_Êag_ªe
;

2543 
	#Êag_ªe
 
globÆ_›ti⁄s
.
x_Êag_ªe


	)

2545 #ifde‡
GENERATOR_FILE


2546 
Êag_ª«me_ªgi°îs
;

2548 
	gx_Êag_ª«me_ªgi°îs
;

2549 
	#Êag_ª«me_ªgi°îs
 
globÆ_›ti⁄s
.
x_Êag_ª«me_ªgi°îs


	)

2551 #ifde‡
GENERATOR_FILE


2552 
Êag_ª‹dî_blocks
;

2554 
	gx_Êag_ª‹dî_blocks
;

2555 
	#Êag_ª‹dî_blocks
 
globÆ_›ti⁄s
.
x_Êag_ª‹dî_blocks


	)

2557 #ifde‡
GENERATOR_FILE


2558 
Êag_ª‹dî_blocks_™d_∑πôi⁄
;

2560 
	gx_Êag_ª‹dî_blocks_™d_∑πôi⁄
;

2561 
	#Êag_ª‹dî_blocks_™d_∑πôi⁄
 
globÆ_›ti⁄s
.
x_Êag_ª‹dî_blocks_™d_∑πôi⁄


	)

2563 #ifde‡
GENERATOR_FILE


2564 
Êag_ª‹dî_fun˘i⁄s
;

2566 
	gx_Êag_ª‹dî_fun˘i⁄s
;

2567 
	#Êag_ª‹dî_fun˘i⁄s
 
globÆ_›ti⁄s
.
x_Êag_ª‹dî_fun˘i⁄s


	)

2569 #ifde‡
GENERATOR_FILE


2570 
Êag_ª∂a˚_objc_˛as£s
;

2572 
	gx_Êag_ª∂a˚_objc_˛as£s
;

2573 
	#Êag_ª∂a˚_objc_˛as£s
 
globÆ_›ti⁄s
.
x_Êag_ª∂a˚_objc_˛as£s


	)

2575 #ifde‡
GENERATOR_FILE


2576 
go_ªquúe_ªtu∫_°©emít
;

2578 
	gx_go_ªquúe_ªtu∫_°©emít
;

2579 
	#go_ªquúe_ªtu∫_°©emít
 
globÆ_›ti⁄s
.
x_go_ªquúe_ªtu∫_°©emít


	)

2581 #ifde‡
GENERATOR_FILE


2582 
Êag_ªrun_c£_a·î_lo›
;

2584 
	gx_Êag_ªrun_c£_a·î_lo›
;

2585 
	#Êag_ªrun_c£_a·î_lo›
 
globÆ_›ti⁄s
.
x_Êag_ªrun_c£_a·î_lo›


	)

2587 #ifde‡
GENERATOR_FILE


2588 
Êag_ªsched_modulo_sched
;

2590 
	gx_Êag_ªsched_modulo_sched
;

2591 
	#Êag_ªsched_modulo_sched
 
globÆ_›ti⁄s
.
x_Êag_ªsched_modulo_sched


	)

2593 #ifde‡
GENERATOR_FILE


2594 
Êag_roundög_m©h
;

2596 
	gx_Êag_roundög_m©h
;

2597 
	#Êag_roundög_m©h
 
globÆ_›ti⁄s
.
x_Êag_roundög_m©h


	)

2599 #ifde‡
GENERATOR_FILE


2600 
Êag_πti
;

2602 
	gx_Êag_πti
;

2603 
	#Êag_πti
 
globÆ_›ti⁄s
.
x_Êag_πti


	)

2605 #ifde‡
GENERATOR_FILE


2606 
Êag_sched_¸ôiˇl_∑th_heuri°ic
;

2608 
	gx_Êag_sched_¸ôiˇl_∑th_heuri°ic
;

2609 
	#Êag_sched_¸ôiˇl_∑th_heuri°ic
 
globÆ_›ti⁄s
.
x_Êag_sched_¸ôiˇl_∑th_heuri°ic


	)

2611 #ifde‡
GENERATOR_FILE


2612 
Êag_sched_dï_cou¡_heuri°ic
;

2614 
	gx_Êag_sched_dï_cou¡_heuri°ic
;

2615 
	#Êag_sched_dï_cou¡_heuri°ic
 
globÆ_›ti⁄s
.
x_Êag_sched_dï_cou¡_heuri°ic


	)

2617 #ifde‡
GENERATOR_FILE


2618 
Êag_sched_group_heuri°ic
;

2620 
	gx_Êag_sched_group_heuri°ic
;

2621 
	#Êag_sched_group_heuri°ic
 
globÆ_›ti⁄s
.
x_Êag_sched_group_heuri°ic


	)

2623 #ifde‡
GENERATOR_FILE


2624 
Êag_scheduÀ_öãrblock
;

2626 
	gx_Êag_scheduÀ_öãrblock
;

2627 
	#Êag_scheduÀ_öãrblock
 
globÆ_›ti⁄s
.
x_Êag_scheduÀ_öãrblock


	)

2629 #ifde‡
GENERATOR_FILE


2630 
Êag_sched_œ°_ö¢_heuri°ic
;

2632 
	gx_Êag_sched_œ°_ö¢_heuri°ic
;

2633 
	#Êag_sched_œ°_ö¢_heuri°ic
 
globÆ_›ti⁄s
.
x_Êag_sched_œ°_ö¢_heuri°ic


	)

2635 #ifde‡
GENERATOR_FILE


2636 
Êag_sched_¥essuª
;

2638 
	gx_Êag_sched_¥essuª
;

2639 
	#Êag_sched_¥essuª
 
globÆ_›ti⁄s
.
x_Êag_sched_¥essuª


	)

2641 #ifde‡
GENERATOR_FILE


2642 
Êag_sched_ønk_heuri°ic
;

2644 
	gx_Êag_sched_ønk_heuri°ic
;

2645 
	#Êag_sched_ønk_heuri°ic
 
globÆ_›ti⁄s
.
x_Êag_sched_ønk_heuri°ic


	)

2647 #ifde‡
GENERATOR_FILE


2648 
Êag_scheduÀ_•ecuœtive
;

2650 
	gx_Êag_scheduÀ_•ecuœtive
;

2651 
	#Êag_scheduÀ_•ecuœtive
 
globÆ_›ti⁄s
.
x_Êag_scheduÀ_•ecuœtive


	)

2653 #ifde‡
GENERATOR_FILE


2654 
Êag_sched_•ec_ö¢_heuri°ic
;

2656 
	gx_Êag_sched_•ec_ö¢_heuri°ic
;

2657 
	#Êag_sched_•ec_ö¢_heuri°ic
 
globÆ_›ti⁄s
.
x_Êag_sched_•ec_ö¢_heuri°ic


	)

2659 #ifde‡
GENERATOR_FILE


2660 
Êag_scheduÀ_•ecuœtive_lﬂd
;

2662 
	gx_Êag_scheduÀ_•ecuœtive_lﬂd
;

2663 
	#Êag_scheduÀ_•ecuœtive_lﬂd
 
globÆ_›ti⁄s
.
x_Êag_scheduÀ_•ecuœtive_lﬂd


	)

2665 #ifde‡
GENERATOR_FILE


2666 
Êag_scheduÀ_•ecuœtive_lﬂd_d™gîous
;

2668 
	gx_Êag_scheduÀ_•ecuœtive_lﬂd_d™gîous
;

2669 
	#Êag_scheduÀ_•ecuœtive_lﬂd_d™gîous
 
globÆ_›ti⁄s
.
x_Êag_scheduÀ_•ecuœtive_lﬂd_d™gîous


	)

2671 #ifde‡
GENERATOR_FILE


2672 
Êag_sched_°ÆÀd_ö¢s
;

2674 
	gx_Êag_sched_°ÆÀd_ö¢s
;

2675 
	#Êag_sched_°ÆÀd_ö¢s
 
globÆ_›ti⁄s
.
x_Êag_sched_°ÆÀd_ö¢s


	)

2677 #ifde‡
GENERATOR_FILE


2678 
Êag_sched_°ÆÀd_ö¢s_dï
;

2680 
	gx_Êag_sched_°ÆÀd_ö¢s_dï
;

2681 
	#Êag_sched_°ÆÀd_ö¢s_dï
 
globÆ_›ti⁄s
.
x_Êag_sched_°ÆÀd_ö¢s_dï


	)

2683 #ifde‡
GENERATOR_FILE


2684 
sched_vîbo£_∑øm
;

2686 
	gx_sched_vîbo£_∑øm
;

2687 
	#sched_vîbo£_∑øm
 
globÆ_›ti⁄s
.
x_sched_vîbo£_∑øm


	)

2689 #ifde‡
GENERATOR_FILE


2690 
Êag_sched2_u£_su≥rblocks
;

2692 
	gx_Êag_sched2_u£_su≥rblocks
;

2693 
	#Êag_sched2_u£_su≥rblocks
 
globÆ_›ti⁄s
.
x_Êag_sched2_u£_su≥rblocks


	)

2695 #ifde‡
GENERATOR_FILE


2696 
Êag_scheduÀ_ö¢s
;

2698 
	gx_Êag_scheduÀ_ö¢s
;

2699 
	#Êag_scheduÀ_ö¢s
 
globÆ_›ti⁄s
.
x_Êag_scheduÀ_ö¢s


	)

2701 #ifde‡
GENERATOR_FILE


2702 
Êag_scheduÀ_ö¢s_a·î_ªlﬂd
;

2704 
	gx_Êag_scheduÀ_ö¢s_a·î_ªlﬂd
;

2705 
	#Êag_scheduÀ_ö¢s_a·î_ªlﬂd
 
globÆ_›ti⁄s
.
x_Êag_scheduÀ_ö¢s_a·î_ªlﬂd


	)

2707 #ifde‡
GENERATOR_FILE


2708 
Êag_£˘i⁄_™ch‹s
;

2710 
	gx_Êag_£˘i⁄_™ch‹s
;

2711 
	#Êag_£˘i⁄_™ch‹s
 
globÆ_›ti⁄s
.
x_Êag_£˘i⁄_™ch‹s


	)

2713 #ifde‡
GENERATOR_FILE


2714 
Êag_£l_sched_pùñöög
;

2716 
	gx_Êag_£l_sched_pùñöög
;

2717 
	#Êag_£l_sched_pùñöög
 
globÆ_›ti⁄s
.
x_Êag_£l_sched_pùñöög


	)

2719 #ifde‡
GENERATOR_FILE


2720 
Êag_£l_sched_pùñöög_ouãr_lo›s
;

2722 
	gx_Êag_£l_sched_pùñöög_ouãr_lo›s
;

2723 
	#Êag_£l_sched_pùñöög_ouãr_lo›s
 
globÆ_›ti⁄s
.
x_Êag_£l_sched_pùñöög_ouãr_lo›s


	)

2725 #ifde‡
GENERATOR_FILE


2726 
Êag_£l_sched_ªscheduÀ_pùñöed
;

2728 
	gx_Êag_£l_sched_ªscheduÀ_pùñöed
;

2729 
	#Êag_£l_sched_ªscheduÀ_pùñöed
 
globÆ_›ti⁄s
.
x_Êag_£l_sched_ªscheduÀ_pùñöed


	)

2731 #ifde‡
GENERATOR_FILE


2732 
Êag_£À˘ive_schedulög
;

2734 
	gx_Êag_£À˘ive_schedulög
;

2735 
	#Êag_£À˘ive_schedulög
 
globÆ_›ti⁄s
.
x_Êag_£À˘ive_schedulög


	)

2737 #ifde‡
GENERATOR_FILE


2738 
Êag_£À˘ive_schedulög2
;

2740 
	gx_Êag_£À˘ive_schedulög2
;

2741 
	#Êag_£À˘ive_schedulög2
 
globÆ_›ti⁄s
.
x_Êag_£À˘ive_schedulög2


	)

2743 #ifde‡
GENERATOR_FILE


2744 
Êag_sh‹t_doubÀ
;

2746 
	gx_Êag_sh‹t_doubÀ
;

2747 
	#Êag_sh‹t_doubÀ
 
globÆ_›ti⁄s
.
x_Êag_sh‹t_doubÀ


	)

2749 #ifde‡
GENERATOR_FILE


2750 
Êag_sh‹t_íums
;

2752 
	gx_Êag_sh‹t_íums
;

2753 
	#Êag_sh‹t_íums
 
globÆ_›ti⁄s
.
x_Êag_sh‹t_íums


	)

2755 #ifde‡
GENERATOR_FILE


2756 
Êag_sh‹t_wch¨
;

2758 
	gx_Êag_sh‹t_wch¨
;

2759 
	#Êag_sh‹t_wch¨
 
globÆ_›ti⁄s
.
x_Êag_sh‹t_wch¨


	)

2761 #ifde‡
GENERATOR_FILE


2762 
Êag_show_cﬁumn
;

2764 
	gx_Êag_show_cﬁumn
;

2765 
	#Êag_show_cﬁumn
 
globÆ_›ti⁄s
.
x_Êag_show_cﬁumn


	)

2767 #ifde‡
GENERATOR_FILE


2768 
Êag_shrök_wøp
;

2770 
	gx_Êag_shrök_wøp
;

2771 
	#Êag_shrök_wøp
 
globÆ_›ti⁄s
.
x_Êag_shrök_wøp


	)

2773 #ifde‡
GENERATOR_FILE


2774 
Êag_sig«lög_«ns
;

2776 
	gx_Êag_sig«lög_«ns
;

2777 
	#Êag_sig«lög_«ns
 
globÆ_›ti⁄s
.
x_Êag_sig«lög_«ns


	)

2779 #ifde‡
GENERATOR_FILE


2780 
Êag_sig√d_bôfõlds
;

2782 
	gx_Êag_sig√d_bôfõlds
;

2783 
	#Êag_sig√d_bôfõlds
 
globÆ_›ti⁄s
.
x_Êag_sig√d_bôfõlds


	)

2785 #ifde‡
GENERATOR_FILE


2786 
Êag_sig√d_ch¨
;

2788 
	gx_Êag_sig√d_ch¨
;

2789 
	#Êag_sig√d_ch¨
 
globÆ_›ti⁄s
.
x_Êag_sig√d_ch¨


	)

2791 #ifde‡
GENERATOR_FILE


2792 
Êag_sig√d_zîos
;

2794 
	gx_Êag_sig√d_zîos
;

2795 
	#Êag_sig√d_zîos
 
globÆ_›ti⁄s
.
x_Êag_sig√d_zîos


	)

2797 #ifde‡
GENERATOR_FILE


2798 
ve˘_co°_modñ
 
Êag_simd_co°_modñ
;

2800 
ve˘_co°_modñ
 
	gx_Êag_simd_co°_modñ
;

2801 
	#Êag_simd_co°_modñ
 
globÆ_›ti⁄s
.
x_Êag_simd_co°_modñ


	)

2803 #ifde‡
GENERATOR_FILE


2804 
Êag_sögÀ_¥ecisi⁄_c⁄°™t
;

2806 
	gx_Êag_sögÀ_¥ecisi⁄_c⁄°™t
;

2807 
	#Êag_sögÀ_¥ecisi⁄_c⁄°™t
 
globÆ_›ti⁄s
.
x_Êag_sögÀ_¥ecisi⁄_c⁄°™t


	)

2809 #ifde‡
GENERATOR_FILE


2810 
Êag_•lô_ivs_ö_uƒﬁÀr
;

2812 
	gx_Êag_•lô_ivs_ö_uƒﬁÀr
;

2813 
	#Êag_•lô_ivs_ö_uƒﬁÀr
 
globÆ_›ti⁄s
.
x_Êag_•lô_ivs_ö_uƒﬁÀr


	)

2815 #ifde‡
GENERATOR_FILE


2816 
Êag_•lô_°ack
;

2818 
	gx_Êag_•lô_°ack
;

2819 
	#Êag_•lô_°ack
 
globÆ_›ti⁄s
.
x_Êag_•lô_°ack


	)

2821 #ifde‡
GENERATOR_FILE


2822 
Êag_•lô_wide_ty≥s
;

2824 
	gx_Êag_•lô_wide_ty≥s
;

2825 
	#Êag_•lô_wide_ty≥s
 
globÆ_›ti⁄s
.
x_Êag_•lô_wide_ty≥s


	)

2827 #ifde‡
GENERATOR_FILE


2828 
Êag_°ack_¥Ÿe˘
;

2830 
	gx_Êag_°ack_¥Ÿe˘
;

2831 
	#Êag_°ack_¥Ÿe˘
 
globÆ_›ti⁄s
.
x_Êag_°ack_¥Ÿe˘


	)

2833 #ifde‡
GENERATOR_FILE


2834 
°ack_ªu£_Àvñ
 
Êag_°ack_ªu£
;

2836 
°ack_ªu£_Àvñ
 
	gx_Êag_°ack_ªu£
;

2837 
	#Êag_°ack_ªu£
 
globÆ_›ti⁄s
.
x_Êag_°ack_ªu£


	)

2839 #ifde‡
GENERATOR_FILE


2840 
Êag_°ack_ußge
;

2842 
	gx_Êag_°ack_ußge
;

2843 
	#Êag_°ack_ußge
 
globÆ_›ti⁄s
.
x_Êag_°ack_ußge


	)

2845 #ifde‡
GENERATOR_FILE


2846 
Êag_dëaûed_°©i°ics
;

2848 
	gx_Êag_dëaûed_°©i°ics
;

2849 
	#Êag_dëaûed_°©i°ics
 
globÆ_›ti⁄s
.
x_Êag_dëaûed_°©i°ics


	)

2851 #ifde‡
GENERATOR_FILE


2852 
Êag_°‹e_check
;

2854 
	gx_Êag_°‹e_check
;

2855 
	#Êag_°‹e_check
 
globÆ_›ti⁄s
.
x_Êag_°‹e_check


	)

2857 #ifde‡
GENERATOR_FILE


2858 
Êag_°ri˘_Æüsög
;

2860 
	gx_Êag_°ri˘_Æüsög
;

2861 
	#Êag_°ri˘_Æüsög
 
globÆ_›ti⁄s
.
x_Êag_°ri˘_Æüsög


	)

2863 #ifde‡
GENERATOR_FILE


2864 
Êag_°ri˘_íums
;

2866 
	gx_Êag_°ri˘_íums
;

2867 
	#Êag_°ri˘_íums
 
globÆ_›ti⁄s
.
x_Êag_°ri˘_íums


	)

2869 #ifde‡
GENERATOR_FILE


2870 
Êag_°ri˘_ovîÊow
;

2872 
	gx_Êag_°ri˘_ovîÊow
;

2873 
	#Êag_°ri˘_ovîÊow
 
globÆ_›ti⁄s
.
x_Êag_°ri˘_ovîÊow


	)

2875 #ifde‡
GENERATOR_FILE


2876 
Êag_°ri˘_vﬁ©ûe_bôfõlds
;

2878 
	gx_Êag_°ri˘_vﬁ©ûe_bôfõlds
;

2879 
	#Êag_°ri˘_vﬁ©ûe_bôfõlds
 
globÆ_›ti⁄s
.
x_Êag_°ri˘_vﬁ©ûe_bôfõlds


	)

2881 #ifde‡
GENERATOR_FILE


2882 
Êag_sync_libˇŒs
;

2884 
	gx_Êag_sync_libˇŒs
;

2885 
	#Êag_sync_libˇŒs
 
globÆ_›ti⁄s
.
x_Êag_sync_libˇŒs


	)

2887 #ifde‡
GENERATOR_FILE


2888 
Êag_sy¡ax_⁄ly
;

2890 
	gx_Êag_sy¡ax_⁄ly
;

2891 
	#Êag_sy¡ax_⁄ly
 
globÆ_›ti⁄s
.
x_Êag_sy¡ax_⁄ly


	)

2893 #ifde‡
GENERATOR_FILE


2894 
ãm∂©e_backåa˚_limô
;

2896 
	gx_ãm∂©e_backåa˚_limô
;

2897 
	#ãm∂©e_backåa˚_limô
 
globÆ_›ti⁄s
.
x_ãm∂©e_backåa˚_limô


	)

2899 #ifde‡
GENERATOR_FILE


2900 
Êag_ã°_covîage
;

2902 
	gx_Êag_ã°_covîage
;

2903 
	#Êag_ã°_covîage
 
globÆ_›ti⁄s
.
x_Êag_ã°_covîage


	)

2905 #ifde‡
GENERATOR_FILE


2906 
Êag_thªad_jumps
;

2908 
	gx_Êag_thªad_jumps
;

2909 
	#Êag_thªad_jumps
 
globÆ_›ti⁄s
.
x_Êag_thªad_jumps


	)

2911 #ifde‡
GENERATOR_FILE


2912 
Êag_thªadß„_°©ics
;

2914 
	gx_Êag_thªadß„_°©ics
;

2915 
	#Êag_thªadß„_°©ics
 
globÆ_›ti⁄s
.
x_Êag_thªadß„_°©ics


	)

2917 #ifde‡
GENERATOR_FILE


2918 
time_ªp‹t
;

2920 
	gx_time_ªp‹t
;

2921 
	#time_ªp‹t
 
globÆ_›ti⁄s
.
x_time_ªp‹t


	)

2923 #ifde‡
GENERATOR_FILE


2924 
és_modñ
 
Êag_és_deÁu…
;

2926 
és_modñ
 
	gx_Êag_és_deÁu…
;

2927 
	#Êag_és_deÁu…
 
globÆ_›ti⁄s
.
x_Êag_és_deÁu…


	)

2929 #ifde‡
GENERATOR_FILE


2930 
Êag_t›Àvñ_ª‹dî
;

2932 
	gx_Êag_t›Àvñ_ª‹dî
;

2933 
	#Êag_t›Àvñ_ª‹dî
 
globÆ_›ti⁄s
.
x_Êag_t›Àvñ_ª‹dî


	)

2935 #ifde‡
GENERATOR_FILE


2936 
Êag_åa˚r
;

2938 
	gx_Êag_åa˚r
;

2939 
	#Êag_åa˚r
 
globÆ_›ti⁄s
.
x_Êag_åa˚r


	)

2941 #ifde‡
GENERATOR_FILE


2942 
Êag_å≠pög_m©h
;

2944 
	gx_Êag_å≠pög_m©h
;

2945 
	#Êag_å≠pög_m©h
 
globÆ_›ti⁄s
.
x_Êag_å≠pög_m©h


	)

2947 #ifde‡
GENERATOR_FILE


2948 
Êag_å≠v
;

2950 
	gx_Êag_å≠v
;

2951 
	#Êag_å≠v
 
globÆ_›ti⁄s
.
x_Êag_å≠v


	)

2953 #ifde‡
GENERATOR_FILE


2954 
Êag_åì_bô_c˝
;

2956 
	gx_Êag_åì_bô_c˝
;

2957 
	#Êag_åì_bô_c˝
 
globÆ_›ti⁄s
.
x_Êag_åì_bô_c˝


	)

2959 #ifde‡
GENERATOR_FILE


2960 
Êag_åì_buûtö_ˇŒ_d˚
;

2962 
	gx_Êag_åì_buûtö_ˇŒ_d˚
;

2963 
	#Êag_åì_buûtö_ˇŒ_d˚
 
globÆ_›ti⁄s
.
x_Êag_åì_buûtö_ˇŒ_d˚


	)

2965 #ifde‡
GENERATOR_FILE


2966 
Êag_åì_c˝
;

2968 
	gx_Êag_åì_c˝
;

2969 
	#Êag_åì_c˝
 
globÆ_›ti⁄s
.
x_Êag_åì_c˝


	)

2971 #ifde‡
GENERATOR_FILE


2972 
Êag_åì_ch
;

2974 
	gx_Êag_åì_ch
;

2975 
	#Êag_åì_ch
 
globÆ_›ti⁄s
.
x_Êag_åì_ch


	)

2977 #ifde‡
GENERATOR_FILE


2978 
Êag_sß_cﬂÀs˚_v¨s
;

2980 
	gx_Êag_sß_cﬂÀs˚_v¨s
;

2981 
	#Êag_sß_cﬂÀs˚_v¨s
 
globÆ_›ti⁄s
.
x_Êag_sß_cﬂÀs˚_v¨s


	)

2983 #ifde‡
GENERATOR_FILE


2984 
Êag_åì_c›y_¥›
;

2986 
	gx_Êag_åì_c›y_¥›
;

2987 
	#Êag_åì_c›y_¥›
 
globÆ_›ti⁄s
.
x_Êag_åì_c›y_¥›


	)

2989 #ifde‡
GENERATOR_FILE


2990 
Êag_åì_c›yª«me
;

2992 
	gx_Êag_åì_c›yª«me
;

2993 
	#Êag_åì_c›yª«me
 
globÆ_›ti⁄s
.
x_Êag_åì_c›yª«me


	)

2995 #ifde‡
GENERATOR_FILE


2996 
Êag_åì_c£lim
;

2998 
	gx_Êag_åì_c£lim
;

2999 
	#Êag_åì_c£lim
 
globÆ_›ti⁄s
.
x_Êag_åì_c£lim


	)

3001 #ifde‡
GENERATOR_FILE


3002 
Êag_åì_d˚
;

3004 
	gx_Êag_åì_d˚
;

3005 
	#Êag_åì_d˚
 
globÆ_›ti⁄s
.
x_Êag_åì_d˚


	)

3007 #ifde‡
GENERATOR_FILE


3008 
Êag_åì_dom
;

3010 
	gx_Êag_åì_dom
;

3011 
	#Êag_åì_dom
 
globÆ_›ti⁄s
.
x_Êag_åì_dom


	)

3013 #ifde‡
GENERATOR_FILE


3014 
Êag_åì_d£
;

3016 
	gx_Êag_åì_d£
;

3017 
	#Êag_åì_d£
 
globÆ_›ti⁄s
.
x_Êag_åì_d£


	)

3019 #ifde‡
GENERATOR_FILE


3020 
Êag_åì_f‹w¥›
;

3022 
	gx_Êag_åì_f‹w¥›
;

3023 
	#Êag_åì_f‹w¥›
 
globÆ_›ti⁄s
.
x_Êag_åì_f‹w¥›


	)

3025 #ifde‡
GENERATOR_FILE


3026 
Êag_åì_‰e
;

3028 
	gx_Êag_åì_‰e
;

3029 
	#Êag_åì_‰e
 
globÆ_›ti⁄s
.
x_Êag_åì_‰e


	)

3031 #ifde‡
GENERATOR_FILE


3032 
Êag_åì_lo›_di°ribuã_∑âîns
;

3034 
	gx_Êag_åì_lo›_di°ribuã_∑âîns
;

3035 
	#Êag_åì_lo›_di°ribuã_∑âîns
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_di°ribuã_∑âîns


	)

3037 #ifde‡
GENERATOR_FILE


3038 
Êag_åì_lo›_di°ributi⁄
;

3040 
	gx_Êag_åì_lo›_di°ributi⁄
;

3041 
	#Êag_åì_lo›_di°ributi⁄
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_di°ributi⁄


	)

3043 #ifde‡
GENERATOR_FILE


3044 
Êag_åì_lo›_if_c⁄vît
;

3046 
	gx_Êag_åì_lo›_if_c⁄vît
;

3047 
	#Êag_åì_lo›_if_c⁄vît
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_if_c⁄vît


	)

3049 #ifde‡
GENERATOR_FILE


3050 
Êag_åì_lo›_if_c⁄vît_°‹es
;

3052 
	gx_Êag_åì_lo›_if_c⁄vît_°‹es
;

3053 
	#Êag_åì_lo›_if_c⁄vît_°‹es
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_if_c⁄vît_°‹es


	)

3055 #ifde‡
GENERATOR_FILE


3056 
Êag_åì_lo›_im
;

3058 
	gx_Êag_åì_lo›_im
;

3059 
	#Êag_åì_lo›_im
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_im


	)

3061 #ifde‡
GENERATOR_FILE


3062 
Êag_åì_lo›_ivˇn⁄
;

3064 
	gx_Êag_åì_lo›_ivˇn⁄
;

3065 
	#Êag_åì_lo›_ivˇn⁄
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_ivˇn⁄


	)

3067 #ifde‡
GENERATOR_FILE


3068 
Êag_åì_lo›_›timize
;

3070 
	gx_Êag_åì_lo›_›timize
;

3071 
	#Êag_åì_lo›_›timize
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_›timize


	)

3073 #ifde‡
GENERATOR_FILE


3074 
Êag_åì_lo›_ve˘‹ize
;

3076 
	gx_Êag_åì_lo›_ve˘‹ize
;

3077 
	#Êag_åì_lo›_ve˘‹ize
 
globÆ_›ti⁄s
.
x_Êag_åì_lo›_ve˘‹ize


	)

3079 #ifde‡
GENERATOR_FILE


3080 
Êag_åì_live_ønge_•lô
;

3082 
	gx_Êag_åì_live_ønge_•lô
;

3083 
	#Êag_åì_live_ønge_•lô
 
globÆ_›ti⁄s
.
x_Êag_åì_live_ønge_•lô


	)

3085 #ifde‡
GENERATOR_FILE


3086 
Êag_åì_∑øŒñize_lo›s
;

3088 
	gx_Êag_åì_∑øŒñize_lo›s
;

3089 
	#Êag_åì_∑øŒñize_lo›s
 
globÆ_›ti⁄s
.
x_Êag_åì_∑øŒñize_lo›s


	)

3091 #ifde‡
GENERATOR_FILE


3092 
Êag_åì_∑πül_¥e
;

3094 
	gx_Êag_åì_∑πül_¥e
;

3095 
	#Êag_åì_∑πül_¥e
 
globÆ_›ti⁄s
.
x_Êag_åì_∑πül_¥e


	)

3097 #ifde‡
GENERATOR_FILE


3098 
Êag_åì_phùr›
;

3100 
	gx_Êag_åì_phùr›
;

3101 
	#Êag_åì_phùr›
 
globÆ_›ti⁄s
.
x_Êag_åì_phùr›


	)

3103 #ifde‡
GENERATOR_FILE


3104 
Êag_åì_¥e
;

3106 
	gx_Êag_åì_¥e
;

3107 
	#Êag_åì_¥e
 
globÆ_›ti⁄s
.
x_Êag_åì_¥e


	)

3109 #ifde‡
GENERATOR_FILE


3110 
Êag_åì_±a
;

3112 
	gx_Êag_åì_±a
;

3113 
	#Êag_åì_±a
 
globÆ_›ti⁄s
.
x_Êag_åì_±a


	)

3115 #ifde‡
GENERATOR_FILE


3116 
Êag_åì_ªassoc
;

3118 
	gx_Êag_åì_ªassoc
;

3119 
	#Êag_åì_ªassoc
 
globÆ_›ti⁄s
.
x_Êag_åì_ªassoc


	)

3121 #ifde‡
GENERATOR_FILE


3122 
Êag_åì_s˚v_˝r›
;

3124 
	gx_Êag_åì_s˚v_˝r›
;

3125 
	#Êag_åì_s˚v_˝r›
 
globÆ_›ti⁄s
.
x_Êag_åì_s˚v_˝r›


	)

3127 #ifde‡
GENERATOR_FILE


3128 
Êag_åì_sök
;

3130 
	gx_Êag_åì_sök
;

3131 
	#Êag_åì_sök
 
globÆ_›ti⁄s
.
x_Êag_åì_sök


	)

3133 #ifde‡
GENERATOR_FILE


3134 
Êag_åì_¶p_ve˘‹ize
;

3136 
	gx_Êag_åì_¶p_ve˘‹ize
;

3137 
	#Êag_åì_¶p_ve˘‹ize
 
globÆ_›ti⁄s
.
x_Êag_åì_¶p_ve˘‹ize


	)

3139 #ifde‡
GENERATOR_FILE


3140 
Êag_åì_¶§
;

3142 
	gx_Êag_åì_¶§
;

3143 
	#Êag_åì_¶§
 
globÆ_›ti⁄s
.
x_Êag_åì_¶§


	)

3145 #ifde‡
GENERATOR_FILE


3146 
Êag_åì_§a
;

3148 
	gx_Êag_åì_§a
;

3149 
	#Êag_åì_§a
 
globÆ_›ti⁄s
.
x_Êag_åì_§a


	)

3151 #ifde‡
GENERATOR_FILE


3152 
Êag_åì_swôch_c⁄vîsi⁄
;

3154 
	gx_Êag_åì_swôch_c⁄vîsi⁄
;

3155 
	#Êag_åì_swôch_c⁄vîsi⁄
 
globÆ_›ti⁄s
.
x_Êag_åì_swôch_c⁄vîsi⁄


	)

3157 #ifde‡
GENERATOR_FILE


3158 
Êag_åì_swôch_sh‹tcut
;

3160 
	gx_Êag_åì_swôch_sh‹tcut
;

3161 
	#Êag_åì_swôch_sh‹tcut
 
globÆ_›ti⁄s
.
x_Êag_åì_swôch_sh‹tcut


	)

3163 #ifde‡
GENERATOR_FILE


3164 
Êag_åì_èû_mîge
;

3166 
	gx_Êag_åì_èû_mîge
;

3167 
	#Êag_åì_èû_mîge
 
globÆ_›ti⁄s
.
x_Êag_åì_èû_mîge


	)

3169 #ifde‡
GENERATOR_FILE


3170 
Êag_åì_ãr
;

3172 
	gx_Êag_åì_ãr
;

3173 
	#Êag_åì_ãr
 
globÆ_›ti⁄s
.
x_Êag_åì_ãr


	)

3175 #ifde‡
GENERATOR_FILE


3176 
Êag_åì_ve˘‹ize
;

3178 
	gx_Êag_åì_ve˘‹ize
;

3179 
	#Êag_åì_ve˘‹ize
 
globÆ_›ti⁄s
.
x_Êag_åì_ve˘‹ize


	)

3181 #ifde‡
GENERATOR_FILE


3182 
Êag_åì_vΩ
;

3184 
	gx_Êag_åì_vΩ
;

3185 
	#Êag_åì_vΩ
 
globÆ_›ti⁄s
.
x_Êag_åì_vΩ


	)

3187 #ifde‡
GENERATOR_FILE


3188 
Êag_unô_©_a_time
;

3190 
	gx_Êag_unô_©_a_time
;

3191 
	#Êag_unô_©_a_time
 
globÆ_›ti⁄s
.
x_Êag_unô_©_a_time


	)

3193 #ifde‡
GENERATOR_FILE


3194 
Êag_uƒﬁl_Æl_lo›s
;

3196 
	gx_Êag_uƒﬁl_Æl_lo›s
;

3197 
	#Êag_uƒﬁl_Æl_lo›s
 
globÆ_›ti⁄s
.
x_Êag_uƒﬁl_Æl_lo›s


	)

3199 #ifde‡
GENERATOR_FILE


3200 
Êag_uƒﬁl_lo›s
;

3202 
	gx_Êag_uƒﬁl_lo›s
;

3203 
	#Êag_uƒﬁl_lo›s
 
globÆ_›ti⁄s
.
x_Êag_uƒﬁl_lo›s


	)

3205 #ifde‡
GENERATOR_FILE


3206 
Êag_unß„_lo›_›timiz©i⁄s
;

3208 
	gx_Êag_unß„_lo›_›timiz©i⁄s
;

3209 
	#Êag_unß„_lo›_›timiz©i⁄s
 
globÆ_›ti⁄s
.
x_Êag_unß„_lo›_›timiz©i⁄s


	)

3211 #ifde‡
GENERATOR_FILE


3212 
Êag_unß„_m©h_›timiz©i⁄s
;

3214 
	gx_Êag_unß„_m©h_›timiz©i⁄s
;

3215 
	#Êag_unß„_m©h_›timiz©i⁄s
 
globÆ_›ti⁄s
.
x_Êag_unß„_m©h_›timiz©i⁄s


	)

3217 #ifde‡
GENERATOR_FILE


3218 
Êag_unswôch_lo›s
;

3220 
	gx_Êag_unswôch_lo›s
;

3221 
	#Êag_unswôch_lo›s
 
globÆ_›ti⁄s
.
x_Êag_unswôch_lo›s


	)

3223 #ifde‡
GENERATOR_FILE


3224 
Êag_unwöd_èbÀs
;

3226 
	gx_Êag_unwöd_èbÀs
;

3227 
	#Êag_unwöd_èbÀs
 
globÆ_›ti⁄s
.
x_Êag_unwöd_èbÀs


	)

3229 #ifde‡
GENERATOR_FILE


3230 
Êag_u£_©omic_buûtös
;

3232 
	gx_Êag_u£_©omic_buûtös
;

3233 
	#Êag_u£_©omic_buûtös
 
globÆ_›ti⁄s
.
x_Êag_u£_©omic_buûtös


	)

3235 #ifde‡
GENERATOR_FILE


3236 
Êag_u£_b€hm_gc
;

3238 
	gx_Êag_u£_b€hm_gc
;

3239 
	#Êag_u£_b€hm_gc
 
globÆ_›ti⁄s
.
x_Êag_u£_b€hm_gc


	)

3241 #ifde‡
GENERATOR_FILE


3242 
Êag_u£_cxa_©exô
;

3244 
	gx_Êag_u£_cxa_©exô
;

3245 
	#Êag_u£_cxa_©exô
 
globÆ_›ti⁄s
.
x_Êag_u£_cxa_©exô


	)

3247 #ifde‡
GENERATOR_FILE


3248 
Êag_u£_cxa_gë_ex˚±i⁄_±r
;

3250 
	gx_Êag_u£_cxa_gë_ex˚±i⁄_±r
;

3251 
	#Êag_u£_cxa_gë_ex˚±i⁄_±r
 
globÆ_›ti⁄s
.
x_Êag_u£_cxa_gë_ex˚±i⁄_±r


	)

3253 #ifde‡
GENERATOR_FILE


3254 
Êag_u£_divide_subroutöe
;

3256 
	gx_Êag_u£_divide_subroutöe
;

3257 
	#Êag_u£_divide_subroutöe
 
globÆ_›ti⁄s
.
x_Êag_u£_divide_subroutöe


	)

3259 #ifde‡
GENERATOR_FILE


3260 
Êag_u£_lökî_∂ugö
;

3262 
	gx_Êag_u£_lökî_∂ugö
;

3263 
	#Êag_u£_lökî_∂ugö
 
globÆ_›ti⁄s
.
x_Êag_u£_lökî_∂ugö


	)

3265 #ifde‡
GENERATOR_FILE


3266 
Êag_v¨_åackög
;

3268 
	gx_Êag_v¨_åackög
;

3269 
	#Êag_v¨_åackög
 
globÆ_›ti⁄s
.
x_Êag_v¨_åackög


	)

3271 #ifde‡
GENERATOR_FILE


3272 
Êag_v¨_åackög_assignmíts
;

3274 
	gx_Êag_v¨_åackög_assignmíts
;

3275 
	#Êag_v¨_åackög_assignmíts
 
globÆ_›ti⁄s
.
x_Êag_v¨_åackög_assignmíts


	)

3277 #ifde‡
GENERATOR_FILE


3278 
Êag_v¨_åackög_assignmíts_toggÀ
;

3280 
	gx_Êag_v¨_åackög_assignmíts_toggÀ
;

3281 
	#Êag_v¨_åackög_assignmíts_toggÀ
 
globÆ_›ti⁄s
.
x_Êag_v¨_åackög_assignmíts_toggÀ


	)

3283 #ifde‡
GENERATOR_FILE


3284 
Êag_v¨_åackög_unöô
;

3286 
	gx_Êag_v¨_åackög_unöô
;

3287 
	#Êag_v¨_åackög_unöô
 
globÆ_›ti⁄s
.
x_Êag_v¨_åackög_unöô


	)

3289 #ifde‡
GENERATOR_FILE


3290 
Êag_v¨übÀ_ex∑nsi⁄_ö_uƒﬁÀr
;

3292 
	gx_Êag_v¨übÀ_ex∑nsi⁄_ö_uƒﬁÀr
;

3293 
	#Êag_v¨übÀ_ex∑nsi⁄_ö_uƒﬁÀr
 
globÆ_›ti⁄s
.
x_Êag_v¨übÀ_ex∑nsi⁄_ö_uƒﬁÀr


	)

3295 #ifde‡
GENERATOR_FILE


3296 
ve˘_co°_modñ
 
Êag_ve˘_co°_modñ
;

3298 
ve˘_co°_modñ
 
	gx_Êag_ve˘_co°_modñ
;

3299 
	#Êag_ve˘_co°_modñ
 
globÆ_›ti⁄s
.
x_Êag_ve˘_co°_modñ


	)

3301 #ifde‡
GENERATOR_FILE


3302 
Êag_vîbo£_asm
;

3304 
	gx_Êag_vîbo£_asm
;

3305 
	#Êag_vîbo£_asm
 
globÆ_›ti⁄s
.
x_Êag_vîbo£_asm


	)

3307 #ifde‡
GENERATOR_FILE


3308 
Êag_visibûôy_ms_com∑t
;

3310 
	gx_Êag_visibûôy_ms_com∑t
;

3311 
	#Êag_visibûôy_ms_com∑t
 
globÆ_›ti⁄s
.
x_Êag_visibûôy_ms_com∑t


	)

3313 #ifde‡
GENERATOR_FILE


3314 
symbﬁ_visibûôy
 
deÁu…_visibûôy
;

3316 
symbﬁ_visibûôy
 
	gx_deÁu…_visibûôy
;

3317 
	#deÁu…_visibûôy
 
globÆ_›ti⁄s
.
x_deÁu…_visibûôy


	)

3319 #ifde‡
GENERATOR_FILE


3320 
Êag_vÆue_¥ofûe_å™sf‹m©i⁄s
;

3322 
	gx_Êag_vÆue_¥ofûe_å™sf‹m©i⁄s
;

3323 
	#Êag_vÆue_¥ofûe_å™sf‹m©i⁄s
 
globÆ_›ti⁄s
.
x_Êag_vÆue_¥ofûe_å™sf‹m©i⁄s


	)

3325 #ifde‡
GENERATOR_FILE


3326 
vtv_¥i‹ôy
 
Êag_vèbÀ_vîify
;

3328 
vtv_¥i‹ôy
 
	gx_Êag_vèbÀ_vîify
;

3329 
	#Êag_vèbÀ_vîify
 
globÆ_›ti⁄s
.
x_Êag_vèbÀ_vîify


	)

3331 #ifde‡
GENERATOR_FILE


3332 
Êag_vtv_cou¡s
;

3334 
	gx_Êag_vtv_cou¡s
;

3335 
	#Êag_vtv_cou¡s
 
globÆ_›ti⁄s
.
x_Êag_vtv_cou¡s


	)

3337 #ifde‡
GENERATOR_FILE


3338 
Êag_vtv_debug
;

3340 
	gx_Êag_vtv_debug
;

3341 
	#Êag_vtv_debug
 
globÆ_›ti⁄s
.
x_Êag_vtv_debug


	)

3343 #ifde‡
GENERATOR_FILE


3344 
Êag_wók
;

3346 
	gx_Êag_wók
;

3347 
	#Êag_wók
 
globÆ_›ti⁄s
.
x_Êag_wók


	)

3349 #ifde‡
GENERATOR_FILE


3350 
Êag_web
;

3352 
	gx_Êag_web
;

3353 
	#Êag_web
 
globÆ_›ti⁄s
.
x_Êag_web


	)

3355 #ifde‡
GENERATOR_FILE


3356 
Êag_whﬁe_¥ogøm
;

3358 
	gx_Êag_whﬁe_¥ogøm
;

3359 
	#Êag_whﬁe_¥ogøm
 
globÆ_›ti⁄s
.
x_Êag_whﬁe_¥ogøm


	)

3361 #ifde‡
GENERATOR_FILE


3362 
Êag_w‹kög_dúe˘‹y
;

3364 
	gx_Êag_w‹kög_dúe˘‹y
;

3365 
	#Êag_w‹kög_dúe˘‹y
 
globÆ_›ti⁄s
.
x_Êag_w‹kög_dúe˘‹y


	)

3367 #ifde‡
GENERATOR_FILE


3368 c⁄° *
Êag_w∑
;

3370 c⁄° *
	gx_Êag_w∑
;

3371 
	#Êag_w∑
 
globÆ_›ti⁄s
.
x_Êag_w∑


	)

3373 #ifde‡
GENERATOR_FILE


3374 
Êag_wøpv
;

3376 
	gx_Êag_wøpv
;

3377 
	#Êag_wøpv
 
globÆ_›ti⁄s
.
x_Êag_wøpv


	)

3379 #ifde‡
GENERATOR_FILE


3380 
Êag_zîo_öôülized_ö_bss
;

3382 
	gx_Êag_zîo_öôülized_ö_bss
;

3383 
	#Êag_zîo_öôülized_ö_bss
 
globÆ_›ti⁄s
.
x_Êag_zîo_öôülized_ö_bss


	)

3385 #ifde‡
GENERATOR_FILE


3386 
Êag_zîo_lök
;

3388 
	gx_Êag_zîo_lök
;

3389 
	#Êag_zîo_lök
 
globÆ_›ti⁄s
.
x_Êag_zîo_lök


	)

3391 #ifde‡
GENERATOR_FILE


3392 
dw¨f_vîsi⁄
;

3394 
	gx_dw¨f_vîsi⁄
;

3395 
	#dw¨f_vîsi⁄
 
globÆ_›ti⁄s
.
x_dw¨f_vîsi⁄


	)

3397 #ifde‡
GENERATOR_FILE


3398 
Êag_gí_de˛¨©i⁄
;

3400 
	gx_Êag_gí_de˛¨©i⁄
;

3401 
	#Êag_gí_de˛¨©i⁄
 
globÆ_›ti⁄s
.
x_Êag_gí_de˛¨©i⁄


	)

3403 #ifde‡
GENERATOR_FILE


3404 
debug_gíî©e_pub_£˘i⁄s
;

3406 
	gx_debug_gíî©e_pub_£˘i⁄s
;

3407 
	#debug_gíî©e_pub_£˘i⁄s
 
globÆ_›ti⁄s
.
x_debug_gíî©e_pub_£˘i⁄s


	)

3409 #ifde‡
GENERATOR_FILE


3410 
dw¨f_ªc‹d_gcc_swôches
;

3412 
	gx_dw¨f_ªc‹d_gcc_swôches
;

3413 
	#dw¨f_ªc‹d_gcc_swôches
 
globÆ_›ti⁄s
.
x_dw¨f_ªc‹d_gcc_swôches


	)

3415 #ifde‡
GENERATOR_FILE


3416 
dw¨f_•lô_debug_öfo
;

3418 
	gx_dw¨f_•lô_debug_öfo
;

3419 
	#dw¨f_•lô_debug_öfo
 
globÆ_›ti⁄s
.
x_dw¨f_•lô_debug_öfo


	)

3421 #ifde‡
GENERATOR_FILE


3422 
dw¨f_°ri˘
;

3424 
	gx_dw¨f_°ri˘
;

3425 
	#dw¨f_°ri˘
 
globÆ_›ti⁄s
.
x_dw¨f_°ri˘


	)

3427 #ifde‡
GENERATOR_FILE


3428 
Êag_gtoggÀ
;

3430 
	gx_Êag_gtoggÀ
;

3431 
	#Êag_gtoggÀ
 
globÆ_›ti⁄s
.
x_Êag_gtoggÀ


	)

3433 #ifde‡
GENERATOR_FILE


3434 c⁄° *
imu…ürch
;

3436 c⁄° *
	gx_imu…ürch
;

3437 
	#imu…ürch
 
globÆ_›ti⁄s
.
x_imu…ürch


	)

3439 #ifde‡
GENERATOR_FILE


3440 c⁄° *
∂ugödú_°rög
;

3442 c⁄° *
	gx_∂ugödú_°rög
;

3443 
	#∂ugödú_°rög
 
globÆ_›ti⁄s
.
x_∂ugödú_°rög


	)

3445 #ifde‡
GENERATOR_FILE


3446 
¨m_abi_ty≥
 
¨m_abi
;

3448 
¨m_abi_ty≥
 
	gx_¨m_abi
;

3449 
	#¨m_abi
 
globÆ_›ti⁄s
.
x_¨m_abi


	)

3451 #ifde‡
GENERATOR_FILE


3452 
¨m_¨ch_›ti⁄
;

3454 
	gx_¨m_¨ch_›ti⁄
;

3455 
	#¨m_¨ch_›ti⁄
 
globÆ_›ti⁄s
.
x_¨m_¨ch_›ti⁄


	)

3457 #ifde‡
GENERATOR_FILE


3458 
¥o˚ss‹_ty≥
 
¨m_˝u_›ti⁄
;

3460 
¥o˚ss‹_ty≥
 
	gx_¨m_˝u_›ti⁄
;

3461 
	#¨m_˝u_›ti⁄
 
globÆ_›ti⁄s
.
x_¨m_˝u_›ti⁄


	)

3463 #ifde‡
GENERATOR_FILE


3464 
fix_cm3_ldrd
;

3466 
	gx_fix_cm3_ldrd
;

3467 
	#fix_cm3_ldrd
 
globÆ_›ti⁄s
.
x_fix_cm3_ldrd


	)

3469 #ifde‡
GENERATOR_FILE


3470 
Êﬂt_abi_ty≥
 
¨m_Êﬂt_abi
;

3472 
Êﬂt_abi_ty≥
 
	gx_¨m_Êﬂt_abi
;

3473 
	#¨m_Êﬂt_abi
 
globÆ_›ti⁄s
.
x_¨m_Êﬂt_abi


	)

3475 #ifde‡
GENERATOR_FILE


3476 
¨m_Â16_f‹m©_ty≥
 
¨m_Â16_f‹m©
;

3478 
¨m_Â16_f‹m©_ty≥
 
	gx_¨m_Â16_f‹m©
;

3479 
	#¨m_Â16_f‹m©
 
globÆ_›ti⁄s
.
x_¨m_Â16_f‹m©


	)

3481 #ifde‡
GENERATOR_FILE


3482 
¨m_Âu_ödex
;

3484 
	gx_¨m_Âu_ödex
;

3485 
	#¨m_Âu_ödex
 
globÆ_›ti⁄s
.
x_¨m_Âu_ödex


	)

3487 #ifde‡
GENERATOR_FILE


3488 
¨m_Ãa_Êag
;

3490 
	gx_¨m_Ãa_Êag
;

3491 
	#¨m_Ãa_Êag
 
globÆ_›ti⁄s
.
x_¨m_Ãa_Êag


	)

3493 #ifde‡
GENERATOR_FILE


3494 
u£_√⁄_f‹_64bôs
;

3496 
	gx_u£_√⁄_f‹_64bôs
;

3497 
	#u£_√⁄_f‹_64bôs
 
globÆ_›ti⁄s
.
x_u£_√⁄_f‹_64bôs


	)

3499 #ifde‡
GENERATOR_FILE


3500 
¨m_pic_d©a_is_ãxt_ªœtive
;

3502 
	gx_¨m_pic_d©a_is_ãxt_ªœtive
;

3503 
	#¨m_pic_d©a_is_ãxt_ªœtive
 
globÆ_›ti⁄s
.
x_¨m_pic_d©a_is_ãxt_ªœtive


	)

3505 #ifde‡
GENERATOR_FILE


3506 c⁄° *
¨m_pic_ªgi°î_°rög
;

3508 c⁄° *
	gx_¨m_pic_ªgi°î_°rög
;

3509 
	#¨m_pic_ªgi°î_°rög
 
globÆ_›ti⁄s
.
x_¨m_pic_ªgi°î_°rög


	)

3511 #ifde‡
GENERATOR_FILE


3512 
¨m_ª°ri˘_ô
;

3514 
	gx_¨m_ª°ri˘_ô
;

3515 
	#¨m_ª°ri˘_ô
 
globÆ_›ti⁄s
.
x_¨m_ª°ri˘_ô


	)

3517 #ifde‡
GENERATOR_FILE


3518 
èrgë_¶ow_Êash_d©a
;

3520 
	gx_èrgë_¶ow_Êash_d©a
;

3521 
	#èrgë_¶ow_Êash_d©a
 
globÆ_›ti⁄s
.
x_èrgë_¶ow_Êash_d©a


	)

3523 #ifde‡
GENERATOR_FILE


3524 
¨m_°ru˘uª_size_bound¨y
;

3526 
	gx_¨m_°ru˘uª_size_bound¨y
;

3527 
	#¨m_°ru˘uª_size_bound¨y
 
globÆ_›ti⁄s
.
x_¨m_°ru˘uª_size_bound¨y


	)

3529 #ifde‡
GENERATOR_FILE


3530 
¨m_és_ty≥
 
èrgë_és_düÀ˘
;

3532 
¨m_és_ty≥
 
	gx_èrgë_és_düÀ˘
;

3533 
	#èrgë_és_düÀ˘
 
globÆ_›ti⁄s
.
x_èrgë_és_düÀ˘


	)

3535 #ifde‡
GENERATOR_FILE


3536 
¨m_ç_ty≥
 
èrgë_thªad_poöãr
;

3538 
¨m_ç_ty≥
 
	gx_èrgë_thªad_poöãr
;

3539 
	#èrgë_thªad_poöãr
 
globÆ_›ti⁄s
.
x_èrgë_thªad_poöãr


	)

3541 #ifde‡
GENERATOR_FILE


3542 
¥o˚ss‹_ty≥
 
¨m_tu√_›ti⁄
;

3544 
¥o˚ss‹_ty≥
 
	gx_¨m_tu√_›ti⁄
;

3545 
	#¨m_tu√_›ti⁄
 
globÆ_›ti⁄s
.
x_¨m_tu√_›ti⁄


	)

3547 #ifde‡
GENERATOR_FILE


3548 
u«lig√d_ac˚ss
;

3550 
	gx_u«lig√d_ac˚ss
;

3551 
	#u«lig√d_ac˚ss
 
globÆ_›ti⁄s
.
x_u«lig√d_ac˚ss


	)

3553 #ifde‡
GENERATOR_FILE


3554 
èrgë_w‹d_ªloˇti⁄s
;

3556 
	gx_èrgë_w‹d_ªloˇti⁄s
;

3557 
	#èrgë_w‹d_ªloˇti⁄s
 
globÆ_›ti⁄s
.
x_èrgë_w‹d_ªloˇti⁄s


	)

3559 #ifde‡
GENERATOR_FILE


3560 c⁄° *
asm_fûe_«me
;

3562 c⁄° *
	gx_asm_fûe_«me
;

3563 
	#asm_fûe_«me
 
globÆ_›ti⁄s
.
x_asm_fûe_«me


	)

3565 #ifde‡
GENERATOR_FILE


3566 
∑ss_exô_codes
;

3568 
	gx_∑ss_exô_codes
;

3569 
	#∑ss_exô_codes
 
globÆ_›ti⁄s
.
x_∑ss_exô_codes


	)

3571 #ifde‡
GENERATOR_FILE


3572 
Êag_≥d™tic_îr‹s
;

3574 
	gx_Êag_≥d™tic_îr‹s
;

3575 
	#Êag_≥d™tic_îr‹s
 
globÆ_›ti⁄s
.
x_Êag_≥d™tic_îr‹s


	)

3577 #ifde‡
GENERATOR_FILE


3578 
u£_pùes
;

3580 
	gx_u£_pùes
;

3581 
	#u£_pùes
 
globÆ_›ti⁄s
.
x_u£_pùes


	)

3583 #ifde‡
GENERATOR_FILE


3584 c⁄° *
¥öt_fûe_«me
;

3586 c⁄° *
	gx_¥öt_fûe_«me
;

3587 
	#¥öt_fûe_«me
 
globÆ_›ti⁄s
.
x_¥öt_fûe_«me


	)

3589 #ifde‡
GENERATOR_FILE


3590 
¥öt_mu…i_dúe˘‹y
;

3592 
	gx_¥öt_mu…i_dúe˘‹y
;

3593 
	#¥öt_mu…i_dúe˘‹y
 
globÆ_›ti⁄s
.
x_¥öt_mu…i_dúe˘‹y


	)

3595 #ifde‡
GENERATOR_FILE


3596 
¥öt_mu…i_lib
;

3598 
	gx_¥öt_mu…i_lib
;

3599 
	#¥öt_mu…i_lib
 
globÆ_›ti⁄s
.
x_¥öt_mu…i_lib


	)

3601 #ifde‡
GENERATOR_FILE


3602 
¥öt_mu…i_os_dúe˘‹y
;

3604 
	gx_¥öt_mu…i_os_dúe˘‹y
;

3605 
	#¥öt_mu…i_os_dúe˘‹y
 
globÆ_›ti⁄s
.
x_¥öt_mu…i_os_dúe˘‹y


	)

3607 #ifde‡
GENERATOR_FILE


3608 
¥öt_mu…ürch
;

3610 
	gx_¥öt_mu…ürch
;

3611 
	#¥öt_mu…ürch
 
globÆ_›ti⁄s
.
x_¥öt_mu…ürch


	)

3613 #ifde‡
GENERATOR_FILE


3614 c⁄° *
¥öt_¥og_«me
;

3616 c⁄° *
	gx_¥öt_¥og_«me
;

3617 
	#¥öt_¥og_«me
 
globÆ_›ti⁄s
.
x_¥öt_¥og_«me


	)

3619 #ifde‡
GENERATOR_FILE


3620 
¥öt_£¨ch_dús
;

3622 
	gx_¥öt_£¨ch_dús
;

3623 
	#¥öt_£¨ch_dús
 
globÆ_›ti⁄s
.
x_¥öt_£¨ch_dús


	)

3625 #ifde‡
GENERATOR_FILE


3626 
¥öt_sy§oŸ
;

3628 
	gx_¥öt_sy§oŸ
;

3629 
	#¥öt_sy§oŸ
 
globÆ_›ti⁄s
.
x_¥öt_sy§oŸ


	)

3631 #ifde‡
GENERATOR_FILE


3632 
¥öt_sy§oŸ_hódîs_suffix
;

3634 
	gx_¥öt_sy§oŸ_hódîs_suffix
;

3635 
	#¥öt_sy§oŸ_hódîs_suffix
 
globÆ_›ti⁄s
.
x_¥öt_sy§oŸ_hódîs_suffix


	)

3637 #ifde‡
GENERATOR_FILE


3638 
quõt_Êag
;

3640 
	gx_quõt_Êag
;

3641 
	#quõt_Êag
 
globÆ_›ti⁄s
.
x_quõt_Êag


	)

3643 #ifde‡
GENERATOR_FILE


3644 
ªp‹t_times
;

3646 
	gx_ªp‹t_times
;

3647 
	#ªp‹t_times
 
globÆ_›ti⁄s
.
x_ªp‹t_times


	)

3649 #ifde‡
GENERATOR_FILE


3650 
Êag_undef
;

3652 
	gx_Êag_undef
;

3653 
	#Êag_undef
 
globÆ_›ti⁄s
.
x_Êag_undef


	)

3655 #ifde‡
GENERATOR_FILE


3656 
vîbo£_Êag
;

3658 
	gx_vîbo£_Êag
;

3659 
	#vîbo£_Êag
 
globÆ_›ti⁄s
.
x_vîbo£_Êag


	)

3661 #ifde‡
GENERATOR_FILE


3662 
vîsi⁄_Êag
;

3664 
	gx_vîsi⁄_Êag
;

3665 
	#vîsi⁄_Êag
 
globÆ_›ti⁄s
.
x_vîsi⁄_Êag


	)

3667 #ifde‡
GENERATOR_FILE


3668 
öhibô_w¨nögs
;

3670 
	gx_öhibô_w¨nögs
;

3671 
	#öhibô_w¨nögs
 
globÆ_›ti⁄s
.
x_öhibô_w¨nögs


	)

3673 #ifde‡
GENERATOR_FILE


3674 c⁄° *
wøµî_°rög
;

3676 c⁄° *
	gx_wøµî_°rög
;

3677 
	#wøµî_°rög
 
globÆ_›ti⁄s
.
x_wøµî_°rög


	)

3679 #i‚de‡
GENERATOR_FILE


3680 
boﬁ
 
	g‰⁄ãnd_£t_Êag_assocütive_m©h
;

3682 #i‚de‡
GENERATOR_FILE


3683 
boﬁ
 
	g‰⁄ãnd_£t_Êag_cx_limôed_ønge
;

3685 #i‚de‡
GENERATOR_FILE


3686 
boﬁ
 
	g‰⁄ãnd_£t_Êag_föôe_m©h_⁄ly
;

3688 #i‚de‡
GENERATOR_FILE


3689 
boﬁ
 
	g‰⁄ãnd_£t_Êag_î∫o_m©h
;

3691 #i‚de‡
GENERATOR_FILE


3692 
boﬁ
 
	g‰⁄ãnd_£t_Êag_ªcùroˇl_m©h
;

3694 #i‚de‡
GENERATOR_FILE


3695 
boﬁ
 
	g‰⁄ãnd_£t_Êag_roundög_m©h
;

3697 #i‚de‡
GENERATOR_FILE


3698 
boﬁ
 
	g‰⁄ãnd_£t_Êag_sig«lög_«ns
;

3700 #i‚de‡
GENERATOR_FILE


3701 
boﬁ
 
	g‰⁄ãnd_£t_Êag_sig√d_zîos
;

3703 #i‚de‡
GENERATOR_FILE


3704 
boﬁ
 
	g‰⁄ãnd_£t_Êag_å≠pög_m©h
;

3706 #i‚de‡
GENERATOR_FILE


3707 
boﬁ
 
	g‰⁄ãnd_£t_Êag_unß„_m©h_›timiz©i⁄s
;

3709 #i‚de‡
GENERATOR_FILE


3711 
gcc_›ti⁄s
 
globÆ_›ti⁄s
;

3712 c⁄° 
gcc_›ti⁄s
 
globÆ_›ti⁄s_öô
;

3713 
gcc_›ti⁄s
 
globÆ_›ti⁄s_£t
;

3714 
	#èrgë_Êags_ex∂icô
 
globÆ_›ti⁄s_£t
.
x_èrgë_Êags


	)

3718 #i‡!
deföed
(
IN_LIBGCC2
Ë&& !deföed(
IN_TARGET_LIBS
Ë&& !deföed(
IN_RTS
)

3721 
GTY
(()Ë
	g˛_›timiz©i⁄


3723 
	gx_Æign_fun˘i⁄s
;

3724 
	gx_Æign_jumps
;

3725 
	gx_Æign_œbñs
;

3726 
	gx_Æign_lo›s
;

3727 
	gx_Êag_sched_°ÆÀd_ö¢s
;

3728 
	gx_Êag_sched_°ÆÀd_ö¢s_dï
;

3729 
Â_c⁄åa˘_mode
 
	gx_Êag_Â_c⁄åa˘_mode
;

3730 
	gx_›timize
;

3731 
	gx_›timize_size
;

3732 sig√d 
	gx_Êag_aggªssive_lo›_›timiz©i⁄s
;

3733 sig√d 
	gx_Êag_asynchr⁄ous_unwöd_èbÀs
;

3734 sig√d 
	gx_Êag_bønch_⁄_cou¡_ªg
;

3735 sig√d 
	gx_Êag_bønch_¥obabûôõs
;

3736 sig√d 
	gx_Êag_bønch_èrgë_lﬂd_›timize
;

3737 sig√d 
	gx_Êag_bønch_èrgë_lﬂd_›timize2
;

3738 sig√d 
	gx_Êag_bå_bb_ex˛usive
;

3739 sig√d 
	gx_Êag_ˇŒî_ßves
;

3740 sig√d 
	gx_Êag_comböe_°ack_adju°míts
;

3741 sig√d 
	gx_Êag_no_comm⁄
;

3742 sig√d 
	gx_Êag_com∑ª_ñim_a·î_ªlﬂd
;

3743 sig√d 
	gx_Êag_c⁄£rve_°ack
;

3744 sig√d 
	gx_Êag_˝r›_ªgi°îs
;

3745 sig√d 
	gx_Êag_¸ossjumpög
;

3746 sig√d 
	gx_Êag_c£_fﬁlow_jumps
;

3747 sig√d 
	gx_Êag_cx_f‹å™_ruÀs
;

3748 sig√d 
	gx_Êag_cx_limôed_ønge
;

3749 sig√d 
	gx_Êag_d©a_£˘i⁄s
;

3750 sig√d 
	gx_Êag_d˚
;

3751 sig√d 
	gx_Êag_de„r_p›
;

3752 sig√d 
	gx_Êag_dñayed_bønch
;

3753 sig√d 
	gx_Êag_dñëe_nuŒ_poöãr_checks
;

3754 sig√d 
	gx_Êag_devútuÆize
;

3755 sig√d 
	gx_Êag_devútuÆize_•ecuœtivñy
;

3756 sig√d 
	gx_Êag_d£
;

3757 sig√d 
	gx_Êag_óæy_ölöög
;

3758 sig√d 
	gx_Êag_ex˚±i⁄s
;

3759 sig√d 
	gx_Êag_ex≥nsive_›timiz©i⁄s
;

3760 sig√d 
	gx_Êag_föôe_m©h_⁄ly
;

3761 sig√d 
	gx_Êag_Êﬂt_°‹e
;

3762 sig√d 
	gx_Êag_f‹w¨d_¥›ag©e
;

3763 sig√d 
	gx_Êag_gc£
;

3764 sig√d 
	gx_Êag_gc£_a·î_ªlﬂd
;

3765 sig√d 
	gx_Êag_gc£_œs
;

3766 sig√d 
	gx_Êag_gc£_lm
;

3767 sig√d 
	gx_Êag_gc£_sm
;

3768 sig√d 
	gx_Êag_gøphôe_idítôy
;

3769 sig√d 
	gx_Êag_guess_bønch_¥ob
;

3770 sig√d 
	gx_Êag_hoi°_adja˚¡_lﬂds
;

3771 sig√d 
	gx_Êag_if_c⁄vîsi⁄
;

3772 sig√d 
	gx_Êag_if_c⁄vîsi⁄2
;

3773 sig√d 
	gx_Êag_no_ölöe
;

3774 sig√d 
	gx_Êag_ölöe_©omics
;

3775 sig√d 
	gx_Êag_ölöe_fun˘i⁄s
;

3776 sig√d 
	gx_Êag_ölöe_fun˘i⁄s_ˇŒed_⁄˚
;

3777 sig√d 
	gx_Êag_ölöe_smÆl_fun˘i⁄s
;

3778 sig√d 
	gx_Êag_ùa_˝
;

3779 sig√d 
	gx_Êag_ùa_˝_˛⁄e
;

3780 sig√d 
	gx_Êag_ùa_¥ofûe
;

3781 sig√d 
	gx_Êag_ùa_±a
;

3782 sig√d 
	gx_Êag_ùa_puª_c⁄°
;

3783 sig√d 
	gx_Êag_ùa_ª„ªn˚
;

3784 sig√d 
	gx_Êag_ùa_§a
;

3785 sig√d 
	gx_Êag_úa_hoi°_¥essuª
;

3786 sig√d 
	gx_Êag_úa_lo›_¥essuª
;

3787 sig√d 
	gx_Êag_isﬁ©e_îr⁄eous_∑ths_©åibuã
;

3788 sig√d 
	gx_Êag_isﬁ©e_îr⁄eous_∑ths_dîe„ªn˚
;

3789 sig√d 
	gx_Êag_iv›ts
;

3790 sig√d 
	gx_Êag_jump_èbÀs
;

3791 sig√d 
	gx_Êag_li„time_d£
;

3792 sig√d 
	gx_Êag_live_ønge_shrökage
;

3793 sig√d 
	gx_Êag_lo›_block
;

3794 sig√d 
	gx_Êag_lo›_öãrch™ge
;

3795 sig√d 
	gx_Êag_lo›_›timize_i¶
;

3796 sig√d 
	gx_Êag_lo›_∑øŒñize_Æl
;

3797 sig√d 
	gx_Êag_lo›_°rù_möe
;

3798 sig√d 
	gx_Êag_î∫o_m©h
;

3799 sig√d 
	gx_Êag_mîge_c⁄°™ts
;

3800 sig√d 
	gx_Êag_modulo_sched
;

3801 sig√d 
	gx_Êag_move_lo›_öv¨ü¡s
;

3802 sig√d 
	gx_Êag_n⁄_ˇŒ_ex˚±i⁄s
;

3803 sig√d 
	gx_Êag_nŸhrow_›t
;

3804 sig√d 
	gx_Êag_omô_‰ame_poöãr
;

3805 sig√d 
	gx_Êag_›t_öfo
;

3806 sig√d 
	gx_Êag_›timize_siblög_ˇŒs
;

3807 sig√d 
	gx_Êag_›timize_°æí
;

3808 sig√d 
	gx_Êag_∑ck_°ru˘
;

3809 sig√d 
	gx_Êag_≥ñ_lo›s
;

3810 sig√d 
	gx_Êag_no_≥ïhﬁe
;

3811 sig√d 
	gx_Êag_≥ïhﬁe2
;

3812 sig√d 
	gx_Êag_¥edi˘ive_comm⁄ög
;

3813 sig√d 
	gx_Êag_¥e„tch_lo›_¨øys
;

3814 sig√d 
	gx_Êag_pcc_°ru˘_ªtu∫
;

3815 sig√d 
	gx_Êag_ª«me_ªgi°îs
;

3816 sig√d 
	gx_Êag_ª‹dî_blocks
;

3817 sig√d 
	gx_Êag_ª‹dî_blocks_™d_∑πôi⁄
;

3818 sig√d 
	gx_Êag_ª‹dî_fun˘i⁄s
;

3819 sig√d 
	gx_Êag_ªrun_c£_a·î_lo›
;

3820 sig√d 
	gx_Êag_ªsched_modulo_sched
;

3821 sig√d 
	gx_Êag_roundög_m©h
;

3822 sig√d 
	gx_Êag_πti
;

3823 sig√d 
	gx_Êag_sched_¸ôiˇl_∑th_heuri°ic
;

3824 sig√d 
	gx_Êag_sched_dï_cou¡_heuri°ic
;

3825 sig√d 
	gx_Êag_sched_group_heuri°ic
;

3826 sig√d 
	gx_Êag_scheduÀ_öãrblock
;

3827 sig√d 
	gx_Êag_sched_œ°_ö¢_heuri°ic
;

3828 sig√d 
	gx_Êag_sched_¥essuª
;

3829 sig√d 
	gx_Êag_sched_ønk_heuri°ic
;

3830 sig√d 
	gx_Êag_scheduÀ_•ecuœtive
;

3831 sig√d 
	gx_Êag_sched_•ec_ö¢_heuri°ic
;

3832 sig√d 
	gx_Êag_scheduÀ_•ecuœtive_lﬂd
;

3833 sig√d 
	gx_Êag_scheduÀ_•ecuœtive_lﬂd_d™gîous
;

3834 sig√d 
	gx_Êag_sched2_u£_su≥rblocks
;

3835 sig√d 
	gx_Êag_scheduÀ_ö¢s
;

3836 sig√d 
	gx_Êag_scheduÀ_ö¢s_a·î_ªlﬂd
;

3837 sig√d 
	gx_Êag_£˘i⁄_™ch‹s
;

3838 sig√d 
	gx_Êag_£l_sched_pùñöög
;

3839 sig√d 
	gx_Êag_£l_sched_pùñöög_ouãr_lo›s
;

3840 sig√d 
	gx_Êag_£l_sched_ªscheduÀ_pùñöed
;

3841 sig√d 
	gx_Êag_£À˘ive_schedulög
;

3842 sig√d 
	gx_Êag_£À˘ive_schedulög2
;

3843 sig√d 
	gx_Êag_sh‹t_doubÀ
;

3844 sig√d 
	gx_Êag_sh‹t_íums
;

3845 sig√d 
	gx_Êag_sh‹t_wch¨
;

3846 sig√d 
	gx_Êag_shrök_wøp
;

3847 sig√d 
	gx_Êag_sig«lög_«ns
;

3848 sig√d 
	gx_Êag_sig√d_zîos
;

3849 sig√d 
	gx_Êag_sögÀ_¥ecisi⁄_c⁄°™t
;

3850 sig√d 
	gx_Êag_•lô_ivs_ö_uƒﬁÀr
;

3851 sig√d 
	gx_Êag_•lô_wide_ty≥s
;

3852 sig√d 
	gx_Êag_°ri˘_Æüsög
;

3853 sig√d 
	gx_Êag_°ri˘_íums
;

3854 sig√d 
	gx_Êag_thªad_jumps
;

3855 sig√d 
	gx_Êag_thªadß„_°©ics
;

3856 sig√d 
	gx_Êag_t›Àvñ_ª‹dî
;

3857 sig√d 
	gx_Êag_å≠pög_m©h
;

3858 sig√d 
	gx_Êag_å≠v
;

3859 sig√d 
	gx_Êag_åì_bô_c˝
;

3860 sig√d 
	gx_Êag_åì_buûtö_ˇŒ_d˚
;

3861 sig√d 
	gx_Êag_åì_c˝
;

3862 sig√d 
	gx_Êag_åì_ch
;

3863 sig√d 
	gx_Êag_sß_cﬂÀs˚_v¨s
;

3864 sig√d 
	gx_Êag_åì_c›y_¥›
;

3865 sig√d 
	gx_Êag_åì_c›yª«me
;

3866 sig√d 
	gx_Êag_åì_c£lim
;

3867 sig√d 
	gx_Êag_åì_d˚
;

3868 sig√d 
	gx_Êag_åì_dom
;

3869 sig√d 
	gx_Êag_åì_d£
;

3870 sig√d 
	gx_Êag_åì_f‹w¥›
;

3871 sig√d 
	gx_Êag_åì_‰e
;

3872 sig√d 
	gx_Êag_åì_lo›_di°ribuã_∑âîns
;

3873 sig√d 
	gx_Êag_åì_lo›_di°ributi⁄
;

3874 sig√d 
	gx_Êag_åì_lo›_if_c⁄vît
;

3875 sig√d 
	gx_Êag_åì_lo›_if_c⁄vît_°‹es
;

3876 sig√d 
	gx_Êag_åì_lo›_im
;

3877 sig√d 
	gx_Êag_åì_lo›_ivˇn⁄
;

3878 sig√d 
	gx_Êag_åì_lo›_›timize
;

3879 sig√d 
	gx_Êag_åì_lo›_ve˘‹ize
;

3880 sig√d 
	gx_Êag_åì_live_ønge_•lô
;

3881 sig√d 
	gx_Êag_åì_∑πül_¥e
;

3882 sig√d 
	gx_Êag_åì_phùr›
;

3883 sig√d 
	gx_Êag_åì_¥e
;

3884 sig√d 
	gx_Êag_åì_±a
;

3885 sig√d 
	gx_Êag_åì_ªassoc
;

3886 sig√d 
	gx_Êag_åì_s˚v_˝r›
;

3887 sig√d 
	gx_Êag_åì_sök
;

3888 sig√d 
	gx_Êag_åì_¶p_ve˘‹ize
;

3889 sig√d 
	gx_Êag_åì_¶§
;

3890 sig√d 
	gx_Êag_åì_§a
;

3891 sig√d 
	gx_Êag_åì_swôch_c⁄vîsi⁄
;

3892 sig√d 
	gx_Êag_åì_swôch_sh‹tcut
;

3893 sig√d 
	gx_Êag_åì_èû_mîge
;

3894 sig√d 
	gx_Êag_åì_ãr
;

3895 sig√d 
	gx_Êag_åì_ve˘‹ize
;

3896 sig√d 
	gx_Êag_åì_vΩ
;

3897 sig√d 
	gx_Êag_unô_©_a_time
;

3898 sig√d 
	gx_Êag_uƒﬁl_Æl_lo›s
;

3899 sig√d 
	gx_Êag_uƒﬁl_lo›s
;

3900 sig√d 
	gx_Êag_unß„_lo›_›timiz©i⁄s
;

3901 sig√d 
	gx_Êag_unß„_m©h_›timiz©i⁄s
;

3902 sig√d 
	gx_Êag_unswôch_lo›s
;

3903 sig√d 
	gx_Êag_unwöd_èbÀs
;

3904 sig√d 
	gx_Êag_v¨_åackög
;

3905 sig√d 
	gx_Êag_v¨_åackög_assignmíts
;

3906 sig√d 
	gx_Êag_v¨_åackög_assignmíts_toggÀ
;

3907 sig√d 
	gx_Êag_v¨_åackög_unöô
;

3908 sig√d 
	gx_Êag_v¨übÀ_ex∑nsi⁄_ö_uƒﬁÀr
;

3909 sig√d 
	gx_Êag_vÆue_¥ofûe_å™sf‹m©i⁄s
;

3910 sig√d 
	gx_Êag_web
;

3911 sig√d 
	gx_Êag_whﬁe_¥ogøm
;

3912 sig√d 
	gx_Êag_wøpv
;

3916 
GTY
(()Ë
	g˛_èrgë_›ti⁄


3918 sig√d 
	gx_¨m_Ãa_Êag
;

3923 
˛_›timiz©i⁄_ßve
 (
˛_›timiz©i⁄
 *, 
gcc_›ti⁄s
 *);

3926 
˛_›timiz©i⁄_ª°‹e
 (
gcc_›ti⁄s
 *, 
˛_›timiz©i⁄
 *);

3929 
˛_›timiz©i⁄_¥öt
 (
FILE
 *, , 
˛_›timiz©i⁄
 *);

3932 
˛_èrgë_›ti⁄_ßve
 (
˛_èrgë_›ti⁄
 *, 
gcc_›ti⁄s
 *);

3935 
˛_èrgë_›ti⁄_ª°‹e
 (
gcc_›ti⁄s
 *, 
˛_èrgë_›ti⁄
 *);

3938 
˛_èrgë_›ti⁄_¥öt
 (
FILE
 *, , 
˛_èrgë_›ti⁄
 *);

3941 #i‡!
deföed
(
GCC_TM_H
)

3942 
	~"öput.h
"

3943 
boﬁ


3944 
comm⁄_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3945 
gcc_›ti⁄s
 *
›ts_£t
,

3946 c⁄° 
˛_decoded_›ti⁄
 *
decoded
,

3947 
œng_mask
, 
köd
,

3948 
loˇti⁄_t
 
loc
,

3949 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3950 
dügno°ic_c⁄ãxt
 *
dc
);

3951 
boﬁ


3952 
Ada_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3953 
gcc_›ti⁄s
 *
›ts_£t
,

3954 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

3955 
œng_mask
, 
köd
,

3956 
loˇti⁄_t
 
loc
,

3957 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3958 
dügno°ic_c⁄ãxt
 *
dc
);

3959 
boﬁ


3960 
AdaSCIL_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3961 
gcc_›ti⁄s
 *
›ts_£t
,

3962 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

3963 
œng_mask
, 
köd
,

3964 
loˇti⁄_t
 
loc
,

3965 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3966 
dügno°ic_c⁄ãxt
 *
dc
);

3967 
boﬁ


3968 
AdaWhy_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3969 
gcc_›ti⁄s
 *
›ts_£t
,

3970 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

3971 
œng_mask
, 
köd
,

3972 
loˇti⁄_t
 
loc
,

3973 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3974 
dügno°ic_c⁄ãxt
 *
dc
);

3975 
boﬁ


3976 
C_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3977 
gcc_›ti⁄s
 *
›ts_£t
,

3978 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

3979 
œng_mask
, 
köd
,

3980 
loˇti⁄_t
 
loc
,

3981 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3982 
dügno°ic_c⁄ãxt
 *
dc
);

3983 
boﬁ


3984 
CXX_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3985 
gcc_›ti⁄s
 *
›ts_£t
,

3986 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

3987 
œng_mask
, 
köd
,

3988 
loˇti⁄_t
 
loc
,

3989 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3990 
dügno°ic_c⁄ãxt
 *
dc
);

3991 
boﬁ


3992 
F‹å™_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

3993 
gcc_›ti⁄s
 *
›ts_£t
,

3994 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

3995 
œng_mask
, 
köd
,

3996 
loˇti⁄_t
 
loc
,

3997 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

3998 
dügno°ic_c⁄ãxt
 *
dc
);

3999 
boﬁ


4000 
Go_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

4001 
gcc_›ti⁄s
 *
›ts_£t
,

4002 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

4003 
œng_mask
, 
köd
,

4004 
loˇti⁄_t
 
loc
,

4005 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

4006 
dügno°ic_c⁄ãxt
 *
dc
);

4007 
boﬁ


4008 
Java_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

4009 
gcc_›ti⁄s
 *
›ts_£t
,

4010 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

4011 
œng_mask
, 
köd
,

4012 
loˇti⁄_t
 
loc
,

4013 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

4014 
dügno°ic_c⁄ãxt
 *
dc
);

4015 
boﬁ


4016 
LTO_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

4017 
gcc_›ti⁄s
 *
›ts_£t
,

4018 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

4019 
œng_mask
, 
köd
,

4020 
loˇti⁄_t
 
loc
,

4021 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

4022 
dügno°ic_c⁄ãxt
 *
dc
);

4023 
boﬁ


4024 
ObjC_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

4025 
gcc_›ti⁄s
 *
›ts_£t
,

4026 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

4027 
œng_mask
, 
köd
,

4028 
loˇti⁄_t
 
loc
,

4029 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

4030 
dügno°ic_c⁄ãxt
 *
dc
);

4031 
boﬁ


4032 
ObjCXX_h™dÀ_›ti⁄_auto
 (
gcc_›ti⁄s
 *
›ts
,

4033 
gcc_›ti⁄s
 *
›ts_£t
,

4034 
size_t
 
scode
, c⁄° *
¨g
, 
vÆue
,

4035 
œng_mask
, 
köd
,

4036 
loˇti⁄_t
 
loc
,

4037 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

4038 
dügno°ic_c⁄ãxt
 *
dc
);

4042 
	#MASK_ABORT_NORETURN
 (1 << 0)

	)

4043 
	#MASK_APCS_FRAME
 (1 << 1)

	)

4044 
	#MASK_APCS_FLOAT
 (1 << 2)

	)

4045 
	#MASK_APCS_REENT
 (1 << 3)

	)

4046 
	#MASK_APCS_STACK
 (1 << 4)

	)

4047 
	#MASK_THUMB
 (1 << 5)

	)

4048 
	#MASK_BIG_END
 (1 << 6)

	)

4049 
	#MASK_CALLEE_INTERWORKING
 (1 << 7)

	)

4050 
	#MASK_CALLER_INTERWORKING
 (1 << 8)

	)

4051 
	#MASK_LONG_CALLS
 (1 << 9)

	)

4052 
	#MASK_NEW_GENERIC_COSTS
 (1 << 10)

	)

4053 
	#MASK_OLD_RTX_COSTS
 (1 << 11)

	)

4054 
	#MASK_POKE_FUNCTION_NAME
 (1 << 12)

	)

4055 
	#MASK_SCHED_PROLOG
 (1 << 13)

	)

4056 
	#MASK_SINGLE_PIC_BASE
 (1 << 14)

	)

4057 
	#MASK_INTERWORK
 (1 << 15)

	)

4058 
	#MASK_TPCS_FRAME
 (1 << 16)

	)

4059 
	#MASK_TPCS_LEAF_FRAME
 (1 << 17)

	)

4060 
	#MASK_NEON_VECTORIZE_DOUBLE
 (1 << 18)

	)

4061 
	#MASK_LITTLE_WORDS
 (1 << 19)

	)

4063 
	#TARGET_ABORT_NORETURN
 ((
èrgë_Êags
 & 
MASK_ABORT_NORETURN
Ë!0)

	)

4064 
	#TARGET_ABORT_NORETURN_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_ABORT_NORETURN
Ë!0)

	)

4065 
	#TARGET_APCS_FRAME
 ((
èrgë_Êags
 & 
MASK_APCS_FRAME
Ë!0)

	)

4066 
	#TARGET_APCS_FRAME_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_APCS_FRAME
Ë!0)

	)

4067 
	#TARGET_APCS_FLOAT
 ((
èrgë_Êags
 & 
MASK_APCS_FLOAT
Ë!0)

	)

4068 
	#TARGET_APCS_FLOAT_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_APCS_FLOAT
Ë!0)

	)

4069 
	#TARGET_APCS_REENT
 ((
èrgë_Êags
 & 
MASK_APCS_REENT
Ë!0)

	)

4070 
	#TARGET_APCS_REENT_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_APCS_REENT
Ë!0)

	)

4071 
	#TARGET_APCS_STACK
 ((
èrgë_Êags
 & 
MASK_APCS_STACK
Ë!0)

	)

4072 
	#TARGET_APCS_STACK_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_APCS_STACK
Ë!0)

	)

4073 
	#TARGET_THUMB
 ((
èrgë_Êags
 & 
MASK_THUMB
Ë!0)

	)

4074 
	#TARGET_THUMB_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_THUMB
Ë!0)

	)

4075 
	#TARGET_BIG_END
 ((
èrgë_Êags
 & 
MASK_BIG_END
Ë!0)

	)

4076 
	#TARGET_BIG_END_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_BIG_END
Ë!0)

	)

4077 
	#TARGET_CALLEE_INTERWORKING
 ((
èrgë_Êags
 & 
MASK_CALLEE_INTERWORKING
Ë!0)

	)

4078 
	#TARGET_CALLEE_INTERWORKING_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_CALLEE_INTERWORKING
Ë!0)

	)

4079 
	#TARGET_CALLER_INTERWORKING
 ((
èrgë_Êags
 & 
MASK_CALLER_INTERWORKING
Ë!0)

	)

4080 
	#TARGET_CALLER_INTERWORKING_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_CALLER_INTERWORKING
Ë!0)

	)

4081 
	#TARGET_LONG_CALLS
 ((
èrgë_Êags
 & 
MASK_LONG_CALLS
Ë!0)

	)

4082 
	#TARGET_LONG_CALLS_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_LONG_CALLS
Ë!0)

	)

4083 
	#TARGET_NEW_GENERIC_COSTS
 ((
èrgë_Êags
 & 
MASK_NEW_GENERIC_COSTS
Ë!0)

	)

4084 
	#TARGET_NEW_GENERIC_COSTS_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_NEW_GENERIC_COSTS
Ë!0)

	)

4085 
	#TARGET_OLD_RTX_COSTS
 ((
èrgë_Êags
 & 
MASK_OLD_RTX_COSTS
Ë!0)

	)

4086 
	#TARGET_OLD_RTX_COSTS_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_OLD_RTX_COSTS
Ë!0)

	)

4087 
	#TARGET_POKE_FUNCTION_NAME
 ((
èrgë_Êags
 & 
MASK_POKE_FUNCTION_NAME
Ë!0)

	)

4088 
	#TARGET_POKE_FUNCTION_NAME_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_POKE_FUNCTION_NAME
Ë!0)

	)

4089 
	#TARGET_SCHED_PROLOG
 ((
èrgë_Êags
 & 
MASK_SCHED_PROLOG
Ë!0)

	)

4090 
	#TARGET_SCHED_PROLOG_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_SCHED_PROLOG
Ë!0)

	)

4091 
	#TARGET_SINGLE_PIC_BASE
 ((
èrgë_Êags
 & 
MASK_SINGLE_PIC_BASE
Ë!0)

	)

4092 
	#TARGET_SINGLE_PIC_BASE_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_SINGLE_PIC_BASE
Ë!0)

	)

4093 
	#TARGET_INTERWORK
 ((
èrgë_Êags
 & 
MASK_INTERWORK
Ë!0)

	)

4094 
	#TARGET_INTERWORK_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_INTERWORK
Ë!0)

	)

4095 
	#TARGET_TPCS_FRAME
 ((
èrgë_Êags
 & 
MASK_TPCS_FRAME
Ë!0)

	)

4096 
	#TARGET_TPCS_FRAME_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_TPCS_FRAME
Ë!0)

	)

4097 
	#TARGET_TPCS_LEAF_FRAME
 ((
èrgë_Êags
 & 
MASK_TPCS_LEAF_FRAME
Ë!0)

	)

4098 
	#TARGET_TPCS_LEAF_FRAME_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_TPCS_LEAF_FRAME
Ë!0)

	)

4099 
	#TARGET_NEON_VECTORIZE_DOUBLE
 ((
èrgë_Êags
 & 
MASK_NEON_VECTORIZE_DOUBLE
Ë!0)

	)

4100 
	#TARGET_NEON_VECTORIZE_DOUBLE_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_NEON_VECTORIZE_DOUBLE
Ë!0)

	)

4101 
	#TARGET_LITTLE_WORDS
 ((
èrgë_Êags
 & 
MASK_LITTLE_WORDS
Ë!0)

	)

4102 
	#TARGET_LITTLE_WORDS_P
(
èrgë_Êags
Ë(—¨gë_Êag†& 
MASK_LITTLE_WORDS
Ë!0)

	)

4105 
	#CL_Ada
 (1U << 0)

	)

4106 
	#CL_AdaSCIL
 (1U << 1)

	)

4107 
	#CL_AdaWhy
 (1U << 2)

	)

4108 
	#CL_C
 (1U << 3)

	)

4109 
	#CL_CXX
 (1U << 4)

	)

4110 
	#CL_F‹å™
 (1U << 5)

	)

4111 
	#CL_Go
 (1U << 6)

	)

4112 
	#CL_Java
 (1U << 7)

	)

4113 
	#CL_LTO
 (1U << 8)

	)

4114 
	#CL_ObjC
 (1U << 9)

	)

4115 
	#CL_ObjCXX
 (1U << 10)

	)

4116 
	#CL_LANG_ALL
 ((1U << 11Ë- 1)

	)

4118 
	e›t_code


4120 
	gOPT____
 = 0,

4152 
	gOPT__hñp
 = 32,

4153 
	gOPT__hñp_
 = 33,

4180 
	gOPT__no_sy§oŸ_suffix
 = 60,

4186 
	gOPT__ouçut_pch_
 = 66,

4188 
	gOPT__∑øm
 = 68,

4221 
	gOPT__sy§oŸ_
 = 101,

4222 
	gOPT__èrgë_hñp
 = 102,

4232 
	gOPT__vîsi⁄
 = 112,

4235 
	gOPT_A
 = 115,

4236 
	gOPT_B
 = 116,

4237 
	gOPT_C
 = 117,

4238 
	gOPT_CC
 = 118,

4240 
	gOPT_D
 = 120,

4241 
	gOPT_E
 = 121,

4242 
	gOPT_F
 = 122,

4243 
	gOPT_H
 = 123,

4244 
	gOPT_I
 = 124,

4245 
	gOPT_J
 = 125,

4246 
	gOPT_L
 = 126,

4247 
	gOPT_M
 = 127,

4248 
	gOPT_MD
 = 128,

4249 
	gOPT_MD_
 = 129,

4250 
	gOPT_MF
 = 130,

4251 
	gOPT_MG
 = 131,

4252 
	gOPT_MM
 = 132,

4253 
	gOPT_MMD
 = 133,

4254 
	gOPT_MMD_
 = 134,

4255 
	gOPT_MP
 = 135,

4256 
	gOPT_MQ
 = 136,

4257 
	gOPT_MT
 = 137,

4258 
	gOPT_N
 = 138,

4259 
	gOPT_O
 = 139,

4260 
	gOPT_OÁ°
 = 140,

4261 
	gOPT_Og
 = 141,

4262 
	gOPT_Os
 = 142,

4263 
	gOPT_P
 = 143,

4264 
	gOPT_Q
 = 144,

4265 
	gOPT_Qn
 = 145,

4266 
	gOPT_Qy
 = 146,

4267 
	gOPT_R
 = 147,

4268 
	gOPT_S
 = 148,

4269 
	gOPT_T
 = 149,

4270 
	gOPT_Tbss
 = 150,

4271 
	gOPT_Tbss_
 = 151,

4272 
	gOPT_Td©a
 = 152,

4273 
	gOPT_Td©a_
 = 153,

4274 
	gOPT_Tãxt
 = 154,

4275 
	gOPT_Tãxt_
 = 155,

4276 
	gOPT_U
 = 156,

4278 
	gOPT_Wa_
 = 158,

4279 
	gOPT_Wabi
 = 159,

4280 
	gOPT_Wabi_èg
 = 160,

4281 
	gOPT_Waddªss
 = 161,

4282 
	gOPT_Waggªg©e_ªtu∫
 = 162,

4283 
	gOPT_Waggªssive_lo›_›timiz©i⁄s
 = 163,

4284 
	gOPT_WÆüsög
 = 164,

4285 
	gOPT_WÆign_comm⁄s
 = 165,

4286 
	gOPT_WÆl
 = 166,

4287 
	gOPT_WÆl_dïªˇti⁄
 = 167,

4288 
	gOPT_WÆl_javadoc
 = 168,

4289 
	gOPT_Wam≥rßnd
 = 169,

4290 
	gOPT_W¨øy_bounds
 = 170,

4291 
	gOPT_W¨øy_ãmp‹¨õs
 = 171,

4292 
	gOPT_Was£π_idítifõr
 = 172,

4293 
	gOPT_Wassign_öãr˚±
 = 173,

4294 
	gOPT_W©åibuãs
 = 174,

4295 
	gOPT_Wbad_fun˘i⁄_ˇ°
 = 175,

4296 
	gOPT_Wboxög
 = 176,

4297 
	gOPT_Wbuûtö_ma¸o_ªdeföed
 = 177,

4298 
	gOPT_Wc___com∑t
 = 178,

4299 
	gOPT_Wc__0x_com∑t
 = 179,

4301 
	gOPT_Wc_bödög_ty≥
 = 181,

4302 
	gOPT_Wˇ°_Æign
 = 182,

4303 
	gOPT_Wˇ°_quÆ
 = 183,

4304 
	gOPT_Wch¨_c⁄ˇt
 = 184,

4305 
	gOPT_Wch¨_subs¸ùts
 = 185,

4306 
	gOPT_Wch¨a˘î_åunˇti⁄
 = 186,

4307 
	gOPT_W˛obbîed
 = 187,

4308 
	gOPT_Wcommít
 = 188,

4310 
	gOPT_Wcom∑ª_ªÆs
 = 190,

4311 
	gOPT_Wc⁄dôi⁄_assign
 = 191,

4312 
	gOPT_Wc⁄dôi⁄Æly_suµ‹ãd
 = 192,

4313 
	gOPT_Wc⁄°ru˘‹_«me
 = 193,

4314 
	gOPT_Wc⁄vîsi⁄
 = 194,

4315 
	gOPT_Wc⁄vîsi⁄_exåa
 = 195,

4316 
	gOPT_Wc⁄vîsi⁄_nuŒ
 = 196,

4317 
	gOPT_Wcovîage_mism©ch
 = 197,

4318 
	gOPT_W˝p
 = 198,

4319 
	gOPT_W˘‹_dt‹_¥ivacy
 = 199,

4320 
	gOPT_Wd©e_time
 = 200,

4321 
	gOPT_Wde˛¨©i⁄_a·î_°©emít
 = 201,

4322 
	gOPT_Wdñëe_öcom∂ëe
 = 202,

4323 
	gOPT_Wdñëe_n⁄_vútuÆ_dt‹
 = 203,

4324 
	gOPT_Wdï_™n
 = 204,

4325 
	gOPT_Wdïªˇãd
 = 205,

4326 
	gOPT_Wdïªˇãd_de˛¨©i⁄s
 = 206,

4327 
	gOPT_WdißbÀd_›timiz©i⁄
 = 207,

4328 
	gOPT_Wdiscouøged
 = 208,

4329 
	gOPT_Wdiv_by_zîo
 = 209,

4330 
	gOPT_WdoubÀ_¥omŸi⁄
 = 210,

4331 
	gOPT_Weffc__
 = 211,

4332 
	gOPT_Wem±y_block
 = 212,

4333 
	gOPT_Wem±y_body
 = 213,

4334 
	gOPT_Wídif_œbñs
 = 214,

4335 
	gOPT_Wíum_com∑ª
 = 215,

4336 
	gOPT_Wíum_idítifõr
 = 216,

4337 
	gOPT_Wíum_swôch
 = 217,

4338 
	gOPT_Wîr‹
 = 218,

4340 
	gOPT_Wîr‹_
 = 220,

4341 
	gOPT_Wexåa
 = 221,

4342 
	gOPT_Wexå™eous_£micﬁ⁄
 = 222,

4343 
	gOPT_WÁŒthrough
 = 223,

4344 
	gOPT_WÁèl_îr‹s
 = 224,

4345 
	gOPT_Wfõld_hidög
 = 225,

4346 
	gOPT_WföÆ_bound
 = 226,

4347 
	gOPT_WföÆly
 = 227,

4348 
	gOPT_WÊﬂt_c⁄vîsi⁄
 = 228,

4349 
	gOPT_WÊﬂt_equÆ
 = 229,

4350 
	gOPT_Wf‹biddí
 = 230,

4352 
	gOPT_Wf‹m©_c⁄èös_nul
 = 232,

4353 
	gOPT_Wf‹m©_exåa_¨gs
 = 233,

4354 
	gOPT_Wf‹m©_n⁄lôîÆ
 = 234,

4355 
	gOPT_Wf‹m©_£curôy
 = 235,

4356 
	gOPT_Wf‹m©_y2k
 = 236,

4357 
	gOPT_Wf‹m©_zîo_Àngth
 = 237,

4358 
	gOPT_Wf‹m©_
 = 238,

4359 
	gOPT_W‰ame_œrgî_th™_
 = 239,

4360 
	gOPT_W‰ì_n⁄hóp_obje˘
 = 240,

4361 
	gOPT_Wfun˘i⁄_ñimö©i⁄
 = 241,

4362 
	gOPT_Whidög
 = 242,

4363 
	gOPT_Wign‹ed_quÆifõrs
 = 243,

4364 
	gOPT_Wim∂icô
 = 244,

4365 
	gOPT_Wim∂icô_fun˘i⁄_de˛¨©i⁄
 = 245,

4366 
	gOPT_Wim∂icô_öt
 = 246,

4367 
	gOPT_Wim∂icô_öãrÁ˚
 = 247,

4368 
	gOPT_Wim∂icô_¥o˚duª
 = 248,

4370 
	gOPT_Wödúe˘_°©ic
 = 250,

4371 
	gOPT_Wöhîôed_v¨üdic_˘‹
 = 251,

4372 
	gOPT_Wöô_£lf
 = 252,

4373 
	gOPT_Wölöe
 = 253,

4374 
	gOPT_Wöt_to_poöãr_ˇ°
 = 254,

4375 
	gOPT_Wötf_™nŸ©i⁄
 = 255,

4376 
	gOPT_Wötf_n⁄_öhîôed
 = 256,

4377 
	gOPT_Wöåösic_shadow
 = 257,

4378 
	gOPT_Wöåösics_°d
 = 258,

4379 
	gOPT_WövÆid_mem‹y_modñ
 = 259,

4380 
	gOPT_WövÆid_off£tof
 = 260,

4381 
	gOPT_WövÆid_pch
 = 261,

4382 
	gOPT_Wjavadoc
 = 262,

4383 
	gOPT_Wjump_mis£s_öô
 = 263,

4384 
	gOPT_Wl_
 = 264,

4386 
	gOPT_Wœrgî_th™_
 = 266,

4387 
	gOPT_Wlöe_åunˇti⁄
 = 267,

4388 
	gOPT_WlôîÆ_suffix
 = 268,

4389 
	gOPT_Wloˇl_hidög
 = 269,

4390 
	gOPT_Wlogiˇl_›
 = 270,

4391 
	gOPT_Wl⁄g_l⁄g
 = 271,

4392 
	gOPT_Wmaö
 = 272,

4393 
	gOPT_Wmasked_ˇtch_block
 = 273,

4394 
	gOPT_Wmaybe_unöôülized
 = 274,

4395 
	gOPT_Wmissög_bø˚s
 = 275,

4396 
	gOPT_Wmissög_de˛¨©i⁄s
 = 276,

4397 
	gOPT_Wmissög_fõld_öôülizîs
 = 277,

4399 
	gOPT_Wmissög_ö˛ude_dús
 = 279,

4401 
	gOPT_Wmissög_∑ømëî_ty≥
 = 281,

4402 
	gOPT_Wmissög_¥ŸŸy≥s
 = 282,

4404 
	gOPT_Wmu…ich¨
 = 284,

4405 
	gOPT_W«ºowög
 = 285,

4406 
	gOPT_W√°ed_exã∫s
 = 286,

4407 
	gOPT_W∆s
 = 287,

4408 
	gOPT_Wno_ef„˘_assign
 = 288,

4409 
	gOPT_Wn€x˚±
 = 289,

4410 
	gOPT_Wn⁄_ãm∂©e_‰õnd
 = 290,

4411 
	gOPT_Wn⁄_vútuÆ_dt‹
 = 291,

4412 
	gOPT_Wn⁄nuŒ
 = 292,

4413 
	gOPT_Wn‹mÆized_
 = 293,

4414 
	gOPT_WnuŒ
 = 294,

4415 
	gOPT_Wﬁd_°yÀ_ˇ°
 = 295,

4416 
	gOPT_Wﬁd_°yÀ_de˛¨©i⁄
 = 296,

4417 
	gOPT_Wﬁd_°yÀ_deföôi⁄
 = 297,

4418 
	gOPT_W›ímp_simd
 = 298,

4419 
	gOPT_Wout_of_d©e
 = 299,

4420 
	gOPT_Wovî_™n
 = 300,

4421 
	gOPT_WovîÊow
 = 301,

4422 
	gOPT_WovîÀngth_°rögs
 = 302,

4423 
	gOPT_Wovîlﬂded_vútuÆ
 = 303,

4424 
	gOPT_Wovîride_öô
 = 304,

4425 
	gOPT_Wp_
 = 305,

4426 
	gOPT_W∑cked
 = 306,

4427 
	gOPT_W∑cked_bôfõld_com∑t
 = 307,

4428 
	gOPT_W∑dded
 = 308,

4429 
	gOPT_W∑øm_assign
 = 309,

4430 
	gOPT_W∑ª¡he£s
 = 310,

4431 
	gOPT_W≥d™tic
 = 311,

4432 
	gOPT_Wpkg_deÁu…_mëhod
 = 312,

4433 
	gOPT_Wpmf_c⁄vîsi⁄s
 = 313,

4434 
	gOPT_Wpoöãr_¨ôh
 = 314,

4435 
	gOPT_Wpoöãr_sign
 = 315,

4436 
	gOPT_Wpoöãr_to_öt_ˇ°
 = 316,

4437 
	gOPT_W¥agmas
 = 317,

4438 
	gOPT_W¥›îty_assign_deÁu…
 = 318,

4439 
	gOPT_W¥Ÿocﬁ
 = 319,

4440 
	gOPT_Wpßbi
 = 320,

4441 
	gOPT_Wøw
 = 321,

4442 
	gOPT_WªÆ_q_c⁄°™t
 = 322,

4443 
	gOPT_WªÆloc_lhs
 = 323,

4444 
	gOPT_WªÆloc_lhs_Æl
 = 324,

4445 
	gOPT_Wªdund™t_de˛s
 = 325,

4446 
	gOPT_Wªdund™t_modifõrs
 = 326,

4447 
	gOPT_Wª‹dî
 = 327,

4448 
	gOPT_Wªtu∫_loˇl_addr
 = 328,

4449 
	gOPT_Wªtu∫_ty≥
 = 329,

4450 
	gOPT_W£À˘‹
 = 330,

4451 
	gOPT_W£quí˚_poöt
 = 331,

4452 
	gOPT_W£rül
 = 332,

4453 
	gOPT_Wshadow
 = 333,

4454 
	gOPT_Wsign_com∑ª
 = 334,

4455 
	gOPT_Wsign_c⁄vîsi⁄
 = 335,

4456 
	gOPT_Wsign_¥omo
 = 336,

4457 
	gOPT_Wsizeof_poöãr_memac˚ss
 = 337,

4458 
	gOPT_W•ecül_∑øm_hidög
 = 338,

4459 
	gOPT_W°ack_¥Ÿe˘‹
 = 339,

4460 
	gOPT_W°ack_ußge_
 = 340,

4461 
	gOPT_W°©ic_ac˚ss
 = 341,

4462 
	gOPT_W°©ic_ª˚ivî
 = 342,

4463 
	gOPT_W°ri˘_Æüsög
 = 343,

4464 
	gOPT_W°ri˘_Æüsög_
 = 344,

4465 
	gOPT_W°ri˘_nuŒ_£¡öñ
 = 345,

4466 
	gOPT_W°ri˘_ovîÊow
 = 346,

4467 
	gOPT_W°ri˘_ovîÊow_
 = 347,

4468 
	gOPT_W°ri˘_¥ŸŸy≥s
 = 348,

4469 
	gOPT_W°ri˘_£À˘‹_m©ch
 = 349,

4470 
	gOPT_Wsugge°_©åibuã_c⁄°
 = 350,

4471 
	gOPT_Wsugge°_©åibuã_f‹m©
 = 351,

4472 
	gOPT_Wsugge°_©åibuã_n‹ëu∫
 = 352,

4473 
	gOPT_Wsugge°_©åibuã_puª
 = 353,

4474 
	gOPT_Wsuµªss
 = 354,

4475 
	gOPT_WsuΩrisög
 = 355,

4476 
	gOPT_Wswôch
 = 356,

4477 
	gOPT_Wswôch_deÁu…
 = 357,

4478 
	gOPT_Wswôch_íum
 = 358,

4479 
	gOPT_Wsync_«nd
 = 359,

4480 
	gOPT_Wsy¡h
 = 360,

4481 
	gOPT_Wsy¡hëic_ac˚ss
 = 361,

4482 
	gOPT_Wsy°em_hódîs
 = 362,

4483 
	gOPT_Wèbs
 = 363,

4484 
	gOPT_Wèrgë_li„time
 = 364,

4485 
	gOPT_Wèsks
 = 365,

4486 
	gOPT_Wåadôi⁄Æ
 = 366,

4487 
	gOPT_Wåadôi⁄Æ_c⁄vîsi⁄
 = 367,

4488 
	gOPT_Wåampﬁöes
 = 368,

4489 
	gOPT_Wåigøphs
 = 369,

4490 
	gOPT_Wty≥_hidög
 = 370,

4491 
	gOPT_Wty≥_limôs
 = 371,

4492 
	gOPT_Wuncheck
 = 372,

4493 
	gOPT_Wunde˛¨ed_£À˘‹
 = 373,

4494 
	gOPT_Wundef
 = 374,

4495 
	gOPT_WundîÊow
 = 375,

4496 
	gOPT_Wunöôülized
 = 376,

4497 
	gOPT_Wunknown_¥agmas
 = 377,

4498 
	gOPT_Wu¬e˚sßry_ñ£
 = 378,

4499 
	gOPT_WunquÆifõd_fõld
 = 379,

4501 
	gOPT_Wunß„_lo›_›timiz©i⁄s
 = 381,

4502 
	gOPT_Wunsuffixed_Êﬂt_c⁄°™ts
 = 382,

4503 
	gOPT_Wunu£d
 = 383,

4504 
	gOPT_Wunu£d_¨gumít
 = 384,

4505 
	gOPT_Wunu£d_but_£t_∑ømëî
 = 385,

4506 
	gOPT_Wunu£d_but_£t_v¨übÀ
 = 386,

4507 
	gOPT_Wunu£d_dummy_¨gumít
 = 387,

4508 
	gOPT_Wunu£d_fun˘i⁄
 = 388,

4509 
	gOPT_Wunu£d_imp‹t
 = 389,

4510 
	gOPT_Wunu£d_œbñ
 = 390,

4511 
	gOPT_Wunu£d_loˇl
 = 391,

4512 
	gOPT_Wunu£d_loˇl_ty≥defs
 = 392,

4513 
	gOPT_Wunu£d_ma¸os
 = 393,

4514 
	gOPT_Wunu£d_∑ømëî
 = 394,

4515 
	gOPT_Wunu£d_¥iv©e
 = 395,

4516 
	gOPT_Wunu£d_ªsu…
 = 396,

4517 
	gOPT_Wunu£d_thrown
 = 397,

4518 
	gOPT_Wunu£d_vÆue
 = 398,

4519 
	gOPT_Wunu£d_v¨übÀ
 = 399,

4520 
	gOPT_Wu£Àss_ˇ°
 = 400,

4521 
	gOPT_Wu£Àss_ty≥_check
 = 401,

4522 
	gOPT_Wv¨¨gs
 = 402,

4523 
	gOPT_Wv¨¨gs_ˇ°
 = 403,

4524 
	gOPT_Wv¨üdic_ma¸os
 = 404,

4525 
	gOPT_Wve˘‹_›î©i⁄_≥rf‹m™˚
 = 405,

4526 
	gOPT_WvútuÆ_move_assign
 = 406,

4527 
	gOPT_Wvœ
 = 407,

4528 
	gOPT_Wvﬁ©ûe_ªgi°î_v¨
 = 408,

4529 
	gOPT_Ww¨nög_tokí
 = 409,

4530 
	gOPT_Wwrôe_°rögs
 = 410,

4531 
	gOPT_Wzîo_as_nuŒ_poöãr_c⁄°™t
 = 411,

4532 
	gOPT_WzîŸrù
 = 412,

4533 
	gOPT_Xas£mbÀr
 = 413,

4534 
	gOPT_Xlökî
 = 414,

4535 
	gOPT_X¥ïro˚ss‹
 = 415,

4536 
	gOPT_Z
 = 416,

4537 
	gOPT_™si
 = 417,

4538 
	gOPT_aux_öfo
 = 418,

4540 
	gOPT_auxba£
 = 420,

4541 
	gOPT_auxba£_°rù
 = 421,

4543 
	gOPT_c
 = 423,

4545 
	gOPT_covîage
 = 425,

4546 
	gOPT_˝p
 = 426,

4547 
	gOPT_˝p_
 = 427,

4548 
	gOPT_d
 = 428,

4549 
	gOPT_dumpba£
 = 429,

4550 
	gOPT_dumpdú
 = 430,

4551 
	gOPT_dumpmachöe
 = 431,

4552 
	gOPT_dump•ecs
 = 432,

4553 
	gOPT_dumpvîsi⁄
 = 433,

4554 
	gOPT_e
 = 434,

4556 
	gOPT_exp‹t_dy«mic
 = 436,

4557 
	gOPT_extdús
 = 437,

4559 
	gOPT_fPIC
 = 439,

4560 
	gOPT_fPIE
 = 440,

4561 
	gOPT_fRTS_
 = 441,

4562 
	gOPT_Ábi_vîsi⁄_
 = 442,

4563 
	gOPT_Ác˚ss_c⁄åﬁ
 = 443,

4564 
	gOPT_Áda_•ec_∑ª¡_
 = 444,

4565 
	gOPT_Ággªssive_fun˘i⁄_ñimö©i⁄
 = 445,

4566 
	gOPT_Ággªssive_lo›_›timiz©i⁄s
 = 446,

4567 
	gOPT_Álign_comm⁄s
 = 447,

4568 
	gOPT_Álign_fun˘i⁄s
 = 448,

4569 
	gOPT_Álign_fun˘i⁄s_
 = 449,

4570 
	gOPT_Álign_jumps
 = 450,

4571 
	gOPT_Álign_jumps_
 = 451,

4572 
	gOPT_Álign_œbñs
 = 452,

4573 
	gOPT_Álign_œbñs_
 = 453,

4574 
	gOPT_Álign_lo›s
 = 454,

4575 
	gOPT_Álign_lo›s_
 = 455,

4576 
	gOPT_ÁŒ_öåösics
 = 456,

4578 
	gOPT_ÁŒow_Àadög_undîsc‹e
 = 458,

4579 
	gOPT_ÁŒow_∑ømëîÀss_v¨üdic_fun˘i⁄s
 = 459,

4585 
	gOPT_Ásm
 = 465,

4586 
	gOPT_Ás£π
 = 466,

4587 
	gOPT_Ássocütive_m©h
 = 467,

4588 
	gOPT_Ássume_compûed
 = 468,

4589 
	gOPT_Ássume_compûed_
 = 469,

4590 
	gOPT_Ásynchr⁄ous_unwöd_èbÀs
 = 470,

4591 
	gOPT_Áuto_öc_dec
 = 471,

4592 
	gOPT_Áutom©ic
 = 472,

4593 
	gOPT_Áux_˛as•©h
 = 473,

4594 
	gOPT_fback¶ash
 = 474,

4595 
	gOPT_fbackåa˚
 = 475,

4596 
	gOPT_fbœs_m©mul_limô_
 = 476,

4597 
	gOPT_fboŸ˛as•©h_
 = 477,

4598 
	gOPT_fboŸ°øp_˛as£s
 = 478,

4599 
	gOPT_fbounds_check
 = 479,

4600 
	gOPT_fbønch_cou¡_ªg
 = 480,

4601 
	gOPT_fbønch_¥obabûôõs
 = 481,

4602 
	gOPT_fbønch_èrgë_lﬂd_›timize
 = 482,

4603 
	gOPT_fbønch_èrgë_lﬂd_›timize2
 = 483,

4604 
	gOPT_fbå_bb_ex˛usive
 = 484,

4605 
	gOPT_fbuûdög_libgcc
 = 485,

4606 
	gOPT_fbuûtö
 = 486,

4607 
	gOPT_fbuûtö_
 = 487,

4608 
	gOPT_fˇŒ_ßved_
 = 488,

4609 
	gOPT_fˇŒ_u£d_
 = 489,

4610 
	gOPT_fˇŒî_ßves
 = 490,

4611 
	gOPT_fˇn⁄iˇl_sy°em_hódîs
 = 491,

4612 
	gOPT_fcheck_¨øy_ãmp‹¨õs
 = 492,

4613 
	gOPT_fcheck_d©a_dïs
 = 493,

4614 
	gOPT_fcheck_√w
 = 494,

4615 
	gOPT_fcheck_ª„ªn˚s
 = 495,

4616 
	gOPT_fcheck_
 = 496,

4617 
	gOPT_fcûk∂us
 = 497,

4618 
	gOPT_f˛as•©h_
 = 498,

4619 
	gOPT_fcﬂºay_
 = 499,

4620 
	gOPT_fcomböe_°ack_adju°míts
 = 500,

4621 
	gOPT_fcomm⁄
 = 501,

4622 
	gOPT_fcom∑ª_debug
 = 502,

4623 
	gOPT_fcom∑ª_debug_£c⁄d
 = 503,

4624 
	gOPT_fcom∑ª_debug_
 = 504,

4625 
	gOPT_fcom∑ª_ñim
 = 505,

4626 
	gOPT_fcompûe_ªsour˚_
 = 506,

4627 
	gOPT_fc⁄d_mism©ch
 = 507,

4628 
	gOPT_fc⁄£rve_•a˚
 = 508,

4629 
	gOPT_fc⁄£rve_°ack
 = 509,

4630 
	gOPT_fc⁄°™t_°rög_˛ass_
 = 510,

4631 
	gOPT_fc⁄°ex¥_dïth_
 = 511,

4632 
	gOPT_fc⁄vît_big_ídün
 = 512,

4633 
	gOPT_fc⁄vît_lôée_ídün
 = 513,

4634 
	gOPT_fc⁄vît_«tive
 = 514,

4635 
	gOPT_fc⁄vît_sw≠
 = 515,

4636 
	gOPT_f˝r›_ªgi°îs
 = 516,

4637 
	gOPT_f¸ay_poöãr
 = 517,

4638 
	gOPT_f¸ossjumpög
 = 518,

4639 
	gOPT_fc£_fﬁlow_jumps
 = 519,

4641 
	gOPT_fcx_f‹å™_ruÀs
 = 521,

4642 
	gOPT_fcx_limôed_ønge
 = 522,

4643 
	gOPT_fd_löes_as_code
 = 523,

4644 
	gOPT_fd_löes_as_commíts
 = 524,

4645 
	gOPT_fd©a_£˘i⁄s
 = 525,

4646 
	gOPT_fdbg_˙t_li°
 = 526,

4647 
	gOPT_fdbg_˙t_
 = 527,

4648 
	gOPT_fd˚
 = 528,

4649 
	gOPT_fdebug_˝p
 = 529,

4650 
	gOPT_fdebug_¥efix_m≠_
 = 530,

4651 
	gOPT_fdebug_ty≥s_£˘i⁄
 = 531,

4652 
	gOPT_fde˛⁄e_˘‹_dt‹
 = 532,

4653 
	gOPT_fdedu˚_öô_li°
 = 533,

4654 
	gOPT_fdeÁu…_doubÀ_8
 = 534,

4656 
	gOPT_fdeÁu…_öãgî_8
 = 536,

4657 
	gOPT_fdeÁu…_ªÆ_8
 = 537,

4658 
	gOPT_fde„r_p›
 = 538,

4659 
	gOPT_fdñayed_bønch
 = 539,

4660 
	gOPT_fdñëe_dód_ex˚±i⁄s
 = 540,

4661 
	gOPT_fdñëe_nuŒ_poöãr_checks
 = 541,

4662 
	gOPT_fdevútuÆize
 = 542,

4663 
	gOPT_fdevútuÆize_•ecuœtivñy
 = 543,

4665 
	gOPT_fdügno°ics_cﬁ‹_
 = 545,

4666 
	gOPT_fdügno°ics_show_ˇªt
 = 546,

4667 
	gOPT_fdügno°ics_show_loˇti⁄_
 = 547,

4668 
	gOPT_fdügno°ics_show_›ti⁄
 = 548,

4669 
	gOPT_fdúe˘ives_⁄ly
 = 549,

4670 
	gOPT_fdißbÀ_
 = 550,

4671 
	gOPT_fdißbÀ_as£πi⁄s
 = 551,

4672 
	gOPT_fdißbÀ_as£πi⁄s_
 = 552,

4673 
	gOPT_fdﬁœr_ok
 = 553,

4674 
	gOPT_fdﬁœrs_ö_idítifõrs
 = 554,

4675 
	gOPT_fd£
 = 555,

4676 
	gOPT_fdump_
 = 556,

4677 
	gOPT_fdump_ada_•ec
 = 557,

4678 
	gOPT_fdump_ada_•ec_¶im
 = 558,

4680 
	gOPT_fdump_föÆ_ö¢s
 = 560,

4681 
	gOPT_fdump_föÆ_ö¢s_
 = 561,

4682 
	gOPT_fdump_f‹å™_›timized
 = 562,

4683 
	gOPT_fdump_f‹å™_‹igöÆ
 = 563,

4684 
	gOPT_fdump_go_•ec_
 = 564,

4685 
	gOPT_fdump_nﬂddr
 = 565,

4686 
	gOPT_fdump_∑r£_åì
 = 566,

4687 
	gOPT_fdump_∑s£s
 = 567,

4688 
	gOPT_fdump_u¬umbîed
 = 568,

4689 
	gOPT_fdump_u¬umbîed_löks
 = 569,

4690 
	gOPT_fdw¨f2_cfi_asm
 = 570,

4691 
	gOPT_„¨ly_ölöög
 = 571,

4692 
	gOPT_„lide_c⁄°ru˘‹s
 = 572,

4693 
	gOPT_„limö©e_dw¨f2_dups
 = 573,

4694 
	gOPT_„limö©e_unu£d_debug_symbﬁs
 = 574,

4695 
	gOPT_„limö©e_unu£d_debug_ty≥s
 = 575,

4696 
	gOPT_„mô_˛ass_debug_Æways
 = 576,

4697 
	gOPT_„mô_˛ass_fûe
 = 577,

4698 
	gOPT_„mô_˛ass_fûes
 = 578,

4699 
	gOPT_„mô_°ru˘_debug_ba£⁄ly
 = 579,

4700 
	gOPT_„mô_°ru˘_debug_dëaûed_
 = 580,

4701 
	gOPT_„mô_°ru˘_debug_ªdu˚d
 = 581,

4702 
	gOPT_„«bÀ_
 = 582,

4703 
	gOPT_„«bÀ_as£πi⁄s
 = 583,

4704 
	gOPT_„«bÀ_as£πi⁄s_
 = 584,

4705 
	gOPT_„ncodög_
 = 585,

4706 
	gOPT_„nf‹˚_eh_•ecs
 = 586,

4708 
	gOPT_„x˚±i⁄s
 = 588,

4709 
	gOPT_„x˚ss_¥ecisi⁄_
 = 589,

4710 
	gOPT_„xec_ch¨£t_
 = 590,

4711 
	gOPT_„x≥nsive_›timiz©i⁄s
 = 591,

4712 
	gOPT_„xt_numîic_lôîÆs
 = 592,

4713 
	gOPT_„xtdús_
 = 593,

4714 
	gOPT_„xãnded_idítifõrs
 = 594,

4715 
	gOPT_„xã∫_és_öô
 = 595,

4716 
	gOPT_„xã∫Æ_bœs
 = 596,

4718 
	gOPT_ff2c
 = 598,

4719 
	gOPT_fÁ°_m©h
 = 599,

4720 
	gOPT_fÁt_…o_obje˘s
 = 600,

4721 
	gOPT_ffûñi°_fûe
 = 601,

4722 
	gOPT_fföôe_m©h_⁄ly
 = 602,

4723 
	gOPT_ffixed_
 = 603,

4724 
	gOPT_ffixed_f‹m
 = 604,

4725 
	gOPT_ffixed_löe_Àngth_
 = 605,

4726 
	gOPT_ffixed_löe_Àngth_n⁄e
 = 606,

4727 
	gOPT_fÊﬂt_°‹e
 = 607,

4728 
	gOPT_ff‹_sc›e
 = 608,

4730 
	gOPT_ff‹˚_˛as£s_¨chive_check
 = 610,

4731 
	gOPT_ff‹w¨d_¥›ag©e
 = 611,

4732 
	gOPT_fÂ_c⁄åa˘_
 = 612,

4733 
	gOPT_fÂe_summ¨y_
 = 613,

4734 
	gOPT_fÂe_å≠_
 = 614,

4735 
	gOPT_f‰ì_f‹m
 = 615,

4736 
	gOPT_f‰ì_löe_Àngth_
 = 616,

4737 
	gOPT_f‰ì_löe_Àngth_n⁄e
 = 617,

4738 
	gOPT_f‰ì°™dög
 = 618,

4739 
	gOPT_f‰õnd_öje˘i⁄
 = 619,

4740 
	gOPT_f‰⁄ãnd_›timize
 = 620,

4741 
	gOPT_ffun˘i⁄_c£
 = 621,

4742 
	gOPT_ffun˘i⁄_£˘i⁄s
 = 622,

4743 
	gOPT_fgc£
 = 623,

4744 
	gOPT_fgc£_a·î_ªlﬂd
 = 624,

4745 
	gOPT_fgc£_œs
 = 625,

4746 
	gOPT_fgc£_lm
 = 626,

4747 
	gOPT_fgc£_sm
 = 627,

4748 
	gOPT_fgnu_keyw‹ds
 = 628,

4749 
	gOPT_fgnu_ru¡ime
 = 629,

4750 
	gOPT_fgnu_tm
 = 630,

4751 
	gOPT_fgnu_unique
 = 631,

4752 
	gOPT_fgnu89_ölöe
 = 632,

4753 
	gOPT_fgo_check_divide_ovîÊow
 = 633,

4754 
	gOPT_fgo_check_divide_zîo
 = 634,

4755 
	gOPT_fgo_dump_
 = 635,

4756 
	gOPT_fgo_›timize_
 = 636,

4757 
	gOPT_fgo_pkg∑th_
 = 637,

4758 
	gOPT_fgo_¥efix_
 = 638,

4759 
	gOPT_fgo_ªœtive_imp‹t_∑th_
 = 639,

4760 
	gOPT_fgøphôe
 = 640,

4761 
	gOPT_fgøphôe_idítôy
 = 641,

4762 
	gOPT_fguess_bønch_¥obabûôy
 = 642,

4765 
	gOPT_fhash_synchr⁄iz©i⁄
 = 645,

4768 
	gOPT_fhoi°_adja˚¡_lﬂds
 = 648,

4770 
	gOPT_fho°ed
 = 650,

4772 
	gOPT_fidít
 = 652,

4773 
	gOPT_fif_c⁄vîsi⁄
 = 653,

4774 
	gOPT_fif_c⁄vîsi⁄2
 = 654,

4775 
	gOPT_fim∂emít_ölöes
 = 655,

4776 
	gOPT_fim∂icô_ölöe_ãm∂©es
 = 656,

4777 
	gOPT_fim∂icô_n⁄e
 = 657,

4778 
	gOPT_fim∂icô_ãm∂©es
 = 658,

4779 
	gOPT_födúe˘_˛as£s
 = 659,

4780 
	gOPT_födúe˘_di•©ch
 = 660,

4781 
	gOPT_födúe˘_ölöög
 = 661,

4782 
	gOPT_föhibô_size_dúe˘ive
 = 662,

4783 
	gOPT_föô_ch¨a˘î_
 = 663,

4784 
	gOPT_föô_öãgî_
 = 664,

4785 
	gOPT_föô_loˇl_zîo
 = 665,

4786 
	gOPT_föô_logiˇl_
 = 666,

4787 
	gOPT_föô_ªÆ_
 = 667,

4788 
	gOPT_fölöe
 = 668,

4789 
	gOPT_fölöe_©omics
 = 669,

4790 
	gOPT_fölöe_fun˘i⁄s
 = 670,

4791 
	gOPT_fölöe_fun˘i⁄s_ˇŒed_⁄˚
 = 671,

4793 
	gOPT_fölöe_limô_
 = 673,

4794 
	gOPT_fölöe_smÆl_fun˘i⁄s
 = 674,

4795 
	gOPT_föput_ch¨£t_
 = 675,

4796 
	gOPT_fö°rumít_fun˘i⁄s
 = 676,

4797 
	gOPT_fö°rumít_fun˘i⁄s_ex˛ude_fûe_li°_
 = 677,

4798 
	gOPT_fö°rumít_fun˘i⁄s_ex˛ude_fun˘i⁄_li°_
 = 678,

4799 
	gOPT_föãgî_4_öãgî_8
 = 679,

4800 
	gOPT_föåösic_moduÀs_∑th
 = 680,

4801 
	gOPT_föåösic_moduÀs_∑th_
 = 681,

4802 
	gOPT_fùa_˝
 = 682,

4803 
	gOPT_fùa_˝_˛⁄e
 = 683,

4805 
	gOPT_fùa_¥ofûe
 = 685,

4806 
	gOPT_fùa_±a
 = 686,

4807 
	gOPT_fùa_puª_c⁄°
 = 687,

4808 
	gOPT_fùa_ª„ªn˚
 = 688,

4809 
	gOPT_fùa_§a
 = 689,

4811 
	gOPT_fúa_Æg‹ôhm_
 = 691,

4812 
	gOPT_fúa_hoi°_¥essuª
 = 692,

4813 
	gOPT_fúa_lo›_¥essuª
 = 693,

4814 
	gOPT_fúa_ªgi⁄_
 = 694,

4815 
	gOPT_fúa_sh¨e_ßve_¶Ÿs
 = 695,

4816 
	gOPT_fúa_sh¨e_•ûl_¶Ÿs
 = 696,

4817 
	gOPT_fúa_vîbo£_
 = 697,

4818 
	gOPT_fisﬁ©e_îr⁄eous_∑ths_©åibuã
 = 698,

4819 
	gOPT_fisﬁ©e_îr⁄eous_∑ths_dîe„ªn˚
 = 699,

4820 
	gOPT_fiv›ts
 = 700,

4821 
	gOPT_fjni
 = 701,

4822 
	gOPT_fjump_èbÀs
 = 702,

4823 
	gOPT_fkìp_ölöe_dŒexp‹t
 = 703,

4824 
	gOPT_fkìp_ölöe_fun˘i⁄s
 = 704,

4825 
	gOPT_fkìp_°©ic_c⁄°s
 = 705,

4827 
	gOPT_Êax_ve˘‹_c⁄vîsi⁄s
 = 707,

4828 
	gOPT_Êódög_undîsc‹e
 = 708,

4829 
	gOPT_Êi„time_d£
 = 709,

4830 
	gOPT_Êive_ønge_shrökage
 = 710,

4831 
	gOPT_Êo›_block
 = 711,

4833 
	gOPT_Êo›_öãrch™ge
 = 713,

4834 
	gOPT_Êo›_√°_›timize
 = 714,

4836 
	gOPT_Êo›_∑øŒñize_Æl
 = 716,

4837 
	gOPT_Êo›_°rù_möe
 = 717,

4838 
	gOPT_Êto
 = 718,

4839 
	gOPT_Êto_com¥essi⁄_Àvñ_
 = 719,

4840 
	gOPT_Êto_∑πôi⁄_1to1
 = 720,

4841 
	gOPT_Êto_∑πôi⁄_bÆ™˚d
 = 721,

4842 
	gOPT_Êto_∑πôi⁄_max
 = 722,

4843 
	gOPT_Êto_∑πôi⁄_n⁄e
 = 723,

4844 
	gOPT_Êto_ªp‹t
 = 724,

4845 
	gOPT_Êto_ªp‹t_w∑
 = 725,

4846 
	gOPT_Êto_
 = 726,

4847 
	gOPT_Êå™s
 = 727,

4848 
	gOPT_Êå™s_ouçut_li°_
 = 728,

4849 
	gOPT_fmaö_
 = 729,

4850 
	gOPT_fm©h_î∫o
 = 730,

4851 
	gOPT_fmax_¨øy_c⁄°ru˘‹_
 = 731,

4852 
	gOPT_fmax_îr‹s_
 = 732,

4853 
	gOPT_fmax_idítifõr_Àngth_
 = 733,

4854 
	gOPT_fmax_°ack_v¨_size_
 = 734,

4855 
	gOPT_fmax_subªc‹d_Àngth_
 = 735,

4856 
	gOPT_fmem_ªp‹t
 = 736,

4857 
	gOPT_fmem_ªp‹t_w∑
 = 737,

4858 
	gOPT_fmîge_Æl_c⁄°™ts
 = 738,

4859 
	gOPT_fmîge_c⁄°™ts
 = 739,

4860 
	gOPT_fmîge_debug_°rögs
 = 740,

4861 
	gOPT_fmesßge_Àngth_
 = 741,

4862 
	gOPT_fmoduÀ_¥iv©e
 = 742,

4863 
	gOPT_fmodulo_sched
 = 743,

4864 
	gOPT_fmodulo_sched_Ælow_ªgmoves
 = 744,

4865 
	gOPT_fmove_lo›_öv¨ü¡s
 = 745,

4866 
	gOPT_fms_exãnsi⁄s
 = 746,

4872 
	gOPT_‚ext_ru¡ime
 = 752,

4873 
	gOPT_‚û_ª˚ivîs
 = 753,

4875 
	gOPT_‚⁄_ˇŒ_ex˚±i⁄s
 = 755,

4876 
	gOPT_‚⁄™si_buûtös
 = 756,

4878 
	gOPT_‚Ÿhrow_›t
 = 758,

4879 
	gOPT_fobjc_abi_vîsi⁄_
 = 759,

4880 
	gOPT_fobjc_ˇŒ_cxx_cdt‹s
 = 760,

4881 
	gOPT_fobjc_dúe˘_di•©ch
 = 761,

4882 
	gOPT_fobjc_ex˚±i⁄s
 = 762,

4883 
	gOPT_fobjc_gc
 = 763,

4884 
	gOPT_fobjc_nûcheck
 = 764,

4885 
	gOPT_fobjc_sjlj_ex˚±i⁄s
 = 765,

4886 
	gOPT_fobjc_°d_objc1
 = 766,

4887 
	gOPT_fomô_‰ame_poöãr
 = 767,

4888 
	gOPT_f›ímp
 = 768,

4889 
	gOPT_f›ímp_simd
 = 769,

4890 
	gOPT_f›î©‹_«mes
 = 770,

4891 
	gOPT_f›t_öfo
 = 771,

4892 
	gOPT_f›t_öfo_
 = 772,

4894 
	gOPT_f›timize_siblög_ˇŒs
 = 774,

4895 
	gOPT_f›timize_°©ic_˛ass_öôüliz©i⁄
 = 775,

4896 
	gOPT_f›timize_°æí
 = 776,

4898 
	gOPT_fouçut_˛ass_dú_
 = 778,

4899 
	gOPT_Âack_dîived
 = 779,

4900 
	gOPT_Âack_°ru˘
 = 780,

4901 
	gOPT_Âack_°ru˘_
 = 781,

4902 
	gOPT_Â¨tül_ölöög
 = 782,

4903 
	gOPT_Âcc_°ru˘_ªtu∫
 = 783,

4904 
	gOPT_Âch_dïs
 = 784,

4905 
	gOPT_Âch_¥ïro˚ss
 = 785,

4906 
	gOPT_Âìl_lo›s
 = 786,

4907 
	gOPT_Âìphﬁe
 = 787,

4908 
	gOPT_Âìphﬁe2
 = 788,

4909 
	gOPT_Âîmissive
 = 789,

4910 
	gOPT_Âic
 = 790,

4911 
	gOPT_Âõ
 = 791,

4912 
	gOPT_Âœn9_exãnsi⁄s
 = 792,

4913 
	gOPT_Âlugö_¨g_
 = 793,

4914 
	gOPT_Âlugö_
 = 794,

4915 
	gOPT_Âo°_ùa_mem_ªp‹t
 = 795,

4916 
	gOPT_Âª_ùa_mem_ªp‹t
 = 796,

4917 
	gOPT_Âªdi˘ive_comm⁄ög
 = 797,

4918 
	gOPT_Âª„tch_lo›_¨øys
 = 798,

4919 
	gOPT_Âª¥o˚s£d
 = 799,

4920 
	gOPT_Âªây_ãm∂©es
 = 800,

4921 
	gOPT_Ârofûe
 = 801,

4922 
	gOPT_Ârofûe_¨cs
 = 802,

4923 
	gOPT_Ârofûe_c‹ª˘i⁄
 = 803,

4924 
	gOPT_Ârofûe_dú_
 = 804,

4925 
	gOPT_Ârofûe_gíî©e
 = 805,

4926 
	gOPT_Ârofûe_gíî©e_
 = 806,

4927 
	gOPT_Ârofûe_ª‹dî_fun˘i⁄s
 = 807,

4928 
	gOPT_Ârofûe_ªp‹t
 = 808,

4929 
	gOPT_Ârofûe_u£
 = 809,

4930 
	gOPT_Ârofûe_u£_
 = 810,

4931 
	gOPT_Ârofûe_vÆues
 = 811,

4932 
	gOPT_ÂrŸe˘_∑ªns
 = 812,

4933 
	gOPT_‰™dom_£ed
 = 813,

4934 
	gOPT_‰™dom_£ed_
 = 814,

4935 
	gOPT_‰™ge_check
 = 815,

4936 
	gOPT_‰ól_4_ªÆ_10
 = 816,

4937 
	gOPT_‰ól_4_ªÆ_16
 = 817,

4938 
	gOPT_‰ól_4_ªÆ_8
 = 818,

4939 
	gOPT_‰ól_8_ªÆ_10
 = 819,

4940 
	gOPT_‰ól_8_ªÆ_16
 = 820,

4941 
	gOPT_‰ól_8_ªÆ_4
 = 821,

4942 
	gOPT_‰óŒoc_lhs
 = 822,

4943 
	gOPT_‰ecùroˇl_m©h
 = 823,

4944 
	gOPT_‰ec‹d_gcc_swôches
 = 824,

4945 
	gOPT_‰ec‹d_m¨kî_4
 = 825,

4946 
	gOPT_‰ec‹d_m¨kî_8
 = 826,

4947 
	gOPT_‰ecursive
 = 827,

4948 
	gOPT_‰edu˚d_ªÊe˘i⁄
 = 828,

4949 
	gOPT_‰ì
 = 829,

4950 
	gOPT_‰eg_°ru˘_ªtu∫
 = 830,

4952 
	gOPT_‰íame_ªgi°îs
 = 832,

4953 
	gOPT_‰e‹dî_blocks
 = 833,

4954 
	gOPT_‰e‹dî_blocks_™d_∑πôi⁄
 = 834,

4955 
	gOPT_‰e‹dî_fun˘i⁄s
 = 835,

4956 
	gOPT_‰ïack_¨øys
 = 836,

4957 
	gOPT_‰ïœ˚_objc_˛as£s
 = 837,

4958 
	gOPT_‰ïo
 = 838,

4959 
	gOPT_‰equúe_ªtu∫_°©emít
 = 839,

4960 
	gOPT_‰îun_c£_a·î_lo›
 = 840,

4962 
	gOPT_‰escheduÀ_modulo_scheduÀd_lo›s
 = 842,

4963 
	gOPT_‰esﬁuti⁄_
 = 843,

4964 
	gOPT_‰oundög_m©h
 = 844,

4965 
	gOPT_‰âi
 = 845,

4966 
	gOPT_fßnôize_
 = 846,

4967 
	gOPT_fßw_java_fûe
 = 847,

4968 
	gOPT_fsched_¸ôiˇl_∑th_heuri°ic
 = 848,

4969 
	gOPT_fsched_dï_cou¡_heuri°ic
 = 849,

4970 
	gOPT_fsched_group_heuri°ic
 = 850,

4971 
	gOPT_fsched_öãrblock
 = 851,

4972 
	gOPT_fsched_œ°_ö¢_heuri°ic
 = 852,

4973 
	gOPT_fsched_¥essuª
 = 853,

4974 
	gOPT_fsched_ønk_heuri°ic
 = 854,

4975 
	gOPT_fsched_•ec
 = 855,

4976 
	gOPT_fsched_•ec_ö¢_heuri°ic
 = 856,

4977 
	gOPT_fsched_•ec_lﬂd
 = 857,

4978 
	gOPT_fsched_•ec_lﬂd_d™gîous
 = 858,

4979 
	gOPT_fsched_°ÆÀd_ö¢s
 = 859,

4980 
	gOPT_fsched_°ÆÀd_ö¢s_dï
 = 860,

4981 
	gOPT_fsched_°ÆÀd_ö¢s_dï_
 = 861,

4982 
	gOPT_fsched_°ÆÀd_ö¢s_
 = 862,

4983 
	gOPT_fsched_vîbo£_
 = 863,

4984 
	gOPT_fsched2_u£_su≥rblocks
 = 864,

4986 
	gOPT_fscheduÀ_ö¢s
 = 866,

4987 
	gOPT_fscheduÀ_ö¢s2
 = 867,

4988 
	gOPT_f£c⁄d_undîsc‹e
 = 868,

4989 
	gOPT_f£˘i⁄_™ch‹s
 = 869,

4991 
	gOPT_f£l_sched_pùñöög
 = 871,

4992 
	gOPT_f£l_sched_pùñöög_ouãr_lo›s
 = 872,

4993 
	gOPT_f£l_sched_ªscheduÀ_pùñöed
 = 873,

4994 
	gOPT_f£À˘ive_schedulög
 = 874,

4995 
	gOPT_f£À˘ive_schedulög2
 = 875,

4996 
	gOPT_fsh‹t_doubÀ
 = 876,

4997 
	gOPT_fsh‹t_íums
 = 877,

4998 
	gOPT_fsh‹t_wch¨
 = 878,

4999 
	gOPT_fshow_cﬁumn
 = 879,

5000 
	gOPT_fshrök_wøp
 = 880,

5001 
	gOPT_fsign_zîo
 = 881,

5002 
	gOPT_fsig«lög_«ns
 = 882,

5003 
	gOPT_fsig√d_bôfõlds
 = 883,

5004 
	gOPT_fsig√d_ch¨
 = 884,

5005 
	gOPT_fsig√d_zîos
 = 885,

5006 
	gOPT_fsimd_co°_modñ_
 = 886,

5007 
	gOPT_fsögÀ_¥ecisi⁄_c⁄°™t
 = 887,

5008 
	gOPT_fsour˚_fûíame_
 = 888,

5009 
	gOPT_fsour˚_
 = 889,

5010 
	gOPT_f•lô_ivs_ö_uƒﬁÀr
 = 890,

5011 
	gOPT_f•lô_°ack
 = 891,

5012 
	gOPT_f•lô_wide_ty≥s
 = 892,

5014 
	gOPT_f°ack_¨øys
 = 894,

5016 
	gOPT_f°ack_check_
 = 896,

5017 
	gOPT_f°ack_limô
 = 897,

5018 
	gOPT_f°ack_limô_ªgi°î_
 = 898,

5019 
	gOPT_f°ack_limô_symbﬁ_
 = 899,

5020 
	gOPT_f°ack_¥Ÿe˘‹
 = 900,

5021 
	gOPT_f°ack_¥Ÿe˘‹_Æl
 = 901,

5022 
	gOPT_f°ack_¥Ÿe˘‹_°r⁄g
 = 902,

5023 
	gOPT_f°ack_ªu£_
 = 903,

5024 
	gOPT_f°ack_ußge
 = 904,

5025 
	gOPT_f°©s
 = 905,

5026 
	gOPT_f°‹e_check
 = 906,

5028 
	gOPT_f°ri˘_Æüsög
 = 908,

5029 
	gOPT_f°ri˘_íums
 = 909,

5030 
	gOPT_f°ri˘_ovîÊow
 = 910,

5032 
	gOPT_f°ri˘_vﬁ©ûe_bôfõlds
 = 912,

5033 
	gOPT_fsync_libˇŒs
 = 913,

5034 
	gOPT_fsy¡ax_⁄ly
 = 914,

5035 
	gOPT_·ab°›_
 = 915,

5037 
	gOPT_·¨gë_
 = 917,

5038 
	gOPT_·em∂©e_backåa˚_limô_
 = 918,

5040 
	gOPT_·em∂©e_dïth_
 = 920,

5041 
	gOPT_·e°_covîage
 = 921,

5043 
	gOPT_·hªad_jumps
 = 923,

5044 
	gOPT_·hªadß„_°©ics
 = 924,

5045 
	gOPT_·ime_ªp‹t
 = 925,

5046 
	gOPT_·ls_modñ_
 = 926,

5047 
	gOPT_·›Àvñ_ª‹dî
 = 927,

5048 
	gOPT_·ø˚r
 = 928,

5049 
	gOPT_·øck_ma¸o_ex∑nsi⁄
 = 929,

5050 
	gOPT_·øck_ma¸o_ex∑nsi⁄_
 = 930,

5051 
	gOPT_·øµög_m©h
 = 931,

5052 
	gOPT_·øpv
 = 932,

5053 
	gOPT_·ªe_bô_c˝
 = 933,

5054 
	gOPT_·ªe_buûtö_ˇŒ_d˚
 = 934,

5055 
	gOPT_·ªe_c˝
 = 935,

5056 
	gOPT_·ªe_ch
 = 936,

5057 
	gOPT_·ªe_cﬂÀs˚_ölöed_v¨s
 = 937,

5058 
	gOPT_·ªe_cﬂÀs˚_v¨s
 = 938,

5059 
	gOPT_·ªe_c›y_¥›
 = 939,

5060 
	gOPT_·ªe_c›yª«me
 = 940,

5061 
	gOPT_·ªe_c£lim
 = 941,

5062 
	gOPT_·ªe_d˚
 = 942,

5063 
	gOPT_·ªe_domö©‹_›ts
 = 943,

5064 
	gOPT_·ªe_d£
 = 944,

5065 
	gOPT_·ªe_f‹w¥›
 = 945,

5066 
	gOPT_·ªe_‰e
 = 946,

5067 
	gOPT_·ªe_lo›_di°ribuã_∑âîns
 = 947,

5068 
	gOPT_·ªe_lo›_di°ributi⁄
 = 948,

5069 
	gOPT_·ªe_lo›_if_c⁄vît
 = 949,

5070 
	gOPT_·ªe_lo›_if_c⁄vît_°‹es
 = 950,

5071 
	gOPT_·ªe_lo›_im
 = 951,

5072 
	gOPT_·ªe_lo›_ivˇn⁄
 = 952,

5074 
	gOPT_·ªe_lo›_›timize
 = 954,

5075 
	gOPT_·ªe_lo›_ve˘‹ize
 = 955,

5076 
	gOPT_·ªe_Ãs
 = 956,

5077 
	gOPT_·ªe_∑øŒñize_lo›s_
 = 957,

5078 
	gOPT_·ªe_∑πül_¥e
 = 958,

5079 
	gOPT_·ªe_phùr›
 = 959,

5080 
	gOPT_·ªe_¥e
 = 960,

5081 
	gOPT_·ªe_±a
 = 961,

5082 
	gOPT_·ªe_ªassoc
 = 962,

5084 
	gOPT_·ªe_s˚v_˝r›
 = 964,

5085 
	gOPT_·ªe_sök
 = 965,

5086 
	gOPT_·ªe_¶p_ve˘‹ize
 = 966,

5087 
	gOPT_·ªe_¶§
 = 967,

5088 
	gOPT_·ªe_§a
 = 968,

5091 
	gOPT_·ªe_swôch_c⁄vîsi⁄
 = 971,

5092 
	gOPT_·ªe_swôch_sh‹tcut
 = 972,

5093 
	gOPT_·ªe_èû_mîge
 = 973,

5094 
	gOPT_·ªe_ãr
 = 974,

5096 
	gOPT_·ªe_ve˘‹ize
 = 976,

5098 
	gOPT_·ªe_vΩ
 = 978,

5099 
	gOPT_fundîsc‹ög
 = 979,

5100 
	gOPT_funô_©_a_time
 = 980,

5101 
	gOPT_fuƒﬁl_Æl_lo›s
 = 981,

5102 
	gOPT_fuƒﬁl_lo›s
 = 982,

5103 
	gOPT_funß„_lo›_›timiz©i⁄s
 = 983,

5104 
	gOPT_funß„_m©h_›timiz©i⁄s
 = 984,

5105 
	gOPT_funsig√d_bôfõlds
 = 985,

5106 
	gOPT_funsig√d_ch¨
 = 986,

5107 
	gOPT_funswôch_lo›s
 = 987,

5108 
	gOPT_funwöd_èbÀs
 = 988,

5109 
	gOPT_fu£_©omic_buûtös
 = 989,

5110 
	gOPT_fu£_b€hm_gc
 = 990,

5111 
	gOPT_fu£_cxa_©exô
 = 991,

5112 
	gOPT_fu£_cxa_gë_ex˚±i⁄_±r
 = 992,

5113 
	gOPT_fu£_divide_subroutöe
 = 993,

5114 
	gOPT_fu£_ld_bfd
 = 994,

5115 
	gOPT_fu£_ld_gﬁd
 = 995,

5116 
	gOPT_fu£_lökî_∂ugö
 = 996,

5117 
	gOPT_fv¨_åackög
 = 997,

5118 
	gOPT_fv¨_åackög_assignmíts
 = 998,

5119 
	gOPT_fv¨_åackög_assignmíts_toggÀ
 = 999,

5120 
	gOPT_fv¨_åackög_unöô
 = 1000,

5121 
	gOPT_fv¨übÀ_ex∑nsi⁄_ö_uƒﬁÀr
 = 1001,

5123 
	gOPT_fve˘_co°_modñ_
 = 1003,

5124 
	gOPT_fvîbo£_asm
 = 1004,

5126 
	gOPT_fvisibûôy_ölöes_hiddí
 = 1006,

5127 
	gOPT_fvisibûôy_ms_com∑t
 = 1007,

5128 
	gOPT_fvisibûôy_
 = 1008,

5129 
	gOPT_fv±
 = 1009,

5132 
	gOPT_fvèbÀ_vîify_
 = 1012,

5133 
	gOPT_fvtv_cou¡s
 = 1013,

5134 
	gOPT_fvtv_debug
 = 1014,

5135 
	gOPT_fwók
 = 1015,

5136 
	gOPT_fweb
 = 1016,

5138 
	gOPT_fwhﬁe_¥ogøm
 = 1018,

5139 
	gOPT_fwide_exec_ch¨£t_
 = 1019,

5140 
	gOPT_fw‹kög_dúe˘‹y
 = 1020,

5141 
	gOPT_fw∑
 = 1021,

5142 
	gOPT_fw∑_
 = 1022,

5143 
	gOPT_fwøpv
 = 1023,

5146 
	gOPT_fzîo_öôülized_ö_bss
 = 1026,

5147 
	gOPT_fzîo_lök
 = 1027,

5148 
	gOPT_g
 = 1028,

5149 
	gOPT_g™t
 = 1029,

5150 
	gOPT_gcoff
 = 1030,

5151 
	gOPT_gdw¨f
 = 1031,

5152 
	gOPT_gdw¨f_
 = 1032,

5153 
	gOPT_gí_de˛s
 = 1033,

5154 
	gOPT_ggdb
 = 1034,

5155 
	gOPT_ggnu_pub«mes
 = 1035,

5156 
	gOPT_g«t
 = 1036,

5157 
	gOPT_g«tO
 = 1037,

5158 
	gOPT_gno_pub«mes
 = 1038,

5159 
	gOPT_gno_ªc‹d_gcc_swôches
 = 1039,

5160 
	gOPT_gno_•lô_dw¨f
 = 1040,

5161 
	gOPT_gno_°ri˘_dw¨f
 = 1041,

5162 
	gOPT_gpub«mes
 = 1042,

5163 
	gOPT_gªc‹d_gcc_swôches
 = 1043,

5164 
	gOPT_g•lô_dw¨f
 = 1044,

5165 
	gOPT_g°abs
 = 1045,

5166 
	gOPT_g°abs_
 = 1046,

5167 
	gOPT_g°ri˘_dw¨f
 = 1047,

5168 
	gOPT_gtoggÀ
 = 1048,

5169 
	gOPT_gvms
 = 1049,

5170 
	gOPT_gxcoff
 = 1050,

5171 
	gOPT_gxcoff_
 = 1051,

5172 
	gOPT_h
 = 1052,

5173 
	gOPT_idúa·î
 = 1053,

5174 
	gOPT_ima¸os
 = 1054,

5175 
	gOPT_imu…ürch
 = 1055,

5176 
	gOPT_imu…ûib
 = 1056,

5177 
	gOPT_ö˛ude
 = 1057,

5178 
	gOPT_ùlugödú_
 = 1058,

5179 
	gOPT_ùªfix
 = 1059,

5180 
	gOPT_iquŸe
 = 1060,

5181 
	gOPT_isy§oŸ
 = 1061,

5182 
	gOPT_isy°em
 = 1062,

5183 
	gOPT_iwôh¥efix
 = 1063,

5184 
	gOPT_iwôh¥efixbef‹e
 = 1064,

5185 
	gOPT_k8
 = 1065,

5186 
	gOPT_l
 = 1066,

5187 
	gOPT_œng_asm
 = 1067,

5188 
	gOPT_mabi_
 = 1068,

5189 
	gOPT_mab‹t_⁄_n‹ëu∫
 = 1069,

5190 
	gOPT_m≠cs
 = 1070,

5191 
	gOPT_m≠cs_Êﬂt
 = 1071,

5192 
	gOPT_m≠cs_‰ame
 = 1072,

5193 
	gOPT_m≠cs_ªíå™t
 = 1073,

5194 
	gOPT_m≠cs_°ack_check
 = 1074,

5195 
	gOPT_m¨ch_
 = 1075,

5196 
	gOPT_m¨m
 = 1076,

5197 
	gOPT_mbig_ídün
 = 1077,

5198 
	gOPT_mˇŒì_su≥r_öãrw‹kög
 = 1078,

5199 
	gOPT_mˇŒî_su≥r_öãrw‹kög
 = 1079,

5200 
	gOPT_m˝u_
 = 1080,

5201 
	gOPT_mfix_c‹ãx_m3_ldrd
 = 1081,

5202 
	gOPT_mÊﬂt_abi_
 = 1082,

5203 
	gOPT_mÂ16_f‹m©_
 = 1083,

5204 
	gOPT_mÂu_
 = 1084,

5206 
	gOPT_mlôée_ídün
 = 1086,

5207 
	gOPT_ml⁄g_ˇŒs
 = 1087,

5208 
	gOPT_mÃa
 = 1088,

5209 
	gOPT_m√⁄_f‹_64bôs
 = 1089,

5210 
	gOPT_m√w_gíîic_co°s
 = 1090,

5211 
	gOPT_mﬁd_πx_co°s
 = 1091,

5212 
	gOPT_mpic_d©a_is_ãxt_ªœtive
 = 1092,

5213 
	gOPT_mpic_ªgi°î_
 = 1093,

5214 
	gOPT_mpoke_fun˘i⁄_«me
 = 1094,

5215 
	gOPT_mª°ri˘_ô
 = 1095,

5216 
	gOPT_msched_¥ﬁog
 = 1096,

5217 
	gOPT_msögÀ_pic_ba£
 = 1097,

5218 
	gOPT_m¶ow_Êash_d©a
 = 1098,

5220 
	gOPT_m°ru˘uª_size_bound¨y_
 = 1100,

5221 
	gOPT_mthumb
 = 1101,

5222 
	gOPT_mthumb_öãrw‹k
 = 1102,

5223 
	gOPT_més_düÀ˘_
 = 1103,

5224 
	gOPT_mç_
 = 1104,

5225 
	gOPT_mçcs_‰ame
 = 1105,

5226 
	gOPT_mçcs_Àaf_‰ame
 = 1106,

5227 
	gOPT_mtu√_
 = 1107,

5228 
	gOPT_mu«lig√d_ac˚ss
 = 1108,

5229 
	gOPT_mve˘‹ize_wôh_√⁄_doubÀ
 = 1109,

5230 
	gOPT_mve˘‹ize_wôh_√⁄_quad
 = 1110,

5231 
	gOPT_mw‹d_ªloˇti⁄s
 = 1111,

5232 
	gOPT_mw‹ds_lôée_ídün
 = 1112,

5233 
	gOPT_n
 = 1113,

5234 
	gOPT_no_ˇn⁄iˇl_¥efixes
 = 1114,

5235 
	gOPT_no_öãgøãd_˝p
 = 1115,

5236 
	gOPT_no˝p
 = 1116,

5237 
	gOPT_nodeÁu…libs
 = 1117,

5238 
	gOPT_no°¨tfûes
 = 1118,

5239 
	gOPT_no°döc
 = 1119,

5240 
	gOPT_no°döc__
 = 1120,

5241 
	gOPT_no°dlib
 = 1121,

5242 
	gOPT_o
 = 1122,

5243 
	gOPT_p
 = 1123,

5244 
	gOPT_∑ss_exô_codes
 = 1124,

5246 
	gOPT_≥d™tic_îr‹s
 = 1126,

5247 
	gOPT_pg
 = 1127,

5248 
	gOPT_põ
 = 1128,

5249 
	gOPT_pùe
 = 1129,

5250 
	gOPT_¥öt_fûe_«me_
 = 1130,

5251 
	gOPT_¥öt_libgcc_fûe_«me
 = 1131,

5252 
	gOPT_¥öt_mu…i_dúe˘‹y
 = 1132,

5253 
	gOPT_¥öt_mu…i_lib
 = 1133,

5254 
	gOPT_¥öt_mu…i_os_dúe˘‹y
 = 1134,

5255 
	gOPT_¥öt_mu…ürch
 = 1135,

5256 
	gOPT_¥öt_objc_ru¡ime_öfo
 = 1136,

5257 
	gOPT_¥öt_¥og_«me_
 = 1137,

5258 
	gOPT_¥öt_£¨ch_dús
 = 1138,

5259 
	gOPT_¥öt_sy§oŸ
 = 1139,

5260 
	gOPT_¥öt_sy§oŸ_hódîs_suffix
 = 1140,

5261 
	gOPT_quõt
 = 1141,

5262 
	gOPT_r
 = 1142,

5263 
	gOPT_ªm≠
 = 1143,

5264 
	gOPT_s
 = 1144,

5265 
	gOPT_s_bc_abi
 = 1145,

5266 
	gOPT_ßve_ãmps
 = 1146,

5267 
	gOPT_ßve_ãmps_
 = 1147,

5268 
	gOPT_sh¨ed
 = 1148,

5269 
	gOPT_sh¨ed_libgcc
 = 1149,

5271 
	gOPT_•ecs_
 = 1151,

5272 
	gOPT_°©ic
 = 1152,

5273 
	gOPT_°©ic_libaßn
 = 1153,

5274 
	gOPT_°©ic_libgcc
 = 1154,

5275 
	gOPT_°©ic_libgcj
 = 1155,

5276 
	gOPT_°©ic_libgf‹å™
 = 1156,

5277 
	gOPT_°©ic_libgo
 = 1157,

5278 
	gOPT_°©ic_liblßn
 = 1158,

5279 
	gOPT_°©ic_lib°dc__
 = 1159,

5280 
	gOPT_°©ic_libtßn
 = 1160,

5281 
	gOPT_°©ic_libubßn
 = 1161,

5284 
	gOPT_°d_c__11
 = 1164,

5286 
	gOPT_°d_c__1y
 = 1166,

5287 
	gOPT_°d_c__98
 = 1167,

5288 
	gOPT_°d_c11
 = 1168,

5291 
	gOPT_°d_c90
 = 1171,

5292 
	gOPT_°d_c99
 = 1172,

5294 
	gOPT_°d_f2003
 = 1174,

5295 
	gOPT_°d_f2008
 = 1175,

5296 
	gOPT_°d_f2008ts
 = 1176,

5297 
	gOPT_°d_f95
 = 1177,

5298 
	gOPT_°d_gnu
 = 1178,

5301 
	gOPT_°d_gnu__11
 = 1181,

5303 
	gOPT_°d_gnu__1y
 = 1183,

5304 
	gOPT_°d_gnu__98
 = 1184,

5305 
	gOPT_°d_gnu11
 = 1185,

5308 
	gOPT_°d_gnu90
 = 1188,

5309 
	gOPT_°d_gnu99
 = 1189,

5312 
	gOPT_°d_iso9899_199409
 = 1192,

5316 
	gOPT_°d_Àgacy
 = 1196,

5317 
	gOPT_symbﬁic
 = 1197,

5318 
	gOPT_t
 = 1198,

5319 
	gOPT_time
 = 1199,

5320 
	gOPT_time_
 = 1200,

5321 
	gOPT_åadôi⁄Æ
 = 1201,

5322 
	gOPT_åadôi⁄Æ_˝p
 = 1202,

5323 
	gOPT_åigøphs
 = 1203,

5324 
	gOPT_u
 = 1204,

5325 
	gOPT_undef
 = 1205,

5326 
	gOPT_v
 = 1206,

5327 
	gOPT_vîsi⁄
 = 1207,

5328 
	gOPT_w
 = 1208,

5329 
	gOPT_wøµî
 = 1209,

5330 
	gOPT_x
 = 1210,

5331 
	gOPT_z
 = 1211,

5332 
	gN_OPTS
,

5333 
	gOPT_SPECIAL_unknown
,

5334 
	gOPT_SPECIAL_ign‹e
,

5335 
	gOPT_SPECIAL_¥ogøm_«me
,

5336 
	gOPT_SPECIAL_öput_fûe


	@include/opts.h

20 #i‚de‡
GCC_OPTS_H


21 
	#GCC_OPTS_H


	)

23 
	~"öput.h
"

24 
	~"vec.h
"

25 
	~"ob°ack.h
"

28 
	e˛_v¨_ty≥
 {

30 
	mCLVC_BOOLEAN
,

33 
	mCLVC_EQUAL
,

36 
	mCLVC_BIT_CLEAR
,

39 
	mCLVC_BIT_SET
,

43 
	mCLVC_STRING
,

47 
	mCLVC_ENUM
,

51 
	mCLVC_DEFER


54 
	s˛_›ti⁄


57 c⁄° *
	m›t_ãxt
;

59 c⁄° *
	mhñp
;

61 c⁄° *
	mmissög_¨gumít_îr‹
;

63 c⁄° *
	mw¨n_mesßge
;

65 c⁄° *
	mÆüs_¨g
;

67 c⁄° *
	m√g_Æüs_¨g
;

69 
	mÆüs_èrgë
;

72 
	mback_chaö
;

74 
	m›t_Àn
;

76 
	m√g_ödex
;

78 
	mÊags
;

80 
BOOL_BITFIELD
 
	m˛_dißbÀd
 : 1;

84 
	m˛_£∑øã_«rgs
 : 2;

86 
BOOL_BITFIELD
 
	m˛_£∑øã_Æüs
 : 1;

88 
BOOL_BITFIELD
 
	m˛_√g©ive_Æüs
 : 1;

90 
BOOL_BITFIELD
 
	m˛_no_drivî_¨g
 : 1;

92 
BOOL_BITFIELD
 
	m˛_ªje˘_drivî
 : 1;

94 
BOOL_BITFIELD
 
	m˛_ªje˘_√g©ive
 : 1;

96 
BOOL_BITFIELD
 
	m˛_missög_ok
 : 1;

98 
BOOL_BITFIELD
 
	m˛_uöãgî
 : 1;

100 
BOOL_BITFIELD
 
	m˛_ho°_wide_öt
 : 1;

102 
BOOL_BITFIELD
 
	m˛_tﬁowî
 : 1;

104 
BOOL_BITFIELD
 
	m˛_ªp‹t
 : 1;

107 
	mÊag_v¨_off£t
;

110 
	mv¨_íum
;

112 
˛_v¨_ty≥
 
	mv¨_ty≥
;

114 
HOST_WIDE_INT
 
	mv¨_vÆue
;

119 
	s˛_›ti⁄_°©e
 {

120 c⁄° *
	md©a
;

121 
size_t
 
	msize
;

122 
	mch
;

125 c⁄° 
˛_›ti⁄
 
˛_›ti⁄s
[];

126 c⁄° 
˛_›ti⁄s_cou¡
;

127 c⁄° *c⁄° 
œng_«mes
[];

128 c⁄° 
˛_œng_cou¡
;

130 
	#CL_PARAMS
 (1U << 16Ë

	)

131 
	#CL_WARNING
 (1U << 17Ë

	)

132 
	#CL_OPTIMIZATION
 (1U << 18Ë

	)

133 
	#CL_DRIVER
 (1U << 19Ë

	)

134 
	#CL_TARGET
 (1U << 20Ë

	)

135 
	#CL_COMMON
 (1U << 21Ë

	)

137 
	#CL_MIN_OPTION_CLASS
 
CL_PARAMS


	)

138 
	#CL_MAX_OPTION_CLASS
 
CL_COMMON


	)

145 
	#CL_JOINED
 (1U << 22Ë

	)

146 
	#CL_SEPARATE
 (1U << 23Ë

	)

147 
	#CL_UNDOCUMENTED
 (1U << 24Ë

	)

148 
	#CL_NO_DWARF_RECORD
 (1U << 25Ë

	)

149 
	#CL_PCH_IGNORE
 (1U << 26Ë

	)

152 
	#CL_ENUM_CANONICAL
 (1 << 0Ë

	)

153 
	#CL_ENUM_DRIVER_ONLY
 (1 << 1Ë

	)

157 
	s˛_íum_¨g


160 c⁄° *
	m¨g
;

163 
	mvÆue
;

166 
	mÊags
;

171 
	s˛_íum


175 c⁄° *
	mhñp
;

179 c⁄° *
	munknown_îr‹
;

182 c⁄° 
˛_íum_¨g
 *
	mvÆues
;

185 
size_t
 
	mv¨_size
;

188 (*
	m£t
Ë(*
	mv¨
, 
	mvÆue
);

191 (*
	mgë
Ë(c⁄° *
	mv¨
);

194 c⁄° 
˛_íum
 
˛_íums
[];

195 c⁄° 
˛_íums_cou¡
;

201 
	#CL_ERR_DISABLED
 (1 << 0Ë

	)

202 
	#CL_ERR_MISSING_ARG
 (1 << 1Ë

	)

203 
	#CL_ERR_WRONG_LANG
 (1 << 2Ë

	)

204 
	#CL_ERR_UINT_ARG
 (1 << 3Ë

	)

205 
	#CL_ERR_ENUM_ARG
 (1 << 4Ë

	)

206 
	#CL_ERR_NEGATIVE
 (1 << 5Ë

	)

212 
	s˛_decoded_›ti⁄


216 
size_t
 
	m›t_ödex
;

219 c⁄° *
	mw¨n_mesßge
;

223 c⁄° *
	m¨g
;

229 c⁄° *
	m‹ig_›ti⁄_wôh_¨gs_ãxt
;

235 c⁄° *
	mˇn⁄iˇl_›ti⁄
[4];

239 
size_t
 
	mˇn⁄iˇl_›ti⁄_num_ñemíts
;

244 
	mvÆue
;

247 
	mîr‹s
;

253 
	s˛_de„ºed_›ti⁄


257 
size_t
 
	m›t_ödex
;

258 c⁄° *
	m¨g
;

259 
	mvÆue
;

264 
	s˛_›ti⁄_h™dÀr_func


267 
boﬁ
 (*
h™dÀr
Ë(
gcc_›ti⁄s
 *
	m›ts
,

268 
gcc_›ti⁄s
 *
	m›ts_£t
,

269 c⁄° 
˛_decoded_›ti⁄
 *
	mdecoded
,

270 
	mœng_mask
, 
	mköd
, 
loˇti⁄_t
 
	mloc
,

271 c⁄° 
˛_›ti⁄_h™dÀrs
 *
	mh™dÀrs
,

272 
dügno°ic_c⁄ãxt
 *
	mdc
);

276 
	mmask
;

281 
	s˛_›ti⁄_h™dÀrs


287 
boﬁ
 (*
unknown_›ti⁄_ˇŒback
Ë(c⁄° 
˛_decoded_›ti⁄
 *
	mdecoded
);

291 (*
	mwr⁄g_œng_ˇŒback
Ë(c⁄° 
˛_decoded_›ti⁄
 *
	mdecoded
,

292 
	mœng_mask
);

295 
size_t
 
	mnum_h™dÀrs
;

298 
˛_›ti⁄_h™dÀr_func
 
	mh™dÀrs
[3];

303 c⁄° **
ö_‚ames
;

307 
num_ö_‚ames
;

309 *
›ts_c⁄ˇt
 (c⁄° *
fú°
, ...);

313 
ob°ack
 
›ts_ob°ack
;

315 
size_t
 
föd_›t
 (c⁄° *
öput
, 
œng_mask
);

316 
öãgøl_¨gumít
 (c⁄° *
¨g
);

317 
boﬁ
 
íum_vÆue_to_¨g
 (c⁄° 
˛_íum_¨g
 *
íum_¨gs
,

318 c⁄° **
¨gp
, 
vÆue
,

319 
œng_mask
);

320 
decode_cmdlöe_›ti⁄s_to_¨øy
 (
¨gc
,

321 c⁄° **
¨gv
,

322 
œng_mask
,

323 
˛_decoded_›ti⁄
 **
decoded_›ti⁄s
,

324 *
decoded_›ti⁄s_cou¡
);

325 
öô_›ti⁄s_⁄˚
 ();

326 
öô_›ti⁄s_°ru˘
 (
gcc_›ti⁄s
 *
›ts
,

327 
gcc_›ti⁄s
 *
›ts_£t
);

328 
decode_cmdlöe_›ti⁄s_to_¨øy_deÁu…_mask
 (
¨gc
,

329 c⁄° **
¨gv
,

330 
˛_decoded_›ti⁄
 **
decoded_›ti⁄s
,

331 *
decoded_›ti⁄s_cou¡
);

332 
£t_deÁu…_h™dÀrs
 (
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
);

333 
decode_›ti⁄s
 (
gcc_›ti⁄s
 *
›ts
,

334 
gcc_›ti⁄s
 *
›ts_£t
,

335 
˛_decoded_›ti⁄
 *
decoded_›ti⁄s
,

336 
decoded_›ti⁄s_cou¡
,

337 
loˇti⁄_t
 
loc
,

338 
dügno°ic_c⁄ãxt
 *
dc
);

339 
›ti⁄_íabÀd
 (
›t_idx
, *
›ts
);

340 
boﬁ
 
gë_›ti⁄_°©e
 (
gcc_›ti⁄s
 *, ,

341 
˛_›ti⁄_°©e
 *);

342 
£t_›ti⁄
 (
gcc_›ti⁄s
 *
›ts
,

343 
gcc_›ti⁄s
 *
›ts_£t
,

344 
›t_ödex
, 
vÆue
, c⁄° *
¨g
, 
köd
,

345 
loˇti⁄_t
 
loc
, 
dügno°ic_c⁄ãxt
 *
dc
);

346 *
›ti⁄_Êag_v¨
 (
›t_ödex
, 
gcc_›ti⁄s
 *
›ts
);

347 
boﬁ
 
h™dÀ_gíî©ed_›ti⁄
 (
gcc_›ti⁄s
 *
›ts
,

348 
gcc_›ti⁄s
 *
›ts_£t
,

349 
size_t
 
›t_ödex
, c⁄° *
¨g
, 
vÆue
,

350 
œng_mask
, 
köd
, 
loˇti⁄_t
 
loc
,

351 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

352 
dügno°ic_c⁄ãxt
 *
dc
);

353 
gíî©e_›ti⁄
 (
size_t
 
›t_ödex
, c⁄° *
¨g
, 
vÆue
,

354 
œng_mask
,

355 
˛_decoded_›ti⁄
 *
decoded
);

356 
gíî©e_›ti⁄_öput_fûe
 (c⁄° *
fûe
,

357 
˛_decoded_›ti⁄
 *
decoded
);

358 
ªad_cmdlöe_›ti⁄
 (
gcc_›ti⁄s
 *
›ts
,

359 
gcc_›ti⁄s
 *
›ts_£t
,

360 
˛_decoded_›ti⁄
 *
decoded
,

361 
loˇti⁄_t
 
loc
,

362 
œng_mask
,

363 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

364 
dügno°ic_c⁄ãxt
 *
dc
);

365 
c⁄åﬁ_w¨nög_›ti⁄
 (
›t_ödex
, 
köd
,

366 
boﬁ
 
im∂y
, 
loˇti⁄_t
 
loc
,

367 
œng_mask
,

368 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

369 
gcc_›ti⁄s
 *
›ts
,

370 
gcc_›ti⁄s
 *
›ts_£t
,

371 
dügno°ic_c⁄ãxt
 *
dc
);

372 
¥öt_ign‹ed_›ti⁄s
 ();

373 
h™dÀ_comm⁄_de„ºed_›ti⁄s
 ();

374 
boﬁ
 
comm⁄_h™dÀ_›ti⁄
 (
gcc_›ti⁄s
 *
›ts
,

375 
gcc_›ti⁄s
 *
›ts_£t
,

376 c⁄° 
˛_decoded_›ti⁄
 *
decoded
,

377 
œng_mask
, 
köd
,

378 
loˇti⁄_t
 
loc
,

379 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

380 
dügno°ic_c⁄ãxt
 *
dc
);

381 
boﬁ
 
èrgë_h™dÀ_›ti⁄
 (
gcc_›ti⁄s
 *
›ts
,

382 
gcc_›ti⁄s
 *
›ts_£t
,

383 c⁄° 
˛_decoded_›ti⁄
 *
decoded
,

384 
œng_mask
, 
köd
,

385 
loˇti⁄_t
 
loc
,

386 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

387 
dügno°ic_c⁄ãxt
 *
dc
);

388 
föish_›ti⁄s
 (
gcc_›ti⁄s
 *
›ts
,

389 
gcc_›ti⁄s
 *
›ts_£t
,

390 
loˇti⁄_t
 
loc
);

391 
deÁu…_›ti⁄s_›timiz©i⁄
 (
gcc_›ti⁄s
 *
›ts
,

392 
gcc_›ti⁄s
 *
›ts_£t
,

393 
˛_decoded_›ti⁄
 *
decoded_›ti⁄s
,

394 
decoded_›ti⁄s_cou¡
,

395 
loˇti⁄_t
 
loc
,

396 
œng_mask
,

397 c⁄° 
˛_›ti⁄_h™dÀrs
 *
h™dÀrs
,

398 
dügno°ic_c⁄ãxt
 *
dc
);

399 
£t_°ru˘_debug_›ti⁄
 (
gcc_›ti⁄s
 *
›ts
,

400 
loˇti⁄_t
 
loc
,

401 c⁄° *
vÆue
);

402 
boﬁ
 
›t_íum_¨g_to_vÆue
 (
size_t
 
›t_ödex
, c⁄° *
¨g
,

403 *
vÆue
, 
œng_mask
);

	@include/output.h

21 #i‚de‡
GCC_OUTPUT_H


22 
	#GCC_OUTPUT_H


	)

25 
öô_föÆ
 (const *);

29 
≠p_íabÀ
 ();

33 
≠p_dißbÀ
 ();

38 
dbr_£quí˚_Àngth
 ();

41 
öô_ö¢_Àngths
 ();

45 
gë_©å_Àngth
 (
πx
);

49 
gë_©å_mö_Àngth
 (
πx
);

53 
sh‹ãn_bønches
 (
πx
);

60 
föÆ_°¨t_fun˘i⁄
 (
πx
, 
FILE
 *, );

65 
föÆ_íd_fun˘i⁄
 ();

68 
föÆ
 (
πx
, 
FILE
 *, );

73 
πx
 
föÆ_sˇn_ö¢
 (πx, 
FILE
 *, , , *);

77 
πx
 
Æãr_subªg
 (πx *, 
boﬁ
);

80 
ouçut_›î™d
 (
πx
, );

84 
	$ouçut_›î™d_losßge
 (c⁄° *, ...Ë
ATTRIBUTE_PRINTF_1
;

88 
	`ouçut_asm_ö¢
 (c⁄° *, 
πx
 *);

93 
	`ö¢_cuºít_ª„ªn˚_addªss
 (
πx
);

97 
	`œbñ_to_Æignmít
 (
πx
);

101 
	`œbñ_to_max_skù
 (
πx
);

104 
	`ouçut_asm_œbñ
 (
πx
);

107 
	`m¨k_symbﬁ_ªfs_as_u£d
 (
πx
);

111 
	`ouçut_addªss
 (
πx
);

116 
	`ouçut_addr_c⁄°
 (
FILE
 *, 
πx
);

120 #i‡
GCC_VERSION
 >= 3004

121 
	#ATTRIBUTE_ASM_FPRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__asm_Ârötf__
, m,Ç))Ë
	`ATTRIBUTE_NONNULL
(m)

	)

123 
	#ATTRIBUTE_ASM_FPRINTF
(
m
, 
n
Ë
	`ATTRIBUTE_NONNULL
(m)

	)

126 
	`Âröt_whex
 (
FILE
 *, 
HOST_WIDE_INT
);

127 
	`Âröt_ul
 (
FILE
 *, );

128 
	`•röt_ul
 (*, );

130 
	$asm_Ârötf
 (
FILE
 *
fûe
, c⁄° *
p
, ...)

131 
	`ATTRIBUTE_ASM_FPRINTF
(2, 3);

134 
	`Àaf_fun˘i⁄_p
 ();

139 
	`föÆ_f‹w¨d_bønch_p
 (
πx
);

143 
	`⁄ly_Àaf_ªgs_u£d
 ();

147 
	`Àaf_ªnumbî_ªgs_ö¢
 (
πx
);

150 c⁄° *
	`gë_ö¢_ãm∂©e
 (, 
πx
);

155 
	`wók_föish
 ();

164 
	`decode_ªg_«me
 (const *);

169 
	`decode_ªg_«me_™d_cou¡
 (const *, *);

171 
	`do_as£mbÀ_Æüs
 (
åì
,Åree);

173 
	`deÁu…_as£mbÀ_visibûôy
 (
åì
, );

177 
	`as£mbÀ_asm
 (
åì
);

183 
	`as£mbÀ_°¨t_fun˘i⁄
 (
åì
, const *);

187 
	`as£mbÀ_íd_fun˘i⁄
 (
åì
, const *);

198 
	`as£mbÀ_v¨übÀ
 (
åì
, , , );

202 
	`as£mbÀ_vtv_¥eöô_öôülizî
 (
åì
);

206 
	`Æign_v¨übÀ
 (
åì
 
de˛
, 
boﬁ
 
d⁄t_ouçut_d©a
);

211 
	`as£mbÀ_exã∫Æ
 (
åì
);

214 
	`as£mbÀ_zîos
 (
HOST_WIDE_INT
);

217 
	`as£mbÀ_Æign
 ();

220 
	`as£mbÀ_°rög
 (const *, );

223 
	`as£mbÀ_exã∫Æ_libˇŒ
 (
πx
);

226 
	`as£mbÀ_œbñ
 (
FILE
 *, const *);

232 
	`as£mbÀ_«me_øw
 (
FILE
 *, const *);

238 
	`as£mbÀ_«me
 (
FILE
 *, const *);

247 c⁄° *
	`öãgî_asm_›
 (, );

251 
	`as£mbÀ_öãgî_wôh_›
 (c⁄° *, 
πx
);

254 
boﬁ
 
	`deÁu…_as£mbÀ_öãgî
 (
πx
, , );

260 
boﬁ
 
	`as£mbÀ_öãgî
 (
πx
, , , );

264 
£˘i⁄
 *
	`gë_«med_ãxt_£˘i⁄
 (
åì
, const *, const *);

269 
	#as£mbÀ_Æig√d_öãgî
(
SIZE
, 
VALUE
) \

270 
	`as£mbÀ_öãgî
 (
VALUE
, 
SIZE
, (SIZEË* 
BITS_PER_UNIT
, 1)

	)

272 #ifde‡
REAL_VALUE_TYPE_SIZE


274 
	`as£mbÀ_ªÆ
 (
REAL_VALUE_TYPE
, 
machöe_mode
, );

278 
	`as£mbÀ_addr_to_£˘i⁄
 (
πx
, 
£˘i⁄
 *);

281 
	`gë_poﬁ_size
 ();

283 #ifde‡
HAVE_≥ïhﬁe


284 
πx
 
	`≥ïhﬁe
 (rtx);

287 
	`ouçut_sh¨ed_c⁄°™t_poﬁ
 ();

289 
	`ouçut_obje˘_blocks
 ();

291 
	`ouçut_quŸed_°rög
 (
FILE
 *, const *);

299 
πx
 
föÆ_£quí˚
;

304 #ifde‡
SDB_DEBUGGING_INFO


305 
sdb_begö_fun˘i⁄_löe
;

310 #ifde‡
BUFSIZ


311 
FILE
 *
asm_out_fûe
;

315 c⁄° *
fú°_globÆ_obje˘_«me
;

318 c⁄° *
wók_globÆ_obje˘_«me
;

321 
πx
 
cuºít_ö¢_¥ediˇã
;

324 
πx
 
cuºít_ouçut_ö¢
;

329 
πx
 
this_is_asm_›î™ds
;

333 
size_dúe˘ive_ouçut
;

334 
åì
 
œ°_as£mbÀ_v¨übÀ_de˛
;

336 
boﬁ
 
fú°_fun˘i⁄_block_is_cﬁd
;

340 
boﬁ
 
	`de˛_ªad⁄ly_£˘i⁄
 (
c⁄°_åì
, );

344 
	`compuã_ªloc_f‹_c⁄°™t
 (
åì
);

347 c⁄° *
u£r_œbñ_¥efix
;

350 
	`deÁu…_fun˘i⁄_¥o_ïûogue
 (
FILE
 *, 
HOST_WIDE_INT
);

353 
	`deÁu…_fun˘i⁄_swôched_ãxt_£˘i⁄s
 (
FILE
 *, 
åì
, 
boﬁ
);

356 
	`no_asm_to_°ªam
 (
FILE
 *);

359 
	#SECTION_ENTSIZE
 0x000f‡

	)

360 
	#SECTION_CODE
 0x00100

	)

361 
	#SECTION_WRITE
 0x00200

	)

362 
	#SECTION_DEBUG
 0x00400

	)

363 
	#SECTION_LINKONCE
 0x00800

	)

364 
	#SECTION_SMALL
 0x01000

	)

365 
	#SECTION_BSS
 0x02000

	)

366 
	#SECTION_FORGET
 0x04000

	)

367 
	#SECTION_MERGE
 0x08000

	)

368 
	#SECTION_STRINGS
 0x10000

	)

370 
	#SECTION_OVERRIDE
 0x20000

	)

371 
	#SECTION_TLS
 0x40000

	)

372 
	#SECTION_NOTYPE
 0x80000

	)

373 
	#SECTION_DECLARED
 0x100000

	)

374 
	#SECTION_STYLE_MASK
 0x600000

	)

375 
	#SECTION_COMMON
 0x800000

	)

376 
	#SECTION_RELRO
 0x1000000

	)

377 
	#SECTION_EXCLUDE
 0x2000000

	)

378 
	#SECTION_MACH_DEP
 0x4000000

	)

382 
	#SECTION_UNNAMED
 0x000000

	)

386 
	#SECTION_NAMED
 0x200000

	)

391 
	#SECTION_NOSWITCH
 0x400000

	)

396 
	e£˘i⁄_ˇãg‹y


398 
SECCAT_TEXT
,

400 
SECCAT_RODATA
,

401 
SECCAT_RODATA_MERGE_STR
,

402 
SECCAT_RODATA_MERGE_STR_INIT
,

403 
SECCAT_RODATA_MERGE_CONST
,

404 
SECCAT_SRODATA
,

406 
SECCAT_DATA
,

417 
SECCAT_DATA_REL
,

418 
SECCAT_DATA_REL_LOCAL
,

419 
SECCAT_DATA_REL_RO
,

420 
SECCAT_DATA_REL_RO_LOCAL
,

422 
SECCAT_SDATA
,

423 
SECCAT_TDATA
,

425 
SECCAT_BSS
,

426 
SECCAT_SBSS
,

427 
SECCAT_TBSS


431 
	`GTY
(()Ë
£˘i⁄_comm⁄
 {

433 
Êags
;

434 
	}
};

437 
GTY
(()Ë
	g«med_£˘i⁄
 {

438 
£˘i⁄_comm⁄
 
	gcomm⁄
;

441 c⁄° *
	g«me
;

445 
åì
 
	gde˛
;

450 (*
	tu¬amed_£˘i⁄_ˇŒback
) (const *);

453 
	`GTY
(()Ë
u¬amed_£˘i⁄
 {

454 
£˘i⁄_comm⁄
 
comm⁄
;

458 
u¬amed_£˘i⁄_ˇŒback
 
	`GTY
 ((
skù
)Ë
ˇŒback
;

459 c⁄° *
	`GTY
 ((
skù
)Ë
d©a
;

462 
£˘i⁄
 *
√xt
;

463 
	}
};

474 
	$boﬁ
 (*
	tnoswôch_£˘i⁄_ˇŒback
Ë(
	tåì
 
	tde˛
, c⁄° *
	t«me
,

475 
	tHOST_WIDE_INT
 
	tsize
,

476 
	tHOST_WIDE_INT
 
	trounded
);

479 
	`GTY
(()Ë
noswôch_£˘i⁄
 {

480 
£˘i⁄_comm⁄
 
comm⁄
;

483 
noswôch_£˘i⁄_ˇŒback
 
	`GTY
 ((
skù
)Ë
ˇŒback
;

484 
	}
};

487 
GTY
 ((
desc
 ("SECTION_STYLE (&(%h))"))Ë
	g£˘i⁄
 {

488 
£˘i⁄_comm⁄
 
GTY
 ((
skù
)Ë
	gcomm⁄
;

489 
«med_£˘i⁄
 
GTY
 ((
èg
 ("SECTION_NAMED"))Ë
	g«med
;

490 
u¬amed_£˘i⁄
 
GTY
 ((
èg
 ("SECTION_UNNAMED"))Ë
	gu¬amed
;

491 
noswôch_£˘i⁄
 
GTY
 ((
èg
 ("SECTION_NOSWITCH"))Ë
	gnoswôch
;

495 
	#SECTION_STYLE
(
SECT
Ë((SECT)->
comm⁄
.
Êags
 & 
SECTION_STYLE_MASK
)

	)

497 
	gobje˘_block
;

500 
GTY
(()Ë
£˘i⁄
 *
ãxt_£˘i⁄
;

501 
GTY
(()Ë
£˘i⁄
 *
d©a_£˘i⁄
;

502 
GTY
(()Ë
£˘i⁄
 *
ªad⁄ly_d©a_£˘i⁄
;

503 
GTY
(()Ë
£˘i⁄
 *
sd©a_£˘i⁄
;

504 
GTY
(()Ë
£˘i⁄
 *
˘‹s_£˘i⁄
;

505 
GTY
(()Ë
£˘i⁄
 *
dt‹s_£˘i⁄
;

506 
GTY
(()Ë
£˘i⁄
 *
bss_£˘i⁄
;

507 
GTY
(()Ë
£˘i⁄
 *
sbss_£˘i⁄
;

508 
GTY
(()Ë
£˘i⁄
 *
ex˚±i⁄_£˘i⁄
;

509 
GTY
(()Ë
£˘i⁄
 *
eh_‰ame_£˘i⁄
;

510 
GTY
(()Ë
£˘i⁄
 *
és_comm_£˘i⁄
;

511 
GTY
(()Ë
£˘i⁄
 *
comm_£˘i⁄
;

512 
GTY
(()Ë
£˘i⁄
 *
lcomm_£˘i⁄
;

513 
GTY
(()Ë
£˘i⁄
 *
bss_noswôch_£˘i⁄
;

515 
GTY
(()Ë
£˘i⁄
 *
ö_£˘i⁄
;

516 
GTY
(()Ë
boﬁ
 
ö_cﬁd_£˘i⁄_p
;

518 
£˘i⁄
 *
gë_u¬amed_£˘i⁄
 (, (*) (const *),

520 
£˘i⁄
 *
	`gë_£˘i⁄
 (c⁄° *, , 
åì
);

521 
£˘i⁄
 *
	`gë_«med_£˘i⁄
 (
åì
, const *, );

522 
£˘i⁄
 *
	`gë_v¨übÀ_£˘i⁄
 (
åì
, 
boﬁ
);

523 
	`∂a˚_block_symbﬁ
 (
πx
);

524 
πx
 
	`gë_£˘i⁄_™ch‹
 (
obje˘_block
 *, 
HOST_WIDE_INT
,

525 
és_modñ
);

526 
£˘i⁄
 *
	`mîgóbÀ_c⁄°™t_£˘i⁄
 (
machöe_mode
,

527 
HOST_WIDE_INT
,

529 
£˘i⁄
 *
	`fun˘i⁄_£˘i⁄
 (
åì
);

530 
£˘i⁄
 *
	`u∆ikñy_ãxt_£˘i⁄
 ();

531 
£˘i⁄
 *
	`cuºít_fun˘i⁄_£˘i⁄
 ();

535 
£˘i⁄
 *
	`gë_cdt‹_¥i‹ôy_£˘i⁄
 (, 
boﬁ
);

537 
boﬁ
 
	`u∆ikñy_ãxt_£˘i⁄_p
 (
£˘i⁄
 *);

538 
	`swôch_to_£˘i⁄
 (
£˘i⁄
 *);

539 
	`ouçut_£˘i⁄_asm_›
 (const *);

541 
	`ªc‹d_tm_˛⁄e_∑ú
 (
åì
,Åree);

542 
	`föish_tm_˛⁄e_∑ús
 ();

543 
åì
 
	`gë_tm_˛⁄e_∑ú
 (tree);

545 
	`deÁu…_asm_ouçut_sour˚_fûíame
 (
FILE
 *, const *);

546 
	`ouçut_fûe_dúe˘ive
 (
FILE
 *, const *);

548 
	`deÁu…_£˘i⁄_ty≥_Êags
 (
åì
, const *, );

550 
boﬁ
 
	`have_globÆ_bss_p
 ();

551 
boﬁ
 
	`bss_öôülizî_p
 (
c⁄°_åì
);

553 
	`deÁu…_no_«med_£˘i⁄
 (c⁄° *, , 
åì
);

554 
	`deÁu…_ñf_asm_«med_£˘i⁄
 (c⁄° *, , 
åì
);

555 
£˘i⁄_ˇãg‹y
 
	`ˇãg‹ize_de˛_f‹_£˘i⁄
 (
c⁄°_åì
, );

556 
	`deÁu…_coff_asm_«med_£˘i⁄
 (c⁄° *, , 
åì
);

557 
	`deÁu…_≥_asm_«med_£˘i⁄
 (c⁄° *, , 
åì
);

559 
	`deÁu…_«med_£˘i⁄_asm_out_de°ru˘‹
 (
πx
, );

560 
	`deÁu…_dt‹_£˘i⁄_asm_out_de°ru˘‹
 (
πx
, );

561 
	`deÁu…_«med_£˘i⁄_asm_out_c⁄°ru˘‹
 (
πx
, );

562 
	`deÁu…_˘‹_£˘i⁄_asm_out_c⁄°ru˘‹
 (
πx
, );

564 
£˘i⁄
 *
	`deÁu…_£À˘_£˘i⁄
 (
åì
, , 
HOST_WIDE_INT
);

565 
£˘i⁄
 *
	`deÁu…_ñf_£À˘_£˘i⁄
 (
åì
, , 
HOST_WIDE_INT
);

566 
	`deÁu…_unique_£˘i⁄
 (
åì
, );

567 
£˘i⁄
 *
	`deÁu…_fun˘i⁄_rod©a_£˘i⁄
 (
åì
);

568 
£˘i⁄
 *
	`deÁu…_no_fun˘i⁄_rod©a_£˘i⁄
 (
åì
);

569 
£˘i⁄
 *
	`deÁu…_˛⁄e_èbÀ_£˘i⁄
 ();

570 
£˘i⁄
 *
	`deÁu…_£À˘_πx_£˘i⁄
 (
machöe_mode
, 
πx
,

571 
HOST_WIDE_INT
);

572 
£˘i⁄
 *
	`deÁu…_ñf_£À˘_πx_£˘i⁄
 (
machöe_mode
, 
πx
,

573 
HOST_WIDE_INT
);

574 
	`deÁu…_ícode_£˘i⁄_öfo
 (
åì
, 
πx
, );

575 c⁄° *
	`deÁu…_°rù_«me_ícodög
 (const *);

576 
	`deÁu…_asm_ouçut_™ch‹
 (
πx
);

577 
boﬁ
 
	`deÁu…_u£_™ch‹s_f‹_symbﬁ_p
 (
c⁄°_πx
);

578 
boﬁ
 
	`deÁu…_böds_loˇl_p
 (
c⁄°_åì
);

579 
boﬁ
 
	`deÁu…_böds_loˇl_p_1
 (
c⁄°_åì
, );

580 
	`deÁu…_globÆize_œbñ
 (
FILE
 *, const *);

581 
	`deÁu…_globÆize_de˛_«me
 (
FILE
 *, 
åì
);

582 
	`deÁu…_emô_unwöd_œbñ
 (
FILE
 *, 
åì
, , );

583 
	`deÁu…_emô_ex˚±_èbÀ_œbñ
 (
FILE
 *);

584 
	`deÁu…_gíî©e_öã∫Æ_œbñ
 (*, const *,

586 
	`deÁu…_öã∫Æ_œbñ
 (
FILE
 *, const *, );

587 
	`deÁu…_asm_de˛¨e_c⁄°™t_«me
 (
FILE
 *, const *,

588 
c⁄°_åì
, 
HOST_WIDE_INT
);

589 
	`deÁu…_fûe_°¨t
 ();

590 
	`fûe_íd_ödiˇã_exec_°ack
 ();

591 
	`fûe_íd_ödiˇã_•lô_°ack
 ();

593 
	`deÁu…_ñf_asm_ouçut_exã∫Æ
 (
FILE
 *
fûe
, 
åì
,

595 
	`deÁu…_ñf_asm_ouçut_limôed_°rög
 (
FILE
 *, const *);

596 
	`deÁu…_ñf_asm_ouçut_ascii
 (
FILE
 *, const *, );

597 
	`deÁu…_ñf_öã∫Æ_œbñ
 (
FILE
 *, const *, );

599 
	`deÁu…_ñf_öô_¨øy_asm_out_c⁄°ru˘‹
 (
πx
, );

600 
	`deÁu…_ñf_föi_¨øy_asm_out_de°ru˘‹
 (
πx
, );

601 
	`maybe_as£mbÀ_visibûôy
 (
åì
);

603 
	`deÁu…_addªss_co°
 (
πx
, 
machöe_mode
, 
addr_•a˚_t
, 
boﬁ
);

606 
	`ouçut_°ack_ußge
 ();

	@include/params.h

32 #i‚de‡
GCC_PARAMS_H


33 
	#GCC_PARAMS_H


	)

37 
	#INVALID_PARAM_VAL
 (-1)

	)

41 
	s∑øm_öfo


45 c⁄° *c⁄° 
	m›ti⁄
;

48 
	mdeÁu…_vÆue
;

51 
	mmö_vÆue
;

54 
	mmax_vÆue
;

57 c⁄° *c⁄° 
	mhñp
;

63 
∑øm_öfo
 *
compûî_∑øms
;

66 
size_t
 
gë_num_compûî_∑øms
 ();

70 
add_∑øms
 (c⁄° 
∑øm_öfo
 
∑øms
[], 
size_t
 
n
);

76 
£t_∑øm_vÆue
 (c⁄° *
«me
, 
vÆue
,

77 *
∑øms
, *
∑øms_£t
);

82 
	ecompûî_∑øm


84 
	#DEFPARAM
(
íumî©‹
, 
›ti⁄
, 
msgid
, , 
mö
, 
max
) \

85 
íumî©‹
,

	)

86 
	~"∑øms.def
"

87 #unde‡
DEFPARAM


88 
	mLAST_PARAM


92 
	#PARAM_VALUE
(
ENUM
) \

93 ((Ë
globÆ_›ti⁄s
.
x_∑øm_vÆues
[(Ë
ENUM
])

	)

99 
maybe_£t_∑øm_vÆue
 (
compûî_∑øm
 
num
, 
vÆue
,

100 *
∑øms
, *
∑øms_£t
);

105 
£t_deÁu…_∑øm_vÆue
 (
compûî_∑øm
 
num
, 
vÆue
);

110 
globÆ_öô_∑øms
 ();

114 
föish_∑øms
 ();

118 
deÁu…_∑øm_vÆue
 (
compûî_∑øm
 
num
);

122 
öô_∑øm_vÆues
 (*
∑øms
);

125 
	#MAX_INLINE_INSNS_SINGLE
 \

126 
	`PARAM_VALUE
 (
PARAM_MAX_INLINE_INSNS_SINGLE
)

	)

127 
	#MAX_INLINE_INSNS
 \

128 
	`PARAM_VALUE
 (
PARAM_MAX_INLINE_INSNS
)

	)

129 
	#MAX_INLINE_SLOPE
 \

130 
	`PARAM_VALUE
 (
PARAM_MAX_INLINE_SLOPE
)

	)

131 
	#MIN_INLINE_INSNS
 \

132 
	`PARAM_VALUE
 (
PARAM_MIN_INLINE_INSNS
)

	)

133 
	#MAX_INLINE_INSNS_AUTO
 \

134 
	`PARAM_VALUE
 (
PARAM_MAX_INLINE_INSNS_AUTO
)

	)

135 
	#MAX_VARIABLE_EXPANSIONS
 \

136 
	`PARAM_VALUE
 (
PARAM_MAX_VARIABLE_EXPANSIONS
)

	)

137 
	#MIN_VECT_LOOP_BOUND
 \

138 
	`PARAM_VALUE
 (
PARAM_MIN_VECT_LOOP_BOUND
)

	)

139 
	#MAX_DELAY_SLOT_INSN_SEARCH
 \

140 
	`PARAM_VALUE
 (
PARAM_MAX_DELAY_SLOT_INSN_SEARCH
)

	)

141 
	#MAX_DELAY_SLOT_LIVE_SEARCH
 \

142 
	`PARAM_VALUE
 (
PARAM_MAX_DELAY_SLOT_LIVE_SEARCH
)

	)

143 
	#MAX_PENDING_LIST_LENGTH
 \

144 
	`PARAM_VALUE
 (
PARAM_MAX_PENDING_LIST_LENGTH
)

	)

145 
	#MAX_GCSE_MEMORY
 \

146 ((
size_t
Ë
	`PARAM_VALUE
 (
PARAM_MAX_GCSE_MEMORY
))

	)

147 
	#MAX_GCSE_INSERTION_RATIO
 \

148 ((
size_t
Ë
	`PARAM_VALUE
 (
PARAM_MAX_GCSE_INSERTION_RATIO
))

	)

149 
	#GCSE_AFTER_RELOAD_PARTIAL_FRACTION
 \

150 
	`PARAM_VALUE
 (
PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION
)

	)

151 
	#GCSE_AFTER_RELOAD_CRITICAL_FRACTION
 \

152 
	`PARAM_VALUE
 (
PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION
)

	)

153 
	#GCSE_COST_DISTANCE_RATIO
 \

154 
	`PARAM_VALUE
 (
PARAM_GCSE_COST_DISTANCE_RATIO
)

	)

155 
	#GCSE_UNRESTRICTED_COST
 \

156 
	`PARAM_VALUE
 (
PARAM_GCSE_UNRESTRICTED_COST
)

	)

157 
	#MAX_HOIST_DEPTH
 \

158 
	`PARAM_VALUE
 (
PARAM_MAX_HOIST_DEPTH
)

	)

159 
	#MAX_UNROLLED_INSNS
 \

160 
	`PARAM_VALUE
 (
PARAM_MAX_UNROLLED_INSNS
)

	)

161 
	#MAX_SMS_LOOP_NUMBER
 \

162 
	`PARAM_VALUE
 (
PARAM_MAX_SMS_LOOP_NUMBER
)

	)

163 
	#SMS_MAX_II_FACTOR
 \

164 
	`PARAM_VALUE
 (
PARAM_SMS_MAX_II_FACTOR
)

	)

165 
	#SMS_DFA_HISTORY
 \

166 
	`PARAM_VALUE
 (
PARAM_SMS_DFA_HISTORY
)

	)

167 
	#SMS_LOOP_AVERAGE_COUNT_THRESHOLD
 \

168 
	`PARAM_VALUE
 (
PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD
)

	)

169 
	#INTEGER_SHARE_LIMIT
 \

170 
	`PARAM_VALUE
 (
PARAM_INTEGER_SHARE_LIMIT
)

	)

171 
	#MAX_LAST_VALUE_RTL
 \

172 
	`PARAM_VALUE
 (
PARAM_MAX_LAST_VALUE_RTL
)

	)

173 
	#MIN_VIRTUAL_MAPPINGS
 \

174 
	`PARAM_VALUE
 (
PARAM_MIN_VIRTUAL_MAPPINGS
)

	)

175 
	#VIRTUAL_MAPPINGS_TO_SYMS_RATIO
 \

176 
	`PARAM_VALUE
 (
PARAM_VIRTUAL_MAPPINGS_TO_SYMS_RATIO
)

	)

177 
	#MAX_FIELDS_FOR_FIELD_SENSITIVE
 \

178 ((
size_t
Ë
	`PARAM_VALUE
 (
PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE
))

	)

179 
	#MAX_SCHED_READY_INSNS
 \

180 
	`PARAM_VALUE
 (
PARAM_MAX_SCHED_READY_INSNS
)

	)

181 
	#PREFETCH_LATENCY
 \

182 
	`PARAM_VALUE
 (
PARAM_PREFETCH_LATENCY
)

	)

183 
	#SIMULTANEOUS_PREFETCHES
 \

184 
	`PARAM_VALUE
 (
PARAM_SIMULTANEOUS_PREFETCHES
)

	)

185 
	#L1_CACHE_SIZE
 \

186 
	`PARAM_VALUE
 (
PARAM_L1_CACHE_SIZE
)

	)

187 
	#L1_CACHE_LINE_SIZE
 \

188 
	`PARAM_VALUE
 (
PARAM_L1_CACHE_LINE_SIZE
)

	)

189 
	#L2_CACHE_SIZE
 \

190 
	`PARAM_VALUE
 (
PARAM_L2_CACHE_SIZE
)

	)

191 
	#USE_CANONICAL_TYPES
 \

192 
	`PARAM_VALUE
 (
PARAM_USE_CANONICAL_TYPES
)

	)

193 
	#IRA_MAX_LOOPS_NUM
 \

194 
	`PARAM_VALUE
 (
PARAM_IRA_MAX_LOOPS_NUM
)

	)

195 
	#IRA_MAX_CONFLICT_TABLE_SIZE
 \

196 
	`PARAM_VALUE
 (
PARAM_IRA_MAX_CONFLICT_TABLE_SIZE
)

	)

197 
	#IRA_LOOP_RESERVED_REGS
 \

198 
	`PARAM_VALUE
 (
PARAM_IRA_LOOP_RESERVED_REGS
)

	)

199 
	#LRA_MAX_CONSIDERED_RELOAD_PSEUDOS
 \

200 
	`PARAM_VALUE
 (
PARAM_LRA_MAX_CONSIDERED_RELOAD_PSEUDOS
)

	)

201 
	#SWITCH_CONVERSION_BRANCH_RATIO
 \

202 
	`PARAM_VALUE
 (
PARAM_SWITCH_CONVERSION_BRANCH_RATIO
)

	)

203 
	#LOOP_INVARIANT_MAX_BBS_IN_LOOP
 \

204 
	`PARAM_VALUE
 (
PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP
)

	)

205 
	#SLP_MAX_INSNS_IN_BB
 \

206 
	`PARAM_VALUE
 (
PARAM_SLP_MAX_INSNS_IN_BB
)

	)

207 
	#MIN_INSN_TO_PREFETCH_RATIO
 \

208 
	`PARAM_VALUE
 (
PARAM_MIN_INSN_TO_PREFETCH_RATIO
)

	)

209 
	#PREFETCH_MIN_INSN_TO_MEM_RATIO
 \

210 
	`PARAM_VALUE
 (
PARAM_PREFETCH_MIN_INSN_TO_MEM_RATIO
)

	)

211 
	#MIN_NONDEBUG_INSN_UID
 \

212 
	`PARAM_VALUE
 (
PARAM_MIN_NONDEBUG_INSN_UID
)

	)

213 
	#MAX_STORES_TO_SINK
 \

214 
	`PARAM_VALUE
 (
PARAM_MAX_STORES_TO_SINK
)

	)

215 
	#ALLOW_LOAD_DATA_RACES
 \

216 
	`PARAM_VALUE
 (
PARAM_ALLOW_LOAD_DATA_RACES
)

	)

217 
	#ALLOW_STORE_DATA_RACES
 \

218 
	`PARAM_VALUE
 (
PARAM_ALLOW_STORE_DATA_RACES
)

	)

219 
	#ALLOW_PACKED_LOAD_DATA_RACES
 \

220 
	`PARAM_VALUE
 (
PARAM_ALLOW_PACKED_LOAD_DATA_RACES
)

	)

221 
	#ALLOW_PACKED_STORE_DATA_RACES
 \

222 
	`PARAM_VALUE
 (
PARAM_ALLOW_PACKED_STORE_DATA_RACES
)

	)

223 
	#ASAN_STACK
 \

224 
	`PARAM_VALUE
 (
PARAM_ASAN_STACK
)

	)

225 
	#ASAN_GLOBALS
 \

226 
	`PARAM_VALUE
 (
PARAM_ASAN_GLOBALS
)

	)

227 
	#ASAN_INSTRUMENT_READS
 \

228 
	`PARAM_VALUE
 (
PARAM_ASAN_INSTRUMENT_READS
)

	)

229 
	#ASAN_INSTRUMENT_WRITES
 \

230 
	`PARAM_VALUE
 (
PARAM_ASAN_INSTRUMENT_WRITES
)

	)

231 
	#ASAN_MEMINTRIN
 \

232 
	`PARAM_VALUE
 (
PARAM_ASAN_MEMINTRIN
)

	)

233 
	#ASAN_USE_AFTER_RETURN
 \

234 
	`PARAM_VALUE
 (
PARAM_ASAN_USE_AFTER_RETURN
)

	)

235 
	#ASAN_INSTRUMENTATION_WITH_CALL_THRESHOLD
 \

236 
	`PARAM_VALUE
 (
PARAM_ASAN_INSTRUMENTATION_WITH_CALL_THRESHOLD
)

	)

	@include/pass_manager.h

20 #i‚de‡
GCC_PASS_MANAGER_H


21 
	#GCC_PASS_MANAGER_H


	)

23 
˛ass
 
	g›t_∑ss
;

24 
	gªgi°î_∑ss_öfo
;

28 
	#GCC_PASS_LISTS
 \

29 
	`DEF_PASS_LIST
 (
Æl_lowîög_∑s£s
) \

30 
	`DEF_PASS_LIST
 (
Æl_smÆl_ùa_∑s£s
) \

31 
	`DEF_PASS_LIST
 (
Æl_ªguœr_ùa_∑s£s
) \

32 
	`DEF_PASS_LIST
 (
Æl_∑s£s
)

	)

34 
	#DEF_PASS_LIST
(
LIST
Ë
PASS_LIST_NO_
##LIST,

	)

35 
	e∑ss_li°


37 
GCC_PASS_LISTS


38 
	mPASS_LIST_NUM


40 #unde‡
DEF_PASS_LIST


42 
«me•a˚
 
	ggcc
 {

44 
˛ass
 
	gc⁄ãxt
;

46 ˛as†
	c∑ss_m™agî


48 
	gpublic
:

49 *
›î©‹
 
√w
 (
size_t
 
sz
);

51 
∑ss_m™agî
 (
c⁄ãxt
 *
˘xt
);

53 
ªgi°î_∑ss
 (
ªgi°î_∑ss_öfo
 *
∑ss_öfo
);

54 
ªgi°î_⁄e_dump_fûe
 (
›t_∑ss
 *
∑ss
);

56 
›t_∑ss
 *
gë_∑ss_f‹_id
 (
id
) const;

58 
dump_∑s£s
 () const;

60 
dump_¥ofûe_ªp‹t
 () const;

62 
föish_›timiz©i⁄_∑s£s
 ();

65 
execuã_óæy_loˇl_∑s£s
 ();

66 
execuã_∑ss_mode_swôchög
 ();

69 
›t_∑ss
 *
gë_∑ss_•lô_Æl_ö¢s
 () const {

70  
	g∑ss_•lô_Æl_ö¢s_1
;

72 
›t_∑ss
 *
gë_∑ss_mode_swôchög
 () const {

73  
	g∑ss_mode_swôchög_1
;

75 
›t_∑ss
 *
gë_∑ss_≥ïhﬁe2
 (Ëc⁄° {  
	g∑ss_≥ïhﬁe2_1
; }

76 
›t_∑ss
 *
gë_∑ss_¥ofûe
 (Ëc⁄° {  
	g∑ss_¥ofûe_1
; }

78 
	gpublic
:

80 
›t_∑ss
 *
Æl_∑s£s
;

81 
›t_∑ss
 *
	gÆl_smÆl_ùa_∑s£s
;

82 
›t_∑ss
 *
	gÆl_lowîög_∑s£s
;

83 
›t_∑ss
 *
	gÆl_ªguœr_ùa_∑s£s
;

84 
›t_∑ss
 *
	gÆl_œã_ùa_∑s£s
;

87 
›t_∑ss
 **
	g∑s£s_by_id
;

88 
	g∑s£s_by_id_size
;

90 
›t_∑ss
 **
	g∑ss_li°s
[
PASS_LIST_NUM
];

92 
	g¥iv©e
:

93 
£t_∑ss_f‹_id
 (
id
, 
›t_∑ss
 *
∑ss
);

94 
ªgi°î_dump_fûes_1
 (
›t_∑ss
 *
∑ss
, 
¥›îtõs
);

95 
ªgi°î_dump_fûes
 (
›t_∑ss
 *
∑ss
, 
¥›îtõs
);

97 
	g¥iv©e
:

98 
c⁄ãxt
 *
m_˘xt
;

117 
	#INSERT_PASSES_AFTER
(
PASS
)

	)

118 
	#PUSH_INSERT_PASSES_WITHIN
(
PASS
)

	)

119 
	#POP_INSERT_PASSES
()

	)

120 
	#NEXT_PASS
(
PASS
, 
NUM
Ë
›t_∑ss
 *PASS ## 
_
 ## 
	)
NUM

121 
	#TERMINATE_PASS_LIST
()

	)

123 
	~"∑ss-ö°™˚s.def
"

125 #unde‡
INSERT_PASSES_AFTER


126 #unde‡
PUSH_INSERT_PASSES_WITHIN


127 #unde‡
POP_INSERT_PASSES


128 #unde‡
NEXT_PASS


129 #unde‡
TERMINATE_PASS_LIST


	@include/plugin-api.h

26 #i‚de‡
PLUGIN_API_H


27 
	#PLUGIN_API_H


	)

29 #ifde‡
HAVE_STDINT_H


30 
	~<°döt.h
>

31 #ñi‡
deföed
(
HAVE_INTTYPES_H
)

32 
	~<öây≥s.h
>

34 
	~<sys/ty≥s.h
>

35 #i‡!
deföed
(
HAVE_STDINT_H
Ë&& !deföed(
HAVE_INTTYPES_H
) && \

36 !
deföed
(
UINT64_MAX
Ë&& !
	$deföed
(
uöt64_t
)

37 #îr‹ 
ˇn
 
nŸ
 
föd
 
uöt64_t
 
ty≥


40 #ifde‡
__˝lu•lus


47 
	eld_∂ugö_°©us


49 
LDPS_OK
 = 0,

50 
LDPS_NO_SYMS
,

51 
LDPS_BAD_HANDLE
,

52 
LDPS_ERR


58 
	eld_∂ugö_≠i_vîsi⁄


60 
LD_PLUGIN_API_VERSION
 = 1

65 
	eld_∂ugö_ouçut_fûe_ty≥


67 
LDPO_REL
,

68 
LDPO_EXEC
,

69 
LDPO_DYN
,

70 
LDPO_PIE


75 
	sld_∂ugö_öput_fûe


77 c⁄° *
«me
;

78 
fd
;

79 
off_t
 
off£t
;

80 
off_t
 
fûesize
;

81 *
h™dÀ
;

86 
	sld_∂ugö_symbﬁ


88 *
«me
;

89 *
vîsi⁄
;

90 
def
;

91 
visibûôy
;

92 
uöt64_t
 
size
;

93 *
comd©_key
;

94 
ªsﬁuti⁄
;

99 
	sld_∂ugö_£˘i⁄


101 c⁄° * 
h™dÀ
;

102 
shndx
;

107 
	eld_∂ugö_symbﬁ_köd


109 
LDPK_DEF
,

110 
LDPK_WEAKDEF
,

111 
LDPK_UNDEF
,

112 
LDPK_WEAKUNDEF
,

113 
LDPK_COMMON


118 
	eld_∂ugö_symbﬁ_visibûôy


120 
LDPV_DEFAULT
,

121 
LDPV_PROTECTED
,

122 
LDPV_INTERNAL
,

123 
LDPV_HIDDEN


128 
	eld_∂ugö_symbﬁ_ªsﬁuti⁄


130 
LDPR_UNKNOWN
 = 0,

133 
LDPR_UNDEF
,

137 
LDPR_PREVAILING_DEF
,

142 
LDPR_PREVAILING_DEF_IRONLY
,

146 
LDPR_PREEMPTED_REG
,

149 
LDPR_PREEMPTED_IR
,

152 
LDPR_RESOLVED_IR
,

156 
LDPR_RESOLVED_EXEC
,

159 
LDPR_RESOLVED_DYN
,

165 
LDPR_PREVAILING_DEF_IRONLY_EXP


171 
ld_∂ugö_°©us


172 (*
	tld_∂ugö_˛aim_fûe_h™dÀr
) (

173 c⁄° 
	tld_∂ugö_öput_fûe
 *
	tfûe
, *
	t˛aimed
);

178 
ld_∂ugö_°©us


179 (*
	tld_∂ugö_Æl_symbﬁs_ªad_h™dÀr
) ();

184 
ld_∂ugö_°©us


185 (*
	tld_∂ugö_˛ónup_h™dÀr
) ();

190 
ld_∂ugö_°©us


191 (*
	tld_∂ugö_ªgi°î_˛aim_fûe
Ë(
	tld_∂ugö_˛aim_fûe_h™dÀr
 
	th™dÀr
);

196 
ld_∂ugö_°©us


197 (*
	tld_∂ugö_ªgi°î_Æl_symbﬁs_ªad
) (

198 
	tld_∂ugö_Æl_symbﬁs_ªad_h™dÀr
 
	th™dÀr
);

203 
ld_∂ugö_°©us


204 (*
	tld_∂ugö_ªgi°î_˛ónup
Ë(
	tld_∂ugö_˛ónup_h™dÀr
 
	th™dÀr
);

209 
ld_∂ugö_°©us


210 (*
	tld_∂ugö_add_symbﬁs
Ë(*
	th™dÀ
, 
	tnsyms
,

211 c⁄° 
	tld_∂ugö_symbﬁ
 *
	tsyms
);

217 
ld_∂ugö_°©us


218 (*
	tld_∂ugö_gë_öput_fûe
Ë(c⁄° *
	th™dÀ
,

219 
	tld_∂ugö_öput_fûe
 *
	tfûe
);

222 
ld_∂ugö_°©us


223 (*
	tld_∂ugö_gë_võw
Ë(c⁄° *
	th™dÀ
, c⁄° **
	tvõwp
);

228 
ld_∂ugö_°©us


229 (*
	tld_∂ugö_ªÀa£_öput_fûe
Ë(c⁄° *
	th™dÀ
);

234 
ld_∂ugö_°©us


235 (*
	tld_∂ugö_gë_symbﬁs
Ë(c⁄° *
	th™dÀ
, 
	tnsyms
,

236 
	tld_∂ugö_symbﬁ
 *
	tsyms
);

241 
ld_∂ugö_°©us


242 (*
	tld_∂ugö_add_öput_fûe
Ë(c⁄° *
	t∑th«me
);

247 
ld_∂ugö_°©us


248 (*
	tld_∂ugö_add_öput_libøry
Ë(c⁄° *
	tlib«me
);

253 
ld_∂ugö_°©us


254 (*
	tld_∂ugö_£t_exåa_libøry_∑th
Ë(c⁄° *
	t∑th
);

259 
ld_∂ugö_°©us


260 (*
	tld_∂ugö_mesßge
Ë(
	tÀvñ
, c⁄° *
	tf‹m©
, ...);

268 
ld_∂ugö_°©us


269 (*
	tld_∂ugö_gë_öput_£˘i⁄_cou¡
Ë(c⁄° * 
	th™dÀ
, *
	tcou¡
);

276 
ld_∂ugö_°©us


277 (*
	tld_∂ugö_gë_öput_£˘i⁄_ty≥
Ë(c⁄° 
	tld_∂ugö_£˘i⁄
 
	t£˘i⁄
,

278 *
	tty≥
);

286 
ld_∂ugö_°©us


287 (*
	tld_∂ugö_gë_öput_£˘i⁄_«me
Ë(c⁄° 
	tld_∂ugö_£˘i⁄
 
	t£˘i⁄
,

288 **
	t£˘i⁄_«me_±r
);

297 
ld_∂ugö_°©us


298 (*
	tld_∂ugö_gë_öput_£˘i⁄_c⁄ã¡s
Ë(c⁄° 
	tld_∂ugö_£˘i⁄
 
	t£˘i⁄
,

299 c⁄° **
	t£˘i⁄_c⁄ã¡s
,

300 
	tsize_t
* 
	tÀn
);

309 
ld_∂ugö_°©us


310 (*
	tld_∂ugö_upd©e_£˘i⁄_‹dî
Ë(c⁄° 
	tld_∂ugö_£˘i⁄
 *
	t£˘i⁄_li°
,

311 
	tnum_£˘i⁄s
);

318 
ld_∂ugö_°©us


319 (*
	tld_∂ugö_Ælow_£˘i⁄_‹dîög
) ();

327 
ld_∂ugö_°©us


328 (*
	tld_∂ugö_Ælow_unique_£gmít_f‹_£˘i⁄s
) ();

340 
ld_∂ugö_°©us


341 (*
	tld_∂ugö_unique_£gmít_f‹_£˘i⁄s
) (

342 c⁄° * 
	t£gmít_«me
,

343 
	tuöt64_t
 
	t£gmít_Êags
,

344 
	tuöt64_t
 
	t£gmít_Æignmít
,

345 c⁄° 
	tld_∂ugö_£˘i⁄
 * 
	t£˘i⁄_li°
,

346 
	tnum_£˘i⁄s
);

348 
	eld_∂ugö_Àvñ


350 
LDPL_INFO
,

351 
LDPL_WARNING
,

352 
LDPL_ERROR
,

353 
LDPL_FATAL


358 
	eld_∂ugö_èg


360 
LDPT_NULL
 = 0,

361 
LDPT_API_VERSION
 = 1,

362 
LDPT_GOLD_VERSION
 = 2,

363 
LDPT_LINKER_OUTPUT
 = 3,

364 
LDPT_OPTION
 = 4,

365 
LDPT_REGISTER_CLAIM_FILE_HOOK
 = 5,

366 
LDPT_REGISTER_ALL_SYMBOLS_READ_HOOK
 = 6,

367 
LDPT_REGISTER_CLEANUP_HOOK
 = 7,

368 
LDPT_ADD_SYMBOLS
 = 8,

369 
LDPT_GET_SYMBOLS
 = 9,

370 
LDPT_ADD_INPUT_FILE
 = 10,

371 
LDPT_MESSAGE
 = 11,

372 
LDPT_GET_INPUT_FILE
 = 12,

373 
LDPT_RELEASE_INPUT_FILE
 = 13,

374 
LDPT_ADD_INPUT_LIBRARY
 = 14,

375 
LDPT_OUTPUT_NAME
 = 15,

376 
LDPT_SET_EXTRA_LIBRARY_PATH
 = 16,

377 
LDPT_GNU_LD_VERSION
 = 17,

378 
LDPT_GET_VIEW
 = 18,

379 
LDPT_GET_INPUT_SECTION_COUNT
 = 19,

380 
LDPT_GET_INPUT_SECTION_TYPE
 = 20,

381 
LDPT_GET_INPUT_SECTION_NAME
 = 21,

382 
LDPT_GET_INPUT_SECTION_CONTENTS
 = 22,

383 
LDPT_UPDATE_SECTION_ORDER
 = 23,

384 
LDPT_ALLOW_SECTION_ORDERING
 = 24,

385 
LDPT_GET_SYMBOLS_V2
 = 25,

386 
LDPT_ALLOW_UNIQUE_SEGMENT_FOR_SECTIONS
 = 26,

387 
LDPT_UNIQUE_SEGMENT_FOR_SECTIONS
 = 27

392 
	sld_∂ugö_tv


394 
ld_∂ugö_èg
 
tv_èg
;

397 
tv_vÆ
;

398 c⁄° *
tv_°rög
;

399 
ld_∂ugö_ªgi°î_˛aim_fûe
 
tv_ªgi°î_˛aim_fûe
;

400 
ld_∂ugö_ªgi°î_Æl_symbﬁs_ªad
 
tv_ªgi°î_Æl_symbﬁs_ªad
;

401 
ld_∂ugö_ªgi°î_˛ónup
 
tv_ªgi°î_˛ónup
;

402 
ld_∂ugö_add_symbﬁs
 
tv_add_symbﬁs
;

403 
ld_∂ugö_gë_symbﬁs
 
tv_gë_symbﬁs
;

404 
ld_∂ugö_add_öput_fûe
 
tv_add_öput_fûe
;

405 
ld_∂ugö_mesßge
 
tv_mesßge
;

406 
ld_∂ugö_gë_öput_fûe
 
tv_gë_öput_fûe
;

407 
ld_∂ugö_gë_võw
 
tv_gë_võw
;

408 
ld_∂ugö_ªÀa£_öput_fûe
 
tv_ªÀa£_öput_fûe
;

409 
ld_∂ugö_add_öput_libøry
 
tv_add_öput_libøry
;

410 
ld_∂ugö_£t_exåa_libøry_∑th
 
tv_£t_exåa_libøry_∑th
;

411 
ld_∂ugö_gë_öput_£˘i⁄_cou¡
 
tv_gë_öput_£˘i⁄_cou¡
;

412 
ld_∂ugö_gë_öput_£˘i⁄_ty≥
 
tv_gë_öput_£˘i⁄_ty≥
;

413 
ld_∂ugö_gë_öput_£˘i⁄_«me
 
tv_gë_öput_£˘i⁄_«me
;

414 
ld_∂ugö_gë_öput_£˘i⁄_c⁄ã¡s
 
tv_gë_öput_£˘i⁄_c⁄ã¡s
;

415 
ld_∂ugö_upd©e_£˘i⁄_‹dî
 
tv_upd©e_£˘i⁄_‹dî
;

416 
ld_∂ugö_Ælow_£˘i⁄_‹dîög
 
tv_Ælow_£˘i⁄_‹dîög
;

417 
ld_∂ugö_Ælow_unique_£gmít_f‹_£˘i⁄s
 
tv_Ælow_unique_£gmít_f‹_£˘i⁄s
;

418 
ld_∂ugö_unique_£gmít_f‹_£˘i⁄s
 
tv_unique_£gmít_f‹_£˘i⁄s
;

419 } 
tv_u
;

425 
ld_∂ugö_°©us


426 (*
	tld_∂ugö_⁄lﬂd
Ë(
	tld_∂ugö_tv
 *
	ttv
);

428 #ifde‡
__˝lu•lus


429 
	}
}

	@include/plugin-version.h

1 
	~"c⁄fig¨gs.h
"

3 
	#GCCPLUGIN_VERSION_MAJOR
 4

	)

4 
	#GCCPLUGIN_VERSION_MINOR
 9

	)

5 
	#GCCPLUGIN_VERSION_PATCHLEVEL
 3

	)

6 
	#GCCPLUGIN_VERSION
 (
GCCPLUGIN_VERSION_MAJOR
*1000 + 
GCCPLUGIN_VERSION_MINOR
)

	)

8 
	gba£vî
[] = "4.9.3";

9 
	gd©e°amp
[] = "20150529";

10 
	gdevpha£
[] = "release";

11 
	gªvisi⁄
[] = "[ARM/embedded-4_9-branchÑevision 227977]";

16 
∂ugö_gcc_vîsi⁄
 
	ggcc_vîsi⁄
 = {
ba£vî
, 
d©e°amp
,

17 
devpha£
, 
ªvisi⁄
,

18 
c⁄figuøti⁄_¨gumíts
};

	@include/plugin.h

20 #i‚de‡
PLUGIN_H


21 
	#PLUGIN_H


	)

23 
	~"gcc-∂ugö.h
"

25 
	g©åibuã_•ec
;

26 
	gsc›ed_©åibuãs
;

28 
add_√w_∂ugö
 (const *);

29 
∑r£_∂ugö_¨g_›t
 (const *);

30 
övoke_∂ugö_ˇŒbacks_fuŒ
 (, *);

31 
öôülize_∂ugös
 ();

32 
boﬁ
 
∂ugös_a˘ive_p
 ();

33 
dump_a˘ive_∂ugös
 (
FILE
 *);

34 
debug_a˘ive_∂ugös
 ();

35 
w¨n_if_∂ugös
 ();

36 
∂ugös_öã∫Æ_îr‹_fun˘i⁄
 (
dügno°ic_c⁄ãxt
 *,

37 c⁄° *, 
va_li°
 *);

38 
¥öt_∂ugös_vîsi⁄s
 (
FILE
 *
fûe
, c⁄° *
ödít
);

39 
¥öt_∂ugös_hñp
 (
FILE
 *
fûe
, c⁄° *
ödít
);

40 
föÆize_∂ugös
 ();

42 
boﬁ
 
Êag_∂ugö_added
;

52 
ölöe
 

53 
	$övoke_∂ugö_ˇŒbacks
 (
evít
 
ATTRIBUTE_UNUSED
,

54 *
gcc_d©a
 
ATTRIBUTE_UNUSED
)

56 #ifde‡
ENABLE_PLUGIN


58 i‡(
Êag_∂ugö_added
)

59  
	`övoke_∂ugö_ˇŒbacks_fuŒ
 (
evít
, 
gcc_d©a
);

62  
PLUGEVT_NO_CALLBACK
;

63 
	}
}

67 
ªgi°î_©åibuã
 (c⁄° 
©åibuã_•ec
 *
©å
);

68 
sc›ed_©åibuãs
* 
ªgi°î_sc›ed_©åibuãs
 (c⁄° 
©åibuã_•ec
 *,

	@include/pointer-set.h

20 #i‚de‡
POINTER_SET_H


21 
	#POINTER_SET_H


	)

31 
	spoöãr_£t_t


33 
size_t
 
	mlog_¶Ÿs
;

34 
size_t
 
	mn_¶Ÿs
;

35 
size_t
 
	mn_ñemíts
;

36 c⁄° **
	m¶Ÿs
;

39 
poöãr_£t_t
 *
poöãr_£t_¸óã
 ();

40 
poöãr_£t_de°roy
 (
poöãr_£t_t
 *
p£t
);

41 
poöãr_£t_c⁄èös
 (c⁄° 
poöãr_£t_t
 *
p£t
, c⁄° *
p
);

42 
poöãr_£t_ö£π
 (
poöãr_£t_t
 *
p£t
, c⁄° *
p
);

43 
poöãr_£t_åavî£
 (c⁄° 
poöãr_£t_t
 *,

44 
	$boﬁ
 (*) (const *, *),

46 
boﬁ
 
	`poöãr_£t_lookup
 (c⁄° 
poöãr_£t_t
 *, c⁄° *, 
size_t
 *);

54 
ãm∂©e
 <
ty≥«me
 
T
>

55 ˛as†
	cpoöãr_m≠
 : 
¥Ÿe˘ed
 
poöãr_£t_t


57 
T
 *
vÆues
;

59 
public
:

60 
	`poöãr_m≠
 ();

61 ~
	`poöãr_m≠
 ();

62 
T
 *
	`c⁄èös
 (c⁄° *
p
);

63 
T
 *
	`ö£π
 (c⁄° *
p
, 
boﬁ
 *
exi°ed_p
 = 
NULL
);

64 
	`åavî£
 (
	$boﬁ
 (*
‚
Ë(c⁄° *, 
T
 *, *), *
d©a
);

68 
ãm∂©e
 <
ty≥«me
 
T
>

69 
poöãr_m≠
<
T
>::
	$poöãr_m≠
 ()

71 
n_ñemíts
 = 0;

72 
log_¶Ÿs
 = 8;

73 
n_¶Ÿs
 = (
size_t
Ë1 << 
log_¶Ÿs
;

75 
¶Ÿs
 = 
	`XCNEWVEC
 (c⁄° *, 
n_¶Ÿs
);

76 
vÆues
 = 
	`XNEWVEC
 (
T
, 
n_¶Ÿs
);

77 
	}
}

80 
	gãm∂©e
 <
ty≥«me
 
	gT
>

81 
	gpoöãr_m≠
<
	gT
>::~
	$poöãr_m≠
 ()

83 
	`XDELETEVEC
 (
¶Ÿs
);

84 
	`XDELETEVEC
 (
vÆues
);

85 
	}
}

91 
	gãm∂©e
 <
ty≥«me
 
	gT
>

92 
T
 *

93 
	gpoöãr_m≠
<
	gT
>::
	$c⁄èös
 (c⁄° *
p
)

95 
size_t
 
n
;

96 i‡(!
	`poöãr_£t_lookup
 (
this
, 
p
, &
n
))

97  
NULL
;

98  &
vÆues
[
n
];

99 
	}
}

103 
	gãm∂©e
 <
ty≥«me
 
	gT
>

104 
T
 *

105 
	gpoöãr_m≠
<
	gT
>::
	$ö£π
 (c⁄° *
p
, 
boﬁ
 *
exi°ed_p
)

107 
size_t
 
n
;

112 i‡(
n_ñemíts
 > 
n_¶Ÿs
 / 4)

114 
size_t
 
ﬁd_n_¶Ÿs
 = 
n_¶Ÿs
;

115 c⁄° **
ﬁd_keys
 = 
¶Ÿs
;

116 
T
 *
ﬁd_vÆues
 = 
vÆues
;

117 
log_¶Ÿs
 =Üog_slots + 1;

118 
n_¶Ÿs
 =Ç_slots * 2;

119 
¶Ÿs
 = 
	`XCNEWVEC
 (c⁄° *, 
n_¶Ÿs
);

120 
vÆues
 = 
	`XNEWVEC
 (
T
, 
n_¶Ÿs
);

121 
size_t
 
i
 = 0; i < 
ﬁd_n_¶Ÿs
; ++i)

122 i‡(
ﬁd_keys
[
i
])

124 c⁄° *
key
 = 
ﬁd_keys
[
i
];

125 
	`poöãr_£t_lookup
 (
this
, 
key
, &
n
);

126 
¶Ÿs
[
n
] = 
key
;

127 
vÆues
[
n
] = 
ﬁd_vÆues
[
i
];

129 
	`XDELETEVEC
 (
ﬁd_keys
);

130 
	`XDELETEVEC
 (
ﬁd_vÆues
);

133 i‡(!
	`poöãr_£t_lookup
 (
this
, 
p
, &
n
))

135 ++
n_ñemíts
;

136 
¶Ÿs
[
n
] = 
p
;

137 i‡(
exi°ed_p
)

138 *
exi°ed_p
 = 
Ál£
;

140 i‡(
exi°ed_p
)

141 *
exi°ed_p
 = 
åue
;

143  &
vÆues
[
n
];

144 
	}
}

150 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
	gpoöãr_m≠
<
	gT
>::
	$åavî£
 (
	$boﬁ
 (*
‚
Ë(c⁄° *, 
T
 *, *), *
d©a
)

154 
size_t
 
i
 = 0; i < 
n_¶Ÿs
; ++i)

155 i‡(
¶Ÿs
[
i
] && !
	`‚
 (¶Ÿs[i], &
vÆues
[i], 
d©a
))

157 
	}
}

160 
	gpoöãr_m≠_t
;

161 
poöãr_m≠_t
 *
poöãr_m≠_¸óã
 ();

162 
poöãr_m≠_de°roy
 (
poöãr_m≠_t
 *
pm≠
);

164 **
poöãr_m≠_c⁄èös
 (c⁄° 
poöãr_m≠_t
 *
pm≠
, c⁄° *
p
);

165 **
poöãr_m≠_ö£π
 (
poöãr_m≠_t
 *
pm≠
, c⁄° *
p
);

166 
poöãr_m≠_åavî£
 (c⁄° 
poöãr_m≠_t
 *,

167 
	$boﬁ
 (*) (const *, **, *), *);

	@include/predict.h

20 #i‚de‡
GCC_PREDICT_H


21 
	#GCC_PREDICT_H


	)

26 
	#PROB_VERY_UNLIKELY
 (
REG_BR_PROB_BASE
 / 2000 - 1)

	)

27 
	#PROB_EVEN
 (
REG_BR_PROB_BASE
 / 2)

	)

28 
	#PROB_VERY_LIKELY
 (
REG_BR_PROB_BASE
 - 
PROB_VERY_UNLIKELY
)

	)

29 
	#PROB_ALWAYS
 (
REG_BR_PROB_BASE
)

	)

30 
	#PROB_UNLIKELY
 (
REG_BR_PROB_BASE
 / 5 - 1)

	)

31 
	#PROB_LIKELY
 (
REG_BR_PROB_BASE
 - 
PROB_UNLIKELY
)

	)

33 
	#DEF_PREDICTOR
(
ENUM
, 
NAME
, 
HITRATE
, 
FLAGS
ËENUM,

	)

34 
	ebr_¥edi˘‹


36 
	~"¥edi˘.def
"

39 
	mEND_PREDICTORS


41 #unde‡
DEF_PREDICTOR


42 
	e¥edi˘i⁄


44 
	mNOT_TAKEN
,

45 
	mTAKEN


48 
¥edi˘_ö¢_def
 (
πx
, 
br_¥edi˘‹
, 
¥edi˘i⁄
);

49 
cou¡s_to_‰eqs
 ();

50 
h™dÀ_missög_¥ofûes
 ();

51 
e°im©e_bb_‰equícõs
 (
boﬁ
);

52 c⁄° *
¥edi˘‹_«me
 (
br_¥edi˘‹
);

53 
åì
 
buûd_¥edi˘_ex¥
 (
br_¥edi˘‹
, 
¥edi˘i⁄
);

54 
åì_e°im©e_¥obabûôy
 ();

55 
compuã_fun˘i⁄_‰equícy
 ();

56 
ªbuûd_‰equícõs
 ();

	@include/prefix.h

21 #i‚de‡
GCC_PREFIX_H


22 
	#GCC_PREFIX_H


	)

24 #ifde‡
__˝lu•lus


33 *
upd©e_∑th
 (c⁄° *
∑th
, c⁄° *
key
);

34 
£t_°d_¥efix
 (const *, );

36 #ifde‡
__˝lu•lus


	@include/pretty-print.h

21 #i‚de‡
GCC_PRETTY_PRINT_H


22 
	#GCC_PRETTY_PRINT_H


	)

24 
	~"ob°ack.h
"

25 
	~"öput.h
"

28 
	#PP_NL_ARGMAX
 30

	)

32 
	sãxt_öfo


34 c⁄° *
	mf‹m©_•ec
;

35 
va_li°
 *
	m¨gs_±r
;

36 
	mîr_no
;

37 
loˇti⁄_t
 *
	mlocus
;

38 **
	mx_d©a
;

46 
	edügno°ic_¥efixög_ruÀ_t


48 
	mDIAGNOSTICS_SHOW_PREFIX_ONCE
 = 0x0,

49 
	mDIAGNOSTICS_SHOW_PREFIX_NEVER
 = 0x1,

50 
	mDIAGNOSTICS_SHOW_PREFIX_EVERY_LINE
 = 0x2

58 
	schunk_öfo


61 
chunk_öfo
 *
	m¥ev
;

69 c⁄° *
	m¨gs
[
PP_NL_ARGMAX
 * 2];

74 
	souçut_buf„r


76 
ouçut_buf„r
 ();

77 ~
ouçut_buf„r
 ();

80 
ob°ack
 
	mf‹m©ãd_ob°ack
;

84 
ob°ack
 
	mchunk_ob°ack
;

88 
ob°ack
 *
	mob°ack
;

91 
chunk_öfo
 *
	mcur_chunk_¨øy
;

94 
FILE
 *
	m°ªam
;

97 
	mlöe_Àngth
;

101 
	mdigô_buf„r
[128];

105 
	tµ_Êags
;

107 
	eµ_∑ddög


109 
	mµ_n⁄e
, 
	mµ_bef‹e
, 
	mµ_a·î


114 
	sµ_wøµög_mode_t


117 
dügno°ic_¥efixög_ruÀ_t
 
	mruÀ
;

121 
	mlöe_cutoff
;

126 
	#µ_löe_cutoff
(
PP
Ë(PP)->
wøµög
.
löe_cutoff


	)

129 
	#µ_¥efixög_ruÀ
(
PP
Ë(PP)->
wøµög
.
ruÀ


	)

132 
	#µ_wøµög_mode
(
PP
Ë(PP)->
wøµög


	)

137 
	$boﬁ
 (*
	t¥öãr_‚
Ë(
	t¥ëty_¥öãr
 *, 
	tãxt_öfo
 *, const *,

138 , 
	tboﬁ
, bool, bool);

141 
	#µ_f‹m©_decodî
(
PP
Ë(PP)->
f‹m©_decodî


	)

145 
	#µ_√eds_√wlöe
(
PP
Ë(PP)->
√ed_√wlöe


	)

148 
	#µ_is_wøµög_löe
(
PP
Ë(
	`µ_löe_cutoff
 (PPË> 0)

	)

151 
	#µ_ödíèti⁄
(
PP
Ë(PP)->
ödít_skù


	)

155 
	#µ_å™¶©e_idítifõrs
(
PP
Ë(PP)->
å™¶©e_idítifõrs


	)

158 
	#µ_show_cﬁ‹
(
PP
Ë(PP)->
show_cﬁ‹


	)

163 
	s¥ëty_¥öãr


167 
ex∂icô
 
	`¥ëty_¥öãr
 (c⁄° * = 
NULL
, = 0);

169 
vútuÆ
 ~
	`¥ëty_¥öãr
 ();

172 
ouçut_buf„r
 *
buf„r
;

175 c⁄° *
¥efix
;

178 
µ_∑ddög
 
∑ddög
;

182 
maximum_Àngth
;

185 
ödít_skù
;

188 
µ_wøµög_mode_t
 
wøµög
;

198 
¥öãr_‚
 
f‹m©_decodî
;

201 
boﬁ
 
emôãd_¥efix
;

204 
boﬁ
 
√ed_√wlöe
;

208 
boﬁ
 
å™¶©e_idítifõrs
;

211 
boﬁ
 
show_cﬁ‹
;

214 
ölöe
 const *

215 
	$µ_gë_¥efix
 (c⁄° 
¥ëty_¥öãr
 *
µ
Ë{ Öp->
¥efix
; 
	}
}

217 
	#µ_•a˚
(
PP
Ë
	`µ_ch¨a˘î
 (PP, ' ')

	)

218 
	#µ_À·_∑ªn
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '(')

	)

219 
	#µ_right_∑ªn
(
PP
Ë
	`µ_ch¨a˘î
 (PP, ')')

	)

220 
	#µ_À·_bøckë
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '[')

	)

221 
	#µ_right_bøckë
(
PP
Ë
	`µ_ch¨a˘î
 (PP, ']')

	)

222 
	#µ_À·_bø˚
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '{')

	)

223 
	#µ_right_bø˚
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '}')

	)

224 
	#µ_£micﬁ⁄
(
PP
Ë
	`µ_ch¨a˘î
 (PP, ';')

	)

225 
	#µ_comma
(
PP
Ë
	`µ_ch¨a˘î
 (PP, ',')

	)

226 
	#µ_dŸ
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '.')

	)

227 
	#µ_cﬁ⁄
(
PP
Ë
	`µ_ch¨a˘î
 (PP, ':')

	)

228 
	#µ_cﬁ⁄_cﬁ⁄
(
PP
Ë
	`µ_°rög
 (PP, "::")

	)

229 
	#µ_¨row
(
PP
Ë
	`µ_°rög
 (PP, "->")

	)

230 
	#µ_equÆ
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '=')

	)

231 
	#µ_que°i⁄
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '?')

	)

232 
	#µ_b¨
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '|')

	)

233 
	#µ_b¨_b¨
(
PP
Ë
	`µ_°rög
 (PP, "||")

	)

234 
	#µ_ˇºë
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '^')

	)

235 
	#µ_am≥rßnd
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '&')

	)

236 
	#µ_am≥rßnd_am≥rßnd
(
PP
Ë
	`µ_°rög
 (PP, "&&")

	)

237 
	#µ_Àss
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '<')

	)

238 
	#µ_Àss_equÆ
(
PP
Ë
	`µ_°rög
 (PP, "<=")

	)

239 
	#µ_gª©î
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '>')

	)

240 
	#µ_gª©î_equÆ
(
PP
Ë
	`µ_°rög
 (PP, ">=")

	)

241 
	#µ_∂us
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '+')

	)

242 
	#µ_möus
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '-')

	)

243 
	#µ_°¨
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '*')

	)

244 
	#µ_¶ash
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '/')

	)

245 
	#µ_modulo
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '%')

	)

246 
	#µ_ex˛am©i⁄
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '!')

	)

247 
	#µ_com∂emít
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '~')

	)

248 
	#µ_quŸe
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '\'')

	)

249 
	#µ_backquŸe
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '`')

	)

250 
	#µ_doubÀquŸe
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '"')

	)

251 
	#µ_undîsc‹e
(
PP
Ë
	`µ_ch¨a˘î
 (PP, '_')

	)

252 
	#µ_maybe_√wlöe_™d_ödít
(
PP
, 
N
) \

253 i‡(
	`µ_√eds_√wlöe
 (
PP
)Ë
	`µ_√wlöe_™d_ödít
 (PP, 
N
)

	)

254 
	#µ_sˇœr
(
PP
, 
FORMAT
, 
SCALAR
) \

257 
	`•rötf
 (
	`µ_buf„r
 (
PP
)->
digô_buf„r
, 
FORMAT
, 
SCALAR
); \

258 
	`µ_°rög
 (
PP
, 
	`µ_buf„r
 (PP)->
digô_buf„r
); \

260 0)

	)

261 
	#µ_decimÆ_öt
(
PP
, 
I
Ë
	`µ_sˇœr
 (PP, "%d", I)

	)

262 
	#µ_unsig√d_wide_öãgî
(
PP
, 
I
) \

263 
	`µ_sˇœr
 (
PP
, 
HOST_WIDE_INT_PRINT_UNSIGNED
, (
HOST_WIDE_INT
Ë
I
)

	)

264 
	#µ_wide_öãgî
(
PP
, 
I
) \

265 
	`µ_sˇœr
 (
PP
, 
HOST_WIDE_INT_PRINT_DEC
, (
HOST_WIDE_INT
Ë
I
)

	)

266 
	#µ_wide°_öãgî
(
PP
, 
I
) \

267 
	`µ_sˇœr
 (
PP
, 
HOST_WIDEST_INT_PRINT_DEC
, (
HOST_WIDEST_INT
Ë
I
)

	)

268 
	#µ_poöãr
(
PP
, 
P
Ë
	`µ_sˇœr
 (PP, "%p", P)

	)

270 
	#µ_idítifõr
(
PP
, 
ID
Ë
	`µ_°rög
 (PP, (
	`µ_å™¶©e_idítifõrs
 (PP) \

271 ? 
	`idítifõr_to_loˇÀ
 (
ID
) \

272 : (
ID
)))

	)

275 
	#µ_buf„r
(
PP
Ë(PP)->
buf„r


	)

277 
µ_£t_löe_maximum_Àngth
 (
¥ëty_¥öãr
 *, );

278 
µ_£t_¥efix
 (
¥ëty_¥öãr
 *, const *);

279 
µ_de°roy_¥efix
 (
¥ëty_¥öãr
 *);

280 
µ_ªmaöög_ch¨a˘î_cou¡_f‹_löe
 (
¥ëty_¥öãr
 *);

281 
µ_˛ór_ouçut_¨ó
 (
¥ëty_¥öãr
 *);

282 c⁄° *
µ_f‹m©ãd_ãxt
 (
¥ëty_¥öãr
 *);

283 c⁄° *
µ_œ°_posôi⁄_ö_ãxt
 (c⁄° 
¥ëty_¥öãr
 *);

284 
µ_emô_¥efix
 (
¥ëty_¥öãr
 *);

285 
µ_≠≥nd_ãxt
 (
¥ëty_¥öãr
 *, const *, const *);

286 
µ_√wlöe_™d_Êush
 (
¥ëty_¥öãr
 *);

287 
µ_√wlöe_™d_ödít
 (
¥ëty_¥öãr
 *, );

288 
µ_£∑øã_wôh
 (
¥ëty_¥öãr
 *, );

292 #ifde‡
GCC_DIAG_STYLE


293 
	#GCC_PPDIAG_STYLE
 
GCC_DIAG_STYLE


	)

295 
	#GCC_PPDIAG_STYLE
 
__gcc_düg__


	)

300 #i‡
GCC_VERSION
 >= 3005

301 
	#ATTRIBUTE_GCC_PPDIAG
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
GCC_PPDIAG_STYLE
, m ,n))Ë
	`ATTRIBUTE_NONNULL
(m)

	)

303 
	#ATTRIBUTE_GCC_PPDIAG
(
m
, 
n
Ë
	`ATTRIBUTE_NONNULL
(m)

	)

305 
	$µ_¥ötf
 (
¥ëty_¥öãr
 *, const *, ...)

306 
	`ATTRIBUTE_GCC_PPDIAG
(2,3);

308 
	$µ_vîb©im
 (
¥ëty_¥öãr
 *, const *, ...)

309 
	`ATTRIBUTE_GCC_PPDIAG
(2,3);

310 
	`µ_Êush
 (
¥ëty_¥öãr
 *);

311 
	`µ_f‹m©
 (
¥ëty_¥öãr
 *, 
ãxt_öfo
 *);

312 
	`µ_ouçut_f‹m©ãd_ãxt
 (
¥ëty_¥öãr
 *);

313 
	`µ_f‹m©_vîb©im
 (
¥ëty_¥öãr
 *, 
ãxt_öfo
 *);

315 
	`µ_ödít
 (
¥ëty_¥öãr
 *);

316 
	`µ_√wlöe
 (
¥ëty_¥öãr
 *);

317 
	`µ_ch¨a˘î
 (
¥ëty_¥öãr
 *, );

318 
	`µ_°rög
 (
¥ëty_¥öãr
 *, const *);

319 
	`µ_wrôe_ãxt_to_°ªam
 (
¥ëty_¥öãr
 *);

320 
	`µ_wrôe_ãxt_as_dŸ_œbñ_to_°ªam
 (
¥ëty_¥öãr
 *, 
boﬁ
);

321 
	`µ_maybe_•a˚
 (
¥ëty_¥öãr
 *);

324 
ölöe
 
µ_wøµög_mode_t


325 
	$µ_£t_vîb©im_wøµög_
 (
¥ëty_¥öãr
 *
µ
)

327 
µ_wøµög_mode_t
 
ﬁdmode
 = 
	`µ_wøµög_mode
 (
µ
);

328 
	`µ_löe_cutoff
 (
µ
) = 0;

329 
	`µ_¥efixög_ruÀ
 (
µ
Ë
DIAGNOSTICS_SHOW_PREFIX_NEVER
;

330  
ﬁdmode
;

331 
	}
}

332 
	#µ_£t_vîb©im_wøµög
(
PP
Ë
	`µ_£t_vîb©im_wøµög_
 (PP)

	)

334 c⁄° *
idítifõr_to_loˇÀ
 (const *);

335 *(*
idítifõr_to_loˇÀ_Æloc
Ë(
size_t
);

336 (*
idítifõr_to_loˇÀ_‰ì
) (*);

	@include/print-rtl.h

20 #i‚de‡
GCC_PRINT_RTL_H


21 
	#GCC_PRINT_RTL_H


	)

23 #ifde‡
BUFSIZ


24 
¥öt_πl
 (
FILE
 *, 
c⁄°_πx
);

	@include/print-tree.h

20 #i‚de‡
GCC_PRINT_TREE_H


21 
	#GCC_PRINT_TREE_H


	)

23 
debug_åì
 (
åì
);

24 
debug_øw
 (c⁄° 
åì_node
 &
ªf
);

25 
debug_øw
 (c⁄° 
åì_node
 *
±r
);

26 
debug
 (c⁄° 
åì_node
 &
ªf
);

27 
debug
 (c⁄° 
åì_node
 *
±r
);

28 
debug_vîbo£
 (c⁄° 
åì_node
 &
ªf
);

29 
debug_vîbo£
 (c⁄° 
åì_node
 *
±r
);

30 
debug_hód
 (c⁄° 
åì_node
 &
ªf
);

31 
debug_hód
 (c⁄° 
åì_node
 *
±r
);

32 
debug_body
 (c⁄° 
åì_node
 &
ªf
);

33 
debug_body
 (c⁄° 
åì_node
 *
±r
);

34 
debug_vec_åì
 (
vec
<
åì
, 
va_gc
> *);

35 
debug
 (
vec
<
åì
, 
va_gc
> &
ªf
);

36 
debug
 (
vec
<
åì
, 
va_gc
> *
±r
);

37 
debug_øw
 (
vec
<
åì
, 
va_gc
> &
ªf
);

38 
debug_øw
 (
vec
<
åì
, 
va_gc
> *
±r
);

39 #ifde‡
BUFSIZ


40 
dump_addr
 (
FILE
*, const *, const *);

41 
¥öt_node
 (
FILE
 *, c⁄° *, 
åì
, );

42 
¥öt_node_brõf
 (
FILE
 *, c⁄° *, 
c⁄°_åì
, );

43 
ödít_to
 (
FILE
 *, );

	@include/real.h

20 #i‚de‡
GCC_REAL_H


21 
	#GCC_REAL_H


	)

23 
	~"machmode.h
"

28 
	eªÆ_vÆue_˛ass
 {

29 
	mrvc_zîo
,

30 
	mrvc_n‹mÆ
,

31 
	mrvc_öf
,

32 
	mrvc_«n


35 
	#SIGNIFICAND_BITS
 (128 + 
HOST_BITS_PER_LONG
)

	)

36 
	#EXP_BITS
 (32 - 6)

	)

37 
	#MAX_EXP
 ((1 << (
EXP_BITS
 - 1)Ë- 1)

	)

38 
	#SIGSZ
 (
SIGNIFICAND_BITS
 / 
HOST_BITS_PER_LONG
)

	)

39 
	#SIG_MSB
 (()1 << (
HOST_BITS_PER_LONG
 - 1))

	)

41 
GTY
(()Ë
	gªÆ_vÆue
 {

45 
	g˛
 : 2;

46 
	gdecimÆ
 : 1;

47 
	gsign
 : 1;

48 
	gsig«Œög
 : 1;

49 
	gˇn⁄iˇl
 : 1;

50 
	guexp
 : 
EXP_BITS
;

51 
	gsig
[
SIGSZ
];

54 
	#REAL_EXP
(
REAL
) \

55 (()((
REAL
)->
uexp
 ^ ()(1 << (
EXP_BITS
 - 1))) \

56 - (1 << (
EXP_BITS
 - 1)))

	)

57 
	#SET_REAL_EXP
(
REAL
, 
EXP
) \

58 ((
REAL
)->
uexp
 = (()(
EXP
Ë& ()((1 << 
EXP_BITS
Ë- 1)))

	)

63 
	#REAL_VALUE_TYPE
 
ªÆ_vÆue


	)

69 
	#REAL_VALUE_TYPE_SIZE
 (
SIGNIFICAND_BITS
 + 32)

	)

70 
	#REAL_WIDTH
 \

71 (
REAL_VALUE_TYPE_SIZE
/
HOST_BITS_PER_WIDE_INT
 \

72 + (
REAL_VALUE_TYPE_SIZE
%
HOST_BITS_PER_WIDE_INT
 ? 1 : 0)Ë

	)

75 
ã°_ªÆ_width


76 [ (
REAL_VALUE_TYPE
Ë<
REAL_WIDTH
 *  (
HOST_WIDE_INT
) ? 1 : -1];

85 #i‡
REAL_WIDTH
 == 1

86 
	#CONST_DOUBLE_FORMAT
 "ww"

	)

88 #i‡
REAL_WIDTH
 == 2

89 
	#CONST_DOUBLE_FORMAT
 "ww"

	)

91 #i‡
REAL_WIDTH
 == 3

92 
	#CONST_DOUBLE_FORMAT
 "www"

	)

94 #i‡
REAL_WIDTH
 == 4

95 
	#CONST_DOUBLE_FORMAT
 "wwww"

	)

97 #i‡
REAL_WIDTH
 == 5

98 
	#CONST_DOUBLE_FORMAT
 "wwwww"

	)

100 #i‡
REAL_WIDTH
 == 6

101 
	#CONST_DOUBLE_FORMAT
 "wwwwww"

	)

113 
	sªÆ_f‹m©


116 (*
	mícode
Ë(c⁄° 
	mªÆ_f‹m©
 *, *,

117 c⁄° 
	mREAL_VALUE_TYPE
 *);

118 (*
	mdecode
Ë(c⁄° 
	mªÆ_f‹m©
 *, 
	mREAL_VALUE_TYPE
 *,

122 
	mb
;

125 
	mp
;

128 
	m≤™
;

131 
	memö
;

134 
	memax
;

138 
	msignbô_ro
;

142 
	msignbô_rw
;

145 
boﬁ
 
	mround_tow¨ds_zîo
;

146 
boﬁ
 
	mhas_sign_dïídít_roundög
;

149 
boﬁ
 
	mhas_«ns
;

150 
boﬁ
 
	mhas_öf
;

151 
boﬁ
 
	mhas_dí‹m
;

152 
boﬁ
 
	mhas_sig√d_zîo
;

153 
boﬁ
 
	mq«n_msb_£t
;

154 
boﬁ
 
	mˇn⁄iˇl_«n_lsbs_£t
;

163 c⁄° 
ªÆ_f‹m©
 *

164 
ªÆ_f‹m©_f‹_mode
[
MAX_MODE_FLOAT
 - 
MIN_MODE_FLOAT
 + 1

165 + 
MAX_MODE_DECIMAL_FLOAT
 - 
MIN_MODE_DECIMAL_FLOAT
 + 1];

167 
	#REAL_MODE_FORMAT
(
MODE
) \

168 (
ªÆ_f‹m©_f‹_mode
[
	`DECIMAL_FLOAT_MODE_P
 (
MODE
) \

169 ? (((
MODE
Ë- 
MIN_MODE_DECIMAL_FLOAT
) \

170 + (
MAX_MODE_FLOAT
 - 
MIN_MODE_FLOAT
 + 1)) \

171 : ((
MODE
Ë- 
MIN_MODE_FLOAT
)])

	)

173 
	#FLOAT_MODE_FORMAT
(
MODE
) \

174 (
	`REAL_MODE_FORMAT
 (
	`SCALAR_FLOAT_MODE_P
 (
MODE
)? (MODE) \

175 : 
	`GET_MODE_INNER
 (
MODE
)))

	)

180 
	#MODE_COMPOSITE_P
(
MODE
) \

181 (
	`FLOAT_MODE_P
 (
MODE
) \

182 && 
	`FLOAT_MODE_FORMAT
 (
MODE
)->
≤™
 < FLOAT_MODE_FORMAT (MODE)->
p
)

	)

185 
	#MODE_HAS_NANS
(
MODE
) \

186 (
	`FLOAT_MODE_P
 (
MODE
Ë&& 
	`FLOAT_MODE_FORMAT
 (MODE)->
has_«ns
)

	)

187 
	#MODE_HAS_INFINITIES
(
MODE
) \

188 (
	`FLOAT_MODE_P
 (
MODE
Ë&& 
	`FLOAT_MODE_FORMAT
 (MODE)->
has_öf
)

	)

189 
	#MODE_HAS_SIGNED_ZEROS
(
MODE
) \

190 (
	`FLOAT_MODE_P
 (
MODE
Ë&& 
	`FLOAT_MODE_FORMAT
 (MODE)->
has_sig√d_zîo
)

	)

191 
	#MODE_HAS_SIGN_DEPENDENT_ROUNDING
(
MODE
) \

192 (
	`FLOAT_MODE_P
 (
MODE
) \

193 && 
	`FLOAT_MODE_FORMAT
 (
MODE
)->
has_sign_dïídít_roundög
)

	)

200 
	#HONOR_NANS
(
MODE
) \

201 (
	`MODE_HAS_NANS
 (
MODE
Ë&& !
Êag_föôe_m©h_⁄ly
)

	)

204 
	#HONOR_SNANS
(
MODE
Ë(
Êag_sig«lög_«ns
 && 
	`HONOR_NANS
 (MODE))

	)

208 
	#HONOR_INFINITIES
(
MODE
) \

209 (
	`MODE_HAS_INFINITIES
 (
MODE
Ë&& !
Êag_föôe_m©h_⁄ly
)

	)

213 
	#HONOR_SIGNED_ZEROS
(
MODE
) \

214 (
	`MODE_HAS_SIGNED_ZEROS
 (
MODE
Ë&& 
Êag_sig√d_zîos
)

	)

218 
	#HONOR_SIGN_DEPENDENT_ROUNDING
(
MODE
) \

219 (
	`MODE_HAS_SIGN_DEPENDENT_ROUNDING
 (
MODE
Ë&& 
Êag_roundög_m©h
)

	)

224 
boﬁ
 
ªÆ_¨ôhmëic
 (
REAL_VALUE_TYPE
 *, , const REAL_VALUE_TYPE *,

225 c⁄° 
REAL_VALUE_TYPE
 *);

228 
boﬁ
 
ªÆ_com∑ª
 (, c⁄° 
REAL_VALUE_TYPE
 *, const REAL_VALUE_TYPE *);

231 
boﬁ
 
ªÆ_isöf
 (c⁄° 
REAL_VALUE_TYPE
 *);

234 
boﬁ
 
ªÆ_i¢™
 (c⁄° 
REAL_VALUE_TYPE
 *);

237 
boﬁ
 
ªÆ_isföôe
 (c⁄° 
REAL_VALUE_TYPE
 *);

240 
boﬁ
 
ªÆ_i¢eg
 (c⁄° 
REAL_VALUE_TYPE
 *);

243 
boﬁ
 
ªÆ_i¢egzîo
 (c⁄° 
REAL_VALUE_TYPE
 *);

246 
boﬁ
 
ªÆ_idítiˇl
 (c⁄° 
REAL_VALUE_TYPE
 *, const REAL_VALUE_TYPE *);

249 
ªÆ_c⁄vît
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

250 c⁄° 
REAL_VALUE_TYPE
 *);

253 
boﬁ
 
exa˘_ªÆ_åunˇã
 (
machöe_mode
, c⁄° 
REAL_VALUE_TYPE
 *);

256 
ªÆ_to_decimÆ
 (*, c⁄° 
REAL_VALUE_TYPE
 *, 
size_t
,

257 
size_t
, );

261 
ªÆ_to_decimÆ_f‹_mode
 (*, c⁄° 
REAL_VALUE_TYPE
 *, 
size_t
,

262 
size_t
, , 
machöe_mode
);

265 
ªÆ_to_hexadecimÆ
 (*, c⁄° 
REAL_VALUE_TYPE
 *,

266 
size_t
, size_t, );

269 
HOST_WIDE_INT
 
ªÆ_to_öãgî
 (c⁄° 
REAL_VALUE_TYPE
 *);

270 
ªÆ_to_öãgî2
 (
HOST_WIDE_INT
 *, HOST_WIDE_INT *,

271 c⁄° 
REAL_VALUE_TYPE
 *);

275 
ªÆ_‰om_°rög
 (
REAL_VALUE_TYPE
 *, const *);

277 
ªÆ_‰om_°rög3
 (
REAL_VALUE_TYPE
 *, c⁄° *, 
machöe_mode
);

280 
ªÆ_‰om_öãgî
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

281 
HOST_WIDE_INT
, HOST_WIDE_INT, );

283 
ªÆ_to_èrgë_fmt
 (*, c⁄° 
REAL_VALUE_TYPE
 *,

284 c⁄° 
ªÆ_f‹m©
 *);

285 
ªÆ_to_èrgë
 (*, c⁄° 
REAL_VALUE_TYPE
 *, 
machöe_mode
);

287 
ªÆ_‰om_èrgë_fmt
 (
REAL_VALUE_TYPE
 *, const *,

288 c⁄° 
ªÆ_f‹m©
 *);

289 
ªÆ_‰om_èrgë
 (
REAL_VALUE_TYPE
 *, const *,

290 
machöe_mode
);

292 
ªÆ_öf
 (
REAL_VALUE_TYPE
 *);

294 
boﬁ
 
ªÆ_«n
 (
REAL_VALUE_TYPE
 *, c⁄° *, , 
machöe_mode
);

296 
ªÆ_maxvÆ
 (
REAL_VALUE_TYPE
 *, , 
machöe_mode
);

298 
ªÆ_2expN
 (
REAL_VALUE_TYPE
 *, , 
machöe_mode
);

300 
ªÆ_hash
 (c⁄° 
REAL_VALUE_TYPE
 *);

304 c⁄° 
ªÆ_f‹m©
 
õì_sögÀ_f‹m©
;

305 c⁄° 
ªÆ_f‹m©
 
mùs_sögÀ_f‹m©
;

306 c⁄° 
ªÆ_f‹m©
 
mŸ‹ﬁa_sögÀ_f‹m©
;

307 c⁄° 
ªÆ_f‹m©
 
•u_sögÀ_f‹m©
;

308 c⁄° 
ªÆ_f‹m©
 
õì_doubÀ_f‹m©
;

309 c⁄° 
ªÆ_f‹m©
 
mùs_doubÀ_f‹m©
;

310 c⁄° 
ªÆ_f‹m©
 
mŸ‹ﬁa_doubÀ_f‹m©
;

311 c⁄° 
ªÆ_f‹m©
 
õì_exãnded_mŸ‹ﬁa_f‹m©
;

312 c⁄° 
ªÆ_f‹m©
 
õì_exãnded_öãl_96_f‹m©
;

313 c⁄° 
ªÆ_f‹m©
 
õì_exãnded_öãl_96_round_53_f‹m©
;

314 c⁄° 
ªÆ_f‹m©
 
õì_exãnded_öãl_128_f‹m©
;

315 c⁄° 
ªÆ_f‹m©
 
ibm_exãnded_f‹m©
;

316 c⁄° 
ªÆ_f‹m©
 
mùs_exãnded_f‹m©
;

317 c⁄° 
ªÆ_f‹m©
 
õì_quad_f‹m©
;

318 c⁄° 
ªÆ_f‹m©
 
mùs_quad_f‹m©
;

319 c⁄° 
ªÆ_f‹m©
 
vax_f_f‹m©
;

320 c⁄° 
ªÆ_f‹m©
 
vax_d_f‹m©
;

321 c⁄° 
ªÆ_f‹m©
 
vax_g_f‹m©
;

322 c⁄° 
ªÆ_f‹m©
 
ªÆ_öã∫Æ_f‹m©
;

323 c⁄° 
ªÆ_f‹m©
 
decimÆ_sögÀ_f‹m©
;

324 c⁄° 
ªÆ_f‹m©
 
decimÆ_doubÀ_f‹m©
;

325 c⁄° 
ªÆ_f‹m©
 
decimÆ_quad_f‹m©
;

326 c⁄° 
ªÆ_f‹m©
 
õì_hÆf_f‹m©
;

327 c⁄° 
ªÆ_f‹m©
 
¨m_hÆf_f‹m©
;

333 
	#REAL_ARITHMETIC
(
vÆue
, 
code
, 
d1
, 
d2
) \

334 
	`ªÆ_¨ôhmëic
 (&(
vÆue
), 
code
, &(
d1
), &(
d2
))

	)

336 
	#REAL_VALUES_IDENTICAL
(
x
, 
y
Ë
	`ªÆ_idítiˇl
 (&(x), &(y))

	)

337 
	#REAL_VALUES_EQUAL
(
x
, 
y
Ë
	`ªÆ_com∑ª
 (
EQ_EXPR
, &(x), &(y))

	)

338 
	#REAL_VALUES_LESS
(
x
, 
y
Ë
	`ªÆ_com∑ª
 (
LT_EXPR
, &(x), &(y))

	)

341 
	#REAL_VALUE_ISINF
(
x
Ë
	`ªÆ_isöf
 (&(x))

	)

344 
	#REAL_VALUE_ISNAN
(
x
Ë
	`ªÆ_i¢™
 (&(x))

	)

347 
	#REAL_VALUE_NEGATIVE
(
x
Ë
	`ªÆ_i¢eg
 (&(x))

	)

350 
	#REAL_VALUE_MINUS_ZERO
(
x
Ë
	`ªÆ_i¢egzîo
 (&(x))

	)

353 
	#REAL_VALUE_TO_TARGET_LONG_DOUBLE
(
IN
, 
OUT
) \

354 
	`ªÆ_to_èrgë
 (
OUT
, &(
IN
), \

355 
	`mode_f‹_size
 (
LONG_DOUBLE_TYPE_SIZE
, 
MODE_FLOAT
, 0))

	)

357 
	#REAL_VALUE_TO_TARGET_DOUBLE
(
IN
, 
OUT
) \

358 
	`ªÆ_to_èrgë
 (
OUT
, &(
IN
), 
	`mode_f‹_size
 (64, 
MODE_FLOAT
, 0))

	)

361 
	#REAL_VALUE_TO_TARGET_SINGLE
(
IN
, 
OUT
) \

362 ((
OUT
Ë
	`ªÆ_to_èrgë
 (
NULL
, &(
IN
), 
	`mode_f‹_size
 (32, 
MODE_FLOAT
, 0)))

	)

364 
	#REAL_VALUE_FROM_INT
(
r
, 
lo
, 
hi
, 
mode
) \

365 
	`ªÆ_‰om_öãgî
 (&(
r
), 
mode
, 
lo
, 
hi
, 0)

	)

367 
	#REAL_VALUE_FROM_UNSIGNED_INT
(
r
, 
lo
, 
hi
, 
mode
) \

368 
	`ªÆ_‰om_öãgî
 (&(
r
), 
mode
, 
lo
, 
hi
, 1)

	)

373 
	#REAL_VALUE_TO_TARGET_DECIMAL128
(
IN
, 
OUT
) \

374 
	`ªÆ_to_èrgë
 (
OUT
, &(
IN
), 
	`mode_f‹_size
 (128, 
MODE_DECIMAL_FLOAT
, 0))

	)

376 
	#REAL_VALUE_TO_TARGET_DECIMAL64
(
IN
, 
OUT
) \

377 
	`ªÆ_to_èrgë
 (
OUT
, &(
IN
), 
	`mode_f‹_size
 (64, 
MODE_DECIMAL_FLOAT
, 0))

	)

380 
	#REAL_VALUE_TO_TARGET_DECIMAL32
(
IN
, 
OUT
) \

381 ((
OUT
Ë
	`ªÆ_to_èrgë
 (
NULL
, &(
IN
), 
	`mode_f‹_size
 (32, 
MODE_DECIMAL_FLOAT
, 0)))

	)

383 
REAL_VALUE_TYPE
 
ªÆ_vÆue_åunˇã
 (
machöe_mode
,

384 
REAL_VALUE_TYPE
);

386 
	#REAL_VALUE_TO_INT
(
∂ow
, 
phigh
, 
r
) \

387 
	`ªÆ_to_öãgî2
 (
∂ow
, 
phigh
, &(
r
))

	)

389 
REAL_VALUE_TYPE
 
ªÆ_vÆue_√g©e
 (const REAL_VALUE_TYPE *);

390 
REAL_VALUE_TYPE
 
ªÆ_vÆue_abs
 (const REAL_VALUE_TYPE *);

392 
signifiˇnd_size
 (
machöe_mode
);

394 
REAL_VALUE_TYPE
 
ªÆ_‰om_°rög2
 (c⁄° *, 
machöe_mode
);

396 
	#REAL_VALUE_ATOF
(
s
, 
m
) \

397 
	`ªÆ_‰om_°rög2
 (
s
, 
m
)

	)

399 
	#CONST_DOUBLE_ATOF
(
s
, 
m
) \

400 
	`CONST_DOUBLE_FROM_REAL_VALUE
 (
	`ªÆ_‰om_°rög2
 (
s
, 
m
), m)

	)

402 
	#REAL_VALUE_FIX
(
r
) \

403 
	`ªÆ_to_öãgî
 (&(
r
))

	)

406 
	#REAL_VALUE_UNSIGNED_FIX
(
r
) \

407 
	`ªÆ_to_öãgî
 (&(
r
))

	)

412 
ªÆ_exp⁄ít
 (c⁄° 
REAL_VALUE_TYPE
 *);

415 
ªÆ_ldexp
 (
REAL_VALUE_TYPE
 *, const REAL_VALUE_TYPE *, );

421 
REAL_VALUE_TYPE
 
dc⁄°0
;

422 
REAL_VALUE_TYPE
 
dc⁄°1
;

423 
REAL_VALUE_TYPE
 
dc⁄°2
;

424 
REAL_VALUE_TYPE
 
dc⁄°m1
;

425 
REAL_VALUE_TYPE
 
dc⁄°hÆf
;

427 
	#dc⁄°_e
(Ë(*
	`dc⁄°_e_±r
 ())

	)

428 
	#dc⁄°_thúd
(Ë(*
	`dc⁄°_thúd_±r
 ())

	)

429 
	#dc⁄°_sqπ2
(Ë(*
	`dc⁄°_sqπ2_±r
 ())

	)

432 c⁄° 
REAL_VALUE_TYPE
 * 
dc⁄°_e_±r
 ();

435 c⁄° 
REAL_VALUE_TYPE
 * 
dc⁄°_thúd_±r
 ();

438 c⁄° 
REAL_VALUE_TYPE
 * 
dc⁄°_sqπ2_±r
 ();

442 
REAL_VALUE_TYPE
 
ªÆ_vÆue_‰om_öt_c°
 (
c⁄°_åì
, const_tree);

445 
	#REAL_VALUE_FROM_CONST_DOUBLE
(
to
, 
‰om
) \

446 ((
to
Ë*
	`CONST_DOUBLE_REAL_VALUE
 (
‰om
))

	)

449 
	#CONST_DOUBLE_FROM_REAL_VALUE
(
r
, 
m
) \

450 
	`c⁄°_doubÀ_‰om_ªÆ_vÆue
 (
r
, 
m
)

	)

451 
πx
 
c⁄°_doubÀ_‰om_ªÆ_vÆue
 (
REAL_VALUE_TYPE
, 
machöe_mode
);

454 
boﬁ
 
exa˘_ªÆ_övî£
 (
machöe_mode
, 
REAL_VALUE_TYPE
 *);

459 
boﬁ
 
ªÆ_ˇn_sh‹ãn_¨ôhmëic
 (
machöe_mode
, machine_mode);

462 
åì
 
buûd_ªÆ
 (åì, 
REAL_VALUE_TYPE
);

465 
boﬁ
 
ªÆ_powi
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

466 c⁄° 
REAL_VALUE_TYPE
 *, 
HOST_WIDE_INT
);

469 
ªÆ_åunc
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

470 c⁄° 
REAL_VALUE_TYPE
 *);

471 
ªÆ_Êo‹
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

472 c⁄° 
REAL_VALUE_TYPE
 *);

473 
ªÆ_˚û
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

474 c⁄° 
REAL_VALUE_TYPE
 *);

475 
ªÆ_round
 (
REAL_VALUE_TYPE
 *, 
machöe_mode
,

476 c⁄° 
REAL_VALUE_TYPE
 *);

479 
ªÆ_c›ysign
 (
REAL_VALUE_TYPE
 *, const REAL_VALUE_TYPE *);

482 
boﬁ
 
ªÆ_isöãgî
 (c⁄° 
REAL_VALUE_TYPE
 *
c
, 
machöe_mode
 
mode
);

487 
gë_max_Êﬂt
 (c⁄° 
ªÆ_f‹m©
 *, *, 
size_t
);

	@include/realmpfr.h

21 #i‚de‡
GCC_REALGMP_H


22 
	#GCC_REALGMP_H


	)

24 
	~<mp‰.h
>

25 
	~<mpc.h
>

26 
	~"ªÆ.h
"

29 
åì
 
do_mpc_¨g2
 (åì,Åªe,Åªe, , (*)(
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

34 
	`ªÆ_‰om_mp‰
 (
REAL_VALUE_TYPE
 *, 
mp‰_§˝å
, 
åì
, 
mp_∫d_t
);

35 
	`mp‰_‰om_ªÆ
 (
mp‰_±r
, c⁄° 
REAL_VALUE_TYPE
 *, 
mp_∫d_t
);

	@include/regset.h

20 #i‚de‡
GCC_REGSET_H


21 
	#GCC_REGSET_H


	)

33 
	~"bôm≠.h
"

34 
	~"h¨d-ªg-£t.h
"

37 
bôm≠_hód
 
	tªg£t_hód
;

40 
bôm≠
 
	tªg£t
;

43 
	#ALLOC_REG_SET
(
OBSTACK
Ë
	`BITMAP_ALLOC
 (OBSTACK)

	)

46 
	#FREE_REG_SET
(
REGSET
Ë
	`BITMAP_FREE
 (REGSET)

	)

49 
	#INIT_REG_SET
(
HEAD
Ë
	`bôm≠_öôülize
 (HEAD, &
ªg_ob°ack
)

	)

52 
	#CLEAR_REG_SET
(
HEAD
Ë
	`bôm≠_˛ór
 (HEAD)

	)

55 
	#COPY_REG_SET
(
TO
, 
FROM
Ë
	`bôm≠_c›y
 (TO, FROM)

	)

58 
	#REG_SET_EQUAL_P
(
A
, 
B
Ë
	`bôm≠_equÆ_p
 (A, B)

	)

61 
	#AND_REG_SET
(
TO
, 
FROM
Ë
	`bôm≠_™d_öto
 (TO, FROM)

	)

64 
	#AND_COMPL_REG_SET
(
TO
, 
FROM
Ë
	`bôm≠_™d_com∂_öto
 (TO, FROM)

	)

67 
	#IOR_REG_SET
(
TO
, 
FROM
Ë
	`bôm≠_i‹_öto
 (TO, FROM)

	)

70 
	#XOR_REG_SET
(
TO
, 
FROM
Ë
	`bôm≠_x‹_öto
 (TO, FROM)

	)

73 
	#IOR_AND_COMPL_REG_SET
(
TO
, 
FROM1
, 
FROM2
) \

74 
	`bôm≠_i‹_™d_com∂_öto
 (
TO
, 
FROM1
, 
FROM2
)

	)

77 
	#CLEAR_REGNO_REG_SET
(
HEAD
, 
REG
Ë
	`bôm≠_˛ór_bô
 (HEAD, REG)

	)

80 
	#SET_REGNO_REG_SET
(
HEAD
, 
REG
Ë
	`bôm≠_£t_bô
 (HEAD, REG)

	)

83 
	#REGNO_REG_SET_P
(
TO
, 
REG
Ë
	`bôm≠_bô_p
 (TO, REG)

	)

86 
ªg_£t_to_h¨d_ªg_£t
 (
HARD_REG_SET
 *, 
c⁄°_bôm≠
);

87 
	#REG_SET_TO_HARD_REG_SET
(
TO
, 
FROM
) \

89 
	`CLEAR_HARD_REG_SET
 (
TO
); \

90 
	`ªg_£t_to_h¨d_ªg_£t
 (&
TO
, 
FROM
); \

91 } 0)

	)

93 
bôm≠_ôî©‹
 
	tªg_£t_ôî©‹
;

97 
	#EXECUTE_IF_SET_IN_REG_SET
(
REGSET
, 
MIN
, 
REGNUM
, 
RSI
) \

98 
	`EXECUTE_IF_SET_IN_BITMAP
 (
REGSET
, 
MIN
, 
REGNUM
, 
RSI
)

	)

103 
	#EXECUTE_IF_AND_COMPL_IN_REG_SET
(
REGSET1
, 
REGSET2
, 
MIN
, 
REGNUM
, 
RSI
) \

104 
	`EXECUTE_IF_AND_COMPL_IN_BITMAP
 (
REGSET1
, 
REGSET2
, 
MIN
, 
REGNUM
, 
RSI
)

	)

109 
	#EXECUTE_IF_AND_IN_REG_SET
(
REGSET1
, 
REGSET2
, 
MIN
, 
REGNUM
, 
RSI
) \

110 
	`EXECUTE_IF_AND_IN_BITMAP
 (
REGSET1
, 
REGSET2
, 
MIN
, 
REGNUM
, 
RSI
) \

111 

	)

115 
ªg£t
 
ªgs_övÆid©ed_by_ˇŒ_ªg£t
;

118 
ªg£t
 
fixed_ªg_£t_ªg£t
;

121 
bôm≠_ob°ack
 
ªg_ob°ack
;

124 
dump_ªg£t
 (
ªg£t
, 
FILE
 *);

	@include/resource.h

20 #i‚de‡
GCC_RESOURCE_H


21 
	#GCC_RESOURCE_H


	)

23 
	~"h¨d-ªg-£t.h
"

24 
	~"df.h
"

27 
	#CLEAR_RESOURCE
(
RES
) \

28 dÿ{ (
RES
)->
mem‹y
 = (RES)->
vﬁ©û
 = (RES)->
cc
 = 0; \

29 
	`CLEAR_HARD_REG_SET
 ((
RES
)->
ªgs
); } 0)

	)

32 
	sªsour˚s


34 
	mmem‹y
;

35 
	mvﬁ©û
;

36 
	mcc
;

37 
HARD_REG_SET
 
	mªgs
;

41 
	em¨k_ªsour˚_ty≥


43 
	mMARK_SRC_DEST
 = 0,

44 
	mMARK_SRC_DEST_CALL
 = 1

47 
m¨k_èrgë_live_ªgs
 (
πx
,Ñtx, 
ªsour˚s
 *);

48 
m¨k_£t_ªsour˚s
 (
πx
, 
ªsour˚s
 *, ,

49 
m¨k_ªsour˚_ty≥
);

50 
m¨k_ª„ªn˚d_ªsour˚s
 (
πx
, 
ªsour˚s
 *, 
boﬁ
);

51 
˛ór_hashed_öfo_f‹_ö¢
 (
πx
);

52 
ö¸_ticks_f‹_ö¢
 (
πx
);

53 
m¨k_íd_of_fun˘i⁄_ªsour˚s
 (
πx
, 
boﬁ
);

54 
öô_ªsour˚_öfo
 (
πx
);

55 
‰ì_ªsour˚_öfo
 ();

	@include/rtl.h

20 #i‚de‡
GCC_RTL_H


21 
	#GCC_RTL_H


	)

23 
	~"°©i°ics.h
"

24 
	~"machmode.h
"

25 
	~"öput.h
"

26 
	~"ªÆ.h
"

27 
	~"vec.h
"

28 
	~"fixed-vÆue.h
"

29 
	~"Æüs.h
"

30 
	~"hashèb.h
"

31 
	~"Êags.h
"

35 
	#NOOP_MOVE_INSN_CODE
 
INT_MAX


	)

39 
	#RTX_CODE
 
πx_code


	)

40 
	eπx_code
 {

42 
	#DEF_RTL_EXPR
(
ENUM
, 
NAME
, 
FORMAT
, 
CLASS
ËENUM ,

	)

43 
	~"πl.def
"

44 #unde‡
DEF_RTL_EXPR


46 
	mLAST_AND_UNUSED_RTX_CODE
};

51 
	#NUM_RTX_CODE
 ((Ë
LAST_AND_UNUSED_RTX_CODE
)

	)

54 #ifde‡
GENERATOR_FILE


55 
	#NON_GENERATOR_NUM_RTX_CODE
 ((Ë
MATCH_OPERAND
)

	)

60 
	eπx_˛ass
 {

65 
	mRTX_COMPARE
,

66 
	mRTX_COMM_COMPARE
,

67 
	mRTX_BIN_ARITH
,

68 
	mRTX_COMM_ARITH
,

71 
	mRTX_UNARY
,

73 
	mRTX_EXTRA
,

74 
	mRTX_MATCH
,

75 
	mRTX_INSN
,

78 
	mRTX_OBJ
,

79 
	mRTX_CONST_OBJ
,

81 
	mRTX_TERNARY
,

82 
	mRTX_BITFIELD_OPS
,

83 
	mRTX_AUTOINC


86 
	#RTX_OBJ_MASK
 (~1)

	)

87 
	#RTX_OBJ_RESULT
 (
RTX_OBJ
 & 
RTX_OBJ_MASK
)

	)

88 
	#RTX_COMPARE_MASK
 (~1)

	)

89 
	#RTX_COMPARE_RESULT
 (
RTX_COMPARE
 & 
RTX_COMPARE_MASK
)

	)

90 
	#RTX_ARITHMETIC_MASK
 (~1)

	)

91 
	#RTX_ARITHMETIC_RESULT
 (
RTX_COMM_ARITH
 & 
RTX_ARITHMETIC_MASK
)

	)

92 
	#RTX_BINARY_MASK
 (~3)

	)

93 
	#RTX_BINARY_RESULT
 (
RTX_COMPARE
 & 
RTX_BINARY_MASK
)

	)

94 
	#RTX_COMMUTATIVE_MASK
 (~2)

	)

95 
	#RTX_COMMUTATIVE_RESULT
 (
RTX_COMM_COMPARE
 & 
RTX_COMMUTATIVE_MASK
)

	)

96 
	#RTX_NON_COMMUTATIVE_RESULT
 (
RTX_COMPARE
 & 
RTX_COMMUTATIVE_MASK
)

	)

98 c⁄° 
πx_Àngth
[
NUM_RTX_CODE
];

99 
	#GET_RTX_LENGTH
(
CODE
Ë(
πx_Àngth
[(Ë(CODE)])

	)

101 c⁄° * c⁄° 
πx_«me
[
NUM_RTX_CODE
];

102 
	#GET_RTX_NAME
(
CODE
Ë(
πx_«me
[(Ë(CODE)])

	)

104 c⁄° * c⁄° 
πx_f‹m©
[
NUM_RTX_CODE
];

105 
	#GET_RTX_FORMAT
(
CODE
Ë(
πx_f‹m©
[(Ë(CODE)])

	)

107 c⁄° 
πx_˛ass
Ñtx_˛ass[
NUM_RTX_CODE
];

108 
	#GET_RTX_CLASS
(
CODE
Ë(
πx_˛ass
[(Ë(CODE)])

	)

110 c⁄° 
πx_code_size
[
NUM_RTX_CODE
];

111 c⁄° 
πx_√xt
[
NUM_RTX_CODE
];

115 
	saddr_diff_vec_Êags


118 
	mmö_Æign
: 8;

120 
	mba£_a·î_vec
: 1;

121 
	mmö_a·î_vec
: 1;

123 
	mmax_a·î_vec
: 1;

125 
	mmö_a·î_ba£
: 1;

127 
	mmax_a·î_ba£
: 1;

130 
	moff£t_unsig√d
: 1;

132 
	msˇÀ
 : 8;

138 
GTY
(()Ë
	gmem_©ås


143 
åì
 
	gex¥
;

147 
HOST_WIDE_INT
 
	goff£t
;

151 
HOST_WIDE_INT
 
	gsize
;

154 
Æüs_£t_ty≥
 
	gÆüs
;

159 
	gÆign
;

162 
	gaddr•a˚
;

165 
boﬁ
 
	goff£t_known_p
;

168 
boﬁ
 
	gsize_known_p
;

178 
GTY
(()Ë
	gªg_©ås
 {

179 
åì
 
	gde˛
;

180 
HOST_WIDE_INT
 
	goff£t
;

185 
	uπuni⁄


187 
	mπ_öt
;

188 
	mπ_uöt
;

189 c⁄° *
	mπ_°r
;

190 
πx
 
	mπ_πx
;

191 
πvec
 
	mπ_πvec
;

192 
machöe_mode
 
	mπ_ty≥
;

193 
addr_diff_vec_Êags
 
	mπ_addr_diff_vec_Êags
;

194 
c£lib_vÆ
 *
	mπ_c£lib
;

195 
åì
 
	mπ_åì
;

196 
basic_block
 
	mπ_bb
;

197 
mem_©ås
 *
	mπ_mem
;

198 
ªg_©ås
 *
	mπ_ªg
;

199 
c⁄°™t_des¸ùt‹_πx
 *
	mπ_c⁄°™t
;

200 
dw_cfi_node
 *
	mπ_cfi
;

206 
GTY
(()Ë
	gblock_symbﬁ
 {

208 
πuni⁄
 
GTY
 ((
skù
)Ë
	gÊd
[3];

211 
obje˘_block
 *
	gblock
;

215 
HOST_WIDE_INT
 
	goff£t
;

220 
GTY
(()Ë
	gobje˘_block
 {

222 
£˘i⁄
 *
	g£˘
;

225 
	gÆignmít
;

228 
HOST_WIDE_INT
 
	gsize
;

238 
	gvec
<
	gπx
, 
	gva_gc
> *
	gobje˘s
;

248 
	gvec
<
	gπx
, 
	gva_gc
> *
	g™ch‹s
;

253 
GTY
((
chaö_√xt
 ("RTX_NEXT (&%h)"),

254 
chaö_¥ev
 ("RTX_PREV (&%h)"), 
v¨übÀ_size
)Ë
	gπx_def
 {

256 
ENUM_BITFIELD
(
πx_code
Ë
	gcode
: 16;

259 
ENUM_BITFIELD
(
machöe_mode
Ë
	gmode
 : 8;

269 
	gjump
 : 1;

274 
	gˇŒ
 : 1;

285 
	gunch™gög
 : 1;

298 
	gvﬁ©û
 : 1;

312 
	gö_°ru˘
 : 1;

321 
	gu£d
 : 1;

329 
	g‰ame_ªœãd
 : 1;

335 
	gªtu∫_vÆ
 : 1;

340 
	uu
 {

341 
πuni⁄
 
	gÊd
[1];

342 
HOST_WIDE_INT
 
	ghwöt
[1];

343 
block_symbﬁ
 
	gblock_sym
;

344 
ªÆ_vÆue
 
	grv
;

345 
fixed_vÆue
 
	gfv
;

346 } 
GTY
 ((
•ecül
 ("πx_def"), 
desc
 ("GET_CODE (&%0)"))Ë
	gu
;

350 
	#RTX_HDR_SIZE
 
	`off£tof
 (
πx_def
, 
u
)

	)

353 
	#RTX_CODE_SIZE
(
CODE
Ë
πx_code_size
[CODE]

	)

355 
	#NULL_RTX
 (
πx
Ë0

	)

359 
	#RTX_NEXT
(
X
Ë(
πx_√xt
[
	`GET_CODE
 (X)] =0 ? 
NULL
 \

360 : *(
πx
 *)(((*)
X
Ë+ 
πx_√xt
[
	`GET_CODE
 (X)]))

	)

364 
	#RTX_PREV
(
X
Ë((
	`INSN_P
 (X) \

365 || 
	`NOTE_P
 (
X
) \

366 || 
	`JUMP_TABLE_DATA_P
 (
X
) \

367 || 
	`BARRIER_P
 (
X
) \

368 || 
	`LABEL_P
 (
X
)) \

369 && 
	`PREV_INSN
 (
X
Ë!
NULL
 \

370 && 
	`NEXT_INSN
 (
	`PREV_INSN
 (
X
)) == X \

371 ? 
	`PREV_INSN
 (
X
Ë: 
NULL
)

	)

375 
	#GET_CODE
(
RTX
Ë((
πx_code
Ë(RTX)->
code
)

	)

376 
	#PUT_CODE
(
RTX
, 
CODE
Ë((RTX)->
code
 = (CODE))

	)

378 
	#GET_MODE
(
RTX
Ë((
machöe_mode
Ë(RTX)->
mode
)

	)

379 
	#PUT_MODE
(
RTX
, 
MODE
Ë((RTX)->
mode
 = (MODE))

	)

385 
GTY
((
v¨übÀ_size
)Ë
	gπvec_def
 {

386 
	gnum_ñem
;

387 
πx
 
GTY
 ((
Àngth
 ("%h.num_ñem"))Ë
	gñem
[1];

390 
	#NULL_RTVEC
 (
πvec
Ë0

	)

392 
	#GET_NUM_ELEM
(
RTVEC
Ë((RTVEC)->
num_ñem
)

	)

393 
	#PUT_NUM_ELEM
(
RTVEC
, 
NUM
Ë((RTVEC)->
num_ñem
 = (NUM))

	)

396 
	#REG_P
(
X
Ë(
	`GET_CODE
 (XË=
REG
)

	)

399 
	#MEM_P
(
X
Ë(
	`GET_CODE
 (XË=
MEM
)

	)

402 
	#CASE_CONST_SCALAR_INT
 \

403 
CONST_INT
: \

404 
CONST_DOUBLE


	)

407 
	#CASE_CONST_UNIQUE
 \

408 
CONST_INT
: \

409 
CONST_DOUBLE
: \

410 
CONST_FIXED


	)

413 
	#CASE_CONST_ANY
 \

414 
CONST_INT
: \

415 
CONST_DOUBLE
: \

416 
CONST_FIXED
: \

417 
CONST_VECTOR


	)

420 
	#CONST_INT_P
(
X
Ë(
	`GET_CODE
 (XË=
CONST_INT
)

	)

423 
	#CONST_FIXED_P
(
X
Ë(
	`GET_CODE
 (XË=
CONST_FIXED
)

	)

427 
	#CONST_DOUBLE_P
(
X
Ë(
	`GET_CODE
 (XË=
CONST_DOUBLE
)

	)

430 
	#CONST_DOUBLE_AS_INT_P
(
X
) \

431 (
	`GET_CODE
 (
X
Ë=
CONST_DOUBLE
 && 
	`GET_MODE
 (XË=
VOIDmode
)

	)

434 
	#CONST_SCALAR_INT_P
(
X
) \

435 (
	`CONST_INT_P
 (
X
Ë|| 
	`CONST_DOUBLE_AS_INT_P
 (X))

	)

438 
	#CONST_DOUBLE_AS_FLOAT_P
(
X
) \

439 (
	`GET_CODE
 (
X
Ë=
CONST_DOUBLE
 && 
	`GET_MODE
 (XË!
VOIDmode
)

	)

442 
	#LABEL_P
(
X
Ë(
	`GET_CODE
 (XË=
CODE_LABEL
)

	)

445 
	#JUMP_P
(
X
Ë(
	`GET_CODE
 (XË=
JUMP_INSN
)

	)

448 
	#CALL_P
(
X
Ë(
	`GET_CODE
 (XË=
CALL_INSN
)

	)

451 
	#NONJUMP_INSN_P
(
X
Ë(
	`GET_CODE
 (XË=
INSN
)

	)

454 
	#DEBUG_INSN_P
(
X
Ë(
	`GET_CODE
 (XË=
DEBUG_INSN
)

	)

457 
	#NONDEBUG_INSN_P
(
X
Ë(
	`INSN_P
 (XË&& !
	`DEBUG_INSN_P
 (X))

	)

460 
	#MAY_HAVE_DEBUG_INSNS
 (
Êag_v¨_åackög_assignmíts
)

	)

463 
	#INSN_P
(
X
) \

464 (
	`NONJUMP_INSN_P
 (
X
Ë|| 
	`DEBUG_INSN_P
 (XË|| 
	`JUMP_P
 (XË|| 
	`CALL_P
 (X))

	)

467 
	#NOTE_P
(
X
Ë(
	`GET_CODE
 (XË=
NOTE
)

	)

470 
	#BARRIER_P
(
X
Ë(
	`GET_CODE
 (XË=
BARRIER
)

	)

473 
	#JUMP_TABLE_DATA_P
(
INSN
Ë(
	`GET_CODE
 (INSNË=
JUMP_TABLE_DATA
)

	)

476 
	#ANY_RETURN_P
(
X
) \

477 (
	`GET_CODE
 (
X
Ë=
RETURN
 || GET_CODE (XË=
SIMPLE_RETURN
)

	)

481 
	#UNARY_P
(
X
) \

482 (
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë=
RTX_UNARY
)

	)

486 
	#BINARY_P
(
X
) \

487 ((
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë& 
RTX_BINARY_MASK
Ë=
RTX_BINARY_RESULT
)

	)

491 
	#ARITHMETIC_P
(
X
) \

492 ((
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë& 
RTX_ARITHMETIC_MASK
) \

493 =
RTX_ARITHMETIC_RESULT
)

	)

497 
	#COMMUTATIVE_ARITH_P
(
X
) \

498 (
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë=
RTX_COMM_ARITH
)

	)

504 
	#SWAPPABLE_OPERANDS_P
(
X
) \

505 ((1 << 
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
))) \

506 & ((1 << 
RTX_COMM_ARITH
Ë| (1 << 
RTX_COMM_COMPARE
) \

507 | (1 << 
RTX_COMPARE
)))

	)

511 
	#NON_COMMUTATIVE_P
(
X
) \

512 ((
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë& 
RTX_COMMUTATIVE_MASK
) \

513 =
RTX_NON_COMMUTATIVE_RESULT
)

	)

517 
	#COMMUTATIVE_P
(
X
) \

518 ((
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë& 
RTX_COMMUTATIVE_MASK
) \

519 =
RTX_COMMUTATIVE_RESULT
)

	)

523 
	#COMPARISON_P
(
X
) \

524 ((
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë& 
RTX_COMPARE_MASK
Ë=
RTX_COMPARE_RESULT
)

	)

528 
	#CONSTANT_P
(
X
) \

529 (
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë=
RTX_CONST_OBJ
)

	)

532 
	#OBJECT_P
(
X
) \

533 ((
	`GET_RTX_CLASS
 (
	`GET_CODE
 (
X
)Ë& 
RTX_OBJ_MASK
Ë=
RTX_OBJ_RESULT
)

	)

537 #i‡
deföed
 
ENABLE_RTL_CHECKING
 && (
GCC_VERSION
 >= 2007)

540 
	#RTL_CHECK1
(
RTX
, 
N
, 
C1
Ë
__exãnsi⁄__
 \

541 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); c⁄° 
_n
 = (
N
); \

542 c⁄° 
πx_code
 
_code
 = 
	`GET_CODE
 (
_πx
); \

543 i‡(
_n
 < 0 || _¿>
	`GET_RTX_LENGTH
 (
_code
)) \

544 
	`πl_check_Áûed_bounds
 (
_πx
, 
_n
, 
__FILE__
, 
__LINE__
, \

545 
__FUNCTION__
); \

546 i‡(
	`GET_RTX_FORMAT
 (
_code
)[
_n
] !
C1
) \

547 
	`πl_check_Áûed_ty≥1
 (
_πx
, 
_n
, 
C1
, 
__FILE__
, 
__LINE__
, \

548 
__FUNCTION__
); \

549 &
_πx
->
u
.
Êd
[
_n
]; }))

	)

551 
	#RTL_CHECK2
(
RTX
, 
N
, 
C1
, 
C2
Ë
__exãnsi⁄__
 \

552 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); c⁄° 
_n
 = (
N
); \

553 c⁄° 
πx_code
 
_code
 = 
	`GET_CODE
 (
_πx
); \

554 i‡(
_n
 < 0 || _¿>
	`GET_RTX_LENGTH
 (
_code
)) \

555 
	`πl_check_Áûed_bounds
 (
_πx
, 
_n
, 
__FILE__
, 
__LINE__
, \

556 
__FUNCTION__
); \

557 i‡(
	`GET_RTX_FORMAT
 (
_code
)[
_n
] !
C1
 \

558 && 
	`GET_RTX_FORMAT
 (
_code
)[
_n
] !
C2
) \

559 
	`πl_check_Áûed_ty≥2
 (
_πx
, 
_n
, 
C1
, 
C2
, 
__FILE__
, 
__LINE__
, \

560 
__FUNCTION__
); \

561 &
_πx
->
u
.
Êd
[
_n
]; }))

	)

563 
	#RTL_CHECKC1
(
RTX
, 
N
, 
C
Ë
__exãnsi⁄__
 \

564 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); c⁄° 
_n
 = (
N
); \

565 i‡(
	`GET_CODE
 (
_πx
Ë!(
C
)) \

566 
	`πl_check_Áûed_code1
 (
_πx
, (
C
), 
__FILE__
, 
__LINE__
, \

567 
__FUNCTION__
); \

568 &
_πx
->
u
.
Êd
[
_n
]; }))

	)

570 
	#RTL_CHECKC2
(
RTX
, 
N
, 
C1
, 
C2
Ë
__exãnsi⁄__
 \

571 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); c⁄° 
_n
 = (
N
); \

572 c⁄° 
πx_code
 
_code
 = 
	`GET_CODE
 (
_πx
); \

573 i‡(
_code
 !(
C1
Ë&& _codê!(
C2
)) \

574 
	`πl_check_Áûed_code2
 (
_πx
, (
C1
), (
C2
), 
__FILE__
, 
__LINE__
, \

575 
__FUNCTION__
); \

576 &
_πx
->
u
.
Êd
[
_n
]; }))

	)

578 
	#RTVEC_ELT
(
RTVEC
, 
I
Ë
__exãnsi⁄__
 \

579 (*({ 
	`__ty≥of
 (
RTVEC
Ëc⁄° 
_πvec
 = (RTVEC); c⁄° 
_i
 = (
I
); \

580 i‡(
_i
 < 0 || _ò>
	`GET_NUM_ELEM
 (
_πvec
)) \

581 
	`πvec_check_Áûed_bounds
 (
_πvec
, 
_i
, 
__FILE__
, 
__LINE__
, \

582 
__FUNCTION__
); \

583 &
_πvec
->
ñem
[
_i
]; }))

	)

585 
	#XWINT
(
RTX
, 
N
Ë
__exãnsi⁄__
 \

586 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); c⁄° 
_n
 = (
N
); \

587 c⁄° 
πx_code
 
_code
 = 
	`GET_CODE
 (
_πx
); \

588 i‡(
_n
 < 0 || _¿>
	`GET_RTX_LENGTH
 (
_code
)) \

589 
	`πl_check_Áûed_bounds
 (
_πx
, 
_n
, 
__FILE__
, 
__LINE__
, \

590 
__FUNCTION__
); \

591 i‡(
	`GET_RTX_FORMAT
 (
_code
)[
_n
] != 'w') \

592 
	`πl_check_Áûed_ty≥1
 (
_πx
, 
_n
, 'w', 
__FILE__
, 
__LINE__
, \

593 
__FUNCTION__
); \

594 &
_πx
->
u
.
hwöt
[
_n
]; }))

	)

596 
	#XCWINT
(
RTX
, 
N
, 
C
Ë
__exãnsi⁄__
 \

597 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

598 i‡(
	`GET_CODE
 (
_πx
Ë!(
C
)) \

599 
	`πl_check_Áûed_code1
 (
_πx
, (
C
), 
__FILE__
, 
__LINE__
, \

600 
__FUNCTION__
); \

601 &
_πx
->
u
.
hwöt
[
N
]; }))

	)

603 
	#XCMWINT
(
RTX
, 
N
, 
C
, 
M
Ë
__exãnsi⁄__
 \

604 (*({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

605 i‡(
	`GET_CODE
 (
_πx
Ë!(
C
Ë|| 
	`GET_MODE
 (_πxË!(
M
)) \

606 
	`πl_check_Áûed_code_mode
 (
_πx
, (
C
), (
M
), 
Ál£
, 
__FILE__
, \

607 
__LINE__
, 
__FUNCTION__
); \

608 &
_πx
->
u
.
hwöt
[
N
]; }))

	)

610 
	#XCNMPRV
(
RTX
, 
C
, 
M
Ë
__exãnsi⁄__
 \

611 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

612 i‡(
	`GET_CODE
 (
_πx
Ë!(
C
Ë|| 
	`GET_MODE
 (_πxË=(
M
)) \

613 
	`πl_check_Áûed_code_mode
 (
_πx
, (
C
), (
M
), 
åue
, 
__FILE__
, \

614 
__LINE__
, 
__FUNCTION__
); \

615 &
_πx
->
u
.
rv
; })

	)

617 
	#XCNMPFV
(
RTX
, 
C
, 
M
Ë
__exãnsi⁄__
 \

618 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

619 i‡(
	`GET_CODE
 (
_πx
Ë!(
C
Ë|| 
	`GET_MODE
 (_πxË=(
M
)) \

620 
	`πl_check_Áûed_code_mode
 (
_πx
, (
C
), (
M
), 
åue
, 
__FILE__
, \

621 
__LINE__
, 
__FUNCTION__
); \

622 &
_πx
->
u
.
fv
; })

	)

624 
	#BLOCK_SYMBOL_CHECK
(
RTX
Ë
__exãnsi⁄__
 \

625 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_symbﬁ
 = (RTX); \

626 c⁄° 
Êags
 = 
	`RTL_CHECKC1
 (
_symbﬁ
, 1, 
SYMBOL_REF
).
π_öt
; \

627 i‡((
Êags
 & 
SYMBOL_FLAG_HAS_BLOCK_INFO
) == 0) \

628 
	`πl_check_Áûed_block_symbﬁ
 (
__FILE__
, 
__LINE__
, \

629 
__FUNCTION__
); \

630 &
_symbﬁ
->
u
.
block_sym
; })

	)

632 
	$πl_check_Áûed_bounds
 (
c⁄°_πx
, , const *, ,

634 
ATTRIBUTE_NORETURN
;

635 
	$πl_check_Áûed_ty≥1
 (
c⁄°_πx
, , , const *, ,

637 
ATTRIBUTE_NORETURN
;

638 
	$πl_check_Áûed_ty≥2
 (
c⁄°_πx
, , , , const *,

640 
ATTRIBUTE_NORETURN
;

641 
	$πl_check_Áûed_code1
 (
c⁄°_πx
, 
πx_code
, const *,

643 
ATTRIBUTE_NORETURN
;

644 
	$πl_check_Áûed_code2
 (
c⁄°_πx
, 
πx_code
, rtx_code,

646 
ATTRIBUTE_NORETURN
;

647 
	$πl_check_Áûed_code_mode
 (
c⁄°_πx
, 
πx_code
, 
machöe_mode
,

648 
boﬁ
, const *, , const *)

649 
ATTRIBUTE_NORETURN
;

650 
	$πl_check_Áûed_block_symbﬁ
 (const *, , const *)

651 
ATTRIBUTE_NORETURN
;

652 
	$πvec_check_Áûed_bounds
 (
c⁄°_πvec
, , const *, ,

654 
ATTRIBUTE_NORETURN
;

658 
	#RTL_CHECK1
(
RTX
, 
N
, 
C1
Ë((RTX)->
u
.
Êd
[N])

	)

659 
	#RTL_CHECK2
(
RTX
, 
N
, 
C1
, 
C2
Ë((RTX)->
u
.
Êd
[N])

	)

660 
	#RTL_CHECKC1
(
RTX
, 
N
, 
C
Ë((RTX)->
u
.
Êd
[N])

	)

661 
	#RTL_CHECKC2
(
RTX
, 
N
, 
C1
, 
C2
Ë((RTX)->
u
.
Êd
[N])

	)

662 
	#RTVEC_ELT
(
RTVEC
, 
I
Ë((RTVEC)->
ñem
[I])

	)

663 
	#XWINT
(
RTX
, 
N
Ë((RTX)->
u
.
hwöt
[N])

	)

664 
	#XCWINT
(
RTX
, 
N
, 
C
Ë((RTX)->
u
.
hwöt
[N])

	)

665 
	#XCMWINT
(
RTX
, 
N
, 
C
, 
M
Ë((RTX)->
u
.
hwöt
[N])

	)

666 
	#XCNMWINT
(
RTX
, 
N
, 
C
, 
M
Ë((RTX)->
u
.
hwöt
[N])

	)

667 
	#XCNMPRV
(
RTX
, 
C
, 
M
Ë(&(RTX)->
u
.
rv
)

	)

668 
	#XCNMPFV
(
RTX
, 
C
, 
M
Ë(&(RTX)->
u
.
fv
)

	)

669 
	#BLOCK_SYMBOL_CHECK
(
RTX
Ë(&(RTX)->
u
.
block_sym
)

	)

676 
	#RTX_FLAG
(
RTX
, 
FLAG
Ë((RTX)->FLAG)

	)

678 #i‡
deföed
 
ENABLE_RTL_FLAG_CHECKING
 && (
GCC_VERSION
 >= 2007)

679 
	#RTL_FLAG_CHECK1
(
NAME
, 
RTX
, 
C1
Ë
__exãnsi⁄__
 \

680 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

681 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
) \

682 
	`πl_check_Áûed_Êag
 (
NAME
, 
_πx
, 
__FILE__
, 
__LINE__
, \

683 
__FUNCTION__
); \

684 
_πx
; 
	}
})

	)

686 
	#RTL_FLAG_CHECK2
(
NAME
, 
RTX
, 
C1
, 
C2
Ë
__exãnsi⁄__
 \

687 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

688 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE(_πxË!
C2
) \

689 
	`πl_check_Áûed_Êag
 (
NAME
,
_πx
, 
__FILE__
, 
__LINE__
, \

690 
__FUNCTION__
); \

691 
_πx
; })

	)

693 
	#RTL_FLAG_CHECK3
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
Ë
__exãnsi⁄__
 \

694 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

695 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE(_πxË!
C2
 \

696 && 
	`GET_CODE
 (
_πx
Ë!
C3
) \

697 
	`πl_check_Áûed_Êag
 (
NAME
, 
_πx
, 
__FILE__
, 
__LINE__
, \

698 
__FUNCTION__
); \

699 
_πx
; })

	)

701 
	#RTL_FLAG_CHECK4
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
Ë
__exãnsi⁄__
 \

702 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

703 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE(_πxË!
C2
 \

704 && 
	`GET_CODE
 (
_πx
Ë!
C3
 && GET_CODE(_πxË!
C4
) \

705 
	`πl_check_Áûed_Êag
 (
NAME
, 
_πx
, 
__FILE__
, 
__LINE__
, \

706 
__FUNCTION__
); \

707 
_πx
; })

	)

709 
	#RTL_FLAG_CHECK5
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
Ë
__exãnsi⁄__
 \

710 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

711 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE (_πxË!
C2
 \

712 && 
	`GET_CODE
 (
_πx
Ë!
C3
 && GET_CODE (_πxË!
C4
 \

713 && 
	`GET_CODE
 (
_πx
Ë!
C5
) \

714 
	`πl_check_Áûed_Êag
 (
NAME
, 
_πx
, 
__FILE__
, 
__LINE__
, \

715 
__FUNCTION__
); \

716 
_πx
; })

	)

718 
	#RTL_FLAG_CHECK6
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
, 
C6
) \

719 
__exãnsi⁄__
 \

720 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

721 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE (_πxË!
C2
 \

722 && 
	`GET_CODE
 (
_πx
Ë!
C3
 && GET_CODE (_πxË!
C4
 \

723 && 
	`GET_CODE
 (
_πx
Ë!
C5
 && GET_CODE (_πxË!
C6
) \

724 
	`πl_check_Áûed_Êag
 (
NAME
,
_πx
, 
__FILE__
, 
__LINE__
, \

725 
__FUNCTION__
); \

726 
_πx
; })

	)

728 
	#RTL_FLAG_CHECK7
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
, 
C6
, 
C7
) \

729 
__exãnsi⁄__
 \

730 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

731 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE (_πxË!
C2
 \

732 && 
	`GET_CODE
 (
_πx
Ë!
C3
 && GET_CODE (_πxË!
C4
 \

733 && 
	`GET_CODE
 (
_πx
Ë!
C5
 && GET_CODE (_πxË!
C6
 \

734 && 
	`GET_CODE
 (
_πx
Ë!
C7
) \

735 
	`πl_check_Áûed_Êag
 (
NAME
, 
_πx
, 
__FILE__
, 
__LINE__
, \

736 
__FUNCTION__
); \

737 
_πx
; })

	)

739 
	#RTL_FLAG_CHECK8
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
, 
C6
, 
C7
, 
C8
) \

740 
__exãnsi⁄__
 \

741 ({ 
	`__ty≥of
 (
RTX
Ëc⁄° 
_πx
 = (RTX); \

742 i‡(
	`GET_CODE
 (
_πx
Ë!
C1
 && GET_CODE (_πxË!
C2
 \

743 && 
	`GET_CODE
 (
_πx
Ë!
C3
 && GET_CODE (_πxË!
C4
 \

744 && 
	`GET_CODE
 (
_πx
Ë!
C5
 && GET_CODE (_πxË!
C6
 \

745 && 
	`GET_CODE
 (
_πx
Ë!
C7
 && GET_CODE (_πxË!
C8
) \

746 
	`πl_check_Áûed_Êag
 (
NAME
, 
_πx
, 
__FILE__
, 
__LINE__
, \

747 
__FUNCTION__
); \

748 
_πx
; })

	)

750 
	$πl_check_Áûed_Êag
 (c⁄° *, 
c⁄°_πx
, const *,

752 
ATTRIBUTE_NORETURN


757 
	#RTL_FLAG_CHECK1
(
NAME
, 
RTX
, 
C1
Ë(RTX)

	)

758 
	#RTL_FLAG_CHECK2
(
NAME
, 
RTX
, 
C1
, 
C2
Ë(RTX)

	)

759 
	#RTL_FLAG_CHECK3
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
Ë(RTX)

	)

760 
	#RTL_FLAG_CHECK4
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
Ë(RTX)

	)

761 
	#RTL_FLAG_CHECK5
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
Ë(RTX)

	)

762 
	#RTL_FLAG_CHECK6
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
, 
C6
Ë(RTX)

	)

763 
	#RTL_FLAG_CHECK7
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
, 
C6
, 
C7
Ë(RTX)

	)

764 
	#RTL_FLAG_CHECK8
(
NAME
, 
RTX
, 
C1
, 
C2
, 
C3
, 
C4
, 
C5
, 
C6
, 
C7
, 
C8
Ë(RTX)

	)

767 
	#XINT
(
RTX
, 
N
Ë(
	`RTL_CHECK2
 (RTX, N, 'i', 'n').
π_öt
)

	)

768 
	#XUINT
(
RTX
, 
N
Ë(
	`RTL_CHECK2
 (RTX, N, 'i', 'n').
π_uöt
)

	)

769 
	#XSTR
(
RTX
, 
N
Ë(
	`RTL_CHECK2
 (RTX, N, 's', 'S').
π_°r
)

	)

770 
	#XEXP
(
RTX
, 
N
Ë(
	`RTL_CHECK2
 (RTX, N, 'e', 'u').
π_πx
)

	)

771 
	#XVEC
(
RTX
, 
N
Ë(
	`RTL_CHECK2
 (RTX, N, 'E', 'V').
π_πvec
)

	)

772 
	#XMODE
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, 'M').
π_ty≥
)

	)

773 
	#XTREE
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, 't').
π_åì
)

	)

774 
	#XBBDEF
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, 'B').
π_bb
)

	)

775 
	#XTMPL
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, 'T').
π_°r
)

	)

776 
	#XCFI
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, 'C').
π_cfi
)

	)

778 
	#XVECEXP
(
RTX
, 
N
, 
M
Ë
	`RTVEC_ELT
 (
	`XVEC
 (RTX, N), M)

	)

779 
	#XVECLEN
(
RTX
, 
N
Ë
	`GET_NUM_ELEM
 (
	`XVEC
 (RTX, N))

	)

784 
	#X0INT
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_öt
)

	)

785 
	#X0UINT
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_uöt
)

	)

786 
	#X0STR
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_°r
)

	)

787 
	#X0EXP
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_πx
)

	)

788 
	#X0VEC
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_πvec
)

	)

789 
	#X0MODE
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_ty≥
)

	)

790 
	#X0TREE
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_åì
)

	)

791 
	#X0BBDEF
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_bb
)

	)

792 
	#X0ADVFLAGS
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_addr_diff_vec_Êags
)

	)

793 
	#X0CSELIB
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_c£lib
)

	)

794 
	#X0MEMATTR
(
RTX
, 
N
Ë(
	`RTL_CHECKC1
 (RTX, N, 
MEM
).
π_mem
)

	)

795 
	#X0REGATTR
(
RTX
, 
N
Ë(
	`RTL_CHECKC1
 (RTX, N, 
REG
).
π_ªg
)

	)

796 
	#X0CONSTANT
(
RTX
, 
N
Ë(
	`RTL_CHECK1
 (RTX, N, '0').
π_c⁄°™t
)

	)

799 
	#X0ANY
(
RTX
, 
N
Ë
	`RTL_CHECK1
 (RTX, N, '0')

	)

801 
	#XCINT
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_öt
)

	)

802 
	#XCUINT
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_uöt
)

	)

803 
	#XCSTR
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_°r
)

	)

804 
	#XCEXP
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_πx
)

	)

805 
	#XCVEC
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_πvec
)

	)

806 
	#XCMODE
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_ty≥
)

	)

807 
	#XCTREE
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_åì
)

	)

808 
	#XCBBDEF
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_bb
)

	)

809 
	#XCCFI
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_cfi
)

	)

810 
	#XCCSELIB
(
RTX
, 
N
, 
C
Ë(
	`RTL_CHECKC1
 (RTX, N, C).
π_c£lib
)

	)

812 
	#XCVECEXP
(
RTX
, 
N
, 
M
, 
C
Ë
	`RTVEC_ELT
 (
	`XCVEC
 (RTX, N, C), M)

	)

813 
	#XCVECLEN
(
RTX
, 
N
, 
C
Ë
	`GET_NUM_ELEM
 (
	`XCVEC
 (RTX, N, C))

	)

815 
	#XC2EXP
(
RTX
, 
N
, 
C1
, 
C2
Ë(
	`RTL_CHECKC2
 (RTX, N, C1, C2).
π_πx
)

	)

821 
	#INSN_UID
(
INSN
Ë
	`XINT
 (INSN, 0)

	)

824 
	#PREV_INSN
(
INSN
Ë
	`XEXP
 (INSN, 1)

	)

825 
	#NEXT_INSN
(
INSN
Ë
	`XEXP
 (INSN, 2)

	)

827 
	#BLOCK_FOR_INSN
(
INSN
Ë
	`XBBDEF
 (INSN, 3)

	)

830 
	#PATTERN
(
INSN
Ë
	`XEXP
 (INSN, 4)

	)

832 
	#INSN_LOCATION
(
INSN
Ë
	`XUINT
 (INSN, 5)

	)

834 
	#INSN_HAS_LOCATION
(
INSN
Ë((
	`LOCATION_LOCUS
 (
	`INSN_LOCATION
 (INSN)))\

835 !
UNKNOWN_LOCATION
)

	)

838 
	#RTL_LOCATION
(
X
Ë(
	`INSN_P
 (X) ? \

839 
	`INSN_LOCATION
 (
X
Ë: 
UNKNOWN_LOCATION
)

	)

843 
	#INSN_CODE
(
INSN
Ë
	`XINT
 (INSN, 6)

	)

845 
	#RTX_FRAME_RELATED_P
(
RTX
) \

846 (
	`RTL_FLAG_CHECK6
 ("RTX_FRAME_RELATED_P", (
RTX
), 
DEBUG_INSN
, 
INSN
, \

847 
CALL_INSN
, 
JUMP_INSN
, 
BARRIER
, 
SET
)->
‰ame_ªœãd
)

	)

850 
	#INSN_DELETED_P
(
RTX
) \

851 (
	`RTL_FLAG_CHECK8
 ("INSN_DELETED_P", (
RTX
), 
DEBUG_INSN
, 
INSN
, \

852 
CALL_INSN
, 
JUMP_INSN
, 
JUMP_TABLE_DATA
, \

853 
CODE_LABEL
, 
BARRIER
, 
NOTE
)->
vﬁ©û
)

	)

857 
	#RTL_CONST_CALL_P
(
RTX
) \

858 (
	`RTL_FLAG_CHECK1
 ("RTL_CONST_CALL_P", (
RTX
), 
CALL_INSN
)->
unch™gög
)

	)

862 
	#RTL_PURE_CALL_P
(
RTX
) \

863 (
	`RTL_FLAG_CHECK1
 ("RTL_PURE_CALL_P", (
RTX
), 
CALL_INSN
)->
ªtu∫_vÆ
)

	)

866 
	#RTL_CONST_OR_PURE_CALL_P
(
RTX
) \

867 (
	`RTL_CONST_CALL_P
 (
RTX
Ë|| 
	`RTL_PURE_CALL_P
 (RTX))

	)

871 
	#RTL_LOOPING_CONST_OR_PURE_CALL_P
(
RTX
) \

872 (
	`RTL_FLAG_CHECK1
 ("CONST_OR_PURE_CALL_P", (
RTX
), 
CALL_INSN
)->
ˇŒ
)

	)

875 
	#SIBLING_CALL_P
(
RTX
) \

876 (
	`RTL_FLAG_CHECK1
 ("SIBLING_CALL_P", (
RTX
), 
CALL_INSN
)->
jump
)

	)

879 
	#INSN_ANNULLED_BRANCH_P
(
RTX
) \

880 (
	`RTL_FLAG_CHECK1
 ("INSN_ANNULLED_BRANCH_P", (
RTX
), 
JUMP_INSN
)->
unch™gög
)

	)

886 
	#INSN_FROM_TARGET_P
(
RTX
) \

887 (
	`RTL_FLAG_CHECK3
 ("INSN_FROM_TARGET_P", (
RTX
), 
INSN
, 
JUMP_INSN
, \

888 
CALL_INSN
)->
ö_°ru˘
)

	)

892 
	#ADDR_DIFF_VEC_FLAGS
(
RTX
Ë
	`X0ADVFLAGS
 (RTX, 4)

	)

896 
	#CSELIB_VAL_PTR
(
RTX
Ë
	`X0CSELIB
 (RTX, 0)

	)

903 
	#REG_NOTES
(
INSN
Ë
	`XEXP
(INSN, 7)

	)

907 
	#ENTRY_VALUE_EXP
(
RTX
Ë(
	`RTL_CHECKC1
 (RTX, 0, 
ENTRY_VALUE
).
π_πx
)

	)

909 
	eªg_nŸe


911 
	#DEF_REG_NOTE
(
NAME
ËNAME,

	)

912 
	~"ªg-nŸes.def
"

913 #unde‡
DEF_REG_NOTE


914 
REG_NOTE_MAX


918 
	#REG_NOTE_KIND
(
LINK
Ë((
ªg_nŸe
Ë
	`GET_MODE
 (LINK))

	)

919 
	#PUT_REG_NOTE_KIND
(
LINK
, 
KIND
) \

920 
	`PUT_MODE
 (
LINK
, (
machöe_mode
Ë(
KIND
))

	)

924 c⁄° * c⁄° 
ªg_nŸe_«me
[];

925 
	#GET_REG_NOTE_NAME
(
MODE
Ë(
ªg_nŸe_«me
[(Ë(MODE)])

	)

934 
	#CALL_INSN_FUNCTION_USAGE
(
INSN
Ë
	`XEXP
(INSN, 8)

	)

939 
	#CODE_LABEL_NUMBER
(
INSN
Ë
	`XINT
 (INSN, 6)

	)

948 
	#NOTE_DATA
(
INSN
Ë
	`RTL_CHECKC1
 (INSN, 4, 
NOTE
)

	)

949 
	#NOTE_DELETED_LABEL_NAME
(
INSN
Ë
	`XCSTR
 (INSN, 4, 
NOTE
)

	)

950 
	#SET_INSN_DELETED
(
INSN
Ë
	`£t_ö¢_dñëed
 (INSN);

	)

951 
	#NOTE_BLOCK
(
INSN
Ë
	`XCTREE
 (INSN, 4, 
NOTE
)

	)

952 
	#NOTE_EH_HANDLER
(
INSN
Ë
	`XCINT
 (INSN, 4, 
NOTE
)

	)

953 
	#NOTE_BASIC_BLOCK
(
INSN
Ë
	`XCBBDEF
 (INSN, 4, 
NOTE
)

	)

954 
	#NOTE_VAR_LOCATION
(
INSN
Ë
	`XCEXP
 (INSN, 4, 
NOTE
)

	)

955 
	#NOTE_CFI
(
INSN
Ë
	`XCCFI
 (INSN, 4, 
NOTE
)

	)

956 
	#NOTE_LABEL_NUMBER
(
INSN
Ë
	`XCINT
 (INSN, 4, 
NOTE
)

	)

960 
	#NOTE_KIND
(
INSN
Ë
	`XCINT
 (INSN, 5, 
NOTE
)

	)

963 
	#NOTE_INSN_BASIC_BLOCK_P
(
INSN
) \

964 (
	`NOTE_P
 (
INSN
Ë&& 
	`NOTE_KIND
 (INSNË=
NOTE_INSN_BASIC_BLOCK
)

	)

967 
	#PAT_VAR_LOCATION_DECL
(
PAT
Ë(
	`XCTREE
 ((PAT), 0, 
VAR_LOCATION
))

	)

968 
	#PAT_VAR_LOCATION_LOC
(
PAT
Ë(
	`XCEXP
 ((PAT), 1, 
VAR_LOCATION
))

	)

973 
	#PAT_VAR_LOCATION_STATUS
(
PAT
) \

974 ((
v¨_öô_°©us
Ë(
	`XCINT
 ((
PAT
), 2, 
VAR_LOCATION
)))

	)

977 
	#NOTE_VAR_LOCATION_DECL
(
NOTE
) \

978 
	`PAT_VAR_LOCATION_DECL
 (
	`NOTE_VAR_LOCATION
 (
NOTE
))

	)

979 
	#NOTE_VAR_LOCATION_LOC
(
NOTE
) \

980 
	`PAT_VAR_LOCATION_LOC
 (
	`NOTE_VAR_LOCATION
 (
NOTE
))

	)

981 
	#NOTE_VAR_LOCATION_STATUS
(
NOTE
) \

982 
	`PAT_VAR_LOCATION_STATUS
 (
	`NOTE_VAR_LOCATION
 (
NOTE
))

	)

985 
	#INSN_VAR_LOCATION
(
INSN
Ë
	`PATTERN
 (INSN)

	)

988 
	#INSN_VAR_LOCATION_DECL
(
INSN
) \

989 
	`PAT_VAR_LOCATION_DECL
 (
	`INSN_VAR_LOCATION
 (
INSN
))

	)

990 
	#INSN_VAR_LOCATION_LOC
(
INSN
) \

991 
	`PAT_VAR_LOCATION_LOC
 (
	`INSN_VAR_LOCATION
 (
INSN
))

	)

992 
	#INSN_VAR_LOCATION_STATUS
(
INSN
) \

993 
	`PAT_VAR_LOCATION_STATUS
 (
	`INSN_VAR_LOCATION
 (
INSN
))

	)

997 
	#gí_πx_UNKNOWN_VAR_LOC
(Ë(
	`gí_πx_CLOBBER
 (
VOIDmode
, 
c⁄°0_πx
))

	)

1000 
	#VAR_LOC_UNKNOWN_P
(
X
) \

1001 (
	`GET_CODE
 (
X
Ë=
CLOBBER
 && 
	`XEXP
 ((X), 0Ë=
c⁄°0_πx
)

	)

1005 
	#NOTE_DURING_CALL_P
(
RTX
) \

1006 (
	`RTL_FLAG_CHECK1
 ("NOTE_VAR_LOCATION_DURING_CALL_P", (
RTX
), 
NOTE
)->
ˇŒ
)

	)

1009 
	#DEBUG_EXPR_TREE_DECL
(
RTX
Ë
	`XCTREE
 (RTX, 0, 
DEBUG_EXPR
)

	)

1012 
	#DEBUG_IMPLICIT_PTR_DECL
(
RTX
Ë
	`XCTREE
 (RTX, 0, 
DEBUG_IMPLICIT_PTR
)

	)

1015 
	#DEBUG_PARAMETER_REF_DECL
(
RTX
Ë
	`XCTREE
 (RTX, 0, 
DEBUG_PARAMETER_REF
)

	)

1026 
	eö¢_nŸe


1028 
	#DEF_INSN_NOTE
(
NAME
ËNAME,

	)

1029 
	~"ö¢-nŸes.def
"

1030 #unde‡
DEF_INSN_NOTE


1032 
NOTE_INSN_MAX


1037 c⁄° * c⁄° 
nŸe_ö¢_«me
[
NOTE_INSN_MAX
];

1038 
	#GET_NOTE_INSN_NAME
(
NOTE_CODE
) \

1039 (
nŸe_ö¢_«me
[(
NOTE_CODE
)])

	)

1043 
	#LABEL_NAME
(
RTX
Ë
	`XCSTR
 (RTX, 7, 
CODE_LABEL
)

	)

1047 
	#LABEL_NUSES
(
RTX
Ë
	`XCINT
 (RTX, 5, 
CODE_LABEL
)

	)

1052 
	eœbñ_köd


1054 
LABEL_NORMAL
 = 0,

1055 
LABEL_STATIC_ENTRY
,

1056 
LABEL_GLOBAL_ENTRY
,

1057 
LABEL_WEAK_ENTRY


1060 #i‡
deföed
 
ENABLE_RTL_FLAG_CHECKING
 && (
GCC_VERSION
 > 2007)

1063 
	#LABEL_KIND
(
LABEL
Ë
__exãnsi⁄__
 \

1064 ({ 
	`__ty≥of
 (
LABEL
Ëc⁄° 
_œbñ
 = (LABEL); \

1065 i‡(! 
	`LABEL_P
 (
_œbñ
)) \

1066 
	`πl_check_Áûed_Êag
 ("LABEL_KIND", 
_œbñ
, 
__FILE__
, 
__LINE__
, \

1067 
__FUNCTION__
); \

1068 (
œbñ_köd
Ë((
_œbñ
->
jump
 << 1Ë| _œbñ->
ˇŒ
); 
	}
})

	)

1071 
	#SET_LABEL_KIND
(
LABEL
, 
KIND
) do { \

1072 
	`__ty≥of
 (
LABEL
Ëc⁄° 
_œbñ
 = (LABEL); \

1073 c⁄° 
_köd
 = (
KIND
); \

1074 i‡(! 
	`LABEL_P
 (
_œbñ
)) \

1075 
	`πl_check_Áûed_Êag
 ("SET_LABEL_KIND", 
_œbñ
, 
__FILE__
, 
__LINE__
, \

1076 
__FUNCTION__
); \

1077 
_œbñ
->
jump
 = ((
_köd
 >> 1) & 1); \

1078 
_œbñ
->
ˇŒ
 = (
_köd
 & 1); \

1079 } 0)

	)

1084 
	#LABEL_KIND
(
LABEL
) \

1085 ((
œbñ_köd
Ë(((
LABEL
)->
jump
 << 1Ë| (LABEL)->
ˇŒ
))

	)

1088 
	#SET_LABEL_KIND
(
LABEL
, 
KIND
) do { \

1089 
πx
 c⁄° 
_œbñ
 = (
LABEL
); \

1090 c⁄° 
_köd
 = (
KIND
); \

1091 
_œbñ
->
jump
 = ((
_köd
 >> 1) & 1); \

1092 
_œbñ
->
ˇŒ
 = (
_köd
 & 1); \

1093 } 0)

	)

1097 
	#LABEL_ALT_ENTRY_P
(
LABEL
Ë(
	`LABEL_KIND
 (LABELË!
LABEL_NORMAL
)

	)

1102 
	#JUMP_LABEL
(
INSN
Ë
	`XCEXP
 (INSN, 8, 
JUMP_INSN
)

	)

1107 
	#LABEL_REFS
(
LABEL
Ë
	`XCEXP
 (LABEL, 4, 
CODE_LABEL
)

	)

1111 
	#REGNO
(
RTX
Ë(
	`rhs_ªgno
(RTX))

	)

1112 
	#SET_REGNO
(
RTX
,
N
) \

1113 (
	`df_ªf_ch™ge_ªg_wôh_loc
 (
	`REGNO
 (
RTX
), 
N
, RTX), 
	`XCUINT
 (RTX, 0, 
REG
ËN)

	)

1114 
	#SET_REGNO_RAW
(
RTX
,
N
Ë(
	`XCUINT
 (RTX, 0, 
REG
ËN)

	)

1119 
	#ORIGINAL_REGNO
(
RTX
Ë
	`X0UINT
 (RTX, 1)

	)

1122 
ölöe
 

1123 
	$rhs_ªgno
 (
c⁄°_πx
 
x
)

1125  
	`XCUINT
 (
x
, 0, 
REG
);

1126 
	}
}

1131 
	#REG_FUNCTION_VALUE_P
(
RTX
) \

1132 (
	`RTL_FLAG_CHECK2
 ("REG_FUNCTION_VALUE_P", (
RTX
), 
REG
, 
PARALLEL
)->
ªtu∫_vÆ
)

	)

1135 
	#REG_USERVAR_P
(
RTX
) \

1136 (
	`RTL_FLAG_CHECK1
 ("REG_USERVAR_P", (
RTX
), 
REG
)->
vﬁ©û
)

	)

1139 
	#REG_POINTER
(
RTX
) \

1140 (
	`RTL_FLAG_CHECK1
 ("REG_POINTER", (
RTX
), 
REG
)->
‰ame_ªœãd
)

	)

1143 
	#MEM_POINTER
(
RTX
) \

1144 (
	`RTL_FLAG_CHECK1
 ("MEM_POINTER", (
RTX
), 
MEM
)->
‰ame_ªœãd
)

	)

1147 
	#HARD_REGISTER_P
(
REG
Ë(
	`HARD_REGISTER_NUM_P
 (
	`REGNO
 (REG)))

	)

1150 
	#HARD_REGISTER_NUM_P
(
REG_NO
Ë((REG_NOË< 
FIRST_PSEUDO_REGISTER
)

	)

1153 
	#INTVAL
(
RTX
Ë
	`XCWINT
 (RTX, 0, 
CONST_INT
)

	)

1154 
	#UINTVAL
(
RTX
Ë((
HOST_WIDE_INT
Ë
	`INTVAL
 (RTX))

	)

1161 
	#CONST_DOUBLE_LOW
(
r
Ë
	`XCMWINT
 (r, 0, 
CONST_DOUBLE
, 
VOIDmode
)

	)

1162 
	#CONST_DOUBLE_HIGH
(
r
Ë
	`XCMWINT
 (r, 1, 
CONST_DOUBLE
, 
VOIDmode
)

	)

1163 
	#CONST_DOUBLE_REAL_VALUE
(
r
) \

1164 ((c⁄° 
ªÆ_vÆue
 *Ë
	`XCNMPRV
 (
r
, 
CONST_DOUBLE
, 
VOIDmode
))

	)

1166 
	#CONST_FIXED_VALUE
(
r
) \

1167 ((c⁄° 
fixed_vÆue
 *Ë
	`XCNMPFV
 (
r
, 
CONST_FIXED
, 
VOIDmode
))

	)

1168 
	#CONST_FIXED_VALUE_HIGH
(
r
) \

1169 ((
HOST_WIDE_INT
Ë(
	`CONST_FIXED_VALUE
 (
r
)->
d©a
.
high
))

	)

1170 
	#CONST_FIXED_VALUE_LOW
(
r
) \

1171 ((
HOST_WIDE_INT
Ë(
	`CONST_FIXED_VALUE
 (
r
)->
d©a
.
low
))

	)

1174 
	#CONST_VECTOR_ELT
(
RTX
, 
N
Ë
	`XCVECEXP
 (RTX, 0, N, 
CONST_VECTOR
)

	)

1177 
	#CONST_VECTOR_NUNITS
(
RTX
Ë
	`XCVECLEN
 (RTX, 0, 
CONST_VECTOR
)

	)

1182 
	#SUBREG_REG
(
RTX
Ë
	`XCEXP
 (RTX, 0, 
SUBREG
)

	)

1183 
	#SUBREG_BYTE
(
RTX
Ë
	`XCUINT
 (RTX, 1, 
SUBREG
)

	)

1189 
	#COSTS_N_INSNS
(
N
Ë((NË* 4)

	)

1193 
	#MAX_COST
 
INT_MAX


	)

1197 
	sfuŒ_πx_co°s


1199 
	m•ìd
;

1200 
	msize
;

1204 
ölöe
 

1205 
	$öô_co°s_to_max
 (
fuŒ_πx_co°s
 *
c
)

1207 
c
->
•ìd
 = 
MAX_COST
;

1208 
c
->
size
 = 
MAX_COST
;

1209 
	}
}

1212 
ölöe
 

1213 
	$öô_co°s_to_zîo
 (
fuŒ_πx_co°s
 *
c
)

1215 
c
->
•ìd
 = 0;

1216 
c
->
size
 = 0;

1217 
	}
}

1221 
ölöe
 
boﬁ


1222 
	$co°s_…_p
 (
fuŒ_πx_co°s
 *
a
, fuŒ_πx_co°†*
b
,

1223 
boﬁ
 
•ìd
)

1225 i‡(
•ìd
)

1226  (
a
->
•ìd
 < 
b
->speed

1227 || (
a
->
•ìd
 =
b
->•ìd &&á->
size
 < b->size));

1229  (
a
->
size
 < 
b
->size

1230 || (
a
->
size
 =
b
->sizê&&á->
•ìd
 < b->speed));

1231 
	}
}

1235 
ölöe
 

1236 
	$co°s_add_n_ö¢s
 (
fuŒ_πx_co°s
 *
c
, 
n
)

1238 
c
->
•ìd
 +
	`COSTS_N_INSNS
 (
n
);

1239 
c
->
size
 +
	`COSTS_N_INSNS
 (
n
);

1240 
	}
}

1245 
	saddªss_öfo
 {

1248 
machöe_mode
 
	mmode
;

1251 
addr_•a˚_t
 
	mas
;

1254 
πx
 *
	mouãr
;

1268 
πx
 *
	mö√r
;

1288 
πx
 *
	m£gmít
;

1289 
πx
 *
	mba£
;

1290 
πx
 *
	mödex
;

1291 
πx
 *
	mdi•
;

1293 
πx
 *
	m£gmít_ãrm
;

1294 
πx
 *
	mba£_ãrm
;

1295 
πx
 *
	mödex_ãrm
;

1296 
πx
 *
	mdi•_ãrm
;

1300 
πx
 *
	mba£_ãrm2
;

1304 
πx_code
 
	maddr_ouãr_code
;

1307 
πx_code
 
	mba£_ouãr_code
;

1310 
boﬁ
 
	mautoöc_p
;

1313 
öô_πœ«l
 ();

1314 
πx_co°
 (
πx
, 
πx_code
, , 
boﬁ
);

1315 
addªss_co°
 (
πx
, 
machöe_mode
, 
addr_•a˚_t
, 
boﬁ
);

1316 
gë_fuŒ_πx_co°
 (
πx
, 
πx_code
, ,

1317 
fuŒ_πx_co°s
 *);

1318 
subªg_lsb
 (
c⁄°_πx
);

1319 
subªg_lsb_1
 (
machöe_mode
, machine_mode,

1321 
subªg_ªgno_off£t
 (, 
machöe_mode
,

1322 , 
machöe_mode
);

1323 
boﬁ
 
subªg_off£t_ª¥e£¡abÀ_p
 (, 
machöe_mode
,

1324 , 
machöe_mode
);

1325 
subªg_ªgno
 (
c⁄°_πx
);

1326 
sim∂ify_subªg_ªgno
 (, 
machöe_mode
,

1327 , 
machöe_mode
);

1328 
subªg_ƒegs
 (
c⁄°_πx
);

1329 
subªg_ƒegs_wôh_ªgno
 (, 
c⁄°_πx
);

1330 
HOST_WIDE_INT
 
n⁄zîo_bôs
 (
c⁄°_πx
, 
machöe_mode
);

1331 
num_sign_bô_c›õs
 (
c⁄°_πx
, 
machöe_mode
);

1332 
boﬁ
 
c⁄°™t_poﬁ_c⁄°™t_p
 (
πx
);

1333 
boﬁ
 
åunˇãd_to_mode
 (
machöe_mode
, 
c⁄°_πx
);

1334 
low_bômask_Àn
 (
machöe_mode
, 
HOST_WIDE_INT
);

1335 
•lô_doubÀ
 (
πx
,Ñtx *,Ñtx *);

1336 
πx
 *
°rù_addªss_muèti⁄s
 (πx *, 
πx_code
 * = 0);

1337 
decompo£_addªss
 (
addªss_öfo
 *, 
πx
 *,

1338 
machöe_mode
, 
addr_•a˚_t
, 
πx_code
);

1339 
decompo£_Àa_addªss
 (
addªss_öfo
 *, 
πx
 *);

1340 
decompo£_mem_addªss
 (
addªss_öfo
 *, 
πx
);

1341 
upd©e_addªss
 (
addªss_öfo
 *);

1342 
HOST_WIDE_INT
 
gë_ödex_sˇÀ
 (c⁄° 
addªss_öfo
 *);

1343 
πx_code
 
gë_ödex_code
 (c⁄° 
addªss_öfo
 *);

1345 #i‚de‡
GENERATOR_FILE


1349 
ölöe
 

1350 
	$£t_πx_co°
 (
πx
 
x
, 
boﬁ
 
•ìd_p
)

1352  
	`πx_co°
 (
x
, 
INSN
, 4, 
•ìd_p
);

1353 
	}
}

1357 
ölöe
 

1358 
	$gë_fuŒ_£t_πx_co°
 (
πx
 
x
, 
fuŒ_πx_co°s
 *
c
)

1360 
	`gë_fuŒ_πx_co°
 (
x
, 
INSN
, 4, 
c
);

1361 
	}
}

1367 
ölöe
 

1368 
	$£t_§c_co°
 (
πx
 
x
, 
boﬁ
 
•ìd_p
)

1370  
	`πx_co°
 (
x
, 
SET
, 1, 
•ìd_p
);

1371 
	}
}

1375 
ölöe
 

1376 
	$gë_fuŒ_£t_§c_co°
 (
πx
 
x
, 
fuŒ_πx_co°s
 *
c
)

1378 
	`gë_fuŒ_πx_co°
 (
x
, 
SET
, 1, 
c
);

1379 
	}
}

1390 
	#SUBREG_PROMOTED_VAR_P
(
RTX
) \

1391 (
	`RTL_FLAG_CHECK1
 ("SUBREG_PROMOTED", (
RTX
), 
SUBREG
)->
ö_°ru˘
)

	)

1393 
	#SUBREG_PROMOTED_UNSIGNED_SET
(
RTX
, 
VAL
) \

1395 
πx
 c⁄° 
_πx
 = 
	`RTL_FLAG_CHECK1
 ("SUBREG_PROMOTED_UNSIGNED_SET", \

1396 (
RTX
), 
SUBREG
); \

1397 i‡((
VAL
) < 0) \

1398 
_πx
->
vﬁ©û
 = 1; \

1400 
_πx
->
vﬁ©û
 = 0; \

1401 
_πx
->
unch™gög
 = (
VAL
); \

1403 } 0)

	)

1413 
	#SUBREG_PROMOTED_UNSIGNED_P
(
RTX
) \

1414 ((
	`RTL_FLAG_CHECK1
 ("SUBREG_PROMOTED_UNSIGNED_P", (
RTX
), 
SUBREG
)->
vﬁ©û
) \

1415 ? -1 : (Ë(
RTX
)->
unch™gög
)

	)

1419 
	#LRA_SUBREG_P
(
RTX
) \

1420 (
	`RTL_FLAG_CHECK1
 ("LRA_SUBREG_P", (
RTX
), 
SUBREG
)->
jump
)

	)

1424 
	#ASM_OPERANDS_TEMPLATE
(
RTX
Ë
	`XCSTR
 (RTX, 0, 
ASM_OPERANDS
)

	)

1425 
	#ASM_OPERANDS_OUTPUT_CONSTRAINT
(
RTX
Ë
	`XCSTR
 (RTX, 1, 
ASM_OPERANDS
)

	)

1426 
	#ASM_OPERANDS_OUTPUT_IDX
(
RTX
Ë
	`XCINT
 (RTX, 2, 
ASM_OPERANDS
)

	)

1427 
	#ASM_OPERANDS_INPUT_VEC
(
RTX
Ë
	`XCVEC
 (RTX, 3, 
ASM_OPERANDS
)

	)

1428 
	#ASM_OPERANDS_INPUT_CONSTRAINT_VEC
(
RTX
Ë
	`XCVEC
 (RTX, 4, 
ASM_OPERANDS
)

	)

1429 
	#ASM_OPERANDS_INPUT
(
RTX
, 
N
Ë
	`XCVECEXP
 (RTX, 3, N, 
ASM_OPERANDS
)

	)

1430 
	#ASM_OPERANDS_INPUT_LENGTH
(
RTX
Ë
	`XCVECLEN
 (RTX, 3, 
ASM_OPERANDS
)

	)

1431 
	#ASM_OPERANDS_INPUT_CONSTRAINT_EXP
(
RTX
, 
N
) \

1432 
	`XCVECEXP
 (
RTX
, 4, 
N
, 
ASM_OPERANDS
)

	)

1433 
	#ASM_OPERANDS_INPUT_CONSTRAINT
(
RTX
, 
N
) \

1434 
	`XSTR
 (
	`XCVECEXP
 (
RTX
, 4, 
N
, 
ASM_OPERANDS
), 0)

	)

1435 
	#ASM_OPERANDS_INPUT_MODE
(
RTX
, 
N
) \

1436 
	`GET_MODE
 (
	`XCVECEXP
 (
RTX
, 4, 
N
, 
ASM_OPERANDS
))

	)

1437 
	#ASM_OPERANDS_LABEL_VEC
(
RTX
Ë
	`XCVEC
 (RTX, 5, 
ASM_OPERANDS
)

	)

1438 
	#ASM_OPERANDS_LABEL_LENGTH
(
RTX
Ë
	`XCVECLEN
 (RTX, 5, 
ASM_OPERANDS
)

	)

1439 
	#ASM_OPERANDS_LABEL
(
RTX
, 
N
Ë
	`XCVECEXP
 (RTX, 5, N, 
ASM_OPERANDS
)

	)

1440 
	#ASM_OPERANDS_SOURCE_LOCATION
(
RTX
Ë
	`XCUINT
 (RTX, 6, 
ASM_OPERANDS
)

	)

1441 
	#ASM_INPUT_SOURCE_LOCATION
(
RTX
Ë
	`XCUINT
 (RTX, 1, 
ASM_INPUT
)

	)

1444 
	#MEM_READONLY_P
(
RTX
) \

1445 (
	`RTL_FLAG_CHECK1
 ("MEM_READONLY_P", (
RTX
), 
MEM
)->
unch™gög
)

	)

1450 
	#MEM_KEEP_ALIAS_SET_P
(
RTX
) \

1451 (
	`RTL_FLAG_CHECK1
 ("MEM_KEEP_ALIAS_SET_P", (
RTX
), 
MEM
)->
jump
)

	)

1454 
	#MEM_VOLATILE_P
(
RTX
) \

1455 (
	`RTL_FLAG_CHECK3
 ("MEM_VOLATILE_P", (
RTX
), 
MEM
, 
ASM_OPERANDS
, \

1456 
ASM_INPUT
)->
vﬁ©û
)

	)

1459 
	#MEM_NOTRAP_P
(
RTX
) \

1460 (
	`RTL_FLAG_CHECK1
 ("MEM_NOTRAP_P", (
RTX
), 
MEM
)->
ˇŒ
)

	)

1464 
	#MEM_ATTRS
(
RTX
Ë
	`X0MEMATTR
 (RTX, 1)

	)

1468 
	#REG_ATTRS
(
RTX
Ë
	`X0REGATTR
 (RTX, 2)

	)

1470 #i‚de‡
GENERATOR_FILE


1477 
	#MEM_ALIAS_SET
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
Æüs
)

	)

1481 
	#MEM_EXPR
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
ex¥
)

	)

1484 
	#MEM_OFFSET_KNOWN_P
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
off£t_known_p
)

	)

1487 
	#MEM_OFFSET
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
off£t
)

	)

1490 
	#MEM_ADDR_SPACE
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
addr•a˚
)

	)

1493 
	#MEM_SIZE_KNOWN_P
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
size_known_p
)

	)

1496 
	#MEM_SIZE
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
size
)

	)

1500 
	#MEM_ALIGN
(
RTX
Ë(
	`gë_mem_©ås
 (RTX)->
Æign
)

	)

1502 
	#MEM_ADDR_SPACE
(
RTX
Ë
ADDR_SPACE_GENERIC


	)

1507 
	#REG_EXPR
(
RTX
Ë(
	`REG_ATTRS
 (RTXË=0 ? 0 : REG_ATTRS (RTX)->
de˛
)

	)

1511 
	#REG_OFFSET
(
RTX
Ë(
	`REG_ATTRS
 (RTXË=0 ? 0 : REG_ATTRS (RTX)->
off£t
)

	)

1514 
	#MEM_COPY_ATTRIBUTES
(
LHS
, 
RHS
) \

1515 (
	`MEM_VOLATILE_P
 (
LHS
ËMEM_VOLATILE_P (
RHS
), \

1516 
	`MEM_NOTRAP_P
 (
LHS
ËMEM_NOTRAP_P (
RHS
), \

1517 
	`MEM_READONLY_P
 (
LHS
ËMEM_READONLY_P (
RHS
), \

1518 
	`MEM_KEEP_ALIAS_SET_P
 (
LHS
ËMEM_KEEP_ALIAS_SET_P (
RHS
), \

1519 
	`MEM_POINTER
 (
LHS
ËMEM_POINTER (
RHS
), \

1520 
	`MEM_ATTRS
 (
LHS
ËMEM_ATTRS (
RHS
))

	)

1525 
	#LABEL_REF_NONLOCAL_P
(
RTX
) \

1526 (
	`RTL_FLAG_CHECK1
 ("LABEL_REF_NONLOCAL_P", (
RTX
), 
LABEL_REF
)->
vﬁ©û
)

	)

1529 
	#LABEL_PRESERVE_P
(
RTX
) \

1530 (
	`RTL_FLAG_CHECK2
 ("LABEL_PRESERVE_P", (
RTX
), 
CODE_LABEL
, 
NOTE
)->
ö_°ru˘
)

	)

1534 
	#SCHED_GROUP_P
(
RTX
) \

1535 (
	`RTL_FLAG_CHECK4
 ("SCHED_GROUP_P", (
RTX
), 
DEBUG_INSN
, 
INSN
, \

1536 
JUMP_INSN
, 
CALL_INSN
)->
ö_°ru˘
)

	)

1540 
	#SET_DEST
(
RTX
Ë
	`XC2EXP
 (RTX, 0, 
SET
, 
CLOBBER
)

	)

1541 
	#SET_SRC
(
RTX
Ë
	`XCEXP
 (RTX, 1, 
SET
)

	)

1542 
	#SET_IS_RETURN_P
(
RTX
) \

1543 (
	`RTL_FLAG_CHECK1
 ("SET_IS_RETURN_P", (
RTX
), 
SET
)->
jump
)

	)

1546 
	#TRAP_CONDITION
(
RTX
Ë
	`XCEXP
 (RTX, 0, 
TRAP_IF
)

	)

1547 
	#TRAP_CODE
(
RTX
Ë
	`XCEXP
 (RTX, 1, 
TRAP_IF
)

	)

1552 
	#COND_EXEC_TEST
(
RTX
Ë
	`XCEXP
 (RTX, 0, 
COND_EXEC
)

	)

1553 
	#COND_EXEC_CODE
(
RTX
Ë
	`XCEXP
 (RTX, 1, 
COND_EXEC
)

	)

1557 
	#CONSTANT_POOL_ADDRESS_P
(
RTX
) \

1558 (
	`RTL_FLAG_CHECK1
 ("CONSTANT_POOL_ADDRESS_P", (
RTX
), 
SYMBOL_REF
)->
unch™gög
)

	)

1562 
	#TREE_CONSTANT_POOL_ADDRESS_P
(
RTX
) \

1563 (
	`RTL_FLAG_CHECK1
 ("TREE_CONSTANT_POOL_ADDRESS_P", \

1564 (
RTX
), 
SYMBOL_REF
)->
‰ame_ªœãd
)

	)

1567 
	#SYMBOL_REF_FLAG
(
RTX
) \

1568 (
	`RTL_FLAG_CHECK1
 ("SYMBOL_REF_FLAG", (
RTX
), 
SYMBOL_REF
)->
vﬁ©û
)

	)

1572 
	#SYMBOL_REF_USED
(
RTX
) \

1573 (
	`RTL_FLAG_CHECK1
 ("SYMBOL_REF_USED", (
RTX
), 
SYMBOL_REF
)->
u£d
)

	)

1576 
	#SYMBOL_REF_WEAK
(
RTX
) \

1577 (
	`RTL_FLAG_CHECK1
 ("SYMBOL_REF_WEAK", (
RTX
), 
SYMBOL_REF
)->
ªtu∫_vÆ
)

	)

1581 
	#SYMBOL_REF_DATA
(
RTX
Ë
	`X0ANY
 ((RTX), 2)

	)

1585 
	#SET_SYMBOL_REF_DECL
(
RTX
, 
DECL
) \

1586 (
	`gcc_as£π
 (!
	`CONSTANT_POOL_ADDRESS_P
 (
RTX
)), 
	`X0TREE
 ((RTX), 2Ë(
DECL
))

	)

1589 
	#SYMBOL_REF_DECL
(
RTX
) \

1590 (
	`CONSTANT_POOL_ADDRESS_P
 (
RTX
Ë? 
NULL
 : 
	`X0TREE
 ((RTX), 2))

	)

1593 
	#SET_SYMBOL_REF_CONSTANT
(
RTX
, 
C
) \

1594 (
	`gcc_as£π
 (
	`CONSTANT_POOL_ADDRESS_P
 (
RTX
)), 
	`X0CONSTANT
 ((RTX), 2Ë(
C
))

	)

1597 
	#SYMBOL_REF_CONSTANT
(
RTX
) \

1598 (
	`CONSTANT_POOL_ADDRESS_P
 (
RTX
Ë? 
	`X0CONSTANT
 ((RTX), 2Ë: 
NULL
)

	)

1607 
	#SYMBOL_REF_FLAGS
(
RTX
Ë
	`X0INT
 ((RTX), 1)

	)

1613 
	#SYMBOL_FLAG_FUNCTION
 (1 << 0)

	)

1614 
	#SYMBOL_REF_FUNCTION_P
(
RTX
) \

1615 ((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë& 
SYMBOL_FLAG_FUNCTION
Ë!0)

	)

1617 
	#SYMBOL_FLAG_LOCAL
 (1 << 1)

	)

1618 
	#SYMBOL_REF_LOCAL_P
(
RTX
) \

1619 ((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë& 
SYMBOL_FLAG_LOCAL
Ë!0)

	)

1621 
	#SYMBOL_FLAG_SMALL
 (1 << 2)

	)

1622 
	#SYMBOL_REF_SMALL_P
(
RTX
) \

1623 ((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë& 
SYMBOL_FLAG_SMALL
Ë!0)

	)

1626 
	#SYMBOL_FLAG_TLS_SHIFT
 3

	)

1627 
	#SYMBOL_REF_TLS_MODEL
(
RTX
) \

1628 ((
és_modñ
Ë((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë>> 
SYMBOL_FLAG_TLS_SHIFT
Ë& 7))

	)

1630 
	#SYMBOL_FLAG_EXTERNAL
 (1 << 6)

	)

1631 
	#SYMBOL_REF_EXTERNAL_P
(
RTX
) \

1632 ((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë& 
SYMBOL_FLAG_EXTERNAL
Ë!0)

	)

1634 
	#SYMBOL_FLAG_HAS_BLOCK_INFO
 (1 << 7)

	)

1635 
	#SYMBOL_REF_HAS_BLOCK_INFO_P
(
RTX
) \

1636 ((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë& 
SYMBOL_FLAG_HAS_BLOCK_INFO
Ë!0)

	)

1639 
	#SYMBOL_FLAG_ANCHOR
 (1 << 8)

	)

1640 
	#SYMBOL_REF_ANCHOR_P
(
RTX
) \

1641 ((
	`SYMBOL_REF_FLAGS
 (
RTX
Ë& 
SYMBOL_FLAG_ANCHOR
Ë!0)

	)

1644 
	#SYMBOL_FLAG_MACH_DEP_SHIFT
 9

	)

1645 
	#SYMBOL_FLAG_MACH_DEP
 (1 << 
SYMBOL_FLAG_MACH_DEP_SHIFT
)

	)

1650 
	#SYMBOL_REF_BLOCK
(
RTX
Ë(
	`BLOCK_SYMBOL_CHECK
 (RTX)->
block
)

	)

1656 
	#SYMBOL_REF_BLOCK_OFFSET
(
RTX
Ë(
	`BLOCK_SYMBOL_CHECK
 (RTX)->
off£t
)

	)

1659 
	#PREFETCH_SCHEDULE_BARRIER_P
(
RTX
) \

1660 (
	`RTL_FLAG_CHECK1
 ("PREFETCH_SCHEDULE_BARRIER_P", (
RTX
), 
PREFETCH
)->
vﬁ©û
)

	)

1665 #i‡(
deföed
 (
HAVE_PRE_INCREMENT
Ë|| deföed (
HAVE_PRE_DECREMENT
) \

1666 || 
deföed
 (
HAVE_POST_INCREMENT
Ë|| deföed (
HAVE_POST_DECREMENT
) \

1667 || 
deföed
 (
HAVE_PRE_MODIFY_DISP
Ë|| deföed (
HAVE_POST_MODIFY_DISP
) \

1668 || 
deföed
 (
HAVE_PRE_MODIFY_REG
Ë|| 
	$deföed
 (
HAVE_POST_MODIFY_REG
))

1669 
	#AUTO_INC_DEC


	)

1675 #ifde‡
AUTO_INC_DEC


1676 
	#FIND_REG_INC_NOTE
(
INSN
, 
REG
) \

1677 ((
REG
Ë!
NULL_RTX
 && 
	`REG_P
 ((REG)) \

1678 ? 
	`föd_ªgno_nŸe
 ((
INSN
), 
REG_INC
, 
	`REGNO
 (
REG
)) \

1679 : 
	`föd_ªg_nŸe
 ((
INSN
), 
REG_INC
, (
REG
)))

	)

1681 
	#FIND_REG_INC_NOTE
(
INSN
, 
REG
Ë0

	)

1684 #i‚de‡
HAVE_PRE_INCREMENT


1685 
	#HAVE_PRE_INCREMENT
 0

	)

1688 #i‚de‡
HAVE_PRE_DECREMENT


1689 
	#HAVE_PRE_DECREMENT
 0

	)

1692 #i‚de‡
HAVE_POST_INCREMENT


1693 
	#HAVE_POST_INCREMENT
 0

	)

1696 #i‚de‡
HAVE_POST_DECREMENT


1697 
	#HAVE_POST_DECREMENT
 0

	)

1700 #i‚de‡
HAVE_POST_MODIFY_DISP


1701 
	#HAVE_POST_MODIFY_DISP
 0

	)

1704 #i‚de‡
HAVE_POST_MODIFY_REG


1705 
	#HAVE_POST_MODIFY_REG
 0

	)

1708 #i‚de‡
HAVE_PRE_MODIFY_DISP


1709 
	#HAVE_PRE_MODIFY_DISP
 0

	)

1712 #i‚de‡
HAVE_PRE_MODIFY_REG


1713 
	#HAVE_PRE_MODIFY_REG
 0

	)

1721 #i‚de‡
USE_LOAD_POST_INCREMENT


1722 
	#USE_LOAD_POST_INCREMENT
(
MODE
Ë
HAVE_POST_INCREMENT


	)

1725 #i‚de‡
USE_LOAD_POST_DECREMENT


1726 
	#USE_LOAD_POST_DECREMENT
(
MODE
Ë
HAVE_POST_DECREMENT


	)

1729 #i‚de‡
USE_LOAD_PRE_INCREMENT


1730 
	#USE_LOAD_PRE_INCREMENT
(
MODE
Ë
HAVE_PRE_INCREMENT


	)

1733 #i‚de‡
USE_LOAD_PRE_DECREMENT


1734 
	#USE_LOAD_PRE_DECREMENT
(
MODE
Ë
HAVE_PRE_DECREMENT


	)

1737 #i‚de‡
USE_STORE_POST_INCREMENT


1738 
	#USE_STORE_POST_INCREMENT
(
MODE
Ë
HAVE_POST_INCREMENT


	)

1741 #i‚de‡
USE_STORE_POST_DECREMENT


1742 
	#USE_STORE_POST_DECREMENT
(
MODE
Ë
HAVE_POST_DECREMENT


	)

1745 #i‚de‡
USE_STORE_PRE_INCREMENT


1746 
	#USE_STORE_PRE_INCREMENT
(
MODE
Ë
HAVE_PRE_INCREMENT


	)

1749 #i‚de‡
USE_STORE_PRE_DECREMENT


1750 
	#USE_STORE_PRE_DECREMENT
(
MODE
Ë
HAVE_PRE_DECREMENT


	)

1754 
gíî©ög_c⁄ˇt_p
;

1757 
cuºíéy_ex∑ndög_to_πl
;

1762 
HOST_WIDE_INT
 
	`åunc_öt_f‹_mode
 (HOST_WIDE_INT, 
machöe_mode
);

1763 
πx
 
	`∂us_c⁄°™t
 (
machöe_mode
,Ñtx, 
HOST_WIDE_INT
);

1766 
πx
 
	`πx_Æloc_°©
 (
RTX_CODE
 
MEM_STAT_DECL
);

1767 
	#πx_Æloc
(
c
Ë
	`πx_Æloc_°©
 (¯
MEM_STAT_INFO
)

	)

1769 
πvec
 
	`πvec_Æloc
 ();

1770 
πvec
 
	`shÆlow_c›y_πvec
 (rtvec);

1771 
boﬁ
 
	`sh¨ed_c⁄°_p
 (
c⁄°_πx
);

1772 
πx
 
	`c›y_πx
 (rtx);

1773 
	`dump_πx_°©i°ics
 ();

1776 
πx
 
	`c›y_πx_if_sh¨ed
 (rtx);

1779 
	`πx_size
 (
c⁄°_πx
);

1780 
πx
 
	`shÆlow_c›y_πx_°©
 (
c⁄°_πx
 
MEM_STAT_DECL
);

1781 
	#shÆlow_c›y_πx
(
a
Ë
	`shÆlow_c›y_πx_°©
 (®
MEM_STAT_INFO
)

	)

1782 
	`πx_equÆ_p
 (
c⁄°_πx
, const_rtx);

1783 
hashvÆ_t
 
	`ôî©ive_hash_πx
 (
c⁄°_πx
, hashval_t);

1786 
πvec
 
	`gí_πvec_v
 (, 
πx
 *);

1787 
πx
 
	`gí_ªg_πx
 (
machöe_mode
);

1788 
πx
 
	`gí_πx_REG_off£t
 (πx, 
machöe_mode
, , );

1789 
πx
 
	`gí_ªg_πx_off£t
 (πx, 
machöe_mode
, );

1790 
πx
 
	`gí_ªg_πx_™d_©ås
 (rtx);

1791 
πx
 
	`gí_œbñ_πx
 ();

1792 
πx
 
	`gí_low∑π_comm⁄
 (
machöe_mode
,Ñtx);

1795 
πx
 
	`gí_low∑π_if_possibÀ
 (
machöe_mode
,Ñtx);

1798 
πx
 
	`gí_high∑π
 (
machöe_mode
,Ñtx);

1799 
πx
 
	`gí_high∑π_mode
 (
machöe_mode
, machine_mode,Ñtx);

1800 
πx
 
	`›î™d_subw‹d
 (πx, , , 
machöe_mode
);

1803 
πx
 
	`›î™d_subw‹d_f‹˚
 (πx, , 
machöe_mode
);

1804 
boﬁ
 
	`∑ødoxiˇl_subªg_p
 (
c⁄°_πx
);

1805 
	`subªg_low∑π_p
 (
c⁄°_πx
);

1806 
	`subªg_low∑π_off£t
 (
machöe_mode
,

1807 
machöe_mode
);

1808 
	`subªg_high∑π_off£t
 (
machöe_mode
,

1809 
machöe_mode
);

1810 
	`byã_low∑π_off£t
 (
machöe_mode
, machine_mode);

1811 
πx
 
	`make_ß„_‰om
 (rtx,Ñtx);

1812 
πx
 
	`c⁄vît_mem‹y_addªss_addr_•a˚
 (
machöe_mode
,Ñtx,

1813 
addr_•a˚_t
);

1814 
	#c⁄vît_mem‹y_addªss
(
to_mode
,
x
) \

1815 
	`c⁄vît_mem‹y_addªss_addr_•a˚
 ((
to_mode
), (
x
), 
ADDR_SPACE_GENERIC
)

	)

1816 c⁄° *
	`gë_ö¢_«me
 ();

1817 
πx
 
	`gë_œ°_ö¢_™ywhîe
 ();

1818 
πx
 
	`gë_fú°_n⁄nŸe_ö¢
 ();

1819 
πx
 
	`gë_œ°_n⁄nŸe_ö¢
 ();

1820 
	`°¨t_£quí˚
 ();

1821 
	`push_to_£quí˚
 (
πx
);

1822 
	`push_to_£quí˚2
 (
πx
,Ñtx);

1823 
	`íd_£quí˚
 ();

1824 
doubÀ_öt
 
	`πx_to_doubÀ_öt
 (
c⁄°_πx
);

1825 
πx
 
	`immed_doubÀ_öt_c⁄°
 (
doubÀ_öt
, 
machöe_mode
);

1826 
πx
 
	`immed_doubÀ_c⁄°
 (
HOST_WIDE_INT
, HOST_WIDE_INT,

1827 
machöe_mode
);

1831 
πx
 
	`low∑π_subªg
 (
machöe_mode
,Ñtx, machine_mode);

1834 
πx
 
	`f‹˚_c⁄°_mem
 (
machöe_mode
,Ñtx);

1838 
fun˘i⁄
;

1839 
πx
 
	`gë_poﬁ_c⁄°™t
 (rtx);

1840 
πx
 
	`gë_poﬁ_c⁄°™t_m¨k
 (πx, 
boﬁ
 *);

1841 
machöe_mode
 
	`gë_poﬁ_mode
 (
c⁄°_πx
);

1842 
πx
 
	`sim∂ify_subåa˘i⁄
 (rtx);

1843 
	`decide_fun˘i⁄_£˘i⁄
 (
åì
);

1846 
πx
 
	`assign_°ack_loˇl
 (
machöe_mode
, 
HOST_WIDE_INT
, );

1847 
	#ASLK_REDUCE_ALIGN
 1

	)

1848 
	#ASLK_RECORD_PAD
 2

	)

1849 
πx
 
	`assign_°ack_loˇl_1
 (
machöe_mode
, 
HOST_WIDE_INT
, , );

1850 
πx
 
	`assign_°ack_ãmp
 (
machöe_mode
, 
HOST_WIDE_INT
);

1851 
πx
 
	`assign_°ack_ãmp_f‹_ty≥
 (
machöe_mode
, 
HOST_WIDE_INT
, 
åì
);

1852 
πx
 
	`assign_ãmp
 (
åì
, , );

1855 
πx
 
	`emô_ö¢_bef‹e
 (rtx,Ñtx);

1856 
πx
 
	`emô_ö¢_bef‹e_nﬁoc
 (πx,Ñtx, 
basic_block
);

1857 
πx
 
	`emô_ö¢_bef‹e_£éoc
 (rtx,Ñtx, );

1858 
πx
 
	`emô_jump_ö¢_bef‹e
 (rtx,Ñtx);

1859 
πx
 
	`emô_jump_ö¢_bef‹e_nﬁoc
 (rtx,Ñtx);

1860 
πx
 
	`emô_jump_ö¢_bef‹e_£éoc
 (rtx,Ñtx, );

1861 
πx
 
	`emô_ˇŒ_ö¢_bef‹e
 (rtx,Ñtx);

1862 
πx
 
	`emô_ˇŒ_ö¢_bef‹e_nﬁoc
 (rtx,Ñtx);

1863 
πx
 
	`emô_ˇŒ_ö¢_bef‹e_£éoc
 (rtx,Ñtx, );

1864 
πx
 
	`emô_debug_ö¢_bef‹e
 (rtx,Ñtx);

1865 
πx
 
	`emô_debug_ö¢_bef‹e_nﬁoc
 (rtx,Ñtx);

1866 
πx
 
	`emô_debug_ö¢_bef‹e_£éoc
 (rtx,Ñtx, );

1867 
πx
 
	`emô_b¨rõr_bef‹e
 (rtx);

1868 
πx
 
	`emô_œbñ_bef‹e
 (rtx,Ñtx);

1869 
πx
 
	`emô_nŸe_bef‹e
 (
ö¢_nŸe
,Ñtx);

1870 
πx
 
	`emô_ö¢_a·î
 (rtx,Ñtx);

1871 
πx
 
	`emô_ö¢_a·î_nﬁoc
 (πx,Ñtx, 
basic_block
);

1872 
πx
 
	`emô_ö¢_a·î_£éoc
 (rtx,Ñtx, );

1873 
πx
 
	`emô_jump_ö¢_a·î
 (rtx,Ñtx);

1874 
πx
 
	`emô_jump_ö¢_a·î_nﬁoc
 (rtx,Ñtx);

1875 
πx
 
	`emô_jump_ö¢_a·î_£éoc
 (rtx,Ñtx, );

1876 
πx
 
	`emô_ˇŒ_ö¢_a·î
 (rtx,Ñtx);

1877 
πx
 
	`emô_ˇŒ_ö¢_a·î_nﬁoc
 (rtx,Ñtx);

1878 
πx
 
	`emô_ˇŒ_ö¢_a·î_£éoc
 (rtx,Ñtx, );

1879 
πx
 
	`emô_debug_ö¢_a·î
 (rtx,Ñtx);

1880 
πx
 
	`emô_debug_ö¢_a·î_nﬁoc
 (rtx,Ñtx);

1881 
πx
 
	`emô_debug_ö¢_a·î_£éoc
 (rtx,Ñtx, );

1882 
πx
 
	`emô_b¨rõr_a·î
 (rtx);

1883 
πx
 
	`emô_œbñ_a·î
 (rtx,Ñtx);

1884 
πx
 
	`emô_nŸe_a·î
 (
ö¢_nŸe
,Ñtx);

1885 
πx
 
	`emô_ö¢
 (rtx);

1886 
πx
 
	`emô_debug_ö¢
 (rtx);

1887 
πx
 
	`emô_jump_ö¢
 (rtx);

1888 
πx
 
	`emô_ˇŒ_ö¢
 (rtx);

1889 
πx
 
	`emô_œbñ
 (rtx);

1890 
πx
 
	`emô_jump_èbÀ_d©a
 (rtx);

1891 
πx
 
	`emô_b¨rõr
 ();

1892 
πx
 
	`emô_nŸe
 (
ö¢_nŸe
);

1893 
πx
 
	`emô_nŸe_c›y
 (rtx);

1894 
πx
 
	`gí_˛obbî
 (rtx);

1895 
πx
 
	`emô_˛obbî
 (rtx);

1896 
πx
 
	`gí_u£
 (rtx);

1897 
πx
 
	`emô_u£
 (rtx);

1898 
πx
 
	`make_ö¢_øw
 (rtx);

1899 
	`add_fun˘i⁄_ußge_to
 (
πx
,Ñtx);

1900 
πx
 
	`œ°_ˇŒ_ö¢
 ();

1901 
πx
 
	`¥evious_ö¢
 (rtx);

1902 
πx
 
	`√xt_ö¢
 (rtx);

1903 
πx
 
	`¥ev_n⁄nŸe_ö¢
 (rtx);

1904 
πx
 
	`¥ev_n⁄nŸe_ö¢_bb
 (rtx);

1905 
πx
 
	`√xt_n⁄nŸe_ö¢
 (rtx);

1906 
πx
 
	`√xt_n⁄nŸe_ö¢_bb
 (rtx);

1907 
πx
 
	`¥ev_n⁄debug_ö¢
 (rtx);

1908 
πx
 
	`√xt_n⁄debug_ö¢
 (rtx);

1909 
πx
 
	`¥ev_n⁄nŸe_n⁄debug_ö¢
 (rtx);

1910 
πx
 
	`√xt_n⁄nŸe_n⁄debug_ö¢
 (rtx);

1911 
πx
 
	`¥ev_ªÆ_ö¢
 (rtx);

1912 
πx
 
	`√xt_ªÆ_ö¢
 (rtx);

1913 
πx
 
	`¥ev_a˘ive_ö¢
 (rtx);

1914 
πx
 
	`√xt_a˘ive_ö¢
 (rtx);

1915 
	`a˘ive_ö¢_p
 (
c⁄°_πx
);

1916 
πx
 
	`√xt_cc0_u£r
 (rtx);

1917 
πx
 
	`¥ev_cc0_£âî
 (rtx);

1920 
	`ö¢_löe
 (
c⁄°_πx
);

1921 c⁄° * 
	`ö¢_fûe
 (
c⁄°_πx
);

1922 
åì
 
	`ö¢_sc›e
 (
c⁄°_πx
);

1923 
loˇti⁄_t
 
¥ﬁogue_loˇti⁄
, 
ïûogue_loˇti⁄
;

1926 
πx_code
 
	`ªvî£_c⁄dôi⁄
 (rtx_code);

1927 
πx_code
 
	`ªvî£_c⁄dôi⁄_maybe_un‹dîed
 (rtx_code);

1928 
πx_code
 
	`sw≠_c⁄dôi⁄
 (rtx_code);

1929 
πx_code
 
	`unsig√d_c⁄dôi⁄
 (rtx_code);

1930 
πx_code
 
	`sig√d_c⁄dôi⁄
 (rtx_code);

1931 
	`m¨k_jump_œbñ
 (
πx
,Ñtx, );

1934 
πx
 
	`dñëe_ªœãd_ö¢s
 (rtx);

1937 
πx
 *
	`föd_c⁄°™t_ãrm_loc
 (rtx *);

1940 
πx
 
	`åy_•lô
 (rtx,Ñtx, );

1941 
•lô_bønch_¥obabûôy
;

1944 
πx
 
	`•lô_ö¢s
 (rtx,Ñtx);

1947 
πx
 
	`sim∂ify_c⁄°_u«ry_›î©i⁄
 (
πx_code
, 
machöe_mode
,

1948 
πx
, 
machöe_mode
);

1949 
πx
 
	`sim∂ify_u«ry_›î©i⁄
 (
πx_code
, 
machöe_mode
,Ñtx,

1950 
machöe_mode
);

1951 
πx
 
	`sim∂ify_c⁄°_bö¨y_›î©i⁄
 (
πx_code
, 
machöe_mode
,

1952 
πx
,Ñtx);

1953 
πx
 
	`sim∂ify_bö¨y_›î©i⁄
 (
πx_code
, 
machöe_mode
,Ñtx,

1954 
πx
);

1955 
πx
 
	`sim∂ify_ã∫¨y_›î©i⁄
 (
πx_code
, 
machöe_mode
,

1956 
machöe_mode
, 
πx
,Ñtx,Ñtx);

1957 
πx
 
	`sim∂ify_c⁄°_ªœti⁄Æ_›î©i⁄
 (
πx_code
,

1958 
machöe_mode
, 
πx
,Ñtx);

1959 
πx
 
	`sim∂ify_ªœti⁄Æ_›î©i⁄
 (
πx_code
, 
machöe_mode
,

1960 
machöe_mode
, 
πx
,Ñtx);

1961 
πx
 
	`sim∂ify_gí_bö¨y
 (
πx_code
, 
machöe_mode
,Ñtx,Ñtx);

1962 
πx
 
	`sim∂ify_gí_u«ry
 (
πx_code
, 
machöe_mode
,Ñtx,

1963 
machöe_mode
);

1964 
πx
 
	`sim∂ify_gí_ã∫¨y
 (
πx_code
, 
machöe_mode
,

1965 
machöe_mode
, 
πx
,Ñtx,Ñtx);

1966 
πx
 
	`sim∂ify_gí_ªœti⁄Æ
 (
πx_code
, 
machöe_mode
,

1967 
machöe_mode
, 
πx
,Ñtx);

1968 
πx
 
	`sim∂ify_subªg
 (
machöe_mode
,Ñtx, machine_mode,

1970 
πx
 
	`sim∂ify_gí_subªg
 (
machöe_mode
,Ñtx, machine_mode,

1972 
πx
 
	`sim∂ify_ª∂a˚_‚_πx
 (πx, 
c⁄°_πx
,

1973 
	$πx
 (*
‚
Ë(
πx
, 
c⁄°_πx
, *), *);

1974 
πx
 
	`sim∂ify_ª∂a˚_πx
 (πx, 
c⁄°_πx
,Ñtx);

1975 
πx
 
	`sim∂ify_πx
 (
c⁄°_πx
);

1976 
πx
 
	`avoid_c⁄°™t_poﬁ_ª„ªn˚
 (rtx);

1977 
πx
 
	`dñegôimize_mem_‰om_©ås
 (rtx);

1978 
boﬁ
 
	`mode_signbô_p
 (
machöe_mode
, 
c⁄°_πx
);

1979 
boﬁ
 
	`vÆ_signbô_p
 (
machöe_mode
, 
HOST_WIDE_INT
);

1980 
boﬁ
 
	`vÆ_signbô_known_£t_p
 (
machöe_mode
,

1981 
HOST_WIDE_INT
);

1982 
boﬁ
 
	`vÆ_signbô_known_˛ór_p
 (
machöe_mode
,

1983 
HOST_WIDE_INT
);

1986 
machöe_mode
 
	`choo£_h¨d_ªg_mode
 (, ,

1987 
boﬁ
);

1990 
πx
 
	`£t_unique_ªg_nŸe
 (πx, 
ªg_nŸe
,Ñtx);

1991 
πx
 
	`£t_d°_ªg_nŸe
 (πx, 
ªg_nŸe
,Ñtx,Ñtx);

1992 
	`£t_ö¢_dñëed
 (
πx
);

1997 
	#sögÀ_£t
(
I
Ë(
	`INSN_P
 (I) \

1998 ? (
	`GET_CODE
 (
	`PATTERN
 (
I
)Ë=
SET
 \

1999 ? 
	`PATTERN
 (
I
Ë: 
	`sögÀ_£t_1
 (I)) \

2000 : 
NULL_RTX
)

	)

2001 
	#sögÀ_£t_1
(
I
Ë
	`sögÀ_£t_2
 (I, 
	`PATTERN
 (I))

	)

2004 
	sª∂a˚_œbñ_d©a


2006 
πx
 
r1
;

2007 
πx
 
r2
;

2008 
boﬁ
 
upd©e_œbñ_nu£s
;

2011 
machöe_mode
 
	`gë_addªss_mode
 (
πx
 
mem
);

2012 
	`πx_addr_ˇn_å≠_p
 (
c⁄°_πx
);

2013 
boﬁ
 
	`n⁄zîo_addªss_p
 (
c⁄°_πx
);

2014 
	`πx_un°abÀ_p
 (
c⁄°_πx
);

2015 
boﬁ
 
	`πx_v¨õs_p
 (
c⁄°_πx
, bool);

2016 
boﬁ
 
	`πx_addr_v¨õs_p
 (
c⁄°_πx
, bool);

2017 
πx
 
	`gë_ˇŒ_πx_‰om
 (rtx);

2018 
HOST_WIDE_INT
 
	`gë_öãgî_ãrm
 (
c⁄°_πx
);

2019 
πx
 
	`gë_ªœãd_vÆue
 (
c⁄°_πx
);

2020 
boﬁ
 
	`off£t_wôhö_block_p
 (
c⁄°_πx
, 
HOST_WIDE_INT
);

2021 
	`•lô_c⁄°
 (
πx
,Ñtx *,Ñtx *);

2022 
boﬁ
 
	`unsig√d_ªg_p
 (
πx
);

2023 
	`ªg_míti⁄ed_p
 (
c⁄°_πx
, const_rtx);

2024 
	`cou¡_occuºí˚s
 (
c⁄°_πx
, const_rtx, );

2025 
	`ªg_ª„ªn˚d_p
 (
c⁄°_πx
, const_rtx);

2026 
	`ªg_u£d_bëwìn_p
 (
c⁄°_πx
, const_rtx, const_rtx);

2027 
	`ªg_£t_bëwìn_p
 (
c⁄°_πx
, const_rtx, const_rtx);

2028 
	`commuètive_›î™d_¥e˚dí˚
 (
πx
);

2029 
boﬁ
 
	`sw≠_commuètive_›î™ds_p
 (
πx
,Ñtx);

2030 
	`modifõd_bëwìn_p
 (
c⁄°_πx
, const_rtx, const_rtx);

2031 
	`no_œbñs_bëwìn_p
 (
c⁄°_πx
, const_rtx);

2032 
	`modifõd_ö_p
 (
c⁄°_πx
, const_rtx);

2033 
	`ªg_£t_p
 (
c⁄°_πx
, const_rtx);

2034 
πx
 
	`sögÀ_£t_2
 (
c⁄°_πx
, const_rtx);

2035 
	`mu…ùÀ_£ts
 (
c⁄°_πx
);

2036 
	`£t_no›_p
 (
c⁄°_πx
);

2037 
	`no›_move_p
 (
c⁄°_πx
);

2038 
πx
 
	`föd_œ°_vÆue
 (rtx,Ñtx *,Ñtx, );

2039 
	`ª„rs_to_ªgno_p
 (, , 
c⁄°_πx
, 
πx
 *);

2040 
	`ªg_ovîœp_míti⁄ed_p
 (
c⁄°_πx
, const_rtx);

2041 
c⁄°_πx
 
	`£t_of
 (const_rtx, const_rtx);

2042 
	`ªc‹d_h¨d_ªg_£ts
 (
πx
, 
c⁄°_πx
, *);

2043 
	`ªc‹d_h¨d_ªg_u£s
 (
πx
 *, *);

2044 #ifde‡
HARD_CONST


2045 
	`föd_Æl_h¨d_ªg_£ts
 (
c⁄°_πx
, 
HARD_REG_SET
 *);

2047 
	`nŸe_°‹es
 (
c⁄°_πx
, (*Ë(
πx
, const_rtx, *), *);

2048 
	`nŸe_u£s
 (
πx
 *, (*) (rtx *, *), *);

2049 
	`dód_‹_£t_p
 (
c⁄°_πx
, const_rtx);

2050 
	`dód_‹_£t_ªgno_p
 (
c⁄°_πx
, );

2051 
πx
 
	`föd_ªg_nŸe
 (
c⁄°_πx
, 
ªg_nŸe
, const_rtx);

2052 
πx
 
	`föd_ªgno_nŸe
 (
c⁄°_πx
, 
ªg_nŸe
, );

2053 
πx
 
	`föd_ªg_equÆ_equiv_nŸe
 (
c⁄°_πx
);

2054 
πx
 
	`föd_c⁄°™t_§c
 (
c⁄°_πx
);

2055 
	`föd_ªg_fußge
 (
c⁄°_πx
, 
πx_code
, const_rtx);

2056 
	`föd_ªgno_fußge
 (
c⁄°_πx
, 
πx_code
, );

2057 
πx
 
	`Æloc_ªg_nŸe
 (
ªg_nŸe
,Ñtx,Ñtx);

2058 
	`add_ªg_nŸe
 (
πx
, 
ªg_nŸe
,Ñtx);

2059 
	`add_öt_ªg_nŸe
 (
πx
, 
ªg_nŸe
, );

2060 
	`add_shÆlow_c›y_of_ªg_nŸe
 (
πx
,Ñtx);

2061 
	`ªmove_nŸe
 (
πx
, 
c⁄°_πx
);

2062 
	`ªmove_ªg_equÆ_equiv_nŸes
 (
πx
);

2063 
	`ªmove_ªg_equÆ_equiv_nŸes_f‹_ªgno
 ();

2064 
	`side_ef„˘s_p
 (
c⁄°_πx
);

2065 
	`vﬁ©ûe_ªfs_p
 (
c⁄°_πx
);

2066 
	`vﬁ©ûe_ö¢_p
 (
c⁄°_πx
);

2067 
	`may_å≠_p_1
 (
c⁄°_πx
, );

2068 
	`may_å≠_p
 (
c⁄°_πx
);

2069 
	`may_å≠_‹_Áu…_p
 (
c⁄°_πx
);

2070 
boﬁ
 
	`ˇn_throw_öã∫Æ
 (
c⁄°_πx
);

2071 
boﬁ
 
	`ˇn_throw_exã∫Æ
 (
c⁄°_πx
);

2072 
boﬁ
 
	`ö¢_could_throw_p
 (
c⁄°_πx
);

2073 
boﬁ
 
	`ö¢_nŸhrow_p
 (
c⁄°_πx
);

2074 
boﬁ
 
	`ˇn_n⁄loˇl_gŸo
 (
c⁄°_πx
);

2075 
	`c›y_ªg_eh_ªgi⁄_nŸe_f‹w¨d
 (
πx
,Ñtx,Ñtx);

2076 
	`c›y_ªg_eh_ªgi⁄_nŸe_backw¨d
 (
πx
,Ñtx,Ñtx);

2077 
	`öequÆôy_com∑ris⁄s_p
 (
c⁄°_πx
);

2078 
πx
 
	`ª∂a˚_πx
 (rtx,Ñtx,Ñtx);

2079 
	`ª∂a˚_œbñ
 (
πx
 *, *);

2080 
	`πx_ª„ªn˚d_p
 (
πx
,Ñtx);

2081 
boﬁ
 
	`èbÀjump_p
 (
c⁄°_πx
, 
πx
 *,Ñtx *);

2082 
	`compuãd_jump_p
 (
c⁄°_πx
);

2084 (*
	tπx_fun˘i⁄
Ë(
	tπx
 *, *);

2085 
	`f‹_óch_πx
 (
πx
 *, 
πx_fun˘i⁄
, *);

2094 (*
	tf‹_óch_öc_dec_‚
Ë(
	tπx
 
	tmem
,Ñtx 
	t›
,Ñtx 
	tde°
,Ñtx 
	t§c
,

2095 
	tπx
 
	t§coff
, *
	t¨g
);

2096 
	`f‹_óch_öc_dec
 (
πx
 *, 
f‹_óch_öc_dec_‚
, *
¨g
);

2098 (*
	tπx_equÆ_p_ˇŒback_fun˘i⁄
Ë(
	tc⁄°_πx
 *, const_rtx *,

2099 
	tπx
 *,Ñtx *);

2100 
	`πx_equÆ_p_cb
 (
c⁄°_πx
, const_rtx,

2101 
πx_equÆ_p_ˇŒback_fun˘i⁄
);

2103 (*
	thash_πx_ˇŒback_fun˘i⁄
Ë(
	tc⁄°_πx
, 
	tmachöe_mode
, 
	tπx
 *,

2104 
	tmachöe_mode
 *);

2105 
	`hash_πx_cb
 (
c⁄°_πx
, 
machöe_mode
, *, *,

2106 
boﬁ
, 
hash_πx_ˇŒback_fun˘i⁄
);

2108 
πx
 
	`ªgno_u£_ö
 (,Ñtx);

2109 
	`auto_öc_p
 (
c⁄°_πx
);

2110 
	`ö_ex¥_li°_p
 (
c⁄°_πx
, const_rtx);

2111 
	`ªmove_node_‰om_ex¥_li°
 (
c⁄°_πx
, 
πx
 *);

2112 
	`loc_míti⁄ed_ö_p
 (
πx
 *, 
c⁄°_πx
);

2113 
πx
 
	`föd_fú°_∑ømëî_lﬂd
 (rtx,Ñtx);

2114 
boﬁ
 
	`kìp_wôh_ˇŒ_p
 (
c⁄°_πx
);

2115 
boﬁ
 
	`œbñ_is_jump_èrgë_p
 (
c⁄°_πx
, const_rtx);

2116 
	`ö¢_πx_co°
 (
πx
, 
boﬁ
);

2120 
πx
 
	`ˇn⁄iˇlize_c⁄dôi⁄
 (rtx,Ñtx, ,Ñtx *,Ñtx, , );

2124 
πx
 
	`gë_c⁄dôi⁄
 (rtx,Ñtx *, , );

2127 
	ssubªg_öfo


2130 
off£t
;

2132 
ƒegs
;

2135 
boﬁ
 
ª¥e£¡abÀ_p
;

2138 
	`subªg_gë_öfo
 (, 
machöe_mode
,

2139 , 
machöe_mode
,

2140 
subªg_öfo
 *);

2144 
	`‰ì_EXPR_LIST_li°
 (
πx
 *);

2145 
	`‰ì_INSN_LIST_li°
 (
πx
 *);

2146 
	`‰ì_EXPR_LIST_node
 (
πx
);

2147 
	`‰ì_INSN_LIST_node
 (
πx
);

2148 
πx
 
	`Æloc_INSN_LIST
 (rtx,Ñtx);

2149 
πx
 
	`c›y_INSN_LIST
 (rtx);

2150 
πx
 
	`c⁄ˇt_INSN_LIST
 (rtx,Ñtx);

2151 
πx
 
	`Æloc_EXPR_LIST
 (,Ñtx,Ñtx);

2152 
	`ªmove_‰ì_INSN_LIST_ñem
 (
πx
,Ñtx *);

2153 
πx
 
	`ªmove_li°_ñem
 (rtx,Ñtx *);

2154 
πx
 
	`ªmove_‰ì_INSN_LIST_node
 (rtx *);

2155 
πx
 
	`ªmove_‰ì_EXPR_LIST_node
 (rtx *);

2161 
boﬁ
 
	`ªsize_ªg_öfo
 ();

2163 
	`‰ì_ªg_öfo
 ();

2164 
	`öô_subªgs_of_mode
 ();

2165 
	`föish_subªgs_of_mode
 ();

2168 
πx
 
	`exåa˘_asm_›î™ds
 (rtx);

2169 
	`asm_n›î™ds
 (
c⁄°_πx
);

2170 c⁄° *
	`decode_asm_›î™ds
 (
πx
,Ñtx *,Ñtx **, const **,

2171 
machöe_mode
 *, 
loˇti⁄_t
 *);

2172 
	`gë_ª„ªn˚d_›î™ds
 (c⁄° *, 
boﬁ
 *, );

2174 
ªg_˛ass
 
	`ªg_¥e„ºed_˛ass
 ();

2175 
ªg_˛ass
 
	`ªg_Æã∫©e_˛ass
 ();

2176 
ªg_˛ass
 
	`ªg_Ælo˙o_˛ass
 ();

2177 
	`£tup_ªg_˛as£s
 (, 
ªg_˛ass
, reg_class,

2178 
ªg_˛ass
);

2180 
	`•lô_Æl_ö¢s
 ();

2181 
	`•lô_Æl_ö¢s_noÊow
 ();

2183 
	#MAX_SAVED_CONST_INT
 64

	)

2184 
	`GTY
(()Ë
πx
 
c⁄°_öt_πx
[
MAX_SAVED_CONST_INT
 * 2 + 1];

2186 
	#c⁄°0_πx
 (
c⁄°_öt_πx
[
MAX_SAVED_CONST_INT
])

	)

2187 
	#c⁄°1_πx
 (
c⁄°_öt_πx
[
MAX_SAVED_CONST_INT
+1])

	)

2188 
	#c⁄°2_πx
 (
c⁄°_öt_πx
[
MAX_SAVED_CONST_INT
+2])

	)

2189 
	#c⁄°m1_πx
 (
c⁄°_öt_πx
[
MAX_SAVED_CONST_INT
-1])

	)

2190 
	`GTY
(()Ë
πx
 
c⁄°_åue_πx
;

2192 
	`GTY
(()Ë
πx
 
c⁄°_töy_πx
[4][(Ë
MAX_MACHINE_MODE
];

2197 
	#CONST0_RTX
(
MODE
Ë(
c⁄°_töy_πx
[0][(Ë(MODE)])

	)

2201 
	#CONST1_RTX
(
MODE
Ë(
c⁄°_töy_πx
[1][(Ë(MODE)])

	)

2202 
	#CONST2_RTX
(
MODE
Ë(
c⁄°_töy_πx
[2][(Ë(MODE)])

	)

2203 
	#CONSTM1_RTX
(
MODE
Ë(
c⁄°_töy_πx
[3][(Ë(MODE)])

	)

2205 
	`GTY
(()Ë
πx
 
pc_πx
;

2206 
	`GTY
(()Ë
πx
 
cc0_πx
;

2207 
	`GTY
(()Ë
πx
 
ªt_πx
;

2208 
	`GTY
(()Ë
πx
 
sim∂e_ªtu∫_πx
;

2216 #i‚de‡
HARD_FRAME_POINTER_REGNUM


2217 
	#HARD_FRAME_POINTER_REGNUM
 
FRAME_POINTER_REGNUM


	)

2220 #i‚de‡
HARD_FRAME_POINTER_IS_FRAME_POINTER


2221 
	#HARD_FRAME_POINTER_IS_FRAME_POINTER
 \

2222 (
HARD_FRAME_POINTER_REGNUM
 =
FRAME_POINTER_REGNUM
)

	)

2225 #i‚de‡
HARD_FRAME_POINTER_IS_ARG_POINTER


2226 
	#HARD_FRAME_POINTER_IS_ARG_POINTER
 \

2227 (
HARD_FRAME_POINTER_REGNUM
 =
ARG_POINTER_REGNUM
)

	)

2231 
	eglobÆ_πl_ödex


2233 
GR_STACK_POINTER
,

2234 
GR_FRAME_POINTER
,

2238 #i‡
FRAME_POINTER_REGNUM
 =
ARG_POINTER_REGNUM


2239 
GR_ARG_POINTER
 = 
GR_FRAME_POINTER
,

2241 #i‡
HARD_FRAME_POINTER_IS_FRAME_POINTER


2242 
GR_HARD_FRAME_POINTER
 = 
GR_FRAME_POINTER
,

2244 
GR_HARD_FRAME_POINTER
,

2246 #i‡
FRAME_POINTER_REGNUM
 !
ARG_POINTER_REGNUM


2247 #i‡
HARD_FRAME_POINTER_IS_ARG_POINTER


2248 
GR_ARG_POINTER
 = 
GR_HARD_FRAME_POINTER
,

2250 
GR_ARG_POINTER
,

2253 
GR_VIRTUAL_INCOMING_ARGS
,

2254 
GR_VIRTUAL_STACK_ARGS
,

2255 
GR_VIRTUAL_STACK_DYNAMIC
,

2256 
GR_VIRTUAL_OUTGOING_ARGS
,

2257 
GR_VIRTUAL_CFA
,

2258 
GR_VIRTUAL_PREFERRED_STACK_BOUNDARY
,

2260 
GR_MAX


2264 
	`GTY
(()Ë
èrgë_πl
 {

2280 
πx
 
x_globÆ_πl
[
GR_MAX
];

2283 
πx
 
x_pic_off£t_èbÀ_πx
;

2288 
πx
 
x_ªtu∫_addªss_poöãr_πx
;

2294 
πx
 
x_öôül_ªgno_ªg_πx
[
FIRST_PSEUDO_REGISTER
];

2297 
πx
 
x_t›_of_°ack
[
MAX_MACHINE_MODE
];

2301 
πx
 
x_°©ic_ªg_ba£_vÆue
[
FIRST_PSEUDO_REGISTER
];

2304 
mem_©ås
 *
x_mode_mem_©ås
[(Ë
MAX_MACHINE_MODE
];

2305 
	}
};

2307 
GTY
(()Ë
èrgë_πl
 
deÁu…_èrgë_πl
;

2308 #i‡
SWITCHABLE_TARGET


2309 
èrgë_πl
 *
this_èrgë_πl
;

2311 
	#this_èrgë_πl
 (&
deÁu…_èrgë_πl
)

	)

2314 
	#globÆ_πl
 \

2315 (
this_èrgë_πl
->
x_globÆ_πl
)

	)

2316 
	#pic_off£t_èbÀ_πx
 \

2317 (
this_èrgë_πl
->
x_pic_off£t_èbÀ_πx
)

	)

2318 
	#ªtu∫_addªss_poöãr_πx
 \

2319 (
this_èrgë_πl
->
x_ªtu∫_addªss_poöãr_πx
)

	)

2320 
	#t›_of_°ack
 \

2321 (
this_èrgë_πl
->
x_t›_of_°ack
)

	)

2322 
	#mode_mem_©ås
 \

2323 (
this_èrgë_πl
->
x_mode_mem_©ås
)

	)

2328 
	#°ack_poöãr_πx
 (
globÆ_πl
[
GR_STACK_POINTER
])

	)

2329 
	#‰ame_poöãr_πx
 (
globÆ_πl
[
GR_FRAME_POINTER
])

	)

2330 
	#h¨d_‰ame_poöãr_πx
 (
globÆ_πl
[
GR_HARD_FRAME_POINTER
])

	)

2331 
	#¨g_poöãr_πx
 (
globÆ_πl
[
GR_ARG_POINTER
])

	)

2333 #i‚de‡
GENERATOR_FILE


2335 
ölöe
 
mem_©ås
 *

2336 
	$gë_mem_©ås
 (
c⁄°_πx
 
x
)

2338 
mem_©ås
 *
©ås
;

2340 
©ås
 = 
	`MEM_ATTRS
 (
x
);

2341 i‡(!
©ås
)

2342 
©ås
 = 
mode_mem_©ås
[(Ë
	`GET_MODE
 (
x
)];

2343  
©ås
;

2344 
	}
}

2349 #i‚de‡
GENERATOR_FILE


2350 
	~"gíπl.h
"

2351 #unde‡
gí_πx_ASM_INPUT


2352 
	#gí_πx_ASM_INPUT
(
MODE
, 
ARG0
) \

2353 
	`gí_πx_fmt_si
 (
ASM_INPUT
, (
MODE
), (
ARG0
), 0)

	)

2354 
	#gí_πx_ASM_INPUT_loc
(
MODE
, 
ARG0
, 
LOC
) \

2355 
	`gí_πx_fmt_si
 (
ASM_INPUT
, (
MODE
), (
ARG0
), (
LOC
))

	)

2362 
πx
 
gí_πx_CONST_INT
 (
machöe_mode
, 
HOST_WIDE_INT
);

2363 
πx
 
gí_πx_CONST_VECTOR
 (
machöe_mode
, 
πvec
);

2364 
πx
 
gí_øw_REG
 (
machöe_mode
, );

2365 
πx
 
gí_πx_REG
 (
machöe_mode
, );

2366 
πx
 
gí_πx_SUBREG
 (
machöe_mode
,Ñtx, );

2367 
πx
 
gí_πx_MEM
 (
machöe_mode
,Ñtx);

2369 
	#GEN_INT
(
N
Ë
	`gí_πx_CONST_INT
 (
VOIDmode
, (N))

	)

2377 
	#FIRST_VIRTUAL_REGISTER
 (
FIRST_PSEUDO_REGISTER
)

	)

2383 
	#vútuÆ_öcomög_¨gs_πx
 (
globÆ_πl
[
GR_VIRTUAL_INCOMING_ARGS
])

	)

2385 
	#VIRTUAL_INCOMING_ARGS_REGNUM
 (
FIRST_VIRTUAL_REGISTER
)

	)

2391 
	#vútuÆ_°ack_v¨s_πx
 (
globÆ_πl
[
GR_VIRTUAL_STACK_ARGS
])

	)

2393 
	#VIRTUAL_STACK_VARS_REGNUM
 ((
FIRST_VIRTUAL_REGISTER
Ë+ 1)

	)

2399 
	#vútuÆ_°ack_dy«mic_πx
 (
globÆ_πl
[
GR_VIRTUAL_STACK_DYNAMIC
])

	)

2401 
	#VIRTUAL_STACK_DYNAMIC_REGNUM
 ((
FIRST_VIRTUAL_REGISTER
Ë+ 2)

	)

2407 
	#vútuÆ_outgoög_¨gs_πx
 (
globÆ_πl
[
GR_VIRTUAL_OUTGOING_ARGS
])

	)

2409 
	#VIRTUAL_OUTGOING_ARGS_REGNUM
 ((
FIRST_VIRTUAL_REGISTER
Ë+ 3)

	)

2417 
	#vútuÆ_cÁ_πx
 (
globÆ_πl
[
GR_VIRTUAL_CFA
])

	)

2419 
	#VIRTUAL_CFA_REGNUM
 ((
FIRST_VIRTUAL_REGISTER
Ë+ 4)

	)

2421 
	#LAST_VIRTUAL_POINTER_REGISTER
 ((
FIRST_VIRTUAL_REGISTER
Ë+ 4)

	)

2426 
	#vútuÆ_¥e„ºed_°ack_bound¨y_πx
 \

2427 (
globÆ_πl
[
GR_VIRTUAL_PREFERRED_STACK_BOUNDARY
])

	)

2429 
	#VIRTUAL_PREFERRED_STACK_BOUNDARY_REGNUM
 \

2430 ((
FIRST_VIRTUAL_REGISTER
Ë+ 5)

	)

2432 
	#LAST_VIRTUAL_REGISTER
 ((
FIRST_VIRTUAL_REGISTER
Ë+ 5)

	)

2435 
	#REGNO_PTR_FRAME_P
(
REGNUM
) \

2436 ((
REGNUM
Ë=
STACK_POINTER_REGNUM
 \

2437 || (
REGNUM
Ë=
FRAME_POINTER_REGNUM
 \

2438 || (
REGNUM
Ë=
HARD_FRAME_POINTER_REGNUM
 \

2439 || (
REGNUM
Ë=
ARG_POINTER_REGNUM
 \

2440 || ((
REGNUM
Ë>
FIRST_VIRTUAL_REGISTER
 \

2441 && (
REGNUM
Ë<
LAST_VIRTUAL_POINTER_REGISTER
))

	)

2444 
	#INVALID_REGNUM
 (~(Ë0)

	)

2447 
	#IGNORED_DWARF_REGNUM
 (
INVALID_REGNUM
 - 1)

	)

2449 
πx
 
ouçut_c⁄°™t_def
 (
åì
, );

2450 
πx
 
lookup_c⁄°™t_def
 (
åì
);

2455 
ªlﬂd_com∂ëed
;

2458 
ïûogue_com∂ëed
;

2463 
ªlﬂd_ö_¥ogªss
;

2466 
Ãa_ö_¥ogªss
;

2471 
	#ˇn_¸óã_p£udo_p
(Ë(!
ªlﬂd_ö_¥ogªss
 && !
ªlﬂd_com∂ëed
)

	)

2473 #ifde‡
STACK_REGS


2476 
ªg°ack_com∂ëed
;

2485 
c£_nŸ_ex≥˘ed
;

2491 
πx_to_åì_code
 (
πx_code
);

2494 
dñëe_åivüŒy_dód_ö¢s
 (
πx
, );

2495 
exp_equiv_p
 (
c⁄°_πx
, c⁄°_πx, , 
boﬁ
);

2496 
hash_πx
 (
c⁄°_πx
 
x
, 
machöe_mode
, *, *, 
boﬁ
);

2499 
boﬁ
 
check_f‹_öc_dec
 (
πx
 
ö¢
);

2502 
com∑ris⁄_domö©es_p
 (
πx_code
, rtx_code);

2503 
boﬁ
 
jump_to_œbñ_p
 (
πx
);

2504 
c⁄djump_p
 (
c⁄°_πx
);

2505 
™y_c⁄djump_p
 (
c⁄°_πx
);

2506 
™y_unc⁄djump_p
 (
c⁄°_πx
);

2507 
πx
 
pc_£t
 (
c⁄°_πx
);

2508 
πx
 
c⁄djump_œbñ
 (
c⁄°_πx
);

2509 
sim∂ejump_p
 (
c⁄°_πx
);

2510 
ªtu∫jump_p
 (
πx
);

2511 
eh_ªtu∫jump_p
 (
πx
);

2512 
⁄lyjump_p
 (
c⁄°_πx
);

2513 
⁄ly_£ts_cc0_p
 (
c⁄°_πx
);

2514 
£ts_cc0_p
 (
c⁄°_πx
);

2515 
övît_jump_1
 (
πx
,Ñtx);

2516 
övît_jump
 (
πx
,Ñtx, );

2517 
πx_ªnumbîed_equÆ_p
 (
c⁄°_πx
, const_rtx);

2518 
åue_ªgnum
 (
c⁄°_πx
);

2519 
ªg_‹_subªgno
 (
c⁄°_πx
);

2520 
ªdúe˘_jump_1
 (
πx
,Ñtx);

2521 
ªdúe˘_jump_2
 (
πx
,Ñtx,Ñtx, , );

2522 
ªdúe˘_jump
 (
πx
,Ñtx, );

2523 
ªbuûd_jump_œbñs
 (
πx
);

2524 
ªbuûd_jump_œbñs_chaö
 (
πx
);

2525 
πx
 
ªvî£d_com∑ris⁄
 (
c⁄°_πx
, 
machöe_mode
);

2526 
πx_code
 
ªvî£d_com∑ris⁄_code
 (
c⁄°_πx
, const_rtx);

2527 
πx_code
 
ªvî£d_com∑ris⁄_code_∑πs
 (πx_code, 
c⁄°_πx
,

2528 
c⁄°_πx
, const_rtx);

2529 
dñëe_f‹_≥ïhﬁe
 (
πx
,Ñtx);

2530 
c⁄djump_ö_∑øŒñ_p
 (
c⁄°_πx
);

2533 
max_ªg_num
 ();

2534 
max_œbñ_num
 ();

2535 
gë_fú°_œbñ_num
 ();

2536 
maybe_£t_fú°_œbñ_num
 (
πx
);

2537 
dñëe_ö¢s_sö˚
 (
πx
);

2538 
m¨k_ªg_poöãr
 (
πx
, );

2539 
m¨k_u£r_ªg
 (
πx
);

2540 
ª£t_u£d_Êags
 (
πx
);

2541 
£t_u£d_Êags
 (
πx
);

2542 
ª‹dî_ö¢s
 (
πx
,Ñtx,Ñtx);

2543 
ª‹dî_ö¢s_nobb
 (
πx
,Ñtx,Ñtx);

2544 
gë_max_ö¢_cou¡
 ();

2545 
ö_£quí˚_p
 ();

2546 
öô_emô
 ();

2547 
öô_emô_ªgs
 ();

2548 
öô_emô_⁄˚
 ();

2549 
push_t›mo°_£quí˚
 ();

2550 
p›_t›mo°_£quí˚
 ();

2551 
£t_√w_fú°_™d_œ°_ö¢
 (
πx
,Ñtx);

2552 
unsh¨e_Æl_πl
 ();

2553 
unsh¨e_Æl_πl_agaö
 (
πx
);

2554 
unsh¨e_Æl_πl_ö_chaö
 (
πx
);

2555 
vîify_πl_sh¨ög
 ();

2556 
add_ö¢
 (
πx
);

2557 
add_ö¢_bef‹e
 (
πx
,Ñtx, 
basic_block
);

2558 
add_ö¢_a·î
 (
πx
,Ñtx, 
basic_block
);

2559 
ªmove_ö¢
 (
πx
);

2560 
πx
 
emô
 (rtx);

2561 
dñëe_ö¢
 (
πx
);

2562 
πx
 
íåy_of_fun˘i⁄
 ();

2563 
emô_ö¢_©_íåy
 (
πx
);

2564 
dñëe_ö¢_chaö
 (
πx
,Ñtx, 
boﬁ
);

2565 
πx
 
u∆ök_ö¢_chaö
 (rtx,Ñtx);

2566 
dñëe_ö¢_™d_edges
 (
πx
);

2567 
πx
 
gí_low∑π_SUBREG
 (
machöe_mode
,Ñtx);

2568 
πx
 
gí_c⁄°_mem
 (
machöe_mode
,Ñtx);

2569 
πx
 
gí_‰ame_mem
 (
machöe_mode
,Ñtx);

2570 
πx
 
gí_tmp_°ack_mem
 (
machöe_mode
,Ñtx);

2571 
boﬁ
 
vÆid©e_subªg
 (
machöe_mode
, machine_mode,

2572 
c⁄°_πx
, );

2575 
exãnded_cou¡
 (
c⁄°_πx
, 
machöe_mode
, );

2576 
πx
 
ªmove_dóth
 (,Ñtx);

2577 
dump_comböe_°©s
 (
FILE
 *);

2578 
dump_comböe_tŸÆ_°©s
 (
FILE
 *);

2579 
πx
 
make_compound_›î©i⁄
 (πx, 
πx_code
);

2582 
dñëe_dód_jum±abÀs
 ();

2585 
scheduÀ_ö¢s
 ();

2588 
scheduÀ_ebbs
 ();

2591 
£l_sched_fix_∑øm
 (c⁄° *
∑øm
, c⁄° *
vÆ
);

2594 c⁄° *
¥öt_πx_hód
;

2595 
debug
 (c⁄° 
πx_def
 &
ªf
);

2596 
debug
 (c⁄° 
πx_def
 *
±r
);

2597 
debug_πx
 (
c⁄°_πx
);

2598 
debug_πx_li°
 (
c⁄°_πx
, );

2599 
debug_πx_ønge
 (
c⁄°_πx
, const_rtx);

2600 
c⁄°_πx
 
debug_πx_föd
 (const_rtx, );

2601 
¥öt_mem_ex¥
 (
FILE
 *, 
c⁄°_åì
);

2602 
¥öt_πl
 (
FILE
 *, 
c⁄°_πx
);

2603 
¥öt_sim∂e_πl
 (
FILE
 *, 
c⁄°_πx
);

2604 
¥öt_πl_sögÀ
 (
FILE
 *, 
c⁄°_πx
);

2605 
¥öt_πl_sögÀ_wôh_ödít
 (
FILE
 *, 
c⁄°_πx
, );

2606 
¥öt_ölöe_πx
 (
FILE
 *, 
c⁄°_πx
, );

2611 
dump_vÆue_¶im
 (
FILE
 *, 
c⁄°_πx
, );

2612 
dump_ö¢_¶im
 (
FILE
 *, 
c⁄°_πx
);

2613 
dump_πl_¶im
 (
FILE
 *, 
c⁄°_πx
, const_rtx, , );

2614 
¥öt_vÆue
 (
¥ëty_¥öãr
 *, 
c⁄°_πx
, );

2615 
¥öt_∑âîn
 (
¥ëty_¥öãr
 *, 
c⁄°_πx
, );

2616 
¥öt_ö¢
 (
¥ëty_¥öãr
 *, 
c⁄°_πx
, );

2617 
πl_dump_bb_f‹_gøph
 (
¥ëty_¥öãr
 *, 
basic_block
);

2618 c⁄° *
°r_∑âîn_¶im
 (
c⁄°_πx
);

2621 
ªposôi⁄_¥ﬁogue_™d_ïûogue_nŸes
 ();

2622 
¥ﬁogue_ïûogue_c⁄èös
 (
c⁄°_πx
);

2623 
sibˇŒ_ïûogue_c⁄èös
 (
c⁄°_πx
);

2624 
upd©e_ãmp_¶Ÿ_addªss
 (
πx
,Ñtx);

2625 
maybe_c›y_¥ﬁogue_ïûogue_ö¢
 (
πx
,Ñtx);

2626 
£t_ªtu∫_jump_œbñ
 (
πx
);

2629 
ex∑nd_nuŒ_ªtu∫
 ();

2630 
ex∑nd_«ked_ªtu∫
 ();

2631 
emô_jump
 (
πx
);

2634 
πx
 
move_by_põ˚s
 (πx,Ñtx, 
HOST_WIDE_INT
,

2636 
HOST_WIDE_INT
 
föd_¨gs_size_adju°
 (
πx
);

2637 
fixup_¨gs_size_nŸes
 (
πx
,Ñtx, );

2640 
¥öt_πl_wôh_bb
 (
FILE
 *, 
c⁄°_πx
, );

2641 
πx
 
du∂iˇã_ö¢_chaö
 (rtx,Ñtx);

2644 
öô_expmed
 ();

2645 
ex∑nd_öc
 (
πx
,Ñtx);

2646 
ex∑nd_dec
 (
πx
,Ñtx);

2649 
öô_lowî_subªg
 ();

2652 
boﬁ
 
ˇn_c›y_p
 (
machöe_mode
);

2653 
boﬁ
 
ˇn_assign_to_ªg_wôhout_˛obbîs_p
 (
πx
);

2654 
πx
 
fis_gë_c⁄dôi⁄
 (rtx);

2657 #ifde‡
HARD_CONST


2658 
HARD_REG_SET
 
ñimöabÀ_ªg£t
;

2660 
m¨k_ñimö©i⁄
 (, );

2663 
ªg_˛as£s_öãr£˘_p
 (
ªg_˛ass_t
,Ñeg_class_t);

2664 
ªg_˛ass_sub£t_p
 (
ªg_˛ass_t
,Ñeg_class_t);

2665 
globÆize_ªg
 (
åì
, );

2666 
öô_ªg_modes_èrgë
 ();

2667 
öô_ªgs
 ();

2668 
ªöô_ªgs
 ();

2669 
öô_Áke_°ack_mems
 ();

2670 
ßve_ªgi°î_öfo
 ();

2671 
öô_ªg_£ts
 ();

2672 
ªg˛ass
 (
πx
, );

2673 
ªg_sˇn
 (
πx
, );

2674 
fix_ªgi°î
 (const *, , );

2675 
boﬁ
 
övÆid_mode_ch™ge_p
 (, 
ªg_˛ass
);

2678 
fun˘i⁄_öv¨ü¡_p
 (
c⁄°_πx
);

2681 
	elibˇŒ_ty≥


2683 
	mLCT_NORMAL
 = 0,

2684 
	mLCT_CONST
 = 1,

2685 
	mLCT_PURE
 = 2,

2686 
	mLCT_NORETURN
 = 3,

2687 
	mLCT_THROW
 = 4,

2688 
	mLCT_RETURNS_TWICE
 = 5

2691 
emô_libøry_ˇŒ
 (
πx
, 
libˇŒ_ty≥
, 
machöe_mode
, ,

2693 
πx
 
emô_libøry_ˇŒ_vÆue
 (πx,Ñtx, 
libˇŒ_ty≥
,

2694 
machöe_mode
, , ...);

2697 
öô_v¨asm_⁄˚
 ();

2699 
πx
 
make_debug_ex¥_‰om_πl
 (
c⁄°_πx
);

2702 
boﬁ
 
ªad_πx
 (c⁄° *, 
πx
 *);

2705 
πx
 
ˇn⁄_πx
 (rtx);

2706 
åue_dïídí˚
 (
c⁄°_πx
, 
machöe_mode
, const_rtx);

2707 
πx
 
gë_addr
 (rtx);

2708 
ˇn⁄_åue_dïídí˚
 (
c⁄°_πx
, 
machöe_mode
, 
πx
,

2709 
c⁄°_πx
, 
πx
);

2710 
ªad_dïídí˚
 (
c⁄°_πx
, const_rtx);

2711 
™ti_dïídí˚
 (
c⁄°_πx
, const_rtx);

2712 
ˇn⁄_™ti_dïídí˚
 (
c⁄°_πx
, 
boﬁ
,

2713 
c⁄°_πx
, 
machöe_mode
, 
πx
);

2714 
ouçut_dïídí˚
 (
c⁄°_πx
, const_rtx);

2715 
may_Æüs_p
 (
c⁄°_πx
, const_rtx);

2716 
öô_Æüs_èrgë
 ();

2717 
öô_Æüs_™Æysis
 ();

2718 
íd_Æüs_™Æysis
 ();

2719 
vt_equ©e_ªg_ba£_vÆue
 (
c⁄°_πx
, const_rtx);

2720 
boﬁ
 
mem‹y_modifõd_ö_ö¢_p
 (
c⁄°_πx
, const_rtx);

2721 
boﬁ
 
mem‹y_mu°_be_modifõd_ö_ö¢_p
 (
c⁄°_πx
, const_rtx);

2722 
boﬁ
 
may_be_•_ba£d_p
 (
πx
);

2723 
πx
 
gí_h¨d_ªg_˛obbî
 (
machöe_mode
, );

2724 
πx
 
gë_ªg_known_vÆue
 ();

2725 
boﬁ
 
gë_ªg_known_equiv_p
 ();

2726 
πx
 
gë_ªg_ba£_vÆue
 ();

2728 #ifde‡
STACK_REGS


2729 
°ack_ªgs_míti⁄ed
 (
c⁄°_πx
 
ö¢
);

2733 
GTY
(()Ë
πx
 
°ack_limô_πx
;

2736 
övît_br_¥obabûôõs
 (
πx
);

2737 
boﬁ
 
ex≥nsive_fun˘i⁄_p
 ();

2740 
v¨übÀ_åackög_maö
 ();

2743 
gë_mode_bounds
 (
machöe_mode
, , machine_mode,

2744 
πx
 *,Ñtx *);

2747 
πx
 
ªvî£d_c⁄dôi⁄
 (rtx);

2748 
πx
 
com∑ª_™d_jump_£q
 (πx,Ñtx, 
πx_code
,Ñtx, ,Ñtx);

2751 
πx
 
ˇn⁄_c⁄dôi⁄
 (rtx);

2752 
sim∂ify_usög_c⁄dôi⁄
 (
πx
,Ñtx *, 
bôm≠
);

2755 
compuã_Æignmíts
 ();

2756 
upd©e_Æignmíts
 (
vec
<
πx
> &);

2757 
asm_°r_cou¡
 (c⁄° *
ãm∂
);

2759 
	sπl_hooks


2761 
πx
 (*
gí_low∑π
Ë(
	mmachöe_mode
, 
	mπx
);

2762 
πx
 (*
gí_low∑π_no_emô
Ë(
	mmachöe_mode
, 
	mπx
);

2763 
πx
 (*
ªg_n⁄zîo_bôs
Ë(
	mc⁄°_πx
, 
	mmachöe_mode
, const_rtx, machine_mode,

2764 
	mHOST_WIDE_INT
, HOST_WIDE_INT *);

2765 
πx
 (*
ªg_num_sign_bô_c›õs
Ë(
	mc⁄°_πx
, 
	mmachöe_mode
, const_rtx, machine_mode,

2767 
boﬁ
 (*
ªg_åunˇãd_to_mode
Ë(
	mmachöe_mode
, 
	mc⁄°_πx
);

2773 
πl_hooks
Ñtl_hooks;

2776 c⁄° 
πl_hooks
 
gíîÆ_πl_hooks
;

2779 
	#gí_low∑π
 
πl_hooks
.
gí_low∑π


	)

2781 
ö¢_loˇti⁄s_öô
 ();

2782 
ö¢_loˇti⁄s_föÆize
 ();

2783 
£t_cuº_ö¢_loˇti⁄
 (
loˇti⁄_t
);

2784 
loˇti⁄_t
 
cuº_ö¢_loˇti⁄
 ();

2785 
boﬁ
 
›timize_ö¢_f‹_size_p
 ();

2786 
boﬁ
 
›timize_ö¢_f‹_•ìd_p
 ();

2789 
	$_Áèl_ö¢_nŸ_found
 (
c⁄°_πx
, const *, , const *)

2790 
ATTRIBUTE_NORETURN
;

2791 
	$_Áèl_ö¢
 (c⁄° *, 
c⁄°_πx
, const *, , const *)

2792 
ATTRIBUTE_NORETURN
;

2794 
	#Áèl_ö¢
(
msgid
, 
ö¢
) \

2795 
	`_Áèl_ö¢
 (
msgid
, 
ö¢
, 
__FILE__
, 
__LINE__
, 
__FUNCTION__
)

	)

2796 
	#Áèl_ö¢_nŸ_found
(
ö¢
) \

2797 
	`_Áèl_ö¢_nŸ_found
 (
ö¢
, 
__FILE__
, 
__LINE__
, 
__FUNCTION__
)

	)

2800 
åì
 
	`GTY
(()Ë
globÆ_ªgs_de˛
[
FIRST_PSEUDO_REGISTER
];

	@include/safe-ctype.h

35 #i‚de‡
SAFE_CTYPE_H


36 
	#SAFE_CTYPE_H


	)

39 
	#HOST_CHARSET_UNKNOWN
 0

	)

40 
	#HOST_CHARSET_ASCII
 1

	)

41 
	#HOST_CHARSET_EBCDIC
 2

	)

45 
	#HOST_CHARSET
 
HOST_CHARSET_ASCII


	)

49 
	#HOST_CHARSET
 
HOST_CHARSET_EBCDIC


	)

51 
	#HOST_CHARSET
 
HOST_CHARSET_UNKNOWN


	)

59 
_sch_isbœnk
 = 0x0001,

60 
	m_sch_is˙ål
 = 0x0002,

61 
	m_sch_isdigô
 = 0x0004,

62 
	m_sch_i¶owî
 = 0x0008,

63 
	m_sch_i•röt
 = 0x0010,

64 
	m_sch_i•un˘
 = 0x0020,

65 
	m_sch_is•a˚
 = 0x0040,

66 
	m_sch_isuµî
 = 0x0080,

67 
	m_sch_isxdigô
 = 0x0100,

70 
	m_sch_isid°
 = 0x0200,

71 
	m_sch_isv•
 = 0x0400,

72 
	m_sch_i¢v•
 = 0x0800,

75 
	m_sch_ißÕha
 = 
_sch_isuµî
|
_sch_i¶owî
,

76 
	m_sch_iß um
 = 
_sch_ißÕha
|
_sch_isdigô
,

77 
	m_sch_isidnum
 = 
_sch_isid°
|
_sch_isdigô
,

78 
	m_sch_isgøph
 = 
_sch_iß um
|
_sch_i•un˘
,

79 
	m_sch_is˝p•
 = 
_sch_isv•
|
_sch_i¢v•
,

80 
	m_sch_isbasic
 = 
_sch_i•röt
|
_sch_is˝p•


85 c⁄° 
_sch_i°abÀ
[256];

87 
	#_sch_ã°
(
c
, 
bô
Ë(
_sch_i°abÀ
[(cË& 0xff] & ()(bô))

	)

89 
	#ISALPHA
(
c
Ë
	`_sch_ã°
(c, 
_sch_ißÕha
)

	)

90 
	#ISALNUM
(
c
Ë
	`_sch_ã°
(c, 
_sch_iß um
)

	)

91 
	#ISBLANK
(
c
Ë
	`_sch_ã°
(c, 
_sch_isbœnk
)

	)

92 
	#ISCNTRL
(
c
Ë
	`_sch_ã°
(c, 
_sch_is˙ål
)

	)

93 
	#ISDIGIT
(
c
Ë
	`_sch_ã°
(c, 
_sch_isdigô
)

	)

94 
	#ISGRAPH
(
c
Ë
	`_sch_ã°
(c, 
_sch_isgøph
)

	)

95 
	#ISLOWER
(
c
Ë
	`_sch_ã°
(c, 
_sch_i¶owî
)

	)

96 
	#ISPRINT
(
c
Ë
	`_sch_ã°
(c, 
_sch_i•röt
)

	)

97 
	#ISPUNCT
(
c
Ë
	`_sch_ã°
(c, 
_sch_i•un˘
)

	)

98 
	#ISSPACE
(
c
Ë
	`_sch_ã°
(c, 
_sch_is•a˚
)

	)

99 
	#ISUPPER
(
c
Ë
	`_sch_ã°
(c, 
_sch_isuµî
)

	)

100 
	#ISXDIGIT
(
c
Ë
	`_sch_ã°
(c, 
_sch_isxdigô
)

	)

102 
	#ISIDNUM
(
c
Ë
	`_sch_ã°
(c, 
_sch_isidnum
)

	)

103 
	#ISIDST
(
c
Ë
	`_sch_ã°
(c, 
_sch_isid°
)

	)

104 
	#IS_ISOBASIC
(
c
Ë
	`_sch_ã°
(c, 
_sch_isbasic
)

	)

105 
	#IS_VSPACE
(
c
Ë
	`_sch_ã°
(c, 
_sch_isv•
)

	)

106 
	#IS_NVSPACE
(
c
Ë
	`_sch_ã°
(c, 
_sch_i¢v•
)

	)

107 
	#IS_SPACE_OR_NUL
(
c
Ë
	`_sch_ã°
(c, 
_sch_is˝p•
)

	)

110 c⁄° 
_sch_touµî
[256];

111 c⁄° 
_sch_tﬁowî
[256];

112 
	#TOUPPER
(
c
Ë
_sch_touµî
[(cË& 0xff]

	)

113 
	#TOLOWER
(
c
Ë
_sch_tﬁowî
[(cË& 0xff]

	)

122 
	~<˘y≥.h
>

123 #unde‡
ißÕha


124 
	#ißÕha
(
c
Ë
do_nŸ_u£_ißÕha_wôh_ß„_˘y≥


	)

125 #unde‡
iß um


126 
	#iß um
(
c
Ë
do_nŸ_u£_iß um_wôh_ß„_˘y≥


	)

127 #unde‡
is˙ål


128 
	#is˙ål
(
c
Ë
do_nŸ_u£_is˙ål_wôh_ß„_˘y≥


	)

129 #unde‡
isdigô


130 
	#isdigô
(
c
Ë
do_nŸ_u£_isdigô_wôh_ß„_˘y≥


	)

131 #unde‡
isgøph


132 
	#isgøph
(
c
Ë
do_nŸ_u£_isgøph_wôh_ß„_˘y≥


	)

133 #unde‡
i¶owî


134 
	#i¶owî
(
c
Ë
do_nŸ_u£_i¶owî_wôh_ß„_˘y≥


	)

135 #unde‡
i•röt


136 
	#i•röt
(
c
Ë
do_nŸ_u£_i•röt_wôh_ß„_˘y≥


	)

137 #unde‡
i•un˘


138 
	#i•un˘
(
c
Ë
do_nŸ_u£_i•un˘_wôh_ß„_˘y≥


	)

139 #unde‡
is•a˚


140 
	#is•a˚
(
c
Ë
do_nŸ_u£_is•a˚_wôh_ß„_˘y≥


	)

141 #unde‡
isuµî


142 
	#isuµî
(
c
Ë
do_nŸ_u£_isuµî_wôh_ß„_˘y≥


	)

143 #unde‡
isxdigô


144 
	#isxdigô
(
c
Ë
do_nŸ_u£_isxdigô_wôh_ß„_˘y≥


	)

145 #unde‡
touµî


146 
	#touµî
(
c
Ë
do_nŸ_u£_touµî_wôh_ß„_˘y≥


	)

147 #unde‡
tﬁowî


148 
	#tﬁowî
(
c
Ë
do_nŸ_u£_tﬁowî_wôh_ß„_˘y≥


	)

	@include/sbitmap.h

20 #i‚de‡
GCC_SBITMAP_H


21 
	#GCC_SBITMAP_H


	)

82 
	#SBITMAP_ELT_BITS
 (
HOST_BITS_PER_WIDEST_FAST_INT
 * 1u)

	)

83 
	#SBITMAP_ELT_TYPE
 
HOST_WIDEST_FAST_INT


	)

85 
	ssim∂e_bôm≠_def


87 *
	mp›cou¡
;

88 
	mn_bôs
;

89 
	msize
;

90 
SBITMAP_ELT_TYPE
 
	mñms
[1];

94 
	#SBITMAP_SET_SIZE
(
N
Ë(((NË+ 
SBITMAP_ELT_BITS
 - 1Ë/ SBITMAP_ELT_BITS)

	)

97 
	#SBITMAP_SIZE
(
BITMAP
Ë((BITMAP)->
n_bôs
)

	)

100 
ölöe
 
SBITMAP_ELT_TYPE


101 
	$bôm≠_bô_p
 (
c⁄°_sbôm≠
 
m≠
, 
bôno
)

103 
size_t
 
i
 = 
bôno
 / 
SBITMAP_ELT_BITS
;

104 
s
 = 
bôno
 % 
SBITMAP_ELT_BITS
;

105  (
m≠
->
ñms
[
i
] >> 
s
Ë& (
SBITMAP_ELT_TYPE
) 1;

106 
	}
}

110 
ölöe
 

111 
	$bôm≠_£t_bô
 (
sbôm≠
 
m≠
, 
bôno
)

113 
	`gcc_checkög_as£π
 (! 
m≠
->
p›cou¡
);

114 
m≠
->
ñms
[
bôno
 / 
SBITMAP_ELT_BITS
]

115 |(
SBITMAP_ELT_TYPE
Ë1 << (
bôno
Ë% 
SBITMAP_ELT_BITS
;

116 
	}
}

120 
ölöe
 

121 
	$bôm≠_˛ór_bô
 (
sbôm≠
 
m≠
, 
bôno
)

123 
	`gcc_checkög_as£π
 (! 
m≠
->
p›cou¡
);

124 
m≠
->
ñms
[
bôno
 / 
SBITMAP_ELT_BITS
]

125 &~((
SBITMAP_ELT_TYPE
Ë1 << (
bôno
Ë% 
SBITMAP_ELT_BITS
);

126 
	}
}

129 
	ssbôm≠_ôî©‹
 {

131 c⁄° 
SBITMAP_ELT_TYPE
 *
	m±r
;

134 
	msize
;

137 
	mw‹d_num
;

140 
	mbô_num
;

143 
SBITMAP_ELT_TYPE
 
	mw‹d
;

149 
ölöe
 

150 
	$bmp_ôî_£t_öô
 (
sbôm≠_ôî©‹
 *
i
, 
c⁄°_sbôm≠
 
bmp
,

151 
mö
, *
bô_no
 
ATTRIBUTE_UNUSED
)

153 
i
->
w‹d_num
 = 
mö
 / (Ë
SBITMAP_ELT_BITS
;

154 
i
->
bô_num
 = 
mö
;

155 
i
->
size
 = 
bmp
->size;

156 
i
->
±r
 = 
bmp
->
ñms
;

158 i‡(
i
->
w‹d_num
 >i->
size
)

159 
i
->
w‹d
 = 0;

161 
i
->
w‹d
 = (i->
±r
[i->
w‹d_num
]

162 >> (
i
->
bô_num
 % (Ë
SBITMAP_ELT_BITS
));

163 
	}
}

169 
ölöe
 
boﬁ


170 
	$bmp_ôî_£t
 (
sbôm≠_ôî©‹
 *
i
, *
n
)

173 ; 
i
->
w‹d
 =0; i->w‹d = i->
±r
[i->
w‹d_num
])

175 
i
->
w‹d_num
++;

178 i‡(
i
->
w‹d_num
 >i->
size
)

179  
Ál£
;

181 
i
->
bô_num
 = i->
w‹d_num
 * 
SBITMAP_ELT_BITS
;

185 ; (
i
->
w‹d
 & 1) == 0; i->word >>= 1)

186 
i
->
bô_num
++;

188 *
n
 = 
i
->
bô_num
;

190  
åue
;

191 
	}
}

195 
ölöe
 

196 
	$bmp_ôî_√xt
 (
sbôm≠_ôî©‹
 *
i
, *
bô_no
 
ATTRIBUTE_UNUSED
)

198 
i
->
w‹d
 >>= 1;

199 
i
->
bô_num
++;

200 
	}
}

206 #i‚de‡
EXECUTE_IF_SET_IN_BITMAP


208 
	#EXECUTE_IF_SET_IN_BITMAP
(
BITMAP
, 
MIN
, 
BITNUM
, 
ITER
) \

209 
	`bmp_ôî_£t_öô
 (&(
ITER
), (
BITMAP
), (
MIN
), &(
BITNUM
)); \

210 
	`bmp_ôî_£t
 (&(
ITER
), &(
BITNUM
)); \

211 
	`bmp_ôî_√xt
 (&(
ITER
), &(
BITNUM
)))

	)

214 
ölöe
 
	$sbôm≠_‰ì
 (
sbôm≠
 
m≠
)

216 
	`‰ì
 (
m≠
->
p›cou¡
);

217 
	`‰ì
 (
m≠
);

218 
	}
}

220 
ölöe
 
	$sbôm≠_ve˘‹_‰ì
 (
sbôm≠
 * 
vec
)

222 
	`‰ì
 (
vec
);

223 
	}
}

225 
dump_bôm≠
 (
FILE
 *, 
c⁄°_sbôm≠
);

226 
debug_øw
 (c⁄° 
sim∂e_bôm≠_def
 &
ªf
);

227 
debug_øw
 (c⁄° 
sim∂e_bôm≠_def
 *
±r
);

228 
dump_bôm≠_fûe
 (
FILE
 *, 
c⁄°_sbôm≠
);

229 
debug
 (c⁄° 
sim∂e_bôm≠_def
 &
ªf
);

230 
debug
 (c⁄° 
sim∂e_bôm≠_def
 *
±r
);

231 
dump_bôm≠_ve˘‹
 (
FILE
 *, c⁄° *, c⁄° *, 
sbôm≠
 *,

233 
sbôm≠
 
sbôm≠_Æloc
 ();

234 
sbôm≠
 
sbôm≠_Æloc_wôh_p›cou¡
 ();

235 
sbôm≠
 *
sbôm≠_ve˘‹_Æloc
 (, );

236 
sbôm≠
 
sbôm≠_ªsize
 (sbitmap, , );

237 
bôm≠_c›y
 (
sbôm≠
, 
c⁄°_sbôm≠
);

238 
bôm≠_equÆ_p
 (
c⁄°_sbôm≠
, const_sbitmap);

239 
boﬁ
 
bôm≠_em±y_p
 (
c⁄°_sbôm≠
);

240 
bôm≠_˛ór
 (
sbôm≠
);

241 
bôm≠_⁄es
 (
sbôm≠
);

242 
bôm≠_ve˘‹_˛ór
 (
sbôm≠
 *, );

243 
bôm≠_ve˘‹_⁄es
 (
sbôm≠
 *, );

245 
boﬁ
 
bôm≠_i‹_™d_com∂
 (
sbôm≠
, 
c⁄°_sbôm≠
,

246 
c⁄°_sbôm≠
, const_sbitmap);

247 
bôm≠_™d_com∂
 (
sbôm≠
, 
c⁄°_sbôm≠
, const_sbitmap);

248 
bôm≠_nŸ
 (
sbôm≠
, 
c⁄°_sbôm≠
);

249 
boﬁ
 
bôm≠_‹_™d
 (
sbôm≠
, 
c⁄°_sbôm≠
,

250 
c⁄°_sbôm≠
, const_sbitmap);

251 
boﬁ
 
bôm≠_™d_‹
 (
sbôm≠
, 
c⁄°_sbôm≠
,

252 
c⁄°_sbôm≠
, const_sbitmap);

253 
boﬁ
 
bôm≠_öãr£˘_p
 (
c⁄°_sbôm≠
, const_sbitmap);

254 
boﬁ
 
bôm≠_™d
 (
sbôm≠
, 
c⁄°_sbôm≠
, const_sbitmap);

255 
boﬁ
 
bôm≠_i‹
 (
sbôm≠
, 
c⁄°_sbôm≠
, const_sbitmap);

256 
boﬁ
 
bôm≠_x‹
 (
sbôm≠
, 
c⁄°_sbôm≠
, const_sbitmap);

257 
boﬁ
 
bôm≠_sub£t_p
 (
c⁄°_sbôm≠
, const_sbitmap);

259 
bôm≠_fú°_£t_bô
 (
c⁄°_sbôm≠
);

260 
bôm≠_œ°_£t_bô
 (
c⁄°_sbôm≠
);

262 
debug_bôm≠
 (
c⁄°_sbôm≠
);

263 
sbôm≠
 
sbôm≠_ªÆloc
 (sbitmap, );

264 
sbôm≠_p›cou¡
 (
c⁄°_sbôm≠
, );

	@include/splay-tree.h

31 #i‚de‡
_SPLAY_TREE_H


32 
	#_SPLAY_TREE_H


	)

34 #ifde‡
__˝lu•lus


38 
	~"™side˛.h
"

40 #ifde‡
HAVE_STDINT_H


41 
	~<°döt.h
>

43 #ifde‡
HAVE_INTTYPES_H


44 
	~<öây≥s.h
>

47 #i‚de‡
GTY


48 
	#GTY
(
X
)

	)

55 
uöçå_t
 
	t•œy_åì_key
;

56 
uöçå_t
 
	t•œy_åì_vÆue
;

59 
•œy_åì_node_s
 *
	t•œy_åì_node
;

63 (*
•œy_åì_com∑ª_‚
Ë(
	t•œy_åì_key
, splay_tree_key);

67 (*
•œy_åì_dñëe_key_‚
Ë(
	t•œy_åì_key
);

71 (*
•œy_åì_dñëe_vÆue_‚
Ë(
	t•œy_åì_vÆue
);

74 (*
•œy_åì_f‹óch_‚
Ë(
	t•œy_åì_node
, *);

80 *(*
	t•œy_åì_Æloˇã_‚
) (, *);

86 (*
•œy_åì_dóŒoˇã_‚
) (*, *);

89 
GTY
(()Ë
•œy_åì_node_s
 {

91 
•œy_åì_key
 
GTY
 ((
u£_∑øm1
)Ë
key
;

94 
•œy_åì_vÆue
 
GTY
 ((
u£_∑øm2
)Ë
vÆue
;

97 
•œy_åì_node
 
GTY
 ((
u£_∑øms
)Ë
À·
;

98 
•œy_åì_node
 
GTY
 ((
u£_∑øms
)Ë
right
;

102 
GTY
(()Ë
•œy_åì_s
 {

104 
•œy_åì_node
 
GTY
 ((
u£_∑øms
)Ë
roŸ
;

107 
•œy_åì_com∑ª_‚
 
comp
;

110 
•œy_åì_dñëe_key_‚
 
dñëe_key
;

113 
•œy_åì_dñëe_vÆue_‚
 
dñëe_vÆue
;

116 
•œy_åì_Æloˇã_‚
 
Æloˇã
;

119 
•œy_åì_dóŒoˇã_‚
 
dóŒoˇã
;

122 * 
GTY
((
skù
)Ë
Æloˇã_d©a
;

125 
•œy_åì_s
 *
	t•œy_åì
;

127 
•œy_åì
 
•œy_åì_√w
 (
•œy_åì_com∑ª_‚
,

128 
•œy_åì_dñëe_key_‚
,

129 
•œy_åì_dñëe_vÆue_‚
);

130 
•œy_åì
 
•œy_åì_√w_wôh_Æloˇt‹
 (
•œy_åì_com∑ª_‚
,

131 
•œy_åì_dñëe_key_‚
,

132 
•œy_åì_dñëe_vÆue_‚
,

133 
•œy_åì_Æloˇã_‚
,

134 
•œy_åì_dóŒoˇã_‚
,

136 
•œy_åì
 
•œy_åì_√w_ty≥d_Æloc
 (
•œy_åì_com∑ª_‚
,

137 
•œy_åì_dñëe_key_‚
,

138 
•œy_åì_dñëe_vÆue_‚
,

139 
•œy_åì_Æloˇã_‚
,

140 
•œy_åì_Æloˇã_‚
,

141 
•œy_åì_dóŒoˇã_‚
,

143 
•œy_åì_dñëe
 (
•œy_åì
);

144 
•œy_åì_node
 
•œy_åì_ö£π
 (
•œy_åì
,

145 
•œy_åì_key
,

146 
•œy_åì_vÆue
);

147 
•œy_åì_ªmove
 (
•œy_åì
, 
•œy_åì_key
);

148 
•œy_åì_node
 
•œy_åì_lookup
 (
•œy_åì
, 
•œy_åì_key
);

149 
•œy_åì_node
 
•œy_åì_¥ede˚ss‹
 (
•œy_åì
, 
•œy_åì_key
);

150 
•œy_åì_node
 
•œy_åì_suc˚ss‹
 (
•œy_åì
, 
•œy_åì_key
);

151 
•œy_åì_node
 
•œy_åì_max
 (
•œy_åì
);

152 
•œy_åì_node
 
•œy_åì_mö
 (
•œy_åì
);

153 
•œy_åì_f‹óch
 (
•œy_åì
, 
•œy_åì_f‹óch_‚
, *);

154 
•œy_åì_com∑ª_öts
 (
•œy_åì_key
, splay_tree_key);

155 
•œy_åì_com∑ª_poöãrs
 (
•œy_åì_key
, splay_tree_key);

157 #ifde‡
__˝lu•lus


	@include/ssa-iterators.h

20 #i‚de‡
GCC_SSA_ITERATORS_H


21 
	#GCC_SSA_ITERATORS_H


	)

58 
	simm_u£_ôî©‹


61 
sß_u£_›î™d_t
 *
	mimm_u£
;

63 
sß_u£_›î™d_t
 *
	míd_p
;

65 
sß_u£_›î™d_t
 
	môî_node
;

68 
sß_u£_›î™d_t
 *
	m√xt_imm_«me
;

75 
	#FOR_EACH_IMM_USE_FAST
(
DEST
, 
ITER
, 
SSAVAR
) \

76 (
DEST
Ë
	`fú°_ªad⁄ly_imm_u£
 (&(
ITER
), (
SSAVAR
)); \

77 !
	`íd_ªad⁄ly_imm_u£_p
 (&(
ITER
)); \

78 (Ë((
DEST
Ë
	`√xt_ªad⁄ly_imm_u£
 (&(
ITER
))))

	)

82 
	#FOR_EACH_IMM_USE_STMT
(
STMT
, 
ITER
, 
SSAVAR
) \

83 (
STMT
Ë
	`fú°_imm_u£_°mt
 (&(
ITER
), (
SSAVAR
)); \

84 !
	`íd_imm_u£_°mt_p
 (&(
ITER
)); \

85 (Ë((
STMT
Ë
	`√xt_imm_u£_°mt
 (&(
ITER
))))

	)

90 
	#BREAK_FROM_IMM_USE_STMT
(
ITER
) \

92 
	`íd_imm_u£_°mt_åavî£
 (&(
ITER
)); \

94 }

	)

110 
	#FOR_EACH_IMM_USE_ON_STMT
(
DEST
, 
ITER
) \

111 (
DEST
Ë
	`fú°_imm_u£_⁄_°mt
 (&(
ITER
)); \

112 !
	`íd_imm_u£_⁄_°mt_p
 (&(
ITER
)); \

113 (Ë((
DEST
Ë
	`√xt_imm_u£_⁄_°mt
 (&(
ITER
))))

	)

117 
boﬁ
 
has_zîo_u£s_1
 (c⁄° 
sß_u£_›î™d_t
 *
hód
);

118 
boﬁ
 
sögÀ_imm_u£_1
 (c⁄° 
sß_u£_›î™d_t
 *
hód
,

119 
u£_›î™d_p
 *
u£_p
, 
gim∂e
 *
°mt
);

122 
	esß_›_ôî_ty≥
 {

123 
	msß_›_ôî_n⁄e
 = 0,

124 
	msß_›_ôî_åì
,

125 
	msß_›_ôî_u£
,

126 
	msß_›_ôî_def


134 
	ssß_›_ôî


136 
sß_›_ôî_ty≥
 
	môî_ty≥
;

137 
boﬁ
 
	md⁄e
;

138 
	mÊags
;

139 
	mi
;

140 
	mnum›s
;

141 
u£_›ty≥_p
 
	mu£s
;

142 
gim∂e
 
	m°mt
;

148 
	#SSA_OP_USE
 0x01

	)

149 
	#SSA_OP_DEF
 0x02

	)

150 
	#SSA_OP_VUSE
 0x04

	)

151 
	#SSA_OP_VDEF
 0x08

	)

153 
	#SSA_OP_VIRTUAL_USES
 (
SSA_OP_VUSE
)

	)

154 
	#SSA_OP_VIRTUAL_DEFS
 (
SSA_OP_VDEF
)

	)

155 
	#SSA_OP_ALL_VIRTUALS
 (
SSA_OP_VIRTUAL_USES
 | 
SSA_OP_VIRTUAL_DEFS
)

	)

156 
	#SSA_OP_ALL_USES
 (
SSA_OP_VIRTUAL_USES
 | 
SSA_OP_USE
)

	)

157 
	#SSA_OP_ALL_DEFS
 (
SSA_OP_VIRTUAL_DEFS
 | 
SSA_OP_DEF
)

	)

158 
	#SSA_OP_ALL_OPERANDS
 (
SSA_OP_ALL_USES
 | 
SSA_OP_ALL_DEFS
)

	)

163 
	#FOR_EACH_SSA_TREE_OPERAND
(
TREEVAR
, 
STMT
, 
ITER
, 
FLAGS
) \

164 
TREEVAR
 = 
	`›_ôî_öô_åì
 (&(
ITER
), 
STMT
, 
FLAGS
); \

165 !
	`›_ôî_d⁄e
 (&(
ITER
)); \

166 (Ë(
TREEVAR
 = 
	`›_ôî_√xt_åì
 (&(
ITER
))))

	)

171 
	#FOR_EACH_SSA_USE_OPERAND
(
USEVAR
, 
STMT
, 
ITER
, 
FLAGS
) \

172 
USEVAR
 = 
	`›_ôî_öô_u£
 (&(
ITER
), 
STMT
, 
FLAGS
); \

173 !
	`›_ôî_d⁄e
 (&(
ITER
)); \

174 
USEVAR
 = 
	`›_ôî_√xt_u£
 (&(
ITER
)))

	)

179 
	#FOR_EACH_SSA_DEF_OPERAND
(
DEFVAR
, 
STMT
, 
ITER
, 
FLAGS
) \

180 
DEFVAR
 = 
	`›_ôî_öô_def
 (&(
ITER
), 
STMT
, 
FLAGS
); \

181 !
	`›_ôî_d⁄e
 (&(
ITER
)); \

182 
DEFVAR
 = 
	`›_ôî_√xt_def
 (&(
ITER
)))

	)

187 
	#FOR_EACH_PHI_ARG
(
USEVAR
, 
STMT
, 
ITER
, 
FLAGS
) \

188 (
USEVAR
Ë
	`›_ôî_öô_phiu£
 (&(
ITER
), 
STMT
, 
FLAGS
); \

189 !
	`›_ôî_d⁄e
 (&(
ITER
)); \

190 (
USEVAR
Ë
	`›_ôî_√xt_u£
 (&(
ITER
)))

	)

195 
	#FOR_EACH_PHI_OR_STMT_USE
(
USEVAR
, 
STMT
, 
ITER
, 
FLAGS
) \

196 (
USEVAR
Ë(
	`gim∂e_code
 (
STMT
Ë=
GIMPLE_PHI
 \

197 ? 
	`›_ôî_öô_phiu£
 (&(
ITER
), 
STMT
, 
FLAGS
) \

198 : 
	`›_ôî_öô_u£
 (&(
ITER
), 
STMT
, 
FLAGS
)); \

199 !
	`›_ôî_d⁄e
 (&(
ITER
)); \

200 (
USEVAR
Ë
	`›_ôî_√xt_u£
 (&(
ITER
)))

	)

204 
	#FOR_EACH_PHI_OR_STMT_DEF
(
DEFVAR
, 
STMT
, 
ITER
, 
FLAGS
) \

205 (
DEFVAR
Ë(
	`gim∂e_code
 (
STMT
Ë=
GIMPLE_PHI
 \

206 ? 
	`›_ôî_öô_phidef
 (&(
ITER
), 
STMT
, 
FLAGS
) \

207 : 
	`›_ôî_öô_def
 (&(
ITER
), 
STMT
, 
FLAGS
)); \

208 !
	`›_ôî_d⁄e
 (&(
ITER
)); \

209 (
DEFVAR
Ë
	`›_ôî_√xt_def
 (&(
ITER
)))

	)

214 
	#SINGLE_SSA_TREE_OPERAND
(
STMT
, 
FLAGS
) \

215 
	`sögÀ_sß_åì_›î™d
 (
STMT
, 
FLAGS
)

	)

220 
	#SINGLE_SSA_USE_OPERAND
(
STMT
, 
FLAGS
) \

221 
	`sögÀ_sß_u£_›î™d
 (
STMT
, 
FLAGS
)

	)

226 
	#SINGLE_SSA_DEF_OPERAND
(
STMT
, 
FLAGS
) \

227 
	`sögÀ_sß_def_›î™d
 (
STMT
, 
FLAGS
)

	)

230 
	#ZERO_SSA_OPERANDS
(
STMT
, 
FLAGS
Ë
	`zîo_sß_›î™ds
 (STMT, FLAGS)

	)

233 
	#NUM_SSA_OPERANDS
(
STMT
, 
FLAGS
Ë
	`num_sß_›î™ds
 (STMT, FLAGS)

	)

237 
ölöe
 

238 
	$dñök_imm_u£
 (
sß_u£_›î™d_t
 *
löknode
)

241 i‡(
löknode
->
¥ev
 =
NULL
)

244 
löknode
->
¥ev
->
√xt
 =Üinknode->next;

245 
löknode
->
√xt
->
¥ev
 =Üinknode->prev;

246 
löknode
->
¥ev
 = 
NULL
;

247 
löknode
->
√xt
 = 
NULL
;

248 
	}
}

251 
ölöe
 

252 
	$lök_imm_u£_to_li°
 (
sß_u£_›î™d_t
 *
löknode
, sß_u£_›î™d_à*
li°
)

256 
löknode
->
¥ev
 = 
li°
;

257 
löknode
->
√xt
 = 
li°
->next;

258 
li°
->
√xt
->
¥ev
 = 
löknode
;

259 
li°
->
√xt
 = 
löknode
;

260 
	}
}

263 
ölöe
 

264 
	$lök_imm_u£
 (
sß_u£_›î™d_t
 *
löknode
, 
åì
 
def
)

266 
sß_u£_›î™d_t
 *
roŸ
;

268 i‡(!
def
 || 
	`TREE_CODE
 (defË!
SSA_NAME
)

269 
löknode
->
¥ev
 = 
NULL
;

272 
roŸ
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
def
));

273 i‡(
löknode
->
u£
)

274 
	`gcc_checkög_as£π
 (*(
löknode
->
u£
Ë=
def
);

275 
	`lök_imm_u£_to_li°
 (
löknode
, 
roŸ
);

277 
	}
}

280 
ölöe
 

281 
	$£t_sß_u£_‰om_±r
 (
u£_›î™d_p
 
u£
, 
åì
 
vÆ
)

283 
	`dñök_imm_u£
 (
u£
);

284 *(
u£
->u£Ë
vÆ
;

285 
	`lök_imm_u£
 (
u£
, 
vÆ
);

286 
	}
}

290 
ölöe
 

291 
	$lök_imm_u£_°mt
 (
sß_u£_›î™d_t
 *
löknode
, 
åì
 
def
, 
gim∂e
 
°mt
)

293 i‡(
°mt
)

294 
	`lök_imm_u£
 (
löknode
, 
def
);

296 
	`lök_imm_u£
 (
löknode
, 
NULL
);

297 
löknode
->
loc
.
°mt
 = stmt;

298 
	}
}

301 
ölöe
 

302 
	$ªlök_imm_u£
 (
sß_u£_›î™d_t
 *
node
, sß_u£_›î™d_à*
ﬁd
)

305 
	`gcc_checkög_as£π
 (*(
ﬁd
->
u£
Ë=*(
node
->use));

306 
node
->
¥ev
 = 
ﬁd
->prev;

307 
node
->
√xt
 = 
ﬁd
->next;

308 i‡(
ﬁd
->
¥ev
)

310 
ﬁd
->
¥ev
->
√xt
 = 
node
;

311 
ﬁd
->
√xt
->
¥ev
 = 
node
;

313 
ﬁd
->
¥ev
 = 
NULL
;

315 
	}
}

319 
ölöe
 

320 
	$ªlök_imm_u£_°mt
 (
sß_u£_›î™d_t
 *
löknode
, sß_u£_›î™d_à*
ﬁd
,

321 
gim∂e
 
°mt
)

323 i‡(
°mt
)

324 
	`ªlök_imm_u£
 (
löknode
, 
ﬁd
);

326 
	`lök_imm_u£
 (
löknode
, 
NULL
);

327 
löknode
->
loc
.
°mt
 = stmt;

328 
	}
}

332 
ölöe
 
boﬁ


333 
	$íd_ªad⁄ly_imm_u£_p
 (c⁄° 
imm_u£_ôî©‹
 *
imm
)

335  (
imm
->
imm_u£
 =imm->
íd_p
);

336 
	}
}

339 
ölöe
 
u£_›î™d_p


340 
	$fú°_ªad⁄ly_imm_u£
 (
imm_u£_ôî©‹
 *
imm
, 
åì
 
v¨
)

342 
imm
->
íd_p
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
v¨
));

343 
imm
->
imm_u£
 = imm->
íd_p
->
√xt
;

344 #ifde‡
ENABLE_CHECKING


345 
imm
->
ôî_node
.
√xt
 = imm->
imm_u£
->next;

347 i‡(
	`íd_ªad⁄ly_imm_u£_p
 (
imm
))

348  
NULL_USE_OPERAND_P
;

349  
imm
->
imm_u£
;

350 
	}
}

353 
ölöe
 
u£_›î™d_p


354 
	$√xt_ªad⁄ly_imm_u£
 (
imm_u£_ôî©‹
 *
imm
)

356 
u£_›î™d_p
 
ﬁd
 = 
imm
->
imm_u£
;

358 #ifde‡
ENABLE_CHECKING


363 
	`gcc_as£π
 (
imm
->
ôî_node
.
√xt
 =
ﬁd
->next);

364 
imm
->
ôî_node
.
√xt
 = 
ﬁd
->next->next;

367 
imm
->
imm_u£
 = 
ﬁd
->
√xt
;

368 i‡(
	`íd_ªad⁄ly_imm_u£_p
 (
imm
))

369  
NULL_USE_OPERAND_P
;

370  
imm
->
imm_u£
;

371 
	}
}

375 
ölöe
 
boﬁ


376 
	$has_zîo_u£s
 (
c⁄°_åì
 
v¨
)

378 c⁄° 
sß_u£_›î™d_t
 *c⁄° 
±r
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
v¨
));

381 i‡(
±r
 =±r->
√xt
)

382  
åue
;

386 i‡(!
MAY_HAVE_DEBUG_STMTS
)

387  
Ál£
;

389  
	`has_zîo_u£s_1
 (
±r
);

390 
	}
}

393 
ölöe
 
boﬁ


394 
	$has_sögÀ_u£
 (
c⁄°_åì
 
v¨
)

396 c⁄° 
sß_u£_›î™d_t
 *c⁄° 
±r
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
v¨
));

399 i‡(
±r
 =±r->
√xt
)

400  
Ál£
;

403 i‡(
±r
 =±r->
√xt
->next)

404  !
	`is_gim∂e_debug
 (
	`USE_STMT
 (
±r
->
√xt
));

407 i‡(!
MAY_HAVE_DEBUG_STMTS
)

408  
Ál£
;

410  
	`sögÀ_imm_u£_1
 (
±r
, 
NULL
, NULL);

411 
	}
}

416 
ölöe
 
boﬁ


417 
	$sögÀ_imm_u£
 (
c⁄°_åì
 
v¨
, 
u£_›î™d_p
 *
u£_p
, 
gim∂e
 *
°mt
)

419 c⁄° 
sß_u£_›î™d_t
 *c⁄° 
±r
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
v¨
));

422 i‡(
±r
 =±r->
√xt
)

424 
ªtu∫_Ál£
:

425 *
u£_p
 = 
NULL_USE_OPERAND_P
;

426 *
°mt
 = 
NULL
;

427  
Ál£
;

431 i‡(
±r
 =±r->
√xt
->next)

433 i‡(!
	`is_gim∂e_debug
 (
	`USE_STMT
 (
±r
->
√xt
)))

435 *
u£_p
 = 
±r
->
√xt
;

436 *
°mt
 = 
±r
->
√xt
->
loc
.stmt;

437  
åue
;

440 
ªtu∫_Ál£
;

444 i‡(!
MAY_HAVE_DEBUG_STMTS
)

445 
ªtu∫_Ál£
;

447  
	`sögÀ_imm_u£_1
 (
±r
, 
u£_p
, 
°mt
);

448 
	}
}

451 
ölöe
 

452 
	$num_imm_u£s
 (
c⁄°_åì
 
v¨
)

454 c⁄° 
sß_u£_›î™d_t
 *c⁄° 
°¨t
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
v¨
));

455 c⁄° 
sß_u£_›î™d_t
 *
±r
;

456 
num
 = 0;

458 i‡(!
MAY_HAVE_DEBUG_STMTS
)

459 
±r
 = 
°¨t
->
√xt
;Ötr != start;Ötr =Ötr->next)

460 
num
++;

462 
±r
 = 
°¨t
->
√xt
;Ötr != start;Ötr =Ötr->next)

463 i‡(!
	`is_gim∂e_debug
 (
	`USE_STMT
 (
±r
)))

464 
num
++;

466  
num
;

467 
	}
}

475 
ölöe
 
boﬁ


476 
	$›_ôî_d⁄e
 (c⁄° 
sß_›_ôî
 *
±r
)

478  
±r
->
d⁄e
;

479 
	}
}

482 
ölöe
 
u£_›î™d_p


483 
	$›_ôî_√xt_u£
 (
sß_›_ôî
 *
±r
)

485 
u£_›î™d_p
 
u£_p
;

486 
	`gcc_checkög_as£π
 (
±r
->
ôî_ty≥
 =
sß_›_ôî_u£
);

487 i‡(
±r
->
u£s
)

489 
u£_p
 = 
	`USE_OP_PTR
 (
±r
->
u£s
);

490 
±r
->
u£s
 =Öå->u£s->
√xt
;

491  
u£_p
;

493 i‡(
±r
->
i
 <Öå->
num›s
)

495  
	`PHI_ARG_DEF_PTR
 (
±r
->
°mt
, (±r->
i
)++);

497 
±r
->
d⁄e
 = 
åue
;

498  
NULL_USE_OPERAND_P
;

499 
	}
}

502 
ölöe
 
def_›î™d_p


503 
	$›_ôî_√xt_def
 (
sß_›_ôî
 *
±r
)

505 
	`gcc_checkög_as£π
 (
±r
->
ôî_ty≥
 =
sß_›_ôî_def
);

506 i‡(
±r
->
Êags
 & 
SSA_OP_VDEF
)

508 
åì
 *
p
;

509 
±r
->
Êags
 &~
SSA_OP_VDEF
;

510 
p
 = 
	`gim∂e_vdef_±r
 (
±r
->
°mt
);

511 i‡(
p
 && *p)

512  
p
;

514 i‡(
±r
->
Êags
 & 
SSA_OP_DEF
)

516 
±r
->
i
 <Öå->
num›s
)

518 
åì
 *
vÆ
 = 
	`gim∂e_›_±r
 (
±r
->
°mt
,Öå->
i
);

519 
±r
->
i
++;

520 i‡(*
vÆ
)

522 i‡(
	`TREE_CODE
 (*
vÆ
Ë=
TREE_LIST
)

523 
vÆ
 = &
	`TREE_VALUE
 (*val);

524 i‡(
	`TREE_CODE
 (*
vÆ
Ë=
SSA_NAME


525 || 
	`is_gim∂e_ªg
 (*
vÆ
))

526  
vÆ
;

529 
±r
->
Êags
 &~
SSA_OP_DEF
;

532 
±r
->
d⁄e
 = 
åue
;

533  
NULL_DEF_OPERAND_P
;

534 
	}
}

537 
ölöe
 
åì


538 
	$›_ôî_√xt_åì
 (
sß_›_ôî
 *
±r
)

540 
åì
 
vÆ
;

541 
	`gcc_checkög_as£π
 (
±r
->
ôî_ty≥
 =
sß_›_ôî_åì
);

542 i‡(
±r
->
u£s
)

544 
vÆ
 = 
	`USE_OP
 (
±r
->
u£s
);

545 
±r
->
u£s
 =Öå->u£s->
√xt
;

546  
vÆ
;

548 i‡(
±r
->
Êags
 & 
SSA_OP_VDEF
)

550 
±r
->
Êags
 &~
SSA_OP_VDEF
;

551 i‡((
vÆ
 = 
	`gim∂e_vdef
 (
±r
->
°mt
)))

552  
vÆ
;

554 i‡(
±r
->
Êags
 & 
SSA_OP_DEF
)

556 
±r
->
i
 <Öå->
num›s
)

558 
vÆ
 = 
	`gim∂e_›
 (
±r
->
°mt
,Öå->
i
);

559 
±r
->
i
++;

560 i‡(
vÆ
)

562 i‡(
	`TREE_CODE
 (
vÆ
Ë=
TREE_LIST
)

563 
vÆ
 = 
	`TREE_VALUE
 (val);

564 i‡(
	`TREE_CODE
 (
vÆ
Ë=
SSA_NAME


565 || 
	`is_gim∂e_ªg
 (
vÆ
))

566  
vÆ
;

569 
±r
->
Êags
 &~
SSA_OP_DEF
;

572 
±r
->
d⁄e
 = 
åue
;

573  
NULL_TREE
;

574 
	}
}

581 
ölöe
 

582 
	$˛ór_™d_d⁄e_sß_ôî
 (
sß_›_ôî
 *
±r
)

584 
±r
->
i
 = 0;

585 
±r
->
num›s
 = 0;

586 
±r
->
u£s
 = 
NULL
;

587 
±r
->
ôî_ty≥
 = 
sß_›_ôî_n⁄e
;

588 
±r
->
°mt
 = 
NULL
;

589 
±r
->
d⁄e
 = 
åue
;

590 
±r
->
Êags
 = 0;

591 
	}
}

594 
ölöe
 

595 
	$›_ôî_öô
 (
sß_›_ôî
 *
±r
, 
gim∂e
 
°mt
, 
Êags
)

600 
	`gcc_checkög_as£π
 (
	`gim∂e_code
 (
°mt
Ë!
GIMPLE_PHI


601 && (!(
Êags
 & 
SSA_OP_VDEF
Ë|| (Êag†& 
SSA_OP_DEF
))

602 && (!(
Êags
 & 
SSA_OP_VUSE
Ë|| (Êag†& 
SSA_OP_USE
)));

603 
±r
->
num›s
 = 0;

604 i‡(
Êags
 & (
SSA_OP_DEF
 | 
SSA_OP_VDEF
))

606 
	`gim∂e_code
 (
°mt
))

608 
GIMPLE_ASSIGN
:

609 
GIMPLE_CALL
:

610 
±r
->
num›s
 = 1;

612 
GIMPLE_ASM
:

613 
±r
->
num›s
 = 
	`gim∂e_asm_nouçuts
 (
°mt
);

616 
±r
->
num›s
 = 0;

617 
Êags
 &~(
SSA_OP_DEF
 | 
SSA_OP_VDEF
);

621 
±r
->
u£s
 = (
Êags
 & (
SSA_OP_USE
|
SSA_OP_VUSE
)Ë? 
	`gim∂e_u£_›s
 (
°mt
Ë: 
NULL
;

622 i‡(!(
Êags
 & 
SSA_OP_VUSE
)

623 && 
±r
->
u£s


624 && 
	`gim∂e_vu£
 (
°mt
Ë!
NULL_TREE
)

625 
±r
->
u£s
 =Öå->u£s->
√xt
;

626 
±r
->
d⁄e
 = 
Ál£
;

627 
±r
->
i
 = 0;

629 
±r
->
°mt
 = stmt;

630 
±r
->
Êags
 = flags;

631 
	}
}

635 
ölöe
 
u£_›î™d_p


636 
	$›_ôî_öô_u£
 (
sß_›_ôî
 *
±r
, 
gim∂e
 
°mt
, 
Êags
)

638 
	`gcc_checkög_as£π
 ((
Êags
 & 
SSA_OP_ALL_DEFS
) == 0

639 && (
Êags
 & 
SSA_OP_USE
));

640 
	`›_ôî_öô
 (
±r
, 
°mt
, 
Êags
);

641 
±r
->
ôî_ty≥
 = 
sß_›_ôî_u£
;

642  
	`›_ôî_√xt_u£
 (
±r
);

643 
	}
}

647 
ölöe
 
def_›î™d_p


648 
	$›_ôî_öô_def
 (
sß_›_ôî
 *
±r
, 
gim∂e
 
°mt
, 
Êags
)

650 
	`gcc_checkög_as£π
 ((
Êags
 & 
SSA_OP_ALL_USES
) == 0

651 && (
Êags
 & 
SSA_OP_DEF
));

652 
	`›_ôî_öô
 (
±r
, 
°mt
, 
Êags
);

653 
±r
->
ôî_ty≥
 = 
sß_›_ôî_def
;

654  
	`›_ôî_√xt_def
 (
±r
);

655 
	}
}

659 
ölöe
 
åì


660 
	$›_ôî_öô_åì
 (
sß_›_ôî
 *
±r
, 
gim∂e
 
°mt
, 
Êags
)

662 
	`›_ôî_öô
 (
±r
, 
°mt
, 
Êags
);

663 
±r
->
ôî_ty≥
 = 
sß_›_ôî_åì
;

664  
	`›_ôî_√xt_åì
 (
±r
);

665 
	}
}

670 
ölöe
 
åì


671 
	$sögÀ_sß_åì_›î™d
 (
gim∂e
 
°mt
, 
Êags
)

673 
åì
 
v¨
;

674 
sß_›_ôî
 
ôî
;

676 
v¨
 = 
	`›_ôî_öô_åì
 (&
ôî
, 
°mt
, 
Êags
);

677 i‡(
	`›_ôî_d⁄e
 (&
ôî
))

678  
NULL_TREE
;

679 
	`›_ôî_√xt_åì
 (&
ôî
);

680 i‡(
	`›_ôî_d⁄e
 (&
ôî
))

681  
v¨
;

682  
NULL_TREE
;

683 
	}
}

688 
ölöe
 
u£_›î™d_p


689 
	$sögÀ_sß_u£_›î™d
 (
gim∂e
 
°mt
, 
Êags
)

691 
u£_›î™d_p
 
v¨
;

692 
sß_›_ôî
 
ôî
;

694 
v¨
 = 
	`›_ôî_öô_u£
 (&
ôî
, 
°mt
, 
Êags
);

695 i‡(
	`›_ôî_d⁄e
 (&
ôî
))

696  
NULL_USE_OPERAND_P
;

697 
	`›_ôî_√xt_u£
 (&
ôî
);

698 i‡(
	`›_ôî_d⁄e
 (&
ôî
))

699  
v¨
;

700  
NULL_USE_OPERAND_P
;

701 
	}
}

707 
ölöe
 
def_›î™d_p


708 
	$sögÀ_sß_def_›î™d
 (
gim∂e
 
°mt
, 
Êags
)

710 
def_›î™d_p
 
v¨
;

711 
sß_›_ôî
 
ôî
;

713 
v¨
 = 
	`›_ôî_öô_def
 (&
ôî
, 
°mt
, 
Êags
);

714 i‡(
	`›_ôî_d⁄e
 (&
ôî
))

715  
NULL_DEF_OPERAND_P
;

716 
	`›_ôî_√xt_def
 (&
ôî
);

717 i‡(
	`›_ôî_d⁄e
 (&
ôî
))

718  
v¨
;

719  
NULL_DEF_OPERAND_P
;

720 
	}
}

725 
ölöe
 
boﬁ


726 
	$zîo_sß_›î™ds
 (
gim∂e
 
°mt
, 
Êags
)

728 
sß_›_ôî
 
ôî
;

730 
	`›_ôî_öô_åì
 (&
ôî
, 
°mt
, 
Êags
);

731  
	`›_ôî_d⁄e
 (&
ôî
);

732 
	}
}

736 
ölöe
 

737 
	$num_sß_›î™ds
 (
gim∂e
 
°mt
, 
Êags
)

739 
sß_›_ôî
 
ôî
;

740 
åì
 
t
;

741 
num
 = 0;

743 
	`gcc_checkög_as£π
 (
	`gim∂e_code
 (
°mt
Ë!
GIMPLE_PHI
);

744 
	`FOR_EACH_SSA_TREE_OPERAND
 (
t
, 
°mt
, 
ôî
, 
Êags
)

745 
num
++;

746  
num
;

747 
	}
}

751 
ölöe
 
åì


752 
	$sögÀ_phi_def
 (
gim∂e
 
°mt
, 
Êags
)

754 
åì
 
def
 = 
	`PHI_RESULT
 (
°mt
);

755 i‡((
Êags
 & 
SSA_OP_DEF
Ë&& 
	`is_gim∂e_ªg
 (
def
))

756  
def
;

757 i‡((
Êags
 & 
SSA_OP_VIRTUAL_DEFS
Ë&& !
	`is_gim∂e_ªg
 (
def
))

758  
def
;

759  
NULL_TREE
;

760 
	}
}

764 
ölöe
 
u£_›î™d_p


765 
	$›_ôî_öô_phiu£
 (
sß_›_ôî
 *
±r
, 
gim∂e
 
phi
, 
Êags
)

767 
åì
 
phi_def
 = 
	`gim∂e_phi_ªsu…
 (
phi
);

768 
comp
;

770 
	`˛ór_™d_d⁄e_sß_ôî
 (
±r
);

771 
±r
->
d⁄e
 = 
Ál£
;

773 
	`gcc_checkög_as£π
 ((
Êags
 & (
SSA_OP_USE
 | 
SSA_OP_VIRTUAL_USES
)) != 0);

775 
comp
 = (
	`is_gim∂e_ªg
 (
phi_def
Ë? 
SSA_OP_USE
 : 
SSA_OP_VIRTUAL_USES
);

778 i‡((
Êags
 & 
comp
) == 0)

780 
±r
->
d⁄e
 = 
åue
;

781  
NULL_USE_OPERAND_P
;

784 
±r
->
°mt
 = 
phi
;

785 
±r
->
num›s
 = 
	`gim∂e_phi_num_¨gs
 (
phi
);

786 
±r
->
ôî_ty≥
 = 
sß_›_ôî_u£
;

787 
±r
->
Êags
 = flags;

788  
	`›_ôî_√xt_u£
 (
±r
);

789 
	}
}

794 
ölöe
 
def_›î™d_p


795 
	$›_ôî_öô_phidef
 (
sß_›_ôî
 *
±r
, 
gim∂e
 
phi
, 
Êags
)

797 
åì
 
phi_def
 = 
	`PHI_RESULT
 (
phi
);

798 
comp
;

800 
	`˛ór_™d_d⁄e_sß_ôî
 (
±r
);

801 
±r
->
d⁄e
 = 
Ál£
;

803 
	`gcc_checkög_as£π
 ((
Êags
 & (
SSA_OP_DEF
 | 
SSA_OP_VIRTUAL_DEFS
)) != 0);

805 
comp
 = (
	`is_gim∂e_ªg
 (
phi_def
Ë? 
SSA_OP_DEF
 : 
SSA_OP_VIRTUAL_DEFS
);

809 i‡((
Êags
 & 
comp
) == 0)

811 
±r
->
d⁄e
 = 
åue
;

812  
NULL_DEF_OPERAND_P
;

815 
±r
->
ôî_ty≥
 = 
sß_›_ôî_def
;

819  
	`PHI_RESULT_PTR
 (
phi
);

820 
	}
}

824 
ölöe
 
boﬁ


825 
	$íd_imm_u£_°mt_p
 (c⁄° 
imm_u£_ôî©‹
 *
imm
)

827  (
imm
->
imm_u£
 =imm->
íd_p
);

828 
	}
}

833 
ölöe
 

834 
	$íd_imm_u£_°mt_åavî£
 (
imm_u£_ôî©‹
 *
imm
)

836 
	`dñök_imm_u£
 (&(
imm
->
ôî_node
));

837 
	}
}

845 
ölöe
 
u£_›î™d_p


846 
	$move_u£_a·î_hód
 (
u£_›î™d_p
 
u£_p
, u£_›î™d_∞
hód
,

847 
u£_›î™d_p
 
œ°_p
)

849 
	`gcc_checkög_as£π
 (
	`USE_FROM_PTR
 (
u£_p
Ë=USE_FROM_PTR (
hód
));

851 i‡(
u£_p
 !
hód
)

854 i‡(
œ°_p
->
√xt
 =
u£_p
)

855 
œ°_p
 = 
u£_p
;

859 
	`dñök_imm_u£
 (
u£_p
);

860 
	`lök_imm_u£_to_li°
 (
u£_p
, 
œ°_p
);

861 
œ°_p
 = 
u£_p
;

864  
œ°_p
;

865 
	}
}

871 
ölöe
 

872 
	$lök_u£_°mts_a·î
 (
u£_›î™d_p
 
hód
, 
imm_u£_ôî©‹
 *
imm
)

874 
u£_›î™d_p
 
u£_p
;

875 
u£_›î™d_p
 
œ°_p
 = 
hód
;

876 
gim∂e
 
hód_°mt
 = 
	`USE_STMT
 (
hód
);

877 
åì
 
u£
 = 
	`USE_FROM_PTR
 (
hód
);

878 
sß_›_ôî
 
›_ôî
;

879 
Êag
;

882 
Êag
 = (
	`is_gim∂e_ªg
 (
u£
Ë? 
SSA_OP_USE
 : 
SSA_OP_VIRTUAL_USES
);

884 i‡(
	`gim∂e_code
 (
hód_°mt
Ë=
GIMPLE_PHI
)

886 
	`FOR_EACH_PHI_ARG
 (
u£_p
, 
hód_°mt
, 
›_ôî
, 
Êag
)

887 i‡(
	`USE_FROM_PTR
 (
u£_p
Ë=
u£
)

888 
œ°_p
 = 
	`move_u£_a·î_hód
 (
u£_p
, 
hód
,Üast_p);

892 i‡(
Êag
 =
SSA_OP_USE
)

894 
	`FOR_EACH_SSA_USE_OPERAND
 (
u£_p
, 
hód_°mt
, 
›_ôî
, 
Êag
)

895 i‡(
	`USE_FROM_PTR
 (
u£_p
Ë=
u£
)

896 
œ°_p
 = 
	`move_u£_a·î_hód
 (
u£_p
, 
hód
,Üast_p);

898 i‡((
u£_p
 = 
	`gim∂e_vu£_›
 (
hód_°mt
)Ë!
NULL_USE_OPERAND_P
)

900 i‡(
	`USE_FROM_PTR
 (
u£_p
Ë=
u£
)

901 
œ°_p
 = 
	`move_u£_a·î_hód
 (
u£_p
, 
hód
,Üast_p);

905 i‡(
imm
->
ôî_node
.
¥ev
 !
NULL
)

906 
	`dñök_imm_u£
 (&
imm
->
ôî_node
);

907 
	`lök_imm_u£_to_li°
 (&(
imm
->
ôî_node
), 
œ°_p
);

908 
	}
}

911 
ölöe
 
gim∂e


912 
	$fú°_imm_u£_°mt
 (
imm_u£_ôî©‹
 *
imm
, 
åì
 
v¨
)

914 
imm
->
íd_p
 = &(
	`SSA_NAME_IMM_USE_NODE
 (
v¨
));

915 
imm
->
imm_u£
 = imm->
íd_p
->
√xt
;

916 
imm
->
√xt_imm_«me
 = 
NULL_USE_OPERAND_P
;

921 
imm
->
ôî_node
.
¥ev
 = 
NULL_USE_OPERAND_P
;

922 
imm
->
ôî_node
.
√xt
 = 
NULL_USE_OPERAND_P
;

923 
imm
->
ôî_node
.
loc
.
°mt
 = 
NULL
;

924 
imm
->
ôî_node
.
u£
 = 
NULL
;

926 i‡(
	`íd_imm_u£_°mt_p
 (
imm
))

927  
NULL
;

929 
	`lök_u£_°mts_a·î
 (
imm
->
imm_u£
, imm);

931  
	`USE_STMT
 (
imm
->
imm_u£
);

932 
	}
}

936 
ölöe
 
gim∂e


937 
	$√xt_imm_u£_°mt
 (
imm_u£_ôî©‹
 *
imm
)

939 
imm
->
imm_u£
 = imm->
ôî_node
.
√xt
;

940 i‡(
	`íd_imm_u£_°mt_p
 (
imm
))

942 i‡(
imm
->
ôî_node
.
¥ev
 !
NULL
)

943 
	`dñök_imm_u£
 (&
imm
->
ôî_node
);

944  
NULL
;

947 
	`lök_u£_°mts_a·î
 (
imm
->
imm_u£
, imm);

948  
	`USE_STMT
 (
imm
->
imm_u£
);

949 
	}
}

954 
ölöe
 
u£_›î™d_p


955 
	$fú°_imm_u£_⁄_°mt
 (
imm_u£_ôî©‹
 *
imm
)

957 
imm
->
√xt_imm_«me
 = imm->
imm_u£
->
√xt
;

958  
imm
->
imm_u£
;

959 
	}
}

963 
ölöe
 
boﬁ


964 
	$íd_imm_u£_⁄_°mt_p
 (c⁄° 
imm_u£_ôî©‹
 *
imm
)

966  (
imm
->
imm_u£
 =&(imm->
ôî_node
));

967 
	}
}

971 
ölöe
 
u£_›î™d_p


972 
	$√xt_imm_u£_⁄_°mt
 (
imm_u£_ôî©‹
 *
imm
)

974 
imm
->
imm_u£
 = imm->
√xt_imm_«me
;

975 i‡(
	`íd_imm_u£_⁄_°mt_p
 (
imm
))

976  
NULL_USE_OPERAND_P
;

979 
imm
->
√xt_imm_«me
 = imm->
imm_u£
->
√xt
;

980  
imm
->
imm_u£
;

982 
	}
}

985 
ölöe
 

986 
	$dñök_°mt_imm_u£
 (
gim∂e
 
°mt
)

988 
sß_›_ôî
 
ôî
;

989 
u£_›î™d_p
 
u£_p
;

991 i‡(
	`sß_›î™ds_a˘ive
 (
cfun
))

992 
	`FOR_EACH_PHI_OR_STMT_USE
 (
u£_p
, 
°mt
, 
ôî
, 
SSA_OP_ALL_USES
)

993 
	`dñök_imm_u£
 (
u£_p
);

994 
	}
}

	@include/statistics.h

21 #i‚de‡
GCC_STATISTICS


22 
	#GCC_STATISTICS


	)

24 #i‡! 
deföed
 
GATHER_STATISTICS


25 #îr‹ 
GATHER_STATISTICS
 
mu°
 
be
 
deföed


28 
	#GCC_MEM_STAT_ARGUMENTS
 c⁄° * 
	`ARG_UNUSED
 (
_loc_«me
), ARG_UNUSED (
_loc_löe
), c⁄° * ARG_UNUSED (
_loc_fun˘i⁄
)

	)

29 #i‡
GATHER_STATISTICS


30 
	#ALONE_MEM_STAT_DECL
 
GCC_MEM_STAT_ARGUMENTS


	)

31 
	#ALONE_FINAL_MEM_STAT_DECL
 
ALONE_MEM_STAT_DECL


	)

32 
	#ALONE_PASS_MEM_STAT
 
_loc_«me
, 
_loc_löe
, 
_loc_fun˘i⁄


	)

33 
	#ALONE_FINAL_PASS_MEM_STAT
 
ALONE_PASS_MEM_STAT


	)

34 
	#ALONE_MEM_STAT_INFO
 
__FILE__
, 
__LINE__
, 
__FUNCTION__


	)

35 
	#MEM_STAT_DECL
 , 
ALONE_MEM_STAT_DECL


	)

36 
	#FINAL_MEM_STAT_DECL
 , 
ALONE_FINAL_MEM_STAT_DECL


	)

37 
	#PASS_MEM_STAT
 , 
ALONE_PASS_MEM_STAT


	)

38 
	#FINAL_PASS_MEM_STAT
 , 
ALONE_FINAL_PASS_MEM_STAT


	)

39 
	#MEM_STAT_INFO
 , 
ALONE_MEM_STAT_INFO


	)

40 #i‡
__GNUC__
 > 4 || (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

41 
	#ALONE_CXX_MEM_STAT_INFO
 c⁄° * 
_loc_«me
 = 
	`__buûtö_FILE
 (), 
_loc_löe
 = 
	`__buûtö_LINE
 (), c⁄° * 
_loc_fun˘i⁄
 = 
	`__buûtö_FUNCTION
 ()

	)

43 
	#ALONE_CXX_MEM_STAT_INFO
 c⁄° * 
_loc_«me
 = 
__FILE__
, 
_loc_löe
 = 
__LINE__
, c⁄° * 
_loc_fun˘i⁄
 = 
NULL


	)

45 
	#CXX_MEM_STAT_INFO
 , 
ALONE_CXX_MEM_STAT_INFO


	)

47 
	#ALONE_MEM_STAT_DECL
 

	)

48 
	#ALONE_FINAL_MEM_STAT_DECL
 
GCC_MEM_STAT_ARGUMENTS


	)

49 
	#ALONE_PASS_MEM_STAT


	)

50 
	#ALONE_FINAL_PASS_MEM_STAT
 0,0,0

	)

51 
	#ALONE_MEM_STAT_INFO


	)

52 
	#MEM_STAT_DECL


	)

53 
	#FINAL_MEM_STAT_DECL
 , 
ALONE_FINAL_MEM_STAT_DECL


	)

54 
	#PASS_MEM_STAT


	)

55 
	#FINAL_PASS_MEM_STAT
 , 
ALONE_FINAL_PASS_MEM_STAT


	)

56 
	#MEM_STAT_INFO
 
ALONE_MEM_STAT_INFO


	)

57 
	#ALONE_CXX_MEM_STAT_INFO


	)

58 
	#CXX_MEM_STAT_INFO


	)

61 
	gfun˘i⁄
;

64 
°©i°ics_óæy_öô
 ();

65 
°©i°ics_öô
 ();

66 
°©i°ics_föi
 ();

67 
°©i°ics_föi_∑ss
 ();

68 
°©i°ics_cou¡î_evít
 (
fun˘i⁄
 *, const *, );

69 
°©i°ics_hi°ogøm_evít
 (
fun˘i⁄
 *, const *, );

	@include/stmt.h

20 #i‚de‡
GCC_STMT_H


21 
	#GCC_STMT_H


	)

23 
ex∑nd_œbñ
 (
åì
);

24 
boﬁ
 
∑r£_ouçut_c⁄°øöt
 (const **, , , ,

25 
boﬁ
 *, bool *, bool *);

26 
boﬁ
 
∑r£_öput_c⁄°øöt
 (const **, , , , ,

27 c⁄° * c⁄° *, 
boﬁ
 *, bool *);

28 
åì
 
ªsﬁve_asm_›î™d_«mes
 (tree,Åree,Åree,Åree);

29 #ifde‡
HARD_CONST


31 
åì
 
åì_ovîœps_h¨d_ªg_£t
 (åì, 
HARD_REG_SET
 *);

	@include/stor-layout.h

20 #i‚de‡
GCC_STOR_LAYOUT_H


21 
	#GCC_STOR_LAYOUT_H


	)

23 
£t_mö_™d_max_vÆues_f‹_öãgøl_ty≥
 (
åì
, , 
boﬁ
);

24 
fixup_sig√d_ty≥
 (
åì
);

25 
öã∫Æ_ª„ªn˚_ty≥s
 ();

26 
upd©e_Æignmít_f‹_fõld
 (
ªc‹d_œyout_öfo
, 
åì
,

28 
ªc‹d_œyout_öfo
 
°¨t_ªc‹d_œyout
 (
åì
);

29 
åì
 
bô_‰om_pos
 (tree,Åree);

30 
åì
 
byã_‰om_pos
 (tree,Åree);

31 
pos_‰om_bô
 (
åì
 *,Åree *, ,Åree);

32 
n‹mÆize_off£t
 (
åì
 *,Åree *, );

33 
åì
 
æi_size_unô_so_Ár
 (
ªc‹d_œyout_öfo
);

34 
åì
 
æi_size_so_Ár
 (
ªc‹d_œyout_öfo
);

35 
n‹mÆize_æi
 (
ªc‹d_œyout_öfo
);

36 
∂a˚_fõld
 (
ªc‹d_œyout_öfo
, 
åì
);

37 
compuã_ªc‹d_mode
 (
åì
);

38 
föish_ªc‹d_œyout
 (
ªc‹d_œyout_öfo
, );

39 
ñemít_¥ecisi⁄
 (
c⁄°_åì
);

40 
föÆize_size_fun˘i⁄s
 ();

41 
fixup_unsig√d_ty≥
 (
åì
);

42 
öôülize_sizëy≥s
 ();

46 
föish_buûtö_°ru˘
 (
åì
, const *,Åree,Åree);

55 
œyout_de˛
 (
åì
, );

60 
œyout_ty≥
 (
åì
);

63 
åì
 
make_‰a˘_ty≥
 (, , );

64 
åì
 
make_accum_ty≥
 (, , );

66 
	#make_sig√d_‰a˘_ty≥
(
P
Ë
	`make_‰a˘_ty≥
 (P, 0, 0)

	)

67 
	#make_unsig√d_‰a˘_ty≥
(
P
Ë
	`make_‰a˘_ty≥
 (P, 1, 0)

	)

68 
	#make_ßt_sig√d_‰a˘_ty≥
(
P
Ë
	`make_‰a˘_ty≥
 (P, 0, 1)

	)

69 
	#make_ßt_unsig√d_‰a˘_ty≥
(
P
Ë
	`make_‰a˘_ty≥
 (P, 1, 1)

	)

70 
	#make_sig√d_accum_ty≥
(
P
Ë
	`make_accum_ty≥
 (P, 0, 0)

	)

71 
	#make_unsig√d_accum_ty≥
(
P
Ë
	`make_accum_ty≥
 (P, 1, 0)

	)

72 
	#make_ßt_sig√d_accum_ty≥
(
P
Ë
	`make_accum_ty≥
 (P, 0, 1)

	)

73 
	#make_ßt_unsig√d_accum_ty≥
(
P
Ë
	`make_accum_ty≥
 (P, 1, 1)

	)

75 
	#make_‹_ªu£_sig√d_‰a˘_ty≥
(
P
) \

76 
	`make_‹_ªu£_‰a˘_ty≥
 (
P
, 0, 0)

	)

77 
	#make_‹_ªu£_unsig√d_‰a˘_ty≥
(
P
) \

78 
	`make_‹_ªu£_‰a˘_ty≥
 (
P
, 1, 0)

	)

79 
	#make_‹_ªu£_ßt_sig√d_‰a˘_ty≥
(
P
) \

80 
	`make_‹_ªu£_‰a˘_ty≥
 (
P
, 0, 1)

	)

81 
	#make_‹_ªu£_ßt_unsig√d_‰a˘_ty≥
(
P
) \

82 
	`make_‹_ªu£_‰a˘_ty≥
 (
P
, 1, 1)

	)

83 
	#make_‹_ªu£_sig√d_accum_ty≥
(
P
) \

84 
	`make_‹_ªu£_accum_ty≥
 (
P
, 0, 0)

	)

85 
	#make_‹_ªu£_unsig√d_accum_ty≥
(
P
) \

86 
	`make_‹_ªu£_accum_ty≥
 (
P
, 1, 0)

	)

87 
	#make_‹_ªu£_ßt_sig√d_accum_ty≥
(
P
) \

88 
	`make_‹_ªu£_accum_ty≥
 (
P
, 0, 1)

	)

89 
	#make_‹_ªu£_ßt_unsig√d_accum_ty≥
(
P
) \

90 
	`make_‹_ªu£_accum_ty≥
 (
P
, 1, 1)

	)

92 
åì
 
make_sig√d_ty≥
 ();

93 
åì
 
make_unsig√d_ty≥
 ();

99 
machöe_mode
 
mode_f‹_size_åì
 (
c⁄°_åì
, 
mode_˛ass
, );

103 
ªœyout_de˛
 (
åì
);

110 
åì
 
v¨übÀ_size
 (tree);

113 
machöe_mode
 
ve˘‹_ty≥_mode
 (
c⁄°_åì
);

	@include/stringpool.h

20 #i‚de‡
GCC_STRINGPOOL_H


21 
	#GCC_STRINGPOOL_H


	)

25 
åì
 
gë_idítifõr
 (const *);

30 
åì
 
maybe_gë_idítifõr
 (const *);

34 
åì
 
gë_idítifõr_wôh_Àngth
 (c⁄° *, 
size_t
);

36 #i‡
GCC_VERSION
 >= 3000

37 
	#gë_idítifõr
(
°r
) \

38 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

39 ? 
	`gë_idítifõr_wôh_Àngth
 ((
°r
), 
	`°æí
 (str)) \

40 : 
	`gë_idítifõr
 (
°r
))

	)

	@include/symtab.h

18 #i‚de‡
LIBCPP_SYMTAB_H


19 
	#LIBCPP_SYMTAB_H


	)

21 
	~"ob°ack.h
"

23 #i‚de‡
GTY


24 
	#GTY
(
x
Ë

	)

29 
ht_idítifõr
 
	tht_idítifõr
;

30 
ht_idítifõr
 *
	tht_idítifõr_±r
;

31 
GTY
(()Ë
	ght_idítifõr
 {

32 c⁄° *
	g°r
;

33 
	gÀn
;

34 
	ghash_vÆue
;

37 
	#HT_LEN
(
NODE
Ë((NODE)->
Àn
)

	)

38 
	#HT_STR
(
NODE
Ë((NODE)->
°r
)

	)

40 
ht
 
	t˝p_hash_èbÀ
;

41 
ht_idítifõr
 *
	thashnode
;

43 
	eht_lookup_›ti⁄
 {
	mHT_NO_INSERT
 = 0, 
	mHT_ALLOC
};

46 
	sht


49 
ob°ack
 
	m°ack
;

51 
hashnode
 *
	míåõs
;

53 
hashnode
 (*
Æloc_node
Ë(
	m˝p_hash_èbÀ
 *);

56 * (*
	mÆloc_subobje˘
Ë(
	msize_t
);

58 
	mn¶Ÿs
;

59 
	m√Àmíts
;

62 
˝p_ªadî
 *
	mpfûe
;

65 
	m£¨ches
;

66 
	mcﬁlisi⁄s
;

69 
boﬁ
 
	míåõs_ow√d
;

73 
˝p_hash_èbÀ
 *
ht_¸óã
 (
‹dî
);

76 
ht_de°roy
 (
˝p_hash_èbÀ
 *);

78 
hashnode
 
ht_lookup
 (
˝p_hash_èbÀ
 *, const *,

79 
size_t
, 
ht_lookup_›ti⁄
);

80 
hashnode
 
ht_lookup_wôh_hash
 (
˝p_hash_èbÀ
 *, const *,

81 
size_t
, ,

82 
ht_lookup_›ti⁄
);

83 
	#HT_HASHSTEP
(
r
, 
c
Ë(‘Ë* 67 + ((cË- 113));

	)

84 
	#HT_HASHFINISH
(
r
, 
Àn
Ë(‘Ë+ (Àn))

	)

89 (*
	tht_cb
Ë(
	t˝p_ªadî
 *, 
	thashnode
, const *);

90 
	`ht_f‹Æl
 (
˝p_hash_èbÀ
 *, 
ht_cb
, const *);

94 
	`ht_purge
 (
˝p_hash_èbÀ
 *, 
ht_cb
, const *);

97 
	`ht_lﬂd
 (
˝p_hash_èbÀ
 *
ht
, 
hashnode
 *
íåõs
,

98 
n¶Ÿs
, 
√Àmíts
, 
boﬁ
 
own
);

101 
	`ht_dump_°©i°ics
 (
˝p_hash_èbÀ
 *);

	@include/system.h

22 #i‚de‡
GCC_SYSTEM_H


23 
	#GCC_SYSTEM_H


	)

26 
	~<°d¨g.h
>

28 #i‚de‡
va_c›y


29 #ifde‡
__va_c›y


30 
	#va_c›y
(
d
,
s
Ë
	`__va_c›y
 (d, s)

	)

32 
	#va_c›y
(
d
,
s
Ë((dË(s))

	)

36 #ifde‡
HAVE_STDDEF_H


37 
	~<°ddef.h
>

40 
	~<°dio.h
>

43 #i‚de‡
NULL


44 
	#NULL
 0

	)

53 #unde‡
f›í


54 #unde‡
‰e›í


56 
	#f›í
(
PATH
, 
MODE
Ë
	`f›í_u∆ocked
 (PATH, MODE)

	)

57 
	#fd›í
(
FILDES
, 
MODE
Ë
	`fd›í_u∆ocked
 (FILDES, MODE)

	)

58 
	#‰e›í
(
PATH
, 
MODE
, 
STREAM
Ë
	`‰e›í_u∆ocked
 (PATH, MODE, STREAM)

	)

73 #i‡
deföed
 
HAVE_DECL_PUTC_UNLOCKED
 && HAVE_DECL_PUTC_UNLOCKED

75 #ifde‡
HAVE_PUTC_UNLOCKED


76 #unde‡
putc


77 
	#putc
(
C
, 
Såóm
Ë
	`putc_u∆ocked
 (C, Såóm)

	)

79 #ifde‡
HAVE_PUTCHAR_UNLOCKED


80 #unde‡
putch¨


81 
	#putch¨
(
C
Ë
	`putch¨_u∆ocked
 (C)

	)

83 #ifde‡
HAVE_GETC_UNLOCKED


84 #unde‡
gëc


85 
	#gëc
(
Såóm
Ë
	`gëc_u∆ocked
 (Såóm)

	)

87 #ifde‡
HAVE_GETCHAR_UNLOCKED


88 #unde‡
gëch¨


89 
	#gëch¨
(Ë
	`gëch¨_u∆ocked
 ()

	)

91 #ifde‡
HAVE_FPUTC_UNLOCKED


92 #unde‡
Âutc


93 
	#Âutc
(
C
, 
Såóm
Ë
	`Âutc_u∆ocked
 (C, Såóm)

	)

96 #ifde‡
__˝lu•lus


100 #ifde‡
HAVE_CLEARERR_UNLOCKED


101 #unde‡
˛óªº


102 
	#˛óªº
(
Såóm
Ë
	`˛óªº_u∆ocked
 (Såóm)

	)

103 #i‡
deföed
 (
HAVE_DECL_CLEARERR_UNLOCKED
) && !HAVE_DECL_CLEARERR_UNLOCKED

104 
˛óªº_u∆ocked
 (
FILE
 *);

107 #ifde‡
HAVE_FEOF_UNLOCKED


108 #unde‡
„of


109 
	#„of
(
Såóm
Ë
	`„of_u∆ocked
 (Såóm)

	)

110 #i‡
deföed
 (
HAVE_DECL_FEOF_UNLOCKED
) && !HAVE_DECL_FEOF_UNLOCKED

111 
„of_u∆ocked
 (
FILE
 *);

114 #ifde‡
HAVE_FILENO_UNLOCKED


115 #unde‡
fûío


116 
	#fûío
(
Såóm
Ë
	`fûío_u∆ocked
 (Såóm)

	)

117 #i‡
deföed
 (
HAVE_DECL_FILENO_UNLOCKED
) && !HAVE_DECL_FILENO_UNLOCKED

118 
fûío_u∆ocked
 (
FILE
 *);

121 #ifde‡
HAVE_FFLUSH_UNLOCKED


122 #unde‡
fÊush


123 
	#fÊush
(
Såóm
Ë
	`fÊush_u∆ocked
 (Såóm)

	)

124 #i‡
deföed
 (
HAVE_DECL_FFLUSH_UNLOCKED
) && !HAVE_DECL_FFLUSH_UNLOCKED

125 
fÊush_u∆ocked
 (
FILE
 *);

128 #ifde‡
HAVE_FGETC_UNLOCKED


129 #unde‡
fgëc


130 
	#fgëc
(
Såóm
Ë
	`fgëc_u∆ocked
 (Såóm)

	)

131 #i‡
deföed
 (
HAVE_DECL_FGETC_UNLOCKED
) && !HAVE_DECL_FGETC_UNLOCKED

132 
fgëc_u∆ocked
 (
FILE
 *);

135 #ifde‡
HAVE_FGETS_UNLOCKED


136 #unde‡
fgës


137 
	#fgës
(
S
, 
n
, 
Såóm
Ë
	`fgës_u∆ocked
 (S,Ç, Såóm)

	)

138 #i‡
deföed
 (
HAVE_DECL_FGETS_UNLOCKED
) && !HAVE_DECL_FGETS_UNLOCKED

139 *
fgës_u∆ocked
 (*, , 
FILE
 *);

142 #ifde‡
HAVE_FPUTS_UNLOCKED


143 #unde‡
Âuts


144 
	#Âuts
(
Såög
, 
Såóm
Ë
	`Âuts_u∆ocked
 (Såög, Såóm)

	)

145 #i‡
deföed
 (
HAVE_DECL_FPUTS_UNLOCKED
) && !HAVE_DECL_FPUTS_UNLOCKED

146 
Âuts_u∆ocked
 (c⁄° *, 
FILE
 *);

149 #ifde‡
HAVE_FERROR_UNLOCKED


150 #unde‡
„º‹


151 
	#„º‹
(
Såóm
Ë
	`„º‹_u∆ocked
 (Såóm)

	)

152 #i‡
deföed
 (
HAVE_DECL_FERROR_UNLOCKED
) && !HAVE_DECL_FERROR_UNLOCKED

153 
„º‹_u∆ocked
 (
FILE
 *);

156 #ifde‡
HAVE_FREAD_UNLOCKED


157 #unde‡
‰ód


158 
	#‰ód
(
På
, 
Size
, 
N
, 
Såóm
Ë
	`‰ód_u∆ocked
 (På, Size, N, Såóm)

	)

159 #i‡
deföed
 (
HAVE_DECL_FREAD_UNLOCKED
) && !HAVE_DECL_FREAD_UNLOCKED

160 
size_t
 
‰ód_u∆ocked
 (*, size_t, size_t, 
FILE
 *);

163 #ifde‡
HAVE_FWRITE_UNLOCKED


164 #unde‡
fwrôe


165 
	#fwrôe
(
På
, 
Size
, 
N
, 
Såóm
Ë
	`fwrôe_u∆ocked
 (På, Size, N, Såóm)

	)

166 #i‡
deföed
 (
HAVE_DECL_FWRITE_UNLOCKED
) && !HAVE_DECL_FWRITE_UNLOCKED

167 
size_t
 
fwrôe_u∆ocked
 (c⁄° *, size_t, size_t, 
FILE
 *);

170 #ifde‡
HAVE_FPRINTF_UNLOCKED


171 #unde‡
Ârötf


174 
	#Ârötf
 
Ârötf_u∆ocked


	)

175 #i‡
deföed
 (
HAVE_DECL_FPRINTF_UNLOCKED
) && !HAVE_DECL_FPRINTF_UNLOCKED

176 
Ârötf_u∆ocked
 (
FILE
 *, const *, ...);

180 #ifde‡
__˝lu•lus


188 #unde‡
‰ód_u∆ocked


189 #unde‡
fwrôe_u∆ocked


194 
	~"ß„-˘y≥.h
"

196 
	~<sys/ty≥s.h
>

198 
	~<î∫o.h
>

200 #i‡!
deföed
 (
î∫o
Ë&& deföed (
HAVE_DECL_ERRNO
) && !HAVE_DECL_ERRNO

201 
î∫o
;

204 #ifde‡
__˝lu•lus


205 
	~<c°rög
>

210 
	#__NO_STRING_INLINES


	)

212 #ifde‡
STRING_WITH_STRINGS


213 
	~<°rög.h
>

214 
	~<°rögs.h
>

216 #ifde‡
HAVE_STRING_H


217 
	~<°rög.h
>

219 #ifde‡
HAVE_STRINGS_H


220 
	~<°rögs.h
>

225 #ifde‡
HAVE_STDLIB_H


226 
	~<°dlib.h
>

233 #ifde‡
__˝lu•lus


234 
	~<c°dlib
>

238 #unde‡
vec_‰ì


243 #i‚de‡
SUCCESS_EXIT_CODE


244 #ifde‡
EXIT_SUCCESS


245 
	#SUCCESS_EXIT_CODE
 
EXIT_SUCCESS


	)

247 
	#SUCCESS_EXIT_CODE
 0

	)

251 #i‚de‡
FATAL_EXIT_CODE


252 #ifde‡
EXIT_FAILURE


253 
	#FATAL_EXIT_CODE
 
EXIT_FAILURE


	)

255 
	#FATAL_EXIT_CODE
 1

	)

259 
	#ICE_EXIT_CODE
 4

	)

261 #ifde‡
HAVE_UNISTD_H


262 
	~<uni°d.h
>

265 #ifde‡
HAVE_SYS_PARAM_H


266 
	~<sys/∑øm.h
>

268 #unde‡
PREFETCH


269 #unde‡
m_¶Ÿ


272 #i‡
HAVE_LIMITS_H


273 
	~<limôs.h
>

283 
	#IN_RANGE
(
VALUE
, 
LOWER
, 
UPPER
) \

284 ((
HOST_WIDE_INT
Ë(
VALUE
Ë- (HOST_WIDE_INTË(
LOWER
) \

285 <(
HOST_WIDE_INT
Ë(
UPPER
Ë- (HOST_WIDE_INTË(
LOWER
))

	)

291 
	#INTTYPE_SIGNED
(
t
Ë(! (—Ë0 < (tË-1))

	)

294 
	#INTTYPE_MINIMUM
(
t
Ë(—Ë(
	`INTTYPE_SIGNED
 (t) \

295 ? ~ (
t
Ë0 << ( (tË* 
CHAR_BIT
 - 1Ë: (tË0))

	)

296 
	#INTTYPE_MAXIMUM
(
t
Ë(—Ë(~ (tË0 - 
	`INTTYPE_MINIMUM
 (t)))

	)

299 #i‚de‡
UCHAR_MAX


300 
	#UCHAR_MAX
 
	`INTTYPE_MAXIMUM
 ()

	)

303 #ifde‡
TIME_WITH_SYS_TIME


304 
	~<sys/time.h
>

305 
	~<time.h
>

307 #i‡
HAVE_SYS_TIME_H


308 
	~<sys/time.h
>

310 #ifde‡
HAVE_TIME_H


311 
	~<time.h
>

316 #ifde‡
HAVE_FCNTL_H


317 
	~<f˙é.h
>

319 #ifde‡
HAVE_SYS_FILE_H


320 
	~<sys/fûe.h
>

324 #i‚de‡
SEEK_SET


325 
	#SEEK_SET
 0

	)

326 
	#SEEK_CUR
 1

	)

327 
	#SEEK_END
 2

	)

329 #i‚de‡
F_OK


330 
	#F_OK
 0

	)

331 
	#X_OK
 1

	)

332 
	#W_OK
 2

	)

333 
	#R_OK
 4

	)

335 #i‚de‡
O_RDONLY


336 
	#O_RDONLY
 0

	)

338 #i‚de‡
O_WRONLY


339 
	#O_WRONLY
 1

	)

341 #i‚de‡
O_BINARY


342 
	#O_BINARY
 0

	)

349 #unde‡
MIN


350 #unde‡
MAX


351 
	#MIN
(
X
,
Y
Ë((XË< (YË? (XË: (Y))

	)

352 
	#MAX
(
X
,
Y
Ë((XË> (YË? (XË: (Y))

	)

355 
	#CEIL
(
x
,
y
Ë(((xË+ (yË- 1Ë/ (y))

	)

357 #ifde‡
HAVE_SYS_WAIT_H


358 
	~<sys/waô.h
>

361 #i‚de‡
WIFSIGNALED


362 
	#WIFSIGNALED
(
S
Ë(((SË& 0xffË!0 && ((SË& 0xffË!0x7f)

	)

364 #i‚de‡
WTERMSIG


365 
	#WTERMSIG
(
S
Ë((SË& 0x7f)

	)

367 #i‚de‡
WIFEXITED


368 
	#WIFEXITED
(
S
Ë(((SË& 0xffË=0)

	)

370 #i‚de‡
WEXITSTATUS


371 
	#WEXITSTATUS
(
S
Ë(((SË& 0xff00Ë>> 8)

	)

373 #i‚de‡
WSTOPSIG


374 
	#WSTOPSIG
 
WEXITSTATUS


	)

376 #i‚de‡
WCOREDUMP


377 
	#WCOREDUMP
(
S
Ë((SË& 
WCOREFLG
)

	)

379 #i‚de‡
WCOREFLG


380 
	#WCOREFLG
 0200

	)

383 
	~<sig«l.h
>

384 #i‡!
deföed
 (
SIGCHLD
Ë&& deföed (
SIGCLD
)

385 
	#SIGCHLD
 
SIGCLD


	)

388 #ifde‡
HAVE_SYS_MMAN_H


389 
	~<sys/mm™.h
>

392 #i‚de‡
MAP_FAILED


393 
	#MAP_FAILED
 ((*)-1)

	)

396 #i‡!
deföed
 (
MAP_ANONYMOUS
Ë&& deföed (
MAP_ANON
)

397 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

400 #ifde‡
HAVE_SYS_RESOURCE_H


401 
	~<sys/ªsour˚.h
>

404 #ifde‡
HAVE_SYS_TIMES_H


405 
	~<sys/times.h
>

413 #ifde‡
__˝lu•lus


417 #i‡
deföed
 (
HAVE_DECL_ATOF
) && !HAVE_DECL_ATOF

418 
©of
 (const *);

421 #i‡
deföed
 (
HAVE_DECL_ATOL
) && !HAVE_DECL_ATOL

422 
©ﬁ
 (const *);

425 #i‡
deföed
 (
HAVE_DECL_FREE
) && !HAVE_DECL_FREE

426 
‰ì
 (*);

429 #i‡
deföed
 (
HAVE_DECL_GETCWD
) && !HAVE_DECL_GETCWD

430 *
gëcwd
 (*, 
size_t
);

433 #i‡
deföed
 (
HAVE_DECL_GETENV
) && !HAVE_DECL_GETENV

434 *
gëív
 (const *);

437 #i‡
deföed
 (
HAVE_DECL_GETOPT
) && !HAVE_DECL_GETOPT

438 
gë›t
 (, * const *, const *);

441 #i‡
deföed
 (
HAVE_DECL_GETPAGESIZE
) && !HAVE_DECL_GETPAGESIZE

442 
gë∑gesize
 ();

445 #i‡
deföed
 (
HAVE_DECL_GETWD
) && !HAVE_DECL_GETWD

446 *
gëwd
 (*);

449 #i‡
deföed
 (
HAVE_DECL_SBRK
) && !HAVE_DECL_SBRK

450 *
sbrk
 ();

453 #i‡
deföed
 (
HAVE_DECL_STRSTR
) && !HAVE_DECL_STRSTR

454 *
°r°r
 (const *, const *);

457 #i‡
deföed
 (
HAVE_DECL_STPCPY
) && !HAVE_DECL_STPCPY

458 *
°p˝y
 (*, const *);

461 #ifde‡
__˝lu•lus


465 #ifde‡
HAVE_MALLOC_H


466 
	~<mÆloc.h
>

469 #ifde‡
__˝lu•lus


473 #i‡
deföed
 (
HAVE_DECL_MALLOC
) && !HAVE_DECL_MALLOC

474 *
mÆloc
 (
size_t
);

477 #i‡
deföed
 (
HAVE_DECL_CALLOC
) && !HAVE_DECL_CALLOC

478 *
ˇŒoc
 (
size_t
, size_t);

481 #i‡
deföed
 (
HAVE_DECL_REALLOC
) && !HAVE_DECL_REALLOC

482 *
ªÆloc
 (*, 
size_t
);

485 #ifde‡
__˝lu•lus


489 #ifde‡
HAVE_STDINT_H


490 
	~<°döt.h
>

493 #ifde‡
HAVE_INTTYPES_H


494 
	~<öây≥s.h
>

497 #ifde‡
__˝lu•lus


503 #i‡!
deföed
 (
HAVE_STRSIGNAL
) \

504 || (
deföed
 (
HAVE_DECL_STRSIGNAL
) && !HAVE_DECL_STRSIGNAL)

505 #i‚de‡
°rsig«l


506 c⁄° *
°rsig«l
 ();

510 #ifde‡
HAVE_GETRLIMIT


511 #i‡
deföed
 (
HAVE_DECL_GETRLIMIT
) && !HAVE_DECL_GETRLIMIT

512 #i‚de‡
gëæimô


513 
	gæimô
;

514 
gëæimô
 (, 
æimô
 *);

519 #ifde‡
HAVE_SETRLIMIT


520 #i‡
deföed
 (
HAVE_DECL_SETRLIMIT
) && !HAVE_DECL_SETRLIMIT

521 #i‚de‡
£ålimô


522 
	gæimô
;

523 
£ålimô
 (, c⁄° 
æimô
 *);

528 #i‡
deföed
 (
HAVE_DECL_ABORT
) && !HAVE_DECL_ABORT

529 
ab‹t
 ();

532 #i‡
deföed
 (
HAVE_DECL_SNPRINTF
) && !HAVE_DECL_SNPRINTF

533 
¢¥ötf
 (*, 
size_t
, const *, ...);

536 #i‡
deföed
 (
HAVE_DECL_VSNPRINTF
) && !HAVE_DECL_VSNPRINTF

537 
v¢¥ötf
 (*, 
size_t
, c⁄° *, 
va_li°
);

540 #ifde‡
__˝lu•lus


545 #i‡!
deföed
(
HAVE_DESIGNATED_INITIALIZERS
)

546 
	#HAVE_DESIGNATED_INITIALIZERS
 \

547 (((
GCC_VERSION
 >2007Ë|| (
__STDC_VERSION__
 >= 199901L)) \

548 && !
	`deföed
(
__˝lu•lus
))

	)

551 #i‡!
deföed
(
HAVE_DESIGNATED_UNION_INITIALIZERS
)

552 
	#HAVE_DESIGNATED_UNION_INITIALIZERS
 \

553 (((
GCC_VERSION
 >2007Ë|| (
__STDC_VERSION__
 >= 199901L)) \

554 && (!
	`deföed
(
__˝lu•lus
Ë|| (
GCC_VERSION
 >4007)))

	)

557 #i‡
HAVE_SYS_STAT_H


558 
	~<sys/°©.h
>

562 #i‚de‡
S_ISREG


563 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

567 #i‚de‡
S_ISDIR


568 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

572 #i‚de‡
S_ISCHR


573 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

577 #i‚de‡
S_ISBLK


578 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

582 #i‚de‡
S_ISSOCK


583 #ifde‡
S_IFSOCK


584 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

586 
	#S_ISSOCK
(
m
Ë0

	)

591 #i‚de‡
S_ISFIFO


592 #ifde‡
S_IFIFO


593 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

595 
	#S_ISFIFO
(
m
Ë0

	)

600 #i‚de‡
STDIN_FILENO


601 
	#STDIN_FILENO
 0

	)

603 #i‚de‡
STDOUT_FILENO


604 
	#STDOUT_FILENO
 1

	)

606 #i‚de‡
STDERR_FILENO


607 
	#STDERR_FILENO
 2

	)

611 #ifde‡
MKDIR_TAKES_ONE_ARG


612 
	#mkdú
(
a
,
b
Ë
	`mkdú
 (a)

	)

615 #i‚de‡
HAVE_KILL


616 
	#kûl
(
p
,
s
Ë
	`øi£
 (s)

	)

620 #i‚de‡
HOST_PTR_PRINTF


621 
	#HOST_PTR_PRINTF
 "%p"

	)

625 #i‚de‡
PATH_SEPARATOR


626 
	#PATH_SEPARATOR
 ':'

	)

630 
	~"fûíames.h
"

633 #i‚de‡
DIR_SEPARATOR


634 
	#DIR_SEPARATOR
 '/'

	)

635 #ifde‡
HAVE_DOS_BASED_FILE_SYSTEM


636 
	#DIR_SEPARATOR_2
 '\\'

	)

640 #i‡
deföed
 (
ENABLE_PLUGIN
Ë&& deföed (
HAVE_DLFCN_H
)

642 
	~<dlf˙.h
>

646 #i‚de‡
GENERATOR_FILE


647 
	~<gmp.h
>

651 
	~"libibîty.h
"

653 #unde‡
FFS


654 #unde‡
FLOAT


655 #unde‡
ABS


656 #unde‡
PC


661 #i‚de‡
HOST_BIT_BUCKET


662 
	#HOST_BIT_BUCKET
 "/dev/nuŒ"

	)

665 #i‚de‡
off£tof


666 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *Ë0)->MEMBER)

	)

670 #i‡(
GCC_VERSION
 < 2007)

671 #i‚de‡
__FUNCTION__


672 
	#__FUNCTION__
 "?"

	)

679 #i‡(
GCC_VERSION
 < 3000)

680 
	#__buûtö_ex≥˘
(
a
, 
b
Ë◊)

	)

685 
Áncy_ab‹t
 (c⁄° *, , c⁄° *Ë
ATTRIBUTE_NORETURN
;

686 
	#ab‹t
(Ë
	`Áncy_ab‹t
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
)

	)

689 #i‡
ENABLE_ASSERT_CHECKING


690 
	#gcc_as£π
(
EXPR
) \

691 (()(!(
EXPR
Ë? 
	`Áncy_ab‹t
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
), 0 : 0))

	)

692 #ñi‡(
GCC_VERSION
 >= 4005)

693 
	#gcc_as£π
(
EXPR
) \

694 (()(
	`__buûtö_ex≥˘
 (!(
EXPR
), 0Ë? 
	`__buûtö_uƒóchabÀ
 (), 0 : 0))

	)

697 
	#gcc_as£π
(
EXPR
Ë(()(0 && (EXPR)))

	)

700 #ifde‡
ENABLE_CHECKING


701 
	#gcc_checkög_as£π
(
EXPR
Ë
	`gcc_as£π
 (EXPR)

	)

703 
	#gcc_checkög_as£π
(
EXPR
Ë(()(0 && (EXPR)))

	)

708 #i‡(
GCC_VERSION
 >4005Ë&& !
ENABLE_ASSERT_CHECKING


709 
	#gcc_uƒóchabÀ
(Ë
	`__buûtö_uƒóchabÀ
 ()

	)

711 
	#gcc_uƒóchabÀ
(Ë(
	`Áncy_ab‹t
 (
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

720 #unde‡
TRUE


721 #unde‡
FALSE


723 #ifde‡
__˝lu•lus


725 
	#TRUE
 
åue


	)

726 
	#FALSE
 
Ál£


	)

728 #unde‡
boﬁ


729 #unde‡
åue


730 #unde‡
Ál£


732 
	#boﬁ
 

	)

733 
	#åue
 1

	)

734 
	#Ál£
 0

	)

737 
	#TRUE
 
åue


	)

738 
	#FALSE
 
Ál£


	)

742 
	#BOOL_BITFIELD
 

	)

755 
	#ªÆly_ˇŒ_mÆloc
 
mÆloc


	)

756 
	#ªÆly_ˇŒ_ˇŒoc
 
ˇŒoc


	)

757 
	#ªÆly_ˇŒ_ªÆloc
 
ªÆloc


	)

759 #i‡
deföed
(
FLEX_SCANNER
Ë|| deföed(
YYBISON
Ë|| deföed(
YYBYACC
)

762 
	#mÆloc
 
xmÆloc


	)

763 
	#ªÆloc
 
xªÆloc


	)

766 #i‡(
GCC_VERSION
 >= 3000)

772 #ifde‡
IN_GCC


773 #unde‡
ˇŒoc


774 #unde‡
°rdup


775 #¥agm®
GCC
 
pois⁄
 
ˇŒoc
 
°rdup


777 #i‡!
deföed
(
FLEX_SCANNER
Ë&& !deföed(
YYBISON
)

778 #unde‡
mÆloc


779 #unde‡
ªÆloc


780 #¥agm®
GCC
 
pois⁄
 
mÆloc
 
ªÆloc


786 #unde‡
°ªº‹


787 #¥agm®
GCC
 
pois⁄
 
°ªº‹


791 #unde‡
loc_t


792 #¥agm®
GCC
 
pois⁄
 
loc_t


795 #¥agm®
GCC
 
pois⁄
 
ASM_OPEN_PAREN
 
ASM_CLOSE_PAREN
 \

796 
FUNCTION_PROLOGUE
 
	gFUNCTION_EPILOGUE
 \

797 
FUNCTION_END_PROLOGUE
 
	gFUNCTION_BEGIN_EPILOGUE
 \

798 
DECL_MACHINE_ATTRIBUTES
 
COMP_TYPE_ATTRIBUTES
 
	gINSERT_ATTRIBUTES
 \

799 
VALID_MACHINE_DECL_ATTRIBUTE
 
	gVALID_MACHINE_TYPE_ATTRIBUTE
 \

800 
SET_DEFAULT_TYPE_ATTRIBUTES
 
	gSET_DEFAULT_DECL_ATTRIBUTES
 \

801 
MERGE_MACHINE_TYPE_ATTRIBUTES
 
	gMERGE_MACHINE_DECL_ATTRIBUTES
 \

802 
MD_INIT_BUILTINS
 
MD_EXPAND_BUILTIN
 
	gASM_OUTPUT_CONSTRUCTOR
 \

803 
ASM_OUTPUT_DESTRUCTOR
 
SIGNED_CHAR_SPEC
 
	gMAX_CHAR_TYPE_SIZE
 \

804 
WCHAR_UNSIGNED
 
UNIQUE_SECTION
 
SELECT_SECTION
 
	gSELECT_RTX_SECTION
 \

805 
ENCODE_SECTION_INFO
 
STRIP_NAME_ENCODING
 
	gASM_GLOBALIZE_LABEL
 \

806 
ASM_OUTPUT_MI_THUNK
 
CONST_COSTS
 
RTX_COSTS
 
	gDEFAULT_RTX_COSTS
 \

807 
ADDRESS_COST
 
MACHINE_DEPENDENT_REORG
 
ASM_FILE_START
 
	gASM_FILE_END
 \

808 
ASM_SIMPLIFY_DWARF_ADDR
 
INIT_TARGET_OPTABS
 
	gINIT_SUBTARGET_OPTABS
 \

809 
INIT_GOFAST_OPTABS
 
MULSI3_LIBCALL
 
MULDI3_LIBCALL
 
	gDIVSI3_LIBCALL
 \

810 
DIVDI3_LIBCALL
 
UDIVSI3_LIBCALL
 
UDIVDI3_LIBCALL
 
	gMODSI3_LIBCALL
 \

811 
MODDI3_LIBCALL
 
UMODSI3_LIBCALL
 
UMODDI3_LIBCALL
 
	gBUILD_VA_LIST_TYPE
 \

812 
PRETEND_OUTGOING_VARARGS_NAMED
 
	gSTRUCT_VALUE_INCOMING_REGNUM
 \

813 
ASM_OUTPUT_SECTION_NAME
 
PROMOTE_FUNCTION_ARGS
 
	gPROMOTE_FUNCTION_MODE
 \

814 
STRUCT_VALUE_INCOMING
 
	gSTRICT_ARGUMENT_NAMING
 \

815 
PROMOTE_FUNCTION_RETURN
 
PROMOTE_PROTOTYPES
 
	gSTRUCT_VALUE_REGNUM
 \

816 
SETUP_INCOMING_VARARGS
 
	gEXPAND_BUILTIN_SAVEREGS
 \

817 
DEFAULT_SHORT_ENUMS
 
SPLIT_COMPLEX_ARGS
 
	gMD_ASM_CLOBBERS
 \

818 
HANDLE_PRAGMA_REDEFINE_EXTNAME
 
	gHANDLE_PRAGMA_EXTERN_PREFIX
 \

819 
MUST_PASS_IN_STACK
 
	gFUNCTION_ARG_PASS_BY_REFERENCE
 \

820 
VECTOR_MODE_SUPPORTED_P
 
	gTARGET_SUPPORTS_HIDDEN
 \

821 
FUNCTION_ARG_PARTIAL_NREGS
 
	gASM_OUTPUT_DWARF_DTPREL
 \

822 
ALLOCATE_INITIAL_VALUE
 
LEGITIMIZE_ADDRESS
 
	gFRAME_POINTER_REQUIRED
 \

823 
CAN_ELIMINATE
 
TRAMPOLINE_TEMPLATE
 
	gINITIALIZE_TRAMPOLINE
 \

824 
TRAMPOLINE_ADJUST_ADDRESS
 
STATIC_CHAIN
 
	gSTATIC_CHAIN_INCOMING
 \

825 
RETURN_POPS_ARGS
 
UNITS_PER_SIMD_WORD
 
	gOVERRIDE_OPTIONS
 \

826 
OPTIMIZATION_OPTIONS
 
	gCLASS_LIKELY_SPILLED_P
 \

827 
USING_SJLJ_EXCEPTIONS
 
	gTARGET_UNWIND_INFO
 \

828 
LABEL_ALIGN_MAX_SKIP
 
	gLOOP_ALIGN_MAX_SKIP
 \

829 
LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP
 
	gJUMP_ALIGN_MAX_SKIP
 \

830 
CAN_DEBUG_WITHOUT_FP
 
	gUNLIKELY_EXECUTED_TEXT_SECTION_NAME
 \

831 
HOT_TEXT_SECTION_NAME
 
LEGITIMATE_CONSTANT_P
 
	gALWAYS_STRIP_DOTDOT
 \

832 
OUTPUT_ADDR_CONST_EXTRA
 
SMALL_REGISTER_CLASSES
 
	gASM_OUTPUT_IDENT
 \

833 
ASM_BYTE_OP
 
	gMEMBER_TYPE_FORCES_BLK


837 #¥agm®
GCC
 
pois⁄
 
DECLARE_LIBRARY_RENAMES
 
LIBGCC2_GNU_PREFIX
 \

838 
MD_UNWIND_SUPPORT
 
MD_FROB_UPDATE_CONTEXT
 
	gENABLE_EXECUTE_STACK
 \

839 
REG_VALUE_IN_UNWIND_CONTEXT
 
	gASSUME_EXTENDED_UNWIND_CONTEXT


844 #¥agm®
GCC
 
pois⁄
 
INT_ASM_OP
 
ASM_OUTPUT_EH_REGION_BEG
 
CPP_PREDEFINES
 \

845 
ASM_OUTPUT_EH_REGION_END
 
ASM_OUTPUT_LABELREF_AS_INT
 
	gSMALL_STACK
 \

846 
DOESNT_NEED_UNWINDER
 
EH_TABLE_LOOKUP
 
	gOBJC_SELECTORS_WITHOUT_LABELS
 \

847 
OMIT_EH_TABLE
 
EASY_DIV_EXPR
 
	gIMPLICIT_FIX_EXPR
 \

848 
LONGJMP_RESTORE_FROM_STACK
 
MAX_INT_TYPE_SIZE
 
	gASM_IDENTIFY_GCC
 \

849 
STDC_VALUE
 
TRAMPOLINE_ALIGN
 
	gASM_IDENTIFY_GCC_AFTER_SOURCE
 \

850 
SLOW_ZERO_EXTEND
 
SUBREG_REGNO_OFFSET
 
	gDWARF_LINE_MIN_INSTR_LENGTH
 \

851 
TRADITIONAL_RETURN_FLOAT
 
	gNO_BUILTIN_SIZE_TYPE
 \

852 
NO_BUILTIN_PTRDIFF_TYPE
 
NO_BUILTIN_WCHAR_TYPE
 
	gNO_BUILTIN_WINT_TYPE
 \

853 
BLOCK_PROFILER
 
BLOCK_PROFILER_CODE
 
	gFUNCTION_BLOCK_PROFILER
 \

854 
FUNCTION_BLOCK_PROFILER_EXIT
 
	gMACHINE_STATE_SAVE
 \

855 
MACHINE_STATE_RESTORE
 
SCCS_DIRECTIVE
 
SECTION_ASM_OP
 
	gBYTEORDER
 \

856 
ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
 
	gHOST_WORDS_BIG_ENDIAN
 \

857 
OBJC_PROLOGUE
 
ALLOCATE_TRAMPOLINE
 
HANDLE_PRAGMA
 
	gROUND_TYPE_SIZE
 \

858 
ROUND_TYPE_SIZE_UNIT
 
CONST_SECTION_ASM_OP
 
	gCRT_GET_RFIB_TEXT
 \

859 
DBX_LBRAC_FIRST
 
DBX_OUTPUT_ENUM
 
	gDBX_OUTPUT_SOURCE_FILENAME
 \

860 
DBX_WORKING_DIRECTORY
 
INSN_CACHE_DEPTH
 
	gINSN_CACHE_SIZE
 \

861 
INSN_CACHE_LINE_WIDTH
 
INIT_SECTION_PREAMBLE
 
NEED_ATEXIT
 
	gON_EXIT
 \

862 
EXIT_BODY
 
OBJECT_FORMAT_ROSE
 
MULTIBYTE_CHARS
 
	gMAP_CHARACTER
 \

863 
LIBGCC_NEEDS_DOUBLE
 
FINAL_PRESCAN_LABEL
 
	gDEFAULT_CALLER_SAVES
 \

864 
LOAD_ARGS_REVERSED
 
	gMAX_INTEGER_COMPUTATION_MODE
 \

865 
CONVERT_HARD_REGISTER_TO_SSA_P
 
	gASM_OUTPUT_MAIN_SOURCE_FILENAME
 \

866 
FIRST_INSN_ADDRESS
 
TEXT_SECTION
 
	gSHARED_BSS_SECTION_ASM_OP
 \

867 
PROMOTED_MODE
 
	gEXPAND_BUILTIN_VA_END
 \

868 
LINKER_DOES_NOT_WORK_WITH_DWARF2
 
	gFUNCTION_ARG_KEEP_AS_REFERENCE
 \

869 
GIV_SORT_CRITERION
 
MAX_LONG_TYPE_SIZE
 
	gMAX_LONG_DOUBLE_TYPE_SIZE
 \

870 
MAX_WCHAR_TYPE_SIZE
 
SHARED_SECTION_ASM_OP
 
	gINTEGRATE_THRESHOLD
 \

871 
FINAL_REG_PARM_STACK_SPACE
 
	gMAYBE_REG_PARM_STACK_SPACE
 \

872 
TRADITIONAL_PIPELINE_INTERFACE
 
	gDFA_PIPELINE_INTERFACE
 \

873 
DBX_OUTPUT_STANDARD_TYPES
 
	gBUILTIN_SETJMP_FRAME_VALUE
 \

874 
SUNOS4_SHARED_LIBRARIES
 
	gPROMOTE_FOR_CALL_ONLY
 \

875 
SPACE_AFTER_L_OPTION
 
	gNO_RECURSIVE_FUNCTION_CSE
 \

876 
DEFAULT_MAIN_RETURN
 
TARGET_MEM_FUNCTIONS
 
	gEXPAND_BUILTIN_VA_ARG
 \

877 
COLLECT_PARSE_FLAG
 
DWARF2_GENERATE_TEXT_SECTION_LABEL
 
	gWINNING_GDB
 \

878 
ASM_OUTPUT_FILENAME
 
ASM_OUTPUT_SOURCE_LINE
 
	gFILE_NAME_JOINER
 \

879 
GDB_INV_REF_REGPARM_STABS_LETTER
 
	gDBX_MEMPARM_STABS_LETTER
 \

880 
PUT_SDB_SRC_FILE
 
STABS_GCC_MARKER
 
	gDBX_OUTPUT_FUNCTION_END
 \

881 
DBX_OUTPUT_GCC_MARKER
 
DBX_FINISH_SYMBOL
 
	gSDB_GENERATE_FAKE
 \

882 
NON_SAVING_SETJMP
 
	gTARGET_LATE_RTL_PROLOGUE_EPILOGUE
 \

883 
CASE_DROPS_THROUGH
 
TARGET_BELL
 
TARGET_BS
 
TARGET_CR
 
	gTARGET_DIGIT0
 \

884 
TARGET_ESC
 
TARGET_FF
 
TARGET_NEWLINE
 
TARGET_TAB
 
	gTARGET_VT
 \

885 
LINK_LIBGCC_SPECIAL
 
	gDONT_ACCESS_GBLS_AFTER_EPILOGUE
 \

886 
TARGET_OPTIONS
 
TARGET_SWITCHES
 
EXTRA_CC_MODES
 
	gFINALIZE_PIC
 \

887 
PREDICATE_CODES
 
SPECIAL_MODE_PREDICATES
 
	gUNALIGNED_WORD_ASM_OP
 \

888 
EXTRA_SECTIONS
 
EXTRA_SECTION_FUNCTIONS
 
	gREADONLY_DATA_SECTION
 \

889 
TARGET_ASM_EXCEPTION_SECTION
 
	gTARGET_ASM_EH_FRAME_SECTION
 \

890 
SMALL_ARG_MAX
 
ASM_OUTPUT_SHARED_BSS
 
	gASM_OUTPUT_SHARED_COMMON
 \

891 
ASM_OUTPUT_SHARED_LOCAL
 
	gASM_MAKE_LABEL_LINKONCE
 \

892 
STACK_CHECK_PROBE_INTERVAL
 
	gSTACK_CHECK_PROBE_LOAD
 \

893 
ORDER_REGS_FOR_LOCAL_ALLOC
 
	gFUNCTION_OUTGOING_VALUE
 \

894 
ASM_DECLARE_CONSTANT_NAME
 
MODIFY_TARGET_NAME
 
	gSWITCHES_NEED_SPACES
 \

895 
SWITCH_CURTAILS_COMPILATION
 
SWITCH_TAKES_ARG
 
	gWORD_SWITCH_TAKES_ARG
 \

896 
TARGET_OPTION_TRANSLATE_TABLE
 
	gHANDLE_PRAGMA_PACK_PUSH_POP
 \

897 
HANDLE_SYSV_PRAGMA
 
HANDLE_PRAGMA_WEAK
 
	gCONDITIONAL_REGISTER_USAGE
 \

898 
FUNCTION_ARG_BOUNDARY
 
MUST_USE_SJLJ_EXCEPTIONS
 
	gUS_SOFTWARE_GOFAST
 \

899 
USING_SVR4_H
 
SVR4_ASM_SPEC
 
FUNCTION_ARG
 
	gFUNCTION_ARG_ADVANCE
 \

900 
FUNCTION_INCOMING_ARG
 
IRA_COVER_CLASSES
 
	gTARGET_VERSION
 \

901 
MACHINE_TYPE
 
TARGET_HAS_TARGETCM
 
	gASM_OUTPUT_BSS
 \

902 
SETJMP_VIA_SAVE_AREA
 
	gFORBIDDEN_INC_DEC_CLASSES
 \

903 
PREFERRED_OUTPUT_RELOAD_CLASS
 
	gSYSTEM_INCLUDE_DIR
 \

904 
STANDARD_INCLUDE_DIR
 
	gSTANDARD_INCLUDE_COMPONENT
 \

905 
LINK_ELIMINATE_DUPLICATE_LDIRECTORIES
 
	gMIPS_DEBUGGING_INFO
 \

906 
IDENT_ASM_OP
 
ALL_COP_ADDITIONAL_REGISTER_NAMES
 
	gDBX_OUTPUT_LBRAC
 \

907 
DBX_OUTPUT_NFUN
 
DBX_OUTPUT_RBRAC
 
	gRANGE_TEST_NON_SHORT_CIRCUIT
 \

908 
REAL_VALUE_TRUNCATE
 
	gREVERSE_CONDEXEC_PREDICATES_P
 \

909 
TARGET_ALIGN_ANON_BITFIELDS
 
	gTARGET_NARROW_VOLATILE_BITFIELDS
 \

910 
IDENT_ASM_OP
 
UNALIGNED_SHORT_ASM_OP
 
	gUNALIGNED_INT_ASM_OP
 \

911 
UNALIGNED_LONG_ASM_OP
 
	gUNALIGNED_DOUBLE_INT_ASM_OP
 \

912 
USE_COMMON_FOR_ONE_ONLY
 
IFCVT_EXTRA_FIELDS
 
	gIFCVT_INIT_EXTRA_FIELDS
 \

913 
CASE_USE_BIT_TESTS
 
	gFIXUNS_TRUNC_LIKE_FIX_TRUNC
 \

914 
GO_IF_MODE_DEPENDENT_ADDRESS
 
	gDELAY_SLOTS_FOR_EPILOGUE
 \

915 
ELIGIBLE_FOR_EPILOGUE_DELAY
 
TARGET_C99_FUNCTIONS
 
	gTARGET_HAS_SINCOS


918 #¥agm®
GCC
 
pois⁄
 
LANG_HOOKS_FUNCTION_MARK
 
LANG_HOOKS_FUNCTION_FREE
 \

919 
LANG_HOOKS_MARK_TREE
 
	gLANG_HOOKS_INSERT_DEFAULT_ATTRIBUTES
 \

920 
	gLANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS
 \

921 
LANG_HOOKS_PUSHLEVEL
 
	gLANG_HOOKS_SET_BLOCK
 \

922 
LANG_HOOKS_MAYBE_BUILD_CLEANUP
 
	gLANG_HOOKS_UPDATE_DECL_AFTER_SAVING
 \

923 
LANG_HOOKS_POPLEVEL
 
	gLANG_HOOKS_TRUTHVALUE_CONVERSION
 \

924 
TARGET_PROMOTE_FUNCTION_ARGS
 
	gTARGET_PROMOTE_FUNCTION_RETURN
 \

925 
LANG_HOOKS_MISSING_ARGUMENT
 
	gLANG_HOOKS_HASH_TYPES
 \

926 
TARGET_HANDLE_OFAST
 
	gTARGET_OPTION_OPTIMIZATION
 \

927 
TARGET_IRA_COVER_CLASSES
 
	gTARGET_HELP
 \

928 
	gTARGET_HANDLE_PRAGMA_EXTERN_PREFIX
 \

929 
	gTARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN
 \

930 
	gTARGET_VECTORIZE_BUILTIN_MUL_WIDEN_ODD
 \

933 #¥agm®
GCC
 
pois⁄
 
buût_ö_de˛s
 
im∂icô_buût_ö_de˛s


936 #¥agm®
GCC
 
pois⁄
 
LIBGCC2_DOUBLE_TYPE_SIZE
 
LIBGCC2_WORDS_BIG_ENDIAN
 \

937 
	gLIBGCC2_FLOAT_WORDS_BIG_ENDIAN


940 #¥agm®
GCC
 
pois⁄
 
USE_MAPPED_LOCATION
 
GET_ENVIRONMENT


943 #unde‡
ANSI_PROTOTYPES


944 #unde‡
PTR_CONST


945 #unde‡
LONG_DOUBLE


946 #unde‡
VPARAMS


947 #unde‡
VA_OPEN


948 #unde‡
VA_FIXEDARG


949 #unde‡
VA_CLOSE


950 #unde‡
VA_START


951 #¥agm®
GCC
 
pois⁄
 
ANSI_PROTOTYPES
 
PTR_CONST
 
LONG_DOUBLE
 
VPARAMS
 
VA_OPEN
 \

952 
VA_FIXEDARG
 
VA_CLOSE
 
	gVA_START


957 #ifde‡
IN_GCC_FRONTEND


958 #¥agm®
GCC
 
pois⁄
 
GCC_RTL_H
 
GCC_EXCEPT_H
 
GCC_EXPR_H


963 #unde‡
bc›y


964 #unde‡
bzîo


965 #unde‡
bcmp


966 #unde‡
rödex


967 #¥agm®
GCC
 
pois⁄
 
bc›y
 
bzîo
 
bcmp
 
rödex


987 #ifde‡
__˝lu•lus


988 
	#CONST_CAST2
(
TOTYPE
,
FROMTYPE
,
X
Ë(
c⁄°_ˇ°
<TOTYPE> (X))

	)

990 #i‡
deföed
(
__GNUC__
Ë&& 
GCC_VERSION
 > 4000

993 
	#CONST_CAST2
(
TOTYPE
,
FROMTYPE
,
X
Ë((
	`__exãnsi⁄__
(uni⁄ {FROMTYPE 
_q
; TOTYPE 
_nq
;})(X))._nq)

	)

994 #ñi‡
deföed
(
__GNUC__
)

995 
ölöe
 *

996 
hñ≥r_c⁄°_n⁄_c⁄°_ˇ°
 (c⁄° *
p
)

999 c⁄° *
	gc⁄°_c
;

1000 *
	gc
;

1001 } 
	gvÆ
;

1002 
	gvÆ
.
	gc⁄°_c
 = 
p
;

1003  
	gvÆ
.
	gc
;

1006 
	#CONST_CAST2
(
TOTYPE
,
FROMTYPE
,
X
) \

1007 ((
TOTYPE
Ë
	`hñ≥r_c⁄°_n⁄_c⁄°_ˇ°
 ((c⁄° *Ë(
FROMTYPE
Ë(
X
)))

	)

1009 
	#CONST_CAST2
(
TOTYPE
,
FROMTYPE
,
X
Ë((TOTYPE)(FROMTYPE)(X))

	)

1012 
	#CONST_CAST
(
TYPE
,
X
Ë
	`CONST_CAST2
 (TYPE, c⁄° TYPE, (X))

	)

1013 
	#CONST_CAST_TREE
(
X
Ë
	`CONST_CAST
 (
åì_node
 *, (X))

	)

1014 
	#CONST_CAST_RTX
(
X
Ë
	`CONST_CAST
 (
πx_def
 *, (X))

	)

1015 
	#CONST_CAST_BB
(
X
Ë
	`CONST_CAST
 (
basic_block_def
 *, (X))

	)

1016 
	#CONST_CAST_GIMPLE
(
X
Ë
	`CONST_CAST
 (
gim∂e_°©emít_ba£
 *, (X))

	)

1020 #i‡
GCC_VERSION
 >= 4003

1023 #i‚de‡
ENABLE_ASSERT_CHECKING


1024 #¥agm®
GCC
 
dügno°ic
 
w¨nög
 "-Wuninitialized"

1028 #ifde‡
ENABLE_VALGRIND_CHECKING


1029 #ifde‡
HAVE_VALGRIND_MEMCHECK_H


1030 
	~<vÆgröd/memcheck.h
>

1031 #ñi‡
deföed
 
HAVE_MEMCHECK_H


1032 
	~<memcheck.h
>

1034 
	~<vÆgröd.h
>

1037 #i‚de‡
VALGRIND_MAKE_MEM_NOACCESS


1038 
	#VALGRIND_MAKE_MEM_NOACCESS
 
VALGRIND_MAKE_NOACCESS


	)

1040 #i‚de‡
VALGRIND_MAKE_MEM_DEFINED


1041 
	#VALGRIND_MAKE_MEM_DEFINED
 
VALGRIND_MAKE_READABLE


	)

1043 #i‚de‡
VALGRIND_MAKE_MEM_UNDEFINED


1044 
	#VALGRIND_MAKE_MEM_UNDEFINED
 
VALGRIND_MAKE_WRITABLE


	)

1048 
	#VALGRIND_DISCARD
(
x
)

	)

1049 
	#VALGRIND_MALLOCLIKE_BLOCK
(
w
,
x
,
y
,
z
)

	)

1050 
	#VALGRIND_FREELIKE_BLOCK
(
x
,
y
)

	)

1055 #i‡(
GCC_VERSION
 > 4000)

1056 
	#DEBUG_FUNCTION
 
	`__©åibuã__
 ((
__u£d__
))

	)

1057 
	#DEBUG_VARIABLE
 
	`__©åibuã__
 ((
__u£d__
))

	)

1059 
	#DEBUG_FUNCTION


	)

1060 
	#DEBUG_VARIABLE


	)

1064 
	~"hwöt.h
"

	@include/target-hooks-macros.h

26 #i‚de‡
DEFHOOKPODX


27 
	#DEFHOOKPODX
(
NAME
, 
TYPE
, 
INIT
Ë
	`DEFHOOKPOD
 (NAME, 0, TYPE, INIT)

	)

33 #i‚de‡
HOOKSTRUCT


34 
	#HOOKSTRUCT
(
FRAGMENT
)

	)

39 #i‚de‡
HOOK_VECTOR_1


40 
	#HOOK_VECTOR_1
(
NAME
, 
FRAGMENT
Ë
	`HOOKSTRUCT
 (FRAGMENT)

	)

42 
	#HOOK_VECTOR
(
INIT_NAME
, 
SNAME
Ë
	`HOOK_VECTOR_1
 (INIT_NAME, 
	sSNAME
 {)

	)

43 
	#HOOK_VECTOR_END
(
DECL_NAME
Ë
	`HOOK_VECTOR_1
(,} DECL_NAME ;)

	)

80 
	#C90_EMPTY_HACK


	)

	@include/target.h

48 #i‚de‡
GCC_TARGET_H


49 
	#GCC_TARGET_H


	)

51 
	~"ö¢-modes.h
"

52 
	~"ö¢-codes.h
"

53 
	~"doubÀ-öt.h
"

55 #ifde‡
ENABLE_CHECKING


57 
	scumuœtive_¨gs_t
 { *
	mmagic
; *
	mp
; };

67 
	ucumuœtive_¨gs_t
 { *
	mp
; };

72 
	e¥öt_swôch_ty≥


74 
	mSWITCH_TYPE_PASSED
,

75 
	mSWITCH_TYPE_ENABLED
,

76 
	mSWITCH_TYPE_DESCRIPTIVE
,

77 
	mSWITCH_TYPE_LINE_START
,

78 
	mSWITCH_TYPE_LINE_END


81 (* 
	t¥öt_swôch_‚_ty≥
Ë(
	t¥öt_swôch_ty≥
, const *);

84 
	`ñf_ªc‹d_gcc_swôches
 (
¥öt_swôch_ty≥
 
ty≥
, const *);

90 
boﬁ
 
	`èrgë_deÁu…_poöãr_addªss_modes_p
 ();

92 
°d¨g_öfo
;

93 
•ec_öfo_def
;

94 
h¨d_ªg_£t_c⁄èöî
;

95 
cgøph_node
;

96 
cgøph_simd_˛⁄e
;

99 
	s£c⁄d¨y_ªlﬂd_öfo


103 
icode
;

104 
exåa_co°
;

108 
£c⁄d¨y_ªlﬂd_öfo
 *
¥ev_§i
;

109 
t_icode
;

113 
_dï
;

116 
ddg
;

119 
lo›
;

122 
ao_ªf
;

125 
_°mt_vec_öfo
;

128 
åì
 
	`°mt_ve˘y≥
 (
_°mt_vec_öfo
 *);

129 
boﬁ
 
	`°mt_ö_ö√r_lo›_p
 (
_°mt_vec_öfo
 *);

133 
	sasm_öt_›


135 c⁄° *
hi
;

136 c⁄° *
si
;

137 c⁄° *
di
;

138 c⁄° *
ti
;

142 
	eve˘_co°_f‹_°mt


144 
sˇœr_°mt
,

145 
sˇœr_lﬂd
,

146 
sˇœr_°‹e
,

147 
ve˘‹_°mt
,

148 
ve˘‹_lﬂd
,

149 
u«lig√d_lﬂd
,

150 
u«lig√d_°‹e
,

151 
ve˘‹_°‹e
,

152 
vec_to_sˇœr
,

153 
sˇœr_to_vec
,

154 
c⁄d_bønch_nŸ_èkí
,

155 
c⁄d_bønch_èkí
,

156 
vec_≥rm
,

157 
vec_¥omŸe_demŸe
,

158 
vec_c⁄°ru˘


163 
	eve˘_co°_modñ_loˇti⁄
 {

164 
ve˘_¥ﬁogue
 = 0,

165 
ve˘_body
 = 1,

166 
ve˘_ïûogue
 = 2

170 
	#DEFHOOKPOD
(
NAME
, 
DOC
, 
TYPE
, 
INIT
ËTYPE NAME;

	)

171 
	#DEFHOOK
(
NAME
, 
DOC
, 
TYPE
, 
PARAMS
, 
INIT
Ë
	`TYPE
 (* NAMEËPARAMS;

	)

172 
	#DEFHOOK_UNDOC
 
DEFHOOK


	)

173 
	#HOOKSTRUCT
(
FRAGMENT
Ë
	)
FRAGMENT

175 
	~"èrgë.def
"

177 
gcc_èrgë
 
èrgëm
;

179 #ifde‡
GCC_TM_H


181 #i‚de‡
CUMULATIVE_ARGS_MAGIC


182 
	#CUMULATIVE_ARGS_MAGIC
 ((*Ë&
èrgëm
.
ˇŒs
)

	)

185 
ölöe
 
CUMULATIVE_ARGS
 *

186 
	$gë_cumuœtive_¨gs
 (
cumuœtive_¨gs_t
 
¨g
)

188 #ifde‡
ENABLE_CHECKING


189 
	`gcc_as£π
 (
¨g
.
magic
 =
CUMULATIVE_ARGS_MAGIC
);

191  (
CUMULATIVE_ARGS
 *Ë
¨g
.
p
;

192 
	}
}

194 
ölöe
 
cumuœtive_¨gs_t


195 
	$∑ck_cumuœtive_¨gs
 (
CUMULATIVE_ARGS
 *
¨g
)

197 
cumuœtive_¨gs_t
 
ªt
;

199 #ifde‡
ENABLE_CHECKING


200 
ªt
.
magic
 = 
CUMULATIVE_ARGS_MAGIC
;

202 
ªt
.
p
 = (*Ë
¨g
;

203  
ªt
;

204 
	}
}

	@include/timevar.h

21 #i‚de‡
GCC_TIMEVAR_H


22 
	#GCC_TIMEVAR_H


	)

52 
	stimev¨_time_def


55 
	mu£r
;

59 
	msys
;

62 
	mwÆl
;

65 
size_t
 
	mggc_mem
;

71 
	#DEFTIMEVAR
(
idítifõr__
, 
«me__
) \

72 
idítifõr__
,

	)

75 
	mTV_NONE
,

76 
	~"timev¨.def
"

77 
	mTIMEVAR_LAST


79 
	ttimev¨_id_t
;

80 #unde‡
DEFTIMEVAR


84 
boﬁ
 
timev¨_íabÀ
;

87 
size_t
 
timev¨_ggc_mem_tŸÆ
;

89 
timev¨_öô
 ();

90 
timev¨_push_1
 (
timev¨_id_t
);

91 
timev¨_p›_1
 (
timev¨_id_t
);

92 
timev¨_°¨t
 (
timev¨_id_t
);

93 
timev¨_°›
 (
timev¨_id_t
);

94 
boﬁ
 
timev¨_c⁄d_°¨t
 (
timev¨_id_t
);

95 
timev¨_c⁄d_°›
 (
timev¨_id_t
, 
boﬁ
);

96 
timev¨_¥öt
 (
FILE
 *);

99 
ölöe
 

100 
	$timev¨_push
 (
timev¨_id_t
 
tv
)

102 i‡(
timev¨_íabÀ
)

103 
	`timev¨_push_1
 (
tv
);

104 
	}
}

106 
ölöe
 

107 
	$timev¨_p›
 (
timev¨_id_t
 
tv
)

109 i‡(
timev¨_íabÀ
)

110 
	`timev¨_p›_1
 (
tv
);

111 
	}
}

113 
¥öt_time
 (const *, );

	@include/tm-preds.h

4 #i‚de‡
GCC_TM_PREDS_H


5 
	#GCC_TM_PREDS_H


	)

7 #ifde‡
HAVE_MACHINE_MODES


8 
gíîÆ_›î™d
 (
πx
, 
machöe_mode
);

9 
addªss_›î™d
 (
πx
, 
machöe_mode
);

10 
ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

11 
pmode_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

12 
s¸©ch_›î™d
 (
πx
, 
machöe_mode
);

13 
immedüã_›î™d
 (
πx
, 
machöe_mode
);

14 
c⁄°_öt_›î™d
 (
πx
, 
machöe_mode
);

15 
c⁄°_doubÀ_›î™d
 (
πx
, 
machöe_mode
);

16 
n⁄immedüã_›î™d
 (
πx
, 
machöe_mode
);

17 
n⁄mem‹y_›î™d
 (
πx
, 
machöe_mode
);

18 
push_›î™d
 (
πx
, 
machöe_mode
);

19 
p›_›î™d
 (
πx
, 
machöe_mode
);

20 
mem‹y_›î™d
 (
πx
, 
machöe_mode
);

21 
ödúe˘_›î™d
 (
πx
, 
machöe_mode
);

22 
‹dîed_com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

23 
com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

24 
s_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

25 
imm_f‹_√⁄_öv_logic_›î™d
 (
πx
, 
machöe_mode
);

26 
√⁄_öv_logic_›2
 (
πx
, 
machöe_mode
);

27 
imm_f‹_√⁄_logic_›î™d
 (
πx
, 
machöe_mode
);

28 
√⁄_logic_›2
 (
πx
, 
machöe_mode
);

29 
¨m_h¨d_gíîÆ_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

30 
low_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

31 
low_ªg_‹_öt_›î™d
 (
πx
, 
machöe_mode
);

32 
¨m_gíîÆ_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

33 
vÂ_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

34 
vÂ_h¨d_ªgi°î_›î™d
 (
πx
, 
machöe_mode
);

35 
zîo_›î™d
 (
πx
, 
machöe_mode
);

36 
ªg_‹_zîo_›î™d
 (
πx
, 
machöe_mode
);

37 
subªg_low∑π_›î©‹
 (
πx
, 
machöe_mode
);

38 
ªg_‹_öt_›î™d
 (
πx
, 
machöe_mode
);

39 
¨m_immedüã_›î™d
 (
πx
, 
machöe_mode
);

40 
¨m_immedüã_di_›î™d
 (
πx
, 
machöe_mode
);

41 
¨m_√g_immedüã_›î™d
 (
πx
, 
machöe_mode
);

42 
¨m_nŸ_immedüã_›î™d
 (
πx
, 
machöe_mode
);

43 
c⁄°0_›î™d
 (
πx
, 
machöe_mode
);

44 
¨m_rhs_›î™d
 (
πx
, 
machöe_mode
);

45 
¨m_rhsm_›î™d
 (
πx
, 
machöe_mode
);

46 
c⁄°_öt_I_›î™d
 (
πx
, 
machöe_mode
);

47 
c⁄°_öt_M_›î™d
 (
πx
, 
machöe_mode
);

48 
shi·_amou¡_›î™d
 (
πx
, 
machöe_mode
);

49 
c⁄°_√⁄_sˇœr_shi·_amou¡_›î™d
 (
πx
, 
machöe_mode
);

50 
ldrd_°rd_off£t_›î™d
 (
πx
, 
machöe_mode
);

51 
¨m_add_›î™d
 (
πx
, 
machöe_mode
);

52 
¨m_™ddi_›î™d_√⁄
 (
πx
, 
machöe_mode
);

53 
¨m_i‹di_›î™d_√⁄
 (
πx
, 
machöe_mode
);

54 
¨m_x‹di_›î™d
 (
πx
, 
machöe_mode
);

55 
¨m_adddi_›î™d
 (
πx
, 
machöe_mode
);

56 
¨m_addimm_›î™d
 (
πx
, 
machöe_mode
);

57 
¨m_nŸ_›î™d
 (
πx
, 
machöe_mode
);

58 
¨m_di_›î™d
 (
πx
, 
machöe_mode
);

59 
off£âabÀ_mem‹y_›î™d
 (
πx
, 
machöe_mode
);

60 
ˇŒ_mem‹y_›î™d
 (
πx
, 
machöe_mode
);

61 
¨m_ªlﬂd_mem‹y_›î™d
 (
πx
, 
machöe_mode
);

62 
vÂ_com∑ª_›î™d
 (
πx
, 
machöe_mode
);

63 
¨m_Êﬂt_com∑ª_›î™d
 (
πx
, 
machöe_mode
);

64 
ödex_›î™d
 (
πx
, 
machöe_mode
);

65 
shi·abÀ_›î©‹
 (
πx
, 
machöe_mode
);

66 
shi·abÀ_›î©‹_°ri˘_ô
 (
πx
, 
machöe_mode
);

67 
logiˇl_bö¨y_›î©‹
 (
πx
, 
machöe_mode
);

68 
commuètive_bö¨y_›î©‹
 (
πx
, 
machöe_mode
);

69 
shi·_›î©‹
 (
πx
, 
machöe_mode
);

70 
ßt_shi·_›î©‹
 (
πx
, 
machöe_mode
);

71 
mu…_›î©‹
 (
πx
, 
machöe_mode
);

72 
thumb_16bô_›î©‹
 (
πx
, 
machöe_mode
);

73 
equÆôy_›î©‹
 (
πx
, 
machöe_mode
);

74 
ex∑ndabÀ_com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

75 
¨m_com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

76 
…_ge_com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

77 
¨m_v£l_com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

78 
¨m_c⁄d_move_›î©‹
 (
πx
, 
machöe_mode
);

79 
noov_com∑ris⁄_›î©‹
 (
πx
, 
machöe_mode
);

80 
mömax_›î©‹
 (
πx
, 
machöe_mode
);

81 
cc_ªgi°î
 (
πx
, 
machöe_mode
);

82 
domö™t_cc_ªgi°î
 (
πx
, 
machöe_mode
);

83 
¨m_exãndqisi_mem_›
 (
πx
, 
machöe_mode
);

84 
¨m_ªg_‹_exãndqisi_mem_›
 (
πx
, 
machöe_mode
);

85 
powî_of_two_›î™d
 (
πx
, 
machöe_mode
);

86 
n⁄immedüã_di_›î™d
 (
πx
, 
machöe_mode
);

87 
di_›î™d
 (
πx
, 
machöe_mode
);

88 
n⁄immedüã_so·_df_›î™d
 (
πx
, 
machöe_mode
);

89 
so·_df_›î™d
 (
πx
, 
machöe_mode
);

90 
lﬂd_mu…ùÀ_›î©i⁄
 (
πx
, 
machöe_mode
);

91 
°‹e_mu…ùÀ_›î©i⁄
 (
πx
, 
machöe_mode
);

92 
p›_mu…ùÀ_ªtu∫
 (
πx
, 
machöe_mode
);

93 
p›_mu…ùÀ_Â
 (
πx
, 
machöe_mode
);

94 
mu…i_ªgi°î_push
 (
πx
, 
machöe_mode
);

95 
push_mu…_mem‹y_›î™d
 (
πx
, 
machöe_mode
);

96 
thumb1_cmp_›î™d
 (
πx
, 
machöe_mode
);

97 
thumb1_cm≤eg_›î™d
 (
πx
, 
machöe_mode
);

98 
thumb_cbrch_èrgë_›î™d
 (
πx
, 
machöe_mode
);

99 
imm_‹_ªg_›î™d
 (
πx
, 
machöe_mode
);

100 
c⁄°_mu…ùÀ_of_8_›î™d
 (
πx
, 
machöe_mode
);

101 
imm_f‹_√⁄_mov_›î™d
 (
πx
, 
machöe_mode
);

102 
imm_f‹_√⁄_lshi·_›î™d
 (
πx
, 
machöe_mode
);

103 
imm_f‹_√⁄_rshi·_›î™d
 (
πx
, 
machöe_mode
);

104 
imm_lshi·_‹_ªg_√⁄
 (
πx
, 
machöe_mode
);

105 
imm_rshi·_‹_ªg_√⁄
 (
πx
, 
machöe_mode
);

106 
cmpdi_›î™d
 (
πx
, 
machöe_mode
);

107 
¨m_sync_mem‹y_›î™d
 (
πx
, 
machöe_mode
);

108 
ve˘_∑r_c⁄°™t_high
 (
πx
, 
machöe_mode
);

109 
ve˘_∑r_c⁄°™t_low
 (
πx
, 
machöe_mode
);

110 
c⁄°_doubÀ_vcvt_powî_of_two_ªcùroˇl
 (
πx
, 
machöe_mode
);

111 
c⁄°_doubÀ_vcvt_powî_of_two
 (
πx
, 
machöe_mode
);

112 
√⁄_°ru˘_›î™d
 (
πx
, 
machöe_mode
);

113 
√⁄_≥rmissive_°ru˘_›î™d
 (
πx
, 
machöe_mode
);

114 
√⁄_≥rm_°ru˘_‹_ªg_›î™d
 (
πx
, 
machöe_mode
);

115 
add_›î©‹
 (
πx
, 
machöe_mode
);

116 
mem_noofs_›î™d
 (
πx
, 
machöe_mode
);

117 
ˇŒ_ö¢_›î™d
 (
πx
, 
machöe_mode
);

120 
	#CONSTRAINT_NUM_DEFINED_P
 1

	)

121 
	ec⁄°øöt_num


123 
	mCONSTRAINT__UNKNOWN
 = 0,

124 
	mCONSTRAINT_t
,

125 
	mCONSTRAINT_w
,

126 
	mCONSTRAINT_x
,

127 
	mCONSTRAINT_y
,

128 
	mCONSTRAINT_z
,

129 
	mCONSTRAINT_l
,

130 
	mCONSTRAINT_h
,

131 
	mCONSTRAINT_j
,

132 
	mCONSTRAINT_Pj
,

133 
	mCONSTRAINT_PJ
,

134 
	mCONSTRAINT_k
,

135 
	mCONSTRAINT_q
,

136 
	mCONSTRAINT_b
,

137 
	mCONSTRAINT_c
,

138 
	mCONSTRAINT_Cs
,

139 
	mCONSTRAINT_I
,

140 
	mCONSTRAINT_J
,

141 
	mCONSTRAINT_K
,

142 
	mCONSTRAINT_L
,

143 
	mCONSTRAINT_M
,

144 
	mCONSTRAINT_N
,

145 
	mCONSTRAINT_O
,

146 
	mCONSTRAINT_Pa
,

147 
	mCONSTRAINT_Pb
,

148 
	mCONSTRAINT_Pc
,

149 
	mCONSTRAINT_Pd
,

150 
	mCONSTRAINT_Pe
,

151 
	mCONSTRAINT_Ps
,

152 
	mCONSTRAINT_Pt
,

153 
	mCONSTRAINT_Pu
,

154 
	mCONSTRAINT_Pv
,

155 
	mCONSTRAINT_Pw
,

156 
	mCONSTRAINT_Px
,

157 
	mCONSTRAINT_Py
,

158 
	mCONSTRAINT_Pz
,

159 
	mCONSTRAINT_G
,

160 
	mCONSTRAINT_Dz
,

161 
	mCONSTRAINT_Da
,

162 
	mCONSTRAINT_Db
,

163 
	mCONSTRAINT_Dc
,

164 
	mCONSTRAINT_Dd
,

165 
	mCONSTRAINT_De
,

166 
	mCONSTRAINT_Df
,

167 
	mCONSTRAINT_Dg
,

168 
	mCONSTRAINT_Di
,

169 
	mCONSTRAINT_Dn
,

170 
	mCONSTRAINT_Dl
,

171 
	mCONSTRAINT_DL
,

172 
	mCONSTRAINT_Do
,

173 
	mCONSTRAINT_Dv
,

174 
	mCONSTRAINT_Dy
,

175 
	mCONSTRAINT_Dt
,

176 
	mCONSTRAINT_Dp
,

177 
	mCONSTRAINT_Ts
,

178 
	mCONSTRAINT_Ua
,

179 
	mCONSTRAINT_Uh
,

180 
	mCONSTRAINT_Ut
,

181 
	mCONSTRAINT_Uv
,

182 
	mCONSTRAINT_Uy
,

183 
	mCONSTRAINT_Un
,

184 
	mCONSTRAINT_Um
,

185 
	mCONSTRAINT_Us
,

186 
	mCONSTRAINT_Uq
,

187 
	mCONSTRAINT_Q
,

188 
	mCONSTRAINT_Uu
,

189 
	mCONSTRAINT_Uw
,

190 
	mCONSTRAINT_US
,

191 
	mCONSTRAINT__LIMIT


194 
c⁄°øöt_num
 
lookup_c⁄°øöt
 (const *);

195 
boﬁ
 
c⁄°øöt_ßtisfõd_p
 (
πx
, 
c⁄°øöt_num
);

197 
ölöe
 
size_t


198 
	$ö¢_c⁄°øöt_Àn
 (
fc
, c⁄° *
°r
 
ATTRIBUTE_UNUSED
)

200 
fc
)

210 
	}
}

212 
	#CONSTRAINT_LEN
(
c_
,
s_
Ë
	`ö¢_c⁄°øöt_Àn
 (c_,s_)

	)

214 
ªg_˛ass
 
ªg˛ass_f‹_c⁄°øöt
 (
c⁄°øöt_num
);

215 
	#REG_CLASS_FROM_CONSTRAINT
(
c_
,
s_
) \

216 
	`ªg˛ass_f‹_c⁄°øöt
 (
	`lookup_c⁄°øöt
 (
s_
))

	)

217 
	#REG_CLASS_FOR_CONSTRAINT
(
x_
) \

218 
	`ªg˛ass_f‹_c⁄°øöt
 (
x_
)

	)

220 
boﬁ
 
ö¢_c⁄°_öt_ok_f‹_c⁄°øöt
 (
HOST_WIDE_INT
, 
c⁄°øöt_num
);

221 
	#CONST_OK_FOR_CONSTRAINT_P
(
v_
,
c_
,
s_
) \

222 
	`ö¢_c⁄°_öt_ok_f‹_c⁄°øöt
 (
v_
, 
	`lookup_c⁄°øöt
 (
s_
))

	)

224 
	#CONST_DOUBLE_OK_FOR_CONSTRAINT_P
(
v_
,
c_
,
s_
) \

225 
	`c⁄°øöt_ßtisfõd_p
 (
v_
, 
	`lookup_c⁄°øöt
 (
s_
))

	)

227 
	#EXTRA_CONSTRAINT_STR
(
v_
,
c_
,
s_
) \

228 
	`c⁄°øöt_ßtisfõd_p
 (
v_
, 
	`lookup_c⁄°øöt
 (
s_
))

	)

230 
boﬁ
 
ö¢_exåa_mem‹y_c⁄°øöt
 (
c⁄°øöt_num
);

231 
	#EXTRA_MEMORY_CONSTRAINT
(
c_
,
s_
Ë
	`ö¢_exåa_mem‹y_c⁄°øöt
 (
	`lookup_c⁄°øöt
 (s_))

	)

233 
	#EXTRA_ADDRESS_CONSTRAINT
(
c_
,
s_
Ë
Ál£


	)

	@include/tm.h

1 #i‚de‡
GCC_TM_H


2 
	#GCC_TM_H


	)

3 
	#TARGET_CPU_DEFAULT
 (
TARGET_CPU_gíîic
)

	)

4 #i‚de‡
LIBC_GLIBC


5 
	#LIBC_GLIBC
 1

	)

7 #i‚de‡
LIBC_UCLIBC


8 
	#LIBC_UCLIBC
 2

	)

10 #i‚de‡
LIBC_BIONIC


11 
	#LIBC_BIONIC
 3

	)

13 #ifde‡
IN_GCC


14 
	~"›ti⁄s.h
"

15 
	~"ö¢-c⁄°™ts.h
"

16 
	~"c⁄fig/dbxñf.h
"

17 
	~"c⁄fig/ñfos.h
"

18 
	~"c⁄fig/¨m/unknown-ñf.h
"

19 
	~"c⁄fig/¨m/ñf.h
"

20 
	~"c⁄fig/¨m/b∑bi.h
"

21 
	~"c⁄fig/√wlib-°döt.h
"

22 
	~"c⁄fig/¨m/aout.h
"

23 
	~"c⁄fig/vxw‹ks-dummy.h
"

24 
	~"c⁄fig/¨m/¨m.h
"

25 
	~"c⁄fig/öôföi-¨øy.h
"

27 #i‡
deföed
 
IN_GCC
 && !deföed 
GENERATOR_FILE
 && !deföed 
USED_FOR_TARGET


28 
	~"ö¢-Êags.h
"

30 #i‡
deföed
 
IN_GCC
 && !deföed 
GENERATOR_FILE


31 
	~"ö¢-modes.h
"

33 
	~"deÁu…s.h
"

	@include/tm_p.h

1 #i‚de‡
GCC_TM_P_H


2 
	#GCC_TM_P_H


	)

3 #ifde‡
IN_GCC


4 
	~"c⁄fig/¨m/¨m-¥Ÿos.h
"

5 
	~"c⁄fig/¨m/Ørch-comm⁄-¥Ÿos.h
"

6 
	~"tm-¥eds.h
"

	@include/toplev.h

20 #i‚de‡
GCC_TOPLEV_H


21 
	#GCC_TOPLEV_H


	)

24 
˛_decoded_›ti⁄
 *
ßve_decoded_›ti⁄s
;

25 
ßve_decoded_›ti⁄s_cou¡
;

27 
t›Àv_maö
 (, **);

28 
ª°_of_de˛_compû©i⁄
 (
åì
, , );

29 
ª°_of_ty≥_compû©i⁄
 (
åì
, );

30 
öô_›timiz©i⁄_∑s£s
 ();

31 
boﬁ
 
íabÀ_πl_dump_fûe
 ();

36 
öô_eh
 ();

38 
™noun˚_fun˘i⁄
 (
åì
);

40 
wøpup_globÆ_de˛¨©i⁄_1
 (
åì
);

41 
boﬁ
 
wøpup_globÆ_de˛¨©i⁄_2
 (
åì
);

42 
boﬁ
 
wøpup_globÆ_de˛¨©i⁄s
 (
åì
 *, );

43 
check_globÆ_de˛¨©i⁄_1
 (
åì
);

44 
check_globÆ_de˛¨©i⁄s
 (
åì
 *, );

45 
emô_debug_globÆ_de˛¨©i⁄s
 (
åì
 *, );

46 
wrôe_globÆ_de˛¨©i⁄s
 ();

48 
dump_mem‹y_ªp‹t
 (
boﬁ
);

49 
dump_¥ofûe_ªp‹t
 ();

51 
èrgë_ªöô
 ();

54 
loˇl_tick
;

59 
boﬁ
 
u£r_deföed_£˘i⁄_©åibuã
;

62 
Êag_ªrun_c£_a·î_globÆ_›ts
;

64 
¥öt_vîsi⁄
 (
FILE
 *, const *);

67 
ht
 *
idít_hash
;

72 c⁄° *
gë_§c_pwd
 ();

73 
boﬁ
 
£t_§c_pwd
 (const *);

77 
HOST_WIDE_INT
 
gë_øndom_£ed
 (
boﬁ
);

78 c⁄° *
£t_øndom_£ed
 (const *);

	@include/tree-cfg.h

21 #i‚de‡
_TREE_CFG_H


22 
	#_TREE_CFG_H


	)

25 
	#PENDING_STMT
(
e
Ë(”)->
ö¢s
.
g
)

	)

27 
öô_em±y_åì_cfg_f‹_fun˘i⁄
 (
fun˘i⁄
 *);

28 
öô_em±y_åì_cfg
 ();

29 
fﬁd_c⁄d_ex¥_c⁄d
 ();

30 
°¨t_ªc‹dög_ˇ£_œbñs
 ();

31 
íd_ªc‹dög_ˇ£_œbñs
 ();

32 
basic_block
 
œbñ_to_block_‚
 (
fun˘i⁄
 *, 
åì
);

33 
	#œbñ_to_block
(
t
Ë(
	`œbñ_to_block_‚
 (
cfun
,Å))

	)

34 
˛ónup_dód_œbñs
 ();

35 
group_ˇ£_œbñs_°mt
 (
gim∂e
);

36 
group_ˇ£_œbñs
 ();

37 
ª∂a˚_u£s_by
 (
åì
,Åree);

38 
basic_block
 
sögÀ_n⁄com∂ex_succ
 (basic_block 
bb
);

39 
nŸi˚_•ecül_ˇŒs
 (
gim∂e
);

40 
˛ór_•ecül_ˇŒs
 ();

41 
edge
 
föd_èkí_edge
 (
basic_block
, 
åì
);

42 
gim∂e_debug_bb
 (
basic_block
);

43 
basic_block
 
gim∂e_debug_bb_n
 ();

44 
gim∂e_debug_cfg
 ();

45 
gim∂e_dump_cfg
 (
FILE
 *, );

46 
dump_cfg_°©s
 (
FILE
 *);

47 
debug_cfg_°©s
 ();

48 
boﬁ
 
compuãd_gŸo_p
 (
gim∂e
);

49 
boﬁ
 
°mt_ˇn_make_abn‹mÆ_gŸo
 (
gim∂e
);

50 
basic_block
 
gë_abn‹mÆ_succ_di•©chî
 (basic_block);

51 
boﬁ
 
is_˘æ_°mt
 (
gim∂e
);

52 
boﬁ
 
is_˘æ_Æãrög_°mt
 (
gim∂e
);

53 
boﬁ
 
sim∂e_gŸo_p
 (
gim∂e
);

54 
boﬁ
 
°mt_íds_bb_p
 (
gim∂e
);

55 
boﬁ
 
as£π_uƒóchabÀ_ÁŒthru_edge_p
 (
edge
);

56 
dñëe_åì_cfg_™nŸ©i⁄s
 ();

57 
gim∂e
 
fú°_°mt
 (
basic_block
);

58 
gim∂e
 
œ°_°mt
 (
basic_block
);

59 
gim∂e
 
œ°_™d_⁄ly_°mt
 (
basic_block
);

60 
vîify_gim∂e_ö_£q
 (
gim∂e_£q
);

61 
vîify_gim∂e_ö_cfg
 (
fun˘i⁄
 *);

62 
åì
 
gim∂e_block_œbñ
 (
basic_block
);

63 
add_phi_¨gs_a·î_c›y_bb
 (
basic_block
);

64 
add_phi_¨gs_a·î_c›y
 (
basic_block
 *, , 
edge
);

65 
boﬁ
 
gim∂e_du∂iˇã_££_ªgi⁄
 (
edge
,Édge, 
basic_block
 *, ,

66 
basic_block
 *, 
boﬁ
);

67 
boﬁ
 
gim∂e_du∂iˇã_££_èû
 (
edge
,Édge, 
basic_block
 *, ,

68 
basic_block
 *);

69 
g©hî_blocks_ö_££_ªgi⁄
 (
basic_block
 
íåy
, basic_block 
exô
,

70 
vec
<
basic_block
> *
bbs_p
);

71 
basic_block
 
move_££_ªgi⁄_to_‚
 (
fun˘i⁄
 *, basic_block,

72 
basic_block
, 
åì
);

73 
dump_fun˘i⁄_to_fûe
 (
åì
, 
FILE
 *, );

74 
debug_fun˘i⁄
 (
åì
, ) ;

75 
¥öt_lo›s_bb
 (
FILE
 *, 
basic_block
, , );

76 
¥öt_lo›s
 (
FILE
 *, );

77 
debug
 (
lo›
 &
ªf
);

78 
debug
 (
lo›
 *
±r
);

79 
debug_vîbo£
 (
lo›
 &
ªf
);

80 
debug_vîbo£
 (
lo›
 *
±r
);

81 
debug_lo›s
 ();

82 
debug_lo›
 (
lo›
 *, );

83 
debug_lo›_num
 (, );

84 
ªmove_edge_™d_domö©ed_blocks
 (
edge
);

85 
boﬁ
 
gim∂e_purge_dód_eh_edges
 (
basic_block
);

86 
boﬁ
 
gim∂e_purge_Æl_dód_eh_edges
 (
c⁄°_bôm≠
);

87 
boﬁ
 
gim∂e_purge_dód_abn‹mÆ_ˇŒ_edges
 (
basic_block
);

88 
boﬁ
 
gim∂e_purge_Æl_dód_abn‹mÆ_ˇŒ_edges
 (
c⁄°_bôm≠
);

89 
åì
 
gim∂ify_buûd3
 (
gim∂e_°mt_ôî©‹
 *, 
åì_code
,

90 
åì
,Åree,Åree,Åree);

91 
åì
 
gim∂ify_buûd2
 (
gim∂e_°mt_ôî©‹
 *, 
åì_code
,

92 
åì
,Åree,Åree);

93 
åì
 
gim∂ify_buûd1
 (
gim∂e_°mt_ôî©‹
 *, 
åì_code
,

94 
åì
,Åree);

95 
exåa˘_åue_Ál£_edges_‰om_block
 (
basic_block
, 
edge
 *,Édge *);

96 
execuã_fixup_cfg
 ();

97 
•lô_¸ôiˇl_edges
 ();

	@include/tree-cfgcleanup.h

20 #i‚de‡
GCC_TREE_CFGCLEANUP_H


21 
	#GCC_TREE_CFGCLEANUP_H


	)

24 
bôm≠
 
cfg˛ónup_Æãªd_bbs
;

25 
boﬁ
 
˛ónup_åì_cfg
 ();

26 
boﬁ
 
fixup_n‹ëu∫_ˇŒ
 (
gim∂e
 
°mt
);

	@include/tree-check.h

3 #i‚de‡
GCC_TREE_CHECK_H


4 
	#GCC_TREE_CHECK_H


	)

6 
	#ERROR_MARK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ERROR_MARK
)

	)

7 
	#IDENTIFIER_NODE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
IDENTIFIER_NODE
)

	)

8 
	#TREE_LIST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TREE_LIST
)

	)

9 
	#TREE_VEC_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TREE_VEC
)

	)

10 
	#BLOCK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BLOCK
)

	)

11 
	#OFFSET_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OFFSET_TYPE
)

	)

12 
	#ENUMERAL_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ENUMERAL_TYPE
)

	)

13 
	#BOOLEAN_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BOOLEAN_TYPE
)

	)

14 
	#INTEGER_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
INTEGER_TYPE
)

	)

15 
	#REAL_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REAL_TYPE
)

	)

16 
	#POINTER_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
POINTER_TYPE
)

	)

17 
	#REFERENCE_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REFERENCE_TYPE
)

	)

18 
	#NULLPTR_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NULLPTR_TYPE
)

	)

19 
	#FIXED_POINT_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FIXED_POINT_TYPE
)

	)

20 
	#COMPLEX_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPLEX_TYPE
)

	)

21 
	#VECTOR_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VECTOR_TYPE
)

	)

22 
	#ARRAY_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ARRAY_TYPE
)

	)

23 
	#RECORD_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RECORD_TYPE
)

	)

24 
	#UNION_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNION_TYPE
)

	)

25 
	#QUAL_UNION_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
QUAL_UNION_TYPE
)

	)

26 
	#VOID_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VOID_TYPE
)

	)

27 
	#FUNCTION_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FUNCTION_TYPE
)

	)

28 
	#METHOD_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
METHOD_TYPE
)

	)

29 
	#LANG_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LANG_TYPE
)

	)

30 
	#INTEGER_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
INTEGER_CST
)

	)

31 
	#REAL_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REAL_CST
)

	)

32 
	#FIXED_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FIXED_CST
)

	)

33 
	#COMPLEX_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPLEX_CST
)

	)

34 
	#VECTOR_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VECTOR_CST
)

	)

35 
	#STRING_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
STRING_CST
)

	)

36 
	#FUNCTION_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FUNCTION_DECL
)

	)

37 
	#LABEL_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LABEL_DECL
)

	)

38 
	#FIELD_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FIELD_DECL
)

	)

39 
	#VAR_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VAR_DECL
)

	)

40 
	#CONST_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CONST_DECL
)

	)

41 
	#PARM_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PARM_DECL
)

	)

42 
	#TYPE_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPE_DECL
)

	)

43 
	#RESULT_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RESULT_DECL
)

	)

44 
	#DEBUG_EXPR_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DEBUG_EXPR_DECL
)

	)

45 
	#NAMESPACE_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NAMESPACE_DECL
)

	)

46 
	#IMPORTED_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
IMPORTED_DECL
)

	)

47 
	#NAMELIST_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NAMELIST_DECL
)

	)

48 
	#TRANSLATION_UNIT_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRANSLATION_UNIT_DECL
)

	)

49 
	#COMPONENT_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPONENT_REF
)

	)

50 
	#BIT_FIELD_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BIT_FIELD_REF
)

	)

51 
	#ARRAY_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ARRAY_REF
)

	)

52 
	#ARRAY_RANGE_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ARRAY_RANGE_REF
)

	)

53 
	#REALPART_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REALPART_EXPR
)

	)

54 
	#IMAGPART_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
IMAGPART_EXPR
)

	)

55 
	#VIEW_CONVERT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VIEW_CONVERT_EXPR
)

	)

56 
	#INDIRECT_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
INDIRECT_REF
)

	)

57 
	#OBJ_TYPE_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OBJ_TYPE_REF
)

	)

58 
	#CONSTRUCTOR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CONSTRUCTOR
)

	)

59 
	#COMPOUND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPOUND_EXPR
)

	)

60 
	#MODIFY_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MODIFY_EXPR
)

	)

61 
	#INIT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
INIT_EXPR
)

	)

62 
	#TARGET_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TARGET_EXPR
)

	)

63 
	#COND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COND_EXPR
)

	)

64 
	#VEC_COND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_COND_EXPR
)

	)

65 
	#VEC_PERM_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_PERM_EXPR
)

	)

66 
	#BIND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BIND_EXPR
)

	)

67 
	#CALL_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CALL_EXPR
)

	)

68 
	#WITH_CLEANUP_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WITH_CLEANUP_EXPR
)

	)

69 
	#CLEANUP_POINT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CLEANUP_POINT_EXPR
)

	)

70 
	#PLACEHOLDER_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PLACEHOLDER_EXPR
)

	)

71 
	#PLUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PLUS_EXPR
)

	)

72 
	#MINUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MINUS_EXPR
)

	)

73 
	#MULT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MULT_EXPR
)

	)

74 
	#POINTER_PLUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
POINTER_PLUS_EXPR
)

	)

75 
	#MULT_HIGHPART_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MULT_HIGHPART_EXPR
)

	)

76 
	#TRUNC_DIV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUNC_DIV_EXPR
)

	)

77 
	#CEIL_DIV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CEIL_DIV_EXPR
)

	)

78 
	#FLOOR_DIV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FLOOR_DIV_EXPR
)

	)

79 
	#ROUND_DIV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ROUND_DIV_EXPR
)

	)

80 
	#TRUNC_MOD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUNC_MOD_EXPR
)

	)

81 
	#CEIL_MOD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CEIL_MOD_EXPR
)

	)

82 
	#FLOOR_MOD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FLOOR_MOD_EXPR
)

	)

83 
	#ROUND_MOD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ROUND_MOD_EXPR
)

	)

84 
	#RDIV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RDIV_EXPR
)

	)

85 
	#EXACT_DIV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EXACT_DIV_EXPR
)

	)

86 
	#FIX_TRUNC_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FIX_TRUNC_EXPR
)

	)

87 
	#FLOAT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FLOAT_EXPR
)

	)

88 
	#NEGATE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NEGATE_EXPR
)

	)

89 
	#MIN_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MIN_EXPR
)

	)

90 
	#MAX_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MAX_EXPR
)

	)

91 
	#ABS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ABS_EXPR
)

	)

92 
	#LSHIFT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LSHIFT_EXPR
)

	)

93 
	#RSHIFT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RSHIFT_EXPR
)

	)

94 
	#LROTATE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LROTATE_EXPR
)

	)

95 
	#RROTATE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RROTATE_EXPR
)

	)

96 
	#BIT_IOR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BIT_IOR_EXPR
)

	)

97 
	#BIT_XOR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BIT_XOR_EXPR
)

	)

98 
	#BIT_AND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BIT_AND_EXPR
)

	)

99 
	#BIT_NOT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BIT_NOT_EXPR
)

	)

100 
	#TRUTH_ANDIF_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUTH_ANDIF_EXPR
)

	)

101 
	#TRUTH_ORIF_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUTH_ORIF_EXPR
)

	)

102 
	#TRUTH_AND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUTH_AND_EXPR
)

	)

103 
	#TRUTH_OR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUTH_OR_EXPR
)

	)

104 
	#TRUTH_XOR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUTH_XOR_EXPR
)

	)

105 
	#TRUTH_NOT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRUTH_NOT_EXPR
)

	)

106 
	#LT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LT_EXPR
)

	)

107 
	#LE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LE_EXPR
)

	)

108 
	#GT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
GT_EXPR
)

	)

109 
	#GE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
GE_EXPR
)

	)

110 
	#EQ_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EQ_EXPR
)

	)

111 
	#NE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NE_EXPR
)

	)

112 
	#UNORDERED_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNORDERED_EXPR
)

	)

113 
	#ORDERED_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ORDERED_EXPR
)

	)

114 
	#UNLT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNLT_EXPR
)

	)

115 
	#UNLE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNLE_EXPR
)

	)

116 
	#UNGT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNGT_EXPR
)

	)

117 
	#UNGE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNGE_EXPR
)

	)

118 
	#UNEQ_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNEQ_EXPR
)

	)

119 
	#LTGT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LTGT_EXPR
)

	)

120 
	#RANGE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RANGE_EXPR
)

	)

121 
	#PAREN_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PAREN_EXPR
)

	)

122 
	#CONVERT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CONVERT_EXPR
)

	)

123 
	#ADDR_SPACE_CONVERT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ADDR_SPACE_CONVERT_EXPR
)

	)

124 
	#FIXED_CONVERT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FIXED_CONVERT_EXPR
)

	)

125 
	#NOP_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NOP_EXPR
)

	)

126 
	#NON_LVALUE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NON_LVALUE_EXPR
)

	)

127 
	#COMPOUND_LITERAL_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPOUND_LITERAL_EXPR
)

	)

128 
	#SAVE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SAVE_EXPR
)

	)

129 
	#ADDR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ADDR_EXPR
)

	)

130 
	#FDESC_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FDESC_EXPR
)

	)

131 
	#COMPLEX_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPLEX_EXPR
)

	)

132 
	#CONJ_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CONJ_EXPR
)

	)

133 
	#PREDECREMENT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PREDECREMENT_EXPR
)

	)

134 
	#PREINCREMENT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PREINCREMENT_EXPR
)

	)

135 
	#POSTDECREMENT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
POSTDECREMENT_EXPR
)

	)

136 
	#POSTINCREMENT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
POSTINCREMENT_EXPR
)

	)

137 
	#VA_ARG_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VA_ARG_EXPR
)

	)

138 
	#TRY_CATCH_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRY_CATCH_EXPR
)

	)

139 
	#TRY_FINALLY_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRY_FINALLY_EXPR
)

	)

140 
	#DECL_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DECL_EXPR
)

	)

141 
	#LABEL_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LABEL_EXPR
)

	)

142 
	#GOTO_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
GOTO_EXPR
)

	)

143 
	#RETURN_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RETURN_EXPR
)

	)

144 
	#EXIT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EXIT_EXPR
)

	)

145 
	#LOOP_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LOOP_EXPR
)

	)

146 
	#SWITCH_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SWITCH_EXPR
)

	)

147 
	#CASE_LABEL_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CASE_LABEL_EXPR
)

	)

148 
	#ASM_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ASM_EXPR
)

	)

149 
	#SSA_NAME_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SSA_NAME
)

	)

150 
	#CATCH_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CATCH_EXPR
)

	)

151 
	#EH_FILTER_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EH_FILTER_EXPR
)

	)

152 
	#SCEV_KNOWN_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SCEV_KNOWN
)

	)

153 
	#SCEV_NOT_KNOWN_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SCEV_NOT_KNOWN
)

	)

154 
	#POLYNOMIAL_CHREC_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
POLYNOMIAL_CHREC
)

	)

155 
	#STATEMENT_LIST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
STATEMENT_LIST
)

	)

156 
	#ASSERT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ASSERT_EXPR
)

	)

157 
	#TREE_BINFO_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TREE_BINFO
)

	)

158 
	#WITH_SIZE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WITH_SIZE_EXPR
)

	)

159 
	#REALIGN_LOAD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REALIGN_LOAD_EXPR
)

	)

160 
	#TARGET_MEM_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TARGET_MEM_REF
)

	)

161 
	#MEM_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MEM_REF
)

	)

162 
	#OMP_PARALLEL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_PARALLEL
)

	)

163 
	#OMP_TASK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_TASK
)

	)

164 
	#OMP_FOR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_FOR
)

	)

165 
	#OMP_SIMD_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_SIMD
)

	)

166 
	#CILK_SIMD_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CILK_SIMD
)

	)

167 
	#OMP_DISTRIBUTE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_DISTRIBUTE
)

	)

168 
	#OMP_TEAMS_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_TEAMS
)

	)

169 
	#OMP_TARGET_DATA_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_TARGET_DATA
)

	)

170 
	#OMP_TARGET_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_TARGET
)

	)

171 
	#OMP_SECTIONS_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_SECTIONS
)

	)

172 
	#OMP_SINGLE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_SINGLE
)

	)

173 
	#OMP_SECTION_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_SECTION
)

	)

174 
	#OMP_MASTER_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_MASTER
)

	)

175 
	#OMP_TASKGROUP_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_TASKGROUP
)

	)

176 
	#OMP_ORDERED_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_ORDERED
)

	)

177 
	#OMP_CRITICAL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_CRITICAL
)

	)

178 
	#OMP_TARGET_UPDATE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_TARGET_UPDATE
)

	)

179 
	#OMP_ATOMIC_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_ATOMIC
)

	)

180 
	#OMP_ATOMIC_READ_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_ATOMIC_READ
)

	)

181 
	#OMP_ATOMIC_CAPTURE_OLD_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_ATOMIC_CAPTURE_OLD
)

	)

182 
	#OMP_ATOMIC_CAPTURE_NEW_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_ATOMIC_CAPTURE_NEW
)

	)

183 
	#OMP_CLAUSE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OMP_CLAUSE
)

	)

184 
	#TRANSACTION_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRANSACTION_EXPR
)

	)

185 
	#REDUC_MAX_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REDUC_MAX_EXPR
)

	)

186 
	#REDUC_MIN_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REDUC_MIN_EXPR
)

	)

187 
	#REDUC_PLUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REDUC_PLUS_EXPR
)

	)

188 
	#DOT_PROD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DOT_PROD_EXPR
)

	)

189 
	#WIDEN_SUM_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WIDEN_SUM_EXPR
)

	)

190 
	#WIDEN_MULT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WIDEN_MULT_EXPR
)

	)

191 
	#WIDEN_MULT_PLUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WIDEN_MULT_PLUS_EXPR
)

	)

192 
	#WIDEN_MULT_MINUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WIDEN_MULT_MINUS_EXPR
)

	)

193 
	#WIDEN_LSHIFT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WIDEN_LSHIFT_EXPR
)

	)

194 
	#FMA_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FMA_EXPR
)

	)

195 
	#VEC_LSHIFT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_LSHIFT_EXPR
)

	)

196 
	#VEC_RSHIFT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_RSHIFT_EXPR
)

	)

197 
	#VEC_WIDEN_MULT_HI_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_WIDEN_MULT_HI_EXPR
)

	)

198 
	#VEC_WIDEN_MULT_LO_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_WIDEN_MULT_LO_EXPR
)

	)

199 
	#VEC_WIDEN_MULT_EVEN_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_WIDEN_MULT_EVEN_EXPR
)

	)

200 
	#VEC_WIDEN_MULT_ODD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_WIDEN_MULT_ODD_EXPR
)

	)

201 
	#VEC_UNPACK_HI_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_UNPACK_HI_EXPR
)

	)

202 
	#VEC_UNPACK_LO_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_UNPACK_LO_EXPR
)

	)

203 
	#VEC_UNPACK_FLOAT_HI_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_UNPACK_FLOAT_HI_EXPR
)

	)

204 
	#VEC_UNPACK_FLOAT_LO_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_UNPACK_FLOAT_LO_EXPR
)

	)

205 
	#VEC_PACK_TRUNC_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_PACK_TRUNC_EXPR
)

	)

206 
	#VEC_PACK_SAT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_PACK_SAT_EXPR
)

	)

207 
	#VEC_PACK_FIX_TRUNC_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_PACK_FIX_TRUNC_EXPR
)

	)

208 
	#VEC_WIDEN_LSHIFT_HI_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_WIDEN_LSHIFT_HI_EXPR
)

	)

209 
	#VEC_WIDEN_LSHIFT_LO_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_WIDEN_LSHIFT_LO_EXPR
)

	)

210 
	#PREDICT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PREDICT_EXPR
)

	)

211 
	#OPTIMIZATION_NODE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OPTIMIZATION_NODE
)

	)

212 
	#TARGET_OPTION_NODE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TARGET_OPTION_NODE
)

	)

213 
	#ANNOTATE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ANNOTATE_EXPR
)

	)

214 
	#CILK_SPAWN_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CILK_SPAWN_STMT
)

	)

215 
	#CILK_SYNC_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CILK_SYNC_STMT
)

	)

216 
	#C_MAYBE_CONST_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
C_MAYBE_CONST_EXPR
)

	)

217 
	#EXCESS_PRECISION_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EXCESS_PRECISION_EXPR
)

	)

218 
	#USERDEF_LITERAL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
USERDEF_LITERAL
)

	)

219 
	#SIZEOF_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SIZEOF_EXPR
)

	)

220 
	#ARRAY_NOTATION_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ARRAY_NOTATION_REF
)

	)

221 
	#UNCONSTRAINED_ARRAY_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNCONSTRAINED_ARRAY_TYPE
)

	)

222 
	#UNCONSTRAINED_ARRAY_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNCONSTRAINED_ARRAY_REF
)

	)

223 
	#NULL_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NULL_EXPR
)

	)

224 
	#PLUS_NOMOD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PLUS_NOMOD_EXPR
)

	)

225 
	#MINUS_NOMOD_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MINUS_NOMOD_EXPR
)

	)

226 
	#ATTR_ADDR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ATTR_ADDR_EXPR
)

	)

227 
	#STMT_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
STMT_STMT
)

	)

228 
	#LOOP_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LOOP_STMT
)

	)

229 
	#EXIT_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EXIT_STMT
)

	)

230 
	#OFFSET_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OFFSET_REF
)

	)

231 
	#PTRMEM_CST_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PTRMEM_CST
)

	)

232 
	#NEW_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NEW_EXPR
)

	)

233 
	#VEC_NEW_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_NEW_EXPR
)

	)

234 
	#DELETE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DELETE_EXPR
)

	)

235 
	#VEC_DELETE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_DELETE_EXPR
)

	)

236 
	#SCOPE_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SCOPE_REF
)

	)

237 
	#MEMBER_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MEMBER_REF
)

	)

238 
	#TYPE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPE_EXPR
)

	)

239 
	#AGGR_INIT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
AGGR_INIT_EXPR
)

	)

240 
	#VEC_INIT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
VEC_INIT_EXPR
)

	)

241 
	#THROW_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
THROW_EXPR
)

	)

242 
	#EMPTY_CLASS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EMPTY_CLASS_EXPR
)

	)

243 
	#BASELINK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BASELINK
)

	)

244 
	#TEMPLATE_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TEMPLATE_DECL
)

	)

245 
	#TEMPLATE_PARM_INDEX_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TEMPLATE_PARM_INDEX
)

	)

246 
	#TEMPLATE_TEMPLATE_PARM_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TEMPLATE_TEMPLATE_PARM
)

	)

247 
	#TEMPLATE_TYPE_PARM_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TEMPLATE_TYPE_PARM
)

	)

248 
	#TYPENAME_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPENAME_TYPE
)

	)

249 
	#TYPEOF_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPEOF_TYPE
)

	)

250 
	#BOUND_TEMPLATE_TEMPLATE_PARM_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BOUND_TEMPLATE_TEMPLATE_PARM
)

	)

251 
	#UNBOUND_CLASS_TEMPLATE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNBOUND_CLASS_TEMPLATE
)

	)

252 
	#USING_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
USING_DECL
)

	)

253 
	#USING_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
USING_STMT
)

	)

254 
	#DEFAULT_ARG_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DEFAULT_ARG
)

	)

255 
	#DEFERRED_NOEXCEPT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DEFERRED_NOEXCEPT
)

	)

256 
	#TEMPLATE_ID_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TEMPLATE_ID_EXPR
)

	)

257 
	#OVERLOAD_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OVERLOAD
)

	)

258 
	#PSEUDO_DTOR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PSEUDO_DTOR_EXPR
)

	)

259 
	#MODOP_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MODOP_EXPR
)

	)

260 
	#CAST_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CAST_EXPR
)

	)

261 
	#REINTERPRET_CAST_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
REINTERPRET_CAST_EXPR
)

	)

262 
	#CONST_CAST_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CONST_CAST_EXPR
)

	)

263 
	#STATIC_CAST_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
STATIC_CAST_EXPR
)

	)

264 
	#DYNAMIC_CAST_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DYNAMIC_CAST_EXPR
)

	)

265 
	#IMPLICIT_CONV_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
IMPLICIT_CONV_EXPR
)

	)

266 
	#DOTSTAR_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DOTSTAR_EXPR
)

	)

267 
	#TYPEID_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPEID_EXPR
)

	)

268 
	#NOEXCEPT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NOEXCEPT_EXPR
)

	)

269 
	#NON_DEPENDENT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NON_DEPENDENT_EXPR
)

	)

270 
	#CTOR_INITIALIZER_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CTOR_INITIALIZER
)

	)

271 
	#TRY_BLOCK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRY_BLOCK
)

	)

272 
	#EH_SPEC_BLOCK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EH_SPEC_BLOCK
)

	)

273 
	#HANDLER_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
HANDLER
)

	)

274 
	#MUST_NOT_THROW_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MUST_NOT_THROW_EXPR
)

	)

275 
	#CLEANUP_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CLEANUP_STMT
)

	)

276 
	#IF_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
IF_STMT
)

	)

277 
	#FOR_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
FOR_STMT
)

	)

278 
	#RANGE_FOR_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
RANGE_FOR_STMT
)

	)

279 
	#WHILE_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
WHILE_STMT
)

	)

280 
	#DO_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DO_STMT
)

	)

281 
	#BREAK_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BREAK_STMT
)

	)

282 
	#CONTINUE_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CONTINUE_STMT
)

	)

283 
	#SWITCH_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
SWITCH_STMT
)

	)

284 
	#EXPR_STMT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EXPR_STMT
)

	)

285 
	#TAG_DEFN_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TAG_DEFN
)

	)

286 
	#OFFSETOF_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
OFFSETOF_EXPR
)

	)

287 
	#ARROW_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ARROW_EXPR
)

	)

288 
	#ALIGNOF_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ALIGNOF_EXPR
)

	)

289 
	#AT_ENCODE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
AT_ENCODE_EXPR
)

	)

290 
	#STMT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
STMT_EXPR
)

	)

291 
	#UNARY_PLUS_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNARY_PLUS_EXPR
)

	)

292 
	#STATIC_ASSERT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
STATIC_ASSERT
)

	)

293 
	#TYPE_ARGUMENT_PACK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPE_ARGUMENT_PACK
)

	)

294 
	#NONTYPE_ARGUMENT_PACK_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
NONTYPE_ARGUMENT_PACK
)

	)

295 
	#TYPE_PACK_EXPANSION_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TYPE_PACK_EXPANSION
)

	)

296 
	#EXPR_PACK_EXPANSION_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
EXPR_PACK_EXPANSION
)

	)

297 
	#ARGUMENT_PACK_SELECT_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
ARGUMENT_PACK_SELECT
)

	)

298 
	#TRAIT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TRAIT_EXPR
)

	)

299 
	#LAMBDA_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
LAMBDA_EXPR
)

	)

300 
	#DECLTYPE_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
DECLTYPE_TYPE
)

	)

301 
	#UNDERLYING_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
UNDERLYING_TYPE
)

	)

302 
	#BASES_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
BASES
)

	)

303 
	#TEMPLATE_INFO_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
TEMPLATE_INFO
)

	)

304 
	#URSHIFT_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
URSHIFT_EXPR
)

	)

305 
	#COMPARE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPARE_EXPR
)

	)

306 
	#COMPARE_L_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPARE_L_EXPR
)

	)

307 
	#COMPARE_G_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
COMPARE_G_EXPR
)

	)

308 
	#CLASS_INTERFACE_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CLASS_INTERFACE_TYPE
)

	)

309 
	#CLASS_IMPLEMENTATION_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CLASS_IMPLEMENTATION_TYPE
)

	)

310 
	#CATEGORY_INTERFACE_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CATEGORY_INTERFACE_TYPE
)

	)

311 
	#CATEGORY_IMPLEMENTATION_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CATEGORY_IMPLEMENTATION_TYPE
)

	)

312 
	#PROTOCOL_INTERFACE_TYPE_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PROTOCOL_INTERFACE_TYPE
)

	)

313 
	#KEYWORD_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
KEYWORD_DECL
)

	)

314 
	#INSTANCE_METHOD_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
INSTANCE_METHOD_DECL
)

	)

315 
	#CLASS_METHOD_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CLASS_METHOD_DECL
)

	)

316 
	#PROPERTY_DECL_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PROPERTY_DECL
)

	)

317 
	#MESSAGE_SEND_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
MESSAGE_SEND_EXPR
)

	)

318 
	#CLASS_REFERENCE_EXPR_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
CLASS_REFERENCE_EXPR
)

	)

319 
	#PROPERTY_REF_CHECK
(
t
Ë
	`TREE_CHECK
 (t, 
PROPERTY_REF
)

	)

	@include/tree-core.h

20 #i‚de‡
GCC_TREE_CORE_H


21 
	#GCC_TREE_CORE_H


	)

23 
	~"hashèb.h
"

24 
	~"machmode.h
"

25 
	~"öput.h
"

26 
	~"°©i°ics.h
"

27 
	~"vec.h
"

28 
	~"doubÀ-öt.h
"

29 
	~"ªÆ.h
"

30 
	~"fixed-vÆue.h
"

31 
	~"Æüs.h
"

32 
	~"Êags.h
"

33 
	~"symèb.h
"

42 
	gfun˘i⁄
;

43 
	gªÆ_vÆue
;

44 
	gfixed_vÆue
;

45 
	g±r_öfo_def
;

46 
	gønge_öfo_def
;

47 
	gdõ_°ru˘
;

48 
	gpoöãr_£t_t
;

58 
	#ECF_CONST
 (1 << 0)

	)

63 
	#ECF_PURE
 (1 << 1)

	)

68 
	#ECF_LOOPING_CONST_OR_PURE
 (1 << 2)

	)

71 
	#ECF_NORETURN
 (1 << 3)

	)

74 
	#ECF_MALLOC
 (1 << 4)

	)

77 
	#ECF_MAY_BE_ALLOCA
 (1 << 5)

	)

80 
	#ECF_NOTHROW
 (1 << 6)

	)

83 
	#ECF_RETURNS_TWICE
 (1 << 7)

	)

86 
	#ECF_SIBCALL
 (1 << 8)

	)

90 
	#ECF_NOVOPS
 (1 << 9)

	)

93 
	#ECF_LEAF
 (1 << 10)

	)

96 
	#ECF_TM_PURE
 (1 << 11)

	)

99 
	#ECF_TM_BUILTIN
 (1 << 12)

	)

104 
	#EAF_DIRECT
 (1 << 0)

	)

107 
	#EAF_NOCLOBBER
 (1 << 1)

	)

110 
	#EAF_NOESCAPE
 (1 << 2)

	)

113 
	#EAF_UNUSED
 (1 << 3)

	)

118 
	#ERF_RETURN_ARG_MASK
 (3)

	)

122 
	#ERF_RETURNS_ARG
 (1 << 2)

	)

126 
	#ERF_NOALIAS
 (1 << 3)

	)

133 
	#DEFTREECODE
(
SYM
, 
STRING
, 
TYPE
, 
NARGS
ËSYM,

	)

134 
	#END_OF_BASE_TREE_CODES
 
LAST_AND_UNUSED_TREE_CODE
,

	)

136 
	eåì_code
 {

137 
	~"Æl-åì.def
"

138 
	mMAX_TREE_CODES


141 #unde‡
DEFTREECODE


142 #unde‡
END_OF_BASE_TREE_CODES


145 
	#NUM_TREE_CODES
 \

146 ((Ë
LAST_AND_UNUSED_TREE_CODE
)

	)

148 
	#CODE_CONTAINS_STRUCT
(
CODE
, 
STRUCT
) \

149 (
åì_c⁄èös_°ru˘
[(
CODE
)][(
STRUCT
)])

	)

154 
	ebuût_ö_˛ass
 {

155 
	mNOT_BUILT_IN
 = 0,

156 
	mBUILT_IN_FRONTEND
,

157 
	mBUILT_IN_MD
,

158 
	mBUILT_IN_NORMAL


163 
	#BUILT_IN_LAST
 (
BUILT_IN_NORMAL
 + 1)

	)

167 
	#DEF_BUILTIN
(
ENUM
, 
N
, 
C
, 
T
, 
LT
, 
B
, 
F
, 
NA
, 
AT
, 
IM
, 
COND
ËENUM,

	)

168 
	ebuût_ö_fun˘i⁄
 {

169 
	~"buûtös.def
"

173 
	mBUILT_IN_COMPLEX_MUL_MIN
,

174 
	mBUILT_IN_COMPLEX_MUL_MAX


175 
BUILT_IN_COMPLEX_MUL_MIN


176 + 
MAX_MODE_COMPLEX_FLOAT


177 - 
MIN_MODE_COMPLEX_FLOAT
,

179 
	mBUILT_IN_COMPLEX_DIV_MIN
,

180 
	mBUILT_IN_COMPLEX_DIV_MAX


181 
BUILT_IN_COMPLEX_DIV_MIN


182 + 
MAX_MODE_COMPLEX_FLOAT


183 - 
MIN_MODE_COMPLEX_FLOAT
,

186 
	mEND_BUILTINS


188 #unde‡
DEF_BUILTIN


192 
	eåì_code_˛ass
 {

193 
	mtcc_ex˚±i⁄Æ
,

194 
	mtcc_c⁄°™t
,

196 
	mtcc_ty≥
,

197 
	mtcc_de˛¨©i⁄
,

198 
	mtcc_ª„ªn˚
,

199 
	mtcc_com∑ris⁄
,

200 
	mtcc_u«ry
,

201 
	mtcc_bö¨y
,

202 
	mtcc_°©emít
,

204 
	mtcc_vl_exp
,

206 
	mtcc_ex¥essi⁄


211 
	eomp_˛au£_code
 {

214 
	mOMP_CLAUSE_ERROR
 = 0,

217 
	mOMP_CLAUSE_PRIVATE
,

220 
	mOMP_CLAUSE_SHARED
,

223 
	mOMP_CLAUSE_FIRSTPRIVATE
,

226 
	mOMP_CLAUSE_LASTPRIVATE
,

235 
	mOMP_CLAUSE_REDUCTION
,

238 
	mOMP_CLAUSE_COPYIN
,

241 
	mOMP_CLAUSE_COPYPRIVATE
,

244 
	mOMP_CLAUSE_LINEAR
,

247 
	mOMP_CLAUSE_ALIGNED
,

250 
	mOMP_CLAUSE_DEPEND
,

253 
	mOMP_CLAUSE_UNIFORM
,

256 
	mOMP_CLAUSE_FROM
,

259 
	mOMP_CLAUSE_TO
,

262 
	mOMP_CLAUSE_MAP
,

265 
	mOMP_CLAUSE__LOOPTEMP_
,

268 
	mOMP_CLAUSE_IF
,

271 
	mOMP_CLAUSE_NUM_THREADS
,

274 
	mOMP_CLAUSE_SCHEDULE
,

277 
	mOMP_CLAUSE_NOWAIT
,

280 
	mOMP_CLAUSE_ORDERED
,

283 
	mOMP_CLAUSE_DEFAULT
,

286 
	mOMP_CLAUSE_COLLAPSE
,

289 
	mOMP_CLAUSE_UNTIED
,

292 
	mOMP_CLAUSE_FINAL
,

295 
	mOMP_CLAUSE_MERGEABLE
,

298 
	mOMP_CLAUSE_DEVICE
,

301 
	mOMP_CLAUSE_DIST_SCHEDULE
,

304 
	mOMP_CLAUSE_INBRANCH
,

307 
	mOMP_CLAUSE_NOTINBRANCH
,

310 
	mOMP_CLAUSE_NUM_TEAMS
,

313 
	mOMP_CLAUSE_THREAD_LIMIT
,

316 
	mOMP_CLAUSE_PROC_BIND
,

319 
	mOMP_CLAUSE_SAFELEN
,

322 
	mOMP_CLAUSE_SIMDLEN
,

325 
	mOMP_CLAUSE_FOR
,

328 
	mOMP_CLAUSE_PARALLEL
,

331 
	mOMP_CLAUSE_SECTIONS
,

334 
	mOMP_CLAUSE_TASKGROUP
,

337 
	mOMP_CLAUSE__SIMDUID_


340 #unde‡
DEFTREESTRUCT


341 
	#DEFTREESTRUCT
(
ENUM
, 
NAME
ËENUM,

	)

342 
	eåì_node_°ru˘uª_íum
 {

343 
	~"åì°ru˘.def
"

344 
	mLAST_TS_ENUM


346 #unde‡
DEFTREESTRUCT


348 
	eomp_˛au£_scheduÀ_köd
 {

349 
	mOMP_CLAUSE_SCHEDULE_STATIC
,

350 
	mOMP_CLAUSE_SCHEDULE_DYNAMIC
,

351 
	mOMP_CLAUSE_SCHEDULE_GUIDED
,

352 
	mOMP_CLAUSE_SCHEDULE_AUTO
,

353 
	mOMP_CLAUSE_SCHEDULE_RUNTIME
,

354 
	mOMP_CLAUSE_SCHEDULE_LAST


357 
	eomp_˛au£_deÁu…_köd
 {

358 
	mOMP_CLAUSE_DEFAULT_UNSPECIFIED
,

359 
	mOMP_CLAUSE_DEFAULT_SHARED
,

360 
	mOMP_CLAUSE_DEFAULT_NONE
,

361 
	mOMP_CLAUSE_DEFAULT_PRIVATE
,

362 
	mOMP_CLAUSE_DEFAULT_FIRSTPRIVATE
,

363 
	mOMP_CLAUSE_DEFAULT_LAST


369 
	ecv_quÆifõr
 {

370 
	mTYPE_UNQUALIFIED
 = 0x0,

371 
	mTYPE_QUAL_CONST
 = 0x1,

372 
	mTYPE_QUAL_VOLATILE
 = 0x2,

373 
	mTYPE_QUAL_RESTRICT
 = 0x4,

374 
	mTYPE_QUAL_ATOMIC
 = 0x8

378 #i‚de‡
SYMBOL_VISIBILITY_DEFINED


379 
	#SYMBOL_VISIBILITY_DEFINED


	)

380 
	esymbﬁ_visibûôy
 {

381 
	mVISIBILITY_DEFAULT
,

382 
	mVISIBILITY_PROTECTED
,

383 
	mVISIBILITY_HIDDEN
,

384 
	mVISIBILITY_INTERNAL


389 
	eåì_ödex
 {

390 
	mTI_ERROR_MARK
,

391 
	mTI_INTQI_TYPE
,

392 
	mTI_INTHI_TYPE
,

393 
	mTI_INTSI_TYPE
,

394 
	mTI_INTDI_TYPE
,

395 
	mTI_INTTI_TYPE
,

397 
	mTI_UINTQI_TYPE
,

398 
	mTI_UINTHI_TYPE
,

399 
	mTI_UINTSI_TYPE
,

400 
	mTI_UINTDI_TYPE
,

401 
	mTI_UINTTI_TYPE
,

403 
	mTI_ATOMICQI_TYPE
,

404 
	mTI_ATOMICHI_TYPE
,

405 
	mTI_ATOMICSI_TYPE
,

406 
	mTI_ATOMICDI_TYPE
,

407 
	mTI_ATOMICTI_TYPE
,

409 
	mTI_UINT16_TYPE
,

410 
	mTI_UINT32_TYPE
,

411 
	mTI_UINT64_TYPE
,

413 
	mTI_INTEGER_ZERO
,

414 
	mTI_INTEGER_ONE
,

415 
	mTI_INTEGER_THREE
,

416 
	mTI_INTEGER_MINUS_ONE
,

417 
	mTI_NULL_POINTER
,

419 
	mTI_SIZE_ZERO
,

420 
	mTI_SIZE_ONE
,

422 
	mTI_BITSIZE_ZERO
,

423 
	mTI_BITSIZE_ONE
,

424 
	mTI_BITSIZE_UNIT
,

426 
	mTI_PUBLIC
,

427 
	mTI_PROTECTED
,

428 
	mTI_PRIVATE
,

430 
	mTI_BOOLEAN_FALSE
,

431 
	mTI_BOOLEAN_TRUE
,

433 
	mTI_COMPLEX_INTEGER_TYPE
,

434 
	mTI_COMPLEX_FLOAT_TYPE
,

435 
	mTI_COMPLEX_DOUBLE_TYPE
,

436 
	mTI_COMPLEX_LONG_DOUBLE_TYPE
,

438 
	mTI_FLOAT_TYPE
,

439 
	mTI_DOUBLE_TYPE
,

440 
	mTI_LONG_DOUBLE_TYPE
,

442 
	mTI_FLOAT_PTR_TYPE
,

443 
	mTI_DOUBLE_PTR_TYPE
,

444 
	mTI_LONG_DOUBLE_PTR_TYPE
,

445 
	mTI_INTEGER_PTR_TYPE
,

447 
	mTI_VOID_TYPE
,

448 
	mTI_PTR_TYPE
,

449 
	mTI_CONST_PTR_TYPE
,

450 
	mTI_SIZE_TYPE
,

451 
	mTI_PID_TYPE
,

452 
	mTI_PTRDIFF_TYPE
,

453 
	mTI_VA_LIST_TYPE
,

454 
	mTI_VA_LIST_GPR_COUNTER_FIELD
,

455 
	mTI_VA_LIST_FPR_COUNTER_FIELD
,

456 
	mTI_BOOLEAN_TYPE
,

457 
	mTI_FILEPTR_TYPE
,

458 
	mTI_POINTER_SIZED_TYPE
,

460 
	mTI_DFLOAT32_TYPE
,

461 
	mTI_DFLOAT64_TYPE
,

462 
	mTI_DFLOAT128_TYPE
,

463 
	mTI_DFLOAT32_PTR_TYPE
,

464 
	mTI_DFLOAT64_PTR_TYPE
,

465 
	mTI_DFLOAT128_PTR_TYPE
,

467 
	mTI_VOID_LIST_NODE
,

469 
	mTI_MAIN_IDENTIFIER
,

471 
	mTI_SAT_SFRACT_TYPE
,

472 
	mTI_SAT_FRACT_TYPE
,

473 
	mTI_SAT_LFRACT_TYPE
,

474 
	mTI_SAT_LLFRACT_TYPE
,

475 
	mTI_SAT_USFRACT_TYPE
,

476 
	mTI_SAT_UFRACT_TYPE
,

477 
	mTI_SAT_ULFRACT_TYPE
,

478 
	mTI_SAT_ULLFRACT_TYPE
,

479 
	mTI_SFRACT_TYPE
,

480 
	mTI_FRACT_TYPE
,

481 
	mTI_LFRACT_TYPE
,

482 
	mTI_LLFRACT_TYPE
,

483 
	mTI_USFRACT_TYPE
,

484 
	mTI_UFRACT_TYPE
,

485 
	mTI_ULFRACT_TYPE
,

486 
	mTI_ULLFRACT_TYPE
,

487 
	mTI_SAT_SACCUM_TYPE
,

488 
	mTI_SAT_ACCUM_TYPE
,

489 
	mTI_SAT_LACCUM_TYPE
,

490 
	mTI_SAT_LLACCUM_TYPE
,

491 
	mTI_SAT_USACCUM_TYPE
,

492 
	mTI_SAT_UACCUM_TYPE
,

493 
	mTI_SAT_ULACCUM_TYPE
,

494 
	mTI_SAT_ULLACCUM_TYPE
,

495 
	mTI_SACCUM_TYPE
,

496 
	mTI_ACCUM_TYPE
,

497 
	mTI_LACCUM_TYPE
,

498 
	mTI_LLACCUM_TYPE
,

499 
	mTI_USACCUM_TYPE
,

500 
	mTI_UACCUM_TYPE
,

501 
	mTI_ULACCUM_TYPE
,

502 
	mTI_ULLACCUM_TYPE
,

503 
	mTI_QQ_TYPE
,

504 
	mTI_HQ_TYPE
,

505 
	mTI_SQ_TYPE
,

506 
	mTI_DQ_TYPE
,

507 
	mTI_TQ_TYPE
,

508 
	mTI_UQQ_TYPE
,

509 
	mTI_UHQ_TYPE
,

510 
	mTI_USQ_TYPE
,

511 
	mTI_UDQ_TYPE
,

512 
	mTI_UTQ_TYPE
,

513 
	mTI_SAT_QQ_TYPE
,

514 
	mTI_SAT_HQ_TYPE
,

515 
	mTI_SAT_SQ_TYPE
,

516 
	mTI_SAT_DQ_TYPE
,

517 
	mTI_SAT_TQ_TYPE
,

518 
	mTI_SAT_UQQ_TYPE
,

519 
	mTI_SAT_UHQ_TYPE
,

520 
	mTI_SAT_USQ_TYPE
,

521 
	mTI_SAT_UDQ_TYPE
,

522 
	mTI_SAT_UTQ_TYPE
,

523 
	mTI_HA_TYPE
,

524 
	mTI_SA_TYPE
,

525 
	mTI_DA_TYPE
,

526 
	mTI_TA_TYPE
,

527 
	mTI_UHA_TYPE
,

528 
	mTI_USA_TYPE
,

529 
	mTI_UDA_TYPE
,

530 
	mTI_UTA_TYPE
,

531 
	mTI_SAT_HA_TYPE
,

532 
	mTI_SAT_SA_TYPE
,

533 
	mTI_SAT_DA_TYPE
,

534 
	mTI_SAT_TA_TYPE
,

535 
	mTI_SAT_UHA_TYPE
,

536 
	mTI_SAT_USA_TYPE
,

537 
	mTI_SAT_UDA_TYPE
,

538 
	mTI_SAT_UTA_TYPE
,

540 
	mTI_OPTIMIZATION_DEFAULT
,

541 
	mTI_OPTIMIZATION_CURRENT
,

542 
	mTI_TARGET_OPTION_DEFAULT
,

543 
	mTI_TARGET_OPTION_CURRENT
,

544 
	mTI_CURRENT_TARGET_PRAGMA
,

545 
	mTI_CURRENT_OPTIMIZE_PRAGMA
,

547 
	mTI_MAX


554 
	eöãgî_ty≥_köd
 {

555 
	môk_ch¨
,

556 
	môk_sig√d_ch¨
,

557 
	môk_unsig√d_ch¨
,

558 
	môk_sh‹t
,

559 
	môk_unsig√d_sh‹t
,

560 
	môk_öt
,

561 
	môk_unsig√d_öt
,

562 
	môk_l⁄g
,

563 
	môk_unsig√d_l⁄g
,

564 
	môk_l⁄g_l⁄g
,

565 
	môk_unsig√d_l⁄g_l⁄g
,

566 
	môk_öt128
,

567 
	môk_unsig√d_öt128
,

568 
	môk_n⁄e


591 
	e±rmemfunc_vbô_whîe_t
 {

592 
	m±rmemfunc_vbô_ö_p‚
,

593 
	m±rmemfunc_vbô_ö_dñè


598 
	e©åibuã_Êags
 {

602 
	mATTR_FLAG_DECL_NEXT
 = 1,

606 
	mATTR_FLAG_FUNCTION_NEXT
 = 2,

610 
	mATTR_FLAG_ARRAY_NEXT
 = 4,

613 
	mATTR_FLAG_TYPE_IN_PLACE
 = 8,

617 
	mATTR_FLAG_BUILT_IN
 = 16,

619 
	mATTR_FLAG_CXX11
 = 32

623 
	esize_ty≥_köd
 {

624 
	m°k_sizëy≥
,

625 
	m°k_ssizëy≥
,

626 
	m°k_bôsizëy≥
,

627 
	m°k_sbôsizëy≥
,

628 
	m°k_ty≥_köd_œ°


631 
	e›î™d_equÆ_Êag
 {

632 
	mOEP_ONLY_CONST
 = 1,

633 
	mOEP_PURE_SAME
 = 2,

634 
	mOEP_CONSTANT_ADDRESS_OF
 = 4

639 
	eåì_node_köd
 {

640 
	md_köd
,

641 
	mt_köd
,

642 
	mb_köd
,

643 
	ms_köd
,

644 
	mr_köd
,

645 
	me_köd
,

646 
	mc_köd
,

647 
	mid_köd
,

648 
	mvec_köd
,

649 
	mböfo_köd
,

650 
	msß_«me_köd
,

651 
	mc⁄°r_köd
,

652 
	mx_köd
,

653 
	mœng_de˛
,

654 
	mœng_ty≥
,

655 
	momp_˛au£_köd
,

656 
	mÆl_köds


659 
	e™nŸ_ex¥_köd
 {

660 
	m™nŸ_ex¥_ivdï_köd


670 
GTY
(()Ë
	gÆüs_∑ú
 {

671 
åì
 
	gde˛
;

672 
åì
 
	gèrgë
;

676 
	t¥i‹ôy_ty≥
;

679 
	$åì
 (*
	twÆk_åì_‚
Ë(
	tåì
 *, *, *);

682 
	$åì
 (*
	twÆk_åì_lh
Ë(
	tåì
 *, *,Åree (*) (tree *, *, *),

683 *, 
	tpoöãr_£t_t
*);

710 
	`GTY
(()Ë
åì_ba£
 {

711 
	`ENUM_BITFIELD
(
åì_code
Ë
code
 : 16;

713 
side_ef„˘s_Êag
 : 1;

714 
c⁄°™t_Êag
 : 1;

715 
addªsßbÀ_Êag
 : 1;

716 
vﬁ©ûe_Êag
 : 1;

717 
ªad⁄ly_Êag
 : 1;

718 
asm_wrôãn_Êag
: 1;

719 
now¨nög_Êag
 : 1;

720 
visôed
 : 1;

722 
u£d_Êag
 : 1;

723 
nŸhrow_Êag
 : 1;

724 
°©ic_Êag
 : 1;

725 
public_Êag
 : 1;

726 
¥iv©e_Êag
 : 1;

727 
¥Ÿe˘ed_Êag
 : 1;

728 
dïªˇãd_Êag
 : 1;

729 
deÁu…_def_Êag
 : 1;

735 
œng_Êag_0
 : 1;

736 
œng_Êag_1
 : 1;

737 
œng_Êag_2
 : 1;

738 
œng_Êag_3
 : 1;

739 
œng_Êag_4
 : 1;

740 
œng_Êag_5
 : 1;

741 
œng_Êag_6
 : 1;

742 
ßtuøtög_Êag
 : 1;

744 
unsig√d_Êag
 : 1;

745 
∑cked_Êag
 : 1;

746 
u£r_Æign
 : 1;

747 
«mñess_Êag
 : 1;

748 
©omic_Êag
 : 1;

749 
•¨e0
 : 3;

751 
•¨e1
 : 8;

756 
addªss_•a˚
 : 8;

757 } 
bôs
;

762 
Àngth
;

764 
vîsi⁄
;

765 } 
	`GTY
((
	`skù
(""))Ë
u
;

766 
	}
};

1039 
GTY
(()Ë
	gåì_ty≥d
 {

1040 
åì_ba£
 
	gba£
;

1041 
åì
 
	gty≥
;

1044 
GTY
(()Ë
	gåì_comm⁄
 {

1045 
åì_ty≥d
 
	gty≥d
;

1046 
åì
 
	gchaö
;

1049 
GTY
(()Ë
	gåì_öt_c°
 {

1050 
åì_ty≥d
 
	gty≥d
;

1051 
doubÀ_öt
 
	göt_c°
;

1055 
GTY
(()Ë
	gåì_ªÆ_c°
 {

1056 
åì_ty≥d
 
	gty≥d
;

1057 
ªÆ_vÆue
 * 
	gªÆ_c°_±r
;

1060 
GTY
(()Ë
	gåì_fixed_c°
 {

1061 
åì_ty≥d
 
	gty≥d
;

1062 
fixed_vÆue
 * 
	gfixed_c°_±r
;

1065 
GTY
(()Ë
	gåì_°rög
 {

1066 
åì_ty≥d
 
	gty≥d
;

1067 
	gÀngth
;

1068 
	g°r
[1];

1071 
GTY
(()Ë
	gåì_com∂ex
 {

1072 
åì_ty≥d
 
	gty≥d
;

1073 
åì
 
	gªÆ
;

1074 
åì
 
	gimag
;

1077 
GTY
(()Ë
	gåì_ve˘‹
 {

1078 
åì_ty≥d
 
	gty≥d
;

1079 
åì
 
GTY
 ((
Àngth
 ("TYPE_VECTOR_SUBPARTS (TREE_TYPE (—ªe)&%h))"))Ë
	gñts
[1];

1082 
GTY
(()Ë
	gåì_idítifõr
 {

1083 
åì_comm⁄
 
	gcomm⁄
;

1084 
ht_idítifõr
 
	gid
;

1087 
GTY
(()Ë
	gåì_li°
 {

1088 
åì_comm⁄
 
	gcomm⁄
;

1089 
åì
 
	gpuΩo£
;

1090 
åì
 
	gvÆue
;

1093 
GTY
(()Ë
	gåì_vec
 {

1094 
åì_comm⁄
 
	gcomm⁄
;

1095 
åì
 
GTY
 ((
Àngth
 ("TREE_VEC_LENGTH (—ªe)&%h)"))Ë
	ga
[1];

1102 
GTY
(()Ë
	gc⁄°ru˘‹_ñt
 {

1103 
åì
 
	gödex
;

1104 
åì
 
	gvÆue
;

1107 
GTY
(()Ë
	gåì_c⁄°ru˘‹
 {

1108 
åì_ty≥d
 
	gty≥d
;

1109 
	gvec
<
	gc⁄°ru˘‹_ñt
, 
	gva_gc
> *
	gñts
;

1112 
	eomp_˛au£_dïíd_köd


1114 
	mOMP_CLAUSE_DEPEND_IN
,

1115 
	mOMP_CLAUSE_DEPEND_OUT
,

1116 
	mOMP_CLAUSE_DEPEND_INOUT
,

1117 
	mOMP_CLAUSE_DEPEND_LAST


1120 
	eomp_˛au£_m≠_köd


1122 
	mOMP_CLAUSE_MAP_ALLOC
,

1123 
	mOMP_CLAUSE_MAP_TO
,

1124 
	mOMP_CLAUSE_MAP_FROM
,

1125 
	mOMP_CLAUSE_MAP_TOFROM
,

1129 
	mOMP_CLAUSE_MAP_POINTER
,

1134 
	mOMP_CLAUSE_MAP_TO_PSET
,

1135 
	mOMP_CLAUSE_MAP_LAST


1138 
	eomp_˛au£_¥oc_böd_köd


1141 
	mOMP_CLAUSE_PROC_BIND_FALSE
 = 0,

1142 
	mOMP_CLAUSE_PROC_BIND_TRUE
 = 1,

1143 
	mOMP_CLAUSE_PROC_BIND_MASTER
 = 2,

1144 
	mOMP_CLAUSE_PROC_BIND_CLOSE
 = 3,

1145 
	mOMP_CLAUSE_PROC_BIND_SPREAD
 = 4,

1146 
	mOMP_CLAUSE_PROC_BIND_LAST


1149 
GTY
(()Ë
	gåì_exp
 {

1150 
åì_ty≥d
 
	gty≥d
;

1151 
loˇti⁄_t
 
	glocus
;

1152 
åì
 
GTY
 ((
•ecül
 ("tree_exp"),

1153 
desc
 ("TREE_CODE ((tree) &%0)")))

1154 
	g›î™ds
[1];

1159 
GTY
(()Ë
	gsß_u£_›î™d_t
 {

1160 
sß_u£_›î™d_t
* 
GTY
((
skù
(""))Ë
	g¥ev
;

1161 
sß_u£_›î™d_t
* 
GTY
((
skù
(""))Ë
	g√xt
;

1167 uni⁄ { 
gim∂e
 
	g°mt
; 
åì
 
	gsß_«me
; } 
GTY
((
skù
(""))Ë
	gloc
;

1168 
åì
 *
GTY
((
skù
(""))Ë
	gu£
;

1171 
GTY
(()Ë
	gåì_sß_«me
 {

1172 
åì_ty≥d
 
	gty≥d
;

1175 
åì
 
	gv¨
;

1178 
gim∂e
 
	gdef_°mt
;

1181 
	usß_«me_öfo_ty≥
 {

1183 
GTY
 ((
èg
 ("0"))Ë
±r_öfo_def
 *
	g±r_öfo
;

1185 
GTY
 ((
èg
 ("1"))Ë
ønge_öfo_def
 *
	gønge_öfo
;

1186 } 
GTY
 ((
desc
 ("%1.typed.type ?" \

1187 "!POINTER_TYPE_P (TREE_TYPE (—ªe)&%1)Ë: 2"))Ë
	göfo
;

1190 
sß_u£_›î™d_t
 
	gimm_u£s
;

1193 
GTY
(()Ë
	gphi_¨g_d
 {

1196 
sß_u£_›î™d_t
 
	gimm_u£
;

1197 
åì
 
	gdef
;

1198 
loˇti⁄_t
 
	glocus
;

1201 
GTY
(()Ë
	gåì_omp_˛au£
 {

1202 
åì_comm⁄
 
	gcomm⁄
;

1203 
loˇti⁄_t
 
	glocus
;

1204 
omp_˛au£_code
 
	gcode
;

1205 
	uomp_˛au£_subcode
 {

1206 
omp_˛au£_deÁu…_köd
 
	gdeÁu…_köd
;

1207 
omp_˛au£_scheduÀ_köd
 
	gscheduÀ_köd
;

1208 
omp_˛au£_dïíd_köd
 
	gdïíd_köd
;

1209 
omp_˛au£_m≠_köd
 
	gm≠_köd
;

1210 
omp_˛au£_¥oc_böd_köd
 
	g¥oc_böd_köd
;

1211 
åì_code
 
	gªdu˘i⁄_code
;

1212 } 
GTY
 ((
skù
)Ë
	gsubcode
;

1216 
gim∂e_£q
 
	ggim∂e_ªdu˘i⁄_öô
;

1217 
gim∂e_£q
 
	ggim∂e_ªdu˘i⁄_mîge
;

1219 
åì
 
GTY
 ((
Àngth
 ("omp_clause_num_ops[OMP_CLAUSE_CODE ((tree)&%h)]")))

1220 
	g›s
[1];

1223 
GTY
(()Ë
	gåì_block
 {

1224 
åì_ba£
 
	gba£
;

1225 
åì
 
	gchaö
;

1227 
	gab°ø˘_Êag
 : 1;

1228 
	gblock_num
 : 31;

1230 
loˇti⁄_t
 
	glocus
;

1232 
åì
 
	gv¨s
;

1233 
	gvec
<
	gåì
, 
	gva_gc
> *
	gn⁄loˇlized_v¨s
;

1235 
åì
 
	gsubblocks
;

1236 
åì
 
	gsu≥rc⁄ãxt
;

1237 
åì
 
	gab°ø˘_‹igö
;

1238 
åì
 
	g‰agmít_‹igö
;

1239 
åì
 
	g‰agmít_chaö
;

1242 
GTY
(()Ë
	gåì_ty≥_comm⁄
 {

1243 
åì_comm⁄
 
	gcomm⁄
;

1244 
åì
 
	gsize
;

1245 
åì
 
	gsize_unô
;

1246 
åì
 
	g©åibuãs
;

1247 
	guid
;

1249 
	g¥ecisi⁄
 : 10;

1250 
	gno_f‹˚_blk_Êag
 : 1;

1251 
	g√eds_c⁄°ru˘ög_Êag
 : 1;

1252 
	gå™•¨ít_aggr_Êag
 : 1;

1253 
	gª°ri˘_Êag
 : 1;

1254 
	gc⁄èös_∂a˚hﬁdî_bôs
 : 2;

1256 
ENUM_BITFIELD
(
machöe_mode
Ë
	gmode
 : 8;

1258 
	g°rög_Êag
 : 1;

1259 
	gœng_Êag_0
 : 1;

1260 
	gœng_Êag_1
 : 1;

1261 
	gœng_Êag_2
 : 1;

1262 
	gœng_Êag_3
 : 1;

1263 
	gœng_Êag_4
 : 1;

1264 
	gœng_Êag_5
 : 1;

1265 
	gœng_Êag_6
 : 1;

1267 
	gÆign
;

1268 
Æüs_£t_ty≥
 
	gÆüs_£t
;

1269 
åì
 
	gpoöãr_to
;

1270 
åì
 
	gª„ªn˚_to
;

1271 
	uåì_ty≥_symèb
 {

1272 
GTY
 ((
èg
 ("TYPE_SYMTAB_IS_ADDRESS"))Ë
	gaddªss
;

1273 c⁄° * 
GTY
 ((
èg
 ("TYPE_SYMTAB_IS_POINTER"))Ë
	gpoöãr
;

1274 
dõ_°ru˘
 * 
GTY
 ((
èg
 ("TYPE_SYMTAB_IS_DIE"))Ë
	gdõ
;

1275 } 
GTY
 ((
desc
 ("debug_hooks->åì_ty≥_symèb_fõld"))Ë
	gsymèb
;

1276 
åì
 
	gˇn⁄iˇl
;

1277 
åì
 
	g√xt_v¨ü¡
;

1278 
åì
 
	gmaö_v¨ü¡
;

1279 
åì
 
	gc⁄ãxt
;

1280 
åì
 
	g«me
;

1283 
GTY
(()Ë
	gåì_ty≥_wôh_œng_•ecific
 {

1284 
åì_ty≥_comm⁄
 
	gcomm⁄
;

1286 
œng_ty≥
 *
	gœng_•ecific
;

1289 
GTY
(()Ë
	gåì_ty≥_n⁄_comm⁄
 {

1290 
åì_ty≥_wôh_œng_•ecific
 
	gwôh_œng_•ecific
;

1291 
åì
 
	gvÆues
;

1292 
åì
 
	gmövÆ
;

1293 
åì
 
	gmaxvÆ
;

1294 
åì
 
	gböfo
;

1297 
GTY
 (()Ë
	gåì_böfo
 {

1298 
åì_comm⁄
 
	gcomm⁄
;

1300 
åì
 
	goff£t
;

1301 
åì
 
	gvèbÀ
;

1302 
åì
 
	gvútuÆs
;

1303 
åì
 
	gv±r_fõld
;

1304 
	gvec
<
	gåì
, 
	gva_gc
> *
	gba£_ac˚s£s
;

1305 
åì
 
	göhîô™˚
;

1307 
åì
 
	gvâ_subvâ
;

1308 
åì
 
	gvâ_v±r
;

1310 
	gvec
<
	gåì
, 
	gva_gc
> 
	gba£_böfos
;

1313 
GTY
(()Ë
	gåì_de˛_möimÆ
 {

1314 
åì_comm⁄
 
	gcomm⁄
;

1315 
loˇti⁄_t
 
	glocus
;

1316 
	guid
;

1317 
åì
 
	g«me
;

1318 
åì
 
	gc⁄ãxt
;

1321 
GTY
(()Ë
	gåì_de˛_comm⁄
 {

1322 
åì_de˛_möimÆ
 
	gcomm⁄
;

1323 
åì
 
	gsize
;

1325 
ENUM_BITFIELD
(
machöe_mode
Ë
	gmode
 : 8;

1327 
	gn⁄loˇl_Êag
 : 1;

1328 
	gvútuÆ_Êag
 : 1;

1329 
	gign‹ed_Êag
 : 1;

1330 
	gab°ø˘_Êag
 : 1;

1331 
	g¨tificül_Êag
 : 1;

1332 
	g¥e£rve_Êag
: 1;

1333 
	gdebug_ex¥_is_‰om
 : 1;

1335 
	gœng_Êag_0
 : 1;

1336 
	gœng_Êag_1
 : 1;

1337 
	gœng_Êag_2
 : 1;

1338 
	gœng_Êag_3
 : 1;

1339 
	gœng_Êag_4
 : 1;

1340 
	gœng_Êag_5
 : 1;

1341 
	gœng_Êag_6
 : 1;

1342 
	gœng_Êag_7
 : 1;

1343 
	gœng_Êag_8
 : 1;

1346 
	gde˛_Êag_0
 : 1;

1350 
	gde˛_Êag_1
 : 1;

1354 
	gde˛_Êag_2
 : 1;

1356 
	gde˛_Êag_3
 : 1;

1359 
	ggim∂e_ªg_Êag
 : 1;

1361 
	gde˛_by_ª„ªn˚_Êag
 : 1;

1363 
	gde˛_ªad_Êag
 : 1;

1365 
	gde˛_n⁄sh¨óbÀ_Êag
 : 1;

1368 
	goff_Æign
 : 8;

1373 
	gÆign
;

1376 
	g±_uid
;

1378 
åì
 
	gsize_unô
;

1379 
åì
 
	göôül
;

1380 
åì
 
	g©åibuãs
;

1381 
åì
 
	gab°ø˘_‹igö
;

1384 
œng_de˛
 *
	gœng_•ecific
;

1387 
GTY
(()Ë
	gåì_de˛_wôh_πl
 {

1388 
åì_de˛_comm⁄
 
	gcomm⁄
;

1389 
πx
 
	gπl
;

1392 
GTY
(()Ë
	gåì_fõld_de˛
 {

1393 
åì_de˛_comm⁄
 
	gcomm⁄
;

1395 
åì
 
	goff£t
;

1396 
åì
 
	gbô_fõld_ty≥
;

1397 
åì
 
	gquÆifõr
;

1398 
åì
 
	gbô_off£t
;

1399 
åì
 
	gfc⁄ãxt
;

1402 
GTY
(()Ë
	gåì_œbñ_de˛
 {

1403 
åì_de˛_wôh_πl
 
	gcomm⁄
;

1404 
	gœbñ_de˛_uid
;

1405 
	geh_œndög_∑d_ƒ
;

1408 
GTY
(()Ë
	gåì_ªsu…_de˛
 {

1409 
åì_de˛_wôh_πl
 
	gcomm⁄
;

1412 
GTY
(()Ë
	gåì_c⁄°_de˛
 {

1413 
åì_de˛_comm⁄
 
	gcomm⁄
;

1416 
GTY
(()Ë
	gåì_∑rm_de˛
 {

1417 
åì_de˛_wôh_πl
 
	gcomm⁄
;

1418 
πx
 
	göcomög_πl
;

1421 
GTY
(()Ë
	gåì_de˛_wôh_vis
 {

1422 
åì_de˛_wôh_πl
 
	gcomm⁄
;

1423 
åì
 
	gas£mbÀr_«me
;

1424 
åì
 
	g£˘i⁄_«me
;

1425 
åì
 
	gcomd©_group
;

1428 
	gde„r_ouçut
 : 1;

1429 
	gh¨d_ªgi°î
 : 1;

1430 
	gcomm⁄_Êag
 : 1;

1431 
	gö_ãxt_£˘i⁄
 : 1;

1432 
	gö_c⁄°™t_poﬁ
 : 1;

1433 
	gdŒimp‹t_Êag
 : 1;

1435 
	gwók_Êag
 : 1;

1437 
	gim∂icô_£˘i⁄_«me_p
 : 1;

1439 
	g£í_ö_böd_ex¥
 : 1;

1440 
	gcomd©_Êag
 : 1;

1441 
ENUM_BITFIELD
(
symbﬁ_visibûôy
Ë
	gvisibûôy
 : 2;

1442 
	gvisibûôy_•ecifõd
 : 1;

1444 
ENUM_BITFIELD
(
és_modñ
Ë
	gés_modñ
 : 3;

1447 
	göô_¥i‹ôy_p
 : 1;

1449 
	gshadowed_f‹_v¨_p
 : 1;

1451 
	gcxx_c⁄°ru˘‹
 : 1;

1453 
	gcxx_de°ru˘‹
 : 1;

1455 
	gföÆ
 : 1;

1459 
GTY
(()Ë
	gåì_v¨_de˛
 {

1460 
åì_de˛_wôh_vis
 
	gcomm⁄
;

1463 
GTY
(()Ë
	gåì_de˛_n⁄_comm⁄
 {

1464 
åì_de˛_wôh_vis
 
	gcomm⁄
;

1466 
åì
 
	gßved_åì
;

1468 
åì
 
	g¨gumíts
;

1470 
åì
 
	gªsu…
;

1472 
åì
 
	gvödex
;

1480 
GTY
(()Ë
	gåì_fun˘i⁄_de˛
 {

1481 
åì_de˛_n⁄_comm⁄
 
	gcomm⁄
;

1483 
fun˘i⁄
 *
	gf
;

1486 
åì
 
	g≥rs⁄Æôy
;

1489 
åì
 
	gfun˘i⁄_•ecific_èrgë
;

1490 
åì
 
	gfun˘i⁄_•ecific_›timiz©i⁄
;

1496 
ENUM_BITFIELD
(
buût_ö_fun˘i⁄
Ë
	gfun˘i⁄_code
 : 11;

1497 
ENUM_BITFIELD
(
buût_ö_˛ass
Ë
	gbuût_ö_˛ass
 : 2;

1499 
	g°©ic_˘‹_Êag
 : 1;

1500 
	g°©ic_dt‹_Êag
 : 1;

1501 
	gunölöabÀ
 : 1;

1503 
	gpossibly_ölöed
 : 1;

1504 
	gnov›s_Êag
 : 1;

1505 
	gªtu∫s_twi˚_Êag
 : 1;

1506 
	gmÆloc_Êag
 : 1;

1507 
	g›î©‹_√w_Êag
 : 1;

1508 
	gde˛¨ed_ölöe_Êag
 : 1;

1509 
	gªgde˛_Êag
 : 1;

1510 
	gno_ölöe_w¨nög_Êag
 : 1;

1512 
	gno_ö°rumít_fun˘i⁄_íåy_exô
 : 1;

1513 
	gno_limô_°ack
 : 1;

1514 
	gdi§eg¨d_ölöe_limôs
 : 1;

1515 
	gpuª_Êag
 : 1;

1516 
	glo›ög_c⁄°_‹_puª_Êag
 : 1;

1517 
	ghas_debug_¨gs_Êag
 : 1;

1518 
	gtm_˛⁄e_Êag
 : 1;

1519 
	gvîsi⁄ed_fun˘i⁄
 : 1;

1523 
GTY
(()Ë
	gåì_å™¶©i⁄_unô_de˛
 {

1524 
åì_de˛_comm⁄
 
	gcomm⁄
;

1526 c⁄° * 
GTY
((
skù
(""))Ë
	gœnguage
;

1531 
GTY
(()Ë
	gåì_ty≥_de˛
 {

1532 
åì_de˛_n⁄_comm⁄
 
	gcomm⁄
;

1536 
GTY
 ((
chaö_√xt
 ("%h.√xt"), 
chaö_¥ev
 ("%h.¥ev"))Ë
	gåì_°©emít_li°_node


1538 
åì_°©emít_li°_node
 *
	g¥ev
;

1539 
åì_°©emít_li°_node
 *
	g√xt
;

1540 
åì
 
	g°mt
;

1543 
GTY
(()Ë
	gåì_°©emít_li°


1545 
åì_ty≥d
 
	gty≥d
;

1546 
åì_°©emít_li°_node
 *
	ghód
;

1547 
åì_°©emít_li°_node
 *
	gèû
;

1553 
GTY
(()Ë
	gåì_›timiz©i⁄_›ti⁄
 {

1554 
åì_comm⁄
 
	gcomm⁄
;

1557 
˛_›timiz©i⁄
 
	g›ts
;

1561 *
GTY
 ((
©omic
)Ë
	g›èbs
;

1565 
èrgë_›èbs
 *
GTY
 ((
skù
)Ë
	gba£_›èbs
;

1570 
GTY
(()Ë
	gèrgë_globÆs
;

1574 
GTY
(()Ë
	gåì_èrgë_›ti⁄
 {

1575 
åì_comm⁄
 
	gcomm⁄
;

1578 
èrgë_globÆs
 *
	gglobÆs
;

1581 
˛_èrgë_›ti⁄
 
	g›ts
;

1587 
GTY
 ((
±r_Æüs
 (
œng_åì_node
),

1588 
desc
 ("åì_node_°ru˘uª (&%h)"), 
v¨übÀ_size
)Ë
	gåì_node
 {

1589 
åì_ba£
 
GTY
 ((
èg
 ("TS_BASE"))Ë
	gba£
;

1590 
åì_ty≥d
 
GTY
 ((
èg
 ("TS_TYPED"))Ë
	gty≥d
;

1591 
åì_comm⁄
 
GTY
 ((
èg
 ("TS_COMMON"))Ë
	gcomm⁄
;

1592 
åì_öt_c°
 
GTY
 ((
èg
 ("TS_INT_CST"))Ë
	göt_c°
;

1593 
åì_ªÆ_c°
 
GTY
 ((
èg
 ("TS_REAL_CST"))Ë
	gªÆ_c°
;

1594 
åì_fixed_c°
 
GTY
 ((
èg
 ("TS_FIXED_CST"))Ë
	gfixed_c°
;

1595 
åì_ve˘‹
 
GTY
 ((
èg
 ("TS_VECTOR"))Ë
	gve˘‹
;

1596 
åì_°rög
 
GTY
 ((
èg
 ("TS_STRING"))Ë
	g°rög
;

1597 
åì_com∂ex
 
GTY
 ((
èg
 ("TS_COMPLEX"))Ë
	gcom∂ex
;

1598 
åì_idítifõr
 
GTY
 ((
èg
 ("TS_IDENTIFIER"))Ë
	gidítifõr
;

1599 
åì_de˛_möimÆ
 
GTY
((
èg
 ("TS_DECL_MINIMAL"))Ë
	gde˛_möimÆ
;

1600 
åì_de˛_comm⁄
 
GTY
 ((
èg
 ("TS_DECL_COMMON"))Ë
	gde˛_comm⁄
;

1601 
åì_de˛_wôh_πl
 
GTY
 ((
èg
 ("TS_DECL_WRTL"))Ë
	gde˛_wôh_πl
;

1602 
åì_de˛_n⁄_comm⁄
 
GTY
 ((
èg
 ("TS_DECL_NON_COMMON")))

1603 
	gde˛_n⁄_comm⁄
;

1604 
åì_∑rm_de˛
 
GTY
 ((
èg
 ("TS_PARM_DECL"))Ë
	g∑rm_de˛
;

1605 
åì_de˛_wôh_vis
 
GTY
 ((
èg
 ("TS_DECL_WITH_VIS"))Ë
	gde˛_wôh_vis
;

1606 
åì_v¨_de˛
 
GTY
 ((
èg
 ("TS_VAR_DECL"))Ë
	gv¨_de˛
;

1607 
åì_fõld_de˛
 
GTY
 ((
èg
 ("TS_FIELD_DECL"))Ë
	gfõld_de˛
;

1608 
åì_œbñ_de˛
 
GTY
 ((
èg
 ("TS_LABEL_DECL"))Ë
	gœbñ_de˛
;

1609 
åì_ªsu…_de˛
 
GTY
 ((
èg
 ("TS_RESULT_DECL"))Ë
	gªsu…_de˛
;

1610 
åì_c⁄°_de˛
 
GTY
 ((
èg
 ("TS_CONST_DECL"))Ë
	gc⁄°_de˛
;

1611 
åì_ty≥_de˛
 
GTY
 ((
èg
 ("TS_TYPE_DECL"))Ë
	gty≥_de˛
;

1612 
åì_fun˘i⁄_de˛
 
GTY
 ((
èg
 ("TS_FUNCTION_DECL"))Ë
	gfun˘i⁄_de˛
;

1613 
åì_å™¶©i⁄_unô_de˛
 
GTY
 ((
èg
 ("TS_TRANSLATION_UNIT_DECL")))

1614 
	gå™¶©i⁄_unô_de˛
;

1615 
åì_ty≥_comm⁄
 
GTY
 ((
èg
 ("TS_TYPE_COMMON"))Ë
	gty≥_comm⁄
;

1616 
åì_ty≥_wôh_œng_•ecific
 
GTY
 ((
èg
 ("TS_TYPE_WITH_LANG_SPECIFIC")))

1617 
	gty≥_wôh_œng_•ecific
;

1618 
åì_ty≥_n⁄_comm⁄
 
GTY
 ((
èg
 ("TS_TYPE_NON_COMMON")))

1619 
	gty≥_n⁄_comm⁄
;

1620 
åì_li°
 
GTY
 ((
èg
 ("TS_LIST"))Ë
	gli°
;

1621 
åì_vec
 
GTY
 ((
èg
 ("TS_VEC"))Ë
	gvec
;

1622 
åì_exp
 
GTY
 ((
èg
 ("TS_EXP"))Ë
	gexp
;

1623 
åì_sß_«me
 
GTY
 ((
èg
 ("TS_SSA_NAME"))Ë
	gsß_«me
;

1624 
åì_block
 
GTY
 ((
èg
 ("TS_BLOCK"))Ë
	gblock
;

1625 
åì_böfo
 
GTY
 ((
èg
 ("TS_BINFO"))Ë
	gböfo
;

1626 
åì_°©emít_li°
 
GTY
 ((
èg
 ("TS_STATEMENT_LIST"))Ë
	g°mt_li°
;

1627 
åì_c⁄°ru˘‹
 
GTY
 ((
èg
 ("TS_CONSTRUCTOR"))Ë
	gc⁄°ru˘‹
;

1628 
åì_omp_˛au£
 
GTY
 ((
èg
 ("TS_OMP_CLAUSE"))Ë
	gomp_˛au£
;

1629 
åì_›timiz©i⁄_›ti⁄
 
GTY
 ((
èg
 ("TS_OPTIMIZATION"))Ë
	g›timiz©i⁄
;

1630 
åì_èrgë_›ti⁄
 
GTY
 ((
èg
 ("TS_TARGET_OPTION"))Ë
	gèrgë_›ti⁄
;

1634 
	s©åibuã_•ec
 {

1637 c⁄° *
	m«me
;

1639 
	mmö_Àngth
;

1642 
	mmax_Àngth
;

1650 
boﬁ
 
	mde˛_ªquúed
;

1653 
boﬁ
 
	mty≥_ªquúed
;

1658 
boﬁ
 
	mfun˘i⁄_ty≥_ªquúed
;

1673 
åì
 (*
h™dÀr
Ë—ªê*
	mnode
,Åªê
	m«me
,Åªê
	m¨gs
,

1674 
	mÊags
, 
boﬁ
 *
	mno_add_©ås
);

1676 
boﬁ
 
	maf„˘s_ty≥_idítôy
;

1685 
	sªc‹d_œyout_öfo_s
 {

1687 
åì
 
	mt
;

1690 
åì
 
	moff£t
;

1692 
	moff£t_Æign
;

1694 
åì
 
	mbôpos
;

1696 
	mªc‹d_Æign
;

1699 
	mu≈acked_Æign
;

1701 
åì
 
	m¥ev_fõld
;

1704 
	mvec
<
	måì
, 
	mva_gc
> *
	m≥ndög_°©ics
;

1706 
	mªmaöög_ö_Æignmít
;

1709 
	m∑cked_maybe_√˚sßry
;

1710 } *
	tªc‹d_œyout_öfo
;

1713 
	sfun˘i⁄_¨gs_ôî©‹
 {

1714 
åì
 
	m√xt
;

1718 
GTY
(()Ë
	gåì_m≠_ba£
 {

1719 
åì
 
	g‰om
;

1724 
GTY
(()Ë
	gåì_m≠
 {

1725 
åì_m≠_ba£
 
	gba£
;

1726 
	ghash
;

1727 
åì
 
	gto
;

1731 
GTY
(()Ë
	gåì_de˛_m≠
 {

1732 
åì_m≠_ba£
 
	gba£
;

1733 
åì
 
	gto
;

1737 
GTY
(()Ë
	gåì_öt_m≠
 {

1738 
åì_m≠_ba£
 
	gba£
;

1739 
	gto
;

1743 
GTY
(()Ë
	gåì_¥i‹ôy_m≠
 {

1744 
åì_m≠_ba£
 
	gba£
;

1745 
¥i‹ôy_ty≥
 
	göô
;

1746 
¥i‹ôy_ty≥
 
	gföi
;

1750 
GTY
(()Ë
	gåì_vec_m≠
 {

1751 
åì_m≠_ba£
 
	gba£
;

1752 
	gvec
<
	gåì
, 
	gva_gc
> *
	gto
;

1760 
	sˇŒ_ex¥_¨g_ôî©‹
 {

1761 
åì
 
	mt
;

1762 
	mn
;

1763 
	mi
;

1766 
	sc⁄°_ˇŒ_ex¥_¨g_ôî©‹
 {

1767 
c⁄°_åì
 
	mt
;

1768 
	mn
;

1769 
	mi
;

1775 
GTY
(()Ë
	gbuûtö_öfo_ty≥
 {

1776 
åì
 
	gde˛
[()
END_BUILTINS
];

1777 
boﬁ
 
	gim∂icô_p
[()
END_BUILTINS
];

1785 
åì_c⁄èös_°ru˘
[
MAX_TREE_CODES
][64];

1788 c⁄° 
åì_code_˛ass
 
åì_code_ty≥
[];

1792 c⁄° *c⁄° 
åì_code_˛ass_°rögs
[];

1795 c⁄° 
åì_code_Àngth
[];

1798 
GTY
(()Ë
vec
<
Æüs_∑ú
, 
va_gc
> *
Æüs_∑ús
;

1801 c⁄° *c⁄° 
buût_ö_˛ass_«mes
[
BUILT_IN_LAST
];

1804 c⁄° * 
buût_ö_«mes
[(Ë
END_BUILTINS
];

1807 c⁄° 
omp_˛au£_num_›s
[];

1808 c⁄° * c⁄° 
omp_˛au£_code_«me
[];

1811 
GTY
 (()Ë
vec
<
åì
, 
va_gc
> *
Æl_å™¶©i⁄_unôs
;

1814 
GTY
(()Ë
åì
 
globÆ_åìs
[
TI_MAX
];

1818 
GTY
(()Ë
åì
 
öãgî_ty≥s
[
ôk_n⁄e
];

1821 
GTY
(()Ë
åì
 
sizëy≥_èb
[(Ë
°k_ty≥_köd_œ°
];

1824 
åì_node_cou¡s
[];

1825 
åì_node_sizes
[];

1830 
boﬁ
 
ö_gim∂e_f‹m
;

1833 
GTY
(()Ë
buûtö_öfo_ty≥
 
buûtö_öfo
;

1836 
maximum_fõld_Æignmít
;

1840 
≥d™tic_lvÆues
;

1843 
GTY
(()Ë
åì
 
cuºít_fun˘i⁄_de˛
;

1846 
GTY
(()Ëc⁄° * 
cuºít_fun˘i⁄_func_begö_œbñ
;

	@include/tree-dfa.h

20 #i‚de‡
GCC_TREE_DFA_H


21 
	#GCC_TREE_DFA_H


	)

23 
ªnumbî_gim∂e_°mt_uids
 ();

24 
ªnumbî_gim∂e_°mt_uids_ö_blocks
 (
basic_block
 *, );

25 
dump_v¨übÀ
 (
FILE
 *, 
åì
);

26 
debug_v¨übÀ
 (
åì
);

27 
dump_dÁ_°©s
 (
FILE
 *);

28 
debug_dÁ_°©s
 ();

29 
åì
 
sß_deÁu…_def
 (
fun˘i⁄
 *,Åree);

30 
£t_sß_deÁu…_def
 (
fun˘i⁄
 *, 
åì
,Åree);

31 
åì
 
gë_‹_¸óã_sß_deÁu…_def
 (
fun˘i⁄
 *,Åree);

32 
åì
 
gë_ªf_ba£_™d_exã¡
 (åì, 
HOST_WIDE_INT
 *,

33 
HOST_WIDE_INT
 *, HOST_WIDE_INT *);

34 
åì
 
gë_addr_ba£_™d_unô_off£t
 (åì, 
HOST_WIDE_INT
 *);

35 
boﬁ
 
°mt_ª„ªn˚s_abn‹mÆ_sß_«me
 (
gim∂e
);

36 
dump_íumî©ed_de˛s
 (
FILE
 *, );

48 
ölöe
 
åì


49 
	$gë_addr_ba£_™d_unô_off£t_1
 (
åì
 
exp
, 
HOST_WIDE_INT
 *
poff£t
,

50 
	$åì
 (*
vÆueize
Ë(
åì
))

52 
HOST_WIDE_INT
 
byã_off£t
 = 0;

58 
	`TREE_CODE
 (
exp
))

60 
BIT_FIELD_REF
:

62 
HOST_WIDE_INT
 
this_off
 = 
	`TREE_INT_CST_LOW
 (
	`TREE_OPERAND
 (
exp
, 2));

63 i‡(
this_off
 % 
BITS_PER_UNIT
)

64  
NULL_TREE
;

65 
byã_off£t
 +
this_off
 / 
BITS_PER_UNIT
;

69 
COMPONENT_REF
:

71 
åì
 
fõld
 = 
	`TREE_OPERAND
 (
exp
, 1);

72 
åì
 
this_off£t
 = 
	`comp⁄ít_ªf_fõld_off£t
 (
exp
);

73 
HOST_WIDE_INT
 
hthis_off£t
;

75 i‡(!
this_off£t


76 || 
	`TREE_CODE
 (
this_off£t
Ë!
INTEGER_CST


77 || (
	`TREE_INT_CST_LOW
 (
	`DECL_FIELD_BIT_OFFSET
 (
fõld
))

78 % 
BITS_PER_UNIT
))

79  
NULL_TREE
;

81 
hthis_off£t
 = 
	`TREE_INT_CST_LOW
 (
this_off£t
);

82 
hthis_off£t
 +(
	`TREE_INT_CST_LOW
 (
	`DECL_FIELD_BIT_OFFSET
 (
fõld
))

83 / 
BITS_PER_UNIT
);

84 
byã_off£t
 +
hthis_off£t
;

88 
ARRAY_REF
:

89 
ARRAY_RANGE_REF
:

91 
åì
 
ödex
 = 
	`TREE_OPERAND
 (
exp
, 1);

92 
åì
 
low_bound
, 
unô_size
;

94 i‡(
vÆueize


95 && 
	`TREE_CODE
 (
ödex
Ë=
SSA_NAME
)

96 
ödex
 = (*
vÆueize
) (index);

99 i‡(
	`TREE_CODE
 (
ödex
Ë=
INTEGER_CST


100 && (
low_bound
 = 
	`¨øy_ªf_low_bound
 (
exp
),

101 
	`TREE_CODE
 (
low_bound
Ë=
INTEGER_CST
)

102 && (
unô_size
 = 
	`¨øy_ªf_ñemít_size
 (
exp
),

103 
	`TREE_CODE
 (
unô_size
Ë=
INTEGER_CST
))

105 
doubÀ_öt
 
doff£t


106 (
	`TREE_INT_CST
 (
ödex
Ë- TREE_INT_CST (
low_bound
))

107 .
	`£xt
 (
	`TYPE_PRECISION
 (
	`TREE_TYPE
 (
ödex
)));

108 
doff£t
 *
	`åì_to_doubÀ_öt
 (
unô_size
);

109 
byã_off£t
 +
doff£t
.
	`to_shwi
 ();

112  
NULL_TREE
;

116 
REALPART_EXPR
:

119 
IMAGPART_EXPR
:

120 
byã_off£t
 +
	`TREE_INT_CST_LOW
 (
	`TYPE_SIZE_UNIT
 (
	`TREE_TYPE
 (
exp
)));

123 
VIEW_CONVERT_EXPR
:

126 
MEM_REF
:

128 
åì
 
ba£
 = 
	`TREE_OPERAND
 (
exp
, 0);

129 i‡(
vÆueize


130 && 
	`TREE_CODE
 (
ba£
Ë=
SSA_NAME
)

131 
ba£
 = (*
vÆueize
) (base);

134 i‡(
	`TREE_CODE
 (
ba£
Ë=
ADDR_EXPR
)

136 i‡(!
	`öãgî_zî›
 (
	`TREE_OPERAND
 (
exp
, 1)))

138 
doubÀ_öt
 
off
 = 
	`mem_ªf_off£t
 (
exp
);

139 
	`gcc_as£π
 (
off
.
high
 == -1 || off.high == 0);

140 
byã_off£t
 +
off
.
	`to_shwi
 ();

142 
exp
 = 
	`TREE_OPERAND
 (
ba£
, 0);

144 
d⁄e
;

147 
TARGET_MEM_REF
:

149 
åì
 
ba£
 = 
	`TREE_OPERAND
 (
exp
, 0);

150 i‡(
vÆueize


151 && 
	`TREE_CODE
 (
ba£
Ë=
SSA_NAME
)

152 
ba£
 = (*
vÆueize
) (base);

155 i‡(
	`TREE_CODE
 (
ba£
Ë=
ADDR_EXPR
)

157 i‡(
	`TMR_INDEX
 (
exp
Ë|| 
	`TMR_INDEX2
 (exp))

158  
NULL_TREE
;

159 i‡(!
	`öãgî_zî›
 (
	`TMR_OFFSET
 (
exp
)))

161 
doubÀ_öt
 
off
 = 
	`mem_ªf_off£t
 (
exp
);

162 
	`gcc_as£π
 (
off
.
high
 == -1 || off.high == 0);

163 
byã_off£t
 +
off
.
	`to_shwi
 ();

165 
exp
 = 
	`TREE_OPERAND
 (
ba£
, 0);

167 
d⁄e
;

171 
d⁄e
;

174 
exp
 = 
	`TREE_OPERAND
 (exp, 0);

176 
d⁄e
:

178 *
poff£t
 = 
byã_off£t
;

179  
exp
;

180 
	}
}

	@include/tree-dump.h

21 #i‚de‡
GCC_TREE_DUMP_H


22 
	#GCC_TREE_DUMP_H


	)

24 
	~"•œy-åì.h
"

25 
	~"dumpfûe.h
"

27 
dump_öfo
 *
	tdump_öfo_p
;

30 
	#DUMP_NONE
 0

	)

31 
	#DUMP_BINFO
 1

	)

35 
	sdump_node_öfo


38 
	mödex
;

40 
	mböfo_p
 : 1;

41 } *
	tdump_node_öfo_p
;

45 
	sdump_queue


48 
•œy_åì_node
 
	mnode
;

50 
dump_queue
 *
	m√xt
;

51 } *
	tdump_queue_p
;

56 
	sdump_öfo


59 
FILE
 *
	m°ªam
;

61 
c⁄°_åì
 
	mnode
;

63 
	mÊags
;

65 
	mödex
;

67 
	mcﬁumn
;

69 
dump_queue_p
 
	mqueue
;

71 
dump_queue_p
 
	mqueue_íd
;

73 
dump_queue_p
 
	m‰ì_li°
;

77 
•œy_åì
 
	mnodes
;

81 
	#dump_chûd
(
fõld
, 
chûd
) \

82 
	`queue_™d_dump_ödex
 (
di
, 
fõld
, 
chûd
, 
DUMP_NONE
)

	)

84 
dump_poöãr
 (
dump_öfo_p
, const *, *);

85 
dump_öt
 (
dump_öfo_p
, const *, );

86 
dump_°rög
 (
dump_öfo_p
, const *);

87 
dump_°rög_fõld
 (
dump_öfo_p
, const *, const *);

88 
queue_™d_dump_ödex
 (
dump_öfo_p
, c⁄° *, 
c⁄°_åì
, );

89 
queue_™d_dump_ty≥
 (
dump_öfo_p
, 
c⁄°_åì
);

90 
dump_fun˘i⁄
 (, 
åì
);

91 
dump_Êag
 (
dump_öfo_p
, , 
c⁄°_åì
);

	@include/tree-eh.h

20 #i‚de‡
GCC_TREE_EH_H


21 
	#GCC_TREE_EH_H


	)

23 
usög_eh_f‹_˛ónups
 ();

24 
add_°mt_to_eh_Õ
 (
gim∂e
, );

25 
boﬁ
 
ªmove_°mt_‰om_eh_Õ_‚
 (
fun˘i⁄
 *, 
gim∂e
);

26 
boﬁ
 
ªmove_°mt_‰om_eh_Õ
 (
gim∂e
);

27 
lookup_°mt_eh_Õ_‚
 (
fun˘i⁄
 *, 
gim∂e
);

28 
lookup_°mt_eh_Õ
 (
gim∂e
);

29 
boﬁ
 
make_eh_di•©ch_edges
 (
gim∂e
);

30 
make_eh_edges
 (
gim∂e
);

31 
edge
 
ªdúe˘_eh_edge
 (edge, 
basic_block
);

32 
ªdúe˘_eh_di•©ch_edge
 (
gim∂e
, 
edge
, 
basic_block
);

33 
boﬁ
 
›î©i⁄_could_å≠_hñ≥r_p
 (
åì_code
, bool, bool, bool,

34 
boﬁ
, 
åì
, bool *);

35 
boﬁ
 
›î©i⁄_could_å≠_p
 (
åì_code
, boﬁ, boﬁ, 
åì
);

36 
boﬁ
 
åì_could_å≠_p
 (
åì
);

37 
boﬁ
 
°mt_could_throw_p
 (
gim∂e
);

38 
boﬁ
 
åì_could_throw_p
 (
åì
);

39 
boﬁ
 
°mt_ˇn_throw_exã∫Æ
 (
gim∂e
);

40 
boﬁ
 
°mt_ˇn_throw_öã∫Æ
 (
gim∂e
);

41 
boﬁ
 
maybe_˛ón_eh_°mt_‚
 (
fun˘i⁄
 *, 
gim∂e
);

42 
boﬁ
 
maybe_˛ón_eh_°mt
 (
gim∂e
);

43 
boﬁ
 
maybe_˛ón_‹_ª∂a˚_eh_°mt
 (
gim∂e
, gimple);

44 
boﬁ
 
maybe_du∂iˇã_eh_°mt_‚
 (
fun˘i⁄
 *, 
gim∂e
,

45 
fun˘i⁄
 *, 
gim∂e
,

46 
poöãr_m≠_t
 *, );

47 
boﬁ
 
maybe_du∂iˇã_eh_°mt
 (
gim∂e
, gimple);

48 
maybe_ªmove_uƒóchabÀ_h™dÀrs
 ();

49 
boﬁ
 
vîify_eh_edges
 (
gim∂e
);

50 
boﬁ
 
vîify_eh_di•©ch_edge
 (
gim∂e
);

	@include/tree-hasher.h

21 #i‚de‡
GCC_TREE_HASHER_H


22 
	#GCC_TREE_HASHER_H
 1

	)

24 
	~"hash-èbÀ.h
"

26 
	söt_åì_m≠
 {

27 
	muid
;

28 
åì
 
	mto
;

33 
	göt_åì_hashî
 : 
ty≥d_‰ì_ªmove
 <
öt_åì_m≠
>

35 
öt_åì_m≠
 
	tvÆue_ty≥
;

36 
öt_åì_m≠
 
	tcom∑ª_ty≥
;

37 
ölöe
 
hashvÆ_t
 
hash
 (c⁄° 
vÆue_ty≥
 *);

38 
ölöe
 
boﬁ
 
equÆ
 (c⁄° 
vÆue_ty≥
 *, c⁄° 
com∑ª_ty≥
 *);

43 
ölöe
 
hashvÆ_t


44 
	göt_åì_hashî
::
	$hash
 (c⁄° 
vÆue_ty≥
 *
ôem
)

46  
ôem
->
uid
;

47 
	}
}

51 
ölöe
 
boﬁ


52 
	göt_åì_hashî
::
	$equÆ
 (c⁄° 
vÆue_ty≥
 *
a
, c⁄° 
com∑ª_ty≥
 *
b
)

54  (
a
->
uid
 =
b
->uid);

55 
	}
}

57 
	ghash_èbÀ
 <
	töt_åì_hashî
> 
	töt_åì_hèb_ty≥
;

	@include/tree-inline.h

21 #i‚de‡
GCC_TREE_INLINE_H


22 
	#GCC_TREE_INLINE_H


	)

24 
	gcgøph_edge
;

30 
	ec›y_body_cge_which


32 
	mCB_CGE_DUPLICATE
,

33 
	mCB_CGE_MOVE
,

34 
	mCB_CGE_MOVE_CLONES


39 
	sc›y_body_d©a


43 
åì
 
	m§c_‚
;

47 
åì
 
	md°_‚
;

50 
cgøph_node
 *
	m§c_node
;

53 
cgøph_node
 *
	md°_node
;

58 
fun˘i⁄
 *
	m§c_cfun
;

61 
åì
 
	mªtv¨
;

65 
poöãr_m≠_t
 *
	mde˛_m≠
;

68 
åì
 (*
c›y_de˛
Ë(
	måì
, 
	mc›y_body_d©a
 *);

71 
åì
 
	mblock
;

75 
gim∂e
 
	mgim∂e_ˇŒ
;

78 
	meh_Õ_ƒ
;

82 
poöãr_m≠_t
 *
	meh_m≠
;

89 
c›y_body_cge_which
 
	må™sf‹m_ˇŒ_gøph_edges
;

93 
boﬁ
 
	må™sf‹m_√w_cfg
;

98 
boﬁ
 
	må™sf‹m_ªtu∫_to_modify
;

102 
boﬁ
 
	må™sf‹m_∑ømëî
;

105 
boﬁ
 
	mªgim∂ify
;

108 
boﬁ
 
	mdo_nŸ_unsh¨e
;

111 
	mªm≠pög_ty≥_dïth
;

114 (*
	må™sf‹m_œng_ö£π_block
Ë(
	måì
);

117 
poöãr_£t_t
 *
	m°©emíts_to_fﬁd
;

120 
basic_block
 
	míåy_bb
;

124 
bôm≠
 
	mblocks_to_c›y
;

127 
	mvec
<
	mgim∂e
> 
	mdebug_°mts
;

133 
poöãr_m≠_t
 *
	mdebug_m≠
;

137 
boﬁ
 
	mªm≠_v¨_f‹_cûk
;

142 
	síi_weights_d


145 
	mˇŒ_co°
;

148 
	mödúe˘_ˇŒ_co°
;

151 
	mèrgë_buûtö_ˇŒ_co°
;

154 
	mdiv_mod_co°
;

157 
	momp_co°
;

160 
	mtm_co°
;

163 
	mªtu∫_co°
;

168 
boﬁ
 
	mtime_ba£d
;

169 } 
	tíi_weights
;

173 
íi_weights
 
íi_ölöög_weights
;

178 
íi_weights
 
íi_size_weights
;

183 
íi_weights
 
íi_time_weights
;

186 
öô_ölöe_⁄˚
 ();

187 
åì
 
c›y_åì_body_r
 (tree *, *, *);

188 
ö£π_de˛_m≠
 (
c›y_body_d©a
 *, 
åì
,Åree);

189 
›timize_ölöe_ˇŒs
 (
åì
);

190 
åì
 
maybe_ölöe_ˇŒ_ö_ex¥
 (tree);

191 
boﬁ
 
åì_ölöabÀ_fun˘i⁄_p
 (
åì
);

192 
åì
 
c›y_åì_r
 (tree *, *, *);

193 
åì
 
c›y_de˛_no_ch™ge
 (åì 
de˛
, 
c›y_body_d©a
 *
id
);

194 
e°im©e_move_co°
 (
åì
 
ty≥
);

195 
e°im©e_num_ö¢s
 (
gim∂e
, 
íi_weights
 *);

196 
e°im©e_num_ö¢s_‚
 (
åì
, 
íi_weights
 *);

197 
cou¡_ö¢s_£q
 (
gim∂e_£q
, 
íi_weights
 *);

198 
boﬁ
 
åì_vîsi⁄abÀ_fun˘i⁄_p
 (
åì
);

199 
åì
 
ªm≠_de˛
 (åì 
de˛
, 
c›y_body_d©a
 *
id
);

200 
åì
 
ªm≠_ty≥
 (åì 
ty≥
, 
c›y_body_d©a
 *
id
);

201 
gim∂e_£q
 
c›y_gim∂e_£q_™d_ª∂a˚_loˇls
 (gim∂e_£q 
£q
);

202 
boﬁ
 
debug_föd_åì
 (
åì
,Åree);

206 
åì
 
buûd_du∂iˇã_ty≥
 (tree);

	@include/tree-into-ssa.h

20 #i‚de‡
GCC_TREE_INTO_SSA_H


21 
	#GCC_TREE_INTO_SSA_H


	)

23 
åì
 
gë_cuºít_def
 (tree);

24 
£t_cuºít_def
 (
åì
,Åree);

25 
dñëe_upd©e_sß
 ();

26 
åì
 
¸óã_√w_def_f‹
 (åì, 
gim∂e
, 
def_›î™d_p
);

27 
m¨k_vútuÆ_›î™ds_f‹_ª«mög
 (
fun˘i⁄
 *);

28 
m¨k_vútuÆ_›î™d_f‹_ª«mög
 (
åì
);

29 
m¨k_vútuÆ_phi_ªsu…_f‹_ª«mög
 (
gim∂e
);

30 
boﬁ
 
√ed_sß_upd©e_p
 (
fun˘i⁄
 *);

31 
boﬁ
 
«me_ªgi°îed_f‹_upd©e_p
 (
åì
);

32 
ªÀa£_sß_«me_a·î_upd©e_sß
 (
åì
);

33 
upd©e_sß
 ();

36 
debug_de˛_£t
 (
bôm≠
 
£t
);

37 
dump_defs_°ack
 (
FILE
 *, );

38 
debug_defs_°ack
 ();

39 
dump_cuºdefs
 (
FILE
 *);

40 
debug_cuºdefs
 ();

41 
dump_åì_sß
 (
FILE
 *);

42 
debug_åì_sß
 ();

43 
dump_åì_sß_°©s
 (
FILE
 *);

44 
debug_åì_sß_°©s
 ();

45 
dump_v¨_öfos
 (
FILE
 *);

46 
debug_v¨_öfos
 ();

47 
dump_«mes_ª∂a˚d_by
 (
FILE
 *, 
åì
);

48 
debug_«mes_ª∂a˚d_by
 (
åì
);

49 
dump_upd©e_sß
 (
FILE
 *);

50 
debug_upd©e_sß
 ();

	@include/tree-iterator.h

27 #i‚de‡
GCC_TREE_ITERATOR_H


28 
	#GCC_TREE_ITERATOR_H
 1

	)

32 
	såì_°mt_ôî©‹
 {

33 
åì_°©emít_li°_node
 *
	m±r
;

34 
åì
 
	mc⁄èöî
;

37 
ölöe
 
åì_°mt_ôî©‹


38 
	$tsi_°¨t
 (
åì
 
t
)

40 
åì_°mt_ôî©‹
 
i
;

42 
i
.
±r
 = 
	`STATEMENT_LIST_HEAD
 (
t
);

43 
i
.
c⁄èöî
 = 
t
;

45  
i
;

46 
	}
}

48 
ölöe
 
åì_°mt_ôî©‹


49 
	$tsi_œ°
 (
åì
 
t
)

51 
åì_°mt_ôî©‹
 
i
;

53 
i
.
±r
 = 
	`STATEMENT_LIST_TAIL
 (
t
);

54 
i
.
c⁄èöî
 = 
t
;

56  
i
;

57 
	}
}

59 
ölöe
 
boﬁ


60 
	$tsi_íd_p
 (
åì_°mt_ôî©‹
 
i
)

62  
i
.
±r
 =
NULL
;

63 
	}
}

65 
ölöe
 
boﬁ


66 
	$tsi_⁄e_bef‹e_íd_p
 (
åì_°mt_ôî©‹
 
i
)

68  
i
.
±r
 !
NULL
 && i.±r->
√xt
 == NULL;

69 
	}
}

71 
ölöe
 

72 
	$tsi_√xt
 (
åì_°mt_ôî©‹
 *
i
)

74 
i
->
±r
 = i->±r->
√xt
;

75 
	}
}

77 
ölöe
 

78 
	$tsi_¥ev
 (
åì_°mt_ôî©‹
 *
i
)

80 
i
->
±r
 = i->±r->
¥ev
;

81 
	}
}

83 
ölöe
 
åì
 *

84 
	$tsi_°mt_±r
 (
åì_°mt_ôî©‹
 
i
)

86  &
i
.
±r
->
°mt
;

87 
	}
}

89 
ölöe
 
åì


90 
	$tsi_°mt
 (
åì_°mt_ôî©‹
 
i
)

92  
i
.
±r
->
°mt
;

93 
	}
}

95 
	etsi_ôî©‹_upd©e


97 
	mTSI_NEW_STMT
,

99 
	mTSI_SAME_STMT
,

100 
	mTSI_CHAIN_START
,

102 
	mTSI_CHAIN_END
,

104 
	mTSI_CONTINUE_LINKING


109 
tsi_lök_bef‹e
 (
åì_°mt_ôî©‹
 *, 
åì
,

110 
tsi_ôî©‹_upd©e
);

111 
tsi_lök_a·î
 (
åì_°mt_ôî©‹
 *, 
åì
,

112 
tsi_ôî©‹_upd©e
);

114 
tsi_dñök
 (
åì_°mt_ôî©‹
 *);

116 
åì
 
Æloc_°mt_li°
 ();

117 
‰ì_°mt_li°
 (
åì
);

118 
≠≥nd_to_°©emít_li°
 (
åì
,Åree *);

119 
≠≥nd_to_°©emít_li°_f‹˚
 (
åì
,Åree *);

120 
åì
 
ex¥_fú°
 (tree);

121 
åì
 
ex¥_œ°
 (tree);

	@include/tree-nested.h

20 #i‚de‡
GCC_TREE_NESTED_H


21 
	#GCC_TREE_NESTED_H


	)

23 
åì
 
buûd_addr
 (tree,Åree);

24 
ö£π_fõld_öto_°ru˘
 (
åì
,Åree);

25 
lowî_√°ed_fun˘i⁄s
 (
åì
);

	@include/tree-object-size.h

20 #i‚de‡
GCC_TREE_OBJECT_SIZE_H


21 
	#GCC_TREE_OBJECT_SIZE_H


	)

23 
öô_obje˘_sizes
 ();

24 
HOST_WIDE_INT
 
compuã_buûtö_obje˘_size
 (
åì
, );

	@include/tree-outof-ssa.h

21 #i‚de‡
GCC_TREE_OUTOF_SSA_H


22 
	#GCC_TREE_OUTOF_SSA_H


	)

28 
	ssßex∑nd


31 
v¨_m≠
 
	mm≠
;

35 
bôm≠
 
	mvÆues
;

40 
πx
 *
	m∑πôi⁄_to_p£udo
;

44 
bôm≠
 
	m∑πôi⁄_has_deÁu…_def
;

48 
sßex∑nd
 
SA
;

52 
ölöe
 
πx


53 
	$gë_πx_f‹_sß_«me
 (
åì
 
exp
)

55 
p
 = 
	`∑πôi⁄_föd
 (
SA
.
m≠
->
v¨_∑πôi⁄
, 
	`SSA_NAME_VERSION
 (
exp
));

56 i‡(
SA
.
m≠
->
∑πôi⁄_to_võw
)

57 
p
 = 
SA
.
m≠
->
∑πôi⁄_to_võw
[p];

58 
	`gcc_as£π
 (
p
 !
NO_PARTITION
);

59  
SA
.
∑πôi⁄_to_p£udo
[
p
];

60 
	}
}

64 
ölöe
 
gim∂e


65 
	$gë_gim∂e_f‹_sß_«me
 (
åì
 
exp
)

67 
v
 = 
	`SSA_NAME_VERSION
 (
exp
);

68 i‡(
SA
.
vÆues
 && 
	`bôm≠_bô_p
 (SA.vÆues, 
v
))

69  
	`SSA_NAME_DEF_STMT
 (
exp
);

70  
NULL
;

71 
	}
}

73 
boﬁ
 
sß_is_ª∂a˚abÀ_p
 (
gim∂e
 
°mt
);

74 
föish_out_of_sß
 (
sßex∑nd
 *
ß
);

75 
ªwrôe_out_of_sß
 (
sßex∑nd
 *
ß
);

76 
ex∑nd_phi_nodes
 (
sßex∑nd
 *
ß
);

	@include/tree-parloops.h

20 #i‚de‡
GCC_TREE_PARLOOPS_H


21 
	#GCC_TREE_PARLOOPS_H


	)

23 
boﬁ
 
∑øŒñized_fun˘i⁄_p
 (
åì
);

24 
boﬁ
 
∑øŒñize_lo›s
 ();

	@include/tree-pass.h

22 #i‚de‡
GCC_TREE_PASS_H


23 
	#GCC_TREE_PASS_H
 1

	)

25 
	~"timev¨.h
"

26 
	~"dumpfûe.h
"

29 
	e›t_∑ss_ty≥


31 
	mGIMPLE_PASS
,

32 
	mRTL_PASS
,

33 
	mSIMPLE_IPA_PASS
,

34 
	mIPA_PASS


38 
	s∑ss_d©a


41 
›t_∑ss_ty≥
 
	mty≥
;

45 c⁄° *
	m«me
;

48 
	m›töfo_Êags
;

52 
boﬁ
 
	mhas_g©e
;

56 
boﬁ
 
	mhas_execuã
;

60 
timev¨_id_t
 
	mtv_id
;

63 
	m¥›îtõs_ªquúed
;

64 
	m¥›îtõs_¥ovided
;

65 
	m¥›îtõs_de°royed
;

68 
	mtodo_Êags_°¨t
;

69 
	mtodo_Êags_föish
;

72 
«me•a˚
 
	ggcc


74 
˛ass
 
	gc⁄ãxt
;

79 ˛as†
	c›t_∑ss
 : 
public
 
∑ss_d©a


81 
public
:

82 
vútuÆ
 ~
	$›t_∑ss
 () { }

91 
vútuÆ
 
›t_∑ss
 *
	`˛⁄e
 ();

96 
vútuÆ
 
boﬁ
 
	`g©e
 ();

102 
vútuÆ
 
	`execuã
 ();

104 
¥Ÿe˘ed
:

105 
	`›t_∑ss
 (c⁄° 
∑ss_d©a
&, 
gcc
::
c⁄ãxt
 *);

107 
public
:

109 
›t_∑ss
 *
sub
;

112 
›t_∑ss
 *
√xt
;

115 
°©ic_∑ss_numbî
;

120 
boﬁ
 
gøph_dump_öôülized
;

122 
¥Ÿe˘ed
:

123 
gcc
::
c⁄ãxt
 *
m_˘xt
;

124 
	}
};

127 ˛as†
	cgim∂e_›t_∑ss
 : 
public
 
›t_∑ss


129 
¥Ÿe˘ed
:

130 
	$gim∂e_›t_∑ss
 (c⁄° 
∑ss_d©a
& 
d©a
, 
gcc
::
c⁄ãxt
 *
˘xt
)

131 : 
	$›t_∑ss
 (
d©a
, 
˘xt
)

134 
	}
};

137 ˛as†
	cπl_›t_∑ss
 : 
public
 
›t_∑ss


139 
¥Ÿe˘ed
:

140 
	$πl_›t_∑ss
 (c⁄° 
∑ss_d©a
& 
d©a
, 
gcc
::
c⁄ãxt
 *
˘xt
)

141 : 
	$›t_∑ss
 (
d©a
, 
˘xt
)

144 
	}
};

146 
˛ass
 
	gv¨poﬁ_node
;

147 
	gcgøph_node
;

148 
	g…o_symèb_ícodî_d
;

152 ˛as†
	cùa_›t_∑ss_d
 : 
public
 
›t_∑ss


154 
public
:

157 (*
gíî©e_summ¨y
) ();

160 (*
wrôe_summ¨y
) ();

163 (*
ªad_summ¨y
) ();

166 (*
wrôe_›timiz©i⁄_summ¨y
) ();

169 (*
ªad_›timiz©i⁄_summ¨y
) ();

173 (*
°mt_fixup
Ë(
cgøph_node
 *, 
gim∂e
 *);

177 
fun˘i⁄_å™sf‹m_todo_Êags_°¨t
;

178 (*
fun˘i⁄_å™sf‹m
Ë(
cgøph_node
 *);

179 (*
v¨übÀ_å™sf‹m
Ë(
v¨poﬁ_node
 *);

181 
¥Ÿe˘ed
:

182 
	$ùa_›t_∑ss_d
 (c⁄° 
∑ss_d©a
& 
d©a
, 
gcc
::
c⁄ãxt
 *
˘xt
,

183 (*
gíî©e_summ¨y
) (),

184 (*
wrôe_summ¨y
) (),

185 (*
ªad_summ¨y
) (),

186 (*
wrôe_›timiz©i⁄_summ¨y
) (),

187 (*
ªad_›timiz©i⁄_summ¨y
) (),

188 (*
°mt_fixup
Ë(
cgøph_node
 *, 
gim∂e
 *),

189 
fun˘i⁄_å™sf‹m_todo_Êags_°¨t
,

190 (*
fun˘i⁄_å™sf‹m
Ë(
cgøph_node
 *),

191 (*
v¨übÀ_å™sf‹m
Ë(
v¨poﬁ_node
 *))

192 : 
	`›t_∑ss
 (
d©a
, 
˘xt
),

193 
	`gíî©e_summ¨y
 (
gíî©e_summ¨y
),

194 
	`wrôe_summ¨y
 (
wrôe_summ¨y
),

195 
	`ªad_summ¨y
 (
ªad_summ¨y
),

196 
	`wrôe_›timiz©i⁄_summ¨y
 (
wrôe_›timiz©i⁄_summ¨y
),

197 
	`ªad_›timiz©i⁄_summ¨y
 (
ªad_›timiz©i⁄_summ¨y
),

198 
	`°mt_fixup
 (
°mt_fixup
),

199 
	`fun˘i⁄_å™sf‹m_todo_Êags_°¨t
 (
fun˘i⁄_å™sf‹m_todo_Êags_°¨t
),

200 
	`fun˘i⁄_å™sf‹m
 (
fun˘i⁄_å™sf‹m
),

201 
	$v¨übÀ_å™sf‹m
 (
v¨übÀ_å™sf‹m
)

204 
	}
};

208 ˛as†
	csim∂e_ùa_›t_∑ss
 : 
public
 
›t_∑ss


210 
¥Ÿe˘ed
:

211 
	$sim∂e_ùa_›t_∑ss
 (c⁄° 
∑ss_d©a
& 
d©a
, 
gcc
::
c⁄ãxt
 *
˘xt
)

212 : 
	$›t_∑ss
 (
d©a
, 
˘xt
)

215 
	}
};

218 
	#PROP_gim∂e_™y
 (1 << 0Ë

	)

219 
	#PROP_gim∂e_lcf
 (1 << 1Ë

	)

220 
	#PROP_gim∂e_Àh
 (1 << 2Ë

	)

221 
	#PROP_cfg
 (1 << 3)

	)

222 
	#PROP_sß
 (1 << 5)

	)

223 
	#PROP_no_¸ô_edges
 (1 << 6)

	)

224 
	#PROP_πl
 (1 << 7)

	)

225 
	#PROP_gim∂e_lomp
 (1 << 8Ë

	)

226 
	#PROP_cfgœyout
 (1 << 9Ë

	)

227 
	#PROP_gim∂e_lcx
 (1 << 10Ë

	)

228 
	#PROP_lo›s
 (1 << 11Ë

	)

229 
	#PROP_gim∂e_lvec
 (1 << 12Ë

	)

231 
	#PROP_åìs
 \

232 (
PROP_gim∂e_™y
 | 
PROP_gim∂e_lcf
 | 
PROP_gim∂e_Àh
 | 
PROP_gim∂e_lomp
)

	)

235 
	#TODO_do_nŸ_ggc_cﬁÀ˘
 (1 << 1)

	)

236 
	#TODO_vîify_sß
 (1 << 2)

	)

237 
	#TODO_vîify_Êow
 (1 << 3)

	)

238 
	#TODO_vîify_°mts
 (1 << 4)

	)

239 
	#TODO_˛ónup_cfg
 (1 << 5)

	)

240 
	#TODO_dump_symèb
 (1 << 7)

	)

241 
	#TODO_ªmove_fun˘i⁄s
 (1 << 8)

	)

242 
	#TODO_ªbuûd_‰equícõs
 (1 << 9)

	)

243 
	#TODO_vîify_πl_sh¨ög
 (1 << 10)

	)

255 
	#TODO_upd©e_sß
 (1 << 11)

	)

261 
	#TODO_upd©e_sß_no_phi
 (1 << 12)

	)

272 
	#TODO_upd©e_sß_fuŒ_phi
 (1 << 13)

	)

280 
	#TODO_upd©e_sß_⁄ly_vútuÆs
 (1 << 14)

	)

285 
	#TODO_ªmove_unu£d_loˇls
 (1 << 15)

	)

290 
	#TODO_df_föish
 (1 << 17)

	)

293 
	#TODO_df_vîify
 (1 << 18)

	)

296 
	#TODO_m¨k_fú°_ö°™˚
 (1 << 19)

	)

299 
	#TODO_ªbuûd_Æüs
 (1 << 20)

	)

302 
	#TODO_upd©e_addªss_èkí
 (1 << 21)

	)

305 
	#TODO_ªbuûd_cgøph_edges
 (1 << 22)

	)

308 
	#TODO_upd©e_sß_™y
 \

309 (
TODO_upd©e_sß
 \

310 | 
TODO_upd©e_sß_no_phi
 \

311 | 
TODO_upd©e_sß_fuŒ_phi
 \

312 | 
TODO_upd©e_sß_⁄ly_vútuÆs
)

	)

314 
	#TODO_vîify_Æl
 \

315 (
TODO_vîify_sß
 | 
TODO_vîify_Êow
 | 
TODO_vîify_°mts
)

	)

320 
	e∑ss_posôi⁄ög_›s


322 
	mPASS_POS_INSERT_AFTER
,

323 
	mPASS_POS_INSERT_BEFORE
,

324 
	mPASS_POS_REPLACE


327 
	sªgi°î_∑ss_öfo


329 
›t_∑ss
 *
	m∑ss
;

330 c⁄° *
	mª„ªn˚_∑ss_«me
;

332 
	mªf_∑ss_ö°™˚_numbî
;

335 
∑ss_posôi⁄ög_›s
 
	mpos_›
;

342 
ªgi°î_∑ss
 (
ªgi°î_∑ss_öfo
 *);

343 
ªgi°î_∑ss
 (
›t_∑ss
* 
∑ss
, 
∑ss_posôi⁄ög_›s
 
pos
,

344 c⁄° * 
ªf_∑ss_«me
, 
ªf_∑ss_ö°_numbî
);

346 
gim∂e_›t_∑ss
 *
make_∑ss_aßn
 (
gcc
::
c⁄ãxt
 *
˘xt
);

347 
gim∂e_›t_∑ss
 *
make_∑ss_aßn_O0
 (
gcc
::
c⁄ãxt
 *
˘xt
);

348 
gim∂e_›t_∑ss
 *
make_∑ss_tßn
 (
gcc
::
c⁄ãxt
 *
˘xt
);

349 
gim∂e_›t_∑ss
 *
make_∑ss_tßn_O0
 (
gcc
::
c⁄ãxt
 *
˘xt
);

350 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_cf
 (
gcc
::
c⁄ãxt
 *
˘xt
);

351 
gim∂e_›t_∑ss
 *
make_∑ss_ªÁ˘‹_eh
 (
gcc
::
c⁄ãxt
 *
˘xt
);

352 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_eh
 (
gcc
::
c⁄ãxt
 *
˘xt
);

353 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_eh_di•©ch
 (
gcc
::
c⁄ãxt
 *
˘xt
);

354 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_ªsx
 (
gcc
::
c⁄ãxt
 *
˘xt
);

355 
gim∂e_›t_∑ss
 *
make_∑ss_buûd_cfg
 (
gcc
::
c⁄ãxt
 *
˘xt
);

356 
gim∂e_›t_∑ss
 *
make_∑ss_óæy_åì_¥ofûe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

357 
gim∂e_›t_∑ss
 *
make_∑ss_˛ónup_eh
 (
gcc
::
c⁄ãxt
 *
˘xt
);

358 
gim∂e_›t_∑ss
 *
make_∑ss_§a
 (
gcc
::
c⁄ãxt
 *
˘xt
);

359 
gim∂e_›t_∑ss
 *
make_∑ss_§a_óæy
 (
gcc
::
c⁄ãxt
 *
˘xt
);

360 
gim∂e_›t_∑ss
 *
make_∑ss_óæy_ùa_§a
 (
gcc
::
c⁄ãxt
 *
˘xt
);

361 
gim∂e_›t_∑ss
 *
make_∑ss_èû_ªcursi⁄
 (
gcc
::
c⁄ãxt
 *
˘xt
);

362 
gim∂e_›t_∑ss
 *
make_∑ss_èû_ˇŒs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

363 
gim∂e_›t_∑ss
 *
make_∑ss_åì_lo›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

364 
gim∂e_›t_∑ss
 *
make_∑ss_åì_lo›_öô
 (
gcc
::
c⁄ãxt
 *
˘xt
);

365 
gim∂e_›t_∑ss
 *
make_∑ss_lim
 (
gcc
::
c⁄ãxt
 *
˘xt
);

366 
gim∂e_›t_∑ss
 *
make_∑ss_åì_unswôch
 (
gcc
::
c⁄ãxt
 *
˘xt
);

367 
gim∂e_›t_∑ss
 *
make_∑ss_¥edcom
 (
gcc
::
c⁄ãxt
 *
˘xt
);

368 
gim∂e_›t_∑ss
 *
make_∑ss_iv_ˇn⁄
 (
gcc
::
c⁄ãxt
 *
˘xt
);

369 
gim∂e_›t_∑ss
 *
make_∑ss_s˚v_˝r›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

370 
gim∂e_›t_∑ss
 *
make_∑ss_em±y_lo›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

371 
gim∂e_›t_∑ss
 *
make_∑ss_ªc‹d_bounds
 (
gcc
::
c⁄ãxt
 *
˘xt
);

372 
gim∂e_›t_∑ss
 *
make_∑ss_gøphôe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

373 
gim∂e_›t_∑ss
 *
make_∑ss_gøphôe_å™sf‹ms
 (
gcc
::
c⁄ãxt
 *
˘xt
);

374 
gim∂e_›t_∑ss
 *
make_∑ss_if_c⁄vîsi⁄
 (
gcc
::
c⁄ãxt
 *
˘xt
);

375 
gim∂e_›t_∑ss
 *
make_∑ss_lo›_di°ributi⁄
 (
gcc
::
c⁄ãxt
 *
˘xt
);

376 
gim∂e_›t_∑ss
 *
make_∑ss_ve˘‹ize
 (
gcc
::
c⁄ãxt
 *
˘xt
);

377 
gim∂e_›t_∑ss
 *
make_∑ss_¶p_ve˘‹ize
 (
gcc
::
c⁄ãxt
 *
˘xt
);

378 
gim∂e_›t_∑ss
 *
make_∑ss_com∂ëe_uƒﬁl
 (
gcc
::
c⁄ãxt
 *
˘xt
);

379 
gim∂e_›t_∑ss
 *
make_∑ss_com∂ëe_uƒﬁli
 (
gcc
::
c⁄ãxt
 *
˘xt
);

380 
gim∂e_›t_∑ss
 *
make_∑ss_∑øŒñize_lo›s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

381 
gim∂e_›t_∑ss
 *
make_∑ss_lo›_¥e„tch
 (
gcc
::
c⁄ãxt
 *
˘xt
);

382 
gim∂e_›t_∑ss
 *
make_∑ss_iv_›timize
 (
gcc
::
c⁄ãxt
 *
˘xt
);

383 
gim∂e_›t_∑ss
 *
make_∑ss_åì_lo›_d⁄e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

384 
gim∂e_›t_∑ss
 *
make_∑ss_ch
 (
gcc
::
c⁄ãxt
 *
˘xt
);

385 
gim∂e_›t_∑ss
 *
make_∑ss_c˝
 (
gcc
::
c⁄ãxt
 *
˘xt
);

386 
gim∂e_›t_∑ss
 *
make_∑ss_phi_⁄ly_˝r›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

387 
gim∂e_›t_∑ss
 *
make_∑ss_buûd_sß
 (
gcc
::
c⁄ãxt
 *
˘xt
);

388 
gim∂e_›t_∑ss
 *
make_∑ss_buûd_Æüs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

389 
gim∂e_›t_∑ss
 *
make_∑ss_buûd_ólüs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

390 
gim∂e_›t_∑ss
 *
make_∑ss_domö©‹
 (
gcc
::
c⁄ãxt
 *
˘xt
);

391 
gim∂e_›t_∑ss
 *
make_∑ss_d˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

392 
gim∂e_›t_∑ss
 *
make_∑ss_d˚_lo›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

393 
gim∂e_›t_∑ss
 *
make_∑ss_cd_d˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

394 
gim∂e_›t_∑ss
 *
make_∑ss_ˇŒ_cd˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

395 
gim∂e_›t_∑ss
 *
make_∑ss_mîge_phi
 (
gcc
::
c⁄ãxt
 *
˘xt
);

396 
gim∂e_›t_∑ss
 *
make_∑ss_•lô_¸ô_edges
 (
gcc
::
c⁄ãxt
 *
˘xt
);

397 
gim∂e_›t_∑ss
 *
make_∑ss_¥e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

398 
èû_mîge_›timize
 ();

399 
gim∂e_›t_∑ss
 *
make_∑ss_¥ofûe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

400 
gim∂e_›t_∑ss
 *
make_∑ss_°rù_¥edi˘_höts
 (
gcc
::
c⁄ãxt
 *
˘xt
);

401 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_com∂ex_O0
 (
gcc
::
c⁄ãxt
 *
˘xt
);

402 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_com∂ex
 (
gcc
::
c⁄ãxt
 *
˘xt
);

403 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_ve˘‹
 (
gcc
::
c⁄ãxt
 *
˘xt
);

404 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_ve˘‹_sß
 (
gcc
::
c⁄ãxt
 *
˘xt
);

405 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_omp
 (
gcc
::
c⁄ãxt
 *
˘xt
);

406 
gim∂e_›t_∑ss
 *
make_∑ss_dügno£_omp_blocks
 (
gcc
::
c⁄ãxt
 *
˘xt
);

407 
gim∂e_›t_∑ss
 *
make_∑ss_ex∑nd_omp
 (
gcc
::
c⁄ãxt
 *
˘xt
);

408 
gim∂e_›t_∑ss
 *
make_∑ss_obje˘_sizes
 (
gcc
::
c⁄ãxt
 *
˘xt
);

409 
gim∂e_›t_∑ss
 *
make_∑ss_°æí
 (
gcc
::
c⁄ãxt
 *
˘xt
);

410 
gim∂e_›t_∑ss
 *
make_∑ss_fﬁd_buûtös
 (
gcc
::
c⁄ãxt
 *
˘xt
);

411 
gim∂e_›t_∑ss
 *
make_∑ss_°d¨g
 (
gcc
::
c⁄ãxt
 *
˘xt
);

412 
gim∂e_›t_∑ss
 *
make_∑ss_óæy_w¨n_unöôülized
 (
gcc
::
c⁄ãxt
 *
˘xt
);

413 
gim∂e_›t_∑ss
 *
make_∑ss_œã_w¨n_unöôülized
 (
gcc
::
c⁄ãxt
 *
˘xt
);

414 
gim∂e_›t_∑ss
 *
make_∑ss_c£_ªcùroˇls
 (
gcc
::
c⁄ãxt
 *
˘xt
);

415 
gim∂e_›t_∑ss
 *
make_∑ss_c£_söcos
 (
gcc
::
c⁄ãxt
 *
˘xt
);

416 
gim∂e_›t_∑ss
 *
make_∑ss_›timize_bsw≠
 (
gcc
::
c⁄ãxt
 *
˘xt
);

417 
gim∂e_›t_∑ss
 *
make_∑ss_›timize_widíög_mul
 (
gcc
::
c⁄ãxt
 *
˘xt
);

418 
gim∂e_›t_∑ss
 *
make_∑ss_w¨n_fun˘i⁄_ªtu∫
 (
gcc
::
c⁄ãxt
 *
˘xt
);

419 
gim∂e_›t_∑ss
 *
make_∑ss_w¨n_fun˘i⁄_n‹ëu∫
 (
gcc
::
c⁄ãxt
 *
˘xt
);

420 
gim∂e_›t_∑ss
 *
make_∑ss_c£lim
 (
gcc
::
c⁄ãxt
 *
˘xt
);

421 
gim∂e_›t_∑ss
 *
make_∑ss_phi›t
 (
gcc
::
c⁄ãxt
 *
˘xt
);

422 
gim∂e_›t_∑ss
 *
make_∑ss_f‹w¥›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

423 
gim∂e_›t_∑ss
 *
make_∑ss_phùr›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

424 
gim∂e_›t_∑ss
 *
make_∑ss_åì_ifcomböe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

425 
gim∂e_›t_∑ss
 *
make_∑ss_d£
 (
gcc
::
c⁄ãxt
 *
˘xt
);

426 
gim∂e_›t_∑ss
 *
make_∑ss_ƒv
 (
gcc
::
c⁄ãxt
 *
˘xt
);

427 
gim∂e_›t_∑ss
 *
make_∑ss_ª«me_sß_c›õs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

428 
gim∂e_›t_∑ss
 *
make_∑ss_sök_code
 (
gcc
::
c⁄ãxt
 *
˘xt
);

429 
gim∂e_›t_∑ss
 *
make_∑ss_‰e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

430 
gim∂e_›t_∑ss
 *
make_∑ss_check_d©a_dïs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

431 
gim∂e_›t_∑ss
 *
make_∑ss_c›y_¥›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

432 
gim∂e_›t_∑ss
 *
make_∑ss_isﬁ©e_îr⁄eous_∑ths
 (
gcc
::
c⁄ãxt
 *
˘xt
);

433 
gim∂e_›t_∑ss
 *
make_∑ss_vΩ
 (
gcc
::
c⁄ãxt
 *
˘xt
);

434 
gim∂e_›t_∑ss
 *
make_∑ss_un˝r›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

435 
gim∂e_›t_∑ss
 *
make_∑ss_ªtu∫_¶Ÿ
 (
gcc
::
c⁄ãxt
 *
˘xt
);

436 
gim∂e_›t_∑ss
 *
make_∑ss_ªassoc
 (
gcc
::
c⁄ãxt
 *
˘xt
);

437 
gim∂e_›t_∑ss
 *
make_∑ss_ªbuûd_cgøph_edges
 (
gcc
::
c⁄ãxt
 *
˘xt
);

438 
gim∂e_›t_∑ss
 *
make_∑ss_ªmove_cgøph_ˇŒì_edges
 (
gcc
::
c⁄ãxt


439 *
˘xt
);

440 
gim∂e_›t_∑ss
 *
make_∑ss_buûd_cgøph_edges
 (
gcc
::
c⁄ãxt
 *
˘xt
);

441 
gim∂e_›t_∑ss
 *
make_∑ss_loˇl_puª_c⁄°
 (
gcc
::
c⁄ãxt
 *
˘xt
);

442 
gim∂e_›t_∑ss
 *
make_∑ss_åa˚r
 (
gcc
::
c⁄ãxt
 *
˘xt
);

443 
gim∂e_›t_∑ss
 *
make_∑ss_w¨n_unu£d_ªsu…
 (
gcc
::
c⁄ãxt
 *
˘xt
);

444 
gim∂e_›t_∑ss
 *
make_∑ss_dügno£_tm_blocks
 (
gcc
::
c⁄ãxt
 *
˘xt
);

445 
gim∂e_›t_∑ss
 *
make_∑ss_lowî_tm
 (
gcc
::
c⁄ãxt
 *
˘xt
);

446 
gim∂e_›t_∑ss
 *
make_∑ss_tm_öô
 (
gcc
::
c⁄ãxt
 *
˘xt
);

447 
gim∂e_›t_∑ss
 *
make_∑ss_tm_m¨k
 (
gcc
::
c⁄ãxt
 *
˘xt
);

448 
gim∂e_›t_∑ss
 *
make_∑ss_tm_mem›t
 (
gcc
::
c⁄ãxt
 *
˘xt
);

449 
gim∂e_›t_∑ss
 *
make_∑ss_tm_edges
 (
gcc
::
c⁄ãxt
 *
˘xt
);

450 
gim∂e_›t_∑ss
 *
make_∑ss_•lô_fun˘i⁄s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

451 
gim∂e_›t_∑ss
 *
make_∑ss_„edback_•lô_fun˘i⁄s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

452 
gim∂e_›t_∑ss
 *
make_∑ss_°ªngth_ªdu˘i⁄
 (
gcc
::
c⁄ãxt
 *
˘xt
);

453 
gim∂e_›t_∑ss
 *
make_∑ss_vèbÀ_vîify
 (
gcc
::
c⁄ãxt
 *
˘xt
);

454 
gim∂e_›t_∑ss
 *
make_∑ss_ubßn
 (
gcc
::
c⁄ãxt
 *
˘xt
);

455 
gim∂e_›t_∑ss
 *
make_∑ss_ßn›t
 (
gcc
::
c⁄ãxt
 *
˘xt
);

458 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_lowî_emués
 (
gcc
::
c⁄ãxt
 *
˘xt
);

459 
sim∂e_ùa_›t_∑ss


460 *
make_∑ss_ùa_fun˘i⁄_™d_v¨übÀ_visibûôy
 (
gcc
::
c⁄ãxt
 *
˘xt
);

461 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_åì_¥ofûe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

463 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_óæy_loˇl_∑s£s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

465 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_whﬁe_¥ogøm_visibûôy
 (
gcc
::
c⁄ãxt


466 *
˘xt
);

467 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_ö¸ó£_Æignmít
 (
gcc
::
c⁄ãxt


468 *
˘xt
);

469 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_ölöe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

470 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_‰ì_œng_d©a
 (
gcc
::
c⁄ãxt
 *
˘xt
);

471 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_‰ì_ölöe_summ¨y
 (
gcc
::
c⁄ãxt


472 *
˘xt
);

473 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_˝
 (
gcc
::
c⁄ãxt
 *
˘xt
);

474 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_devút
 (
gcc
::
c⁄ãxt
 *
˘xt
);

475 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_ª„ªn˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

476 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_puª_c⁄°
 (
gcc
::
c⁄ãxt
 *
˘xt
);

477 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_±a
 (
gcc
::
c⁄ãxt
 *
˘xt
);

478 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_ùa_tm
 (
gcc
::
c⁄ãxt
 *
˘xt
);

479 
sim∂e_ùa_›t_∑ss
 *
make_∑ss_omp_simd_˛⁄e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

480 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_¥ofûe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

481 
ùa_›t_∑ss_d
 *
make_∑ss_ùa_cdt‹_mîge
 (
gcc
::
c⁄ãxt
 *
˘xt
);

483 
gim∂e_›t_∑ss
 *
make_∑ss_˛ónup_cfg_po°_›timizög
 (
gcc
::
c⁄ãxt


484 *
˘xt
);

485 
gim∂e_›t_∑ss
 *
make_∑ss_öô_d©a°ru˘uªs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

486 
gim∂e_›t_∑ss
 *
make_∑ss_fixup_cfg
 (
gcc
::
c⁄ãxt
 *
˘xt
);

488 
πl_›t_∑ss
 *
make_∑ss_ex∑nd
 (
gcc
::
c⁄ãxt
 *
˘xt
);

489 
πl_›t_∑ss
 *
make_∑ss_ö°™tüã_vútuÆ_ªgs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

490 
πl_›t_∑ss
 *
make_∑ss_πl_fw¥›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

491 
πl_›t_∑ss
 *
make_∑ss_πl_fw¥›_addr
 (
gcc
::
c⁄ãxt
 *
˘xt
);

492 
πl_›t_∑ss
 *
make_∑ss_jump
 (
gcc
::
c⁄ãxt
 *
˘xt
);

493 
πl_›t_∑ss
 *
make_∑ss_jump2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

494 
πl_›t_∑ss
 *
make_∑ss_lowî_subªg
 (
gcc
::
c⁄ãxt
 *
˘xt
);

495 
πl_›t_∑ss
 *
make_∑ss_c£
 (
gcc
::
c⁄ãxt
 *
˘xt
);

496 
πl_›t_∑ss
 *
make_∑ss_Á°_πl_d˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

497 
πl_›t_∑ss
 *
make_∑ss_ud_πl_d˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

498 
πl_›t_∑ss
 *
make_∑ss_πl_d˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

499 
πl_›t_∑ss
 *
make_∑ss_πl_d£1
 (
gcc
::
c⁄ãxt
 *
˘xt
);

500 
πl_›t_∑ss
 *
make_∑ss_πl_d£2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

501 
πl_›t_∑ss
 *
make_∑ss_πl_d£3
 (
gcc
::
c⁄ãxt
 *
˘xt
);

502 
πl_›t_∑ss
 *
make_∑ss_πl_˝r›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

503 
πl_›t_∑ss
 *
make_∑ss_πl_¥e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

504 
πl_›t_∑ss
 *
make_∑ss_πl_hoi°
 (
gcc
::
c⁄ãxt
 *
˘xt
);

505 
πl_›t_∑ss
 *
make_∑ss_πl_°‹e_mŸi⁄
 (
gcc
::
c⁄ãxt
 *
˘xt
);

506 
πl_›t_∑ss
 *
make_∑ss_c£_a·î_globÆ_›ts
 (
gcc
::
c⁄ãxt
 *
˘xt
);

507 
πl_›t_∑ss
 *
make_∑ss_πl_ifcvt
 (
gcc
::
c⁄ãxt
 *
˘xt
);

509 
πl_›t_∑ss
 *
make_∑ss_öto_cfg_œyout_mode
 (
gcc
::
c⁄ãxt
 *
˘xt
);

510 
πl_›t_∑ss
 *
make_∑ss_outof_cfg_œyout_mode
 (
gcc
::
c⁄ãxt
 *
˘xt
);

512 
πl_›t_∑ss
 *
make_∑ss_lo›2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

513 
πl_›t_∑ss
 *
make_∑ss_πl_lo›_öô
 (
gcc
::
c⁄ãxt
 *
˘xt
);

514 
πl_›t_∑ss
 *
make_∑ss_πl_move_lo›_öv¨ü¡s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

515 
πl_›t_∑ss
 *
make_∑ss_πl_unswôch
 (
gcc
::
c⁄ãxt
 *
˘xt
);

516 
πl_›t_∑ss
 *
make_∑ss_πl_uƒﬁl_™d_≥ñ_lo›s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

517 
πl_›t_∑ss
 *
make_∑ss_πl_dﬁo›
 (
gcc
::
c⁄ãxt
 *
˘xt
);

518 
πl_›t_∑ss
 *
make_∑ss_πl_lo›_d⁄e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

520 
πl_›t_∑ss
 *
make_∑ss_web
 (
gcc
::
c⁄ãxt
 *
˘xt
);

521 
πl_›t_∑ss
 *
make_∑ss_c£2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

522 
πl_›t_∑ss
 *
make_∑ss_df_öôülize_›t
 (
gcc
::
c⁄ãxt
 *
˘xt
);

523 
πl_›t_∑ss
 *
make_∑ss_df_öôülize_no_›t
 (
gcc
::
c⁄ãxt
 *
˘xt
);

524 
πl_›t_∑ss
 *
make_∑ss_ªgöfo_öô
 (
gcc
::
c⁄ãxt
 *
˘xt
);

525 
πl_›t_∑ss
 *
make_∑ss_öc_dec
 (
gcc
::
c⁄ãxt
 *
˘xt
);

526 
πl_›t_∑ss
 *
make_∑ss_°ack_±r_mod
 (
gcc
::
c⁄ãxt
 *
˘xt
);

527 
πl_›t_∑ss
 *
make_∑ss_öôülize_ªgs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

528 
πl_›t_∑ss
 *
make_∑ss_comböe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

529 
πl_›t_∑ss
 *
make_∑ss_if_a·î_comböe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

530 
πl_›t_∑ss
 *
make_∑ss_ªe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

531 
πl_›t_∑ss
 *
make_∑ss_∑πôi⁄_blocks
 (
gcc
::
c⁄ãxt
 *
˘xt
);

532 
πl_›t_∑ss
 *
make_∑ss_m©ch_asm_c⁄°øöts
 (
gcc
::
c⁄ãxt
 *
˘xt
);

533 
πl_›t_∑ss
 *
make_∑ss_•lô_Æl_ö¢s
 (
gcc
::
c⁄ãxt
 *
˘xt
);

534 
πl_›t_∑ss
 *
make_∑ss_Á°_πl_byã_d˚
 (
gcc
::
c⁄ãxt
 *
˘xt
);

535 
πl_›t_∑ss
 *
make_∑ss_lowî_subªg2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

536 
πl_›t_∑ss
 *
make_∑ss_mode_swôchög
 (
gcc
::
c⁄ãxt
 *
˘xt
);

537 
πl_›t_∑ss
 *
make_∑ss_sms
 (
gcc
::
c⁄ãxt
 *
˘xt
);

538 
πl_›t_∑ss
 *
make_∑ss_sched
 (
gcc
::
c⁄ãxt
 *
˘xt
);

539 
πl_›t_∑ss
 *
make_∑ss_live_ønge_shrökage
 (
gcc
::
c⁄ãxt
 *
˘xt
);

540 
πl_›t_∑ss
 *
make_∑ss_úa
 (
gcc
::
c⁄ãxt
 *
˘xt
);

541 
πl_›t_∑ss
 *
make_∑ss_ªlﬂd
 (
gcc
::
c⁄ãxt
 *
˘xt
);

542 
πl_›t_∑ss
 *
make_∑ss_˛ón_°©e
 (
gcc
::
c⁄ãxt
 *
˘xt
);

543 
πl_›t_∑ss
 *
make_∑ss_bønch_¥ob
 (
gcc
::
c⁄ãxt
 *
˘xt
);

544 
πl_›t_∑ss
 *
make_∑ss_vÆue_¥ofûe_å™sf‹m©i⁄s
 (
gcc
::
c⁄ãxt


545 *
˘xt
);

546 
πl_›t_∑ss
 *
make_∑ss_po°ªlﬂd_c£
 (
gcc
::
c⁄ãxt
 *
˘xt
);

547 
πl_›t_∑ss
 *
make_∑ss_gc£2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

548 
πl_›t_∑ss
 *
make_∑ss_•lô_a·î_ªlﬂd
 (
gcc
::
c⁄ãxt
 *
˘xt
);

549 
πl_›t_∑ss
 *
make_∑ss_bønch_èrgë_lﬂd_›timize1
 (
gcc
::
c⁄ãxt


550 *
˘xt
);

551 
πl_›t_∑ss
 *
make_∑ss_thªad_¥ﬁogue_™d_ïûogue
 (
gcc
::
c⁄ãxt


552 *
˘xt
);

553 
πl_›t_∑ss
 *
make_∑ss_°ack_adju°míts
 (
gcc
::
c⁄ãxt
 *
˘xt
);

554 
πl_›t_∑ss
 *
make_∑ss_≥ïhﬁe2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

555 
πl_›t_∑ss
 *
make_∑ss_if_a·î_ªlﬂd
 (
gcc
::
c⁄ãxt
 *
˘xt
);

556 
πl_›t_∑ss
 *
make_∑ss_ªgª«me
 (
gcc
::
c⁄ãxt
 *
˘xt
);

557 
πl_›t_∑ss
 *
make_∑ss_˝r›_h¨dªg
 (
gcc
::
c⁄ãxt
 *
˘xt
);

558 
πl_›t_∑ss
 *
make_∑ss_ª‹dî_blocks
 (
gcc
::
c⁄ãxt
 *
˘xt
);

559 
πl_›t_∑ss
 *
make_∑ss_bønch_èrgë_lﬂd_›timize2
 (
gcc
::
c⁄ãxt


560 *
˘xt
);

561 
πl_›t_∑ss
 *
make_∑ss_Àaf_ªgs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

562 
πl_›t_∑ss
 *
make_∑ss_•lô_bef‹e_sched2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

563 
πl_›t_∑ss
 *
make_∑ss_com∑ª_ñim_a·î_ªlﬂd
 (
gcc
::
c⁄ãxt
 *
˘xt
);

564 
πl_›t_∑ss
 *
make_∑ss_sched2
 (
gcc
::
c⁄ãxt
 *
˘xt
);

565 
πl_›t_∑ss
 *
make_∑ss_°ack_ªgs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

566 
πl_›t_∑ss
 *
make_∑ss_°ack_ªgs_run
 (
gcc
::
c⁄ãxt
 *
˘xt
);

567 
πl_›t_∑ss
 *
make_∑ss_df_föish
 (
gcc
::
c⁄ãxt
 *
˘xt
);

568 
πl_›t_∑ss
 *
make_∑ss_compuã_Æignmíts
 (
gcc
::
c⁄ãxt
 *
˘xt
);

569 
πl_›t_∑ss
 *
make_∑ss_du∂iˇã_compuãd_gŸos
 (
gcc
::
c⁄ãxt
 *
˘xt
);

570 
πl_›t_∑ss
 *
make_∑ss_v¨übÀ_åackög
 (
gcc
::
c⁄ãxt
 *
˘xt
);

571 
πl_›t_∑ss
 *
make_∑ss_‰ì_cfg
 (
gcc
::
c⁄ãxt
 *
˘xt
);

572 
πl_›t_∑ss
 *
make_∑ss_machöe_ª‹g
 (
gcc
::
c⁄ãxt
 *
˘xt
);

573 
πl_›t_∑ss
 *
make_∑ss_˛ónup_b¨rõrs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

574 
πl_›t_∑ss
 *
make_∑ss_dñay_¶Ÿs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

575 
πl_›t_∑ss
 *
make_∑ss_•lô_f‹_sh‹ãn_bønches
 (
gcc
::
c⁄ãxt
 *
˘xt
);

576 
πl_›t_∑ss
 *
make_∑ss_•lô_bef‹e_ªg°ack
 (
gcc
::
c⁄ãxt
 *
˘xt
);

577 
πl_›t_∑ss
 *
make_∑ss_c⁄vît_to_eh_ªgi⁄_ønges
 (
gcc
::
c⁄ãxt
 *
˘xt
);

578 
πl_›t_∑ss
 *
make_∑ss_sh‹ãn_bønches
 (
gcc
::
c⁄ãxt
 *
˘xt
);

579 
πl_›t_∑ss
 *
make_∑ss_£t_nŸhrow_fun˘i⁄_Êags
 (
gcc
::
c⁄ãxt
 *
˘xt
);

580 
πl_›t_∑ss
 *
make_∑ss_dw¨f2_‰ame
 (
gcc
::
c⁄ãxt
 *
˘xt
);

581 
πl_›t_∑ss
 *
make_∑ss_föÆ
 (
gcc
::
c⁄ãxt
 *
˘xt
);

582 
πl_›t_∑ss
 *
make_∑ss_πl_£qab°r
 (
gcc
::
c⁄ãxt
 *
˘xt
);

583 
gim∂e_›t_∑ss
 *
make_∑ss_ªÀa£_sß_«mes
 (
gcc
::
c⁄ãxt
 *
˘xt
);

584 
gim∂e_›t_∑ss
 *
make_∑ss_óæy_ölöe
 (
gcc
::
c⁄ãxt
 *
˘xt
);

585 
gim∂e_›t_∑ss
 *
make_∑ss_ölöe_∑ømëîs
 (
gcc
::
c⁄ãxt
 *
˘xt
);

586 
gim∂e_›t_∑ss
 *
make_∑ss_upd©e_addªss_èkí
 (
gcc
::
c⁄ãxt
 *
˘xt
);

587 
gim∂e_›t_∑ss
 *
make_∑ss_c⁄vît_swôch
 (
gcc
::
c⁄ãxt
 *
˘xt
);

588 
gim∂e_›t_∑ss
 *
make_∑ss_åì_swôch_sh‹tcut
 (
gcc
::
c⁄ãxt
 *
˘xt
);

591 
›t_∑ss
 *
cuºít_∑ss
;

593 
boﬁ
 
execuã_⁄e_∑ss
 (
›t_∑ss
 *);

594 
execuã_∑ss_li°
 (
›t_∑ss
 *);

595 
execuã_ùa_∑ss_li°
 (
›t_∑ss
 *);

596 
execuã_ùa_summ¨y_∑s£s
 (
ùa_›t_∑ss_d
 *);

597 
execuã_Æl_ùa_å™sf‹ms
 ();

598 
execuã_Æl_ùa_°mt_fixups
 (
cgøph_node
 *, 
gim∂e
 *);

599 
boﬁ
 
∑ss_öô_dump_fûe
 (
›t_∑ss
 *);

600 
∑ss_föi_dump_fûe
 (
›t_∑ss
 *);

602 c⁄° *
gë_cuºít_∑ss_«me
 ();

603 
¥öt_cuºít_∑ss
 (
FILE
 *);

604 
debug_∑ss
 ();

605 
ùa_wrôe_summ¨õs
 ();

606 
ùa_wrôe_›timiz©i⁄_summ¨õs
 (
…o_symèb_ícodî_d
 *);

607 
ùa_ªad_summ¨õs
 ();

608 
ùa_ªad_›timiz©i⁄_summ¨õs
 ();

609 
ªgi°î_⁄e_dump_fûe
 (
›t_∑ss
 *);

610 
boﬁ
 
fun˘i⁄_ˇŒed_by_¥o˚s£d_nodes_p
 ();

619 
boﬁ
 
fú°_∑ss_ö°™˚
;

622 
do_≥r_fun˘i⁄_t›‹dî
 ((*) (*), *);

624 
	`dißbÀ_∑ss
 (const *);

625 
	`íabÀ_∑ss
 (const *);

626 
	`dump_∑s£s
 ();

	@include/tree-phinodes.h

20 #i‚de‡
GCC_TREE_PHINODES_H


21 
	#GCC_TREE_PHINODES_H


	)

23 
phöodes_¥öt_°©i°ics
 ();

24 
ªÀa£_phi_node
 (
gim∂e
);

25 
ª£rve_phi_¨gs_f‹_√w_edge
 (
basic_block
);

26 
add_phi_node_to_bb
 (
gim∂e
 
phi
, 
basic_block
 
bb
);

27 
gim∂e
 
¸óã_phi_node
 (
åì
, 
basic_block
);

28 
add_phi_¨g
 (
gim∂e
, 
åì
, 
edge
, 
sour˚_loˇti⁄
);

29 
ªmove_phi_¨gs
 (
edge
);

30 
ªmove_phi_node
 (
gim∂e_°mt_ôî©‹
 *, 
boﬁ
);

31 
ªmove_phi_nodes
 (
basic_block
);

32 
åì
 
degíî©e_phi_ªsu…
 (
gim∂e
);

33 
£t_phi_nodes
 (
basic_block
, 
gim∂e_£q
);

35 
ölöe
 
u£_›î™d_p


36 
	$gim∂e_phi_¨g_imm_u£_±r
 (
gim∂e
 
gs
, 
i
)

38  &
	`gim∂e_phi_¨g
 (
gs
, 
i
)->
imm_u£
;

39 
	}
}

43 
ölöe
 

44 
	$phi_¨g_ödex_‰om_u£
 (
u£_›î™d_p
 
u£
)

46 
phi_¨g_d
 *
ñemít
, *
roŸ
;

47 
size_t
 
ödex
;

48 
gim∂e
 
phi
;

54 
phi
 = 
	`USE_STMT
 (
u£
);

56 
ñemít
 = (
phi_¨g_d
 *)
u£
;

57 
roŸ
 = 
	`gim∂e_phi_¨g
 (
phi
, 0);

58 
ödex
 = 
ñemít
 - 
roŸ
;

62 
	`gcc_checkög_as£π
 ((((*)
ñemít
 - (*)
roŸ
)

63 %  (
phi_¨g_d
)) == 0

64 && 
ödex
 < 
	`gim∂e_phi_ˇ∑côy
 (
phi
));

66  
ödex
;

67 
	}
}

	@include/tree-pretty-print.h

22 #i‚de‡
GCC_TREE_PRETTY_PRINT_H


23 
	#GCC_TREE_PRETTY_PRINT_H


	)

25 
	~"¥ëty-¥öt.h
"

26 
	~"doubÀ-öt.h
"

28 
	#µ_unsuµ‹ãd_åì
(
PP
, 
T
) \

29 
	`µ_vîb©im
 (
PP
, "#%qsÇot supported by %s#", \

30 
	`gë_åì_code_«me
 (
	`TREE_CODE
 (
T
)), 
__FUNCTION__
)

	)

32 
	#µ_ti_ab°ø˘_‹igö
(
TI
Ë((
åì
 *Ë(TI)->
x_d©a
)

	)

35 
debug_gíîic_ex¥
 (
åì
);

36 
debug_gíîic_°mt
 (
åì
);

37 
debug_åì_chaö
 (
åì
);

38 
¥öt_gíîic_de˛
 (
FILE
 *, 
åì
, );

39 
¥öt_gíîic_°mt
 (
FILE
 *, 
åì
, );

40 
¥öt_gíîic_°mt_ödíãd
 (
FILE
 *, 
åì
, , );

41 
¥öt_gíîic_ex¥
 (
FILE
 *, 
åì
, );

42 
dump_omp_˛au£s
 (
¥ëty_¥öãr
 *, 
åì
, , );

43 
dump_gíîic_node
 (
¥ëty_¥öãr
 *, 
åì
, , , 
boﬁ
);

44 
¥öt_de˛¨©i⁄
 (
¥ëty_¥öãr
 *, 
åì
, , );

45 
›_code_¥io
 (
åì_code
);

46 
›_¥io
 (
c⁄°_åì
);

47 c⁄° *
›_symbﬁ_code
 (
åì_code
);

48 
¥öt_ˇŒ_«me
 (
¥ëty_¥öãr
 *, 
åì
, );

49 
≥r˚¡_K_f‹m©
 (
ãxt_öfo
 *);

50 
µ_åì_idítifõr
 (
¥ëty_¥öãr
 *, 
åì
);

51 
dump_fun˘i⁄_hódî
 (
FILE
 *, 
åì
, );

52 
µ_doubÀ_öt
 (
¥ëty_¥öãr
 *
µ
, 
doubÀ_öt
 
d
, 
boﬁ
 
uns
);

	@include/tree-ssa-address.h

20 #i‚de‡
GCC_TREE_SSA_ADDRESS_H


21 
	#GCC_TREE_SSA_ADDRESS_H


	)

23 
πx
 
addr_f‹_mem_ªf
 (
mem_addªss
 *, 
addr_•a˚_t
, 
boﬁ
);

24 
πx
 
addr_f‹_mem_ªf
 (
åì
 
exp
, 
addr_•a˚_t
 
as
, 
boﬁ
 
ªÆly_ex∑nd
);

25 
gë_addªss_des¸ùti⁄
 (
åì
, 
mem_addªss
 *);

26 
åì
 
åì_mem_ªf_addr
 (tree,Åree);

27 
åì
 
¸óã_mem_ªf
 (
gim∂e_°mt_ôî©‹
 *,Åree,

28 
aff_åì
 *, 
åì
,Åªe,Åªe, 
boﬁ
);

29 
c›y_ªf_öfo
 (
åì
,Åree);

30 
åì
 
maybe_fﬁd_tmr
 (tree);

	@include/tree-ssa-alias.h

21 #i‚de‡
TREE_SSA_ALIAS_H


22 
	#TREE_SSA_ALIAS_H


	)

28 
GTY
(()Ë
	g±_sﬁuti⁄


32 
	g™ythög
 : 1;

36 
	gn⁄loˇl
 : 1;

40 
	gesˇ≥d
 : 1;

44 
	gùa_esˇ≥d
 : 1;

48 
	gnuŒ
 : 1;

52 
	gv¨s_c⁄èös_n⁄loˇl
 : 1;

54 
	gv¨s_c⁄èös_esˇ≥d
 : 1;

57 
	gv¨s_c⁄èös_esˇ≥d_hóp
 : 1;

60 
bôm≠
 
	gv¨s
;

67 
	sao_ªf


71 
åì
 
	mªf
;

77 
åì
 
	mba£
;

79 
HOST_WIDE_INT
 
	moff£t
;

81 
HOST_WIDE_INT
 
	msize
;

83 
HOST_WIDE_INT
 
	mmax_size
;

86 
Æüs_£t_ty≥
 
	mªf_Æüs_£t
;

89 
Æüs_£t_ty≥
 
	mba£_Æüs_£t
;

92 
boﬁ
 
	mvﬁ©ûe_p
;

97 
ao_ªf_öô
 (
ao_ªf
 *, 
åì
);

98 
ao_ªf_öô_‰om_±r_™d_size
 (
ao_ªf
 *, 
åì
,Åree);

99 
åì
 
ao_ªf_ba£
 (
ao_ªf
 *);

100 
Æüs_£t_ty≥
 
ao_ªf_Æüs_£t
 (
ao_ªf
 *);

101 
boﬁ
 
±r_dîef_may_Æüs_globÆ_p
 (
åì
);

102 
boﬁ
 
±r_dîefs_may_Æüs_p
 (
åì
,Åree);

103 
boﬁ
 
ªf_may_Æüs_globÆ_p
 (
åì
);

104 
boﬁ
 
ªfs_may_Æüs_p
 (
åì
,Åree);

105 
boﬁ
 
ªfs_may_Æüs_p_1
 (
ao_ªf
 *,áo_ref *, bool);

106 
boﬁ
 
ªfs_™ti_dïídít_p
 (
åì
,Åree);

107 
boﬁ
 
ªfs_ouçut_dïídít_p
 (
åì
,Åree);

108 
boﬁ
 
ªf_maybe_u£d_by_°mt_p
 (
gim∂e
, 
åì
);

109 
boﬁ
 
°mt_may_˛obbî_globÆ_p
 (
gim∂e
);

110 
boﬁ
 
°mt_may_˛obbî_ªf_p
 (
gim∂e
, 
åì
);

111 
boﬁ
 
°mt_may_˛obbî_ªf_p_1
 (
gim∂e
, 
ao_ªf
 *);

112 
boﬁ
 
ˇŒ_may_˛obbî_ªf_p
 (
gim∂e
, 
åì
);

113 
boﬁ
 
°mt_kûls_ªf_p
 (
gim∂e
, 
åì
);

114 
åì
 
gë_c⁄töu©i⁄_f‹_phi
 (
gim∂e
, 
ao_ªf
 *,

115 *, 
bôm≠
 *, 
boﬁ
);

116 *
wÆk_n⁄_Æü£d_vu£s
 (
ao_ªf
 *, 
åì
,

117 *(*)(
ao_ªf
 *, 
åì
,

119 *(*)(
ao_ªf
 *, 
åì
, *), *);

120 
wÆk_Æü£d_vdefs
 (
ao_ªf
 *, 
åì
,

121 
	$boﬁ
 (*)(
ao_ªf
 *, 
åì
, *),

122 *, 
bôm≠
 *);

123 
	`dump_Æüs_öfo
 (
FILE
 *);

124 
	`debug_Æüs_öfo
 ();

125 
	`dump_poöts_to_sﬁuti⁄
 (
FILE
 *, 
±_sﬁuti⁄
 *);

126 
	`debug
 (
±_sﬁuti⁄
 &
ªf
);

127 
	`debug
 (
±_sﬁuti⁄
 *
±r
);

128 
	`dump_poöts_to_öfo_f‹
 (
FILE
 *, 
åì
);

129 
	`debug_poöts_to_öfo_f‹
 (
åì
);

130 
	`dump_Æüs_°©s
 (
FILE
 *);

134 
	`compuã_may_Æü£s
 ();

135 
boﬁ
 
	`±_sﬁuti⁄_em±y_p
 (
±_sﬁuti⁄
 *);

136 
boﬁ
 
	`±_sﬁuti⁄_sögÀt⁄_p
 (
±_sﬁuti⁄
 *, *);

137 
boﬁ
 
	`±_sﬁuti⁄_ö˛udes_globÆ
 (
±_sﬁuti⁄
 *);

138 
boﬁ
 
	`±_sﬁuti⁄_ö˛udes
 (
±_sﬁuti⁄
 *, 
c⁄°_åì
);

139 
boﬁ
 
	`±_sﬁuti⁄s_öãr£˘
 (
±_sﬁuti⁄
 *, pt_solution *);

140 
	`±_sﬁuti⁄_ª£t
 (
±_sﬁuti⁄
 *);

141 
	`±_sﬁuti⁄_£t
 (
±_sﬁuti⁄
 *, 
bôm≠
, 
boﬁ
);

142 
	`±_sﬁuti⁄_£t_v¨
 (
±_sﬁuti⁄
 *, 
åì
);

144 
	`dump_±a_°©s
 (
FILE
 *);

146 
	`GTY
(()Ë
±_sﬁuti⁄
 
ùa_esˇ≥d_±
;

152 
ölöe
 
boﬁ


153 
	$ønges_ovîœp_p
 (
HOST_WIDE_INT
 
pos1
,

154 
HOST_WIDE_INT
 
size1
,

155 
HOST_WIDE_INT
 
pos2
,

156 
HOST_WIDE_INT
 
size2
)

158 i‡(
pos1
 >
pos2


159 && (
size2
 =(
HOST_WIDE_INT
)-1

160 || 
pos1
 < (
pos2
 + (
HOST_WIDE_INT
Ë
size2
)))

161  
åue
;

162 i‡(
pos2
 >
pos1


163 && (
size1
 =(
HOST_WIDE_INT
)-1

164 || 
pos2
 < (
pos1
 + (
HOST_WIDE_INT
Ë
size1
)))

165  
åue
;

167  
Ál£
;

168 
	}
}

	@include/tree-ssa-coalesce.h

20 #i‚de‡
GCC_TREE_SSA_COALESCE_H


21 
	#GCC_TREE_SSA_COALESCE_H


	)

23 
v¨_m≠
 
cﬂÀs˚_sß_«me
 ();

	@include/tree-ssa-dom.h

20 #i‚de‡
GCC_TREE_SSA_DOM_H


21 
	#GCC_TREE_SSA_DOM_H


	)

23 
dump_domö©‹_›timiz©i⁄_°©s
 (
FILE
 *);

24 
debug_domö©‹_›timiz©i⁄_°©s
 ();

25 
lo›_dïth_of_«me
 (
åì
);

26 
boﬁ
 
sim∂e_iv_ö¸emít_p
 (
gim∂e
);

	@include/tree-ssa-loop-ivopts.h

20 #i‚de‡
GCC_TREE_SSA_LOOP_IVOPTS_H


21 
	#GCC_TREE_SSA_LOOP_IVOPTS_H


	)

23 
edge
 
sögÀ_dom_exô
 (
lo›
 *);

24 
dump_iv
 (
FILE
 *, 
iv
 *);

25 
dump_u£
 (
FILE
 *, 
iv_u£
 *);

26 
dump_u£s
 (
FILE
 *, 
iv›ts_d©a
 *);

27 
dump_ˇnd
 (
FILE
 *, 
iv_ˇnd
 *);

28 
boﬁ
 
c⁄èös_abn‹mÆ_sß_«me_p
 (
åì
);

29 
lo›
 *
ouãrmo°_öv¨ü¡_lo›_f‹_ex¥
 (lo› *, 
åì
);

30 
boﬁ
 
ex¥_öv¨ü¡_ö_lo›_p
 (
lo›
 *, 
åì
);

31 
boﬁ
 
may_be_n⁄addªsßbÀ_p
 (
åì
 
ex¥
);

32 
boﬁ
 
mu…ùlõr_Ælowed_ö_addªss_p
 (
HOST_WIDE_INT
, 
machöe_mode
,

33 
addr_•a˚_t
);

34 
åì_sß_iv_›timize
 ();

	@include/tree-ssa-loop-manip.h

20 #i‚de‡
GCC_TREE_SSA_LOOP_MANIP_H


21 
	#GCC_TREE_SSA_LOOP_MANIP_H


	)

23 (*
	tå™sf‹m_ˇŒback
)(
	tlo›
 *, *);

25 
	`¸óã_iv
 (
åì
,Åªe,Åªe, 
lo›
 *, 
gim∂e_°mt_ôî©‹
 *,

26 
boﬁ
, 
åì
 *,Åree *);

27 
	`ªwrôe_öto_lo›_˛o£d_sß
 (
bôm≠
, );

28 
	`vîify_lo›_˛o£d_sß
 (
boﬁ
);

29 
basic_block
 
	`•lô_lo›_exô_edge
 (
edge
);

30 
basic_block
 
	`ù_íd_pos
 (
lo›
 *);

31 
basic_block
 
	`ù_n‹mÆ_pos
 (
lo›
 *);

32 
	`°™d¨d_iv_ö¸emít_posôi⁄
 (
lo›
 *,

33 
gim∂e_°mt_ôî©‹
 *, 
boﬁ
 *);

34 
boﬁ
 
	`gim∂e_du∂iˇã_lo›_to_hódî_edge
 (
lo›
 *, 
edge
,

35 , 
sbôm≠
,

36 
edge
, 
vec
<edge> *,

38 
boﬁ
 
	`ˇn_uƒﬁl_lo›_p
 (
lo›
 *lo›, 
Á˘‹
,

39 
åì_nôî_desc
 *
nôî
);

40 
	`åì_å™sf‹m_™d_uƒﬁl_lo›
 (
lo›
 *, ,

41 
edge
, 
åì_nôî_desc
 *,

42 
å™sf‹m_ˇŒback
, *);

43 
	`åì_uƒﬁl_lo›
 (
lo›
 *, ,

44 
edge
, 
åì_nôî_desc
 *);

45 
åì
 
	`ˇn⁄iˇlize_lo›_ivs
 (
lo›
 *,Åªê*, 
boﬁ
);

	@include/tree-ssa-loop-niter.h

20 #i‚de‡
GCC_TREE_SSA_LOOP_NITER_H


21 
	#GCC_TREE_SSA_LOOP_NITER_H


	)

23 
åì
 
ex∑nd_sim∂e_›î©i⁄s
 (tree);

24 
boﬁ
 
lo›_⁄ly_exô_p
 (c⁄° 
lo›
 *, 
c⁄°_edge
);

25 
boﬁ
 
numbî_of_ôî©i⁄s_exô
 (
lo›
 *, 
edge
,

26 
åì_nôî_desc
 *
nôî
, 
boﬁ
,

27 
boﬁ
 
evîy_ôî©i⁄
 = 
åue
);

28 
åì
 
föd_lo›_nôî
 (
lo›
 *, 
edge
 *);

29 
boﬁ
 
föôe_lo›_p
 (
lo›
 *);

30 
åì
 
lo›_nôî_by_evÆ
 (
lo›
 *, 
edge
);

31 
åì
 
föd_lo›_nôî_by_evÆ
 (
lo›
 *, 
edge
 *);

32 
boﬁ
 
e°im©ed_lo›_ôî©i⁄s
 (
lo›
 *, 
doubÀ_öt
 *);

33 
HOST_WIDE_INT
 
e°im©ed_lo›_ôî©i⁄s_öt
 (
lo›
 *);

34 
boﬁ
 
max_lo›_ôî©i⁄s
 (
lo›
 *, 
doubÀ_öt
 *);

35 
HOST_WIDE_INT
 
max_lo›_ôî©i⁄s_öt
 (
lo›
 *);

36 
HOST_WIDE_INT
 
max_°mt_executi⁄s_öt
 (
lo›
 *);

37 
HOST_WIDE_INT
 
e°im©ed_°mt_executi⁄s_öt
 (
lo›
 *);

38 
boﬁ
 
max_°mt_executi⁄s
 (
lo›
 *, 
doubÀ_öt
 *);

39 
boﬁ
 
e°im©ed_°mt_executi⁄s
 (
lo›
 *, 
doubÀ_öt
 *);

40 
e°im©e_numbîs_of_ôî©i⁄s
 ();

41 
boﬁ
 
°mt_domö©es_°mt_p
 (
gim∂e
, gimple);

42 
boﬁ
 
nowøp_ty≥_p
 (
åì
);

43 
boﬁ
 
s˚v_¥obably_wøps_p
 (
åì
,Åªe, 
gim∂e
, 
lo›
 *, bool);

44 
‰ì_numbîs_of_ôî©i⁄s_e°im©es_lo›
 (
lo›
 *);

45 
‰ì_numbîs_of_ôî©i⁄s_e°im©es
 ();

46 
sub°ôuã_ö_lo›_öfo
 (
lo›
 *, 
åì
,Åree);

	@include/tree-ssa-loop.h

20 #i‚de‡
GCC_TREE_SSA_LOOP_H


21 
	#GCC_TREE_SSA_LOOP_H


	)

25 
	safföe_iv


28 
åì
 
	mba£
, 
	m°ï
;

31 
boﬁ
 
	mno_ovîÊow
;

38 
	såì_nôî_desc


40 
åì
 
	massum±i⁄s
;

44 
åì
 
	mmay_be_zîo
;

48 
åì
 
	mnôî
;

52 
doubÀ_öt
 
	mmax
;

60 
afföe_iv
 
	mc⁄åﬁ
;

61 
åì
 
	mbound
;

62 
åì_code
 
	mcmp
;

65 
boﬁ
 
f‹_óch_ödex
 (
åì
 *, 
	$boﬁ
 (*Ë(
åì
,Åree *, *), *);

66 *
	`gë_lsm_tmp_«me
 (
åì
 
ªf
, 
n
, c⁄° *
suffix
 = 
NULL
);

67 
	`åì_num_lo›_ö¢s
 (
lo›
 *, 
íi_weights_d
 *);

71 
ölöe
 
lo›
 *

72 
	$lo›_c⁄èöög_°mt
 (
gim∂e
 
°mt
)

74 
basic_block
 
bb
 = 
	`gim∂e_bb
 (
°mt
);

75 i‡(!
bb
)

76  
NULL
;

78  
bb
->
lo›_Áthî
;

79 
	}
}

	@include/tree-ssa-operands.h

20 #i‚de‡
GCC_TREE_SSA_OPERANDS_H


21 
	#GCC_TREE_SSA_OPERANDS_H


	)

27 
åì
 *
	tdef_›î™d_p
;

30 
sß_u£_›î™d_t
 *
	tu£_›î™d_p
;

33 
	#NULL_USE_OPERAND_P
 ((
u£_›î™d_p
)
NULL
)

	)

34 
	#NULL_DEF_OPERAND_P
 ((
def_›î™d_p
)
NULL
)

	)

37 
	su£_›ty≥_d


39 
u£_›ty≥_d
 *
	m√xt
;

40 
sß_u£_›î™d_t
 
	mu£_±r
;

42 
u£_›ty≥_d
 *
	tu£_›ty≥_p
;

48 
GTY
((
chaö_√xt
("%h.√xt"), 
v¨übÀ_size
)Ë
	gsß_›î™d_mem‹y_d
 {

49 
sß_›î™d_mem‹y_d
 *
	g√xt
;

50 
	gmem
[1];

54 
GTY
(()Ë
	gsß_›î™ds
 {

55 
sß_›î™d_mem‹y_d
 *
	g›î™d_mem‹y
;

56 
	g›î™d_mem‹y_ödex
;

58 
	gsß_›î™d_mem_size
;

60 
boﬁ
 
	g›s_a˘ive
;

62 
u£_›ty≥_d
 * 
GTY
 ((
skù
 (""))Ë
	g‰ì_u£s
;

65 
	#USE_FROM_PTR
(
PTR
Ë
	`gë_u£_‰om_±r
 (PTR)

	)

66 
	#DEF_FROM_PTR
(
PTR
Ë
	`gë_def_‰om_±r
 (PTR)

	)

67 
	#SET_USE
(
USE
, 
V
Ë
	`£t_sß_u£_‰om_±r
 (USE, V)

	)

68 
	#SET_DEF
(
DEF
, 
V
Ë((*(DEF)Ë(V))

	)

70 
	#USE_STMT
(
USE
Ë(USE)->
loc
.
°mt


	)

72 
	#USE_OP_PTR
(
OP
Ë(&((OP)->
u£_±r
))

	)

73 
	#USE_OP
(
OP
Ë(
	`USE_FROM_PTR
 (
	`USE_OP_PTR
 (OP)))

	)

75 
	#PHI_RESULT_PTR
(
PHI
Ë
	`gim∂e_phi_ªsu…_±r
 (PHI)

	)

76 
	#PHI_RESULT
(
PHI
Ë
	`DEF_FROM_PTR
 (
	`PHI_RESULT_PTR
 (PHI))

	)

77 
	#SET_PHI_RESULT
(
PHI
, 
V
Ë
	`SET_DEF
 (
	`PHI_RESULT_PTR
 (PHI), (V))

	)

81 
	#PHI_ARG_DEF_PTR
(
PHI
, 
I
Ë
	`gim∂e_phi_¨g_imm_u£_±r
 ((PHI), (I))

	)

82 
	#PHI_ARG_DEF
(
PHI
, 
I
Ë
	`gim∂e_phi_¨g_def
 ((PHI), (I))

	)

83 
	#SET_PHI_ARG_DEF
(
PHI
, 
I
, 
V
) \

84 
	`SET_USE
 (
	`PHI_ARG_DEF_PTR
 ((
PHI
), (
I
)), (
V
))

	)

85 
	#PHI_ARG_DEF_FROM_EDGE
(
PHI
, 
E
) \

86 
	`PHI_ARG_DEF
 ((
PHI
), (
E
)->
de°_idx
)

	)

87 
	#PHI_ARG_DEF_PTR_FROM_EDGE
(
PHI
, 
E
) \

88 
	`PHI_ARG_DEF_PTR
 ((
PHI
), (
E
)->
de°_idx
)

	)

89 
	#PHI_ARG_INDEX_FROM_USE
(
USE
Ë
	`phi_¨g_ödex_‰om_u£
 (USE)

	)

92 
boﬁ
 
sß_›î™ds_a˘ive
 (
fun˘i⁄
 *);

93 
öô_sß_›î™ds
 (
fun˘i⁄
 *
‚
);

94 
föi_sß_›î™ds
 (
fun˘i⁄
 *);

95 
boﬁ
 
vîify_sß_›î™ds
 (
fun˘i⁄
 *, 
gim∂e
 
°mt
);

96 
‰ì_°mt_›î™ds
 (
fun˘i⁄
 *, 
gim∂e
);

97 
upd©e_°mt_›î™ds
 (
fun˘i⁄
 *, 
gim∂e
);

98 
sw≠_sß_›î™ds
 (
gim∂e
, 
åì
 *,Åree *);

99 
boﬁ
 
vîify_imm_löks
 (
FILE
 *
f
, 
åì
 
v¨
);

101 
dump_immedüã_u£s_f‹
 (
FILE
 *
fûe
, 
åì
 
v¨
);

102 
dump_immedüã_u£s
 (
FILE
 *
fûe
);

103 
debug_immedüã_u£s
 ();

104 
debug_immedüã_u£s_f‹
 (
åì
 
v¨
);

106 
u∆ök_°mt_vdef
 (
gim∂e
);

109 
ölöe
 
åì


110 
	$gë_u£_‰om_±r
 (
u£_›î™d_p
 
u£
)

112  *(
u£
->use);

113 
	}
}

116 
ölöe
 
åì


117 
	$gë_def_‰om_±r
 (
def_›î™d_p
 
def
)

119  *
def
;

120 
	}
}

	@include/tree-ssa-sccvn.h

21 #i‚de‡
TREE_SSA_SCCVN_H


22 
	#TREE_SSA_SCCVN_H


	)

25 
boﬁ
 
ex¥essi⁄s_equÆ_p
 (
åì
,Åree);

29 
åì
 
VN_TOP
;

36 
	svn_«ry_›_s


39 
	mvÆue_id
;

40 
ENUM_BITFIELD
(
åì_code
Ë
	m›code
 : 16;

41 
	mÀngth
 : 16;

42 
hashvÆ_t
 
	mhashcode
;

43 
åì
 
	mªsu…
;

44 
åì
 
	mty≥
;

45 
åì
 
	m›
[1];

46 } *
	tvn_«ry_›_t
;

47 c⁄° 
	tvn_«ry_›_s
 *
	tc⁄°_vn_«ry_›_t
;

51 
ölöe
 
size_t


52 
	$sizeof_vn_«ry_›
 (
Àngth
)

54   (
vn_«ry_›_s
Ë+  (
åì
Ë* 
Àngth
 -  (tree);

55 
	}
}

63 
	svn_phi_s


66 
	mvÆue_id
;

67 
hashvÆ_t
 
	mhashcode
;

68 
	mvec
<
	måì
> 
	mphürgs
;

69 
basic_block
 
	mblock
;

70 
åì
 
	mty≥
;

71 
åì
 
	mªsu…
;

72 } *
	tvn_phi_t
;

73 c⁄° 
	tvn_phi_s
 *
	tc⁄°_vn_phi_t
;

81 
	svn_ª„ªn˚_›_°ru˘


83 
åì_code
 
	m›code
;

85 
HOST_WIDE_INT
 
	moff
;

86 
åì
 
	mty≥
;

87 
åì
 
	m›0
;

88 
åì
 
	m›1
;

89 
åì
 
	m›2
;

90 } 
	tvn_ª„ªn˚_›_s
;

91 
vn_ª„ªn˚_›_s
 *
	tvn_ª„ªn˚_›_t
;

92 c⁄° 
	tvn_ª„ªn˚_›_s
 *
	tc⁄°_vn_ª„ªn˚_›_t
;

102 
	svn_ª„ªn˚_s


105 
	mvÆue_id
;

106 
hashvÆ_t
 
	mhashcode
;

107 
åì
 
	mvu£
;

108 
Æüs_£t_ty≥
 
	m£t
;

109 
åì
 
	mty≥
;

110 
	mvec
<
	mvn_ª„ªn˚_›_s
> 
	m›î™ds
;

111 
åì
 
	mªsu…
;

112 
åì
 
	mªsu…_vdef
;

113 } *
	tvn_ª„ªn˚_t
;

114 c⁄° 
	tvn_ª„ªn˚_s
 *
	tc⁄°_vn_ª„ªn˚_t
;

116 
	svn_c⁄°™t_s


118 
	mvÆue_id
;

119 
hashvÆ_t
 
	mhashcode
;

120 
åì
 
	mc⁄°™t
;

121 } *
	tvn_c⁄°™t_t
;

123 
	evn_köd
 { 
	mVN_NONE
, 
	mVN_CONSTANT
, 
	mVN_NARY
, 
	mVN_REFERENCE
, 
	mVN_PHI
 };

124 
vn_köd
 
vn_gë_°mt_köd
 (
gim∂e
);

129 
ölöe
 
hashvÆ_t


130 
	$vn_hash_ty≥
 (
åì
 
ty≥
)

132  (
	`INTEGRAL_TYPE_P
 (
ty≥
)

133 + (
	`INTEGRAL_TYPE_P
 (
ty≥
)

134 ? 
	`TYPE_PRECISION
 (
ty≥
Ë+ 
	`TYPE_UNSIGNED
 (type) : 0));

135 
	}
}

140 
ölöe
 
hashvÆ_t


141 
	$vn_hash_c⁄°™t_wôh_ty≥
 (
åì
 
c⁄°™t
)

143  (
	`ôî©ive_hash_ex¥
 (
c⁄°™t
, 0)

144 + 
	`vn_hash_ty≥
 (
	`TREE_TYPE
 (
c⁄°™t
)));

145 
	}
}

150 
ölöe
 
boﬁ


151 
	$vn_c⁄°™t_eq_wôh_ty≥
 (
åì
 
c1
,Åªê
c2
)

153  (
	`ex¥essi⁄s_equÆ_p
 (
c1
, 
c2
)

154 && 
	`ty≥s_com∑tibÀ_p
 (
	`TREE_TYPE
 (
c1
), TREE_TYPE (
c2
)));

155 
	}
}

157 
	svn_sß_aux


160 
åì
 
	mvÆnum
;

162 
åì
 
	mex¥
;

165 
	mvÆue_id
;

168 
	mdf¢um
;

169 
	mlow
;

170 
	mvisôed
 : 1;

171 
	m⁄_scc°ack
 : 1;

174 
	mhas_c⁄°™ts
 : 1;

179 
	mu£_¥o˚s£d
 : 1;

184 
	m√eds_ö£πi⁄
 : 1;

185 } *
	tvn_sß_aux_t
;

187 íum { 
	mVN_NOWALK
, 
	mVN_WALK
, 
	mVN_WALKREWRITE
 } 
	tvn_lookup_köd
;

190 
vn_sß_aux_t
 
VN_INFO
 (
åì
);

191 
vn_sß_aux_t
 
VN_INFO_GET
 (
åì
);

192 
åì
 
vn_gë_ex¥_f‹
 (tree);

193 
boﬁ
 
run_scc_vn
 (
vn_lookup_köd
);

194 
‰ì_scc_vn
 ();

195 
åì
 
vn_«ry_›_lookup
 (åì, 
vn_«ry_›_t
 *);

196 
åì
 
vn_«ry_›_lookup_°mt
 (
gim∂e
, 
vn_«ry_›_t
 *);

197 
åì
 
vn_«ry_›_lookup_põ˚s
 (, 
åì_code
,

198 
åì
,Åªê*, 
vn_«ry_›_t
 *);

199 
vn_«ry_›_t
 
vn_«ry_›_ö£π
 (
åì
,Åree);

200 
vn_«ry_›_t
 
vn_«ry_›_ö£π_°mt
 (
gim∂e
, 
åì
);

201 
vn_«ry_›_t
 
vn_«ry_›_ö£π_põ˚s
 (, 
åì_code
,

202 
åì
,Åree *,Åree, );

203 
vn_ª„ªn˚_fﬁd_ödúe˘
 (
vec
<
vn_ª„ªn˚_›_s
> *,

205 
c›y_ª„ªn˚_›s_‰om_ªf
 (
åì
, 
vec
<
vn_ª„ªn˚_›_s
> *);

206 
c›y_ª„ªn˚_›s_‰om_ˇŒ
 (
gim∂e
, 
vec
<
vn_ª„ªn˚_›_s
> *);

207 
boﬁ
 
ao_ªf_öô_‰om_vn_ª„ªn˚
 (
ao_ªf
 *, 
Æüs_£t_ty≥
, 
åì
,

208 
vec
<
vn_ª„ªn˚_›_s
> );

209 
åì
 
vn_ª„ªn˚_lookup_põ˚s
 (åì, 
Æüs_£t_ty≥
,Åree,

210 
vec
<
vn_ª„ªn˚_›_s
> ,

211 
vn_ª„ªn˚_t
 *, 
vn_lookup_köd
);

212 
åì
 
vn_ª„ªn˚_lookup
 (åì,Åªe, 
vn_lookup_köd
, 
vn_ª„ªn˚_t
 *);

213 
vn_ª„ªn˚_t
 
vn_ª„ªn˚_ö£π
 (
åì
,Åree,Åree,Åree);

214 
vn_ª„ªn˚_t
 
vn_ª„ªn˚_ö£π_põ˚s
 (
åì
, 
Æüs_£t_ty≥
,Åree,

215 
vec
<
vn_ª„ªn˚_›_s
> ,

216 
åì
, );

218 
hashvÆ_t
 
vn_«ry_›_compuã_hash
 (c⁄° 
vn_«ry_›_t
);

219 
boﬁ
 
vn_«ry_›_eq
 (
c⁄°_vn_«ry_›_t
 c⁄° 
vno1
,

220 
c⁄°_vn_«ry_›_t
 c⁄° 
vno2
);

221 
boﬁ
 
vn_«ry_may_å≠
 (
vn_«ry_›_t
);

222 
hashvÆ_t
 
vn_ª„ªn˚_compuã_hash
 (c⁄° 
vn_ª„ªn˚_t
);

223 
boﬁ
 
vn_ª„ªn˚_eq
 (
c⁄°_vn_ª„ªn˚_t
 const, const_vn_reference_t const);

224 
gë_max_vÆue_id
 ();

225 
gë_√xt_vÆue_id
 ();

226 
gë_c⁄°™t_vÆue_id
 (
åì
);

227 
gë_‹_Æloc_c⁄°™t_vÆue_id
 (
åì
);

228 
boﬁ
 
vÆue_id_c⁄°™t_p
 ();

229 
åì
 
fuŒy_c⁄°™t_vn_ª„ªn˚_p
 (
vn_ª„ªn˚_t
);

233 
ölöe
 
åì


234 
	$vn_vÆueize
 (
åì
 
«me
)

236 i‡(
	`TREE_CODE
 (
«me
Ë=
SSA_NAME
)

238 
åì
 
ãm
 = 
	`VN_INFO
 (
«me
)->
vÆnum
;

239  
ãm
 =
VN_TOP
 ? 
«me
 :Åem;

241  
«me
;

242 
	}
}

	@include/tree-ssa-ter.h

20 #i‚de‡
GCC_TREE_SSA_TER_H


21 
	#GCC_TREE_SSA_TER_H


	)

23 
bôm≠
 
föd_ª∂a˚abÀ_ex¥s
 (
v¨_m≠
);

24 
dump_ª∂a˚abÀ_ex¥s
 (
FILE
 *, 
bôm≠
);

	@include/tree-ssa-threadedge.h

20 #i‚de‡
GCC_TREE_SSA_THREADEDGE_H


21 
	#GCC_TREE_SSA_THREADEDGE_H


	)

23 
vec
<
åì
> 
sß_«me_vÆues
;

24 
	#SSA_NAME_VALUE
(
x
) \

25 (
	`SSA_NAME_VERSION
 (
x
Ë< 
sß_«me_vÆues
.
	`Àngth
 () \

26 ? 
sß_«me_vÆues
[
	`SSA_NAME_VERSION
 (
x
)] \

27 : 
NULL_TREE
)

	)

28 
£t_sß_«me_vÆue
 (
åì
,Åree);

29 
thªadedge_öôülize_vÆues
 ();

30 
thªadedge_föÆize_vÆues
 ();

31 
boﬁ
 
pŸítüŒy_thªadabÀ_block
 (
basic_block
);

32 
¥›ag©e_thªaded_block_debug_öto
 (
basic_block
, basic_block);

33 
thªad_a¸oss_edge
 (
gim∂e
, 
edge
, 
boﬁ
,

34 
vec
<
åì
> *, 
	$åì
 (*Ë(
gim∂e
, gimple));

	@include/tree-ssa-threadupdate.h

21 #i‚de‡
_TREE_SSA_THREADUPDATE_H


22 
	#_TREE_SSA_THREADUPDATE_H
 1

	)

25 
boﬁ
 
thªad_through_Æl_blocks
 (bool);

26 
	ejump_thªad_edge_ty≥


28 
	mEDGE_START_JUMP_THREAD
,

29 
	mEDGE_COPY_SRC_BLOCK
,

30 
	mEDGE_COPY_SRC_JOINER_BLOCK
,

31 
	mEDGE_NO_COPY_SRC_BLOCK


34 ˛as†
	cjump_thªad_edge


36 
	mpublic
:

37 
	$jump_thªad_edge
 (
edge
 
e
, 
jump_thªad_edge_ty≥
 
ty≥
)

38 : 
	`e
 (
e
), 
	$ty≥
 (
ty≥
) {}

40 
edge
 
e
;

41 
jump_thªad_edge_ty≥
 
ty≥
;

42 
	}
};

44 
ªgi°î_jump_thªad
 (
vec
 <
˛ass
 
jump_thªad_edge
 *> *);

45 
dñëe_jump_thªad_∑th
 (
vec
 <
˛ass
 
jump_thªad_edge
 *> *);

	@include/tree-ssa.h

20 #i‚de‡
GCC_TREE_SSA_H


21 
	#GCC_TREE_SSA_H


	)

24 
	s_edge_v¨_m≠
 {

25 
åì
 
	mªsu…
;

26 
åì
 
	mdef
;

27 
sour˚_loˇti⁄
 
	mlocus
;

29 
_edge_v¨_m≠
 
	tedge_v¨_m≠
;

32 
	gvec
<
	tedge_v¨_m≠
, 
	tva_hóp
, 
	tvl_embed
> 
	tedge_v¨_m≠_ve˘‹
;

35 
ªdúe˘_edge_v¨_m≠_add
 (
edge
, 
åì
,Åªe, 
sour˚_loˇti⁄
);

36 
ªdúe˘_edge_v¨_m≠_˛ór
 (
edge
);

37 
ªdúe˘_edge_v¨_m≠_dup
 (
edge
,Édge);

38 
edge_v¨_m≠_ve˘‹
 *
ªdúe˘_edge_v¨_m≠_ve˘‹
 (
edge
);

39 
ªdúe˘_edge_v¨_m≠_de°roy
 ();

40 
edge
 
sß_ªdúe˘_edge
 (edge, 
basic_block
);

41 
Êush_≥ndög_°mts
 (
edge
);

42 
gim∂e_ª∂a˚_sß_lhs
 (
gim∂e
, 
åì
);

43 
åì
 
èrgë_f‹_debug_böd
 (tree);

44 
ö£π_debug_ãmp_f‹_v¨_def
 (
gim∂e_°mt_ôî©‹
 *, 
åì
);

45 
ö£π_debug_ãmps_f‹_defs
 (
gim∂e_°mt_ôî©‹
 *);

46 
ª£t_debug_u£s
 (
gim∂e
);

47 
ªÀa£_defs_bô£t
 (
bôm≠
 
t‹emove
);

48 
vîify_sß
 (
boﬁ
);

49 
öô_åì_sß
 (
fun˘i⁄
 *);

50 
dñëe_åì_sß
 ();

51 
boﬁ
 
åì_sß_u£Àss_ty≥_c⁄vîsi⁄
 (
åì
);

52 
åì
 
åì_sß_°rù_u£Àss_ty≥_c⁄vîsi⁄s
 (tree);

54 
boﬁ
 
sß_undeföed_vÆue_p
 (
åì
);

55 
execuã_upd©e_addªs£s_èkí
 ();

59 
ölöe
 
åì


60 
	$ªdúe˘_edge_v¨_m≠_def
 (
edge_v¨_m≠
 *
v
)

62  
v
->
def
;

63 
	}
}

67 
ölöe
 
åì


68 
	$ªdúe˘_edge_v¨_m≠_ªsu…
 (
edge_v¨_m≠
 *
v
)

70  
v
->
ªsu…
;

71 
	}
}

75 
ölöe
 
sour˚_loˇti⁄


76 
	$ªdúe˘_edge_v¨_m≠_loˇti⁄
 (
edge_v¨_m≠
 *
v
)

78  
v
->
locus
;

79 
	}
}

	@include/tree-ssanames.h

20 #i‚de‡
GCC_TREE_SSANAMES_H


21 
	#GCC_TREE_SSANAMES_H


	)

25 
GTY
(()Ë
	g±r_öfo_def


28 
±_sﬁuti⁄
 
	g±
;

40 
	gÆign
;

45 
	gmißlign
;

50 
GTY
 (()Ë
	gønge_öfo_def
 {

52 
doubÀ_öt
 
	gmö
;

54 
doubÀ_öt
 
	gmax
;

56 
doubÀ_öt
 
	gn⁄zîo_bôs
;

60 
	#SSANAMES
(
fun
Ë(fun)->
gim∂e_df
->
sß_«mes


	)

61 
	#DEFAULT_DEFS
(
fun
Ë(fun)->
gim∂e_df
->
deÁu…_defs


	)

63 
	#num_sß_«mes
 (
	`vec_ß„_Àngth
 (
cfun
->
gim∂e_df
->
sß_«mes
))

	)

64 
	#sß_«me
(
i
Ë((*
cfun
->
gim∂e_df
->
sß_«mes
)[(i)])

	)

69 
	evÆue_ønge_ty≥
 { 
	mVR_UNDEFINED
, 
	mVR_RANGE
, 
	mVR_ANTI_RANGE
, 
	mVR_VARYING
 };

72 
£t_ønge_öfo
 (
åì
, 
vÆue_ønge_ty≥
, 
doubÀ_öt
,

73 
doubÀ_öt
);

75 
vÆue_ønge_ty≥
 
gë_ønge_öfo
 (
c⁄°_åì
, 
doubÀ_öt
 *,

76 
doubÀ_öt
 *);

77 
£t_n⁄zîo_bôs
 (
åì
, 
doubÀ_öt
);

78 
doubÀ_öt
 
gë_n⁄zîo_bôs
 (
c⁄°_åì
);

79 
öô_sß«mes
 (
fun˘i⁄
 *, );

80 
föi_sß«mes
 ();

81 
sß«mes_¥öt_°©i°ics
 ();

82 
åì
 
make_sß_«me_‚
 (
fun˘i⁄
 *,Åªe, 
gim∂e
);

83 
ªÀa£_sß_«me_‚
 (
fun˘i⁄
 *, 
åì
);

84 
boﬁ
 
gë_±r_öfo_Æignmít
 (
±r_öfo_def
 *, *,

86 
m¨k_±r_öfo_Æignmít_unknown
 (
±r_öfo_def
 *);

87 
£t_±r_öfo_Æignmít
 (
±r_öfo_def
 *, ,

89 
adju°_±r_öfo_mißlignmít
 (
±r_öfo_def
 *,

91 
±r_öfo_def
 *
gë_±r_öfo
 (
åì
);

93 
åì
 
c›y_sß_«me_‚
 (
fun˘i⁄
 *,Åªe, 
gim∂e
);

94 
du∂iˇã_sß_«me_±r_öfo
 (
åì
, 
±r_öfo_def
 *);

95 
åì
 
du∂iˇã_sß_«me_‚
 (
fun˘i⁄
 *,Åªe, 
gim∂e
);

96 
du∂iˇã_sß_«me_ønge_öfo
 (
åì
, 
vÆue_ønge_ty≥
,

97 
ønge_öfo_def
 *);

98 
ªÀa£_defs
 (
gim∂e
);

99 
ª∂a˚_sß_«me_symbﬁ
 (
åì
,Åree);

105 
ölöe
 
åì


106 
	$make_sß_«me
 (
åì
 
v¨
, 
gim∂e
 
°mt
)

108  
	`make_sß_«me_‚
 (
cfun
, 
v¨
, 
°mt
);

109 
	}
}

114 
ölöe
 
åì


115 
	$c›y_sß_«me
 (
åì
 
v¨
, 
gim∂e
 
°mt
)

117  
	`c›y_sß_«me_‚
 (
cfun
, 
v¨
, 
°mt
);

118 
	}
}

123 
ölöe
 
åì


124 
	$du∂iˇã_sß_«me
 (
åì
 
v¨
, 
gim∂e
 
°mt
)

126  
	`du∂iˇã_sß_«me_‚
 (
cfun
, 
v¨
, 
°mt
);

127 
	}
}

131 
ölöe
 

132 
	$ªÀa£_sß_«me
 (
åì
 
«me
)

134 
	`ªÀa£_sß_«me_‚
 (
cfun
, 
«me
);

135 
	}
}

140 
ölöe
 
åì


141 
	$make_ãmp_sß_«me
 (
åì
 
ty≥
, 
gim∂e
 
°mt
, c⁄° *
«me
)

143 
åì
 
sß_«me
;

144 
	`gcc_checkög_as£π
 (
	`TYPE_P
 (
ty≥
));

145 
sß_«me
 = 
	`make_sß_«me_‚
 (
cfun
, 
ty≥
, 
°mt
);

146 
	`SET_SSA_NAME_VAR_OR_IDENTIFIER
 (
sß_«me
, 
	`gë_idítifõr
 (
«me
));

147  
sß_«me
;

148 
	}
}

	@include/tree.h

20 #i‚de‡
GCC_TREE_H


21 
	#GCC_TREE_H


	)

23 
	~"åì-c‹e.h
"

29 
	~"fﬁd-c⁄°.h
"

32 
	#MARK_TS_BASE
(
C
) \

34 
åì_c⁄èös_°ru˘
[
C
][
TS_BASE
] = 1; \

35 } 0)

	)

37 
	#MARK_TS_TYPED
(
C
) \

39 
	`MARK_TS_BASE
 (
C
); \

40 
åì_c⁄èös_°ru˘
[
C
][
TS_TYPED
] = 1; \

41 } 0)

	)

43 
	#MARK_TS_COMMON
(
C
) \

45 
	`MARK_TS_TYPED
 (
C
); \

46 
åì_c⁄èös_°ru˘
[
C
][
TS_COMMON
] = 1; \

47 } 0)

	)

49 
	#MARK_TS_TYPE_COMMON
(
C
) \

51 
	`MARK_TS_COMMON
 (
C
); \

52 
åì_c⁄èös_°ru˘
[
C
][
TS_TYPE_COMMON
] = 1; \

53 } 0)

	)

55 
	#MARK_TS_TYPE_WITH_LANG_SPECIFIC
(
C
) \

57 
	`MARK_TS_TYPE_COMMON
 (
C
); \

58 
åì_c⁄èös_°ru˘
[
C
][
TS_TYPE_WITH_LANG_SPECIFIC
] = 1; \

59 } 0)

	)

61 
	#MARK_TS_DECL_MINIMAL
(
C
) \

63 
	`MARK_TS_COMMON
 (
C
); \

64 
åì_c⁄èös_°ru˘
[
C
][
TS_DECL_MINIMAL
] = 1; \

65 } 0)

	)

67 
	#MARK_TS_DECL_COMMON
(
C
) \

69 
	`MARK_TS_DECL_MINIMAL
 (
C
); \

70 
åì_c⁄èös_°ru˘
[
C
][
TS_DECL_COMMON
] = 1; \

71 } 0)

	)

73 
	#MARK_TS_DECL_WRTL
(
C
) \

75 
	`MARK_TS_DECL_COMMON
 (
C
); \

76 
åì_c⁄èös_°ru˘
[
C
][
TS_DECL_WRTL
] = 1; \

77 } 0)

	)

79 
	#MARK_TS_DECL_WITH_VIS
(
C
) \

81 
	`MARK_TS_DECL_WRTL
 (
C
); \

82 
åì_c⁄èös_°ru˘
[
C
][
TS_DECL_WITH_VIS
] = 1; \

83 } 0)

	)

85 
	#MARK_TS_DECL_NON_COMMON
(
C
) \

87 
	`MARK_TS_DECL_WITH_VIS
 (
C
); \

88 
åì_c⁄èös_°ru˘
[
C
][
TS_DECL_NON_COMMON
] = 1; \

89 } 0)

	)

94 
	#TREE_CODE_CLASS_STRING
(
CLASS
)\

95 
åì_code_˛ass_°rögs
[(Ë(
CLASS
)]

	)

97 
	#TREE_CODE_CLASS
(
CODE
Ë
åì_code_ty≥
[(Ë(CODE)]

	)

101 
	#EXCEPTIONAL_CLASS_P
(
NODE
)\

102 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_ex˚±i⁄Æ
)

	)

106 
	#CONSTANT_CLASS_P
(
NODE
)\

107 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_c⁄°™t
)

	)

111 
	#TYPE_P
(
NODE
)\

112 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_ty≥
)

	)

116 
	#DECL_P
(
NODE
)\

117 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_de˛¨©i⁄
)

	)

120 
	#VAR_P
(
NODE
) \

121 (
	`TREE_CODE
 (
NODE
Ë=
VAR_DECL
)

	)

125 
	#VAR_OR_FUNCTION_DECL_P
(
DECL
)\

126 (
	`TREE_CODE
 (
DECL
Ë=
VAR_DECL
 || TREE_CODE (DECLË=
FUNCTION_DECL
)

	)

131 
	#INDIRECT_REF_P
(
NODE
)\

132 (
	`TREE_CODE
 (
NODE
Ë=
INDIRECT_REF
)

	)

136 
	#REFERENCE_CLASS_P
(
NODE
)\

137 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_ª„ªn˚
)

	)

141 
	#COMPARISON_CLASS_P
(
NODE
)\

142 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_com∑ris⁄
)

	)

146 
	#UNARY_CLASS_P
(
NODE
)\

147 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_u«ry
)

	)

151 
	#BINARY_CLASS_P
(
NODE
)\

152 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_bö¨y
)

	)

156 
	#STATEMENT_CLASS_P
(
NODE
)\

157 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_°©emít
)

	)

162 
	#VL_EXP_CLASS_P
(
NODE
)\

163 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_vl_exp
)

	)

167 
	#EXPRESSION_CLASS_P
(
NODE
)\

168 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
NODE
)Ë=
tcc_ex¥essi⁄
)

	)

172 
	#IS_TYPE_OR_DECL_P
(
NODE
)\

173 (
	`TYPE_P
 (
NODE
Ë|| 
	`DECL_P
 (NODE))

	)

178 
	#IS_EXPR_CODE_CLASS
(
CLASS
)\

179 ((
CLASS
Ë>
tcc_ª„ªn˚
 && (CLASSË<
tcc_ex¥essi⁄
)

	)

183 
	#EXPR_P
(
NODE
Ë
	`IS_EXPR_CODE_CLASS
 (
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (NODE)))

	)

185 
	#TREE_CODE_LENGTH
(
CODE
Ë
åì_code_Àngth
[(Ë(CODE)]

	)

190 
	#BUILTIN_EXP10_P
(
FN
) \

191 ((
FN
Ë=
BUILT_IN_EXP10
 || (FNË=
BUILT_IN_EXP10F
 || (FNË=
BUILT_IN_EXP10L
 \

192 || (
FN
Ë=
BUILT_IN_POW10
 || (FNË=
BUILT_IN_POW10F
 || (FNË=
BUILT_IN_POW10L
)

	)

194 
	#BUILTIN_EXPONENT_P
(
FN
Ë(
	`BUILTIN_EXP10_P
 (FN) \

195 || (
FN
Ë=
BUILT_IN_EXP
 || (FNË=
BUILT_IN_EXPF
 || (FNË=
BUILT_IN_EXPL
 \

196 || (
FN
Ë=
BUILT_IN_EXP2
 || (FNË=
BUILT_IN_EXP2F
 || (FNË=
BUILT_IN_EXP2L
)

	)

198 
	#BUILTIN_SQRT_P
(
FN
) \

199 ((
FN
Ë=
BUILT_IN_SQRT
 || (FNË=
BUILT_IN_SQRTF
 || (FNË=
BUILT_IN_SQRTL
)

	)

201 
	#BUILTIN_CBRT_P
(
FN
) \

202 ((
FN
Ë=
BUILT_IN_CBRT
 || (FNË=
BUILT_IN_CBRTF
 || (FNË=
BUILT_IN_CBRTL
)

	)

204 
	#BUILTIN_ROOT_P
(
FN
Ë(
	`BUILTIN_SQRT_P
 (FNË|| 
	`BUILTIN_CBRT_P
 (FN))

	)

206 
	#CASE_FLT_FN
(
FN
ËFN: FN##
F
: FN##
L


	)

207 
	#CASE_FLT_FN_REENT
(
FN
ËFN##
_R
: FN##
F_R
: FN##
L_R


	)

208 
	#CASE_INT_FN
(
FN
ËFN: FN##
L
: FN##
LL
: FN##
IMAX


	)

215 
	#TREE_CODE
(
NODE
Ë((
åì_code
Ë(NODE)->
ba£
.
code
)

	)

216 
	#TREE_SET_CODE
(
NODE
, 
VALUE
Ë((NODE)->
ba£
.
code
 = (VALUE))

	)

220 #i‡
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 2007)

222 
	#TREE_CHECK
(
T
, 
CODE
) \

223 (
	`åì_check
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, (
CODE
)))

	)

225 
	#TREE_NOT_CHECK
(
T
, 
CODE
) \

226 (
	`åì_nŸ_check
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, (
CODE
)))

	)

228 
	#TREE_CHECK2
(
T
, 
CODE1
, 
CODE2
) \

229 (
	`åì_check2
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, (
CODE1
), (
CODE2
)))

	)

231 
	#TREE_NOT_CHECK2
(
T
, 
CODE1
, 
CODE2
) \

232 (
	`åì_nŸ_check2
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, (
CODE1
), (
CODE2
)))

	)

234 
	#TREE_CHECK3
(
T
, 
CODE1
, 
CODE2
, 
CODE3
) \

235 (
	`åì_check3
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, (
CODE1
), (
CODE2
), (
CODE3
)))

	)

237 
	#TREE_NOT_CHECK3
(
T
, 
CODE1
, 
CODE2
, 
CODE3
) \

238 (
	`åì_nŸ_check3
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

239 (
CODE1
), (
CODE2
), (
CODE3
)))

	)

241 
	#TREE_CHECK4
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
) \

242 (
	`åì_check4
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

243 (
CODE1
), (
CODE2
), (
CODE3
), (
CODE4
)))

	)

245 
	#TREE_NOT_CHECK4
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
) \

246 (
	`åì_nŸ_check4
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

247 (
CODE1
), (
CODE2
), (
CODE3
), (
CODE4
)))

	)

249 
	#TREE_CHECK5
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
, 
CODE5
) \

250 (
	`åì_check5
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

251 (
CODE1
), (
CODE2
), (
CODE3
), (
CODE4
), (
CODE5
)))

	)

253 
	#TREE_NOT_CHECK5
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
, 
CODE5
) \

254 (
	`åì_nŸ_check5
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

255 (
CODE1
), (
CODE2
), (
CODE3
), (
CODE4
), (
CODE5
)))

	)

257 
	#CONTAINS_STRUCT_CHECK
(
T
, 
STRUCT
) \

258 (
	`c⁄èös_°ru˘_check
 ((
T
), (
STRUCT
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

260 
	#TREE_CLASS_CHECK
(
T
, 
CLASS
) \

261 (
	`åì_˛ass_check
 ((
T
), (
CLASS
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

263 
	#TREE_RANGE_CHECK
(
T
, 
CODE1
, 
CODE2
) \

264 (
	`åì_ønge_check
 ((
T
), (
CODE1
), (
CODE2
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

266 
	#OMP_CLAUSE_SUBCODE_CHECK
(
T
, 
CODE
) \

267 (
	`omp_˛au£_subcode_check
 ((
T
), (
CODE
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

269 
	#OMP_CLAUSE_RANGE_CHECK
(
T
, 
CODE1
, 
CODE2
) \

270 (
	`omp_˛au£_ønge_check
 ((
T
), (
CODE1
), (
CODE2
), \

271 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

274 
	#EXPR_CHECK
(
T
) \

275 (
	`ex¥_check
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

278 
	#NON_TYPE_CHECK
(
T
) \

279 (
	`n⁄_ty≥_check
 ((
T
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))

	)

281 
	#TREE_VEC_ELT_CHECK
(
T
, 
I
) \

282 (*(
	`CONST_CAST2
 (
åì
 *, 
	`ty≥of
 (
T
)*, \

283 
	`åì_vec_ñt_check
 ((
T
), (
I
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))))

	)

285 
	#OMP_CLAUSE_ELT_CHECK
(
T
, 
I
) \

286 (*(
	`omp_˛au£_ñt_check
 ((
T
), (
I
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
)))

	)

289 
	#TREE_OPERAND_CHECK
(
T
, 
I
) \

290 (*(
	`CONST_CAST2
 (
åì
*, 
	`ty≥of
 (
T
)*, \

291 
	`åì_›î™d_check
 ((
T
), (
I
), 
__FILE__
, 
__LINE__
, 
__FUNCTION__
))))

	)

293 
	#TREE_OPERAND_CHECK_CODE
(
T
, 
CODE
, 
I
) \

294 (*(
	`åì_›î™d_check_code
 ((
T
), (
CODE
), (
I
), \

295 
__FILE__
, 
__LINE__
, 
__FUNCTION__
)))

	)

306 
	#TREE_CHAIN
(
NODE
) \

307 (
	`CONTAINS_STRUCT_CHECK
 (
NODE
, 
TS_COMMON
)->
comm⁄
.
chaö
)

	)

313 
	#TREE_TYPE
(
NODE
) \

314 (
	`CONTAINS_STRUCT_CHECK
 (
NODE
, 
TS_TYPED
)->
ty≥d
.
ty≥
)

	)

316 
	$åì_c⁄èös_°ru˘_check_Áûed
 (
c⁄°_åì
,

317 c⁄° 
åì_node_°ru˘uª_íum
,

319 
ATTRIBUTE_NORETURN
;

321 
	$åì_check_Áûed
 (
c⁄°_åì
, const *, , const *,

322 ...Ë
ATTRIBUTE_NORETURN
;

323 
	$åì_nŸ_check_Áûed
 (
c⁄°_åì
, const *, , const *,

324 ...Ë
ATTRIBUTE_NORETURN
;

325 
	$åì_˛ass_check_Áûed
 (
c⁄°_åì
, c⁄° 
åì_code_˛ass
,

327 
ATTRIBUTE_NORETURN
;

328 
	$åì_ønge_check_Áûed
 (
c⁄°_åì
, const *, ,

329 c⁄° *, 
åì_code
,

330 
åì_code
)

331 
ATTRIBUTE_NORETURN
;

332 
	$åì_nŸ_˛ass_check_Áûed
 (
c⁄°_åì
,

333 c⁄° 
åì_code_˛ass
,

335 
ATTRIBUTE_NORETURN
;

336 
	$åì_vec_ñt_check_Áûed
 (, , const *,

338 
ATTRIBUTE_NORETURN
;

339 
	$phi_node_ñt_check_Áûed
 (, , const *,

341 
ATTRIBUTE_NORETURN
;

342 
	$åì_›î™d_check_Áûed
 (, 
c⁄°_åì
,

344 
ATTRIBUTE_NORETURN
;

345 
	$omp_˛au£_check_Áûed
 (
c⁄°_åì
, const *, ,

346 c⁄° *, 
omp_˛au£_code
)

347 
ATTRIBUTE_NORETURN
;

348 
	$omp_˛au£_›î™d_check_Áûed
 (, 
c⁄°_åì
, const *,

350 
ATTRIBUTE_NORETURN
;

351 
	$omp_˛au£_ønge_check_Áûed
 (
c⁄°_åì
, const *, ,

352 c⁄° *, 
omp_˛au£_code
,

353 
omp_˛au£_code
)

354 
ATTRIBUTE_NORETURN
;

358 
	#CONTAINS_STRUCT_CHECK
(
T
, 
ENUM
Ë(T)

	)

359 
	#TREE_CHECK
(
T
, 
CODE
Ë(T)

	)

360 
	#TREE_NOT_CHECK
(
T
, 
CODE
Ë(T)

	)

361 
	#TREE_CHECK2
(
T
, 
CODE1
, 
CODE2
Ë(T)

	)

362 
	#TREE_NOT_CHECK2
(
T
, 
CODE1
, 
CODE2
Ë(T)

	)

363 
	#TREE_CHECK3
(
T
, 
CODE1
, 
CODE2
, 
CODE3
Ë(T)

	)

364 
	#TREE_NOT_CHECK3
(
T
, 
CODE1
, 
CODE2
, 
CODE3
Ë(T)

	)

365 
	#TREE_CHECK4
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
Ë(T)

	)

366 
	#TREE_NOT_CHECK4
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
Ë(T)

	)

367 
	#TREE_CHECK5
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
, 
CODE5
Ë(T)

	)

368 
	#TREE_NOT_CHECK5
(
T
, 
CODE1
, 
CODE2
, 
CODE3
, 
CODE4
, 
CODE5
Ë(T)

	)

369 
	#TREE_CLASS_CHECK
(
T
, 
CODE
Ë(T)

	)

370 
	#TREE_RANGE_CHECK
(
T
, 
CODE1
, 
CODE2
Ë(T)

	)

371 
	#EXPR_CHECK
(
T
Ë(T)

	)

372 
	#NON_TYPE_CHECK
(
T
Ë(T)

	)

373 
	#TREE_VEC_ELT_CHECK
(
T
, 
I
Ë((T)->
vec
.
a
[I])

	)

374 
	#TREE_OPERAND_CHECK
(
T
, 
I
Ë((T)->
exp
.
›î™ds
[I])

	)

375 
	#TREE_OPERAND_CHECK_CODE
(
T
, 
CODE
, 
I
Ë((T)->
exp
.
›î™ds
[I])

	)

376 
	#OMP_CLAUSE_ELT_CHECK
(
T
, 
i
Ë((T)->
omp_˛au£
.
›s
[i])

	)

377 
	#OMP_CLAUSE_RANGE_CHECK
(
T
, 
CODE1
, 
CODE2
Ë(T)

	)

378 
	#OMP_CLAUSE_SUBCODE_CHECK
(
T
, 
CODE
Ë(T)

	)

380 
	#TREE_CHAIN
(
NODE
Ë((NODE)->
comm⁄
.
chaö
)

	)

381 
	#TREE_TYPE
(
NODE
Ë((NODE)->
ty≥d
.
ty≥
)

	)

385 
	#TREE_BLOCK
(
NODE
Ë(
	`åì_block
 (NODE))

	)

386 
	#TREE_SET_BLOCK
(
T
, 
B
Ë(
	`åì_£t_block
 ((T), (B)))

	)

388 
	~"åì-check.h
"

390 
	#TYPE_CHECK
(
T
Ë
	`TREE_CLASS_CHECK
 (T, 
tcc_ty≥
)

	)

391 
	#DECL_MINIMAL_CHECK
(
T
Ë
	`CONTAINS_STRUCT_CHECK
 (T, 
TS_DECL_MINIMAL
)

	)

392 
	#DECL_COMMON_CHECK
(
T
Ë
	`CONTAINS_STRUCT_CHECK
 (T, 
TS_DECL_COMMON
)

	)

393 
	#DECL_WRTL_CHECK
(
T
Ë
	`CONTAINS_STRUCT_CHECK
 (T, 
TS_DECL_WRTL
)

	)

394 
	#DECL_WITH_VIS_CHECK
(
T
Ë
	`CONTAINS_STRUCT_CHECK
 (T, 
TS_DECL_WITH_VIS
)

	)

395 
	#DECL_NON_COMMON_CHECK
(
T
Ë
	`CONTAINS_STRUCT_CHECK
 (T, 
TS_DECL_NON_COMMON
)

	)

396 
	#CST_CHECK
(
T
Ë
	`TREE_CLASS_CHECK
 (T, 
tcc_c⁄°™t
)

	)

397 
	#STMT_CHECK
(
T
Ë
	`TREE_CLASS_CHECK
 (T, 
tcc_°©emít
)

	)

398 
	#VL_EXP_CHECK
(
T
Ë
	`TREE_CLASS_CHECK
 (T, 
tcc_vl_exp
)

	)

399 
	#FUNC_OR_METHOD_CHECK
(
T
Ë
	`TREE_CHECK2
 (T, 
FUNCTION_TYPE
, 
METHOD_TYPE
)

	)

400 
	#PTR_OR_REF_CHECK
(
T
Ë
	`TREE_CHECK2
 (T, 
POINTER_TYPE
, 
REFERENCE_TYPE
)

	)

402 
	#RECORD_OR_UNION_CHECK
(
T
) \

403 
	`TREE_CHECK3
 (
T
, 
RECORD_TYPE
, 
UNION_TYPE
, 
QUAL_UNION_TYPE
)

	)

404 
	#NOT_RECORD_OR_UNION_CHECK
(
T
) \

405 
	`TREE_NOT_CHECK3
 (
T
, 
RECORD_TYPE
, 
UNION_TYPE
, 
QUAL_UNION_TYPE
)

	)

407 
	#NUMERICAL_TYPE_CHECK
(
T
) \

408 
	`TREE_CHECK5
 (
T
, 
INTEGER_TYPE
, 
ENUMERAL_TYPE
, 
BOOLEAN_TYPE
, 
REAL_TYPE
, \

409 
FIXED_POINT_TYPE
)

	)

413 
	#TYPE_HASH
(
TYPE
Ë(
	`TYPE_UID
 (TYPE))

	)

417 
	#TREE_HASH
(
NODE
Ë((
size_t
Ë(NODEË& 0777777)

	)

420 
	#CONVERT_EXPR_CODE_P
(
CODE
) \

421 ((
CODE
Ë=
NOP_EXPR
 || (CODEË=
CONVERT_EXPR
)

	)

424 
	#CONVERT_EXPR_P
(
EXP
Ë
	`CONVERT_EXPR_CODE_P
 (
	`TREE_CODE
 (EXP))

	)

428 
	#CASE_CONVERT
 \

429 
NOP_EXPR
: \

430 
CONVERT_EXPR


	)

436 
	#STRIP_NOPS
(
EXP
) \

437 (
EXP
Ë
	`åì_°rù_n›_c⁄vîsi⁄s
 (
	`CONST_CAST_TREE
 (EXP))

	)

441 
	#STRIP_SIGN_NOPS
(
EXP
) \

442 (
EXP
Ë
	`åì_°rù_sign_n›_c⁄vîsi⁄s
 (
	`CONST_CAST_TREE
 (EXP))

	)

446 
	#STRIP_TYPE_NOPS
(
EXP
) \

447 (
	`CONVERT_EXPR_P
 (
EXP
) \

448 || 
	`TREE_CODE
 (
EXP
Ë=
NON_LVALUE_EXPR
) \

449 && 
	`TREE_OPERAND
 (
EXP
, 0Ë!
îr‹_m¨k_node
 \

450 && (
	`TREE_TYPE
 (
EXP
) \

451 =
	`TREE_TYPE
 (
	`TREE_OPERAND
 (
EXP
, 0)))) \

452 (
EXP
Ë
	`TREE_OPERAND
 (EXP, 0)

	)

457 
	#STRIP_USELESS_TYPE_CONVERSION
(
EXP
) \

458 (
EXP
Ë
	`åì_sß_°rù_u£Àss_ty≥_c⁄vîsi⁄s
 (EXP)

	)

462 
	#VECTOR_TYPE_P
(
TYPE
Ë(
	`TREE_CODE
 (TYPEË=
VECTOR_TYPE
)

	)

468 
	#INTEGRAL_TYPE_P
(
TYPE
) \

469 (
	`TREE_CODE
 (
TYPE
Ë=
ENUMERAL_TYPE
 \

470 || 
	`TREE_CODE
 (
TYPE
Ë=
BOOLEAN_TYPE
 \

471 || 
	`TREE_CODE
 (
TYPE
Ë=
INTEGER_TYPE
)

	)

475 
	#NON_SAT_FIXED_POINT_TYPE_P
(
TYPE
) \

476 (
	`TREE_CODE
 (
TYPE
Ë=
FIXED_POINT_TYPE
 && !
	`TYPE_SATURATING
 (TYPE))

	)

480 
	#SAT_FIXED_POINT_TYPE_P
(
TYPE
) \

481 (
	`TREE_CODE
 (
TYPE
Ë=
FIXED_POINT_TYPE
 && 
	`TYPE_SATURATING
 (TYPE))

	)

485 
	#FIXED_POINT_TYPE_P
(
TYPE
Ë(
	`TREE_CODE
 (TYPEË=
FIXED_POINT_TYPE
)

	)

489 
	#SCALAR_FLOAT_TYPE_P
(
TYPE
Ë(
	`TREE_CODE
 (TYPEË=
REAL_TYPE
)

	)

493 
	#COMPLEX_FLOAT_TYPE_P
(
TYPE
) \

494 (
	`TREE_CODE
 (
TYPE
Ë=
COMPLEX_TYPE
 \

495 && 
	`TREE_CODE
 (
	`TREE_TYPE
 (
TYPE
)Ë=
REAL_TYPE
)

	)

499 
	#VECTOR_INTEGER_TYPE_P
(
TYPE
) \

500 (
	`VECTOR_TYPE_P
 (
TYPE
) \

501 && 
	`TREE_CODE
 (
	`TREE_TYPE
 (
TYPE
)Ë=
INTEGER_TYPE
)

	)

506 
	#VECTOR_FLOAT_TYPE_P
(
TYPE
) \

507 (
	`VECTOR_TYPE_P
 (
TYPE
) \

508 && 
	`TREE_CODE
 (
	`TREE_TYPE
 (
TYPE
)Ë=
REAL_TYPE
)

	)

514 
	#FLOAT_TYPE_P
(
TYPE
) \

515 (
	`SCALAR_FLOAT_TYPE_P
 (
TYPE
) \

516 || ((
	`TREE_CODE
 (
TYPE
Ë=
COMPLEX_TYPE
 \

517 || 
	`VECTOR_TYPE_P
 (
TYPE
)) \

518 && 
	`SCALAR_FLOAT_TYPE_P
 (
	`TREE_TYPE
 (
TYPE
))))

	)

521 
	#DECIMAL_FLOAT_TYPE_P
(
TYPE
) \

522 (
	`SCALAR_FLOAT_TYPE_P
 (
TYPE
) \

523 && 
	`DECIMAL_FLOAT_MODE_P
 (
	`TYPE_MODE
 (
TYPE
)))

	)

526 
	#RECORD_OR_UNION_TYPE_P
(
TYPE
) \

527 (
	`TREE_CODE
 (
TYPE
Ë=
RECORD_TYPE
 \

528 || 
	`TREE_CODE
 (
TYPE
Ë=
UNION_TYPE
 \

529 || 
	`TREE_CODE
 (
TYPE
Ë=
QUAL_UNION_TYPE
)

	)

534 
	#AGGREGATE_TYPE_P
(
TYPE
) \

535 (
	`TREE_CODE
 (
TYPE
Ë=
ARRAY_TYPE
 || 
	`RECORD_OR_UNION_TYPE_P
 (TYPE))

	)

541 
	#POINTER_TYPE_P
(
TYPE
) \

542 (
	`TREE_CODE
 (
TYPE
Ë=
POINTER_TYPE
 || TREE_CODE (TYPEË=
REFERENCE_TYPE
)

	)

545 
	#FUNCTION_POINTER_TYPE_P
(
TYPE
) \

546 (
	`POINTER_TYPE_P
 (
TYPE
Ë&& 
	`TREE_CODE
 (
	`TREE_TYPE
 (TYPE)Ë=
FUNCTION_TYPE
)

	)

549 
	#COMPLETE_TYPE_P
(
NODE
Ë(
	`TYPE_SIZE
 (NODEË!
NULL_TREE
)

	)

552 
	#VOID_TYPE_P
(
NODE
Ë(
	`TREE_CODE
 (NODEË=
VOID_TYPE
)

	)

555 
	#COMPLETE_OR_VOID_TYPE_P
(
NODE
) \

556 (
	`COMPLETE_TYPE_P
 (
NODE
Ë|| 
	`VOID_TYPE_P
 (NODE))

	)

559 
	#COMPLETE_OR_UNBOUND_ARRAY_TYPE_P
(
NODE
) \

560 (
	`COMPLETE_TYPE_P
 (
	`TREE_CODE
 (
NODE
Ë=
ARRAY_TYPE
 ? 
	`TREE_TYPE
 (NODEË: (NODE)))

	)

579 
	#TREE_ADDRESSABLE
(
NODE
Ë((NODE)->
ba£
.
addªsßbÀ_Êag
)

	)

584 
	#CALL_EXPR_TAILCALL
(
NODE
) \

585 (
	`CALL_EXPR_CHECK
 (
NODE
)->
ba£
.
addªsßbÀ_Êag
)

	)

589 
	#CASE_LOW_SEEN
(
NODE
) \

590 (
	`CASE_LABEL_EXPR_CHECK
 (
NODE
)->
ba£
.
addªsßbÀ_Êag
)

	)

592 
	#PREDICT_EXPR_OUTCOME
(
NODE
) \

593 ((
¥edi˘i⁄
Ë(
	`PREDICT_EXPR_CHECK
 (
NODE
)->
ba£
.
addªsßbÀ_Êag
))

	)

594 
	#SET_PREDICT_EXPR_OUTCOME
(
NODE
, 
OUTCOME
) \

595 (
	`PREDICT_EXPR_CHECK
 (
NODE
)->
ba£
.
addªsßbÀ_Êag
 = (Ë
OUTCOME
)

	)

596 
	#PREDICT_EXPR_PREDICTOR
(
NODE
) \

597 ((
br_¥edi˘‹
)
	`åì_to_shwi
 (
	`TREE_OPERAND
 (
	`PREDICT_EXPR_CHECK
 (
NODE
), 0)))

	)

602 
	#TREE_STATIC
(
NODE
Ë((NODE)->
ba£
.
°©ic_Êag
)

	)

605 
	#TREE_NO_TRAMPOLINE
(
NODE
Ë(
	`ADDR_EXPR_CHECK
 (NODE)->
ba£
.
°©ic_Êag
)

	)

610 
	#CLEANUP_EH_ONLY
(
NODE
Ë((NODE)->
ba£
.
°©ic_Êag
)

	)

614 
	#TRY_CATCH_IS_CLEANUP
(
NODE
) \

615 (
	`TRY_CATCH_EXPR_CHECK
 (
NODE
)->
ba£
.
°©ic_Êag
)

	)

619 
	#CASE_HIGH_SEEN
(
NODE
) \

620 (
	`CASE_LABEL_EXPR_CHECK
 (
NODE
)->
ba£
.
°©ic_Êag
)

	)

623 
	#ENUM_IS_SCOPED
(
NODE
Ë(
	`ENUMERAL_TYPE_CHECK
 (NODE)->
ba£
.
°©ic_Êag
)

	)

626 
	#ENUM_IS_OPAQUE
(
NODE
Ë(
	`ENUMERAL_TYPE_CHECK
 (NODE)->
ba£
.
¥iv©e_Êag
)

	)

633 
	#TREE_NO_WARNING
(
NODE
Ë((NODE)->
ba£
.
now¨nög_Êag
)

	)

636 
	#TYPE_ARTIFICIAL
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
now¨nög_Êag
)

	)

640 
	#TREE_SYMBOL_REFERENCED
(
NODE
) \

641 (
	`IDENTIFIER_NODE_CHECK
 (
NODE
)->
ba£
.
°©ic_Êag
)

	)

645 
	#TYPE_REF_CAN_ALIAS_ALL
(
NODE
) \

646 (
	`PTR_OR_REF_CHECK
 (
NODE
)->
ba£
.
°©ic_Êag
)

	)

651 
	#TREE_OVERFLOW
(
NODE
Ë(
	`CST_CHECK
 (NODE)->
ba£
.
public_Êag
)

	)

655 
	#TREE_OVERFLOW_P
(
EXPR
) \

656 (
	`CONSTANT_CLASS_P
 (
EXPR
Ë&& 
	`TREE_OVERFLOW
 (EXPR))

	)

663 
	#TREE_PUBLIC
(
NODE
Ë((NODE)->
ba£
.
public_Êag
)

	)

667 
	#TYPE_CACHED_VALUES_P
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
public_Êag
)

	)

671 
	#SAVE_EXPR_RESOLVED_P
(
NODE
) \

672 (
	`SAVE_EXPR_CHECK
 (
NODE
)->
ba£
.
public_Êag
)

	)

676 
	#CALL_EXPR_VA_ARG_PACK
(
NODE
) \

677 (
	`CALL_EXPR_CHECK
 (
NODE
)->
ba£
.
public_Êag
)

	)

684 
	#TREE_SIDE_EFFECTS
(
NODE
) \

685 (
	`NON_TYPE_CHECK
 (
NODE
)->
ba£
.
side_ef„˘s_Êag
)

	)

690 
	#FORCED_LABEL
(
NODE
Ë(
	`LABEL_DECL_CHECK
 (NODE)->
ba£
.
side_ef„˘s_Êag
)

	)

705 
	#TREE_THIS_VOLATILE
(
NODE
Ë((NODE)->
ba£
.
vﬁ©ûe_Êag
)

	)

716 
	#TREE_THIS_NOTRAP
(
NODE
) \

717 (
	`TREE_CHECK5
 (
NODE
, 
INDIRECT_REF
, 
MEM_REF
, 
TARGET_MEM_REF
, 
ARRAY_REF
, \

718 
ARRAY_RANGE_REF
)->
ba£
.
nŸhrow_Êag
)

	)

724 
	#TREE_READONLY
(
NODE
Ë(
	`NON_TYPE_CHECK
 (NODE)->
ba£
.
ªad⁄ly_Êag
)

	)

728 
	#TREE_CONSTANT
(
NODE
Ë(
	`NON_TYPE_CHECK
 (NODE)->
ba£
.
c⁄°™t_Êag
)

	)

731 
	#TYPE_SIZES_GIMPLIFIED
(
NODE
) \

732 (
	`TYPE_CHECK
 (
NODE
)->
ba£
.
c⁄°™t_Êag
)

	)

735 
	#DECL_UNSIGNED
(
NODE
) \

736 (
	`DECL_COMMON_CHECK
 (
NODE
)->
ba£
.
u
.
bôs
.
unsig√d_Êag
)

	)

739 
	#TYPE_UNSIGNED
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
unsig√d_Êag
)

	)

743 
	#TYPE_OVERFLOW_WRAPS
(
TYPE
) \

744 (
	`TYPE_UNSIGNED
 (
TYPE
Ë|| 
Êag_wøpv
)

	)

754 
	#TYPE_OVERFLOW_UNDEFINED
(
TYPE
) \

755 (!
	`TYPE_UNSIGNED
 (
TYPE
Ë&& !
Êag_wøpv
 && !
Êag_å≠v
 && 
Êag_°ri˘_ovîÊow
)

	)

759 
	#TYPE_OVERFLOW_TRAPS
(
TYPE
) \

760 (!
	`TYPE_UNSIGNED
 (
TYPE
Ë&& 
Êag_å≠v
)

	)

763 
	#POINTER_TYPE_OVERFLOW_UNDEFINED
 (
Êag_°ri˘_ovîÊow
)

	)

774 
	#TREE_ASM_WRITTEN
(
NODE
Ë((NODE)->
ba£
.
asm_wrôãn_Êag
)

	)

781 
	#TREE_USED
(
NODE
Ë((NODE)->
ba£
.
u£d_Êag
)

	)

787 
	#TREE_NOTHROW
(
NODE
Ë((NODE)->
ba£
.
nŸhrow_Êag
)

	)

791 
	#CALL_EXPR_RETURN_SLOT_OPT
(
NODE
) \

792 (
	`CALL_EXPR_CHECK
 (
NODE
)->
ba£
.
¥iv©e_Êag
)

	)

795 
	#CILK_SPAWN_FN
(
NODE
Ë
	`TREE_OPERAND
 (
	`CILK_SPAWN_STMT_CHECK
 (NODE), 0)

	)

800 
	#DECL_BY_REFERENCE
(
NODE
) \

801 (
	`TREE_CHECK3
 (
NODE
, 
VAR_DECL
, 
PARM_DECL
, \

802 
RESULT_DECL
)->
de˛_comm⁄
.
de˛_by_ª„ªn˚_Êag
)

	)

806 
	#DECL_READ_P
(
NODE
) \

807 (
	`TREE_CHECK2
 (
NODE
, 
VAR_DECL
, 
PARM_DECL
)->
de˛_comm⁄
.
de˛_ªad_Êag
)

	)

811 
	#DECL_NONSHAREABLE
(
NODE
) \

812 (
	`TREE_CHECK2
 (
NODE
, 
VAR_DECL
, \

813 
RESULT_DECL
)->
de˛_comm⁄
.
de˛_n⁄sh¨óbÀ_Êag
)

	)

817 
	#CALL_FROM_THUNK_P
(
NODE
Ë(
	`CALL_EXPR_CHECK
 (NODE)->
ba£
.
¥Ÿe˘ed_Êag
)

	)

821 
	#CALL_ALLOCA_FOR_VAR_P
(
NODE
) \

822 (
	`CALL_EXPR_CHECK
 (
NODE
)->
ba£
.
¥Ÿe˘ed_Êag
)

	)

833 
	#TYPE_ALIGN_OK
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
nŸhrow_Êag
)

	)

836 
	#TREE_PRIVATE
(
NODE
Ë((NODE)->
ba£
.
¥iv©e_Êag
)

	)

838 
	#TREE_PROTECTED
(
NODE
Ë((NODE)->
ba£
.
¥Ÿe˘ed_Êag
)

	)

841 
	#TYPE_REF_IS_RVALUE
(
NODE
) \

842 (
	`REFERENCE_TYPE_CHECK
 (
NODE
)->
ba£
.
¥iv©e_Êag
)

	)

846 
	#TREE_DEPRECATED
(
NODE
) \

847 ((
NODE
)->
ba£
.
dïªˇãd_Êag
)

	)

851 
	#IDENTIFIER_TRANSPARENT_ALIAS
(
NODE
) \

852 (
	`IDENTIFIER_NODE_CHECK
 (
NODE
)->
ba£
.
dïªˇãd_Êag
)

	)

855 
	#TYPE_SATURATING
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
ßtuøtög_Êag
)

	)

858 
	#TREE_LANG_FLAG_0
(
NODE
) \

859 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_0
)

	)

860 
	#TREE_LANG_FLAG_1
(
NODE
) \

861 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_1
)

	)

862 
	#TREE_LANG_FLAG_2
(
NODE
) \

863 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_2
)

	)

864 
	#TREE_LANG_FLAG_3
(
NODE
) \

865 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_3
)

	)

866 
	#TREE_LANG_FLAG_4
(
NODE
) \

867 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_4
)

	)

868 
	#TREE_LANG_FLAG_5
(
NODE
) \

869 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_5
)

	)

870 
	#TREE_LANG_FLAG_6
(
NODE
) \

871 (
	`TREE_NOT_CHECK2
 (
NODE
, 
TREE_VEC
, 
SSA_NAME
)->
ba£
.
u
.
bôs
.
œng_Êag_6
)

	)

879 
	#TREE_INT_CST
(
NODE
Ë(
	`INTEGER_CST_CHECK
 (NODE)->
öt_c°
.öt_c°)

	)

880 
	#TREE_INT_CST_LOW
(
NODE
Ë(
	`TREE_INT_CST
 (NODE).
low
)

	)

881 
	#TREE_INT_CST_HIGH
(
NODE
Ë(
	`TREE_INT_CST
 (NODE).
high
)

	)

883 
	#INT_CST_LT
(
A
, 
B
) \

884 (
	`TREE_INT_CST_HIGH
 (
A
Ë< TREE_INT_CST_HIGH (
B
) \

885 || (
	`TREE_INT_CST_HIGH
 (
A
Ë=TREE_INT_CST_HIGH (
B
) \

886 && 
	`TREE_INT_CST_LOW
 (
A
Ë< TREE_INT_CST_LOW (
B
)))

	)

888 
	#INT_CST_LT_UNSIGNED
(
A
, 
B
) \

889 (((
HOST_WIDE_INT
Ë
	`TREE_INT_CST_HIGH
 (
A
) \

890 < (
HOST_WIDE_INT
Ë
	`TREE_INT_CST_HIGH
 (
B
)) \

891 || (((
HOST_WIDE_INT
Ë
	`TREE_INT_CST_HIGH
 (
A
) \

892 =(
HOST_WIDE_INT
Ë
	`TREE_INT_CST_HIGH
 (
B
)) \

893 && 
	`TREE_INT_CST_LOW
 (
A
Ë< TREE_INT_CST_LOW (
B
)))

	)

895 
	#TREE_REAL_CST_PTR
(
NODE
Ë(
	`REAL_CST_CHECK
 (NODE)->
ªÆ_c°
.
ªÆ_c°_±r
)

	)

896 
	#TREE_REAL_CST
(
NODE
Ë(*
	`TREE_REAL_CST_PTR
 (NODE))

	)

898 
	#TREE_FIXED_CST_PTR
(
NODE
) \

899 (
	`FIXED_CST_CHECK
 (
NODE
)->
fixed_c°
.
fixed_c°_±r
)

	)

900 
	#TREE_FIXED_CST
(
NODE
Ë(*
	`TREE_FIXED_CST_PTR
 (NODE))

	)

904 
	#TREE_STRING_LENGTH
(
NODE
Ë(
	`STRING_CST_CHECK
 (NODE)->
°rög
.
Àngth
)

	)

905 
	#TREE_STRING_POINTER
(
NODE
) \

906 ((c⁄° *)(
	`STRING_CST_CHECK
 (
NODE
)->
°rög
.
°r
))

	)

909 
	#TREE_REALPART
(
NODE
Ë(
	`COMPLEX_CST_CHECK
 (NODE)->
com∂ex
.
ªÆ
)

	)

910 
	#TREE_IMAGPART
(
NODE
Ë(
	`COMPLEX_CST_CHECK
 (NODE)->
com∂ex
.
imag
)

	)

913 
	#VECTOR_CST_NELTS
(
NODE
Ë(
	`TYPE_VECTOR_SUBPARTS
 (
	`TREE_TYPE
 (NODE)))

	)

914 
	#VECTOR_CST_ELTS
(
NODE
Ë(
	`VECTOR_CST_CHECK
 (NODE)->
ve˘‹
.
ñts
)

	)

915 
	#VECTOR_CST_ELT
(
NODE
,
IDX
Ë(
	`VECTOR_CST_CHECK
 (NODE)->
ve˘‹
.
ñts
[IDX])

	)

919 
	#IDENTIFIER_LENGTH
(
NODE
) \

920 (
	`IDENTIFIER_NODE_CHECK
 (
NODE
)->
idítifõr
.
id
.
Àn
)

	)

921 
	#IDENTIFIER_POINTER
(
NODE
) \

922 ((c⁄° *Ë
	`IDENTIFIER_NODE_CHECK
 (
NODE
)->
idítifõr
.
id
.
°r
)

	)

923 
	#IDENTIFIER_HASH_VALUE
(
NODE
) \

924 (
	`IDENTIFIER_NODE_CHECK
 (
NODE
)->
idítifõr
.
id
.
hash_vÆue
)

	)

929 
	#HT_IDENT_TO_GCC_IDENT
(
NODE
) \

930 ((
åì
Ë((*Ë(
NODE
Ë-  (
åì_comm⁄
)))

	)

931 
	#GCC_IDENT_TO_HT_IDENT
(
NODE
Ë(&((
åì_idítifõr
 *Ë(NODE))->
id
)

	)

934 
	#TREE_PURPOSE
(
NODE
Ë(
	`TREE_LIST_CHECK
 (NODE)->
li°
.
puΩo£
)

	)

935 
	#TREE_VALUE
(
NODE
Ë(
	`TREE_LIST_CHECK
 (NODE)->
li°
.
vÆue
)

	)

938 
	#TREE_VEC_LENGTH
(
NODE
Ë(
	`TREE_VEC_CHECK
 (NODE)->
ba£
.
u
.
Àngth
)

	)

939 
	#TREE_VEC_END
(
NODE
) \

940 ((Ë
	`TREE_VEC_CHECK
 (
NODE
), &((NODE)->
vec
.
a
[(NODE)->vec.
ba£
.
u
.
Àngth
]))

	)

942 
	#TREE_VEC_ELT
(
NODE
,
I
Ë
	`TREE_VEC_ELT_CHECK
 (NODE, I)

	)

945 
	#CONSTRUCTOR_ELTS
(
NODE
Ë(
	`CONSTRUCTOR_CHECK
 (NODE)->
c⁄°ru˘‹
.
ñts
)

	)

946 
	#CONSTRUCTOR_ELT
(
NODE
,
IDX
) \

947 (&(*
	`CONSTRUCTOR_ELTS
 (
NODE
))[
IDX
])

	)

948 
	#CONSTRUCTOR_NELTS
(
NODE
) \

949 (
	`vec_ß„_Àngth
 (
	`CONSTRUCTOR_ELTS
 (
NODE
)))

	)

950 
	#CONSTRUCTOR_NO_CLEARING
(
NODE
) \

951 (
	`CONSTRUCTOR_CHECK
 (
NODE
)->
ba£
.
public_Êag
)

	)

956 
	#FOR_EACH_CONSTRUCTOR_VALUE
(
V
, 
IX
, 
VAL
) \

957 
IX
 = 0; (IX >
	`vec_ß„_Àngth
 (
V
)) \

958 ? 
Ál£
 \

959 : ((
VAL
 = (*(
V
))[
IX
].
vÆue
), \

960 
åue
); \

961 (
IX
)++)

	)

966 
	#FOR_EACH_CONSTRUCTOR_ELT
(
V
, 
IX
, 
INDEX
, 
VAL
) \

967 
IX
 = 0; (IX >
	`vec_ß„_Àngth
 (
V
)) \

968 ? 
Ál£
 \

969 : (((Ë(
VAL
 = (*
V
)[
IX
].
vÆue
)), \

970 (
INDEX
 = (*
V
)[
IX
].
ödex
), \

971 
åue
); \

972 (
IX
)++)

	)

975 
	#CONSTRUCTOR_APPEND_ELT
(
V
, 
INDEX
, 
VALUE
) \

977 
c⁄°ru˘‹_ñt
 
_˚___
 = {
INDEX
, 
VALUE
}; \

978 
	`vec_ß„_push
 ((
V
), 
_˚___
); \

979 
	}
} 0)

	)

983 
	#CONSTRUCTOR_BITFIELD_P
(
NODE
) \

984 (
	`DECL_BIT_FIELD
 (
	`FIELD_DECL_CHECK
 (
NODE
)Ë&& 
	`DECL_MODE
 (NODEË!
BLKmode
)

	)

991 
	#TREE_CLOBBER_P
(
NODE
) \

992 (
	`TREE_CODE
 (
NODE
Ë=
CONSTRUCTOR
 && 
	`TREE_THIS_VOLATILE
 (NODE))

	)

997 
	#IS_EMPTY_STMT
(
NODE
Ë(
	`TREE_CODE
 (NODEË=
NOP_EXPR
 \

998 && 
	`VOID_TYPE_P
 (
	`TREE_TYPE
 (
NODE
)) \

999 && 
	`öãgî_zî›
 (
	`TREE_OPERAND
 (
NODE
, 0)))

	)

1002 
	#TREE_OPERAND_LENGTH
(
NODE
Ë
	`åì_›î™d_Àngth
 (NODE)

	)

1003 
	#TREE_OPERAND
(
NODE
, 
I
Ë
	`TREE_OPERAND_CHECK
 (NODE, I)

	)

1010 
	#VL_EXP_OPERAND_LENGTH
(
NODE
) \

1011 (()
	`TREE_INT_CST_LOW
 (
	`VL_EXP_CHECK
 (
NODE
)->
exp
.
›î™ds
[0]))

	)

1014 
	#MAY_HAVE_DEBUG_STMTS
 (
Êag_v¨_åackög_assignmíts
)

	)

1017 
	#LOOP_EXPR_BODY
(
NODE
Ë
	`TREE_OPERAND_CHECK_CODE
 (NODE, 
LOOP_EXPR
, 0)

	)

1022 
	#EXPR_LOCATION
(
NODE
) \

1023 (
	`CAN_HAVE_LOCATION_P
 ((
NODE
)Ë? (NODE)->
exp
.
locus
 : 
UNKNOWN_LOCATION
)

	)

1024 
	#SET_EXPR_LOCATION
(
NODE
, 
LOCUS
Ë
	`EXPR_CHECK
 ((NODE))->
exp
.
locus
 = (LOCUS)

	)

1025 
	#EXPR_HAS_LOCATION
(
NODE
Ë(
	`LOCATION_LOCUS
 (
	`EXPR_LOCATION
 (NODE)) \

1026 !
UNKNOWN_LOCATION
)

	)

1029 
	#EXPR_LOC_OR_LOC
(
NODE
, 
LOCUS
Ë(
	`EXPR_HAS_LOCATION
 (NODE) \

1030 ? (
NODE
)->
exp
.
locus
 : (
LOCUS
))

	)

1031 
	#EXPR_FILENAME
(
NODE
Ë
	`LOCATION_FILE
 (
	`EXPR_CHECK
 ((NODE))->
exp
.
locus
)

	)

1032 
	#EXPR_LINENO
(
NODE
Ë
	`LOCATION_LINE
 (
	`EXPR_CHECK
 (NODE)->
exp
.
locus
)

	)

1036 
	#CAN_HAVE_LOCATION_P
(
NODE
Ë((NODEË&& 
	`EXPR_P
 (NODE))

	)

1038 
¥Ÿe˘ed_£t_ex¥_loˇti⁄
 (
åì
, 
loˇti⁄_t
);

1041 
	#TARGET_EXPR_SLOT
(
NODE
Ë
	`TREE_OPERAND_CHECK_CODE
 (NODE, 
TARGET_EXPR
, 0)

	)

1042 
	#TARGET_EXPR_INITIAL
(
NODE
Ë
	`TREE_OPERAND_CHECK_CODE
 (NODE, 
TARGET_EXPR
, 1)

	)

1043 
	#TARGET_EXPR_CLEANUP
(
NODE
Ë
	`TREE_OPERAND_CHECK_CODE
 (NODE, 
TARGET_EXPR
, 2)

	)

1047 
	#DECL_EXPR_DECL
(
NODE
Ë
	`TREE_OPERAND
 (
	`DECL_EXPR_CHECK
 (NODE), 0)

	)

1049 
	#EXIT_EXPR_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`EXIT_EXPR_CHECK
 (NODE), 0)

	)

1052 
	#COMPOUND_LITERAL_EXPR_DECL_EXPR
(
NODE
) \

1053 
	`TREE_OPERAND
 (
	`COMPOUND_LITERAL_EXPR_CHECK
 (
NODE
), 0)

	)

1054 
	#COMPOUND_LITERAL_EXPR_DECL
(
NODE
) \

1055 
	`DECL_EXPR_DECL
 (
	`COMPOUND_LITERAL_EXPR_DECL_EXPR
 (
NODE
))

	)

1060 
	#SWITCH_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_EXPR_CHECK
 (NODE), 0)

	)

1061 
	#SWITCH_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_EXPR_CHECK
 (NODE), 1)

	)

1062 
	#SWITCH_LABELS
(
NODE
Ë
	`TREE_OPERAND
 (
	`SWITCH_EXPR_CHECK
 (NODE), 2)

	)

1066 
	#CASE_LOW
(
NODE
Ë
	`TREE_OPERAND
 (
	`CASE_LABEL_EXPR_CHECK
 (NODE), 0)

	)

1067 
	#CASE_HIGH
(
NODE
Ë
	`TREE_OPERAND
 (
	`CASE_LABEL_EXPR_CHECK
 (NODE), 1)

	)

1068 
	#CASE_LABEL
(
NODE
Ë
	`TREE_OPERAND
 (
	`CASE_LABEL_EXPR_CHECK
 (NODE), 2)

	)

1069 
	#CASE_CHAIN
(
NODE
Ë
	`TREE_OPERAND
 (
	`CASE_LABEL_EXPR_CHECK
 (NODE), 3)

	)

1073 
	#TMR_BASE
(
NODE
Ë(
	`TREE_OPERAND
 (
	`TARGET_MEM_REF_CHECK
 (NODE), 0))

	)

1074 
	#TMR_OFFSET
(
NODE
Ë(
	`TREE_OPERAND
 (
	`TARGET_MEM_REF_CHECK
 (NODE), 1))

	)

1075 
	#TMR_INDEX
(
NODE
Ë(
	`TREE_OPERAND
 (
	`TARGET_MEM_REF_CHECK
 (NODE), 2))

	)

1076 
	#TMR_STEP
(
NODE
Ë(
	`TREE_OPERAND
 (
	`TARGET_MEM_REF_CHECK
 (NODE), 3))

	)

1077 
	#TMR_INDEX2
(
NODE
Ë(
	`TREE_OPERAND
 (
	`TARGET_MEM_REF_CHECK
 (NODE), 4))

	)

1080 
	#BIND_EXPR_VARS
(
NODE
Ë(
	`TREE_OPERAND
 (
	`BIND_EXPR_CHECK
 (NODE), 0))

	)

1081 
	#BIND_EXPR_BODY
(
NODE
Ë(
	`TREE_OPERAND
 (
	`BIND_EXPR_CHECK
 (NODE), 1))

	)

1082 
	#BIND_EXPR_BLOCK
(
NODE
Ë(
	`TREE_OPERAND
 (
	`BIND_EXPR_CHECK
 (NODE), 2))

	)

1086 
	#GOTO_DESTINATION
(
NODE
Ë
	`TREE_OPERAND
 ((NODE), 0)

	)

1092 
	#ASM_STRING
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASM_EXPR_CHECK
 (NODE), 0)

	)

1093 
	#ASM_OUTPUTS
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASM_EXPR_CHECK
 (NODE), 1)

	)

1094 
	#ASM_INPUTS
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASM_EXPR_CHECK
 (NODE), 2)

	)

1095 
	#ASM_CLOBBERS
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASM_EXPR_CHECK
 (NODE), 3)

	)

1096 
	#ASM_LABELS
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASM_EXPR_CHECK
 (NODE), 4)

	)

1099 
	#ASM_INPUT_P
(
NODE
Ë(
	`ASM_EXPR_CHECK
 (NODE)->
ba£
.
°©ic_Êag
)

	)

1100 
	#ASM_VOLATILE_P
(
NODE
Ë(
	`ASM_EXPR_CHECK
 (NODE)->
ba£
.
public_Êag
)

	)

1103 
	#COND_EXPR_COND
(
NODE
Ë(
	`TREE_OPERAND
 (
	`COND_EXPR_CHECK
 (NODE), 0))

	)

1104 
	#COND_EXPR_THEN
(
NODE
Ë(
	`TREE_OPERAND
 (
	`COND_EXPR_CHECK
 (NODE), 1))

	)

1105 
	#COND_EXPR_ELSE
(
NODE
Ë(
	`TREE_OPERAND
 (
	`COND_EXPR_CHECK
 (NODE), 2))

	)

1108 
	#CHREC_VAR
(
NODE
Ë
	`TREE_OPERAND
 (
	`POLYNOMIAL_CHREC_CHECK
 (NODE), 0)

	)

1109 
	#CHREC_LEFT
(
NODE
Ë
	`TREE_OPERAND
 (
	`POLYNOMIAL_CHREC_CHECK
 (NODE), 1)

	)

1110 
	#CHREC_RIGHT
(
NODE
Ë
	`TREE_OPERAND
 (
	`POLYNOMIAL_CHREC_CHECK
 (NODE), 2)

	)

1111 
	#CHREC_VARIABLE
(
NODE
Ë
	`TREE_INT_CST_LOW
 (
	`CHREC_VAR
 (NODE))

	)

1115 
	#LABEL_EXPR_LABEL
(
NODE
Ë
	`TREE_OPERAND
 (
	`LABEL_EXPR_CHECK
 (NODE), 0)

	)

1118 
	#CATCH_TYPES
(
NODE
Ë
	`TREE_OPERAND
 (
	`CATCH_EXPR_CHECK
 (NODE), 0)

	)

1119 
	#CATCH_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`CATCH_EXPR_CHECK
 (NODE), 1)

	)

1122 
	#EH_FILTER_TYPES
(
NODE
Ë
	`TREE_OPERAND
 (
	`EH_FILTER_EXPR_CHECK
 (NODE), 0)

	)

1123 
	#EH_FILTER_FAILURE
(
NODE
Ë
	`TREE_OPERAND
 (
	`EH_FILTER_EXPR_CHECK
 (NODE), 1)

	)

1126 
	#OBJ_TYPE_REF_EXPR
(
NODE
Ë
	`TREE_OPERAND
 (
	`OBJ_TYPE_REF_CHECK
 (NODE), 0)

	)

1127 
	#OBJ_TYPE_REF_OBJECT
(
NODE
Ë
	`TREE_OPERAND
 (
	`OBJ_TYPE_REF_CHECK
 (NODE), 1)

	)

1128 
	#OBJ_TYPE_REF_TOKEN
(
NODE
Ë
	`TREE_OPERAND
 (
	`OBJ_TYPE_REF_CHECK
 (NODE), 2)

	)

1131 
	#ASSERT_EXPR_VAR
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASSERT_EXPR_CHECK
 (NODE), 0)

	)

1132 
	#ASSERT_EXPR_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`ASSERT_EXPR_CHECK
 (NODE), 1)

	)

1136 
	#CALL_EXPR_FN
(
NODE
Ë
	`TREE_OPERAND
 (
	`CALL_EXPR_CHECK
 (NODE), 1)

	)

1137 
	#CALL_EXPR_STATIC_CHAIN
(
NODE
Ë
	`TREE_OPERAND
 (
	`CALL_EXPR_CHECK
 (NODE), 2)

	)

1138 
	#CALL_EXPR_ARG
(
NODE
, 
I
Ë
	`TREE_OPERAND
 (
	`CALL_EXPR_CHECK
 (NODE), (IË+ 3)

	)

1139 
	#ˇŒ_ex¥_«rgs
(
NODE
Ë(
	`VL_EXP_OPERAND_LENGTH
 (NODEË- 3)

	)

1147 
	#CALL_EXPR_ARGP
(
NODE
) \

1148 (&(
	`TREE_OPERAND
 (
	`CALL_EXPR_CHECK
 (
NODE
), 0)Ë+ 3)

	)

1151 
	#TRANSACTION_EXPR_BODY
(
NODE
) \

1152 
	`TREE_OPERAND
 (
	`TRANSACTION_EXPR_CHECK
 (
NODE
), 0)

	)

1153 
	#TRANSACTION_EXPR_OUTER
(
NODE
) \

1154 (
	`TRANSACTION_EXPR_CHECK
 (
NODE
)->
ba£
.
°©ic_Êag
)

	)

1155 
	#TRANSACTION_EXPR_RELAXED
(
NODE
) \

1156 (
	`TRANSACTION_EXPR_CHECK
 (
NODE
)->
ba£
.
public_Êag
)

	)

1160 
	#OMP_BODY
(
NODE
) \

1161 
	`TREE_OPERAND
 (
	`TREE_RANGE_CHECK
 (
NODE
, 
OMP_PARALLEL
, 
OMP_CRITICAL
), 0)

	)

1162 
	#OMP_CLAUSES
(
NODE
) \

1163 
	`TREE_OPERAND
 (
	`TREE_RANGE_CHECK
 (
NODE
, 
OMP_PARALLEL
, 
OMP_SINGLE
), 1)

	)

1165 
	#OMP_PARALLEL_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_PARALLEL_CHECK
 (NODE), 0)

	)

1166 
	#OMP_PARALLEL_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_PARALLEL_CHECK
 (NODE), 1)

	)

1168 
	#OMP_TASK_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TASK_CHECK
 (NODE), 0)

	)

1169 
	#OMP_TASK_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TASK_CHECK
 (NODE), 1)

	)

1171 
	#OMP_TASKREG_CHECK
(
NODE
Ë
	`TREE_RANGE_CHECK
 (NODE, 
OMP_PARALLEL
, 
OMP_TASK
)

	)

1172 
	#OMP_TASKREG_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TASKREG_CHECK
 (NODE), 0)

	)

1173 
	#OMP_TASKREG_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TASKREG_CHECK
 (NODE), 1)

	)

1175 
	#OMP_LOOP_CHECK
(
NODE
Ë
	`TREE_RANGE_CHECK
 (NODE, 
OMP_FOR
, 
OMP_DISTRIBUTE
)

	)

1176 
	#OMP_FOR_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_LOOP_CHECK
 (NODE), 0)

	)

1177 
	#OMP_FOR_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_LOOP_CHECK
 (NODE), 1)

	)

1178 
	#OMP_FOR_INIT
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_LOOP_CHECK
 (NODE), 2)

	)

1179 
	#OMP_FOR_COND
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_LOOP_CHECK
 (NODE), 3)

	)

1180 
	#OMP_FOR_INCR
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_LOOP_CHECK
 (NODE), 4)

	)

1181 
	#OMP_FOR_PRE_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_LOOP_CHECK
 (NODE), 5)

	)

1183 
	#OMP_SECTIONS_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_SECTIONS_CHECK
 (NODE), 0)

	)

1184 
	#OMP_SECTIONS_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_SECTIONS_CHECK
 (NODE), 1)

	)

1186 
	#OMP_SECTION_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_SECTION_CHECK
 (NODE), 0)

	)

1188 
	#OMP_SINGLE_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_SINGLE_CHECK
 (NODE), 0)

	)

1189 
	#OMP_SINGLE_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_SINGLE_CHECK
 (NODE), 1)

	)

1191 
	#OMP_MASTER_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_MASTER_CHECK
 (NODE), 0)

	)

1193 
	#OMP_TASKGROUP_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TASKGROUP_CHECK
 (NODE), 0)

	)

1195 
	#OMP_ORDERED_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_ORDERED_CHECK
 (NODE), 0)

	)

1197 
	#OMP_CRITICAL_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_CRITICAL_CHECK
 (NODE), 0)

	)

1198 
	#OMP_CRITICAL_NAME
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_CRITICAL_CHECK
 (NODE), 1)

	)

1200 
	#OMP_TEAMS_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TEAMS_CHECK
 (NODE), 0)

	)

1201 
	#OMP_TEAMS_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TEAMS_CHECK
 (NODE), 1)

	)

1203 
	#OMP_TARGET_DATA_BODY
(
NODE
) \

1204 
	`TREE_OPERAND
 (
	`OMP_TARGET_DATA_CHECK
 (
NODE
), 0)

	)

1205 
	#OMP_TARGET_DATA_CLAUSES
(
NODE
)\

1206 
	`TREE_OPERAND
 (
	`OMP_TARGET_DATA_CHECK
 (
NODE
), 1)

	)

1208 
	#OMP_TARGET_BODY
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TARGET_CHECK
 (NODE), 0)

	)

1209 
	#OMP_TARGET_CLAUSES
(
NODE
Ë
	`TREE_OPERAND
 (
	`OMP_TARGET_CHECK
 (NODE), 1)

	)

1211 
	#OMP_TARGET_UPDATE_CLAUSES
(
NODE
)\

1212 
	`TREE_OPERAND
 (
	`OMP_TARGET_UPDATE_CHECK
 (
NODE
), 0)

	)

1214 
	#OMP_CLAUSE_SIZE
(
NODE
) \

1215 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_RANGE_CHECK
 (
	`OMP_CLAUSE_CHECK
 (
NODE
), \

1216 
OMP_CLAUSE_FROM
, \

1217 
OMP_CLAUSE_MAP
), 1)

	)

1219 
	#OMP_CLAUSE_CHAIN
(
NODE
Ë
	`TREE_CHAIN
 (
	`OMP_CLAUSE_CHECK
 (NODE))

	)

1220 
	#OMP_CLAUSE_DECL
(
NODE
) \

1221 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_RANGE_CHECK
 (
	`OMP_CLAUSE_CHECK
 (
NODE
), \

1222 
OMP_CLAUSE_PRIVATE
, \

1223 
OMP_CLAUSE__LOOPTEMP_
), 0)

	)

1224 
	#OMP_CLAUSE_HAS_LOCATION
(
NODE
) \

1225 (
	`LOCATION_LOCUS
 ((
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
locus
) \

1226 !
UNKNOWN_LOCATION
)

	)

1227 
	#OMP_CLAUSE_LOCATION
(
NODE
Ë(
	`OMP_CLAUSE_CHECK
 (NODE))->
omp_˛au£
.
locus


	)

1231 
	#OMP_SECTION_LAST
(
NODE
) \

1232 (
	`OMP_SECTION_CHECK
 (
NODE
)->
ba£
.
¥iv©e_Êag
)

	)

1236 
	#OMP_PARALLEL_COMBINED
(
NODE
) \

1237 (
	`OMP_PARALLEL_CHECK
 (
NODE
)->
ba£
.
¥iv©e_Êag
)

	)

1241 
	#OMP_ATOMIC_SEQ_CST
(
NODE
) \

1242 (
	`TREE_RANGE_CHECK
 (
NODE
, 
OMP_ATOMIC
, \

1243 
OMP_ATOMIC_CAPTURE_NEW
)->
ba£
.
¥iv©e_Êag
)

	)

1248 
	#OMP_CLAUSE_PRIVATE_DEBUG
(
NODE
) \

1249 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_PRIVATE
)->
ba£
.
public_Êag
)

	)

1253 
	#OMP_CLAUSE_PRIVATE_OUTER_REF
(
NODE
) \

1254 
	`TREE_PRIVATE
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_PRIVATE
))

	)

1258 
	#OMP_CLAUSE_LASTPRIVATE_FIRSTPRIVATE
(
NODE
) \

1259 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LASTPRIVATE
)->
ba£
.
public_Êag
)

	)

1260 
	#OMP_CLAUSE_LASTPRIVATE_STMT
(
NODE
) \

1261 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, \

1262 
OMP_CLAUSE_LASTPRIVATE
),\

1263 1)

	)

1264 
	#OMP_CLAUSE_LASTPRIVATE_GIMPLE_SEQ
(
NODE
) \

1265 (
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
gim∂e_ªdu˘i⁄_öô


	)

1267 
	#OMP_CLAUSE_FINAL_EXPR
(
NODE
) \

1268 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_FINAL
), 0)

	)

1269 
	#OMP_CLAUSE_IF_EXPR
(
NODE
) \

1270 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_IF
), 0)

	)

1271 
	#OMP_CLAUSE_NUM_THREADS_EXPR
(
NODE
) \

1272 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_NUM_THREADS
),0)

	)

1273 
	#OMP_CLAUSE_SCHEDULE_CHUNK_EXPR
(
NODE
) \

1274 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_SCHEDULE
), 0)

	)

1276 
	#OMP_CLAUSE_DEPEND_KIND
(
NODE
) \

1277 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_DEPEND
)->
omp_˛au£
.
subcode
.
dïíd_köd
)

	)

1279 
	#OMP_CLAUSE_MAP_KIND
(
NODE
) \

1280 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_MAP
)->
omp_˛au£
.
subcode
.
m≠_köd
)

	)

1285 
	#OMP_CLAUSE_MAP_ZERO_BIAS_ARRAY_SECTION
(
NODE
) \

1286 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_MAP
)->
ba£
.
public_Êag
)

	)

1288 
	#OMP_CLAUSE_PROC_BIND_KIND
(
NODE
) \

1289 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_PROC_BIND
)->
omp_˛au£
.
subcode
.
¥oc_böd_köd
)

	)

1291 
	#OMP_CLAUSE_COLLAPSE_EXPR
(
NODE
) \

1292 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_COLLAPSE
), 0)

	)

1293 
	#OMP_CLAUSE_COLLAPSE_ITERVAR
(
NODE
) \

1294 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_COLLAPSE
), 1)

	)

1295 
	#OMP_CLAUSE_COLLAPSE_COUNT
(
NODE
) \

1296 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_COLLAPSE
), 2)

	)

1298 
	#OMP_CLAUSE_REDUCTION_CODE
(
NODE
) \

1299 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_REDUCTION
)->
omp_˛au£
.
subcode
.
ªdu˘i⁄_code
)

	)

1300 
	#OMP_CLAUSE_REDUCTION_INIT
(
NODE
) \

1301 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_REDUCTION
), 1)

	)

1302 
	#OMP_CLAUSE_REDUCTION_MERGE
(
NODE
) \

1303 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_REDUCTION
), 2)

	)

1304 
	#OMP_CLAUSE_REDUCTION_GIMPLE_INIT
(
NODE
) \

1305 (
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
gim∂e_ªdu˘i⁄_öô


	)

1306 
	#OMP_CLAUSE_REDUCTION_GIMPLE_MERGE
(
NODE
) \

1307 (
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
gim∂e_ªdu˘i⁄_mîge


	)

1308 
	#OMP_CLAUSE_REDUCTION_PLACEHOLDER
(
NODE
) \

1309 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_REDUCTION
), 3)

	)

1313 
	#OMP_CLAUSE_REDUCTION_OMP_ORIG_REF
(
NODE
) \

1314 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_REDUCTION
)->
ba£
.
public_Êag
)

	)

1318 
	#OMP_CLAUSE_LINEAR_NO_COPYIN
(
NODE
) \

1319 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LINEAR
)->
ba£
.
public_Êag
)

	)

1323 
	#OMP_CLAUSE_LINEAR_NO_COPYOUT
(
NODE
) \

1324 
	`TREE_PRIVATE
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LINEAR
))

	)

1327 
	#OMP_CLAUSE_LINEAR_VARIABLE_STRIDE
(
NODE
) \

1328 
	`TREE_PROTECTED
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LINEAR
))

	)

1332 
	#OMP_CLAUSE_LINEAR_ARRAY
(
NODE
) \

1333 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LINEAR
)->
ba£
.
dïªˇãd_Êag
)

	)

1335 
	#OMP_CLAUSE_LINEAR_STEP
(
NODE
) \

1336 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LINEAR
), 1)

	)

1338 
	#OMP_CLAUSE_LINEAR_STMT
(
NODE
) \

1339 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_LINEAR
), 2)

	)

1341 
	#OMP_CLAUSE_LINEAR_GIMPLE_SEQ
(
NODE
) \

1342 (
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
gim∂e_ªdu˘i⁄_öô


	)

1344 
	#OMP_CLAUSE_ALIGNED_ALIGNMENT
(
NODE
) \

1345 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_ALIGNED
), 1)

	)

1347 
	#OMP_CLAUSE_NUM_TEAMS_EXPR
(
NODE
) \

1348 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_NUM_TEAMS
), 0)

	)

1350 
	#OMP_CLAUSE_THREAD_LIMIT_EXPR
(
NODE
) \

1351 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, \

1352 
OMP_CLAUSE_THREAD_LIMIT
), 0)

	)

1354 
	#OMP_CLAUSE_DEVICE_ID
(
NODE
) \

1355 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_DEVICE
), 0)

	)

1357 
	#OMP_CLAUSE_DIST_SCHEDULE_CHUNK_EXPR
(
NODE
) \

1358 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, \

1359 
OMP_CLAUSE_DIST_SCHEDULE
), 0)

	)

1361 
	#OMP_CLAUSE_SAFELEN_EXPR
(
NODE
) \

1362 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_SAFELEN
), 0)

	)

1364 
	#OMP_CLAUSE_SIMDLEN_EXPR
(
NODE
) \

1365 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_SIMDLEN
), 0)

	)

1367 
	#OMP_CLAUSE__SIMDUID__DECL
(
NODE
) \

1368 
	`OMP_CLAUSE_OPERAND
 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE__SIMDUID_
), 0)

	)

1370 
	#OMP_CLAUSE_SCHEDULE_KIND
(
NODE
) \

1371 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_SCHEDULE
)->
omp_˛au£
.
subcode
.
scheduÀ_köd
)

	)

1373 
	#OMP_CLAUSE_DEFAULT_KIND
(
NODE
) \

1374 (
	`OMP_CLAUSE_SUBCODE_CHECK
 (
NODE
, 
OMP_CLAUSE_DEFAULT
)->
omp_˛au£
.
subcode
.
deÁu…_köd
)

	)

1380 
	#SSA_NAME_IDENTIFIER
(
NODE
) \

1381 (
	`SSA_NAME_CHECK
 (
NODE
)->
sß_«me
.
v¨
 !
NULL_TREE
 \

1382 ? (
	`TREE_CODE
 ((
NODE
)->
sß_«me
.
v¨
Ë=
IDENTIFIER_NODE
 \

1383 ? (
NODE
)->
sß_«me
.
v¨
 \

1384 : 
	`DECL_NAME
 ((
NODE
)->
sß_«me
.
v¨
)) \

1385 : 
NULL_TREE
)

	)

1390 
	#SSA_NAME_VAR
(
NODE
) \

1391 (
	`SSA_NAME_CHECK
 (
NODE
)->
sß_«me
.
v¨
 =
NULL_TREE
 \

1392 || 
	`TREE_CODE
 ((
NODE
)->
sß_«me
.
v¨
Ë=
IDENTIFIER_NODE
 \

1393 ? 
NULL_TREE
 : (
NODE
)->
sß_«me
.
v¨
)

	)

1395 
	#SET_SSA_NAME_VAR_OR_IDENTIFIER
(
NODE
,
VAR
) \

1396 dÿ{ 
	`SSA_NAME_CHECK
 (
NODE
)->
sß_«me
.
v¨
 = (
VAR
); } 0)

	)

1399 
	#SSA_NAME_DEF_STMT
(
NODE
Ë
	`SSA_NAME_CHECK
 (NODE)->
sß_«me
.
def_°mt


	)

1403 
	#SSA_NAME_VERSION
(
NODE
Ë
	`SSA_NAME_CHECK
 (NODE)->
ba£
.
u
.
vîsi⁄


	)

1408 
	#SSA_NAME_OCCURS_IN_ABNORMAL_PHI
(
NODE
) \

1409 
	`SSA_NAME_CHECK
 (
NODE
)->
ba£
.
asm_wrôãn_Êag


	)

1414 
	#SSA_NAME_IN_FREE_LIST
(
NODE
) \

1415 
	`SSA_NAME_CHECK
 (
NODE
)->
ba£
.
nŸhrow_Êag


	)

1422 
	#SSA_NAME_IS_DEFAULT_DEF
(
NODE
) \

1423 
	`SSA_NAME_CHECK
 (
NODE
)->
ba£
.
deÁu…_def_Êag


	)

1426 
	#SSA_NAME_PTR_INFO
(
N
) \

1427 
	`SSA_NAME_CHECK
 (
N
)->
sß_«me
.
öfo
.
±r_öfo


	)

1430 
	#SSA_NAME_ANTI_RANGE_P
(
N
) \

1431 
	`SSA_NAME_CHECK
 (
N
)->
ba£
.
°©ic_Êag


	)

1434 
	#SSA_NAME_RANGE_TYPE
(
N
) \

1435 (
	`SSA_NAME_ANTI_RANGE_P
 (
N
Ë? 
VR_ANTI_RANGE
 : 
VR_RANGE
)

	)

1438 
	#SSA_NAME_RANGE_INFO
(
N
) \

1439 
	`SSA_NAME_CHECK
 (
N
)->
sß_«me
.
öfo
.
ønge_öfo


	)

1442 
	#SSA_NAME_IMM_USE_NODE
(
NODE
Ë
	`SSA_NAME_CHECK
 (NODE)->
sß_«me
.
imm_u£s


	)

1444 
	#OMP_CLAUSE_CODE
(
NODE
) \

1445 (
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
code


	)

1447 
	#OMP_CLAUSE_SET_CODE
(
NODE
, 
CODE
) \

1448 ((
	`OMP_CLAUSE_CHECK
 (
NODE
))->
omp_˛au£
.
code
 = (
CODE
))

	)

1450 
	#OMP_CLAUSE_OPERAND
(
NODE
, 
I
) \

1451 
	`OMP_CLAUSE_ELT_CHECK
 (
NODE
, 
I
)

	)

1454 
	#BLOCK_VARS
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
v¨s
)

	)

1455 
	#BLOCK_NONLOCALIZED_VARS
(
NODE
) \

1456 (
	`BLOCK_CHECK
 (
NODE
)->
block
.
n⁄loˇlized_v¨s
)

	)

1457 
	#BLOCK_NUM_NONLOCALIZED_VARS
(
NODE
) \

1458 
	`vec_ß„_Àngth
 (
	`BLOCK_NONLOCALIZED_VARS
 (
NODE
))

	)

1459 
	#BLOCK_NONLOCALIZED_VAR
(
NODE
,
N
Ë(*
	`BLOCK_NONLOCALIZED_VARS
 (NODE))[N]

	)

1460 
	#BLOCK_SUBBLOCKS
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
subblocks
)

	)

1461 
	#BLOCK_SUPERCONTEXT
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
su≥rc⁄ãxt
)

	)

1462 
	#BLOCK_CHAIN
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
chaö
)

	)

1463 
	#BLOCK_ABSTRACT_ORIGIN
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
ab°ø˘_‹igö
)

	)

1464 
	#BLOCK_ABSTRACT
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
ab°ø˘_Êag
)

	)

1467 
	#BLOCK_SAME_RANGE
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
«mñess_Êag
)

	)

1472 
	#BLOCK_NUMBER
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
block_num
)

	)

1496 
	#BLOCK_FRAGMENT_ORIGIN
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
‰agmít_‹igö
)

	)

1497 
	#BLOCK_FRAGMENT_CHAIN
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
‰agmít_chaö
)

	)

1503 
	#BLOCK_SOURCE_LOCATION
(
NODE
Ë(
	`BLOCK_CHECK
 (NODE)->
block
.
locus
)

	)

1516 
	#TYPE_UID
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
uid
)

	)

1517 
	#TYPE_SIZE
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
size
)

	)

1518 
	#TYPE_SIZE_UNIT
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
size_unô
)

	)

1519 
	#TYPE_POINTER_TO
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
poöãr_to
)

	)

1520 
	#TYPE_REFERENCE_TO
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
ª„ªn˚_to
)

	)

1521 
	#TYPE_PRECISION
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
¥ecisi⁄
)

	)

1522 
	#TYPE_NAME
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
«me
)

	)

1523 
	#TYPE_NEXT_VARIANT
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
√xt_v¨ü¡
)

	)

1524 
	#TYPE_MAIN_VARIANT
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
maö_v¨ü¡
)

	)

1525 
	#TYPE_CONTEXT
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
c⁄ãxt
)

	)

1527 
	#TYPE_MODE
(
NODE
) \

1528 (
	`VECTOR_TYPE_P
 (
	`TYPE_CHECK
 (
NODE
)) \

1529 ? 
	`ve˘‹_ty≥_mode
 (
NODE
Ë: (NODE)->
ty≥_comm⁄
.
mode
)

	)

1530 
	#SET_TYPE_MODE
(
NODE
, 
MODE
) \

1531 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
mode
 = (
MODE
))

	)

1549 
	#TYPE_CANONICAL
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
ˇn⁄iˇl
)

	)

1556 
	#TYPE_STRUCTURAL_EQUALITY_P
(
NODE
Ë(
	`TYPE_CANONICAL
 (NODEË=
NULL_TREE
)

	)

1559 
	#SET_TYPE_STRUCTURAL_EQUALITY
(
NODE
Ë(
	`TYPE_CANONICAL
 (NODEË
NULL_TREE
)

	)

1561 
	#TYPE_IBIT
(
NODE
Ë(
	`GET_MODE_IBIT
 (
	`TYPE_MODE
 (NODE)))

	)

1562 
	#TYPE_FBIT
(
NODE
Ë(
	`GET_MODE_FBIT
 (
	`TYPE_MODE
 (NODE)))

	)

1569 
	#TYPE_ALIAS_SET
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
Æüs_£t
)

	)

1573 
	#TYPE_ALIAS_SET_KNOWN_P
(
NODE
) \

1574 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
Æüs_£t
 !-1)

	)

1578 
	#TYPE_ATTRIBUTES
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
©åibuãs
)

	)

1582 
	#TYPE_ALIGN
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
Æign
)

	)

1586 
	#TYPE_USER_ALIGN
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
u£r_Æign
)

	)

1589 
	#TYPE_ALIGN_UNIT
(
NODE
Ë(
	`TYPE_ALIGN
 (NODEË/ 
BITS_PER_UNIT
)

	)

1598 
	#TYPE_STUB_DECL
(
NODE
Ë(
	`TREE_CHAIN
 (
	`TYPE_CHECK
 (NODE)))

	)

1603 
	#TYPE_NO_FORCE_BLK
(
NODE
) \

1604 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
no_f‹˚_blk_Êag
)

	)

1607 
	#TYPE_VOLATILE
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
vﬁ©ûe_Êag
)

	)

1610 
	#TYPE_ATOMIC
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
©omic_Êag
)

	)

1613 
	#TYPE_READONLY
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
ªad⁄ly_Êag
)

	)

1617 
	#TYPE_RESTRICT
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
ª°ri˘_Êag
)

	)

1620 
	#TYPE_NAMELESS
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
«mñess_Êag
)

	)

1623 
	#TYPE_ADDR_SPACE
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
addªss_•a˚
)

	)

1627 
	#ENCODE_QUAL_ADDR_SPACE
(
NUM
Ë((NUM & 0xFFË<< 8)

	)

1628 
	#DECODE_QUAL_ADDR_SPACE
(
X
Ë(((XË>> 8Ë& 0xFF)

	)

1631 
	#CLEAR_QUAL_ADDR_SPACE
(
X
Ë((XË& ~0xFF00)

	)

1635 
	#KEEP_QUAL_ADDR_SPACE
(
X
Ë((XË& 0xFF00)

	)

1638 
	#TYPE_QUALS
(
NODE
) \

1639 ((Ë((
	`TYPE_READONLY
 (
NODE
Ë* 
TYPE_QUAL_CONST
) \

1640 | (
	`TYPE_VOLATILE
 (
NODE
Ë* 
TYPE_QUAL_VOLATILE
) \

1641 | (
	`TYPE_ATOMIC
 (
NODE
Ë* 
TYPE_QUAL_ATOMIC
) \

1642 | (
	`TYPE_RESTRICT
 (
NODE
Ë* 
TYPE_QUAL_RESTRICT
) \

1643 | (
	`ENCODE_QUAL_ADDR_SPACE
 (
	`TYPE_ADDR_SPACE
 (
NODE
)))))

	)

1646 
	#TYPE_QUALS_NO_ADDR_SPACE
(
NODE
) \

1647 ((Ë((
	`TYPE_READONLY
 (
NODE
Ë* 
TYPE_QUAL_CONST
) \

1648 | (
	`TYPE_VOLATILE
 (
NODE
Ë* 
TYPE_QUAL_VOLATILE
) \

1649 | (
	`TYPE_ATOMIC
 (
NODE
Ë* 
TYPE_QUAL_ATOMIC
) \

1650 | (
	`TYPE_RESTRICT
 (
NODE
Ë* 
TYPE_QUAL_RESTRICT
)))

	)

1654 
	#TYPE_QUALS_NO_ADDR_SPACE_NO_ATOMIC
(
NODE
) \

1655 ((Ë((
	`TYPE_READONLY
 (
NODE
Ë* 
TYPE_QUAL_CONST
) \

1656 | (
	`TYPE_VOLATILE
 (
NODE
Ë* 
TYPE_QUAL_VOLATILE
) \

1657 | (
	`TYPE_RESTRICT
 (
NODE
Ë* 
TYPE_QUAL_RESTRICT
)))

	)

1660 
	#TYPE_LANG_FLAG_0
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_0
)

	)

1661 
	#TYPE_LANG_FLAG_1
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_1
)

	)

1662 
	#TYPE_LANG_FLAG_2
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_2
)

	)

1663 
	#TYPE_LANG_FLAG_3
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_3
)

	)

1664 
	#TYPE_LANG_FLAG_4
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_4
)

	)

1665 
	#TYPE_LANG_FLAG_5
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_5
)

	)

1666 
	#TYPE_LANG_FLAG_6
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
œng_Êag_6
)

	)

1670 
	#TREE_VISITED
(
NODE
Ë((NODE)->
ba£
.
visôed
)

	)

1675 
	#TYPE_STRING_FLAG
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_comm⁄
.
°rög_Êag
)

	)

1678 
	#TYPE_VECTOR_SUBPARTS
(
VECTOR_TYPE
) \

1679 (((
HOST_WIDE_INT
) 1) \

1680 << 
	`VECTOR_TYPE_CHECK
 (
VECTOR_TYPE
)->
ty≥_comm⁄
.
¥ecisi⁄
)

	)

1683 
	#SET_TYPE_VECTOR_SUBPARTS
(
VECTOR_TYPE
, 
X
) \

1684 (
	`VECTOR_TYPE_CHECK
 (
VECTOR_TYPE
)->
ty≥_comm⁄
.
¥ecisi⁄
 = 
	`exa˘_log2
 (
X
))

	)

1688 
	#TYPE_VECTOR_OPAQUE
(
NODE
) \

1689 (
	`VECTOR_TYPE_CHECK
 (
NODE
)->
ba£
.
deÁu…_def_Êag
)

	)

1693 
	#TYPE_NEEDS_CONSTRUCTING
(
NODE
) \

1694 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
√eds_c⁄°ru˘ög_Êag
)

	)

1700 
	#TYPE_TRANSPARENT_AGGR
(
NODE
) \

1701 (
	`RECORD_OR_UNION_CHECK
 (
NODE
)->
ty≥_comm⁄
.
å™•¨ít_aggr_Êag
)

	)

1706 
	#TYPE_NONALIASED_COMPONENT
(
NODE
) \

1707 (
	`ARRAY_TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
å™•¨ít_aggr_Êag
)

	)

1711 
	#TYPE_PACKED
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
∑cked_Êag
)

	)

1716 
	#TYPE_CONTAINS_PLACEHOLDER_INTERNAL
(
NODE
) \

1717 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
c⁄èös_∂a˚hﬁdî_bôs
)

	)

1720 
	#TYPE_FINAL_P
(
NODE
) \

1721 (
	`RECORD_OR_UNION_CHECK
 (
NODE
)->
ba£
.
deÁu…_def_Êag
)

	)

1732 
	#TYPE_SYMTAB_ADDRESS
(
NODE
) \

1733 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
symèb
.
addªss
)

	)

1737 
	#TYPE_SYMTAB_POINTER
(
NODE
) \

1738 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
symèb
.
poöãr
)

	)

1742 
	#TYPE_SYMTAB_DIE
(
NODE
) \

1743 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_comm⁄
.
symèb
.
dõ
)

	)

1749 
	#TYPE_SYMTAB_IS_ADDRESS
 (0)

	)

1750 
	#TYPE_SYMTAB_IS_POINTER
 (1)

	)

1751 
	#TYPE_SYMTAB_IS_DIE
 (2)

	)

1753 
	#TYPE_LANG_SPECIFIC
(
NODE
) \

1754 (
	`TYPE_CHECK
 (
NODE
)->
ty≥_wôh_œng_•ecific
.
œng_•ecific
)

	)

1756 
	#TYPE_VALUES
(
NODE
Ë(
	`ENUMERAL_TYPE_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
vÆues
)

	)

1757 
	#TYPE_DOMAIN
(
NODE
Ë(
	`ARRAY_TYPE_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
vÆues
)

	)

1758 
	#TYPE_FIELDS
(
NODE
) \

1759 (
	`RECORD_OR_UNION_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
vÆues
)

	)

1760 
	#TYPE_CACHED_VALUES
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
vÆues
)

	)

1761 
	#TYPE_ARG_TYPES
(
NODE
) \

1762 (
	`FUNC_OR_METHOD_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
vÆues
)

	)

1763 
	#TYPE_VALUES_RAW
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
vÆues
)

	)

1765 
	#TYPE_METHODS
(
NODE
) \

1766 (
	`RECORD_OR_UNION_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
maxvÆ
)

	)

1767 
	#TYPE_VFIELD
(
NODE
) \

1768 (
	`RECORD_OR_UNION_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
mövÆ
)

	)

1769 
	#TYPE_METHOD_BASETYPE
(
NODE
) \

1770 (
	`FUNC_OR_METHOD_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
maxvÆ
)

	)

1771 
	#TYPE_OFFSET_BASETYPE
(
NODE
) \

1772 (
	`OFFSET_TYPE_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
maxvÆ
)

	)

1773 
	#TYPE_MAXVAL
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
maxvÆ
)

	)

1774 
	#TYPE_MINVAL
(
NODE
Ë(
	`TYPE_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
mövÆ
)

	)

1775 
	#TYPE_NEXT_PTR_TO
(
NODE
) \

1776 (
	`POINTER_TYPE_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
mövÆ
)

	)

1777 
	#TYPE_NEXT_REF_TO
(
NODE
) \

1778 (
	`REFERENCE_TYPE_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
mövÆ
)

	)

1779 
	#TYPE_MIN_VALUE
(
NODE
) \

1780 (
	`NUMERICAL_TYPE_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
mövÆ
)

	)

1781 
	#TYPE_MAX_VALUE
(
NODE
) \

1782 (
	`NUMERICAL_TYPE_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
maxvÆ
)

	)

1787 
	#TYPE_ARRAY_MAX_SIZE
(
ARRAY_TYPE
) \

1788 (
	`ARRAY_TYPE_CHECK
 (
ARRAY_TYPE
)->
ty≥_n⁄_comm⁄
.
maxvÆ
)

	)

1792 
	#TYPE_BINFO
(
NODE
Ë(
	`RECORD_OR_UNION_CHECK
 (NODE)->
ty≥_n⁄_comm⁄
.
böfo
)

	)

1795 
	#TYPE_LANG_SLOT_1
(
NODE
) \

1796 (
	`NOT_RECORD_OR_UNION_CHECK
 (
NODE
)->
ty≥_n⁄_comm⁄
.
böfo
)

	)

1816 
	#BINFO_VIRTUAL_P
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
ba£
.
°©ic_Êag
)

	)

1819 
	#BINFO_MARKED
(
NODE
Ë
	`TREE_LANG_FLAG_0
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1820 
	#BINFO_FLAG_1
(
NODE
Ë
	`TREE_LANG_FLAG_1
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1821 
	#BINFO_FLAG_2
(
NODE
Ë
	`TREE_LANG_FLAG_2
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1822 
	#BINFO_FLAG_3
(
NODE
Ë
	`TREE_LANG_FLAG_3
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1823 
	#BINFO_FLAG_4
(
NODE
Ë
	`TREE_LANG_FLAG_4
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1824 
	#BINFO_FLAG_5
(
NODE
Ë
	`TREE_LANG_FLAG_5
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1825 
	#BINFO_FLAG_6
(
NODE
Ë
	`TREE_LANG_FLAG_6
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1828 
	#BINFO_TYPE
(
NODE
Ë
	`TREE_TYPE
 (
	`TREE_BINFO_CHECK
 (NODE))

	)

1836 
	#BINFO_OFFSET
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
off£t
)

	)

1837 
	#BINFO_OFFSET_ZEROP
(
NODE
Ë(
	`öãgî_zî›
 (
	`BINFO_OFFSET
 (NODE)))

	)

1843 
	#BINFO_VTABLE
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
vèbÀ
)

	)

1848 
	#BINFO_VIRTUALS
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
vútuÆs
)

	)

1856 
	#BINFO_BASE_BINFOS
(
NODE
Ë(&
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
ba£_böfos
)

	)

1859 
	#BINFO_N_BASE_BINFOS
(
NODE
Ë(
	`BINFO_BASE_BINFOS
 (NODE)->
	`Àngth
 ())

	)

1862 
	#BINFO_BASE_BINFO
(
NODE
,
N
) \

1863 ((*
	`BINFO_BASE_BINFOS
 (
NODE
))[(
N
)])

	)

1864 
	#BINFO_BASE_ITERATE
(
NODE
,
N
,
B
) \

1865 (
	`BINFO_BASE_BINFOS
 (
NODE
)->
	`ôî©e
 ((
N
), &(
B
)))

	)

1866 
	#BINFO_BASE_APPEND
(
NODE
,
T
) \

1867 (
	`BINFO_BASE_BINFOS
 (
NODE
)->
	`quick_push
 ((
T
)))

	)

1874 
	#BINFO_VPTR_FIELD
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
v±r_fõld
)

	)

1879 
	#BINFO_BASE_ACCESSES
(
NODE
) \

1880 (
	`TREE_BINFO_CHECK
 (
NODE
)->
böfo
.
ba£_ac˚s£s
)

	)

1882 
	#BINFO_BASE_ACCESS
(
NODE
,
N
) \

1883 (*
	`BINFO_BASE_ACCESSES
 (
NODE
))[(
N
)]

	)

1884 
	#BINFO_BASE_ACCESS_APPEND
(
NODE
,
T
) \

1885 
	`BINFO_BASE_ACCESSES
 (
NODE
)->
	`quick_push
 ((
T
))

	)

1889 
	#BINFO_SUBVTT_INDEX
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
vâ_subvâ
)

	)

1893 
	#BINFO_VPTR_INDEX
(
NODE
Ë(
	`TREE_BINFO_CHECK
 (NODE)->
böfo
.
vâ_v±r
)

	)

1899 
	#BINFO_INHERITANCE_CHAIN
(
NODE
) \

1900 (
	`TREE_BINFO_CHECK
 (
NODE
)->
böfo
.
öhîô™˚
)

	)

1907 
	#SSA_VAR_P
(
DECL
) \

1908 (
	`TREE_CODE
 (
DECL
Ë=
VAR_DECL
 \

1909 || 
	`TREE_CODE
 (
DECL
Ë=
PARM_DECL
 \

1910 || 
	`TREE_CODE
 (
DECL
Ë=
RESULT_DECL
 \

1911 || 
	`TREE_CODE
 (
DECL
Ë=
SSA_NAME
)

	)

1914 
	#DECL_CHAIN
(
NODE
Ë(
	`TREE_CHAIN
 (
	`DECL_MINIMAL_CHECK
 (NODE)))

	)

1918 
	#DECL_NAME
(
NODE
Ë(
	`DECL_MINIMAL_CHECK
 (NODE)->
de˛_möimÆ
.
«me
)

	)

1921 
	#DECL_UID
(
NODE
Ë(
	`DECL_MINIMAL_CHECK
 (NODE)->
de˛_möimÆ
.
uid
)

	)

1925 
	#DEBUG_TEMP_UID
(
NODE
Ë(-
	`DECL_UID
 (
	`TREE_CHECK
 ((NODE), 
DEBUG_EXPR_DECL
)))

	)

1929 
	#DECL_PT_UID
(
NODE
) \

1930 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
±_uid
 == -1u \

1931 ? (
NODE
)->
de˛_möimÆ
.
uid
 : (NODE)->
de˛_comm⁄
.
±_uid
)

	)

1933 
	#SET_DECL_PT_UID
(
NODE
, 
UID
) \

1934 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
±_uid
 = (
UID
))

	)

1937 
	#DECL_PT_UID_SET_P
(
NODE
) \

1938 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
±_uid
 !-1u)

	)

1944 
	#DECL_SOURCE_LOCATION
(
NODE
) \

1945 (
	`DECL_MINIMAL_CHECK
 (
NODE
)->
de˛_möimÆ
.
locus
)

	)

1946 
	#DECL_SOURCE_FILE
(
NODE
Ë
	`LOCATION_FILE
 (
	`DECL_SOURCE_LOCATION
 (NODE))

	)

1947 
	#DECL_SOURCE_LINE
(
NODE
Ë
	`LOCATION_LINE
 (
	`DECL_SOURCE_LOCATION
 (NODE))

	)

1948 
	#DECL_SOURCE_COLUMN
(
NODE
Ë
	`LOCATION_COLUMN
 (
	`DECL_SOURCE_LOCATION
 (NODE))

	)

1952 
	#DECL_IS_BUILTIN
(
DECL
) \

1953 (
	`LOCATION_LOCUS
 (
	`DECL_SOURCE_LOCATION
 (
DECL
)Ë<
BUILTINS_LOCATION
)

	)

1964 
	#DECL_CONTEXT
(
NODE
Ë(
	`DECL_MINIMAL_CHECK
 (NODE)->
de˛_möimÆ
.
c⁄ãxt
)

	)

1965 
	#DECL_FIELD_CONTEXT
(
NODE
) \

1966 (
	`FIELD_DECL_CHECK
 (
NODE
)->
de˛_möimÆ
.
c⁄ãxt
)

	)

1969 
	#DECL_NAMELESS
(
NODE
Ë(
	`DECL_MINIMAL_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
«mñess_Êag
)

	)

1977 
	#DECL_ABSTRACT_ORIGIN
(
NODE
) \

1978 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
ab°ø˘_‹igö
)

	)

1982 
	#DECL_ORIGIN
(
NODE
) \

1983 (
	`DECL_ABSTRACT_ORIGIN
 (
NODE
Ë? DECL_ABSTRACT_ORIGIN (NODEË: (NODE))

	)

1989 
	#DECL_FROM_INLINE
(
NODE
) \

1990 (
	`DECL_ABSTRACT_ORIGIN
 (
NODE
Ë!
NULL_TREE
 \

1991 && 
	`DECL_ABSTRACT_ORIGIN
 (
NODE
Ë!(NODE))

	)

1994 
	#DECL_ATTRIBUTES
(
NODE
) \

1995 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
©åibuãs
)

	)

2007 
	#DECL_INITIAL
(
NODE
Ë(
	`DECL_COMMON_CHECK
 (NODE)->
de˛_comm⁄
.
öôül
)

	)

2011 
	#DECL_SIZE
(
NODE
Ë(
	`DECL_COMMON_CHECK
 (NODE)->
de˛_comm⁄
.
size
)

	)

2013 
	#DECL_SIZE_UNIT
(
NODE
Ë(
	`DECL_COMMON_CHECK
 (NODE)->
de˛_comm⁄
.
size_unô
)

	)

2015 
	#DECL_ALIGN
(
NODE
Ë(
	`DECL_COMMON_CHECK
 (NODE)->
de˛_comm⁄
.
Æign
)

	)

2017 
	#DECL_ALIGN_UNIT
(
NODE
Ë(
	`DECL_ALIGN
 (NODEË/ 
BITS_PER_UNIT
)

	)

2020 
	#DECL_USER_ALIGN
(
NODE
) \

2021 (
	`DECL_COMMON_CHECK
 (
NODE
)->
ba£
.
u
.
bôs
.
u£r_Æign
)

	)

2025 
	#DECL_MODE
(
NODE
Ë(
	`DECL_COMMON_CHECK
 (NODE)->
de˛_comm⁄
.
mode
)

	)

2031 
	#DECL_FUNCTION_CODE
(
NODE
) \

2032 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
fun˘i⁄_code
)

	)

2034 
	#DECL_FUNCTION_PERSONALITY
(
NODE
) \

2035 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
≥rs⁄Æôy
)

	)

2041 
	#DECL_IGNORED_P
(
NODE
) \

2042 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
ign‹ed_Êag
)

	)

2050 
	#DECL_ABSTRACT
(
NODE
) \

2051 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
ab°ø˘_Êag
)

	)

2054 
	#DECL_LANG_SPECIFIC
(
NODE
) \

2055 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_•ecific
)

	)

2064 
	#DECL_EXTERNAL
(
NODE
Ë(
	`DECL_COMMON_CHECK
 (NODE)->
de˛_comm⁄
.
de˛_Êag_1
)

	)

2073 
	#DECL_NONLOCAL
(
NODE
) \

2074 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
n⁄loˇl_Êag
)

	)

2079 
	#DECL_VIRTUAL_P
(
NODE
) \

2080 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
vútuÆ_Êag
)

	)

2083 
	#DECL_ARTIFICIAL
(
NODE
) \

2084 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
¨tificül_Êag
)

	)

2087 
	#DECL_LANG_FLAG_0
(
NODE
) \

2088 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_0
)

	)

2089 
	#DECL_LANG_FLAG_1
(
NODE
) \

2090 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_1
)

	)

2091 
	#DECL_LANG_FLAG_2
(
NODE
) \

2092 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_2
)

	)

2093 
	#DECL_LANG_FLAG_3
(
NODE
) \

2094 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_3
)

	)

2095 
	#DECL_LANG_FLAG_4
(
NODE
) \

2096 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_4
)

	)

2097 
	#DECL_LANG_FLAG_5
(
NODE
) \

2098 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_5
)

	)

2099 
	#DECL_LANG_FLAG_6
(
NODE
) \

2100 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_6
)

	)

2101 
	#DECL_LANG_FLAG_7
(
NODE
) \

2102 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_7
)

	)

2103 
	#DECL_LANG_FLAG_8
(
NODE
) \

2104 (
	`DECL_COMMON_CHECK
 (
NODE
)->
de˛_comm⁄
.
œng_Êag_8
)

	)

2107 
	#SCOPE_FILE_SCOPE_P
(
EXP
) \

2108 (! (
EXP
Ë|| 
	`TREE_CODE
 (EXPË=
TRANSLATION_UNIT_DECL
)

	)

2110 
	#DECL_FILE_SCOPE_P
(
EXP
Ë
	`SCOPE_FILE_SCOPE_P
 (
	`DECL_CONTEXT
 (EXP))

	)

2112 
	#TYPE_FILE_SCOPE_P
(
EXP
Ë
	`SCOPE_FILE_SCOPE_P
 (
	`TYPE_CONTEXT
 (EXP))

	)

2116 
	#DECL_PRESERVE_P
(
DECL
) \

2117 
	`DECL_COMMON_CHECK
 (
DECL
)->
de˛_comm⁄
.
¥e£rve_Êag


	)

2125 
	#DECL_GIMPLE_REG_P
(
DECL
) \

2126 
	`DECL_COMMON_CHECK
 (
DECL
)->
de˛_comm⁄
.
gim∂e_ªg_Êag


	)

2128 
åì
 
de˛_vÆue_ex¥_lookup
 (tree);

2129 
de˛_vÆue_ex¥_ö£π
 (
åì
,Åree);

2135 
	#DECL_HAS_VALUE_EXPR_P
(
NODE
) \

2136 (
	`TREE_CHECK3
 (
NODE
, 
VAR_DECL
, 
PARM_DECL
, 
RESULT_DECL
) \

2137 ->
de˛_comm⁄
.
de˛_Êag_2
)

	)

2138 
	#DECL_VALUE_EXPR
(
NODE
) \

2139 (
	`de˛_vÆue_ex¥_lookup
 (
	`DECL_WRTL_CHECK
 (
NODE
)))

	)

2140 
	#SET_DECL_VALUE_EXPR
(
NODE
, 
VAL
) \

2141 (
	`de˛_vÆue_ex¥_ö£π
 (
	`DECL_WRTL_CHECK
 (
NODE
), 
VAL
))

	)

2146 
	#DECL_RTL
(
NODE
) \

2147 (
	`DECL_WRTL_CHECK
 (
NODE
)->
de˛_wôh_πl
.
πl
 \

2148 ? (
NODE
)->
de˛_wôh_πl
.
πl
 \

2149 : (
	`make_de˛_πl
 (
NODE
), (NODE)->
de˛_wôh_πl
.
πl
))

	)

2152 
	#SET_DECL_RTL
(
NODE
, 
RTL
Ë
	`£t_de˛_πl
 (NODE, RTL)

	)

2155 
	#HAS_RTL_P
(
NODE
Ë(
	`CODE_CONTAINS_STRUCT
 (
	`TREE_CODE
 (NODE), 
TS_DECL_WRTL
))

	)

2158 
	#DECL_RTL_SET_P
(
NODE
) \

2159 (
	`HAS_RTL_P
 (
NODE
Ë&& 
	`DECL_WRTL_CHECK
 (NODE)->
de˛_wôh_πl
.
πl
 !
NULL
)

	)

2163 
	#COPY_DECL_RTL
(
NODE1
, 
NODE2
) \

2164 (
	`DECL_WRTL_CHECK
 (
NODE2
)->
de˛_wôh_πl
.
πl
 \

2165 
	`DECL_WRTL_CHECK
 (
NODE1
)->
de˛_wôh_πl
.
πl
)

	)

2168 
	#DECL_RTL_IF_SET
(
NODE
Ë(
	`DECL_RTL_SET_P
 (NODEË? 
	`DECL_RTL
 (NODEË: 
NULL
)

	)

2170 #i‡(
GCC_VERSION
 >= 2007)

2171 
	#DECL_RTL_KNOWN_SET
(
de˛
Ë
__exãnsi⁄__
 \

2172 ({ 
åì
 c⁄° 
__d
 = (
de˛
); \

2173 
	`gcc_checkög_as£π
 (
	`DECL_RTL_SET_P
 (
__d
)); \

2176 &*
	`DECL_RTL_IF_SET
 (
__d
); })

	)

2178 
	#DECL_RTL_KNOWN_SET
(
de˛
Ë(&*
	`DECL_RTL_IF_SET
 (de˛))

	)

2182 
	#DECL_REGISTER
(
NODE
Ë(
	`DECL_WRTL_CHECK
 (NODE)->
de˛_comm⁄
.
de˛_Êag_0
)

	)

2187 
	#DECL_FIELD_OFFSET
(
NODE
Ë(
	`FIELD_DECL_CHECK
 (NODE)->
fõld_de˛
.
off£t
)

	)

2193 
	#DECL_FIELD_BIT_OFFSET
(
NODE
) \

2194 (
	`FIELD_DECL_CHECK
 (
NODE
)->
fõld_de˛
.
bô_off£t
)

	)

2199 
	#DECL_BIT_FIELD_TYPE
(
NODE
) \

2200 (
	`FIELD_DECL_CHECK
 (
NODE
)->
fõld_de˛
.
bô_fõld_ty≥
)

	)

2204 
	#DECL_BIT_FIELD_REPRESENTATIVE
(
NODE
) \

2205 (
	`FIELD_DECL_CHECK
 (
NODE
)->
fõld_de˛
.
quÆifõr
)

	)

2209 
	#DECL_QUALIFIER
(
NODE
Ë(
	`FIELD_DECL_CHECK
 (NODE)->
fõld_de˛
.
quÆifõr
)

	)

2215 
	#DECL_OFFSET_ALIGN
(
NODE
) \

2216 (((
HOST_WIDE_INT
)1Ë<< 
	`FIELD_DECL_CHECK
 (
NODE
)->
de˛_comm⁄
.
off_Æign
)

	)

2219 
	#SET_DECL_OFFSET_ALIGN
(
NODE
, 
X
) \

2220 (
	`FIELD_DECL_CHECK
 (
NODE
)->
de˛_comm⁄
.
off_Æign
 = 
	`ffs_hwi
 (
X
Ë- 1)

	)

2225 
	#DECL_FCONTEXT
(
NODE
Ë(
	`FIELD_DECL_CHECK
 (NODE)->
fõld_de˛
.
fc⁄ãxt
)

	)

2228 
	#DECL_PACKED
(
NODE
Ë(
	`FIELD_DECL_CHECK
 (NODE)->
ba£
.
u
.
bôs
.
∑cked_Êag
)

	)

2232 
	#DECL_BIT_FIELD
(
NODE
Ë(
	`FIELD_DECL_CHECK
 (NODE)->
de˛_comm⁄
.
de˛_Êag_1
)

	)

2249 
	#DECL_NONADDRESSABLE_P
(
NODE
) \

2250 (
	`FIELD_DECL_CHECK
 (
NODE
)->
de˛_comm⁄
.
de˛_Êag_2
)

	)

2255 
	#LABEL_DECL_UID
(
NODE
) \

2256 (
	`LABEL_DECL_CHECK
 (
NODE
)->
œbñ_de˛
.
œbñ_de˛_uid
)

	)

2260 
	#EH_LANDING_PAD_NR
(
NODE
) \

2261 (
	`LABEL_DECL_CHECK
 (
NODE
)->
œbñ_de˛
.
eh_œndög_∑d_ƒ
)

	)

2265 
	#DECL_ARG_TYPE
(
NODE
Ë(
	`PARM_DECL_CHECK
 (NODE)->
de˛_comm⁄
.
öôül
)

	)

2269 
	#DECL_INCOMING_RTL
(
NODE
) \

2270 (
	`PARM_DECL_CHECK
 (
NODE
)->
∑rm_de˛
.
öcomög_πl
)

	)

2274 
	#DECL_IN_SYSTEM_HEADER
(
NODE
) \

2275 (
	`ö_sy°em_hódî_©
 (
	`DECL_SOURCE_LOCATION
 (
NODE
)))

	)

2279 
	#DECL_DEFER_OUTPUT
(
NODE
) \

2280 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
de„r_ouçut
)

	)

2284 
	#DECL_IN_TEXT_SECTION
(
NODE
) \

2285 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
ö_ãxt_£˘i⁄
)

	)

2289 
	#DECL_IN_CONSTANT_POOL
(
NODE
) \

2290 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
ö_c⁄°™t_poﬁ
)

	)

2295 
	#DECL_COMMON
(
NODE
) \

2296 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
comm⁄_Êag
)

	)

2300 
	#DECL_HARD_REGISTER
(
NODE
) \

2301 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
h¨d_ªgi°î
)

	)

2304 
	#DECL_WEAK
(
NODE
Ë(
	`DECL_WITH_VIS_CHECK
 (NODE)->
de˛_wôh_vis
.
wók_Êag
)

	)

2307 
	#DECL_DLLIMPORT_P
(
NODE
) \

2308 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
dŒimp‹t_Êag
)

	)

2319 
	#DECL_COMDAT
(
NODE
) \

2320 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
comd©_Êag
)

	)

2322 
	#DECL_COMDAT_GROUP
(
NODE
) \

2323 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
comd©_group
)

	)

2327 
	#DECL_ONE_ONLY
(
NODE
Ë(
	`DECL_COMDAT_GROUP
 (NODEË!
NULL_TREE
)

	)

2332 
	#DECL_ASSEMBLER_NAME
(
NODE
Ë
	`de˛_as£mbÀr_«me
 (NODE)

	)

2336 
	#HAS_DECL_ASSEMBLER_NAME_P
(
NODE
) \

2337 (
	`CODE_CONTAINS_STRUCT
 (
	`TREE_CODE
 (
NODE
), 
TS_DECL_WITH_VIS
))

	)

2342 
	#DECL_ASSEMBLER_NAME_SET_P
(
NODE
) \

2343 (
	`HAS_DECL_ASSEMBLER_NAME_P
 (
NODE
) \

2344 && 
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
as£mbÀr_«me
 !
NULL_TREE
)

	)

2347 
	#SET_DECL_ASSEMBLER_NAME
(
NODE
, 
NAME
) \

2348 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
as£mbÀr_«me
 = (
NAME
))

	)

2359 
	#COPY_DECL_ASSEMBLER_NAME
(
DECL1
, 
DECL2
) \

2360 (
	`DECL_ASSEMBLER_NAME_SET_P
 (
DECL1
) \

2361 ? (Ë
	`SET_DECL_ASSEMBLER_NAME
 (
DECL2
, \

2362 
	`DECL_ASSEMBLER_NAME
 (
DECL1
)) \

2363 : (Ë0)

	)

2367 
	#DECL_SECTION_NAME
(
NODE
) \

2368 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
£˘i⁄_«me
)

	)

2372 
	#DECL_SEEN_IN_BIND_EXPR_P
(
NODE
) \

2373 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
£í_ö_böd_ex¥
)

	)

2376 
	#DECL_VISIBILITY
(
NODE
) \

2377 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
visibûôy
)

	)

2381 
	#DECL_VISIBILITY_SPECIFIED
(
NODE
) \

2382 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
visibûôy_•ecifõd
)

	)

2386 
	#DECL_TLS_MODEL
(
NODE
Ë(
	`VAR_DECL_CHECK
 (NODE)->
de˛_wôh_vis
.
és_modñ
)

	)

2390 
	#DECL_THREAD_LOCAL_P
(
NODE
) \

2391 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
és_modñ
 >
TLS_MODEL_REAL
)

	)

2396 
	#DECL_HAS_INIT_PRIORITY_P
(
NODE
) \

2397 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
öô_¥i‹ôy_p
)

	)

2401 
	#DECL_HAS_IMPLICIT_SECTION_NAME_P
(
NODE
) \

2402 (
	`DECL_WITH_VIS_CHECK
 (
NODE
)->
de˛_wôh_vis
.
im∂icô_£˘i⁄_«me_p
)

	)

2404 
åì
 
de˛_debug_ex¥_lookup
 (tree);

2405 
de˛_debug_ex¥_ö£π
 (
åì
,Åree);

2408 
	#DECL_HAS_DEBUG_EXPR_P
(
NODE
) \

2409 (
	`VAR_DECL_CHECK
 (
NODE
)->
de˛_comm⁄
.
debug_ex¥_is_‰om
)

	)

2410 
	#DECL_DEBUG_EXPR
(
NODE
) \

2411 (
	`de˛_debug_ex¥_lookup
 (
	`VAR_DECL_CHECK
 (
NODE
)))

	)

2413 
	#SET_DECL_DEBUG_EXPR
(
NODE
, 
VAL
) \

2414 (
	`de˛_debug_ex¥_ö£π
 (
	`VAR_DECL_CHECK
 (
NODE
), 
VAL
))

	)

2416 
¥i‹ôy_ty≥
 
de˛_öô_¥i‹ôy_lookup
 (
åì
);

2417 
¥i‹ôy_ty≥
 
de˛_föi_¥i‹ôy_lookup
 (
åì
);

2418 
de˛_öô_¥i‹ôy_ö£π
 (
åì
, 
¥i‹ôy_ty≥
);

2419 
de˛_föi_¥i‹ôy_ö£π
 (
åì
, 
¥i‹ôy_ty≥
);

2423 
	#DECL_INIT_PRIORITY
(
NODE
) \

2424 (
	`de˛_öô_¥i‹ôy_lookup
 (
NODE
))

	)

2426 
	#SET_DECL_INIT_PRIORITY
(
NODE
, 
VAL
) \

2427 (
	`de˛_öô_¥i‹ôy_ö£π
 (
NODE
, 
VAL
))

	)

2430 
	#DECL_FINI_PRIORITY
(
NODE
) \

2431 (
	`de˛_föi_¥i‹ôy_lookup
 (
NODE
))

	)

2433 
	#SET_DECL_FINI_PRIORITY
(
NODE
, 
VAL
) \

2434 (
	`de˛_föi_¥i‹ôy_ö£π
 (
NODE
, 
VAL
))

	)

2438 
	#DEFAULT_INIT_PRIORITY
 65535

	)

2441 
	#MAX_INIT_PRIORITY
 65535

	)

2445 
	#MAX_RESERVED_INIT_PRIORITY
 100

	)

2448 
	#VAR_DECL_IS_VIRTUAL_OPERAND
(
NODE
) \

2449 (
	`VAR_DECL_CHECK
 (
NODE
)->
ba£
.
u
.
bôs
.
ßtuøtög_Êag
)

	)

2452 
	#DECL_NONLOCAL_FRAME
(
NODE
) \

2453 (
	`VAR_DECL_CHECK
 (
NODE
)->
ba£
.
deÁu…_def_Êag
)

	)

2456 
	#DECL_NONALIASED
(
NODE
) \

2457 (
	`VAR_DECL_CHECK
 (
NODE
)->
ba£
.
nŸhrow_Êag
)

	)

2461 
	#DECL_RESULT_FLD
(
NODE
) \

2462 (
	`DECL_NON_COMMON_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
ªsu…
)

	)

2472 
	#DECL_VINDEX
(
NODE
) \

2473 (
	`DECL_NON_COMMON_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
vödex
)

	)

2476 
	#DECL_RESULT
(
NODE
Ë(
	`FUNCTION_DECL_CHECK
 (NODE)->
de˛_n⁄_comm⁄
.
ªsu…
)

	)

2479 
	#DECL_UNINLINABLE
(
NODE
) \

2480 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
unölöabÀ
)

	)

2484 
	#DECL_SAVED_TREE
(
NODE
) \

2485 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
ßved_åì
)

	)

2490 
	#DECL_IS_MALLOC
(
NODE
) \

2491 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
mÆloc_Êag
)

	)

2496 
	#DECL_IS_OPERATOR_NEW
(
NODE
) \

2497 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
›î©‹_√w_Êag
)

	)

2501 
	#DECL_IS_RETURNS_TWICE
(
NODE
) \

2502 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
ªtu∫s_twi˚_Êag
)

	)

2506 
	#DECL_PURE_P
(
NODE
Ë(
	`FUNCTION_DECL_CHECK
 (NODE)->
fun˘i⁄_de˛
.
puª_Êag
)

	)

2514 
	#DECL_LOOPING_CONST_OR_PURE_P
(
NODE
) \

2515 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
lo›ög_c⁄°_‹_puª_Êag
)

	)

2520 
	#DECL_IS_NOVOPS
(
NODE
) \

2521 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
nov›s_Êag
)

	)

2525 
	#DECL_STATIC_CONSTRUCTOR
(
NODE
) \

2526 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
°©ic_˘‹_Êag
)

	)

2528 
	#DECL_STATIC_DESTRUCTOR
(
NODE
) \

2529 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
°©ic_dt‹_Êag
)

	)

2533 
	#DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT
(
NODE
) \

2534 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
no_ö°rumít_fun˘i⁄_íåy_exô
)

	)

2538 
	#DECL_NO_LIMIT_STACK
(
NODE
) \

2539 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
no_limô_°ack
)

	)

2542 
	#DECL_STATIC_CHAIN
(
NODE
) \

2543 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
ªgde˛_Êag
)

	)

2548 
	#DECL_POSSIBLY_INLINED
(
DECL
) \

2549 
	`FUNCTION_DECL_CHECK
 (
DECL
)->
fun˘i⁄_de˛
.
possibly_ölöed


	)

2554 
	#DECL_DECLARED_INLINE_P
(
NODE
) \

2555 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
de˛¨ed_ölöe_Êag
)

	)

2559 
	#DECL_NO_INLINE_WARNING_P
(
NODE
) \

2560 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
no_ölöe_w¨nög_Êag
)

	)

2563 
	#BUILTIN_TM_LOAD_STORE_P
(
FN
) \

2564 ((
FN
Ë>
BUILT_IN_TM_STORE_1
 && (FNË<
BUILT_IN_TM_LOAD_RFW_LDOUBLE
)

	)

2567 
	#BUILTIN_TM_LOAD_P
(
FN
) \

2568 ((
FN
Ë>
BUILT_IN_TM_LOAD_1
 && (FNË<
BUILT_IN_TM_LOAD_RFW_LDOUBLE
)

	)

2571 
	#BUILTIN_TM_STORE_P
(
FN
) \

2572 ((
FN
Ë>
BUILT_IN_TM_STORE_1
 && (FNË<
BUILT_IN_TM_STORE_WAW_LDOUBLE
)

	)

2574 
	#CASE_BUILT_IN_TM_LOAD
(
FN
) \

2575 
BUILT_IN_TM_LOAD_
##
FN
: \

2576 
BUILT_IN_TM_LOAD_RAR_
##
FN
: \

2577 
BUILT_IN_TM_LOAD_RAW_
##
FN
: \

2578 
BUILT_IN_TM_LOAD_RFW_
##
FN


	)

2580 
	#CASE_BUILT_IN_TM_STORE
(
FN
) \

2581 
BUILT_IN_TM_STORE_
##
FN
: \

2582 
BUILT_IN_TM_STORE_WAR_
##
FN
: \

2583 
BUILT_IN_TM_STORE_WAW_
##
FN


	)

2589 
	#DECL_DISREGARD_INLINE_LIMITS
(
NODE
) \

2590 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
di§eg¨d_ölöe_limôs
)

	)

2592 
vec
<
åì
, 
va_gc
> **
de˛_debug_¨gs_lookup
 (tree);

2593 
vec
<
åì
, 
va_gc
> **
de˛_debug_¨gs_ö£π
 (tree);

2596 
	#DECL_HAS_DEBUG_ARGS_P
(
NODE
) \

2597 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
has_debug_¨gs_Êag
)

	)

2601 
	#DECL_STRUCT_FUNCTION
(
NODE
) \

2602 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
f
)

	)

2611 
	#DECL_BUILT_IN
(
NODE
Ë(
	`DECL_BUILT_IN_CLASS
 (NODEË!
NOT_BUILT_IN
)

	)

2614 
	#DECL_BUILT_IN_CLASS
(
NODE
) \

2615 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
buût_ö_˛ass
)

	)

2620 
	#DECL_ARGUMENTS
(
NODE
) \

2621 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
¨gumíts
)

	)

2622 
	#DECL_ARGUMENT_FLD
(
NODE
) \

2623 (
	`DECL_NON_COMMON_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
¨gumíts
)

	)

2627 
	#DECL_FUNCTION_SPECIFIC_TARGET
(
NODE
) \

2628 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
fun˘i⁄_•ecific_èrgë
)

	)

2632 
	#DECL_FUNCTION_SPECIFIC_OPTIMIZATION
(
NODE
) \

2633 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
fun˘i⁄_•ecific_›timiz©i⁄
)

	)

2638 
	#DECL_FUNCTION_VERSIONED
(
NODE
)\

2639 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
fun˘i⁄_de˛
.
vîsi⁄ed_fun˘i⁄
)

	)

2645 
	#DECL_CXX_CONSTRUCTOR_P
(
NODE
)\

2646 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
cxx_c⁄°ru˘‹
)

	)

2650 
	#DECL_CXX_DESTRUCTOR_P
(
NODE
)\

2651 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
cxx_de°ru˘‹
)

	)

2655 
	#DECL_FINAL_P
(
NODE
)\

2656 (
	`FUNCTION_DECL_CHECK
 (
NODE
)->
de˛_wôh_vis
.
föÆ
)

	)

2659 
	#TRANSLATION_UNIT_LANGUAGE
(
NODE
) \

2660 (
	`TRANSLATION_UNIT_DECL_CHECK
 (
NODE
)->
å™¶©i⁄_unô_de˛
.
œnguage
)

	)

2665 
	#DECL_ORIGINAL_TYPE
(
NODE
) \

2666 (
	`TYPE_DECL_CHECK
 (
NODE
)->
de˛_n⁄_comm⁄
.
ªsu…
)

	)

2671 
	#TYPE_DECL_SUPPRESS_DEBUG
(
NODE
) \

2672 (
	`TYPE_DECL_CHECK
 (
NODE
)->
de˛_comm⁄
.
de˛_Êag_1
)

	)

2676 
	#IMPORTED_DECL_ASSOCIATED_DECL
(
NODE
) \

2677 (
	`DECL_INITIAL
 (
	`IMPORTED_DECL_CHECK
 (
NODE
)))

	)

2681 
	#NAMELIST_DECL_ASSOCIATED_DECL
(
NODE
) \

2682 (
	`DECL_INITIAL
 (
NODE
))

	)

2690 
	#STATEMENT_LIST_HEAD
(
NODE
) \

2691 (
	`STATEMENT_LIST_CHECK
 (
NODE
)->
°mt_li°
.
hód
)

	)

2692 
	#STATEMENT_LIST_TAIL
(
NODE
) \

2693 (
	`STATEMENT_LIST_CHECK
 (
NODE
)->
°mt_li°
.
èû
)

	)

2695 
	#TREE_OPTIMIZATION
(
NODE
) \

2696 (&
	`OPTIMIZATION_NODE_CHECK
 (
NODE
)->
›timiz©i⁄
.
›ts
)

	)

2698 
	#TREE_OPTIMIZATION_OPTABS
(
NODE
) \

2699 (
	`OPTIMIZATION_NODE_CHECK
 (
NODE
)->
›timiz©i⁄
.
›èbs
)

	)

2701 
	#TREE_OPTIMIZATION_BASE_OPTABS
(
NODE
) \

2702 (
	`OPTIMIZATION_NODE_CHECK
 (
NODE
)->
›timiz©i⁄
.
ba£_›èbs
)

	)

2705 
åì
 
buûd_›timiz©i⁄_node
 (
gcc_›ti⁄s
 *
›ts
);

2707 
	#TREE_TARGET_OPTION
(
NODE
) \

2708 (&
	`TARGET_OPTION_NODE_CHECK
 (
NODE
)->
èrgë_›ti⁄
.
›ts
)

	)

2710 
	#TREE_TARGET_GLOBALS
(
NODE
) \

2711 (
	`TARGET_OPTION_NODE_CHECK
 (
NODE
)->
èrgë_›ti⁄
.
globÆs
)

	)

2714 
åì
 
buûd_èrgë_›ti⁄_node
 (
gcc_›ti⁄s
 *
›ts
);

2716 
¥ï¨e_èrgë_›ti⁄_nodes_f‹_pch
 ();

2718 #i‡
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 2007)

2720 
ölöe
 
åì


2721 
	$åì_check
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
, 
åì_code
 
__c
)

2723 i‡(
	`TREE_CODE
 (
__t
Ë!
__c
)

2724 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c
, 0);

2725  
__t
;

2726 
	}
}

2728 
ölöe
 
åì


2729 
	$åì_nŸ_check
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2730 
åì_code
 
__c
)

2732 i‡(
	`TREE_CODE
 (
__t
Ë=
__c
)

2733 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c
, 0);

2734  
__t
;

2735 
	}
}

2737 
ölöe
 
åì


2738 
	$åì_check2
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2739 
åì_code
 
__c1
, åì_codê
__c2
)

2741 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2742 && 
	`TREE_CODE
 (
__t
Ë!
__c2
)

2743 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 0);

2744  
__t
;

2745 
	}
}

2747 
ölöe
 
åì


2748 
	$åì_nŸ_check2
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2749 
åì_code
 
__c1
, åì_codê
__c2
)

2751 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


2752 || 
	`TREE_CODE
 (
__t
Ë=
__c2
)

2753 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 0);

2754  
__t
;

2755 
	}
}

2757 
ölöe
 
åì


2758 
	$åì_check3
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2759 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
)

2761 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2762 && 
	`TREE_CODE
 (
__t
Ë!
__c2


2763 && 
	`TREE_CODE
 (
__t
Ë!
__c3
)

2764 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 0);

2765  
__t
;

2766 
	}
}

2768 
ölöe
 
åì


2769 
	$åì_nŸ_check3
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2770 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
)

2772 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


2773 || 
	`TREE_CODE
 (
__t
Ë=
__c2


2774 || 
	`TREE_CODE
 (
__t
Ë=
__c3
)

2775 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 0);

2776  
__t
;

2777 
	}
}

2779 
ölöe
 
åì


2780 
	$åì_check4
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2781 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

2782 
åì_code
 
__c4
)

2784 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2785 && 
	`TREE_CODE
 (
__t
Ë!
__c2


2786 && 
	`TREE_CODE
 (
__t
Ë!
__c3


2787 && 
	`TREE_CODE
 (
__t
Ë!
__c4
)

2788 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 0);

2789  
__t
;

2790 
	}
}

2792 
ölöe
 
åì


2793 
	$åì_nŸ_check4
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2794 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

2795 
åì_code
 
__c4
)

2797 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


2798 || 
	`TREE_CODE
 (
__t
Ë=
__c2


2799 || 
	`TREE_CODE
 (
__t
Ë=
__c3


2800 || 
	`TREE_CODE
 (
__t
Ë=
__c4
)

2801 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 0);

2802  
__t
;

2803 
	}
}

2805 
ölöe
 
åì


2806 
	$åì_check5
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2807 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

2808 
åì_code
 
__c4
, åì_codê
__c5
)

2810 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2811 && 
	`TREE_CODE
 (
__t
Ë!
__c2


2812 && 
	`TREE_CODE
 (
__t
Ë!
__c3


2813 && 
	`TREE_CODE
 (
__t
Ë!
__c4


2814 && 
	`TREE_CODE
 (
__t
Ë!
__c5
)

2815 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 
__c5
, 0);

2816  
__t
;

2817 
	}
}

2819 
ölöe
 
åì


2820 
	$åì_nŸ_check5
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2821 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

2822 
åì_code
 
__c4
, åì_codê
__c5
)

2824 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


2825 || 
	`TREE_CODE
 (
__t
Ë=
__c2


2826 || 
	`TREE_CODE
 (
__t
Ë=
__c3


2827 || 
	`TREE_CODE
 (
__t
Ë=
__c4


2828 || 
	`TREE_CODE
 (
__t
Ë=
__c5
)

2829 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 
__c5
, 0);

2830  
__t
;

2831 
	}
}

2833 
ölöe
 
åì


2834 
	$c⁄èös_°ru˘_check
 (
åì
 
__t
, c⁄° 
åì_node_°ru˘uª_íum
 
__s
,

2835 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2837 i‡(
åì_c⁄èös_°ru˘
[
	`TREE_CODE
 (
__t
)][
__s
] != 1)

2838 
	`åì_c⁄èös_°ru˘_check_Áûed
 (
__t
, 
__s
, 
__f
, 
__l
, 
__g
);

2839  
__t
;

2840 
	}
}

2842 
ölöe
 
åì


2843 
	$åì_˛ass_check
 (
åì
 
__t
, c⁄° 
åì_code_˛ass
 
__˛ass
,

2844 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2846 i‡(
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
__t
)Ë!
__˛ass
)

2847 
	`åì_˛ass_check_Áûed
 (
__t
, 
__˛ass
, 
__f
, 
__l
, 
__g
);

2848  
__t
;

2849 
	}
}

2851 
ölöe
 
åì


2852 
	$åì_ønge_check
 (
åì
 
__t
,

2853 
åì_code
 
__code1
, åì_codê
__code2
,

2854 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2856 i‡(
	`TREE_CODE
 (
__t
Ë< 
__code1
 || TREE_CODE (__tË> 
__code2
)

2857 
	`åì_ønge_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code1
, 
__code2
);

2858  
__t
;

2859 
	}
}

2861 
ölöe
 
åì


2862 
	$omp_˛au£_subcode_check
 (
åì
 
__t
, 
omp_˛au£_code
 
__code
,

2863 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2865 i‡(
	`TREE_CODE
 (
__t
Ë!
OMP_CLAUSE
)

2866 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
OMP_CLAUSE
, 0);

2867 i‡(
__t
->
omp_˛au£
.
code
 !
__code
)

2868 
	`omp_˛au£_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code
);

2869  
__t
;

2870 
	}
}

2872 
ölöe
 
åì


2873 
	$omp_˛au£_ønge_check
 (
åì
 
__t
,

2874 
omp_˛au£_code
 
__code1
,

2875 
omp_˛au£_code
 
__code2
,

2876 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2878 i‡(
	`TREE_CODE
 (
__t
Ë!
OMP_CLAUSE
)

2879 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
OMP_CLAUSE
, 0);

2880 i‡((Ë
__t
->
omp_˛au£
.
code
 < (Ë
__code1


2881 || (Ë
__t
->
omp_˛au£
.
code
 > (Ë
__code2
)

2882 
	`omp_˛au£_ønge_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code1
, 
__code2
);

2883  
__t
;

2884 
	}
}

2888 
ölöe
 
åì


2889 
	$ex¥_check
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2891 c⁄° 
__c
 = 
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
__t
));

2892 i‡(!
	`IS_EXPR_CODE_CLASS
 (
__c
))

2893 
	`åì_˛ass_check_Áûed
 (
__t
, 
tcc_ex¥essi⁄
, 
__f
, 
__l
, 
__g
);

2894  
__t
;

2895 
	}
}

2899 
ölöe
 
åì


2900 
	$n⁄_ty≥_check
 (
åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2902 i‡(
	`TYPE_P
 (
__t
))

2903 
	`åì_nŸ_˛ass_check_Áûed
 (
__t
, 
tcc_ty≥
, 
__f
, 
__l
, 
__g
);

2904  
__t
;

2905 
	}
}

2907 
ölöe
 
åì
 *

2908 
	$åì_vec_ñt_check
 (
åì
 
__t
, 
__i
,

2909 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2911 i‡(
	`TREE_CODE
 (
__t
Ë!
TREE_VEC
)

2912 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
TREE_VEC
, 0);

2913 i‡(
__i
 < 0 || __ò>
__t
->
ba£
.
u
.
Àngth
)

2914 
	`åì_vec_ñt_check_Áûed
 (
__i
, 
__t
->
ba£
.
u
.
Àngth
, 
__f
, 
__l
, 
__g
);

2915  &
	`CONST_CAST_TREE
 (
__t
)->
vec
.
a
[
__i
];

2916 
	}
}

2918 
ölöe
 
åì
 *

2919 
	$omp_˛au£_ñt_check
 (
åì
 
__t
, 
__i
,

2920 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

2922 i‡(
	`TREE_CODE
 (
__t
Ë!
OMP_CLAUSE
)

2923 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
OMP_CLAUSE
, 0);

2924 i‡(
__i
 < 0 || __ò>
omp_˛au£_num_›s
 [
__t
->
omp_˛au£
.
code
])

2925 
	`omp_˛au£_›î™d_check_Áûed
 (
__i
, 
__t
, 
__f
, 
__l
, 
__g
);

2926  &
__t
->
omp_˛au£
.
›s
[
__i
];

2927 
	}
}

2929 
ölöe
 
c⁄°_åì


2930 
	$åì_check
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2931 
åì_code
 
__c
)

2933 i‡(
	`TREE_CODE
 (
__t
Ë!
__c
)

2934 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c
, 0);

2935  
__t
;

2936 
	}
}

2938 
ölöe
 
c⁄°_åì


2939 
	$åì_nŸ_check
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2940 
åì_code
 
__c
)

2942 i‡(
	`TREE_CODE
 (
__t
Ë=
__c
)

2943 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c
, 0);

2944  
__t
;

2945 
	}
}

2947 
ölöe
 
c⁄°_åì


2948 
	$åì_check2
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2949 
åì_code
 
__c1
, åì_codê
__c2
)

2951 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2952 && 
	`TREE_CODE
 (
__t
Ë!
__c2
)

2953 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 0);

2954  
__t
;

2955 
	}
}

2957 
ölöe
 
c⁄°_åì


2958 
	$åì_nŸ_check2
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2959 
åì_code
 
__c1
, åì_codê
__c2
)

2961 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


2962 || 
	`TREE_CODE
 (
__t
Ë=
__c2
)

2963 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 0);

2964  
__t
;

2965 
	}
}

2967 
ölöe
 
c⁄°_åì


2968 
	$åì_check3
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2969 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
)

2971 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2972 && 
	`TREE_CODE
 (
__t
Ë!
__c2


2973 && 
	`TREE_CODE
 (
__t
Ë!
__c3
)

2974 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 0);

2975  
__t
;

2976 
	}
}

2978 
ölöe
 
c⁄°_åì


2979 
	$åì_nŸ_check3
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2980 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
)

2982 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


2983 || 
	`TREE_CODE
 (
__t
Ë=
__c2


2984 || 
	`TREE_CODE
 (
__t
Ë=
__c3
)

2985 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 0);

2986  
__t
;

2987 
	}
}

2989 
ölöe
 
c⁄°_åì


2990 
	$åì_check4
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

2991 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

2992 
åì_code
 
__c4
)

2994 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


2995 && 
	`TREE_CODE
 (
__t
Ë!
__c2


2996 && 
	`TREE_CODE
 (
__t
Ë!
__c3


2997 && 
	`TREE_CODE
 (
__t
Ë!
__c4
)

2998 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 0);

2999  
__t
;

3000 
	}
}

3002 
ölöe
 
c⁄°_åì


3003 
	$åì_nŸ_check4
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

3004 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

3005 
åì_code
 
__c4
)

3007 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


3008 || 
	`TREE_CODE
 (
__t
Ë=
__c2


3009 || 
	`TREE_CODE
 (
__t
Ë=
__c3


3010 || 
	`TREE_CODE
 (
__t
Ë=
__c4
)

3011 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 0);

3012  
__t
;

3013 
	}
}

3015 
ölöe
 
c⁄°_åì


3016 
	$åì_check5
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

3017 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

3018 
åì_code
 
__c4
, åì_codê
__c5
)

3020 i‡(
	`TREE_CODE
 (
__t
Ë!
__c1


3021 && 
	`TREE_CODE
 (
__t
Ë!
__c2


3022 && 
	`TREE_CODE
 (
__t
Ë!
__c3


3023 && 
	`TREE_CODE
 (
__t
Ë!
__c4


3024 && 
	`TREE_CODE
 (
__t
Ë!
__c5
)

3025 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 
__c5
, 0);

3026  
__t
;

3027 
	}
}

3029 
ölöe
 
c⁄°_åì


3030 
	$åì_nŸ_check5
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
,

3031 
åì_code
 
__c1
, åì_codê
__c2
, åì_codê
__c3
,

3032 
åì_code
 
__c4
, åì_codê
__c5
)

3034 i‡(
	`TREE_CODE
 (
__t
Ë=
__c1


3035 || 
	`TREE_CODE
 (
__t
Ë=
__c2


3036 || 
	`TREE_CODE
 (
__t
Ë=
__c3


3037 || 
	`TREE_CODE
 (
__t
Ë=
__c4


3038 || 
	`TREE_CODE
 (
__t
Ë=
__c5
)

3039 
	`åì_nŸ_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__c1
, 
__c2
, 
__c3
, 
__c4
, 
__c5
, 0);

3040  
__t
;

3041 
	}
}

3043 
ölöe
 
c⁄°_åì


3044 
	$c⁄èös_°ru˘_check
 (
c⁄°_åì
 
__t
, c⁄° 
åì_node_°ru˘uª_íum
 
__s
,

3045 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3047 i‡(
åì_c⁄èös_°ru˘
[
	`TREE_CODE
 (
__t
)][
__s
] != 1)

3048 
	`åì_c⁄èös_°ru˘_check_Áûed
 (
__t
, 
__s
, 
__f
, 
__l
, 
__g
);

3049  
__t
;

3050 
	}
}

3052 
ölöe
 
c⁄°_åì


3053 
	$åì_˛ass_check
 (
c⁄°_åì
 
__t
, c⁄° 
åì_code_˛ass
 
__˛ass
,

3054 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3056 i‡(
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
__t
)Ë!
__˛ass
)

3057 
	`åì_˛ass_check_Áûed
 (
__t
, 
__˛ass
, 
__f
, 
__l
, 
__g
);

3058  
__t
;

3059 
	}
}

3061 
ölöe
 
c⁄°_åì


3062 
	$åì_ønge_check
 (
c⁄°_åì
 
__t
,

3063 
åì_code
 
__code1
, åì_codê
__code2
,

3064 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3066 i‡(
	`TREE_CODE
 (
__t
Ë< 
__code1
 || TREE_CODE (__tË> 
__code2
)

3067 
	`åì_ønge_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code1
, 
__code2
);

3068  
__t
;

3069 
	}
}

3071 
ölöe
 
c⁄°_åì


3072 
	$omp_˛au£_subcode_check
 (
c⁄°_åì
 
__t
, 
omp_˛au£_code
 
__code
,

3073 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3075 i‡(
	`TREE_CODE
 (
__t
Ë!
OMP_CLAUSE
)

3076 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
OMP_CLAUSE
, 0);

3077 i‡(
__t
->
omp_˛au£
.
code
 !
__code
)

3078 
	`omp_˛au£_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code
);

3079  
__t
;

3080 
	}
}

3082 
ölöe
 
c⁄°_åì


3083 
	$omp_˛au£_ønge_check
 (
c⁄°_åì
 
__t
,

3084 
omp_˛au£_code
 
__code1
,

3085 
omp_˛au£_code
 
__code2
,

3086 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3088 i‡(
	`TREE_CODE
 (
__t
Ë!
OMP_CLAUSE
)

3089 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
OMP_CLAUSE
, 0);

3090 i‡((Ë
__t
->
omp_˛au£
.
code
 < (Ë
__code1


3091 || (Ë
__t
->
omp_˛au£
.
code
 > (Ë
__code2
)

3092 
	`omp_˛au£_ønge_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code1
, 
__code2
);

3093  
__t
;

3094 
	}
}

3096 
ölöe
 
c⁄°_åì


3097 
	$ex¥_check
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3099 c⁄° 
__c
 = 
	`TREE_CODE_CLASS
 (
	`TREE_CODE
 (
__t
));

3100 i‡(!
	`IS_EXPR_CODE_CLASS
 (
__c
))

3101 
	`åì_˛ass_check_Áûed
 (
__t
, 
tcc_ex¥essi⁄
, 
__f
, 
__l
, 
__g
);

3102  
__t
;

3103 
	}
}

3105 
ölöe
 
c⁄°_åì


3106 
	$n⁄_ty≥_check
 (
c⁄°_åì
 
__t
, c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3108 i‡(
	`TYPE_P
 (
__t
))

3109 
	`åì_nŸ_˛ass_check_Áûed
 (
__t
, 
tcc_ty≥
, 
__f
, 
__l
, 
__g
);

3110  
__t
;

3111 
	}
}

3113 
ölöe
 
c⁄°_åì
 *

3114 
	$åì_vec_ñt_check
 (
c⁄°_åì
 
__t
, 
__i
,

3115 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3117 i‡(
	`TREE_CODE
 (
__t
Ë!
TREE_VEC
)

3118 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
TREE_VEC
, 0);

3119 i‡(
__i
 < 0 || __ò>
__t
->
ba£
.
u
.
Àngth
)

3120 
	`åì_vec_ñt_check_Áûed
 (
__i
, 
__t
->
ba£
.
u
.
Àngth
, 
__f
, 
__l
, 
__g
);

3121  
	`CONST_CAST
 (
c⁄°_åì
 *, &
__t
->
vec
.
a
[
__i
]);

3123 
	}
}

3125 
ölöe
 
c⁄°_åì
 *

3126 
	$omp_˛au£_ñt_check
 (
c⁄°_åì
 
__t
, 
__i
,

3127 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3129 i‡(
	`TREE_CODE
 (
__t
Ë!
OMP_CLAUSE
)

3130 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
OMP_CLAUSE
, 0);

3131 i‡(
__i
 < 0 || __ò>
omp_˛au£_num_›s
 [
__t
->
omp_˛au£
.
code
])

3132 
	`omp_˛au£_›î™d_check_Áûed
 (
__i
, 
__t
, 
__f
, 
__l
, 
__g
);

3133  
	`CONST_CAST
 (
c⁄°_åì
 *, &
__t
->
omp_˛au£
.
›s
[
__i
]);

3134 
	}
}

3141 
ölöe
 

3142 
	$åì_›î™d_Àngth
 (
c⁄°_åì
 
node
)

3144 i‡(
	`VL_EXP_CLASS_P
 (
node
))

3145  
	`VL_EXP_OPERAND_LENGTH
 (
node
);

3147  
	`TREE_CODE_LENGTH
 (
	`TREE_CODE
 (
node
));

3148 
	}
}

3150 #i‡
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 2007)

3153 
ölöe
 
åì
 *

3154 
	$åì_›î™d_check
 (
åì
 
__t
, 
__i
,

3155 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3157 
c⁄°_åì
 
__u
 = 
	`EXPR_CHECK
 (
__t
);

3158 i‡(
__i
 < 0 || __ò>
	`TREE_OPERAND_LENGTH
 (
__u
))

3159 
	`åì_›î™d_check_Áûed
 (
__i
, 
__u
, 
__f
, 
__l
, 
__g
);

3160  &
	`CONST_CAST_TREE
 (
__u
)->
exp
.
›î™ds
[
__i
];

3161 
	}
}

3163 
ölöe
 
åì
 *

3164 
	$åì_›î™d_check_code
 (
åì
 
__t
, 
åì_code
 
__code
, 
__i
,

3165 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3167 i‡(
	`TREE_CODE
 (
__t
Ë!
__code
)

3168 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code
, 0);

3169 i‡(
__i
 < 0 || __ò>
	`TREE_OPERAND_LENGTH
 (
__t
))

3170 
	`åì_›î™d_check_Áûed
 (
__i
, 
__t
, 
__f
, 
__l
, 
__g
);

3171  &
__t
->
exp
.
›î™ds
[
__i
];

3172 
	}
}

3174 
ölöe
 
c⁄°_åì
 *

3175 
	$åì_›î™d_check
 (
c⁄°_åì
 
__t
, 
__i
,

3176 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3178 
c⁄°_åì
 
__u
 = 
	`EXPR_CHECK
 (
__t
);

3179 i‡(
__i
 < 0 || __ò>
	`TREE_OPERAND_LENGTH
 (
__u
))

3180 
	`åì_›î™d_check_Áûed
 (
__i
, 
__u
, 
__f
, 
__l
, 
__g
);

3181  
	`CONST_CAST
 (
c⁄°_åì
 *, &
__u
->
exp
.
›î™ds
[
__i
]);

3182 
	}
}

3184 
ölöe
 
c⁄°_åì
 *

3185 
	$åì_›î™d_check_code
 (
c⁄°_åì
 
__t
, 
åì_code
 
__code
, 
__i
,

3186 c⁄° *
__f
, 
__l
, c⁄° *
__g
)

3188 i‡(
	`TREE_CODE
 (
__t
Ë!
__code
)

3189 
	`åì_check_Áûed
 (
__t
, 
__f
, 
__l
, 
__g
, 
__code
, 0);

3190 i‡(
__i
 < 0 || __ò>
	`TREE_OPERAND_LENGTH
 (
__t
))

3191 
	`åì_›î™d_check_Áûed
 (
__i
, 
__t
, 
__f
, 
__l
, 
__g
);

3192  
	`CONST_CAST
 (
c⁄°_åì
 *, &
__t
->
exp
.
›î™ds
[
__i
]);

3193 
	}
}

3197 
	#îr‹_m¨k_node
 
globÆ_åìs
[
TI_ERROR_MARK
]

	)

3199 
	#ötQI_ty≥_node
 
globÆ_åìs
[
TI_INTQI_TYPE
]

	)

3200 
	#ötHI_ty≥_node
 
globÆ_åìs
[
TI_INTHI_TYPE
]

	)

3201 
	#ötSI_ty≥_node
 
globÆ_åìs
[
TI_INTSI_TYPE
]

	)

3202 
	#ötDI_ty≥_node
 
globÆ_åìs
[
TI_INTDI_TYPE
]

	)

3203 
	#ötTI_ty≥_node
 
globÆ_åìs
[
TI_INTTI_TYPE
]

	)

3205 
	#unsig√d_ötQI_ty≥_node
 
globÆ_åìs
[
TI_UINTQI_TYPE
]

	)

3206 
	#unsig√d_ötHI_ty≥_node
 
globÆ_åìs
[
TI_UINTHI_TYPE
]

	)

3207 
	#unsig√d_ötSI_ty≥_node
 
globÆ_åìs
[
TI_UINTSI_TYPE
]

	)

3208 
	#unsig√d_ötDI_ty≥_node
 
globÆ_åìs
[
TI_UINTDI_TYPE
]

	)

3209 
	#unsig√d_ötTI_ty≥_node
 
globÆ_åìs
[
TI_UINTTI_TYPE
]

	)

3211 
	#©omicQI_ty≥_node
 
globÆ_åìs
[
TI_ATOMICQI_TYPE
]

	)

3212 
	#©omicHI_ty≥_node
 
globÆ_åìs
[
TI_ATOMICHI_TYPE
]

	)

3213 
	#©omicSI_ty≥_node
 
globÆ_åìs
[
TI_ATOMICSI_TYPE
]

	)

3214 
	#©omicDI_ty≥_node
 
globÆ_åìs
[
TI_ATOMICDI_TYPE
]

	)

3215 
	#©omicTI_ty≥_node
 
globÆ_åìs
[
TI_ATOMICTI_TYPE
]

	)

3217 
	#uöt16_ty≥_node
 
globÆ_åìs
[
TI_UINT16_TYPE
]

	)

3218 
	#uöt32_ty≥_node
 
globÆ_åìs
[
TI_UINT32_TYPE
]

	)

3219 
	#uöt64_ty≥_node
 
globÆ_åìs
[
TI_UINT64_TYPE
]

	)

3221 
	#öãgî_zîo_node
 
globÆ_åìs
[
TI_INTEGER_ZERO
]

	)

3222 
	#öãgî_⁄e_node
 
globÆ_åìs
[
TI_INTEGER_ONE
]

	)

3223 
	#öãgî_thªe_node
 
globÆ_åìs
[
TI_INTEGER_THREE
]

	)

3224 
	#öãgî_möus_⁄e_node
 
globÆ_åìs
[
TI_INTEGER_MINUS_ONE
]

	)

3225 
	#size_zîo_node
 
globÆ_åìs
[
TI_SIZE_ZERO
]

	)

3226 
	#size_⁄e_node
 
globÆ_åìs
[
TI_SIZE_ONE
]

	)

3227 
	#bôsize_zîo_node
 
globÆ_åìs
[
TI_BITSIZE_ZERO
]

	)

3228 
	#bôsize_⁄e_node
 
globÆ_åìs
[
TI_BITSIZE_ONE
]

	)

3229 
	#bôsize_unô_node
 
globÆ_åìs
[
TI_BITSIZE_UNIT
]

	)

3232 
	#ac˚ss_public_node
 
globÆ_åìs
[
TI_PUBLIC
]

	)

3233 
	#ac˚ss_¥Ÿe˘ed_node
 
globÆ_åìs
[
TI_PROTECTED
]

	)

3234 
	#ac˚ss_¥iv©e_node
 
globÆ_åìs
[
TI_PRIVATE
]

	)

3236 
	#nuŒ_poöãr_node
 
globÆ_åìs
[
TI_NULL_POINTER
]

	)

3238 
	#Êﬂt_ty≥_node
 
globÆ_åìs
[
TI_FLOAT_TYPE
]

	)

3239 
	#doubÀ_ty≥_node
 
globÆ_åìs
[
TI_DOUBLE_TYPE
]

	)

3240 
	#l⁄g_doubÀ_ty≥_node
 
globÆ_åìs
[
TI_LONG_DOUBLE_TYPE
]

	)

3242 
	#Êﬂt_±r_ty≥_node
 
globÆ_åìs
[
TI_FLOAT_PTR_TYPE
]

	)

3243 
	#doubÀ_±r_ty≥_node
 
globÆ_åìs
[
TI_DOUBLE_PTR_TYPE
]

	)

3244 
	#l⁄g_doubÀ_±r_ty≥_node
 
globÆ_åìs
[
TI_LONG_DOUBLE_PTR_TYPE
]

	)

3245 
	#öãgî_±r_ty≥_node
 
globÆ_åìs
[
TI_INTEGER_PTR_TYPE
]

	)

3247 
	#com∂ex_öãgî_ty≥_node
 
globÆ_åìs
[
TI_COMPLEX_INTEGER_TYPE
]

	)

3248 
	#com∂ex_Êﬂt_ty≥_node
 
globÆ_åìs
[
TI_COMPLEX_FLOAT_TYPE
]

	)

3249 
	#com∂ex_doubÀ_ty≥_node
 
globÆ_åìs
[
TI_COMPLEX_DOUBLE_TYPE
]

	)

3250 
	#com∂ex_l⁄g_doubÀ_ty≥_node
 
globÆ_åìs
[
TI_COMPLEX_LONG_DOUBLE_TYPE
]

	)

3252 
	#void_ty≥_node
 
globÆ_åìs
[
TI_VOID_TYPE
]

	)

3254 
	#±r_ty≥_node
 
globÆ_åìs
[
TI_PTR_TYPE
]

	)

3256 
	#c⁄°_±r_ty≥_node
 
globÆ_åìs
[
TI_CONST_PTR_TYPE
]

	)

3258 
	#size_ty≥_node
 
globÆ_åìs
[
TI_SIZE_TYPE
]

	)

3259 
	#pid_ty≥_node
 
globÆ_åìs
[
TI_PID_TYPE
]

	)

3260 
	#±rdiff_ty≥_node
 
globÆ_åìs
[
TI_PTRDIFF_TYPE
]

	)

3261 
	#va_li°_ty≥_node
 
globÆ_åìs
[
TI_VA_LIST_TYPE
]

	)

3262 
	#va_li°_g¥_cou¡î_fõld
 
globÆ_åìs
[
TI_VA_LIST_GPR_COUNTER_FIELD
]

	)

3263 
	#va_li°_Âr_cou¡î_fõld
 
globÆ_åìs
[
TI_VA_LIST_FPR_COUNTER_FIELD
]

	)

3265 
	#fûïå_ty≥_node
 
globÆ_åìs
[
TI_FILEPTR_TYPE
]

	)

3266 
	#poöãr_sized_öt_node
 
globÆ_åìs
[
TI_POINTER_SIZED_TYPE
]

	)

3268 
	#boﬁón_ty≥_node
 
globÆ_åìs
[
TI_BOOLEAN_TYPE
]

	)

3269 
	#boﬁón_Ál£_node
 
globÆ_åìs
[
TI_BOOLEAN_FALSE
]

	)

3270 
	#boﬁón_åue_node
 
globÆ_åìs
[
TI_BOOLEAN_TRUE
]

	)

3273 
	#dÊﬂt32_ty≥_node
 
globÆ_åìs
[
TI_DFLOAT32_TYPE
]

	)

3274 
	#dÊﬂt64_ty≥_node
 
globÆ_åìs
[
TI_DFLOAT64_TYPE
]

	)

3275 
	#dÊﬂt128_ty≥_node
 
globÆ_åìs
[
TI_DFLOAT128_TYPE
]

	)

3276 
	#dÊﬂt32_±r_ty≥_node
 
globÆ_åìs
[
TI_DFLOAT32_PTR_TYPE
]

	)

3277 
	#dÊﬂt64_±r_ty≥_node
 
globÆ_åìs
[
TI_DFLOAT64_PTR_TYPE
]

	)

3278 
	#dÊﬂt128_±r_ty≥_node
 
globÆ_åìs
[
TI_DFLOAT128_PTR_TYPE
]

	)

3281 
	#ßt_sh‹t_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_SAT_SFRACT_TYPE
]

	)

3282 
	#ßt_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_SAT_FRACT_TYPE
]

	)

3283 
	#ßt_l⁄g_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_SAT_LFRACT_TYPE
]

	)

3284 
	#ßt_l⁄g_l⁄g_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_SAT_LLFRACT_TYPE
]

	)

3285 
	#ßt_unsig√d_sh‹t_‰a˘_ty≥_node
 \

3286 
globÆ_åìs
[
TI_SAT_USFRACT_TYPE
]

	)

3287 
	#ßt_unsig√d_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_SAT_UFRACT_TYPE
]

	)

3288 
	#ßt_unsig√d_l⁄g_‰a˘_ty≥_node
 \

3289 
globÆ_åìs
[
TI_SAT_ULFRACT_TYPE
]

	)

3290 
	#ßt_unsig√d_l⁄g_l⁄g_‰a˘_ty≥_node
 \

3291 
globÆ_åìs
[
TI_SAT_ULLFRACT_TYPE
]

	)

3292 
	#sh‹t_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_SFRACT_TYPE
]

	)

3293 
	#‰a˘_ty≥_node
 
globÆ_åìs
[
TI_FRACT_TYPE
]

	)

3294 
	#l⁄g_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_LFRACT_TYPE
]

	)

3295 
	#l⁄g_l⁄g_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_LLFRACT_TYPE
]

	)

3296 
	#unsig√d_sh‹t_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_USFRACT_TYPE
]

	)

3297 
	#unsig√d_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_UFRACT_TYPE
]

	)

3298 
	#unsig√d_l⁄g_‰a˘_ty≥_node
 
globÆ_åìs
[
TI_ULFRACT_TYPE
]

	)

3299 
	#unsig√d_l⁄g_l⁄g_‰a˘_ty≥_node
 \

3300 
globÆ_åìs
[
TI_ULLFRACT_TYPE
]

	)

3301 
	#ßt_sh‹t_accum_ty≥_node
 
globÆ_åìs
[
TI_SAT_SACCUM_TYPE
]

	)

3302 
	#ßt_accum_ty≥_node
 
globÆ_åìs
[
TI_SAT_ACCUM_TYPE
]

	)

3303 
	#ßt_l⁄g_accum_ty≥_node
 
globÆ_åìs
[
TI_SAT_LACCUM_TYPE
]

	)

3304 
	#ßt_l⁄g_l⁄g_accum_ty≥_node
 
globÆ_åìs
[
TI_SAT_LLACCUM_TYPE
]

	)

3305 
	#ßt_unsig√d_sh‹t_accum_ty≥_node
 \

3306 
globÆ_åìs
[
TI_SAT_USACCUM_TYPE
]

	)

3307 
	#ßt_unsig√d_accum_ty≥_node
 
globÆ_åìs
[
TI_SAT_UACCUM_TYPE
]

	)

3308 
	#ßt_unsig√d_l⁄g_accum_ty≥_node
 \

3309 
globÆ_åìs
[
TI_SAT_ULACCUM_TYPE
]

	)

3310 
	#ßt_unsig√d_l⁄g_l⁄g_accum_ty≥_node
 \

3311 
globÆ_åìs
[
TI_SAT_ULLACCUM_TYPE
]

	)

3312 
	#sh‹t_accum_ty≥_node
 
globÆ_åìs
[
TI_SACCUM_TYPE
]

	)

3313 
	#accum_ty≥_node
 
globÆ_åìs
[
TI_ACCUM_TYPE
]

	)

3314 
	#l⁄g_accum_ty≥_node
 
globÆ_åìs
[
TI_LACCUM_TYPE
]

	)

3315 
	#l⁄g_l⁄g_accum_ty≥_node
 
globÆ_åìs
[
TI_LLACCUM_TYPE
]

	)

3316 
	#unsig√d_sh‹t_accum_ty≥_node
 
globÆ_åìs
[
TI_USACCUM_TYPE
]

	)

3317 
	#unsig√d_accum_ty≥_node
 
globÆ_åìs
[
TI_UACCUM_TYPE
]

	)

3318 
	#unsig√d_l⁄g_accum_ty≥_node
 
globÆ_åìs
[
TI_ULACCUM_TYPE
]

	)

3319 
	#unsig√d_l⁄g_l⁄g_accum_ty≥_node
 \

3320 
globÆ_åìs
[
TI_ULLACCUM_TYPE
]

	)

3321 
	#qq_ty≥_node
 
globÆ_åìs
[
TI_QQ_TYPE
]

	)

3322 
	#hq_ty≥_node
 
globÆ_åìs
[
TI_HQ_TYPE
]

	)

3323 
	#sq_ty≥_node
 
globÆ_åìs
[
TI_SQ_TYPE
]

	)

3324 
	#dq_ty≥_node
 
globÆ_åìs
[
TI_DQ_TYPE
]

	)

3325 
	#tq_ty≥_node
 
globÆ_åìs
[
TI_TQ_TYPE
]

	)

3326 
	#uqq_ty≥_node
 
globÆ_åìs
[
TI_UQQ_TYPE
]

	)

3327 
	#uhq_ty≥_node
 
globÆ_åìs
[
TI_UHQ_TYPE
]

	)

3328 
	#usq_ty≥_node
 
globÆ_åìs
[
TI_USQ_TYPE
]

	)

3329 
	#udq_ty≥_node
 
globÆ_åìs
[
TI_UDQ_TYPE
]

	)

3330 
	#utq_ty≥_node
 
globÆ_åìs
[
TI_UTQ_TYPE
]

	)

3331 
	#ßt_qq_ty≥_node
 
globÆ_åìs
[
TI_SAT_QQ_TYPE
]

	)

3332 
	#ßt_hq_ty≥_node
 
globÆ_åìs
[
TI_SAT_HQ_TYPE
]

	)

3333 
	#ßt_sq_ty≥_node
 
globÆ_åìs
[
TI_SAT_SQ_TYPE
]

	)

3334 
	#ßt_dq_ty≥_node
 
globÆ_åìs
[
TI_SAT_DQ_TYPE
]

	)

3335 
	#ßt_tq_ty≥_node
 
globÆ_åìs
[
TI_SAT_TQ_TYPE
]

	)

3336 
	#ßt_uqq_ty≥_node
 
globÆ_åìs
[
TI_SAT_UQQ_TYPE
]

	)

3337 
	#ßt_uhq_ty≥_node
 
globÆ_åìs
[
TI_SAT_UHQ_TYPE
]

	)

3338 
	#ßt_usq_ty≥_node
 
globÆ_åìs
[
TI_SAT_USQ_TYPE
]

	)

3339 
	#ßt_udq_ty≥_node
 
globÆ_åìs
[
TI_SAT_UDQ_TYPE
]

	)

3340 
	#ßt_utq_ty≥_node
 
globÆ_åìs
[
TI_SAT_UTQ_TYPE
]

	)

3341 
	#ha_ty≥_node
 
globÆ_åìs
[
TI_HA_TYPE
]

	)

3342 
	#ß_ty≥_node
 
globÆ_åìs
[
TI_SA_TYPE
]

	)

3343 
	#da_ty≥_node
 
globÆ_åìs
[
TI_DA_TYPE
]

	)

3344 
	#è_ty≥_node
 
globÆ_åìs
[
TI_TA_TYPE
]

	)

3345 
	#uha_ty≥_node
 
globÆ_åìs
[
TI_UHA_TYPE
]

	)

3346 
	#uß_ty≥_node
 
globÆ_åìs
[
TI_USA_TYPE
]

	)

3347 
	#uda_ty≥_node
 
globÆ_åìs
[
TI_UDA_TYPE
]

	)

3348 
	#uè_ty≥_node
 
globÆ_åìs
[
TI_UTA_TYPE
]

	)

3349 
	#ßt_ha_ty≥_node
 
globÆ_åìs
[
TI_SAT_HA_TYPE
]

	)

3350 
	#ßt_ß_ty≥_node
 
globÆ_åìs
[
TI_SAT_SA_TYPE
]

	)

3351 
	#ßt_da_ty≥_node
 
globÆ_åìs
[
TI_SAT_DA_TYPE
]

	)

3352 
	#ßt_è_ty≥_node
 
globÆ_åìs
[
TI_SAT_TA_TYPE
]

	)

3353 
	#ßt_uha_ty≥_node
 
globÆ_åìs
[
TI_SAT_UHA_TYPE
]

	)

3354 
	#ßt_uß_ty≥_node
 
globÆ_åìs
[
TI_SAT_USA_TYPE
]

	)

3355 
	#ßt_uda_ty≥_node
 
globÆ_åìs
[
TI_SAT_UDA_TYPE
]

	)

3356 
	#ßt_uè_ty≥_node
 
globÆ_åìs
[
TI_SAT_UTA_TYPE
]

	)

3363 
	#void_li°_node
 
globÆ_åìs
[
TI_VOID_LIST_NODE
]

	)

3365 
	#maö_idítifõr_node
 
globÆ_åìs
[
TI_MAIN_IDENTIFIER
]

	)

3366 
	#MAIN_NAME_P
(
NODE
) \

3367 (
	`IDENTIFIER_NODE_CHECK
 (
NODE
Ë=
maö_idítifõr_node
)

	)

3371 
	#›timiz©i⁄_deÁu…_node
 
globÆ_åìs
[
TI_OPTIMIZATION_DEFAULT
]

	)

3372 
	#›timiz©i⁄_cuºít_node
 
globÆ_åìs
[
TI_OPTIMIZATION_CURRENT
]

	)

3375 
	#èrgë_›ti⁄_deÁu…_node
 
globÆ_åìs
[
TI_TARGET_OPTION_DEFAULT
]

	)

3376 
	#èrgë_›ti⁄_cuºít_node
 
globÆ_åìs
[
TI_TARGET_OPTION_CURRENT
]

	)

3380 
	#cuºít_èrgë_¥agma
 
globÆ_åìs
[
TI_CURRENT_TARGET_PRAGMA
]

	)

3381 
	#cuºít_›timize_¥agma
 
globÆ_åìs
[
TI_CURRENT_OPTIMIZE_PRAGMA
]

	)

3383 
	#ch¨_ty≥_node
 
öãgî_ty≥s
[
ôk_ch¨
]

	)

3384 
	#sig√d_ch¨_ty≥_node
 
öãgî_ty≥s
[
ôk_sig√d_ch¨
]

	)

3385 
	#unsig√d_ch¨_ty≥_node
 
öãgî_ty≥s
[
ôk_unsig√d_ch¨
]

	)

3386 
	#sh‹t_öãgî_ty≥_node
 
öãgî_ty≥s
[
ôk_sh‹t
]

	)

3387 
	#sh‹t_unsig√d_ty≥_node
 
öãgî_ty≥s
[
ôk_unsig√d_sh‹t
]

	)

3388 
	#öãgî_ty≥_node
 
öãgî_ty≥s
[
ôk_öt
]

	)

3389 
	#unsig√d_ty≥_node
 
öãgî_ty≥s
[
ôk_unsig√d_öt
]

	)

3390 
	#l⁄g_öãgî_ty≥_node
 
öãgî_ty≥s
[
ôk_l⁄g
]

	)

3391 
	#l⁄g_unsig√d_ty≥_node
 
öãgî_ty≥s
[
ôk_unsig√d_l⁄g
]

	)

3392 
	#l⁄g_l⁄g_öãgî_ty≥_node
 
öãgî_ty≥s
[
ôk_l⁄g_l⁄g
]

	)

3393 
	#l⁄g_l⁄g_unsig√d_ty≥_node
 
öãgî_ty≥s
[
ôk_unsig√d_l⁄g_l⁄g
]

	)

3394 
	#öt128_öãgî_ty≥_node
 
öãgî_ty≥s
[
ôk_öt128
]

	)

3395 
	#öt128_unsig√d_ty≥_node
 
öãgî_ty≥s
[
ôk_unsig√d_öt128
]

	)

3397 
	#NULL_TREE
 (
åì
Ë
NULL


	)

3401 
	#îr‹_›î™d_p
(
NODE
) \

3402 ((
NODE
Ë=
îr‹_m¨k_node
 \

3403 || ((
NODE
Ë&& 
	`TREE_TYPE
 ((NODE)Ë=
îr‹_m¨k_node
))

	)

3405 
åì
 
de˛_as£mbÀr_«me
 (tree);

3410 
size_t
 
åì_size
 (
c⁄°_åì
);

3415 
size_t
 
åì_code_size
 (
åì_code
);

3418 
Æloˇã_de˛_uid
 ();

3424 
åì
 
make_node_°©
 (
åì_code
 
MEM_STAT_DECL
);

3425 
	#make_node
(
t
Ë
	`make_node_°©
 (à
MEM_STAT_INFO
)

	)

3429 
åì
 
c›y_node_°©
 (åì 
MEM_STAT_DECL
);

3430 
	#c›y_node
(
t
Ë
	`c›y_node_°©
 (à
MEM_STAT_INFO
)

	)

3434 
åì
 
c›y_li°
 (tree);

3438 
åì
 
buûd_ˇ£_œbñ
 (tree,Åree,Åree);

3441 
åì
 
make_åì_böfo_°©
 (
MEM_STAT_DECL
);

3442 
	#make_åì_böfo
(
t
Ë
	`make_åì_böfo_°©
 (à
MEM_STAT_INFO
)

	)

3446 
åì
 
make_åì_vec_°©
 (
MEM_STAT_DECL
);

3447 
	#make_åì_vec
(
t
Ë
	`make_åì_vec_°©
 (à
MEM_STAT_INFO
)

	)

3451 
åì
 
grow_åì_vec_°©
 (åì 
v
, 
MEM_STAT_DECL
);

3452 
	#grow_åì_vec
(
v
, 
t
Ë
	`grow_åì_vec_°©
 (v,Å 
MEM_STAT_INFO
)

	)

3456 
åì
 
buûd_¡
 (
åì_code
, ...);

3457 
åì
 
buûd_¡_ˇŒ_vec
 (åì, 
vec
<åì, 
va_gc
> *);

3459 
åì
 
buûd0_°©
 (
åì_code
,Åªê
MEM_STAT_DECL
);

3460 
	#buûd0
(
c
,
t
Ë
	`buûd0_°©
 (c,à
MEM_STAT_INFO
)

	)

3461 
åì
 
buûd1_°©
 (
åì_code
,Åªe,Åªê
MEM_STAT_DECL
);

3462 
	#buûd1
(
c
,
t1
,
t2
Ë
	`buûd1_°©
 (c,t1,t2 
MEM_STAT_INFO
)

	)

3463 
åì
 
buûd2_°©
 (
åì_code
,Åªe,Åªe,Åªê
MEM_STAT_DECL
);

3464 
	#buûd2
(
c
,
t1
,
t2
,
t3
Ë
	`buûd2_°©
 (c,t1,t2,t3 
MEM_STAT_INFO
)

	)

3465 
åì
 
buûd3_°©
 (
åì_code
,Åªe,Åªe,Åªe,Åªê
MEM_STAT_DECL
);

3466 
	#buûd3
(
c
,
t1
,
t2
,
t3
,
t4
Ë
	`buûd3_°©
 (c,t1,t2,t3,t4 
MEM_STAT_INFO
)

	)

3467 
åì
 
buûd4_°©
 (
åì_code
,Åree,Åree,Åree,Åree,

3468 
åì
 
MEM_STAT_DECL
);

3469 
	#buûd4
(
c
,
t1
,
t2
,
t3
,
t4
,
t5
Ë
	`buûd4_°©
 (c,t1,t2,t3,t4,t5 
MEM_STAT_INFO
)

	)

3470 
åì
 
buûd5_°©
 (
åì_code
,Åree,Åree,Åree,Åree,Åree,

3471 
åì
 
MEM_STAT_DECL
);

3472 
	#buûd5
(
c
,
t1
,
t2
,
t3
,
t4
,
t5
,
t6
Ë
	`buûd5_°©
 (c,t1,t2,t3,t4,t5,t6 
MEM_STAT_INFO
)

	)

3476 
ölöe
 
åì


3477 
	$buûd1_°©_loc
 (
loˇti⁄_t
 
loc
, 
åì_code
 
code
, 
åì
 
ty≥
,

3478 
åì
 
¨g1
 
MEM_STAT_DECL
)

3480 
åì
 
t
 = 
	`buûd1_°©
 (
code
, 
ty≥
, 
¨g1
 
PASS_MEM_STAT
);

3481 i‡(
	`CAN_HAVE_LOCATION_P
 (
t
))

3482 
	`SET_EXPR_LOCATION
 (
t
, 
loc
);

3483  
t
;

3484 
	}
}

3485 
	#buûd1_loc
(
l
,
c
,
t1
,
t2
Ë
	`buûd1_°©_loc
 (l,c,t1,t2 
MEM_STAT_INFO
)

	)

3487 
ölöe
 
åì


3488 
	$buûd2_°©_loc
 (
loˇti⁄_t
 
loc
, 
åì_code
 
code
, 
åì
 
ty≥
,Åªê
¨g0
,

3489 
åì
 
¨g1
 
MEM_STAT_DECL
)

3491 
åì
 
t
 = 
	`buûd2_°©
 (
code
, 
ty≥
, 
¨g0
, 
¨g1
 
PASS_MEM_STAT
);

3492 i‡(
	`CAN_HAVE_LOCATION_P
 (
t
))

3493 
	`SET_EXPR_LOCATION
 (
t
, 
loc
);

3494  
t
;

3495 
	}
}

3496 
	#buûd2_loc
(
l
,
c
,
t1
,
t2
,
t3
Ë
	`buûd2_°©_loc
 (l,c,t1,t2,t3 
MEM_STAT_INFO
)

	)

3498 
ölöe
 
åì


3499 
	$buûd3_°©_loc
 (
loˇti⁄_t
 
loc
, 
åì_code
 
code
, 
åì
 
ty≥
,Åªê
¨g0
,

3500 
åì
 
¨g1
,Åªê
¨g2
 
MEM_STAT_DECL
)

3502 
åì
 
t
 = 
	`buûd3_°©
 (
code
, 
ty≥
, 
¨g0
, 
¨g1
, 
¨g2
 
PASS_MEM_STAT
);

3503 i‡(
	`CAN_HAVE_LOCATION_P
 (
t
))

3504 
	`SET_EXPR_LOCATION
 (
t
, 
loc
);

3505  
t
;

3506 
	}
}

3507 
	#buûd3_loc
(
l
,
c
,
t1
,
t2
,
t3
,
t4
) \

3508 
	`buûd3_°©_loc
 (
l
,
c
,
t1
,
t2
,
t3
,
t4
 
MEM_STAT_INFO
)

	)

3510 
ölöe
 
åì


3511 
	$buûd4_°©_loc
 (
loˇti⁄_t
 
loc
, 
åì_code
 
code
, 
åì
 
ty≥
,Åªê
¨g0
,

3512 
åì
 
¨g1
,Åªê
¨g2
,Åªê
¨g3
 
MEM_STAT_DECL
)

3514 
åì
 
t
 = 
	`buûd4_°©
 (
code
, 
ty≥
, 
¨g0
, 
¨g1
, 
¨g2
, 
¨g3
 
PASS_MEM_STAT
);

3515 i‡(
	`CAN_HAVE_LOCATION_P
 (
t
))

3516 
	`SET_EXPR_LOCATION
 (
t
, 
loc
);

3517  
t
;

3518 
	}
}

3519 
	#buûd4_loc
(
l
,
c
,
t1
,
t2
,
t3
,
t4
,
t5
) \

3520 
	`buûd4_°©_loc
 (
l
,
c
,
t1
,
t2
,
t3
,
t4
,
t5
 
MEM_STAT_INFO
)

	)

3522 
ölöe
 
åì


3523 
	$buûd5_°©_loc
 (
loˇti⁄_t
 
loc
, 
åì_code
 
code
, 
åì
 
ty≥
,Åªê
¨g0
,

3524 
åì
 
¨g1
,Åªê
¨g2
,Åªê
¨g3
,Åªê
¨g4
 
MEM_STAT_DECL
)

3526 
åì
 
t
 = 
	`buûd5_°©
 (
code
, 
ty≥
, 
¨g0
, 
¨g1
, 
¨g2
, 
¨g3
,

3527 
¨g4
 
PASS_MEM_STAT
);

3528 i‡(
	`CAN_HAVE_LOCATION_P
 (
t
))

3529 
	`SET_EXPR_LOCATION
 (
t
, 
loc
);

3530  
t
;

3531 
	}
}

3532 
	#buûd5_loc
(
l
,
c
,
t1
,
t2
,
t3
,
t4
,
t5
,
t6
) \

3533 
	`buûd5_°©_loc
 (
l
,
c
,
t1
,
t2
,
t3
,
t4
,
t5
,
t6
 
MEM_STAT_INFO
)

	)

3535 
åì
 
buûd_v¨_debug_vÆue_°©
 (åì,Åªê
MEM_STAT_DECL
);

3536 
	#buûd_v¨_debug_vÆue
(
t1
,
t2
) \

3537 
	`buûd_v¨_debug_vÆue_°©
 (
t1
,
t2
 
MEM_STAT_INFO
)

	)

3541 
ölöe
 
doubÀ_öt


3542 
	$åì_to_doubÀ_öt
 (
c⁄°_åì
 
c°
)

3544  
	`TREE_INT_CST
 (
c°
);

3545 
	}
}

3547 
åì
 
doubÀ_öt_to_åì
 (åì, 
doubÀ_öt
);

3548 
boﬁ
 
doubÀ_öt_fôs_to_åì_p
 (
c⁄°_åì
, 
doubÀ_öt
);

3549 
åì
 
f‹˚_fô_ty≥_doubÀ
 (åì, 
doubÀ_öt
, , 
boﬁ
);

3553 
ölöe
 
åì


3554 
	$buûd_öt_c°u
 (
åì
 
ty≥
, 
HOST_WIDE_INT
 
c°
)

3556  
	`doubÀ_öt_to_åì
 (
ty≥
, 
doubÀ_öt
::
	`‰om_uhwi
 (
c°
));

3557 
	}
}

3559 
åì
 
buûd_öt_c°
 (åì, 
HOST_WIDE_INT
);

3560 
åì
 
buûd_öt_c°_ty≥
 (åì, 
HOST_WIDE_INT
);

3561 
åì
 
buûd_öt_c°_wide
 (åì, 
HOST_WIDE_INT
, HOST_WIDE_INT);

3562 
åì
 
make_ve˘‹_°©
 (
MEM_STAT_DECL
);

3563 
	#make_ve˘‹
(
n
Ë
	`make_ve˘‹_°©
 (¿
MEM_STAT_INFO
)

	)

3564 
åì
 
buûd_ve˘‹_°©
 (åì,Åªê* 
MEM_STAT_DECL
);

3565 
	#buûd_ve˘‹
(
t
,
v
Ë
	`buûd_ve˘‹_°©
 (t, v 
MEM_STAT_INFO
)

	)

3566 
åì
 
buûd_ve˘‹_‰om_˘‹
 (åì, 
vec
<
c⁄°ru˘‹_ñt
, 
va_gc
> *);

3567 
åì
 
buûd_ve˘‹_‰om_vÆ
 (tree,Åree);

3568 
åì
 
buûd_c⁄°ru˘‹
 (åì, 
vec
<
c⁄°ru˘‹_ñt
, 
va_gc
> *);

3569 
åì
 
buûd_c⁄°ru˘‹_sögÀ
 (tree,Åree,Åree);

3570 
åì
 
buûd_c⁄°ru˘‹_‰om_li°
 (tree,Åree);

3571 
åì
 
buûd_c⁄°ru˘‹_va
 (tree, , ...);

3572 
åì
 
buûd_ªÆ_‰om_öt_c°
 (åì, 
c⁄°_åì
);

3573 
åì
 
buûd_com∂ex
 (tree,Åree,Åree);

3574 
åì
 
buûd_⁄e_c°
 (tree);

3575 
åì
 
buûd_möus_⁄e_c°
 (tree);

3576 
åì
 
buûd_Æl_⁄es_c°
 (tree);

3577 
åì
 
buûd_zîo_c°
 (tree);

3578 
åì
 
buûd_°rög
 (, const *);

3579 
åì
 
buûd_åì_li°_°©
 (åì,Åªê
MEM_STAT_DECL
);

3580 
	#buûd_åì_li°
(
t
, 
q
Ë
	`buûd_åì_li°_°©
 (t, q 
MEM_STAT_INFO
)

	)

3581 
åì
 
buûd_åì_li°_vec_°©
 (c⁄° 
vec
<åì, 
va_gc
> *
MEM_STAT_DECL
);

3582 
	#buûd_åì_li°_vec
(
v
Ë
	`buûd_åì_li°_vec_°©
 (v 
MEM_STAT_INFO
)

	)

3583 
åì
 
buûd_de˛_°©
 (
loˇti⁄_t
, 
åì_code
,

3584 
åì
,Åªê
MEM_STAT_DECL
);

3585 
åì
 
buûd_‚_de˛
 (const *,Åree);

3586 
	#buûd_de˛
(
l
,
c
,
t
,
q
Ë
	`buûd_de˛_°©
 (l, c,Å, q 
MEM_STAT_INFO
)

	)

3587 
åì
 
buûd_å™¶©i⁄_unô_de˛
 (tree);

3588 
åì
 
buûd_block
 (tree,Åree,Åree,Åree);

3589 
åì
 
buûd_em±y_°mt
 (
loˇti⁄_t
);

3590 
åì
 
buûd_omp_˛au£
 (
loˇti⁄_t
, 
omp_˛au£_code
);

3592 
åì
 
buûd_vl_exp_°©
 (
åì_code
, 
MEM_STAT_DECL
);

3593 
	#buûd_vl_exp
(
c
, 
n
Ë
	`buûd_vl_exp_°©
 (c,Ç 
MEM_STAT_INFO
)

	)

3595 
åì
 
buûd_ˇŒ_«ry
 (tree,Åree, , ...);

3596 
åì
 
buûd_ˇŒ_vÆi°
 (åì,Åªe, , 
va_li°
);

3597 
	#buûd_ˇŒ_¨øy
(
T1
,
T2
,
N
,
T3
)\

3598 
	`buûd_ˇŒ_¨øy_loc
 (
UNKNOWN_LOCATION
, 
T1
, 
T2
, 
N
, 
T3
)

	)

3599 
åì
 
buûd_ˇŒ_¨øy_loc
 (
loˇti⁄_t
,Åree,Åree, , constÅree *);

3600 
åì
 
buûd_ˇŒ_vec
 (åì,Åªe, 
vec
<åì, 
va_gc
> *);

3604 
åì
 
sig√d_‹_unsig√d_ty≥_f‹
 (,Åree);

3605 
åì
 
sig√d_ty≥_f‹
 (tree);

3606 
åì
 
unsig√d_ty≥_f‹
 (tree);

3607 
åì
 
åuth_ty≥_f‹
 (tree);

3608 
åì
 
buûd_poöãr_ty≥_f‹_mode
 (åì, 
machöe_mode
, 
boﬁ
);

3609 
åì
 
buûd_poöãr_ty≥
 (tree);

3610 
åì
 
buûd_ª„ªn˚_ty≥_f‹_mode
 (åì, 
machöe_mode
, 
boﬁ
);

3611 
åì
 
buûd_ª„ªn˚_ty≥
 (tree);

3612 
åì
 
buûd_ve˘‹_ty≥_f‹_mode
 (åì, 
machöe_mode
);

3613 
åì
 
buûd_ve˘‹_ty≥
 (åì 
ö√πy≥
, 
nunôs
);

3614 
åì
 
buûd_›aque_ve˘‹_ty≥
 (åì 
ö√πy≥
, 
nunôs
);

3615 
åì
 
buûd_ödex_ty≥
 (tree);

3616 
åì
 
buûd_¨øy_ty≥
 (tree,Åree);

3617 
åì
 
buûd_n⁄sh¨ed_¨øy_ty≥
 (tree,Åree);

3618 
åì
 
buûd_¨øy_ty≥_√…s
 (åì, 
HOST_WIDE_INT
);

3619 
åì
 
buûd_fun˘i⁄_ty≥
 (tree,Åree);

3620 
åì
 
buûd_fun˘i⁄_ty≥_li°
 (tree, ...);

3621 
åì
 
buûd_v¨¨gs_fun˘i⁄_ty≥_li°
 (tree, ...);

3622 
åì
 
buûd_fun˘i⁄_ty≥_¨øy
 (tree, ,Åree *);

3623 
åì
 
buûd_v¨¨gs_fun˘i⁄_ty≥_¨øy
 (tree, ,Åree *);

3624 
	#buûd_fun˘i⁄_ty≥_vec
(
RET
, 
V
) \

3625 
	`buûd_fun˘i⁄_ty≥_¨øy
 (
RET
, 
	`vec_ß„_Àngth
 (
V
), 
	`vec_ß„_addªss
 (V))

	)

3626 
	#buûd_v¨¨gs_fun˘i⁄_ty≥_vec
(
RET
, 
V
) \

3627 
	`buûd_v¨¨gs_fun˘i⁄_ty≥_¨øy
 (
RET
, 
	`vec_ß„_Àngth
 (
V
), \

3628 
	`vec_ß„_addªss
 (
V
))

	)

3629 
åì
 
buûd_mëhod_ty≥_dúe˘ly
 (tree,Åree,Åree);

3630 
åì
 
buûd_mëhod_ty≥
 (tree,Åree);

3631 
åì
 
buûd_off£t_ty≥
 (tree,Åree);

3632 
åì
 
buûd_com∂ex_ty≥
 (tree);

3633 
åì
 
¨øy_ty≥_√…s
 (
c⁄°_åì
);

3635 
åì
 
vÆue_membî
 (tree,Åree);

3636 
åì
 
puΩo£_membî
 (
c⁄°_åì
,Åree);

3637 
boﬁ
 
vec_membî
 (
c⁄°_åì
, 
vec
<
åì
, 
va_gc
> *);

3638 
åì
 
chaö_ödex
 (,Åree);

3640 
©åibuã_li°_equÆ
 (
c⁄°_åì
, const_tree);

3641 
©åibuã_li°_c⁄èöed
 (
c⁄°_åì
, const_tree);

3642 
åì_öt_c°_equÆ
 (
c⁄°_åì
, const_tree);

3643 
åì_öt_c°_…
 (
c⁄°_åì
, const_tree);

3644 
åì_öt_c°_com∑ª
 (
c⁄°_åì
, const_tree);

3645 
boﬁ
 
	$åì_fôs_shwi_p
 (
c⁄°_åì
)

3646 #i‚de‡
ENABLE_TREE_CHECKING


3647 
ATTRIBUTE_PURE


3650 
boﬁ
 
	$åì_fôs_uhwi_p
 (
c⁄°_åì
)

3651 #i‚de‡
ENABLE_TREE_CHECKING


3652 
ATTRIBUTE_PURE


3655 
HOST_WIDE_INT
 
	`åì_to_shwi
 (
c⁄°_åì
);

3656 
HOST_WIDE_INT
 
	`åì_to_uhwi
 (
c⁄°_åì
);

3657 #i‡!
deföed
 
ENABLE_TREE_CHECKING
 && (
GCC_VERSION
 >= 4003)

3658 
ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
)Ë
HOST_WIDE_INT


3659 
	$åì_to_shwi
 (
c⁄°_åì
 
t
)

3661 
	`gcc_as£π
 (
	`åì_fôs_shwi_p
 (
t
));

3662  
	`TREE_INT_CST_LOW
 (
t
);

3663 
	}
}

3665 
ölöe
 
__©åibuã__
 ((
__gnu_ölöe__
)Ë
HOST_WIDE_INT


3666 
	$åì_to_uhwi
 (
c⁄°_åì
 
t
)

3668 
	`gcc_as£π
 (
	`åì_fôs_uhwi_p
 (
t
));

3669  
	`TREE_INT_CST_LOW
 (
t
);

3670 
	}
}

3672 
åì_öt_c°_sgn
 (
c⁄°_åì
);

3673 
åì_öt_c°_sign_bô
 (
c⁄°_åì
);

3674 
åì_öt_c°_mö_¥ecisi⁄
 (
åì
, 
boﬁ
);

3675 
åì
 
°rù_¨øy_ty≥s
 (tree);

3676 
åì
 
ex˚ss_¥ecisi⁄_ty≥
 (tree);

3677 
boﬁ
 
vÆid_c⁄°™t_size_p
 (
c⁄°_åì
);

3684 
åì
 
make_åì
 (åì, 
πx
);

3692 
åì
 
buûd_ty≥_©åibuã_v¨ü¡
 (tree,Åree);

3693 
åì
 
buûd_de˛_©åibuã_v¨ü¡
 (tree,Åree);

3694 
åì
 
buûd_ty≥_©åibuã_quÆ_v¨ü¡
 (tree,Åree, );

3699 
comp_ty≥_©åibuãs
 (
c⁄°_åì
, const_tree);

3702 
åì
 
mîge_de˛_©åibuãs
 (tree,Åree);

3703 
åì
 
mîge_ty≥_©åibuãs
 (tree,Åree);

3707 
åì
 
¥iv©e_lookup_©åibuã
 (c⁄° *, 
size_t
,Åree);

3717 
ölöe
 
åì


3718 
	$lookup_©åibuã
 (c⁄° *
©å_«me
, 
åì
 
li°
)

3720 
	`gcc_checkög_as£π
 (
©å_«me
[0] != '_');

3722 i‡(
li°
 =
NULL_TREE
)

3723  
NULL_TREE
;

3728  
	`¥iv©e_lookup_©åibuã
 (
©å_«me
, 
	`°æí
 (©å_«me), 
li°
);

3729 
	}
}

3733 
boﬁ
 
¥iv©e_is_©åibuã_p
 (c⁄° *, 
size_t
, 
c⁄°_åì
);

3740 
ölöe
 
boﬁ


3741 
	$is_©åibuã_p
 (c⁄° *
©å_«me
, 
c⁄°_åì
 
idít
)

3743 
	`gcc_checkög_as£π
 (
©å_«me
[0] != '_');

3747  
	`¥iv©e_is_©åibuã_p
 (
©å_«me
, 
	`°æí
 (©å_«me), 
idít
);

3748 
	}
}

3754 
åì
 
ªmove_©åibuã
 (const *,Åree);

3758 
åì
 
mîge_©åibuãs
 (tree,Åree);

3760 #i‡
TARGET_DLLIMPORT_DECL_ATTRIBUTES


3763 
åì
 
mîge_dŒimp‹t_de˛_©åibuãs
 (tree,Åree);

3766 
åì
 
h™dÀ_dŒ_©åibuã
 (åì *,Åªe,Åªe, , 
boﬁ
 *);

3772 
boﬁ
 
check_quÆifõd_ty≥
 (
c⁄°_åì
, const_tree, );

3778 
åì
 
gë_quÆifõd_ty≥
 (tree, );

3783 
åì
 
buûd_quÆifõd_ty≥
 (tree, );

3787 
åì
 
buûd_Æig√d_ty≥
 (tree, );

3794 
	#buûd_ty≥_v¨ü¡
(
TYPE
, 
CONST_P
, 
VOLATILE_P
) \

3795 
	`buûd_quÆifõd_ty≥
 ((
TYPE
), \

3796 ((
CONST_P
Ë? 
TYPE_QUAL_CONST
 : 0) \

3797 | ((
VOLATILE_P
Ë? 
TYPE_QUAL_VOLATILE
 : 0))

	)

3801 
åì
 
buûd_di°ö˘_ty≥_c›y
 (tree);

3802 
åì
 
buûd_v¨ü¡_ty≥_c›y
 (tree);

3809 
åì
 
ty≥_hash_ˇn⁄
 (,Åree);

3811 
åì
 
c⁄vît
 (tree,Åree);

3812 
ex¥_Æign
 (
c⁄°_åì
);

3813 
åì
 
size_ö_byãs
 (
c⁄°_åì
);

3814 
HOST_WIDE_INT
 
öt_size_ö_byãs
 (
c⁄°_åì
);

3815 
HOST_WIDE_INT
 
max_öt_size_ö_byãs
 (
c⁄°_åì
);

3816 
åì
 
bô_posôi⁄
 (
c⁄°_åì
);

3817 
HOST_WIDE_INT
 
öt_bô_posôi⁄
 (
c⁄°_åì
);

3818 
åì
 
byã_posôi⁄
 (
c⁄°_åì
);

3819 
HOST_WIDE_INT
 
öt_byã_posôi⁄
 (
c⁄°_åì
);

3821 
	#sizëy≥
 
sizëy≥_èb
[(Ë
°k_sizëy≥
]

	)

3822 
	#bôsizëy≥
 
sizëy≥_èb
[(Ë
°k_bôsizëy≥
]

	)

3823 
	#ssizëy≥
 
sizëy≥_èb
[(Ë
°k_ssizëy≥
]

	)

3824 
	#sbôsizëy≥
 
sizëy≥_èb
[(Ë
°k_sbôsizëy≥
]

	)

3825 
	#size_öt
(
L
Ë
	`size_öt_köd
 (L, 
°k_sizëy≥
)

	)

3826 
	#ssize_öt
(
L
Ë
	`size_öt_köd
 (L, 
°k_ssizëy≥
)

	)

3827 
	#bôsize_öt
(
L
Ë
	`size_öt_köd
 (L, 
°k_bôsizëy≥
)

	)

3828 
	#sbôsize_öt
(
L
Ë
	`size_öt_köd
 (L, 
°k_sbôsizëy≥
)

	)

3832 
	#BITS_PER_UNIT_LOG
 \

3833 ((
BITS_PER_UNIT
 > 1) + (BITS_PER_UNIT > 2) + (BITS_PER_UNIT > 4) \

3834 + (
BITS_PER_UNIT
 > 8) + (BITS_PER_UNIT > 16) + (BITS_PER_UNIT > 32) \

3835 + (
BITS_PER_UNIT
 > 64Ë+ (BITS_PER_UNIT > 128Ë+ (BITS_PER_UNIT > 256))

	)

3841 
åì
 
chaö⁄
 (tree,Åree);

3845 
åì
 
åì_c⁄s_°©
 (åì,Åªe,Åªê
MEM_STAT_DECL
);

3846 
	#åì_c⁄s
(
t
,
q
,
w
Ë
	`åì_c⁄s_°©
 (t,q,w 
MEM_STAT_INFO
)

	)

3850 
åì
 
åì_œ°
 (tree);

3854 
åì
 
ƒevî£
 (tree);

3859 
li°_Àngth
 (
c⁄°_åì
);

3863 
åì
 
fú°_fõld
 (
c⁄°_åì
);

3868 
boﬁ
 
öôülizî_zî›
 (
c⁄°_åì
);

3873 
åì
 
unif‹m_ve˘‹_p
 (
c⁄°_åì
);

3877 
vec
<
åì
, 
va_gc
> *
˘‹_to_vec
 (tree);

3881 
öãgî_zî›
 (
c⁄°_åì
);

3885 
öãgî_⁄ï
 (
c⁄°_åì
);

3890 
öãgî_Æl_⁄e•
 (
c⁄°_åì
);

3895 
öãgî_möus_⁄ï
 (
c⁄°_åì
);

3900 
öãgî_pow2p
 (
c⁄°_åì
);

3905 
öãgî_n⁄zî›
 (
c⁄°_åì
);

3907 
boﬁ
 
c°_™d_fôs_ö_hwi
 (
c⁄°_åì
);

3908 
åì
 
num_ídög_zîos
 (
c⁄°_åì
);

3913 
fixed_zî›
 (
c⁄°_åì
);

3918 
åì
 
°©i˝
 (tree);

3924 
åì
 
ßve_ex¥
 (tree);

3929 
åì
 
skù_sim∂e_¨ôhmëic
 (tree);

3934 
åì
 
skù_sim∂e_c⁄°™t_¨ôhmëic
 (tree);

3938 
åì_node_°ru˘uª_íum
 
åì_node_°ru˘uª
 (
c⁄°_åì
);

3943 
boﬁ
 
c⁄èös_∂a˚hﬁdî_p
 (
c⁄°_åì
);

3948 
	#CONTAINS_PLACEHOLDER_P
(
EXP
) \

3949 ((
EXP
Ë!0 && ! 
	`TREE_CONSTANT
 (EXPË&& 
	`c⁄èös_∂a˚hﬁdî_p
 (EXP))

	)

3955 
boﬁ
 
ty≥_c⁄èös_∂a˚hﬁdî_p
 (
åì
);

3964 
föd_∂a˚hﬁdî_ö_ex¥
 (
åì
, 
vec
<tree> *);

3969 
	#FIND_PLACEHOLDER_IN_EXPR
(
EXP
, 
V
) \

3971 if((
EXP
Ë&& !
	`TREE_CONSTANT
 (EXP)) \

3972 
	`föd_∂a˚hﬁdî_ö_ex¥
 (
EXP
, 
V
); \

3973 } 0)

	)

3982 
åì
 
sub°ôuã_ö_ex¥
 (tree,Åree,Åree);

3987 
	#SUBSTITUTE_IN_EXPR
(
EXP
, 
F
, 
R
) \

3988 ((
EXP
Ë=0 || 
	`TREE_CONSTANT
 (EXPË? (EXPË: 
	`sub°ôuã_ö_ex¥
 (EXP, 
F
, 
R
))

	)

3993 
åì
 
sub°ôuã_∂a˚hﬁdî_ö_ex¥
 (tree,Åree);

3998 
	#SUBSTITUTE_PLACEHOLDER_IN_EXPR
(
EXP
, 
OBJ
) \

3999 ((
EXP
Ë=0 || 
	`TREE_CONSTANT
 (EXP) ? (EXP) \

4000 : 
	`sub°ôuã_∂a˚hﬁdî_ö_ex¥
 (
EXP
, 
OBJ
))

	)

4007 
åì
 
°abûize_ª„ªn˚
 (tree);

4014 
åì
 
gë_unwidíed
 (tree,Åree);

4021 
åì
 
gë_«ºowî
 (tree, *);

4025 
ölöe
 
boﬁ


4026 
	$h™dÀd_comp⁄ít_p
 (
c⁄°_åì
 
t
)

4028 
	`TREE_CODE
 (
t
))

4030 
COMPONENT_REF
:

4031 
BIT_FIELD_REF
:

4032 
ARRAY_REF
:

4033 
ARRAY_RANGE_REF
:

4034 
REALPART_EXPR
:

4035 
IMAGPART_EXPR
:

4036 
VIEW_CONVERT_EXPR
:

4037  
åue
;

4040  
Ál£
;

4042 
	}
}

4047 
åì
 
gë_c⁄èöög_sc›e
 (
c⁄°_åì
);

4051 
åì
 
de˛_fun˘i⁄_c⁄ãxt
 (
c⁄°_åì
);

4055 
åì
 
de˛_ty≥_c⁄ãxt
 (
c⁄°_åì
);

4058 
ªÆ_zî›
 (
c⁄°_åì
);

4062 
ölöe
 

4063 
	$fun˘i⁄_¨gs_ôî_öô
 (
fun˘i⁄_¨gs_ôî©‹
 *
i
, 
c⁄°_åì
 
‚ty≥
)

4065 
i
->
√xt
 = 
	`TYPE_ARG_TYPES
 (
‚ty≥
);

4066 
	}
}

4071 
ölöe
 
åì
 *

4072 
	$fun˘i⁄_¨gs_ôî_c⁄d_±r
 (
fun˘i⁄_¨gs_ôî©‹
 *
i
)

4074  (
i
->
√xt
Ë? &
	`TREE_VALUE
 (i->√xtË: 
NULL
;

4075 
	}
}

4080 
ölöe
 
åì


4081 
	$fun˘i⁄_¨gs_ôî_c⁄d
 (
fun˘i⁄_¨gs_ôî©‹
 *
i
)

4083  (
i
->
√xt
Ë? 
	`TREE_VALUE
 (i->√xtË: 
NULL_TREE
;

4084 
	}
}

4087 
ölöe
 

4088 
	$fun˘i⁄_¨gs_ôî_√xt
 (
fun˘i⁄_¨gs_ôî©‹
 *
i
)

4090 
	`gcc_as£π
 (
i
->
√xt
 !
NULL_TREE
);

4091 
i
->
√xt
 = 
	`TREE_CHAIN
 (i->next);

4092 
	}
}

4096 
ölöe
 
boﬁ


4097 
	$ölöed_fun˘i⁄_ouãr_sc›e_p
 (
c⁄°_åì
 
block
)

4099  
	`LOCATION_LOCUS
 (
	`BLOCK_SOURCE_LOCATION
 (
block
)Ë!
UNKNOWN_LOCATION
;

4100 
	}
}

4105 
	#FOREACH_FUNCTION_ARGS_PTR
(
FNTYPE
, 
PTR
, 
ITER
) \

4106 
	`fun˘i⁄_¨gs_ôî_öô
 (&(
ITER
), (
FNTYPE
)); \

4107 (
PTR
 = 
	`fun˘i⁄_¨gs_ôî_c⁄d_±r
 (&(
ITER
))Ë!
NULL
; \

4108 
	`fun˘i⁄_¨gs_ôî_√xt
 (&(
ITER
)))

	)

4113 
	#FOREACH_FUNCTION_ARGS
(
FNTYPE
, 
TREE
, 
ITER
) \

4114 
	`fun˘i⁄_¨gs_ôî_öô
 (&(
ITER
), (
FNTYPE
)); \

4115 (
TREE
 = 
	`fun˘i⁄_¨gs_ôî_c⁄d
 (&(
ITER
))Ë!
NULL_TREE
; \

4116 
	`fun˘i⁄_¨gs_ôî_√xt
 (&(
ITER
)))

	)

4119 
¸c32_°rög
 (, const *);

4120 
¸c32_byã
 (, );

4121 
¸c32_unsig√d
 (, );

4122 
˛ón_symbﬁ_«me
 (*);

4123 
åì
 
gë_fûe_fun˘i⁄_«me
 (const *);

4124 
åì
 
gë_ˇŒì_‚de˛
 (
c⁄°_åì
);

4125 
ty≥_num_¨gumíts
 (
c⁄°_åì
);

4126 
boﬁ
 
assocütive_åì_code
 (
åì_code
);

4127 
boﬁ
 
commuètive_åì_code
 (
åì_code
);

4128 
boﬁ
 
commuètive_ã∫¨y_åì_code
 (
åì_code
);

4129 
åì
 
uµî_bound_ö_ty≥
 (tree,Åree);

4130 
åì
 
lowî_bound_ö_ty≥
 (tree,Åree);

4131 
›î™d_equÆ_f‹_phi_¨g_p
 (
c⁄°_åì
, const_tree);

4132 
åì
 
¸óã_¨tificül_œbñ
 (
loˇti⁄_t
);

4133 c⁄° *
gë_«me
 (
åì
);

4134 
boﬁ
 
°d¨g_p
 (
c⁄°_åì
);

4135 
boﬁ
 
¥ŸŸy≥_p
 (
åì
);

4136 
boﬁ
 
is_ty≥def_de˛
 (
åì
 
x
);

4137 
boﬁ
 
ty≥def_v¨ü¡_p
 (
åì
);

4138 
boﬁ
 
auto_v¨_ö_‚_p
 (
c⁄°_åì
, const_tree);

4139 
åì
 
buûd_low_bôs_mask
 (tree, );

4140 
åì
 
åì_°rù_n›_c⁄vîsi⁄s
 (tree);

4141 
åì
 
åì_°rù_sign_n›_c⁄vîsi⁄s
 (tree);

4142 
c⁄°_åì
 
°rù_öv¨ü¡_ªfs
 (const_tree);

4143 
åì
 
lhd_gcc_≥rs⁄Æôy
 ();

4144 
assign_as£mbÀr_«me_if_√ìded
 (
åì
);

4145 
w¨n_dïªˇãd_u£
 (
åì
,Åree);

4146 
ˇche_öãgî_c°
 (
åì
);

4152 
ölöe
 

4153 
	$°ru˘_±r_eq
 (c⁄° *
a
, c⁄° *
b
)

4155 c⁄° * c⁄° * 
x
 = (c⁄° * c⁄° *Ë
a
;

4156 c⁄° * c⁄° * 
y
 = (c⁄° * c⁄° *Ë
b
;

4157  *
x
 =*
y
;

4158 
	}
}

4160 
ölöe
 
hashvÆ_t


4161 
	$°ru˘_±r_hash
 (c⁄° *
a
)

4163 c⁄° * c⁄° * 
x
 = (c⁄° * c⁄° *Ë
a
;

4164  (
öçå_t
)*
x
 >> 4;

4165 
	}
}

4168 
ölöe
 
boﬁ


4169 
	$åuth_vÆue_p
 (
åì_code
 
code
)

4171  (
	`TREE_CODE_CLASS
 (
code
Ë=
tcc_com∑ris⁄


4172 || 
code
 =
TRUTH_AND_EXPR
 || codê=
TRUTH_ANDIF_EXPR


4173 || 
code
 =
TRUTH_OR_EXPR
 || codê=
TRUTH_ORIF_EXPR


4174 || 
code
 =
TRUTH_XOR_EXPR
 || codê=
TRUTH_NOT_EXPR
);

4175 
	}
}

4179 
ölöe
 
boﬁ


4180 
	$±rof·y≥_p
 (
åì
 
ty≥
)

4182  (
	`INTEGRAL_TYPE_P
 (
ty≥
)

4183 && 
	`TYPE_PRECISION
 (
ty≥
Ë=TYPE_PRECISION (
sizëy≥
)

4184 && 
	`TYPE_UNSIGNED
 (
ty≥
Ë=TYPE_UNSIGNED (
sizëy≥
));

4185 
	}
}

4189 
ölöe
 
åì


4190 
	$c⁄vît_to_±rof·y≥_loc
 (
loˇti⁄_t
 
loc
, 
åì
 
off
)

4192  
	`fﬁd_c⁄vît_loc
 (
loc
, 
sizëy≥
, 
off
);

4193 
	}
}

4194 
	#c⁄vît_to_±rof·y≥
(
t
Ë
	`c⁄vît_to_±rof·y≥_loc
 (
UNKNOWN_LOCATION
,Å)

	)

4197 
ölöe
 
åì


4198 
	$fﬁd_buûd_poöãr_∂us_loc
 (
loˇti⁄_t
 
loc
, 
åì
 
±r
,Åªê
off
)

4200  
	`fﬁd_buûd2_loc
 (
loc
, 
POINTER_PLUS_EXPR
, 
	`TREE_TYPE
 (
±r
),

4201 
±r
, 
	`fﬁd_c⁄vît_loc
 (
loc
, 
sizëy≥
, 
off
));

4202 
	}
}

4203 
	#fﬁd_buûd_poöãr_∂us
(
p
,
o
) \

4204 
	`fﬁd_buûd_poöãr_∂us_loc
 (
UNKNOWN_LOCATION
, 
p
, 
o
)

	)

4207 
ölöe
 
åì


4208 
	$fﬁd_buûd_poöãr_∂us_hwi_loc
 (
loˇti⁄_t
 
loc
, 
åì
 
±r
, 
HOST_WIDE_INT
 
off
)

4210  
	`fﬁd_buûd2_loc
 (
loc
, 
POINTER_PLUS_EXPR
, 
	`TREE_TYPE
 (
±r
),

4211 
±r
, 
	`size_öt
 (
off
));

4212 
	}
}

4213 
	#fﬁd_buûd_poöãr_∂us_hwi
(
p
,
o
) \

4214 
	`fﬁd_buûd_poöãr_∂us_hwi_loc
 (
UNKNOWN_LOCATION
, 
p
, 
o
)

	)

4216 
åì
 
°rù_Êﬂt_exãnsi⁄s
 (tree);

4217 
ªÆly_c⁄°™t_p
 (
c⁄°_åì
);

4218 
boﬁ
 
de˛_addªss_öv¨ü¡_p
 (
c⁄°_åì
);

4219 
boﬁ
 
de˛_addªss_ù_öv¨ü¡_p
 (
c⁄°_åì
);

4220 
boﬁ
 
öt_fôs_ty≥_p
 (
c⁄°_åì
, const_tree);

4221 #i‚de‡
GENERATOR_FILE


4222 
gë_ty≥_°©ic_bounds
 (
c⁄°_åì
, 
mpz_t
, mpz_t);

4224 
boﬁ
 
v¨übly_modifõd_ty≥_p
 (
åì
,Åree);

4225 
åì_log2
 (
c⁄°_åì
);

4226 
åì_Êo‹_log2
 (
c⁄°_åì
);

4227 
åì_˘z
 (
c⁄°_åì
);

4228 
sim∂e_c°_equÆ
 (
c⁄°_åì
, const_tree);

4229 
hashvÆ_t
 
ôî©ive_hash_ex¥
 (
c⁄°_åì
, hashval_t);

4230 
hashvÆ_t
 
ôî©ive_hash_ho°_wide_öt
 (
HOST_WIDE_INT
, hashval_t);

4231 
hashvÆ_t
 
ôî©ive_hash_hashvÆ_t
 (hashval_t, hashval_t);

4232 
hashvÆ_t
 
ôî©ive_hash_ho°_wide_öt
 (
HOST_WIDE_INT
, hashval_t);

4233 
com∑ª_åì_öt
 (
c⁄°_åì
, 
HOST_WIDE_INT
);

4234 
ty≥_li°_equÆ
 (
c⁄°_åì
, const_tree);

4235 
chaö_membî
 (
c⁄°_åì
, const_tree);

4236 
dump_åì_°©i°ics
 ();

4237 
ªcompuã_åì_öv¨ü¡_f‹_addr_ex¥
 (
åì
);

4238 
boﬁ
 
√eds_to_live_ö_mem‹y
 (
c⁄°_åì
);

4239 
åì
 
ªc⁄°ru˘_com∂ex_ty≥
 (tree,Åree);

4240 
ªÆ_⁄ï
 (
c⁄°_åì
);

4241 
ªÆ_möus_⁄ï
 (
c⁄°_åì
);

4242 
öô_âªe
 ();

4243 
buûd_comm⁄_åì_nodes
 (
boﬁ
, bool);

4244 
buûd_comm⁄_buûtö_nodes
 ();

4245 
åì
 
buûd_n⁄°™d¨d_öãgî_ty≥
 (
HOST_WIDE_INT
, );

4246 
åì
 
buûd_ønge_ty≥
 (tree,Åree,Åree);

4247 
åì
 
buûd_n⁄sh¨ed_ønge_ty≥
 (tree,Åree,Åree);

4248 
boﬁ
 
subønge_ty≥_f‹_debug_p
 (
c⁄°_åì
, 
åì
 *,Åree *);

4249 
HOST_WIDE_INT
 
öt_c°_vÆue
 (
c⁄°_åì
);

4250 
HOST_WIDEST_INT
 
wide°_öt_c°_vÆue
 (
c⁄°_åì
);

4251 
åì
 
åì_block
 (tree);

4252 
åì_£t_block
 (
åì
,Åree);

4253 
loˇti⁄_t
 *
block_n⁄¨tificül_loˇti⁄
 (
åì
);

4254 
loˇti⁄_t
 
åì_n⁄¨tificül_loˇti⁄
 (
åì
);

4255 
åì
 
block_u…im©e_‹igö
 (
c⁄°_åì
);

4256 
åì
 
gë_böfo_©_off£t
 (åì, 
HOST_WIDE_INT
,Åree);

4257 
boﬁ
 
vútuÆ_mëhod_ˇŒ_p
 (
åì
);

4258 
åì
 
obj_ty≥_ªf_˛ass
 (åì 
ªf
);

4259 
boﬁ
 
ty≥s_ßme_f‹_odr
 (
åì
 
ty≥1
,Åªê
ty≥2
);

4260 
boﬁ
 
c⁄èös_bôÊd_comp⁄ít_ªf_p
 (
c⁄°_åì
);

4261 
boﬁ
 
ty≥_ö_™⁄ymous_«me•a˚_p
 (
åì
);

4262 
boﬁ
 
block_may_ÁŒthru
 (
c⁄°_åì
);

4263 
usög_eh_f‹_˛ónups
 ();

4264 
boﬁ
 
usög_eh_f‹_˛ónups_p
 ();

4265 c⁄° *
gë_åì_code_«me
 (
åì_code
);

4266 
£t_ˇŒ_ex¥_Êags
 (
åì
, );

4267 
åì
 
wÆk_åì_1
 (åì*, 
wÆk_åì_‚
, *, 
poöãr_£t_t
*,

4268 
wÆk_åì_lh
);

4269 
åì
 
wÆk_åì_wôhout_du∂iˇãs_1
 (åì*, 
wÆk_åì_‚
, *,

4270 
wÆk_åì_lh
);

4271 
	#wÆk_åì
(
a
,
b
,
c
,
d
) \

4272 
	`wÆk_åì_1
 (
a
, 
b
, 
c
, 
d
, 
NULL
)

	)

4273 
	#wÆk_åì_wôhout_du∂iˇãs
(
a
,
b
,
c
) \

4274 
	`wÆk_åì_wôhout_du∂iˇãs_1
 (
a
, 
b
, 
c
, 
NULL
)

	)

4276 
åì
 
gë_ba£_addªss
 (åì 
t
);

4277 
åì
 
dr›_åì_ovîÊow
 (tree);

4278 
åì_m≠_ba£_eq
 (const *, const *);

4279 
åì_m≠_ba£_hash
 (const *);

4280 
åì_m≠_ba£_m¨ked_p
 (const *);

4282 
	#åì_m≠_eq
 
åì_m≠_ba£_eq


	)

4283 
åì_m≠_hash
 (const *);

4284 
	#åì_m≠_m¨ked_p
 
åì_m≠_ba£_m¨ked_p


	)

4286 
	#åì_de˛_m≠_eq
 
åì_m≠_ba£_eq


	)

4287 
åì_de˛_m≠_hash
 (const *);

4288 
	#åì_de˛_m≠_m¨ked_p
 
åì_m≠_ba£_m¨ked_p


	)

4290 
	#åì_öt_m≠_eq
 
åì_m≠_ba£_eq


	)

4291 
	#åì_öt_m≠_hash
 
åì_m≠_ba£_hash


	)

4292 
	#åì_öt_m≠_m¨ked_p
 
åì_m≠_ba£_m¨ked_p


	)

4294 
	#åì_¥i‹ôy_m≠_eq
 
åì_m≠_ba£_eq


	)

4295 
	#åì_¥i‹ôy_m≠_hash
 
åì_m≠_ba£_hash


	)

4296 
	#åì_¥i‹ôy_m≠_m¨ked_p
 
åì_m≠_ba£_m¨ked_p


	)

4298 
	#åì_vec_m≠_eq
 
åì_m≠_ba£_eq


	)

4299 
	#åì_vec_m≠_hash
 
åì_de˛_m≠_hash


	)

4300 
	#åì_vec_m≠_m¨ked_p
 
åì_m≠_ba£_m¨ked_p


	)

4304 
ölöe
 

4305 
	$öô_ˇŒ_ex¥_¨g_ôî©‹
 (
åì
 
exp
, 
ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4307 
ôî
->
t
 = 
exp
;

4308 
ôî
->
n
 = 
	`ˇŒ_ex¥_«rgs
 (
exp
);

4309 
ôî
->
i
 = 0;

4310 
	}
}

4312 
ölöe
 

4313 
	$öô_c⁄°_ˇŒ_ex¥_¨g_ôî©‹
 (
c⁄°_åì
 
exp
, 
c⁄°_ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4315 
ôî
->
t
 = 
exp
;

4316 
ôî
->
n
 = 
	`ˇŒ_ex¥_«rgs
 (
exp
);

4317 
ôî
->
i
 = 0;

4318 
	}
}

4322 
ölöe
 
åì


4323 
	$√xt_ˇŒ_ex¥_¨g
 (
ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4325 
åì
 
ªsu…
;

4326 i‡(
ôî
->
i
 >ôî->
n
)

4327  
NULL_TREE
;

4328 
ªsu…
 = 
	`CALL_EXPR_ARG
 (
ôî
->
t
, iãr->
i
);

4329 
ôî
->
i
++;

4330  
ªsu…
;

4331 
	}
}

4333 
ölöe
 
c⁄°_åì


4334 
	$√xt_c⁄°_ˇŒ_ex¥_¨g
 (
c⁄°_ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4336 
c⁄°_åì
 
ªsu…
;

4337 i‡(
ôî
->
i
 >ôî->
n
)

4338  
NULL_TREE
;

4339 
ªsu…
 = 
	`CALL_EXPR_ARG
 (
ôî
->
t
, iãr->
i
);

4340 
ôî
->
i
++;

4341  
ªsu…
;

4342 
	}
}

4348 
ölöe
 
åì


4349 
	$fú°_ˇŒ_ex¥_¨g
 (
åì
 
exp
, 
ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4351 
	`öô_ˇŒ_ex¥_¨g_ôî©‹
 (
exp
, 
ôî
);

4352  
	`√xt_ˇŒ_ex¥_¨g
 (
ôî
);

4353 
	}
}

4355 
ölöe
 
c⁄°_åì


4356 
	$fú°_c⁄°_ˇŒ_ex¥_¨g
 (
c⁄°_åì
 
exp
, 
c⁄°_ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4358 
	`öô_c⁄°_ˇŒ_ex¥_¨g_ôî©‹
 (
exp
, 
ôî
);

4359  
	`√xt_c⁄°_ˇŒ_ex¥_¨g
 (
ôî
);

4360 
	}
}

4364 
ölöe
 
boﬁ


4365 
	$m‹e_ˇŒ_ex¥_¨gs_p
 (c⁄° 
ˇŒ_ex¥_¨g_ôî©‹
 *
ôî
)

4367  (
ôî
->
i
 < iãr->
n
);

4368 
	}
}

4372 
	#FOR_EACH_CALL_EXPR_ARG
(
¨g
, 
ôî
, 
ˇŒ
) \

4373 (
¨g
Ë
	`fú°_ˇŒ_ex¥_¨g
 ((
ˇŒ
), &(
ôî
)); (arg); \

4374 (
¨g
Ë
	`√xt_ˇŒ_ex¥_¨g
 (&(
ôî
)))

	)

4376 
	#FOR_EACH_CONST_CALL_EXPR_ARG
(
¨g
, 
ôî
, 
ˇŒ
) \

4377 (
¨g
Ë
	`fú°_c⁄°_ˇŒ_ex¥_¨g
 ((
ˇŒ
), &(
ôî
)); (arg); \

4378 (
¨g
Ë
	`√xt_c⁄°_ˇŒ_ex¥_¨g
 (&(
ôî
)))

	)

4381 
ölöe
 
boﬁ


4382 
	$is_œng_•ecific
 (
åì
 
t
)

4384  
	`TREE_CODE
 (
t
Ë=
LANG_TYPE
 || TREE_CODE (tË>
NUM_TREE_CODES
;

4385 
	}
}

4388 
	#BUILTIN_VALID_P
(
FNCODE
) \

4389 (
	`IN_RANGE
 (()
FNCODE
, (()
BUILT_IN_NONE
Ë+ 1, ((Ë
END_BUILTINS
Ë- 1))

	)

4392 
ölöe
 
åì


4393 
	$buûtö_de˛_ex∂icô
 (
buût_ö_fun˘i⁄
 
‚code
)

4395 
	`gcc_checkög_as£π
 (
	`BUILTIN_VALID_P
 (
‚code
));

4397  
buûtö_öfo
.
de˛
[(
size_t
)
‚code
];

4398 
	}
}

4401 
ölöe
 
åì


4402 
	$buûtö_de˛_im∂icô
 (
buût_ö_fun˘i⁄
 
‚code
)

4404 
size_t
 
uns_‚code
 = (size_t)
‚code
;

4405 
	`gcc_checkög_as£π
 (
	`BUILTIN_VALID_P
 (
‚code
));

4407 i‡(!
buûtö_öfo
.
im∂icô_p
[
uns_‚code
])

4408  
NULL_TREE
;

4410  
buûtö_öfo
.
de˛
[
uns_‚code
];

4411 
	}
}

4416 
ölöe
 

4417 
	$£t_buûtö_de˛
 (
buût_ö_fun˘i⁄
 
‚code
, 
åì
 
de˛
, 
boﬁ
 
im∂icô_p
)

4419 
size_t
 
u‚code
 = (size_t)
‚code
;

4421 
	`gcc_checkög_as£π
 (
	`BUILTIN_VALID_P
 (
‚code
)

4422 && (
de˛
 !
NULL_TREE
 || !
im∂icô_p
));

4424 
buûtö_öfo
.
de˛
[
u‚code
] = decl;

4425 
buûtö_öfo
.
im∂icô_p
[
u‚code
] = implicit_p;

4426 
	}
}

4430 
ölöe
 

4431 
	$£t_buûtö_de˛_im∂icô_p
 (
buût_ö_fun˘i⁄
 
‚code
, 
boﬁ
 
im∂icô_p
)

4433 
size_t
 
uns_‚code
 = (size_t)
‚code
;

4435 
	`gcc_checkög_as£π
 (
	`BUILTIN_VALID_P
 (
‚code
)

4436 && 
buûtö_öfo
.
de˛
[
uns_‚code
] !
NULL_TREE
);

4438 
buûtö_öfo
.
im∂icô_p
[
uns_‚code
] = implicit_p;

4439 
	}
}

4444 
ölöe
 
boﬁ


4445 
	$buûtö_de˛_ex∂icô_p
 (
buût_ö_fun˘i⁄
 
‚code
)

4447 
	`gcc_checkög_as£π
 (
	`BUILTIN_VALID_P
 (
‚code
));

4448  (
buûtö_öfo
.
de˛
[(
size_t
)
‚code
] !
NULL_TREE
);

4449 
	}
}

4453 
ölöe
 
boﬁ


4454 
	$buûtö_de˛_im∂icô_p
 (
buût_ö_fun˘i⁄
 
‚code
)

4456 
size_t
 
uns_‚code
 = (size_t)
‚code
;

4458 
	`gcc_checkög_as£π
 (
	`BUILTIN_VALID_P
 (
‚code
));

4459  (
buûtö_öfo
.
de˛
[
uns_‚code
] !
NULL_TREE


4460 && 
buûtö_öfo
.
im∂icô_p
[
uns_‚code
]);

4461 
	}
}

4466 
ölöe
 
boﬁ


4467 
	$is_globÆ_v¨
 (
c⁄°_åì
 
t
)

4469  (
	`TREE_STATIC
 (
t
Ë|| 
	`DECL_EXTERNAL
 (t));

4470 
	}
}

4476 
ölöe
 
boﬁ


4477 
	$may_be_Æü£d
 (
c⁄°_åì
 
v¨
)

4479  (
	`TREE_CODE
 (
v¨
Ë!
CONST_DECL


4480 && (
	`TREE_PUBLIC
 (
v¨
)

4481 || 
	`DECL_EXTERNAL
 (
v¨
)

4482 || 
	`TREE_ADDRESSABLE
 (
v¨
))

4483 && !((
	`TREE_STATIC
 (
v¨
Ë|| 
	`TREE_PUBLIC
 (v¨Ë|| 
	`DECL_EXTERNAL
 (var))

4484 && ((
	`TREE_READONLY
 (
v¨
)

4485 && !
	`TYPE_NEEDS_CONSTRUCTING
 (
	`TREE_TYPE
 (
v¨
)))

4486 || (
	`TREE_CODE
 (
v¨
Ë=
VAR_DECL


4487 && 
	`DECL_NONALIASED
 (
v¨
)))));

4488 
	}
}

4491 
ölöe
 
˛_›timiz©i⁄
 *

4492 
	$›ts_f‹_‚
 (
c⁄°_åì
 
‚de˛
)

4494 
åì
 
‚_›ts
 = 
	`DECL_FUNCTION_SPECIFIC_OPTIMIZATION
 (
‚de˛
);

4495 i‡(
‚_›ts
 =
NULL_TREE
)

4496 
‚_›ts
 = 
›timiz©i⁄_deÁu…_node
;

4497  
	`TREE_OPTIMIZATION
 (
‚_›ts
);

4498 
	}
}

4502 
	#›t_f‹_‚
(
‚de˛
, 
›t
Ë(
	`›ts_f‹_‚
 (‚de˛)->
x_
##›t)

	)

4507 #i‚de‡
NO_DOT_IN_LABEL


4508 
	#ANON_AGGRNAME_FORMAT
 "._%d"

	)

4509 
	#ANON_AGGRNAME_P
(
ID_NODE
Ë(
	`IDENTIFIER_POINTER
 (ID_NODE)[0] == '.' \

4510 && 
	`IDENTIFIER_POINTER
 (
ID_NODE
)[1] ='_')

	)

4512 #i‚de‡
NO_DOLLAR_IN_LABEL


4513 
	#ANON_AGGRNAME_FORMAT
 "$_%d"

	)

4514 
	#ANON_AGGRNAME_P
(
ID_NODE
Ë(
	`IDENTIFIER_POINTER
 (ID_NODE)[0] == '$' \

4515 && 
	`IDENTIFIER_POINTER
 (
ID_NODE
)[1] ='_')

	)

4517 
	#ANON_AGGRNAME_PREFIX
 "__™⁄_"

	)

4518 
	#ANON_AGGRNAME_P
(
ID_NODE
) \

4519 (!
	`°∫cmp
 (
	`IDENTIFIER_POINTER
 (
ID_NODE
), 
ANON_AGGRNAME_PREFIX
, \

4520  (
ANON_AGGRNAME_PREFIX
Ë- 1))

	)

4521 
	#ANON_AGGRNAME_FORMAT
 "__™⁄_%d"

	)

4531 
£t_de˛_πl
 (
åì
, 
πx
);

4532 
boﬁ
 
com∂ëe_˘‹_©_Àvñ_p
 (
c⁄°_åì
, 
HOST_WIDE_INT
, const_tree);

4536 
åì
 
¨øy_ªf_up_bound
 (tree);

4538 
åì
 
buûd_≥rs⁄Æôy_fun˘i⁄
 (const *);

4543 
åì
 
gë_ö√r_ª„ªn˚
 (åì, 
HOST_WIDE_INT
 *, HOST_WIDE_INT *,

4544 
åì
 *, 
machöe_mode
 *, *, *,

4545 
boﬁ
);

4549 
åì
 
¨øy_ªf_low_bound
 (tree);

4554 
boﬁ
 
f‹˚_fﬁdög_buûtö_c⁄°™t_p
;

4556 
boﬁ
 
avoid_fﬁdög_ölöe_buûtö
 (
åì
);

4557 
åì
 
fﬁd_ˇŒ_ex¥
 (
loˇti⁄_t
,Åªe, 
boﬁ
);

4558 
åì
 
fﬁd_buûtö_Âuts
 (
loˇti⁄_t
,Åªe,Åªe, 
boﬁ
, bool,Åree);

4559 
åì
 
fﬁd_buûtö_°r˝y
 (
loˇti⁄_t
,Åree,Åree,Åree,Åree);

4560 
åì
 
fﬁd_buûtö_°∫˝y
 (
loˇti⁄_t
,Åree,Åree,Åree,Åree,Åree);

4561 
åì
 
fﬁd_buûtö_°rˇt
 (
loˇti⁄_t
,Åree,Åree,Åree);

4562 
åì
 
fﬁd_buûtö_mem‹y_chk
 (
loˇti⁄_t
,Åªe,Åªe,Åªe,Åªe,Åªe,Åªe, 
boﬁ
,

4563 
buût_ö_fun˘i⁄
);

4564 
åì
 
fﬁd_buûtö_°x˝y_chk
 (
loˇti⁄_t
,Åªe,Åªe,Åªe,Åªe,Åªe, 
boﬁ
,

4565 
buût_ö_fun˘i⁄
);

4566 
åì
 
fﬁd_buûtö_°xn˝y_chk
 (
loˇti⁄_t
,Åªe,Åªe,Åªe,Åªe,Åªe, 
boﬁ
,

4567 
buût_ö_fun˘i⁄
);

4568 
åì
 
fﬁd_buûtö_ex≥˘
 (
loˇti⁄_t
,Åree,Åree,Åree);

4569 
boﬁ
 
fﬁd_buûtö_√xt_¨g
 (
åì
, bool);

4570 
buût_ö_fun˘i⁄
 
buûtö_m©h‚_code
 (
c⁄°_åì
);

4571 
åì
 
fﬁd_buûtö_ˇŒ_¨øy
 (
loˇti⁄_t
,Åree,Åree, ,Åree *);

4572 
åì
 
buûd_ˇŒ_ex¥_loc_¨øy
 (
loˇti⁄_t
,Åree, ,Åree *);

4573 
åì
 
buûd_ˇŒ_ex¥_loc_vec
 (
loˇti⁄_t
,Åªe, 
vec
<åì, 
va_gc
> *);

4574 
åì
 
buûd_ˇŒ_ex¥_loc
 (
loˇti⁄_t
,Åree, , ...);

4575 
åì
 
buûd_ˇŒ_ex¥
 (tree, , ...);

4576 
åì
 
m©h‚_buût_ö
 (åì, 
buût_ö_fun˘i⁄
 
‚
);

4577 
åì
 
c_°æí
 (tree, );

4578 
åì
 
buûd_°rög_lôîÆ
 (, const *);

4579 
πx
 
buûtö_mem£t_ªad_°r
 (*, 
HOST_WIDE_INT
, 
machöe_mode
);

4580 
boﬁ
 
is_buûtö_‚
 (
åì
);

4581 
boﬁ
 
gë_obje˘_Æignmít_1
 (
åì
, *,

4582 
HOST_WIDE_INT
 *);

4583 
gë_obje˘_Æignmít
 (
åì
);

4584 
boﬁ
 
gë_poöãr_Æignmít_1
 (
åì
, *,

4585 
HOST_WIDE_INT
 *);

4586 
gë_poöãr_Æignmít
 (
åì
);

4587 
åì
 
fﬁd_ˇŒ_°mt
 (
gim∂e
, 
boﬁ
);

4588 
åì
 
gim∂e_fﬁd_buûtö_¢¥ötf_chk
 (
gim∂e
,Åªe, 
buût_ö_fun˘i⁄
);

4589 
£t_buûtö_u£r_as£mbÀr_«me
 (
åì
 
de˛
, c⁄° *
asm•ec
);

4590 
boﬁ
 
is_sim∂e_buûtö
 (
åì
);

4591 
boﬁ
 
is_öex≥nsive_buûtö
 (
åì
);

	@include/varasm.h

20 #i‚de‡
GCC_VARASM_H


21 
	#GCC_VARASM_H


	)

23 
åì
 
åì_ouçut_c⁄°™t_def
 (tree);

24 
make_de˛_πl
 (
åì
);

25 
πx
 
make_de˛_πl_f‹_debug
 (
åì
);

26 
make_de˛_⁄e_⁄ly
 (
åì
,Åree);

27 
suµ‹ts_⁄e_⁄ly
 ();

28 
ªsﬁve_unique_£˘i⁄
 (
åì
, , );

29 
m¨k_ª„ªn˚d
 (
åì
);

30 
m¨k_de˛_ª„ªn˚d
 (
åì
);

31 
nŸi˚_globÆ_symbﬁ
 (
åì
);

32 
£t_u£r_as£mbÀr_«me
 (
åì
, const *);

33 
¥o˚ss_≥ndög_as£mbÀ_exã∫Æs
 ();

34 
boﬁ
 
de˛_ª∂a˚abÀ_p
 (
åì
);

35 
boﬁ
 
de˛_böds_to_cuºít_def_p
 (
åì
);

36 
és_modñ
 
de˛_deÁu…_és_modñ
 (
c⁄°_åì
);

39 
de˛¨e_wók
 (
åì
);

42 
mîge_wók
 (
åì
,Åree);

45 
as£mbÀ_Æüs
 (
åì
,Åree);

56 
åì
 
öôülizî_c⁄°™t_vÆid_p
 (tree,Åree);

61 
boﬁ
 
öôülizî_c⁄°™t_vÆid_f‹_bôfõld_p
 (
åì
);

67 
boﬁ
 
c⁄°ru˘‹_°©ic_‰om_ñts_p
 (
c⁄°_åì
);

	@include/vec.h

22 #i‚de‡
GCC_VEC_H


23 
	#GCC_VEC_H


	)

35 #ifde‡
GENERATOR_FILE


36 
	#VEC_GC_ENABLED
 0

	)

38 
	#VEC_GC_ENABLED
 1

	)

41 
	~"°©i°ics.h
"

43 #i‡
VEC_GC_ENABLED


44 
	~"ggc.h
"

46 #i‚de‡
GCC_GGC_H


51 
ggc_‰ì
 (*);

52 
size_t
 
ggc_round_Æloc_size
 (size_à
ªque°ed_size
);

53 *
ggc_ªÆloc_°©
 (*, 
size_t
 
MEM_STAT_DECL
);

206 
dump_vec_loc_°©i°ics
 ();

212 
	svec_¥efix


218 
ªgi°î_ovîhód
 (
size_t
, const *, , const *);

219 
ªÀa£_ovîhód
 ();

220 
ˇlcuœã_Æloˇti⁄
 (
vec_¥efix
 *, , 
boﬁ
);

221 
ˇlcuœã_Æloˇti⁄_1
 (, );

229 
	mãm∂©e
 <
	mty≥«me
,Åy≥«me,Åy≥«me> 
‰õnd
 
	mvec
;

232 
‰õnd
 
	mva_gc
;

233 
‰õnd
 
	mva_gc_©omic
;

234 
‰õnd
 
	mva_hóp
;

236 
	mm_Æloc
 : 31;

237 
	mm_usög_auto_°‹age
 : 1;

238 
	mm_num
;

245 
ölöe
 

246 
	gvec_¥efix
::
	$ˇlcuœã_Æloˇti⁄
 (
vec_¥efix
 *
pfx
, 
ª£rve
,

247 
boﬁ
 
exa˘
)

249 i‡(
exa˘
)

250  (
pfx
 ?Öfx->
m_num
 : 0Ë+ 
ª£rve
;

251 i‡(!
pfx
)

252  
	`MAX
 (4, 
ª£rve
);

253  
	`ˇlcuœã_Æloˇti⁄_1
 (
pfx
->
m_Æloc
,Öfx->
m_num
 + 
ª£rve
);

254 
	}
}

256 
	gãm∂©e
<
	gty≥«me
,Åy≥«me,Åy≥«me> 
	gvec
;

263 
	svl_embed
 { };

264 
	svl_±r
 { };

275 
	sva_hóp


279 
vl_±r
 
	tdeÁu…_œyout
;

281 
	mãm∂©e
<
ty≥«me
 
	mT
>

282 
ª£rve
 (
vec
<
T
, 
va_hóp
, 
vl_embed
> *&, , 
boﬁ


283 
CXX_MEM_STAT_INFO
);

285 
	mãm∂©e
<
ty≥«me
 
	mT
>

286 
ªÀa£
 (
vec
<
T
, 
va_hóp
, 
vl_embed
> *&);

295 
	gãm∂©e
<
ty≥«me
 
	gT
>

296 
ölöe
 

297 
	gva_hóp
::
ª£rve
 (
vec
<
T
, 
va_hóp
, 
vl_embed
> *&
v
, ª£rve, 
boﬁ
 
exa˘


298 
MEM_STAT_DECL
)

300 
	gÆloc


301 
vec_¥efix
::
ˇlcuœã_Æloˇti⁄
 (
v
 ? &v->
m_ve˝fx
 : 0, 
ª£rve
, 
exa˘
);

302 
gcc_checkög_as£π
 (
Æloc
);

304 i‡(
	gGATHER_STATISTICS
 && 
	gv
)

305 
	gv
->
	gm_ve˝fx
.
ªÀa£_ovîhód
 ();

307 
size_t
 
	gsize
 = 
vec
<
T
, 
	gva_hóp
, 
	gvl_embed
>::
embedded_size
 (
Æloc
);

308 
	g√Àm
 = 
v
 ? v->
Àngth
 () : 0;

309 
	gv
 = 
°©ic_ˇ°
 <
vec
<
T
, 
	gva_hóp
, 
	gvl_embed
> *> (
xªÆloc
 (
v
, 
size
));

310 
	gv
->
embedded_öô
 (
Æloc
, 
√Àm
);

312 i‡(
	gGATHER_STATISTICS
)

313 
	gv
->
	gm_ve˝fx
.
ªgi°î_ovîhód
 (
size
 
FINAL_PASS_MEM_STAT
);

319 
	gãm∂©e
<
ty≥«me
 
	gT
>

321 
	gva_hóp
::
ªÀa£
 (
vec
<
T
, 
va_hóp
, 
vl_embed
> *&
v
)

323 i‡(
	gv
 =
NULL
)

326 i‡(
	gGATHER_STATISTICS
)

327 
	gv
->
	gm_ve˝fx
.
ªÀa£_ovîhód
 ();

328 ::
‰ì
 (
v
);

329 
	gv
 = 
NULL
;

336 
	sva_gc


342 
vl_embed
 
	tdeÁu…_œyout
;

344 
	mãm∂©e
<
ty≥«me
 
	mT
,Åy≥«mê
	mA
>

345 
ª£rve
 (
vec
<
T
, 
A
, 
vl_embed
> *&, , 
boﬁ


346 
CXX_MEM_STAT_INFO
);

348 
	mãm∂©e
<
ty≥«me
 
	mT
,Åy≥«mê
	mA
>

349 
ªÀa£
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
);

355 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

356 
ölöe
 

357 
	gva_gc
::
ªÀa£
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
)

359 i‡(
	gv
)

360 ::
ggc_‰ì
 (
v
);

361 
	gv
 = 
NULL
;

370 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

372 
	gva_gc
::
ª£rve
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, ª£rve, 
boﬁ
 
exa˘


373 
MEM_STAT_DECL
)

375 
	gÆloc


376 
vec_¥efix
::
ˇlcuœã_Æloˇti⁄
 (
v
 ? &v->
m_ve˝fx
 : 0, 
ª£rve
, 
exa˘
);

377 i‡(!
	gÆloc
)

379 ::
ggc_‰ì
 (
v
);

380 
	gv
 = 
NULL
;

385 
size_t
 
	gsize
 = 
vec
<
T
, 
	gA
, 
	gvl_embed
>::
embedded_size
 (
Æloc
);

388 
	gsize
 = ::
ggc_round_Æloc_size
 (
size
);

391 
size_t
 
	gvec_off£t
 =  (
vec_¥efix
);

392 
size_t
 
	gñt_size
 =  (
T
);

393 
	gÆloc
 = (
size
 - 
vec_off£t
Ë/ 
ñt_size
;

396 
	gsize
 = 
vec_off£t
 + 
Æloc
 * 
ñt_size
;

398 
	g√Àm
 = 
v
 ? v->
Àngth
 () : 0;

399 
	gv
 = 
°©ic_ˇ°
 <
vec
<
T
, 
	gA
, 
	gvl_embed
> *> (::
ggc_ªÆloc_°©
 (
v
, 
size


400 
PASS_MEM_STAT
));

401 
	gv
->
embedded_öô
 (
Æloc
, 
√Àm
);

408 
	gva_gc_©omic
 : 
va_gc


424 
	gãm∂©e
<
ty≥«me
 
	gT
,

425 
ty≥«me
 
	gA
 = 
va_hóp
,

426 
ty≥«me
 
	gL
 =Åy≥«mê
A
::
deÁu…_œyout
>

427 
GTY
((
u£r
)Ë
vec


435 
	svnuŒ


437 
	mãm∂©e
 <
ty≥«me
 
	mT
,Åy≥«mê
	mA
,Åy≥«mê
	mL
>

438 
›î©‹
 
	mvec
<
	mT
, 
	mA
, 
	mL
> () {  vec<T, A, L>(); }

440 
vnuŒ
 
vNULL
;

469 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

470 
GTY
((
u£r
)Ë
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>

472 
	gpublic
:

473 
Æloˇãd
 (Ëc⁄° {  
m_ve˝fx
.
m_Æloc
; }

474 
Àngth
 (Ëc⁄° {  
	gm_ve˝fx
.
	gm_num
; }

475 
boﬁ
 
is_em±y
 (Ëc⁄° {  
	gm_ve˝fx
.
	gm_num
 == 0; }

476 
T
 *
addªss
 (Ë{  
	gm_vecd©a
; }

477 c⁄° 
T
 *
addªss
 (Ëc⁄° {  
	gm_vecd©a
; }

478 c⁄° 
	gT
 &
	g›î©‹
[] () const;

479 
	gT
 &
	g›î©‹
[] ();

480 
	gT
 &
œ°
 ();

481 
boﬁ
 
•a˚
 () const;

482 
boﬁ
 
ôî©e
 (, 
T
 *) const;

483 
boﬁ
 
ôî©e
 (, 
T
 **) const;

484 
vec
 *
c›y
 (
ALONE_CXX_MEM_STAT_INFO
) const;

485 
•li˚
 (
vec
 &);

486 
•li˚
 (
vec
 *
§c
);

487 
T
 *
quick_push
 (const T &);

488 
	gT
 &
p›
 ();

489 
åunˇã
 ();

490 
quick_ö£π
 (, c⁄° 
T
 &);

491 
‹dîed_ªmove
 ();

492 
un‹dîed_ªmove
 ();

493 
block_ªmove
 (, );

494 
qs‹t
 ((*) (const *, const *));

495 
T
 *
b£¨ch
 (c⁄° *
key
, (*
com∑r
)(const *, const *));

496 
lowî_bound
 (
T
, 
boﬁ
 (*)(const T &, const T &)) const;

497 
size_t
 
embedded_size
 ();

498 
embedded_öô
 (, = 0, = 0);

499 
quick_grow
 (
Àn
);

500 
quick_grow_˛óªd
 (
Àn
);

503 
	gãm∂©e
 <
	gty≥«me
,Åy≥«me,Åy≥«me> 
‰õnd
 
	gvec
;

506 
‰õnd
 
	gva_gc
;

507 
‰õnd
 
	gva_gc_©omic
;

508 
‰õnd
 
	gva_hóp
;

512 
vec_¥efix
 
	gm_ve˝fx
;

513 
T
 
	gm_vecd©a
[1];

532 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

533 
ölöe
 
boﬁ


534 
vec_ß„_•a˚
 (c⁄° 
vec
<
T
, 
A
, 
vl_embed
> *
v
, 
√Àms
)

536  
	gv
 ? v->
•a˚
 (
√Àms
) :Çelems == 0;

541 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

542 
ölöe
 

543 
vec_ß„_Àngth
 (c⁄° 
vec
<
T
, 
A
, 
vl_embed
> *
v
)

545  
	gv
 ? v->
Àngth
 () : 0;

550 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

551 
ölöe
 
T
 *

552 
vec_ß„_addªss
 (
vec
<
T
, 
A
, 
vl_embed
> *
v
)

554  
	gv
 ? v->
addªss
 (Ë: 
NULL
;

559 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

560 
ölöe
 
boﬁ


561 
vec_ß„_is_em±y
 (
vec
<
T
, 
A
, 
vl_embed
> *
v
)

563  
	gv
 ? v->
is_em±y
 (Ë: 
åue
;

569 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

570 
ölöe
 
boﬁ


571 
vec_ß„_ª£rve
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, 
√Àms
, 
boﬁ
 
exa˘
 = 
Ál£


572 
CXX_MEM_STAT_INFO
)

574 
boﬁ
 
exãnd
 = 
√Àms
 ? !
vec_ß„_•a˚
 (
v
,ÇñemsË: 
Ál£
;

575 i‡(
	gexãnd
)

576 
	gA
::
ª£rve
 (
v
, 
√Àms
, 
exa˘
 
PASS_MEM_STAT
);

577  
	gexãnd
;

580 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

581 
ölöe
 
boﬁ


582 
vec_ß„_ª£rve_exa˘
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, 
√Àms


583 
CXX_MEM_STAT_INFO
)

585  
vec_ß„_ª£rve
 (
v
, 
√Àms
, 
åue
 
PASS_MEM_STAT
);

592 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

593 
ölöe
 

594 
vec_Æloc
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, 
√Àms
 
CXX_MEM_STAT_INFO
)

596 
	gv
 = 
NULL
;

597 
vec_ß„_ª£rve
 (
v
, 
√Àms
, 
Ál£
 
PASS_MEM_STAT
);

603 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

604 
ölöe
 

605 
vec_‰ì
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
)

607 
	gA
::
ªÀa£
 (
v
);

612 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

613 
ölöe
 

614 
vec_ß„_grow
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, 
Àn
 
CXX_MEM_STAT_INFO
)

616 
	gﬁdÀn
 = 
vec_ß„_Àngth
 (
v
);

617 
gcc_checkög_as£π
 (
Àn
 >
ﬁdÀn
);

618 
vec_ß„_ª£rve_exa˘
 (
v
, 
Àn
 - 
ﬁdÀn
 
PASS_MEM_STAT
);

619 
	gv
->
quick_grow
 (
Àn
);

624 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

625 
ölöe
 

626 
vec_ß„_grow_˛óªd
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, 
Àn
 
CXX_MEM_STAT_INFO
)

628 
	gﬁdÀn
 = 
vec_ß„_Àngth
 (
v
);

629 
vec_ß„_grow
 (
v
, 
Àn
 
PASS_MEM_STAT
);

630 
mem£t
 (&(
v
->
addªss
 ()[
ﬁdÀn
]), 0,  (
T
Ë* (
Àn
 - oldlen));

635 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

636 
ölöe
 
boﬁ


637 
vec_ß„_ôî©e
 (c⁄° 
vec
<
T
, 
A
, 
vl_embed
> *
v
, 
ix
, T **
±r
)

639 i‡(
	gv
)

640  
	gv
->
ôî©e
 (
ix
, 
±r
);

643 *
	g±r
 = 0;

644  
	gÁl£
;

648 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

649 
ölöe
 
boﬁ


650 
vec_ß„_ôî©e
 (c⁄° 
vec
<
T
, 
A
, 
vl_embed
> *
v
, 
ix
, T *
±r
)

652 i‡(
	gv
)

653  
	gv
->
ôî©e
 (
ix
, 
±r
);

656 *
	g±r
 = 0;

657  
	gÁl£
;

664 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

665 
ölöe
 
T
 *

666 
vec_ß„_push
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, c⁄° T &
obj
 
CXX_MEM_STAT_INFO
)

668 
vec_ß„_ª£rve
 (
v
, 1, 
Ál£
 
PASS_MEM_STAT
);

669  
	gv
->
quick_push
 (
obj
);

675 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

676 
ölöe
 

677 
vec_ß„_ö£π
 (
vec
<
T
, 
A
, 
vl_embed
> *&
v
, 
ix
, c⁄° T &
obj


678 
CXX_MEM_STAT_INFO
)

680 
vec_ß„_ª£rve
 (
v
, 1, 
Ál£
 
PASS_MEM_STAT
);

681 
	gv
->
quick_ö£π
 (
ix
, 
obj
);

686 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

687 
ölöe
 

688 
vec_ß„_åunˇã
 (
vec
<
T
, 
A
, 
vl_embed
> *
v
, 
size
)

690 i‡(
	gv
)

691 
	gv
->
åunˇã
 (
size
);

696 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

697 
ölöe
 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
> *

698 
vec_ß„_c›y
 (
vec
<
T
, 
A
, 
vl_embed
> *
§c
 
CXX_MEM_STAT_INFO
)

700  
	g§c
 ? src->
c›y
 (
ALONE_PASS_MEM_STAT
Ë: 
NULL
;

705 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

706 
ölöe
 

707 
vec_ß„_•li˚
 (
vec
<
T
, 
A
, 
vl_embed
> *&
d°
, vec<T, A, vl_embed> *
§c


708 
CXX_MEM_STAT_INFO
)

710 
	g§c_Àn
 = 
vec_ß„_Àngth
 (
§c
);

711 i‡(
	g§c_Àn
)

713 
vec_ß„_ª£rve_exa˘
 (
d°
, 
vec_ß„_Àngth
 (d°Ë+ 
§c_Àn


714 
PASS_MEM_STAT
);

715 
	gd°
->
•li˚
 (*
§c
);

723 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

724 
ölöe
 c⁄° 
	gT
 &

725 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
›î©‹
[] (
ix
) const

727 
gcc_checkög_as£π
 (
ix
 < 
m_ve˝fx
.
m_num
);

728  
	gm_vecd©a
[
ix
];

731 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

732 
ölöe
 
	gT
 &

733 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
›î©‹
[] (
ix
)

735 
gcc_checkög_as£π
 (
ix
 < 
m_ve˝fx
.
m_num
);

736  
	gm_vecd©a
[
ix
];

742 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

743 
ölöe
 
	gT
 &

744 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$œ°
 ()

746 
	`gcc_checkög_as£π
 (
m_ve˝fx
.
m_num
 > 0);

747  (*
this
)[
m_ve˝fx
.
m_num
 - 1];

748 
	}
}

757 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

758 
ölöe
 
boﬁ


759 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$•a˚
 (
√Àms
) const

761  
m_ve˝fx
.
m_Æloc
 - m_ve˝fx.
m_num
 >
√Àms
;

762 
	}
}

772 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

773 
ölöe
 
boﬁ


774 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$ôî©e
 (
ix
, 
T
 *
±r
) const

776 i‡(
ix
 < 
m_ve˝fx
.
m_num
)

778 *
±r
 = 
m_vecd©a
[
ix
];

779  
åue
;

783 *
±r
 = 0;

784  
Ál£
;

786 
	}
}

798 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

799 
ölöe
 
boﬁ


800 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$ôî©e
 (
ix
, 
T
 **
±r
) const

802 i‡(
ix
 < 
m_ve˝fx
.
m_num
)

804 *
±r
 = 
	`CONST_CAST
 (
T
 *, &
m_vecd©a
[
ix
]);

805  
åue
;

809 *
±r
 = 0;

810  
Ál£
;

812 
	}
}

817 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

818 
ölöe
 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
> *

819 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$c›y
 (
ALONE_MEM_STAT_DECL
) const

821 
vec
<
T
, 
A
, 
vl_embed
> *
√w_vec
 = 
NULL
;

822 
Àn
 = 
	`Àngth
 ();

823 i‡(
Àn
)

825 
	`vec_Æloc
 (
√w_vec
, 
Àn
 
PASS_MEM_STAT
);

826 
√w_vec
->
	`embedded_öô
 (
Àn
,Üen);

827 
	`mem˝y
 (
√w_vec
->
	`addªss
 (), 
m_vecd©a
,  (
T
Ë* 
Àn
);

829  
√w_vec
;

830 
	}
}

836 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

837 
ölöe
 

838 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
•li˚
 (
vec
<
T
, 
A
, 
vl_embed
> &
§c
)

840 
	gÀn
 = 
§c
.
Àngth
 ();

841 i‡(
	gÀn
)

843 
gcc_checkög_as£π
 (
•a˚
 (
Àn
));

844 
mem˝y
 (
addªss
 (Ë+ 
Àngth
 (), 
§c
.addªs†(), 
Àn
 *  (
T
));

845 
	gm_ve˝fx
.
	gm_num
 +
Àn
;

849 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

850 
ölöe
 

851 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
•li˚
 (
vec
<
T
, 
A
, 
vl_embed
> *
§c
)

853 i‡(
	g§c
)

854 
•li˚
 (*
§c
);

862 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

863 
ölöe
 
T
 *

864 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$quick_push
 (c⁄° 
T
 &
obj
)

866 
	`gcc_checkög_as£π
 (
	`•a˚
 (1));

867 
T
 *
¶Ÿ
 = &
m_vecd©a
[
m_ve˝fx
.
m_num
++];

868 *
¶Ÿ
 = 
obj
;

869  
¶Ÿ
;

870 
	}
}

875 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

876 
ölöe
 
	gT
 &

877 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$p›
 ()

879 
	`gcc_checkög_as£π
 (
	`Àngth
 () > 0);

880  
m_vecd©a
[--
m_ve˝fx
.
m_num
];

881 
	}
}

887 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

888 
ölöe
 

889 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$åunˇã
 (
size
)

891 
	`gcc_checkög_as£π
 (
	`Àngth
 (Ë>
size
);

892 
m_ve˝fx
.
m_num
 = 
size
;

893 
	}
}

899 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

900 
ölöe
 

901 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$quick_ö£π
 (
ix
, c⁄° 
T
 &
obj
)

903 
	`gcc_checkög_as£π
 (
	`Àngth
 (Ë< 
	`Æloˇãd
 ());

904 
	`gcc_checkög_as£π
 (
ix
 <
	`Àngth
 ());

905 
T
 *
¶Ÿ
 = &
m_vecd©a
[
ix
];

906 
	`memmove
 (
¶Ÿ
 + 1, slŸ, (
m_ve˝fx
.
m_num
++ - 
ix
Ë*  (
T
));

907 *
¶Ÿ
 = 
obj
;

908 
	}
}

915 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

916 
ölöe
 

917 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$‹dîed_ªmove
 (
ix
)

919 
	`gcc_checkög_as£π
 (
ix
 < 
	`Àngth
 ());

920 
T
 *
¶Ÿ
 = &
m_vecd©a
[
ix
];

921 
	`memmove
 (
¶Ÿ
, slŸ + 1, (--
m_ve˝fx
.
m_num
 - 
ix
Ë*  (
T
));

922 
	}
}

928 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

929 
ölöe
 

930 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$un‹dîed_ªmove
 (
ix
)

932 
	`gcc_checkög_as£π
 (
ix
 < 
	`Àngth
 ());

933 
m_vecd©a
[
ix
] = m_vecd©a[--
m_ve˝fx
.
m_num
];

934 
	}
}

940 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

941 
ölöe
 

942 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$block_ªmove
 (
ix
, 
Àn
)

944 
	`gcc_checkög_as£π
 (
ix
 + 
Àn
 <
	`Àngth
 ());

945 
T
 *
¶Ÿ
 = &
m_vecd©a
[
ix
];

946 
m_ve˝fx
.
m_num
 -
Àn
;

947 
	`memmove
 (
¶Ÿ
, slŸ + 
Àn
, (
m_ve˝fx
.
m_num
 - 
ix
Ë*  (
T
));

948 
	}
}

954 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

955 
ölöe
 

956 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$qs‹t
 ((*
cmp
) (const *, const *))

958 i‡(
	`Àngth
 () > 1)

959 ::
	`qs‹t
 (
	`addªss
 (), 
	`Àngth
 (),  (
T
), 
cmp
);

960 
	}
}

966 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

967 
ölöe
 
T
 *

968 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$b£¨ch
 (c⁄° *
key
,

969 (*
com∑r
) (const *, const *))

971 c⁄° *
ba£
 = 
this
->
	`addªss
 ();

972 
size_t
 
nmemb
 = 
this
->
	`Àngth
 ();

973 
size_t
 
size
 =  (
T
);

975 
size_t
 
l
, 
u
, 
idx
;

976 c⁄° *
p
;

977 
com∑ris⁄
;

979 
l
 = 0;

980 
u
 = 
nmemb
;

981 
l
 < 
u
)

983 
idx
 = (
l
 + 
u
) / 2;

984 
p
 = (c⁄° *Ë(((c⁄° *Ë
ba£
Ë+ (
idx
 * 
size
));

985 
com∑ris⁄
 = (*
com∑r
Ë(
key
, 
p
);

986 i‡(
com∑ris⁄
 < 0)

987 
u
 = 
idx
;

988 i‡(
com∑ris⁄
 > 0)

989 
l
 = 
idx
 + 1;

991  (
T
 *)
c⁄°_ˇ°
<*>(
p
);

994  
NULL
;

995 
	}
}

1003 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1005 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$lowî_bound
 (
T
 
obj
, 
	$boﬁ
 (*
Às°h™
)(c⁄° 
T
 &, const T &))

1008 
Àn
 = 
	`Àngth
 ();

1009 
hÆf
, 
middÀ
;

1010 
fú°
 = 0;

1011 
Àn
 > 0)

1013 
hÆf
 = 
Àn
 / 2;

1014 
middÀ
 = 
fú°
;

1015 
middÀ
 +
hÆf
;

1016 
T
 
middÀ_ñem
 = (*
this
)[
middÀ
];

1017 i‡(
	`Às°h™
 (
middÀ_ñem
, 
obj
))

1019 
fú°
 = 
middÀ
;

1020 ++
fú°
;

1021 
Àn
 =Üí - 
hÆf
 - 1;

1024 
Àn
 = 
hÆf
;

1026  
fú°
;

1027 
	}
}

1042 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1043 
ölöe
 
size_t


1044 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$embedded_size
 (
Æloc
)

1046 
vec
<
	tT
, 
	tA
, 
	tvl_embed
> 
	tvec_embedded
;

1047  
	`off£tof
 (
vec_embedded
, 
m_vecd©a
Ë+ 
Æloc
 *  (
T
);

1048 
	}
}

1054 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1055 
ölöe
 

1056 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$embedded_öô
 (
Æloc
, 
num
, 
aut
)

1058 
m_ve˝fx
.
m_Æloc
 = 
Æloc
;

1059 
m_ve˝fx
.
m_usög_auto_°‹age
 = 
aut
;

1060 
m_ve˝fx
.
m_num
 = 
num
;

1061 
	}
}

1067 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1068 
ölöe
 

1069 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$quick_grow
 (
Àn
)

1071 
	`gcc_checkög_as£π
 (
	`Àngth
 (Ë<
Àn
 &&Üí <
m_ve˝fx
.
m_Æloc
);

1072 
m_ve˝fx
.
m_num
 = 
Àn
;

1073 
	}
}

1079 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1080 
ölöe
 

1081 
	gvec
<
	gT
, 
	gA
, 
	gvl_embed
>::
	$quick_grow_˛óªd
 (
Àn
)

1083 
ﬁdÀn
 = 
	`Àngth
 ();

1084 
	`quick_grow
 (
Àn
);

1085 
	`mem£t
 (&(
	`addªss
 ()[
ﬁdÀn
]), 0,  (
T
Ë* (
Àn
 - oldlen));

1086 
	}
}

1091 
	gãm∂©e
<
ty≥«me
 
	gT
>

1093 
gt_ggc_mx
 (
vec
<
T
, 
va_gc
> *
v
)

1095 
gt_ggc_mx
 (
T
 &);

1096 
	gi
 = 0; i < 
	gv
->
Àngth
 (); i++)

1097 
gt_ggc_mx
 ((*
v
)[
i
]);

1100 
	gãm∂©e
<
ty≥«me
 
	gT
>

1102 
gt_ggc_mx
 (
vec
<
T
, 
va_gc_©omic
, 
vl_embed
> *
v
 
ATTRIBUTE_UNUSED
)

1111 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1113 
gt_pch_nx
 (
vec
<
T
, 
A
, 
vl_embed
> *
v
)

1115 
gt_pch_nx
 (
T
 &);

1116 
	gi
 = 0; i < 
	gv
->
Àngth
 (); i++)

1117 
gt_pch_nx
 ((*
v
)[
i
]);

1120 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1122 
gt_pch_nx
 (
vec
<
T
 *, 
A
, 
vl_embed
> *
v
, 
gt_poöãr_›î©‹
 
›
, *
cookõ
)

1124 
	gi
 = 0; i < 
	gv
->
Àngth
 (); i++)

1125 
›
 (&((*
v
)[
i
]), 
cookõ
);

1128 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gA
>

1130 
gt_pch_nx
 (
vec
<
T
, 
A
, 
vl_embed
> *
v
, 
gt_poöãr_›î©‹
 
›
, *
cookõ
)

1132 
gt_pch_nx
 (
T
 *, 
gt_poöãr_›î©‹
, *);

1133 
	gi
 = 0; i < 
	gv
->
Àngth
 (); i++)

1134 
gt_pch_nx
 (&((*
v
)[
i
]), 
›
, 
cookõ
);

1166 
	gãm∂©e
<
ty≥«me
 
	gT
>

1167 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>

1169 
	gpublic
:

1172 
¸óã
 (
√Àms
 
CXX_MEM_STAT_INFO
);

1173 
ªÀa£
 ();

1176 
boﬁ
 
exi°s
 () const

1177 {  
	gm_vec
 !
NULL
; }

1179 
boﬁ
 
is_em±y
 () const

1180 {  
	gm_vec
 ? m_vec->
is_em±y
 (Ë: 
åue
; }

1182 
Àngth
 () const

1183 {  
	gm_vec
 ? m_vec->
Àngth
 () : 0; }

1185 
T
 *
addªss
 ()

1186 {  
	gm_vec
 ? m_vec->
	gm_vecd©a
 : 
NULL
; }

1188 c⁄° 
T
 *
addªss
 () const

1189 {  
	gm_vec
 ? m_vec->
	gm_vecd©a
 : 
NULL
; }

1191 c⁄° 
	gT
 &
	g›î©‹
[] (
	gix
) const

1192 {  (*
	gm_vec
)[
ix
]; }

1194 
boﬁ
 
	g›î©‹
!=(c⁄° 
vec
 &
Ÿhî
) const

1195 {  !(*
this
 =
Ÿhî
); }

1197 
boﬁ
 
	g›î©‹
==(c⁄° 
vec
 &
Ÿhî
) const

1198 {  
addªss
 (Ë=
Ÿhî
.address (); }

1200 
	gT
 &
	g›î©‹
[] (
	gix
)

1201 {  (*
	gm_vec
)[
ix
]; }

1203 
	gT
 &
œ°
 ()

1204 {  
	gm_vec
->
œ°
 (); }

1206 
boﬁ
 
•a˚
 (
√Àms
) const

1207 {  
	gm_vec
 ? m_vec->
•a˚
 (
√Àms
) :Çelems == 0; }

1209 
boﬁ
 
ôî©e
 (
ix
, 
T
 *
p
) const;

1210 
boﬁ
 
ôî©e
 (
ix
, 
T
 **
p
) const;

1211 
vec
 
c›y
 (
ALONE_CXX_MEM_STAT_INFO
) const;

1212 
boﬁ
 
ª£rve
 (, boﬁ = 
Ál£
 
CXX_MEM_STAT_INFO
);

1213 
boﬁ
 
ª£rve_exa˘
 (
CXX_MEM_STAT_INFO
);

1214 
•li˚
 (
vec
 &);

1215 
ß„_•li˚
 (
vec
 & 
CXX_MEM_STAT_INFO
);

1216 
T
 *
quick_push
 (const T &);

1217 
T
 *
ß„_push
 (c⁄° T &
CXX_MEM_STAT_INFO
);

1218 
	gT
 &
p›
 ();

1219 
åunˇã
 ();

1220 
ß„_grow
 (
CXX_MEM_STAT_INFO
);

1221 
ß„_grow_˛óªd
 (
CXX_MEM_STAT_INFO
);

1222 
quick_grow
 ();

1223 
quick_grow_˛óªd
 ();

1224 
quick_ö£π
 (, c⁄° 
T
 &);

1225 
ß„_ö£π
 (, c⁄° 
T
 & 
CXX_MEM_STAT_INFO
);

1226 
‹dîed_ªmove
 ();

1227 
un‹dîed_ªmove
 ();

1228 
block_ªmove
 (, );

1229 
qs‹t
 ((*) (const *, const *));

1230 
T
 *
b£¨ch
 (c⁄° *
key
, (*
com∑r
)(const *, const *));

1231 
lowî_bound
 (
T
, 
boﬁ
 (*)(const T &, const T &)) const;

1233 
boﬁ
 
usög_auto_°‹age
 () const;

1237 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_embed
> *
	gm_vec
;

1247 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gN
 = 0>

1248 
˛ass
 
auto_vec
 : 
public
 
vec
<
T
, 
	gva_hóp
>

1250 
	gpublic
:

1251 
auto_vec
 ()

1253 
m_auto
.
embedded_öô
 (
MAX
 (
N
, 2), 0, 1);

1254 
	gthis
->
	gm_vec
 = &
m_auto
;

1257 ~
auto_vec
 ()

1259 
	gthis
->
ªÀa£
 ();

1262 
	g¥iv©e
:

1263 
vec
<
T
, 
	gva_hóp
, 
	gvl_embed
> 
	gm_auto
;

1264 
T
 
	gm_d©a
[
MAX
 (
N
 - 1, 1)];

1269 
	gãm∂©e
<
ty≥«me
 
	gT
>

1270 
˛ass
 
	gauto_vec
<
	gT
, 0> : 
public
 
vec
<
T
, 
	gva_hóp
>

1272 
	gpublic
:

1273 
auto_vec
 (Ë{ 
this
->
m_vec
 = 
NULL
; }

1274 
auto_vec
 (
size_t
 
n
Ë{ 
	gthis
->
¸óã
 (n); }

1275 ~
auto_vec
 (Ë{ 
	gthis
->
ªÀa£
 (); }

1283 
	gãm∂©e
<
ty≥«me
 
	gT
>

1284 
ölöe
 

1285 
vec_Æloc
 (
vec
<
T
> *&
v
, 
√Àms
 
CXX_MEM_STAT_INFO
)

1287 
	gv
 = 
√w
 
vec
<
T
>;

1288 
	gv
->
¸óã
 (
√Àms
 
PASS_MEM_STAT
);

1294 
	gãm∂©e
<
ty≥«me
 
	gT
>

1295 
ölöe
 

1296 
vec_check_Æloc
 (
vec
<
T
, 
va_hóp
> *&vec, 
√Àms
 
CXX_MEM_STAT_INFO
)

1298 i‡(!
	gvec
)

1299 
vec_Æloc
 (
vec
, 
√Àms
 
PASS_MEM_STAT
);

1305 
	gãm∂©e
<
ty≥«me
 
	gT
>

1306 
ölöe
 

1307 
vec_‰ì
 (
vec
<
T
> *&
v
)

1309 i‡(
	gv
 =
NULL
)

1312 
	gv
->
ªÀa£
 ();

1313 
dñëe
 
	gv
;

1314 
	gv
 = 
NULL
;

1325 
	gãm∂©e
<
ty≥«me
 
	gT
>

1326 
ölöe
 
boﬁ


1327 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ôî©e
 (
ix
, 
T
 *
±r
) const

1329 i‡(
m_vec
)

1330  
m_vec
->
	`ôî©e
 (
ix
, 
±r
);

1333 *
±r
 = 0;

1334  
Ál£
;

1336 
	}
}

1348 
	gãm∂©e
<
ty≥«me
 
	gT
>

1349 
ölöe
 
boﬁ


1350 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ôî©e
 (
ix
, 
T
 **
±r
) const

1352 i‡(
m_vec
)

1353  
m_vec
->
	`ôî©e
 (
ix
, 
±r
);

1356 *
±r
 = 0;

1357  
Ál£
;

1359 
	}
}

1363 
	#FOR_EACH_VEC_ELT
(
V
, 
I
, 
P
) \

1364 
I
 = 0; (
V
).
	`ôî©e
 ((I), &(
P
)); ++(I))

	)

1366 
	#FOR_EACH_VEC_SAFE_ELT
(
V
, 
I
, 
P
) \

1367 
I
 = 0; 
	`vec_ß„_ôî©e
 ((
V
), (I), &(
P
)); ++(I))

	)

1370 
	#FOR_EACH_VEC_ELT_FROM
(
V
, 
I
, 
P
, 
FROM
) \

1371 
I
 = (
FROM
); (
V
).
	`ôî©e
 ((I), &(
P
)); ++(I))

	)

1374 
	#FOR_EACH_VEC_ELT_REVERSE
(
V
, 
I
, 
P
) \

1375 
I
 = (
V
).
	`Àngth
 () - 1; \

1376 (
V
).
	`ôî©e
 ((
I
), &(
P
)); \

1377 (
I
)--)

	)

1379 
	#FOR_EACH_VEC_SAFE_ELT_REVERSE
(
V
, 
I
, 
P
) \

1380 
I
 = 
	`vec_ß„_Àngth
 (
V
) - 1; \

1381 
	`vec_ß„_ôî©e
 ((
V
), (
I
), &(
P
)); \

1382 (
I
)--)

	)

1387 
	gãm∂©e
<
ty≥«me
 
	gT
>

1388 
ölöe
 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>

1389 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$c›y
 (
ALONE_MEM_STAT_DECL
) const

1391 
vec
<
T
, 
va_hóp
, 
vl_±r
> 
√w_vec
 = 
vNULL
;

1392 i‡(
	`Àngth
 ())

1393 
√w_vec
.
m_vec
 = m_vec->
	`c›y
 ();

1394  
√w_vec
;

1395 
	}
}

1407 
	gãm∂©e
<
ty≥«me
 
	gT
>

1408 
ölöe
 
boﬁ


1409 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ª£rve
 (
√Àms
, 
boﬁ
 
exa˘
 
MEM_STAT_DECL
)

1411 i‡(
	`•a˚
 (
√Àms
))

1412  
Ál£
;

1417 
vec
<
T
, 
va_hóp
, 
vl_embed
> *
ﬁdvec
 = 
m_vec
;

1418 
ﬁdsize
 = 0;

1419 
boﬁ
 
h™dÀ_auto_vec
 = 
m_vec
 && 
	`usög_auto_°‹age
 ();

1420 i‡(
h™dÀ_auto_vec
)

1422 
m_vec
 = 
NULL
;

1423 
ﬁdsize
 = 
ﬁdvec
->
	`Àngth
 ();

1424 
√Àms
 +
ﬁdsize
;

1427 
va_hóp
::
	`ª£rve
 (
m_vec
, 
√Àms
, 
exa˘
 
PASS_MEM_STAT
);

1428 i‡(
h™dÀ_auto_vec
)

1430 
	`mem˝y
 (
m_vec
->
	`addªss
 (), 
ﬁdvec
->addªs†(),  (
T
Ë* 
ﬁdsize
);

1431 
m_vec
->
m_ve˝fx
.
m_num
 = 
ﬁdsize
;

1434  
åue
;

1435 
	}
}

1443 
	gãm∂©e
<
ty≥«me
 
	gT
>

1444 
ölöe
 
boﬁ


1445 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ª£rve_exa˘
 (
√Àms
 
MEM_STAT_DECL
)

1447  
	`ª£rve
 (
√Àms
, 
åue
 
PASS_MEM_STAT
);

1448 
	}
}

1456 
	gãm∂©e
<
ty≥«me
 
	gT
>

1457 
ölöe
 

1458 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$¸óã
 (
√Àms
 
MEM_STAT_DECL
)

1460 
m_vec
 = 
NULL
;

1461 i‡(
√Àms
 > 0)

1462 
	`ª£rve_exa˘
 (
√Àms
 
PASS_MEM_STAT
);

1463 
	}
}

1468 
	gãm∂©e
<
ty≥«me
 
	gT
>

1469 
ölöe
 

1470 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ªÀa£
 ()

1472 i‡(!
m_vec
)

1475 i‡(
	`usög_auto_°‹age
 ())

1477 
m_vec
->
m_ve˝fx
.
m_num
 = 0;

1481 
va_hóp
::
	`ªÀa£
 (
m_vec
);

1482 
	}
}

1489 
	gãm∂©e
<
ty≥«me
 
	gT
>

1490 
ölöe
 

1491 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
•li˚
 (
vec
<
T
, 
va_hóp
, 
vl_±r
> &
§c
)

1493 i‡(
	g§c
.
	gm_vec
)

1494 
	gm_vec
->
•li˚
 (*(
§c
.
m_vec
));

1503 
	gãm∂©e
<
ty≥«me
 
	gT
>

1504 
ölöe
 

1505 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
ß„_•li˚
 (
vec
<
T
, 
va_hóp
, 
vl_±r
> &
§c


1506 
MEM_STAT_DECL
)

1508 i‡(
	g§c
.
Àngth
 ())

1510 
ª£rve_exa˘
 (
§c
.
Àngth
 ());

1511 
•li˚
 (
§c
);

1520 
	gãm∂©e
<
ty≥«me
 
	gT
>

1521 
ölöe
 
T
 *

1522 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$quick_push
 (c⁄° 
T
 &
obj
)

1524  
m_vec
->
	`quick_push
 (
obj
);

1525 
	}
}

1532 
	gãm∂©e
<
ty≥«me
 
	gT
>

1533 
ölöe
 
T
 *

1534 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ß„_push
 (c⁄° 
T
 &
obj
 
MEM_STAT_DECL
)

1536 
	`ª£rve
 (1, 
Ál£
 
PASS_MEM_STAT
);

1537  
	`quick_push
 (
obj
);

1538 
	}
}

1543 
	gãm∂©e
<
ty≥«me
 
	gT
>

1544 
ölöe
 
	gT
 &

1545 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$p›
 ()

1547  
m_vec
->
	`p›
 ();

1548 
	}
}

1554 
	gãm∂©e
<
ty≥«me
 
	gT
>

1555 
ölöe
 

1556 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$åunˇã
 (
size
)

1558 i‡(
m_vec
)

1559 
m_vec
->
	`åunˇã
 (
size
);

1561 
	`gcc_checkög_as£π
 (
size
 == 0);

1562 
	}
}

1569 
	gãm∂©e
<
ty≥«me
 
	gT
>

1570 
ölöe
 

1571 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ß„_grow
 (
Àn
 
MEM_STAT_DECL
)

1573 
ﬁdÀn
 = 
	`Àngth
 ();

1574 
	`gcc_checkög_as£π
 (
ﬁdÀn
 <
Àn
);

1575 
	`ª£rve_exa˘
 (
Àn
 - 
ﬁdÀn
 
PASS_MEM_STAT
);

1576 
m_vec
->
	`quick_grow
 (
Àn
);

1577 
	}
}

1584 
	gãm∂©e
<
ty≥«me
 
	gT
>

1585 
ölöe
 

1586 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ß„_grow_˛óªd
 (
Àn
 
MEM_STAT_DECL
)

1588 
ﬁdÀn
 = 
	`Àngth
 ();

1589 
	`ß„_grow
 (
Àn
 
PASS_MEM_STAT
);

1590 
	`mem£t
 (&(
	`addªss
 ()[
ﬁdÀn
]), 0,  (
T
Ë* (
Àn
 - oldlen));

1591 
	}
}

1597 
	gãm∂©e
<
ty≥«me
 
	gT
>

1598 
ölöe
 

1599 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$quick_grow
 (
Àn
)

1601 
	`gcc_checkög_as£π
 (
m_vec
);

1602 
m_vec
->
	`quick_grow
 (
Àn
);

1603 
	}
}

1610 
	gãm∂©e
<
ty≥«me
 
	gT
>

1611 
ölöe
 

1612 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$quick_grow_˛óªd
 (
Àn
)

1614 
	`gcc_checkög_as£π
 (
m_vec
);

1615 
m_vec
->
	`quick_grow_˛óªd
 (
Àn
);

1616 
	}
}

1622 
	gãm∂©e
<
ty≥«me
 
	gT
>

1623 
ölöe
 

1624 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$quick_ö£π
 (
ix
, c⁄° 
T
 &
obj
)

1626 
m_vec
->
	`quick_ö£π
 (
ix
, 
obj
);

1627 
	}
}

1633 
	gãm∂©e
<
ty≥«me
 
	gT
>

1634 
ölöe
 

1635 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$ß„_ö£π
 (
ix
, c⁄° 
T
 &
obj
 
MEM_STAT_DECL
)

1637 
	`ª£rve
 (1, 
Ál£
 
PASS_MEM_STAT
);

1638 
	`quick_ö£π
 (
ix
, 
obj
);

1639 
	}
}

1646 
	gãm∂©e
<
ty≥«me
 
	gT
>

1647 
ölöe
 

1648 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$‹dîed_ªmove
 (
ix
)

1650 
m_vec
->
	`‹dîed_ªmove
 (
ix
);

1651 
	}
}

1657 
	gãm∂©e
<
ty≥«me
 
	gT
>

1658 
ölöe
 

1659 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$un‹dîed_ªmove
 (
ix
)

1661 
m_vec
->
	`un‹dîed_ªmove
 (
ix
);

1662 
	}
}

1668 
	gãm∂©e
<
ty≥«me
 
	gT
>

1669 
ölöe
 

1670 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$block_ªmove
 (
ix
, 
Àn
)

1672 
m_vec
->
	`block_ªmove
 (
ix
, 
Àn
);

1673 
	}
}

1679 
	gãm∂©e
<
ty≥«me
 
	gT
>

1680 
ölöe
 

1681 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$qs‹t
 ((*
cmp
) (const *, const *))

1683 i‡(
m_vec
)

1684 
m_vec
->
	`qs‹t
 (
cmp
);

1685 
	}
}

1691 
	gãm∂©e
<
ty≥«me
 
	gT
>

1692 
ölöe
 
T
 *

1693 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$b£¨ch
 (c⁄° *
key
,

1694 (*
cmp
) (const *, const *))

1696 i‡(
m_vec
)

1697  
m_vec
->
	`b£¨ch
 (
key
, 
cmp
);

1698  
NULL
;

1699 
	}
}

1707 
	gãm∂©e
<
ty≥«me
 
	gT
>

1708 
ölöe
 

1709 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$lowî_bound
 (
T
 
obj
,

1710 
	$boﬁ
 (*
Às°h™
)(c⁄° 
T
 &, const T &))

1713  
m_vec
 ? m_vec->
	`lowî_bound
 (
obj
, 
Às°h™
) : 0;

1714 
	}
}

1716 
	gãm∂©e
<
ty≥«me
 
	gT
>

1717 
ölöe
 
boﬁ


1718 
	gvec
<
	gT
, 
	gva_hóp
, 
	gvl_±r
>::
	$usög_auto_°‹age
 () const

1720  
m_vec
->
m_ve˝fx
.
m_usög_auto_°‹age
;

1721 
	}
}

1723 #i‡(
GCC_VERSION
 >= 3000)

1724 #¥agm®
GCC
 
pois⁄
 
m_vec
 
m_ve˝fx
 
m_vecd©a


	@include/version.h

1 #i‚de‡
GCC_VERSION_H


2 
	#GCC_VERSION_H


	)

3 c⁄° 
vîsi⁄_°rög
[];

4 c⁄° 
pkgvîsi⁄_°rög
[];

5 c⁄° 
bug_ªp‹t_uæ
[];

	@
1
.
0
171
3679
include/alias.h
include/alloc-pool.h
include/ansidecl.h
include/attribs.h
include/auto-host.h
include/basic-block.h
include/bitmap.h
include/bversion.h
include/c-family/c-common.h
include/c-family/c-objc.h
include/c-family/c-pragma.h
include/c-family/c-pretty-print.h
include/c-tree.h
include/calls.h
include/cfgexpand.h
include/cfghooks.h
include/cfgloop.h
include/cgraph.h
include/config.h
include/config/arm/aarch-common-protos.h
include/config/arm/aout.h
include/config/arm/arm-opts.h
include/config/arm/arm-protos.h
include/config/arm/arm.h
include/config/arm/bpabi.h
include/config/arm/elf.h
include/config/arm/unknown-elf.h
include/config/dbxelf.h
include/config/elfos.h
include/config/initfini-array.h
include/config/newlib-stdint.h
include/config/vxworks-dummy.h
include/configargs.h
include/context.h
include/coretypes.h
include/cp/cp-tree.h
include/cp/cxx-pretty-print.h
include/cp/name-lookup.h
include/cp/type-utils.h
include/cppdefault.h
include/cpplib.h
include/debug.h
include/defaults.h
include/df.h
include/diagnostic-color.h
include/diagnostic-core.h
include/diagnostic.h
include/double-int.h
include/dumpfile.h
include/emit-rtl.h
include/except.h
include/filenames.h
include/fixed-value.h
include/flag-types.h
include/flags.h
include/fold-const.h
include/function.h
include/gcc-plugin.h
include/gcc-symtab.h
include/genrtl.h
include/ggc.h
include/gimple-builder.h
include/gimple-expr.h
include/gimple-fold.h
include/gimple-iterator.h
include/gimple-low.h
include/gimple-pretty-print.h
include/gimple-ssa.h
include/gimple-walk.h
include/gimple.h
include/gimplify-me.h
include/gimplify.h
include/gtype-desc.h
include/hard-reg-set.h
include/hash-table.h
include/hashtab.h
include/highlev-plugin-common.h
include/hwint.h
include/incpath.h
include/input.h
include/insn-codes.h
include/insn-constants.h
include/insn-flags.h
include/insn-modes.h
include/internal-fn.h
include/intl.h
include/ipa-prop.h
include/ipa-ref-inline.h
include/ipa-ref.h
include/ipa-reference.h
include/ipa-utils.h
include/is-a.h
include/langhooks.h
include/libiberty.h
include/line-map.h
include/machmode.h
include/md5.h
include/obstack.h
include/options.h
include/opts.h
include/output.h
include/params.h
include/pass_manager.h
include/plugin-api.h
include/plugin-version.h
include/plugin.h
include/pointer-set.h
include/predict.h
include/prefix.h
include/pretty-print.h
include/print-rtl.h
include/print-tree.h
include/real.h
include/realmpfr.h
include/regset.h
include/resource.h
include/rtl.h
include/safe-ctype.h
include/sbitmap.h
include/splay-tree.h
include/ssa-iterators.h
include/statistics.h
include/stmt.h
include/stor-layout.h
include/stringpool.h
include/symtab.h
include/system.h
include/target-hooks-macros.h
include/target.h
include/timevar.h
include/tm-preds.h
include/tm.h
include/tm_p.h
include/toplev.h
include/tree-cfg.h
include/tree-cfgcleanup.h
include/tree-check.h
include/tree-core.h
include/tree-dfa.h
include/tree-dump.h
include/tree-eh.h
include/tree-hasher.h
include/tree-inline.h
include/tree-into-ssa.h
include/tree-iterator.h
include/tree-nested.h
include/tree-object-size.h
include/tree-outof-ssa.h
include/tree-parloops.h
include/tree-pass.h
include/tree-phinodes.h
include/tree-pretty-print.h
include/tree-ssa-address.h
include/tree-ssa-alias.h
include/tree-ssa-coalesce.h
include/tree-ssa-dom.h
include/tree-ssa-loop-ivopts.h
include/tree-ssa-loop-manip.h
include/tree-ssa-loop-niter.h
include/tree-ssa-loop.h
include/tree-ssa-operands.h
include/tree-ssa-sccvn.h
include/tree-ssa-ter.h
include/tree-ssa-threadedge.h
include/tree-ssa-threadupdate.h
include/tree-ssa.h
include/tree-ssanames.h
include/tree.h
include/varasm.h
include/vec.h
include/version.h
