
;; Function uint8_t getprimask() (null)
;; enabled by -tree-original


{
  uint32_t primask;

    uint32_t primask;
  <<cleanup_point __asm__ __volatile__("\tmrs  %0, primask\n":"=r" primask::"memory")>>;
  return <retval> = (uint8_t) primask;
}


;; Function void setprimask(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("\tmsr primask, %0\n"::"r" primask:"memory")>>;


;; Function uint8_t getbasepri() (null)
;; enabled by -tree-original


{
  uint32_t basepri;

    uint32_t basepri;
  <<cleanup_point __asm__ __volatile__("\tmrs  %0, basepri\n":"=r" basepri::"memory")>>;
  return <retval> = (uint8_t) basepri;
}


;; Function void setbasepri(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("\tmsr basepri, %0\n"::"r" basepri:"memory")>>;


;; Function void irqdisable() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  setbasepri (16) >>>>>;


;; Function irqstate_t irqsave() (null)
;; enabled by -tree-original


{
  uint8_t basepri;

    uint8_t basepri;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (basepri = getbasepri ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  setbasepri (16) >>>>>;
  return <retval> = basepri;
}


;; Function void irqenable() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  setbasepri (0) >>>>>;
<<cleanup_point __asm__ __volatile__("\tcpsie  i\n"::)>>;


;; Function void irqrestore(irqstate_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  setbasepri ((uint32_t) flags) >>>>>;


;; Function uint32_t getipsr() (null)
;; enabled by -tree-original


{
  uint32_t ipsr;

    uint32_t ipsr;
  <<cleanup_point __asm__ __volatile__("\tmrs  %0, ipsr\n":"=r" ipsr::"memory")>>;
  return <retval> = ipsr;
}


;; Function void setipsr(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("\tmsr ipsr, %0\n"::"r" ipsr:"memory")>>;


;; Function uint32_t getcontrol() (null)
;; enabled by -tree-original


{
  uint32_t control;

    uint32_t control;
  <<cleanup_point __asm__ __volatile__("\tmrs  %0, control\n":"=r" control::"memory")>>;
  return <retval> = control;
}


;; Function void setcontrol(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("\tmsr control, %0\n"::"r" control:"memory")>>;


;; Function uint16_t getreg16(unsigned int) (null)
;; enabled by -tree-original


{
  uint16_t retval;

    uint16_t retval;
  <<cleanup_point __asm__ __volatile__("\tldrh %0, [%1]\n\t":"=r" retval:"r" addr)>>;
  return <retval> = retval;
}


;; Function void putreg16(uint16_t, unsigned int) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("\tstrh %0, [%1]\n\t"::"r" val, "r" addr)>>;


;; Function void stm32_mco1config(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t regval;

    uint32_t regval;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (regval = (uint32_t) *1073887240B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (regval = regval & 4171235327) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (regval = (source | div) | regval) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073887240B = regval) >>>>>;
}


;; Function void stm32_mco2config(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t regval;

    uint32_t regval;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (regval = (uint32_t) *1073887240B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (regval = regval & 134217727) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (regval = (source | div) | regval) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073887240B = regval) >>>>>;
}


;; Function px4::px4_rc_channels::px4_rc_channels() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct rc_channels_s _data;
    } D.8008;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<rc_channels_s>::PX4Message (&((struct px4_rc_channels *) this)->D.8007) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_rc_channels *) this)->D.8007._vptr.PX4Message = &_ZTVN3px415px4_rc_channelsE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<rc_channels_s>::~PX4Message (&((struct px4_rc_channels *) this)->D.8007);
    }
}
<D.8011>:;
return this;


;; Function px4::px4_rc_channels::px4_rc_channels(rc_channels_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct rc_channels_s _data;
    } D.8008;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<rc_channels_s>::PX4Message (&((struct px4_rc_channels *) this)->D.8007, TARGET_EXPR <D.8052, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_rc_channels *) this)->D.8007._vptr.PX4Message = &_ZTVN3px415px4_rc_channelsE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<rc_channels_s>::~PX4Message (&((struct px4_rc_channels *) this)->D.8007);
    }
}
<D.8051>:;
return this;


;; Function virtual px4::px4_rc_channels::~px4_rc_channels() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_rc_channels *) this)->D.8007._vptr.PX4Message = &_ZTVN3px415px4_rc_channelsE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<rc_channels_s>::~PX4Message (&((struct px4_rc_channels *) this)->D.8007);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct rc_channels_s _data;
        } D.8008;
      } &) this = {CLOBBER};
    }
}
<D.8060>:;
return this;


;; Function static const orb_metadata* px4::px4_rc_channels::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_rc_channels;


;; Function px4::px4_vehicle_attitude_setpoint::px4_vehicle_attitude_setpoint() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_attitude_setpoint_s _data;
    } D.8164;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_attitude_setpoint_s>::PX4Message (&((struct px4_vehicle_attitude_setpoint *) this)->D.8163) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_attitude_setpoint *) this)->D.8163._vptr.PX4Message = &_ZTVN3px429px4_vehicle_attitude_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_attitude_setpoint_s>::~PX4Message (&((struct px4_vehicle_attitude_setpoint *) this)->D.8163);
    }
}
<D.8167>:;
return this;


;; Function px4::px4_vehicle_attitude_setpoint::px4_vehicle_attitude_setpoint(vehicle_attitude_setpoint_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_attitude_setpoint_s _data;
    } D.8164;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_attitude_setpoint_s>::PX4Message (&((struct px4_vehicle_attitude_setpoint *) this)->D.8163, TARGET_EXPR <D.8208, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_attitude_setpoint *) this)->D.8163._vptr.PX4Message = &_ZTVN3px429px4_vehicle_attitude_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_attitude_setpoint_s>::~PX4Message (&((struct px4_vehicle_attitude_setpoint *) this)->D.8163);
    }
}
<D.8207>:;
return this;


;; Function virtual px4::px4_vehicle_attitude_setpoint::~px4_vehicle_attitude_setpoint() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_attitude_setpoint *) this)->D.8163._vptr.PX4Message = &_ZTVN3px429px4_vehicle_attitude_setpointE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_attitude_setpoint_s>::~PX4Message (&((struct px4_vehicle_attitude_setpoint *) this)->D.8163);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_attitude_setpoint_s _data;
        } D.8164;
      } &) this = {CLOBBER};
    }
}
<D.8216>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_attitude_setpoint::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_attitude_setpoint;


;; Function px4::px4_manual_control_setpoint::px4_manual_control_setpoint() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct manual_control_setpoint_s _data;
    } D.8327;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<manual_control_setpoint_s>::PX4Message (&((struct px4_manual_control_setpoint *) this)->D.8326) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_manual_control_setpoint *) this)->D.8326._vptr.PX4Message = &_ZTVN3px427px4_manual_control_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<manual_control_setpoint_s>::~PX4Message (&((struct px4_manual_control_setpoint *) this)->D.8326);
    }
}
<D.8330>:;
return this;


;; Function px4::px4_manual_control_setpoint::px4_manual_control_setpoint(manual_control_setpoint_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct manual_control_setpoint_s _data;
    } D.8327;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<manual_control_setpoint_s>::PX4Message (&((struct px4_manual_control_setpoint *) this)->D.8326, TARGET_EXPR <D.8371, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_manual_control_setpoint *) this)->D.8326._vptr.PX4Message = &_ZTVN3px427px4_manual_control_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<manual_control_setpoint_s>::~PX4Message (&((struct px4_manual_control_setpoint *) this)->D.8326);
    }
}
<D.8370>:;
return this;


;; Function virtual px4::px4_manual_control_setpoint::~px4_manual_control_setpoint() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_manual_control_setpoint *) this)->D.8326._vptr.PX4Message = &_ZTVN3px427px4_manual_control_setpointE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<manual_control_setpoint_s>::~PX4Message (&((struct px4_manual_control_setpoint *) this)->D.8326);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct manual_control_setpoint_s _data;
        } D.8327;
      } &) this = {CLOBBER};
    }
}
<D.8379>:;
return this;


;; Function static const orb_metadata* px4::px4_manual_control_setpoint::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_manual_control_setpoint;


;; Function px4::px4_actuator_controls::px4_actuator_controls() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_s _data;
    } D.8474;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_s>::PX4Message (&((struct px4_actuator_controls *) this)->D.8473) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls *) this)->D.8473._vptr.PX4Message = &_ZTVN3px421px4_actuator_controlsE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_s>::~PX4Message (&((struct px4_actuator_controls *) this)->D.8473);
    }
}
<D.8477>:;
return this;


;; Function px4::px4_actuator_controls::px4_actuator_controls(actuator_controls_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_s _data;
    } D.8474;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_s>::PX4Message (&((struct px4_actuator_controls *) this)->D.8473, TARGET_EXPR <D.8518, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls *) this)->D.8473._vptr.PX4Message = &_ZTVN3px421px4_actuator_controlsE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_s>::~PX4Message (&((struct px4_actuator_controls *) this)->D.8473);
    }
}
<D.8517>:;
return this;


;; Function virtual px4::px4_actuator_controls::~px4_actuator_controls() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls *) this)->D.8473._vptr.PX4Message = &_ZTVN3px421px4_actuator_controlsE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<actuator_controls_s>::~PX4Message (&((struct px4_actuator_controls *) this)->D.8473);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct actuator_controls_s _data;
        } D.8474;
      } &) this = {CLOBBER};
    }
}
<D.8526>:;
return this;


;; Function static const orb_metadata* px4::px4_actuator_controls::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_actuator_controls;


;; Function px4::px4_actuator_controls_0::px4_actuator_controls_0() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_0_s _data;
    } D.8621;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_0_s>::PX4Message (&((struct px4_actuator_controls_0 *) this)->D.8620) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_0 *) this)->D.8620._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_0E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_0_s>::~PX4Message (&((struct px4_actuator_controls_0 *) this)->D.8620);
    }
}
<D.8624>:;
return this;


;; Function px4::px4_actuator_controls_0::px4_actuator_controls_0(actuator_controls_0_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_0_s _data;
    } D.8621;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_0_s>::PX4Message (&((struct px4_actuator_controls_0 *) this)->D.8620, TARGET_EXPR <D.8665, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_0 *) this)->D.8620._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_0E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_0_s>::~PX4Message (&((struct px4_actuator_controls_0 *) this)->D.8620);
    }
}
<D.8664>:;
return this;


;; Function virtual px4::px4_actuator_controls_0::~px4_actuator_controls_0() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_0 *) this)->D.8620._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_0E + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<actuator_controls_0_s>::~PX4Message (&((struct px4_actuator_controls_0 *) this)->D.8620);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct actuator_controls_0_s _data;
        } D.8621;
      } &) this = {CLOBBER};
    }
}
<D.8673>:;
return this;


;; Function static const orb_metadata* px4::px4_actuator_controls_0::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_actuator_controls_0;


;; Function px4::px4_actuator_controls_1::px4_actuator_controls_1() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_1_s _data;
    } D.8768;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_1_s>::PX4Message (&((struct px4_actuator_controls_1 *) this)->D.8767) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_1 *) this)->D.8767._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_1E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_1_s>::~PX4Message (&((struct px4_actuator_controls_1 *) this)->D.8767);
    }
}
<D.8771>:;
return this;


;; Function px4::px4_actuator_controls_1::px4_actuator_controls_1(actuator_controls_1_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_1_s _data;
    } D.8768;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_1_s>::PX4Message (&((struct px4_actuator_controls_1 *) this)->D.8767, TARGET_EXPR <D.8812, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_1 *) this)->D.8767._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_1E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_1_s>::~PX4Message (&((struct px4_actuator_controls_1 *) this)->D.8767);
    }
}
<D.8811>:;
return this;


;; Function virtual px4::px4_actuator_controls_1::~px4_actuator_controls_1() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_1 *) this)->D.8767._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_1E + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<actuator_controls_1_s>::~PX4Message (&((struct px4_actuator_controls_1 *) this)->D.8767);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct actuator_controls_1_s _data;
        } D.8768;
      } &) this = {CLOBBER};
    }
}
<D.8820>:;
return this;


;; Function static const orb_metadata* px4::px4_actuator_controls_1::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_actuator_controls_1;


;; Function px4::px4_actuator_controls_2::px4_actuator_controls_2() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_2_s _data;
    } D.8915;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_2_s>::PX4Message (&((struct px4_actuator_controls_2 *) this)->D.8914) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_2 *) this)->D.8914._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_2E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_2_s>::~PX4Message (&((struct px4_actuator_controls_2 *) this)->D.8914);
    }
}
<D.8918>:;
return this;


;; Function px4::px4_actuator_controls_2::px4_actuator_controls_2(actuator_controls_2_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_2_s _data;
    } D.8915;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_2_s>::PX4Message (&((struct px4_actuator_controls_2 *) this)->D.8914, TARGET_EXPR <D.8959, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_2 *) this)->D.8914._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_2E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_2_s>::~PX4Message (&((struct px4_actuator_controls_2 *) this)->D.8914);
    }
}
<D.8958>:;
return this;


;; Function virtual px4::px4_actuator_controls_2::~px4_actuator_controls_2() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_2 *) this)->D.8914._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_2E + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<actuator_controls_2_s>::~PX4Message (&((struct px4_actuator_controls_2 *) this)->D.8914);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct actuator_controls_2_s _data;
        } D.8915;
      } &) this = {CLOBBER};
    }
}
<D.8967>:;
return this;


;; Function static const orb_metadata* px4::px4_actuator_controls_2::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_actuator_controls_2;


;; Function px4::px4_actuator_controls_3::px4_actuator_controls_3() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_3_s _data;
    } D.9062;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_3_s>::PX4Message (&((struct px4_actuator_controls_3 *) this)->D.9061) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_3 *) this)->D.9061._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_3E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_3_s>::~PX4Message (&((struct px4_actuator_controls_3 *) this)->D.9061);
    }
}
<D.9065>:;
return this;


;; Function px4::px4_actuator_controls_3::px4_actuator_controls_3(actuator_controls_3_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_controls_3_s _data;
    } D.9062;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_controls_3_s>::PX4Message (&((struct px4_actuator_controls_3 *) this)->D.9061, TARGET_EXPR <D.9106, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_3 *) this)->D.9061._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_3E + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_controls_3_s>::~PX4Message (&((struct px4_actuator_controls_3 *) this)->D.9061);
    }
}
<D.9105>:;
return this;


;; Function virtual px4::px4_actuator_controls_3::~px4_actuator_controls_3() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_controls_3 *) this)->D.9061._vptr.PX4Message = &_ZTVN3px423px4_actuator_controls_3E + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<actuator_controls_3_s>::~PX4Message (&((struct px4_actuator_controls_3 *) this)->D.9061);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct actuator_controls_3_s _data;
        } D.9062;
      } &) this = {CLOBBER};
    }
}
<D.9114>:;
return this;


;; Function static const orb_metadata* px4::px4_actuator_controls_3::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_actuator_controls_3;


;; Function px4::px4_vehicle_rates_setpoint::px4_vehicle_rates_setpoint() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_rates_setpoint_s _data;
    } D.9209;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_rates_setpoint_s>::PX4Message (&((struct px4_vehicle_rates_setpoint *) this)->D.9208) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_rates_setpoint *) this)->D.9208._vptr.PX4Message = &_ZTVN3px426px4_vehicle_rates_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_rates_setpoint_s>::~PX4Message (&((struct px4_vehicle_rates_setpoint *) this)->D.9208);
    }
}
<D.9212>:;
return this;


;; Function px4::px4_vehicle_rates_setpoint::px4_vehicle_rates_setpoint(vehicle_rates_setpoint_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_rates_setpoint_s _data;
    } D.9209;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_rates_setpoint_s>::PX4Message (&((struct px4_vehicle_rates_setpoint *) this)->D.9208, TARGET_EXPR <D.9253, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_rates_setpoint *) this)->D.9208._vptr.PX4Message = &_ZTVN3px426px4_vehicle_rates_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_rates_setpoint_s>::~PX4Message (&((struct px4_vehicle_rates_setpoint *) this)->D.9208);
    }
}
<D.9252>:;
return this;


;; Function virtual px4::px4_vehicle_rates_setpoint::~px4_vehicle_rates_setpoint() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_rates_setpoint *) this)->D.9208._vptr.PX4Message = &_ZTVN3px426px4_vehicle_rates_setpointE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_rates_setpoint_s>::~PX4Message (&((struct px4_vehicle_rates_setpoint *) this)->D.9208);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_rates_setpoint_s _data;
        } D.9209;
      } &) this = {CLOBBER};
    }
}
<D.9261>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_rates_setpoint::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_rates_setpoint;


;; Function px4::px4_vehicle_attitude::px4_vehicle_attitude() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_attitude_s _data;
    } D.9367;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_attitude_s>::PX4Message (&((struct px4_vehicle_attitude *) this)->D.9366) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_attitude *) this)->D.9366._vptr.PX4Message = &_ZTVN3px420px4_vehicle_attitudeE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_attitude_s>::~PX4Message (&((struct px4_vehicle_attitude *) this)->D.9366);
    }
}
<D.9370>:;
return this;


;; Function px4::px4_vehicle_attitude::px4_vehicle_attitude(vehicle_attitude_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_attitude_s _data;
    } D.9367;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_attitude_s>::PX4Message (&((struct px4_vehicle_attitude *) this)->D.9366, TARGET_EXPR <D.9411, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_attitude *) this)->D.9366._vptr.PX4Message = &_ZTVN3px420px4_vehicle_attitudeE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_attitude_s>::~PX4Message (&((struct px4_vehicle_attitude *) this)->D.9366);
    }
}
<D.9410>:;
return this;


;; Function virtual px4::px4_vehicle_attitude::~px4_vehicle_attitude() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_attitude *) this)->D.9366._vptr.PX4Message = &_ZTVN3px420px4_vehicle_attitudeE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_attitude_s>::~PX4Message (&((struct px4_vehicle_attitude *) this)->D.9366);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_attitude_s _data;
        } D.9367;
      } &) this = {CLOBBER};
    }
}
<D.9419>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_attitude::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_attitude;


;; Function px4::px4_vehicle_control_mode::px4_vehicle_control_mode() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_control_mode_s _data;
    } D.9524;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_control_mode_s>::PX4Message (&((struct px4_vehicle_control_mode *) this)->D.9523) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_control_mode *) this)->D.9523._vptr.PX4Message = &_ZTVN3px424px4_vehicle_control_modeE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_control_mode_s>::~PX4Message (&((struct px4_vehicle_control_mode *) this)->D.9523);
    }
}
<D.9527>:;
return this;


;; Function px4::px4_vehicle_control_mode::px4_vehicle_control_mode(vehicle_control_mode_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_control_mode_s _data;
    } D.9524;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_control_mode_s>::PX4Message (&((struct px4_vehicle_control_mode *) this)->D.9523, TARGET_EXPR <D.9568, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_control_mode *) this)->D.9523._vptr.PX4Message = &_ZTVN3px424px4_vehicle_control_modeE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_control_mode_s>::~PX4Message (&((struct px4_vehicle_control_mode *) this)->D.9523);
    }
}
<D.9567>:;
return this;


;; Function virtual px4::px4_vehicle_control_mode::~px4_vehicle_control_mode() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_control_mode *) this)->D.9523._vptr.PX4Message = &_ZTVN3px424px4_vehicle_control_modeE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_control_mode_s>::~PX4Message (&((struct px4_vehicle_control_mode *) this)->D.9523);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_control_mode_s _data;
        } D.9524;
      } &) this = {CLOBBER};
    }
}
<D.9576>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_control_mode::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_control_mode;


;; Function px4::px4_actuator_armed::px4_actuator_armed() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_armed_s _data;
    } D.9672;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_armed_s>::PX4Message (&((struct px4_actuator_armed *) this)->D.9671) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_armed *) this)->D.9671._vptr.PX4Message = &_ZTVN3px418px4_actuator_armedE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_armed_s>::~PX4Message (&((struct px4_actuator_armed *) this)->D.9671);
    }
}
<D.9675>:;
return this;


;; Function px4::px4_actuator_armed::px4_actuator_armed(actuator_armed_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct actuator_armed_s _data;
    } D.9672;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<actuator_armed_s>::PX4Message (&((struct px4_actuator_armed *) this)->D.9671, TARGET_EXPR <D.9716, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_armed *) this)->D.9671._vptr.PX4Message = &_ZTVN3px418px4_actuator_armedE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<actuator_armed_s>::~PX4Message (&((struct px4_actuator_armed *) this)->D.9671);
    }
}
<D.9715>:;
return this;


;; Function virtual px4::px4_actuator_armed::~px4_actuator_armed() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_actuator_armed *) this)->D.9671._vptr.PX4Message = &_ZTVN3px418px4_actuator_armedE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<actuator_armed_s>::~PX4Message (&((struct px4_actuator_armed *) this)->D.9671);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct actuator_armed_s _data;
        } D.9672;
      } &) this = {CLOBBER};
    }
}
<D.9724>:;
return this;


;; Function static const orb_metadata* px4::px4_actuator_armed::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_actuator_armed;


;; Function px4::px4_parameter_update::px4_parameter_update() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct parameter_update_s _data;
    } D.9815;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<parameter_update_s>::PX4Message (&((struct px4_parameter_update *) this)->D.9814) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_parameter_update *) this)->D.9814._vptr.PX4Message = &_ZTVN3px420px4_parameter_updateE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<parameter_update_s>::~PX4Message (&((struct px4_parameter_update *) this)->D.9814);
    }
}
<D.9818>:;
return this;


;; Function px4::px4_parameter_update::px4_parameter_update(parameter_update_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct parameter_update_s _data;
    } D.9815;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<parameter_update_s>::PX4Message (&((struct px4_parameter_update *) this)->D.9814, TARGET_EXPR <D.9859, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_parameter_update *) this)->D.9814._vptr.PX4Message = &_ZTVN3px420px4_parameter_updateE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<parameter_update_s>::~PX4Message (&((struct px4_parameter_update *) this)->D.9814);
    }
}
<D.9858>:;
return this;


;; Function virtual px4::px4_parameter_update::~px4_parameter_update() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_parameter_update *) this)->D.9814._vptr.PX4Message = &_ZTVN3px420px4_parameter_updateE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<parameter_update_s>::~PX4Message (&((struct px4_parameter_update *) this)->D.9814);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct parameter_update_s _data;
        } D.9815;
      } &) this = {CLOBBER};
    }
}
<D.9867>:;
return this;


;; Function static const orb_metadata* px4::px4_parameter_update::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_parameter_update;


;; Function px4::px4_vehicle_status::px4_vehicle_status() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_status_s _data;
    } D.10098;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_status_s>::PX4Message (&((struct px4_vehicle_status *) this)->D.10097) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_status *) this)->D.10097._vptr.PX4Message = &_ZTVN3px418px4_vehicle_statusE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_status_s>::~PX4Message (&((struct px4_vehicle_status *) this)->D.10097);
    }
}
<D.10101>:;
return this;


;; Function px4::px4_vehicle_status::px4_vehicle_status(vehicle_status_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_status_s _data;
    } D.10098;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_status_s>::PX4Message (&((struct px4_vehicle_status *) this)->D.10097, TARGET_EXPR <D.10142, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_status *) this)->D.10097._vptr.PX4Message = &_ZTVN3px418px4_vehicle_statusE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_status_s>::~PX4Message (&((struct px4_vehicle_status *) this)->D.10097);
    }
}
<D.10141>:;
return this;


;; Function virtual px4::px4_vehicle_status::~px4_vehicle_status() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_status *) this)->D.10097._vptr.PX4Message = &_ZTVN3px418px4_vehicle_statusE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_status_s>::~PX4Message (&((struct px4_vehicle_status *) this)->D.10097);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_status_s _data;
        } D.10098;
      } &) this = {CLOBBER};
    }
}
<D.10150>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_status::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_status;


;; Function px4::px4_vehicle_local_position_setpoint::px4_vehicle_local_position_setpoint() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_local_position_setpoint_s _data;
    } D.10251;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_local_position_setpoint_s>::PX4Message (&((struct px4_vehicle_local_position_setpoint *) this)->D.10250) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_local_position_setpoint *) this)->D.10250._vptr.PX4Message = &_ZTVN3px435px4_vehicle_local_position_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_local_position_setpoint_s>::~PX4Message (&((struct px4_vehicle_local_position_setpoint *) this)->D.10250);
    }
}
<D.10254>:;
return this;


;; Function px4::px4_vehicle_local_position_setpoint::px4_vehicle_local_position_setpoint(vehicle_local_position_setpoint_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_local_position_setpoint_s _data;
    } D.10251;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_local_position_setpoint_s>::PX4Message (&((struct px4_vehicle_local_position_setpoint *) this)->D.10250, TARGET_EXPR <D.10295, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_local_position_setpoint *) this)->D.10250._vptr.PX4Message = &_ZTVN3px435px4_vehicle_local_position_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_local_position_setpoint_s>::~PX4Message (&((struct px4_vehicle_local_position_setpoint *) this)->D.10250);
    }
}
<D.10294>:;
return this;


;; Function virtual px4::px4_vehicle_local_position_setpoint::~px4_vehicle_local_position_setpoint() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_local_position_setpoint *) this)->D.10250._vptr.PX4Message = &_ZTVN3px435px4_vehicle_local_position_setpointE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_local_position_setpoint_s>::~PX4Message (&((struct px4_vehicle_local_position_setpoint *) this)->D.10250);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_local_position_setpoint_s _data;
        } D.10251;
      } &) this = {CLOBBER};
    }
}
<D.10303>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_local_position_setpoint::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_local_position_setpoint;


;; Function px4::px4_vehicle_global_velocity_setpoint::px4_vehicle_global_velocity_setpoint() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_global_velocity_setpoint_s _data;
    } D.10396;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_global_velocity_setpoint_s>::PX4Message (&((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395._vptr.PX4Message = &_ZTVN3px436px4_vehicle_global_velocity_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_global_velocity_setpoint_s>::~PX4Message (&((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395);
    }
}
<D.10399>:;
return this;


;; Function px4::px4_vehicle_global_velocity_setpoint::px4_vehicle_global_velocity_setpoint(vehicle_global_velocity_setpoint_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_global_velocity_setpoint_s _data;
    } D.10396;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_global_velocity_setpoint_s>::PX4Message (&((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395, TARGET_EXPR <D.10440, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395._vptr.PX4Message = &_ZTVN3px436px4_vehicle_global_velocity_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_global_velocity_setpoint_s>::~PX4Message (&((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395);
    }
}
<D.10439>:;
return this;


;; Function virtual px4::px4_vehicle_global_velocity_setpoint::~px4_vehicle_global_velocity_setpoint() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395._vptr.PX4Message = &_ZTVN3px436px4_vehicle_global_velocity_setpointE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_global_velocity_setpoint_s>::~PX4Message (&((struct px4_vehicle_global_velocity_setpoint *) this)->D.10395);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_global_velocity_setpoint_s _data;
        } D.10396;
      } &) this = {CLOBBER};
    }
}
<D.10448>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_global_velocity_setpoint::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_global_velocity_setpoint;


;; Function px4::px4_vehicle_local_position::px4_vehicle_local_position() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_local_position_s _data;
    } D.10562;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_local_position_s>::PX4Message (&((struct px4_vehicle_local_position *) this)->D.10561) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_local_position *) this)->D.10561._vptr.PX4Message = &_ZTVN3px426px4_vehicle_local_positionE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_local_position_s>::~PX4Message (&((struct px4_vehicle_local_position *) this)->D.10561);
    }
}
<D.10565>:;
return this;


;; Function px4::px4_vehicle_local_position::px4_vehicle_local_position(vehicle_local_position_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_local_position_s _data;
    } D.10562;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_local_position_s>::PX4Message (&((struct px4_vehicle_local_position *) this)->D.10561, TARGET_EXPR <D.10606, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_local_position *) this)->D.10561._vptr.PX4Message = &_ZTVN3px426px4_vehicle_local_positionE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_local_position_s>::~PX4Message (&((struct px4_vehicle_local_position *) this)->D.10561);
    }
}
<D.10605>:;
return this;


;; Function virtual px4::px4_vehicle_local_position::~px4_vehicle_local_position() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_local_position *) this)->D.10561._vptr.PX4Message = &_ZTVN3px426px4_vehicle_local_positionE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_local_position_s>::~PX4Message (&((struct px4_vehicle_local_position *) this)->D.10561);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_local_position_s _data;
        } D.10562;
      } &) this = {CLOBBER};
    }
}
<D.10614>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_local_position::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_local_position;


;; Function px4::px4_position_setpoint_triplet::px4_position_setpoint_triplet() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct position_setpoint_triplet_s _data;
    } D.10752;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<position_setpoint_triplet_s>::PX4Message (&((struct px4_position_setpoint_triplet *) this)->D.10751) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_position_setpoint_triplet *) this)->D.10751._vptr.PX4Message = &_ZTVN3px429px4_position_setpoint_tripletE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<position_setpoint_triplet_s>::~PX4Message (&((struct px4_position_setpoint_triplet *) this)->D.10751);
    }
}
<D.10755>:;
return this;


;; Function px4::px4_position_setpoint_triplet::px4_position_setpoint_triplet(position_setpoint_triplet_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct position_setpoint_triplet_s _data;
    } D.10752;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<position_setpoint_triplet_s>::PX4Message (&((struct px4_position_setpoint_triplet *) this)->D.10751, TARGET_EXPR <D.10820, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_position_setpoint_triplet *) this)->D.10751._vptr.PX4Message = &_ZTVN3px429px4_position_setpoint_tripletE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<position_setpoint_triplet_s>::~PX4Message (&((struct px4_position_setpoint_triplet *) this)->D.10751);
    }
}
<D.10819>:;
return this;


;; Function virtual px4::px4_position_setpoint_triplet::~px4_position_setpoint_triplet() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_position_setpoint_triplet *) this)->D.10751._vptr.PX4Message = &_ZTVN3px429px4_position_setpoint_tripletE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<position_setpoint_triplet_s>::~PX4Message (&((struct px4_position_setpoint_triplet *) this)->D.10751);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct position_setpoint_triplet_s _data;
        } D.10752;
      } &) this = {CLOBBER};
    }
}
<D.10828>:;
return this;


;; Function static const orb_metadata* px4::px4_position_setpoint_triplet::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_position_setpoint_triplet;


;; Function px4::px4_offboard_control_mode::px4_offboard_control_mode() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct offboard_control_mode_s _data;
    } D.10925;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<offboard_control_mode_s>::PX4Message (&((struct px4_offboard_control_mode *) this)->D.10924) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_offboard_control_mode *) this)->D.10924._vptr.PX4Message = &_ZTVN3px425px4_offboard_control_modeE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<offboard_control_mode_s>::~PX4Message (&((struct px4_offboard_control_mode *) this)->D.10924);
    }
}
<D.10928>:;
return this;


;; Function px4::px4_offboard_control_mode::px4_offboard_control_mode(offboard_control_mode_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct offboard_control_mode_s _data;
    } D.10925;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<offboard_control_mode_s>::PX4Message (&((struct px4_offboard_control_mode *) this)->D.10924, TARGET_EXPR <D.10969, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_offboard_control_mode *) this)->D.10924._vptr.PX4Message = &_ZTVN3px425px4_offboard_control_modeE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<offboard_control_mode_s>::~PX4Message (&((struct px4_offboard_control_mode *) this)->D.10924);
    }
}
<D.10968>:;
return this;


;; Function virtual px4::px4_offboard_control_mode::~px4_offboard_control_mode() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_offboard_control_mode *) this)->D.10924._vptr.PX4Message = &_ZTVN3px425px4_offboard_control_modeE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<offboard_control_mode_s>::~PX4Message (&((struct px4_offboard_control_mode *) this)->D.10924);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct offboard_control_mode_s _data;
        } D.10925;
      } &) this = {CLOBBER};
    }
}
<D.10977>:;
return this;


;; Function static const orb_metadata* px4::px4_offboard_control_mode::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_offboard_control_mode;


;; Function px4::px4_vehicle_force_setpoint::px4_vehicle_force_setpoint() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_force_setpoint_s _data;
    } D.11071;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_force_setpoint_s>::PX4Message (&((struct px4_vehicle_force_setpoint *) this)->D.11070) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_force_setpoint *) this)->D.11070._vptr.PX4Message = &_ZTVN3px426px4_vehicle_force_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_force_setpoint_s>::~PX4Message (&((struct px4_vehicle_force_setpoint *) this)->D.11070);
    }
}
<D.11074>:;
return this;


;; Function px4::px4_vehicle_force_setpoint::px4_vehicle_force_setpoint(vehicle_force_setpoint_s) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.PX4Message;
      struct vehicle_force_setpoint_s _data;
    } D.11071;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) px4::PX4Message<vehicle_force_setpoint_s>::PX4Message (&((struct px4_vehicle_force_setpoint *) this)->D.11070, TARGET_EXPR <D.11115, msg>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_force_setpoint *) this)->D.11070._vptr.PX4Message = &_ZTVN3px426px4_vehicle_force_setpointE + 8) >>>>>;
    }
  catch
    {
      (void) px4::PX4Message<vehicle_force_setpoint_s>::~PX4Message (&((struct px4_vehicle_force_setpoint *) this)->D.11070);
    }
}
<D.11114>:;
return this;


;; Function virtual px4::px4_vehicle_force_setpoint::~px4_vehicle_force_setpoint() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct px4_vehicle_force_setpoint *) this)->D.11070._vptr.PX4Message = &_ZTVN3px426px4_vehicle_force_setpointE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) px4::PX4Message<vehicle_force_setpoint_s>::~PX4Message (&((struct px4_vehicle_force_setpoint *) this)->D.11070);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.PX4Message;
          struct vehicle_force_setpoint_s _data;
        } D.11071;
      } &) this = {CLOBBER};
    }
}
<D.11123>:;
return this;


;; Function static const orb_metadata* px4::px4_vehicle_force_setpoint::handle() (null)
;; enabled by -tree-original


return <retval> = (const struct orb_metadata *) &__orb_vehicle_force_setpoint;


;; Function void device::Device::lock() (null)
;; enabled by -tree-original


while (1)
  {
    if (<<cleanup_point sem_wait (&((struct Device *) this)->_lock) != 0>>) (void) 0; else goto <D.11419>;
  }
<D.11419>:;


;; Function void device::Device::unlock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_post (&((struct Device *) this)->_lock) >>>>>;


;; Function bool device::CDev::is_open() (null)
;; enabled by -tree-original


return <retval> = ((struct CDev *) this)->_open_count != 0;


;; Function const char* device::CDev::get_devname() (null)
;; enabled by -tree-original


return <retval> = ((struct CDev *) this)->_devname;


;; Function uint32_t device::PIO::reg(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) *(volatile uint32_t *) (((struct PIO *) this)->_base + offset)>>;


;; Function void device::PIO::reg(uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(volatile uint32_t *) (((struct PIO *) this)->_base + offset) = value) >>>>>;


;; Function void device::PIO::modify(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t val;

    uint32_t val;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (val = device::PIO::reg (this, offset)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (val = ~clearbits & val) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (val = val | setbits) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  device::PIO::reg (this, offset, val) >>>>>;
}


;; Function uint8_t crc_packet(IOPacket*) (null)
;; enabled by -tree-original


{
  uint8_t * end = (uint8_t *) &pkt->regs[(int) pkt->count_code & 63];
  uint8_t * p = (uint8_t *) pkt;
  uint8_t c = 0;

    uint8_t * end = (uint8_t *) &pkt->regs[(int) pkt->count_code & 63];
    uint8_t * p = (uint8_t *) pkt;
  <<cleanup_point   uint8_t c = 0;>>;
  while (1)
    {
      if (p >= end) goto <D.11779>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (c = (uint8_t) crc8_tab[(int) (*p++  ^ c)]) >>>>>;
    }
  <D.11779>:;
  return <retval> = c;
}


;; Function device::Device* PX4IO_serial_interface() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.11919, operator new (112)>;, *(struct PX4IO_serial *) D.11919 = <<< Unknown tree: aggr_init_expr
  4
  __comp_ctor 
  D.11920
  (struct PX4IO_serial *) <<< Unknown tree: void_cst >>> >>>;, (struct Device *) D.11919;>>;


;; Function void test_routine(unsigned int) (null)
;; enabled by -tree-original


{
  int array[2];
  int * p = (int *) &array;

    int array[2];
    int * p = (int *) &array;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*p = 10) >>>>>;
}


;; Function PX4IO_serial::PX4IO_serial() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*__vtbl_ptr_type) () * _vptr.Device;
      const char * _name;
      bool _debug_enabled;
      union DeviceId _device_id;
      int _irq;
      bool _irq_attached;
      struct sem_t _lock;
    } D.11865;
    void * _tx_dma;
    void * _rx_dma;
    volatile unsigned int _rx_dma_status;
    struct sem_t _bus_semaphore;
    struct sem_t _completion_semaphore;
    struct perf_ctr_header * _pc_txns;
    struct perf_ctr_header * _pc_dmasetup;
    struct perf_ctr_header * _pc_retries;
    struct perf_ctr_header * _pc_timeouts;
    struct perf_ctr_header * _pc_crcerrs;
    struct perf_ctr_header * _pc_dmaerrs;
    struct perf_ctr_header * _pc_protoerrs;
    struct perf_ctr_header * _pc_uerrs;
    struct perf_ctr_header * _pc_idle;
    struct perf_ctr_header * _pc_badidle;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) device::Device::Device (&((struct PX4IO_serial *) this)->D.11864, (const char *) "PX4IO_serial", 0) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->D.11864._vptr.Device = &_ZTV12PX4IO_serial + 8) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_tx_dma = 0B) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_rx_dma = 0B) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_rx_dma_status = 2147483648) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_bus_semaphore = TARGET_EXPR <D.11980, {.semcount=0, .holder={.htcb=0B, .counts=0}}>) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_completion_semaphore = TARGET_EXPR <D.11981, {.semcount=0, .holder={.htcb=0B, .counts=0}}>) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_txns = perf_alloc (1, (const char *) "io_txns     ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_dmasetup = perf_alloc (1, (const char *) "io_dmasetup ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_retries = perf_alloc (0, (const char *) "io_retries  ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_timeouts = perf_alloc (0, (const char *) "io_timeouts ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_crcerrs = perf_alloc (0, (const char *) "io_crcerrs  ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_dmaerrs = perf_alloc (0, (const char *) "io_dmaerrs  ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_protoerrs = perf_alloc (0, (const char *) "io_protoerrs")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_uerrs = perf_alloc (0, (const char *) "io_uarterrs ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_idle = perf_alloc (0, (const char *) "io_idle     ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_pc_badidle = perf_alloc (0, (const char *) "io_badidle  ")) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (g_interface = (struct PX4IO_serial *) this) >>>>>;
    }
  catch
    {
      (void) device::Device::~Device (&((struct PX4IO_serial *) this)->D.11864);
    }
}
<D.11931>:;
return this;


;; Function virtual PX4IO_serial::~PX4IO_serial() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->D.11864._vptr.Device = &_ZTV12PX4IO_serial + 8) >>>>>;
  try
    {
      try
        {
          if (((struct PX4IO_serial *) this)->_tx_dma != 0B)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_tx_dma) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmafree (((struct PX4IO_serial *) this)->_tx_dma) >>>>>;
            }
          if (((struct PX4IO_serial *) this)->_rx_dma != 0B)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_rx_dma) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmafree (((struct PX4IO_serial *) this)->_rx_dma) >>>>>;
            }
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812492B = 0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812496B = 0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = 0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  up_disable_irq (87) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) irq_attach (87, 0B) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) stm32_unconfiggpio (625702) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) stm32_unconfiggpio (625703) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_destroy (&((struct PX4IO_serial *) this)->_completion_semaphore) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_destroy (&((struct PX4IO_serial *) this)->_bus_semaphore) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_txns) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_dmasetup) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_retries) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_timeouts) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_crcerrs) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_dmaerrs) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_protoerrs) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_uerrs) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_idle) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_free (((struct PX4IO_serial *) this)->_pc_badidle) >>>>>;
          if (g_interface == (struct PX4IO_serial *) this)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (g_interface = 0B) >>>>>;
            }
        }
      finally
        {
          (void) device::Device::~Device (&((struct PX4IO_serial *) this)->D.11864);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*__vtbl_ptr_type) () * _vptr.Device;
          const char * _name;
          bool _debug_enabled;
          union DeviceId _device_id;
          int _irq;
          bool _irq_attached;
          struct sem_t _lock;
        } D.11865;
        void * _tx_dma;
        void * _rx_dma;
        volatile unsigned int _rx_dma_status;
        struct sem_t _bus_semaphore;
        struct sem_t _completion_semaphore;
        struct perf_ctr_header * _pc_txns;
        struct perf_ctr_header * _pc_dmasetup;
        struct perf_ctr_header * _pc_retries;
        struct perf_ctr_header * _pc_timeouts;
        struct perf_ctr_header * _pc_crcerrs;
        struct perf_ctr_header * _pc_dmaerrs;
        struct perf_ctr_header * _pc_protoerrs;
        struct perf_ctr_header * _pc_uerrs;
        struct perf_ctr_header * _pc_idle;
        struct perf_ctr_header * _pc_badidle;
      } &) this = {CLOBBER};
    }
}
<D.11993>:;
return this;


;; Function virtual int PX4IO_serial::init() (null)
;; enabled by -tree-original


{
  uint32_t usartdiv32 = 112;
  uint32_t mantissa = usartdiv32 >> 5;
  uint32_t fraction = (usartdiv32 - (mantissa << 5)) + 1 >> 1;

  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_tx_dma = stm32_dmachannel (125)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_rx_dma = stm32_dmachannel (85)) >>>>>;
  if (((struct PX4IO_serial *) this)->_tx_dma == 0B || ((struct PX4IO_serial *) this)->_rx_dma == 0B)
    {
      return <retval> = -1;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) stm32_configgpio (625702) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) stm32_configgpio (625703) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812492B = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812496B = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812480B >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812484B >>>>>;
  <<cleanup_point   uint32_t usartdiv32 = 112;>>;
    uint32_t mantissa = usartdiv32 >> 5;
    uint32_t fraction = (usartdiv32 - (mantissa << 5)) + 1 >> 1;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812488B = mantissa << 4 | NON_LVALUE_EXPR <fraction>) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) irq_attach (87, _interrupt) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  up_enable_irq (87) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812492B = 8220) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_init (&((struct PX4IO_serial *) this)->_completion_semaphore, 0, 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_init (&((struct PX4IO_serial *) this)->_bus_semaphore, 0, 1) >>>>>;
  return <retval> = 0;
}


;; Function virtual int PX4IO_serial::ioctl(unsigned int, unsigned int&) (null)
;; enabled by -tree-original


{
  {
    switch (operation)
      {
        {
          case 1:;
          {
            switch (*arg)
              {
                {
                  case 0:;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) lowsyslog ((const char *) "test 0\n") >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_tx_dma) >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_rx_dma) >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = (unsigned int) *1073812500B & 4294967103) >>>>>;
                  while (1)
                    {
                      while (1)
                        {
                          if (<<cleanup_point ((unsigned int) *1073812480B & 128) == 0>>) (void) 0; else goto <D.12024>;
                        }
                      <D.12024>:;
                      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812484B = 85) >>>>>;
                    }
                  return <retval> = 0;
                  case 1:;
                  {
                    unsigned int fails = 0;

                    <<cleanup_point                     unsigned int fails = 0;>>;
                    {
                      unsigned int count = 0;

                      <<cleanup_point                       unsigned int count = 0;>>;
                      while (1)
                        {
                          {
                            uint16_t value = (uint16_t) count;

                                                        uint16_t value = (uint16_t) count;
                            if (<<cleanup_point OBJ_TYPE_REF(*(((struct PX4IO_serial *) this)->D.11864._vptr.Device + 20);(struct PX4IO_serial)this->5) (this, 32512, (void *) &value, 1) != 0>>)
                              {
                                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fails++  >>>>>;
                              }
                            if (count > 4999)
                              {
                                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) lowsyslog ((const char *) "==== test 1 : %u failures ====\n", fails) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_txns) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_dmasetup) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_retries) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_timeouts) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_crcerrs) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_dmaerrs) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_protoerrs) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_uerrs) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_idle) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_print_counter (((struct PX4IO_serial *) this)->_pc_badidle) >>>>>;
                                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (count = 0) >>>>>;
                              }
                          }
                          <<cleanup_point (void) count++ >>;
                        }
                    }
                    return <retval> = 0;
                  }
                  case 2:;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) lowsyslog ((const char *) "test 2\n") >>>>>;
                  return <retval> = 0;
                }
              }
          }
          default:;
          goto <D.12020>;
        }
      }
    <D.12020>:;
  }
  return <retval> = -1;
}


;; Function virtual int PX4IO_serial::write(unsigned int, void*, unsigned int) (null)
;; enabled by -tree-original


{
  uint8_t page = (uint8_t) (address >> 8);
  uint8_t offset = (uint8_t) address;
  const uint16_t * values = (const uint16_t *) data;
  int result;

    uint8_t page = (uint8_t) (address >> 8);
    uint8_t offset = (uint8_t) address;
    const uint16_t * values = (const uint16_t *) data;
  if (count > 32)
    {
      return <retval> = -22;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_wait (&((struct PX4IO_serial *) this)->_bus_semaphore) >>>>>;
    int result;
  {
    unsigned int retries = 0;

    <<cleanup_point     unsigned int retries = 0;>>;
    while (1)
      {
        if (retries > 2) goto <D.12040>;
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.count_code = (uint8_t) count | 64) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.page = page) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.offset = offset) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memcpy ((void *) &_dma_buffer.regs[0], (const void *) values, count * 2) >>>>>;
          {
            unsigned int i = count;

                        unsigned int i = count;
            while (1)
              {
                if (i > 31) goto <D.12042>;
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.regs[i] = 21930) >>>>>;
                <<cleanup_point (void) i++ >>;
              }
            <D.12042>:;
          }
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = PX4IO_serial::_wait_complete (this)) >>>>>;
          if (result == 0)
            {
              if (((int) _dma_buffer.count_code & 192) == 128)
                {
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = -22) >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_protoerrs) >>>>>;
                }
              goto <D.12040>;
            }
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_retries) >>>>>;
        }
        <<cleanup_point (void) retries++ >>;
      }
    <D.12040>:;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_post (&((struct PX4IO_serial *) this)->_bus_semaphore) >>>>>;
  if (result == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = (int) count) >>>>>;
    }
  return <retval> = result;
}


;; Function virtual int PX4IO_serial::read(unsigned int, void*, unsigned int) (null)
;; enabled by -tree-original


{
  uint8_t page = (uint8_t) (address >> 8);
  uint8_t offset = (uint8_t) address;
  uint16_t * values = (uint16_t *) data;
  int result;

    uint8_t page = (uint8_t) (address >> 8);
    uint8_t offset = (uint8_t) address;
    uint16_t * values = (uint16_t *) data;
  if (count > 32)
    {
      return <retval> = -22;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_wait (&((struct PX4IO_serial *) this)->_bus_semaphore) >>>>>;
    int result;
  {
    unsigned int retries = 0;

    <<cleanup_point     unsigned int retries = 0;>>;
    while (1)
      {
        if (retries > 2) goto <D.12055>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.count_code = (uint8_t) NON_LVALUE_EXPR <count>) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.page = page) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.offset = offset) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = PX4IO_serial::_wait_complete (this)) >>>>>;
        if (result == 0)
          {
            if (((int) _dma_buffer.count_code & 192) == 128)
              {
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = -22) >>>>>;
                <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_protoerrs) >>>>>;
              }
            else
              {
                if (((unsigned int) _dma_buffer.count_code & 63) != count)
                  {
                    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = -5) >>>>>;
                    <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_protoerrs) >>>>>;
                  }
                else
                  {
                    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memcpy ((void *) values, (const void *) &_dma_buffer.regs[0], count * 2) >>>>>;
                  }
              }
            goto <D.12055>;
          }
        <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_retries) >>>>>;
        <<cleanup_point (void) retries++ >>;
      }
    <D.12055>:;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_post (&((struct PX4IO_serial *) this)->_bus_semaphore) >>>>>;
  if (result == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = (int) count) >>>>>;
    }
  return <retval> = result;
}


;; Function int PX4IO_serial::_wait_complete() (null)
;; enabled by -tree-original


{
  struct timespec abstime;
  int ret;

  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812480B >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812484B >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  perf_begin (((struct PX4IO_serial *) this)->_pc_txns) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  perf_begin (((struct PX4IO_serial *) this)->_pc_dmasetup) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_rx_dma_status = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmasetup (((struct PX4IO_serial *) this)->_rx_dma, 1073812484, (uint32_t) &_dma_buffer, 68, 1280) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastart (((struct PX4IO_serial *) this)->_rx_dma, _dma_callback, (void *) this, 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = (unsigned int) *1073812500B | 64) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.crc = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.crc = crc_packet (&_dma_buffer)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmasetup (((struct PX4IO_serial *) this)->_tx_dma, 1073812484, (uint32_t) &_dma_buffer, (size_t) ((int) &_dma_buffer.regs[(int) _dma_buffer.count_code & 63] - (int) &_dma_buffer), 1088) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastart (((struct PX4IO_serial *) this)->_tx_dma, 0B, 0B, 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = (unsigned int) *1073812500B | 128) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  perf_end (((struct PX4IO_serial *) this)->_pc_dmasetup) >>>>>;
    struct timespec abstime;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) clock_gettime (0, &abstime) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (abstime.tv_nsec = abstime.tv_nsec + 10000000) >>>>>;
  if (abstime.tv_nsec > 999999999)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) abstime.tv_sec++  >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (abstime.tv_nsec = abstime.tv_nsec + -1000000000) >>>>>;
    }
    int ret;
  {
    while (1)
      {
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = sem_timedwait (&((struct PX4IO_serial *) this)->_completion_semaphore, (const struct timespec *) &abstime)) >>>>>;
          {
            if (ret == 0)
              {
                {
                  uint8_t crc = _dma_buffer.crc;

                  if (<<cleanup_point ((unsigned int) ((struct PX4IO_serial *) this)->_rx_dma_status & 8) != 0>>)
                    {
                      <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_dmaerrs) >>>>>;
                      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = -5) >>>>>;
                      goto <D.12096>;
                    }
                                    uint8_t crc = _dma_buffer.crc;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (_dma_buffer.crc = 0) >>>>>;
                  if (<<cleanup_point crc_packet (&_dma_buffer) != crc || ((int) _dma_buffer.count_code & 192) == 64>>)
                    {
                      <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_crcerrs) >>>>>;
                      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = -5) >>>>>;
                      goto <D.12096>;
                    }
                  goto <D.12096>;
                }
              }
          }
          if (<<cleanup_point *get_errno_ptr () == 110>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_abort_dma (this) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_timeouts) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  perf_cancel (((struct PX4IO_serial *) this)->_pc_txns) >>>>>;
              goto <D.12096>;
            }
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) lowsyslog ((const char *) "unexpected ret %d/%d\n", ret, *get_errno_ptr ()) >>>>>;
        }
      }
    <D.12096>:;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_rx_dma_status = 2147483648) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  perf_end (((struct PX4IO_serial *) this)->_pc_txns) >>>>>;
  return <retval> = ret;
}


;; Function static void PX4IO_serial::_dma_callback(DMA_HANDLE, uint8_t, void*) (null)
;; enabled by -tree-original


{
  {
    if (arg != 0B)
      {
        {
          struct PX4IO_serial * ps = (struct PX4IO_serial *) arg;

                    struct PX4IO_serial * ps = (struct PX4IO_serial *) arg;
          <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_do_rx_dma_callback (NON_LVALUE_EXPR <ps>, (unsigned int) status) >>>>>;
        }
      }
  }
}


;; Function void PX4IO_serial::_do_rx_dma_callback(unsigned int) (null)
;; enabled by -tree-original


{
  {
    if (<<cleanup_point ((struct PX4IO_serial *) this)->_rx_dma_status == 0>>)
      {
        {
          uint32_t sr;

                    uint32_t sr;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sr = (uint32_t) *1073812480B) >>>>>;
          if ((sr & 40) != 0)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812484B >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (status = 8) >>>>>;
            }
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4IO_serial *) this)->_rx_dma_status = status) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = (unsigned int) *1073812500B & 4294967103) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) sem_post (&((struct PX4IO_serial *) this)->_completion_semaphore) >>>>>;
        }
      }
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  test_routine (status) >>>>>;
}


;; Function static int PX4IO_serial::_interrupt(int, void*) (null)
;; enabled by -tree-original


if (g_interface != 0B)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_do_interrupt (NON_LVALUE_EXPR <g_interface>) >>>>>;
  }
return <retval> = 0;


;; Function void PX4IO_serial::_do_interrupt() (null)
;; enabled by -tree-original


{
  uint32_t sr;

    uint32_t sr;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sr = (uint32_t) *1073812480B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812484B >>>>>;
  if ((sr & 14) != 0)
    {
      if (<<cleanup_point ((struct PX4IO_serial *) this)->_rx_dma_status == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_abort_dma (this) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_uerrs) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_do_rx_dma_callback (this, 8) >>>>>;
          return;
        }
      return;
    }
  {
    if ((sr & 16) != 0)
      {
        {
          {
            if (<<cleanup_point ((struct PX4IO_serial *) this)->_rx_dma_status == 0>>)
              {
                {
                  size_t length;

                                    size_t length;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (length = 68 - stm32_dmaresidual (((struct PX4IO_serial *) this)->_rx_dma)) >>>>>;
                  if (length == 0 || (size_t) ((int) &_dma_buffer.regs[(int) _dma_buffer.count_code & 63] - (int) &_dma_buffer) > length)
                    {
                      <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_badidle) >>>>>;
                      <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_rx_dma) >>>>>;
                      <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_do_rx_dma_callback (this, 8) >>>>>;
                      return;
                    }
                  <<cleanup_point <<< Unknown tree: expr_stmt
  perf_count (((struct PX4IO_serial *) this)->_pc_idle) >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_rx_dma) >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  PX4IO_serial::_do_rx_dma_callback (this, 32) >>>>>;
                }
              }
          }
        }
      }
  }
}


;; Function void PX4IO_serial::_abort_dma() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*1073812500B = (unsigned int) *1073812500B & 4294967103) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812480B >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812484B >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) *1073812484B >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_tx_dma) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  stm32_dmastop (((struct PX4IO_serial *) this)->_rx_dma) >>>>>;


;; Function px4::PX4Message<M>::PX4Message() [with M = rc_channels_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct rc_channels_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI13rc_channels_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .timestamp_last_valid=0, .channels={[0 ... 18]=0.0}, .channel_count=0, .function={[0 ... 18]=0}, .rssi=0, .signal_lost=0}) >>>>>;
}
<D.12125>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = rc_channels_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI13rc_channels_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct rc_channels_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12132>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = rc_channels_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct rc_channels_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI13rc_channels_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12141>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_attitude_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_attitude_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI27vehicle_attitude_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .roll_body=0.0, .pitch_body=0.0, .yaw_body=0.0, .yaw_sp_move_rate=0.0, .R_body={[0 ... 8]=0.0}, .R_valid=0, .q_d={[0 ... 3]=0.0}, .q_d_valid=0, .q_e={[0 ... 3]=0.0}, .q_e_valid=0, .thrust=0.0, .roll_reset_integral=0, .pitch_reset_integral=0, .yaw_reset_integral=0}) >>>>>;
}
<D.12148>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_attitude_setpoint_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI27vehicle_attitude_setpoint_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_attitude_setpoint_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12155>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_attitude_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_attitude_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI27vehicle_attitude_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12164>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = manual_control_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct manual_control_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI25manual_control_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .x=0.0, .y=0.0, .z=0.0, .r=0.0, .flaps=0.0, .aux1=0.0, .aux2=0.0, .aux3=0.0, .aux4=0.0, .aux5=0.0, .mode_switch=0, .return_switch=0, .posctl_switch=0, .loiter_switch=0, .acro_switch=0, .offboard_switch=0}) >>>>>;
}
<D.12171>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = manual_control_setpoint_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI25manual_control_setpoint_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct manual_control_setpoint_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12178>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = manual_control_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct manual_control_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI25manual_control_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12187>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = actuator_controls_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI19actuator_controls_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .timestamp_sample=0, .control={[0 ... 7]=0.0}}) >>>>>;
}
<D.12194>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = actuator_controls_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI19actuator_controls_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct actuator_controls_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12201>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = actuator_controls_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI19actuator_controls_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12210>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = actuator_controls_0_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_0_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_0_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .timestamp_sample=0, .control={[0 ... 7]=0.0}}) >>>>>;
}
<D.12217>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = actuator_controls_0_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_0_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct actuator_controls_0_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12224>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = actuator_controls_0_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_0_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_0_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12233>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = actuator_controls_1_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_1_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_1_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .timestamp_sample=0, .control={[0 ... 7]=0.0}}) >>>>>;
}
<D.12240>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = actuator_controls_1_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_1_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct actuator_controls_1_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12247>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = actuator_controls_1_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_1_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_1_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12256>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = actuator_controls_2_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_2_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_2_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .timestamp_sample=0, .control={[0 ... 7]=0.0}}) >>>>>;
}
<D.12263>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = actuator_controls_2_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_2_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct actuator_controls_2_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12270>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = actuator_controls_2_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_2_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_2_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12279>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = actuator_controls_3_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_3_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_3_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .timestamp_sample=0, .control={[0 ... 7]=0.0}}) >>>>>;
}
<D.12286>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = actuator_controls_3_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_3_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct actuator_controls_3_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12293>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = actuator_controls_3_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_controls_3_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI21actuator_controls_3_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12302>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_rates_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_rates_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_rates_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .roll=0.0, .pitch=0.0, .yaw=0.0, .thrust=0.0}) >>>>>;
}
<D.12309>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_rates_setpoint_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_rates_setpoint_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_rates_setpoint_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12316>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_rates_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_rates_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_rates_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12325>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_attitude_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_attitude_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI18vehicle_attitude_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .roll=0.0, .pitch=0.0, .yaw=0.0, .rollspeed=0.0, .pitchspeed=0.0, .yawspeed=0.0, .rollacc=0.0, .pitchacc=0.0, .yawacc=0.0, .rate_offsets={[0 ... 2]=0.0}, .R={[0 ... 8]=0.0}, .q={[0 ... 3]=0.0}, .g_comp={[0 ... 2]=0.0}, .R_valid=0, .q_valid=0}) >>>>>;
}
<D.12332>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_attitude_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI18vehicle_attitude_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_attitude_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12339>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_attitude_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_attitude_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI18vehicle_attitude_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12348>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_control_mode_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_control_mode_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI22vehicle_control_mode_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .flag_armed=0, .flag_external_manual_override_ok=0, .flag_system_hil_enabled=0, .flag_control_manual_enabled=0, .flag_control_auto_enabled=0, .flag_control_offboard_enabled=0, .flag_control_rates_enabled=0, .flag_control_attitude_enabled=0, .flag_control_force_enabled=0, .flag_control_velocity_enabled=0, .flag_control_position_enabled=0, .flag_control_altitude_enabled=0, .flag_control_climb_rate_enabled=0, .flag_control_termination_enabled=0}) >>>>>;
}
<D.12355>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_control_mode_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI22vehicle_control_mode_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_control_mode_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12362>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_control_mode_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_control_mode_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI22vehicle_control_mode_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12371>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = actuator_armed_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_armed_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI16actuator_armed_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .armed=0, .ready_to_arm=0, .lockdown=0, .force_failsafe=0, .in_esc_calibration_mode=0}) >>>>>;
}
<D.12378>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = actuator_armed_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI16actuator_armed_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct actuator_armed_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12385>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = actuator_armed_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct actuator_armed_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI16actuator_armed_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12394>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = parameter_update_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct parameter_update_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI18parameter_update_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0}) >>>>>;
}
<D.12401>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = parameter_update_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI18parameter_update_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct parameter_update_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12408>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = parameter_update_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct parameter_update_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI18parameter_update_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12417>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_status_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_status_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI16vehicle_status_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.counter=0, .timestamp=0, .main_state=0, .nav_state=0, .arming_state=0, .hil_state=0, .failsafe=0, .calibration_enabled=0, .system_type=0, .system_id=0, .component_id=0, .is_rotary_wing=0, .is_vtol=0, .vtol_fw_permanent_stab=0, .condition_battery_voltage_valid=0, .condition_system_in_air_restore=0, .condition_system_sensors_initialized=0, .condition_system_returned_to_home=0, .condition_auto_mission_available=0, .condition_global_position_valid=0, .condition_launch_position_valid=0, .condition_home_position_valid=0, .condition_local_position_valid=0, .condition_local_altitude_valid=0, .condition_airspeed_valid=0, .condition_landed=0, .condition_power_input_valid=0, .avionics_power_rail_voltage=0.0, .usb_connected=0, .rc_signal_found_once=0, .rc_signal_lost=0, .rc_signal_lost_timestamp=0, .rc_signal_lost_cmd=0, .rc_input_blocked=0, .rc_input_mode=0, .data_link_lost=0, .data_link_lost_cmd=0, .data_link_lost_counter=0, .engine_failure=0, .engine_failure_cmd=0, .gps_failure=0, .gps_failure_cmd=0, .barometer_failure=0, .offboard_control_signal_found_once=0, .offboard_control_signal_lost=0, .offboard_control_signal_weak=0, .offboard_control_signal_lost_interval=0, .offboard_control_set_by_command=0, .onboard_control_sensors_present=0, .onboard_control_sensors_enabled=0, .onboard_control_sensors_health=0, .load=0.0, .battery_voltage=0.0, .battery_current=0.0, .battery_remaining=0.0, .battery_discharged_mah=0.0, .battery_cell_count=0, .battery_warning=0, .drop_rate_comm=0, .errors_comm=0, .errors_count1=0, .errors_count2=0, .errors_count3=0, .errors_count4=0, .circuit_breaker_engaged_power_check=0, .circuit_breaker_engaged_airspd_check=0, .circuit_breaker_engaged_enginefailure_check=0, .circuit_breaker_engaged_gpsfailure_check=0}) >>>>>;
}
<D.12424>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_status_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI16vehicle_status_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_status_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12431>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_status_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_status_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI16vehicle_status_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12440>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_local_position_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_local_position_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI33vehicle_local_position_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .x=0.0, .y=0.0, .z=0.0, .yaw=0.0, .vx=0.0, .vy=0.0, .vz=0.0, .acc_x=0.0, .acc_y=0.0, .acc_z=0.0}) >>>>>;
}
<D.12447>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_local_position_setpoint_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI33vehicle_local_position_setpoint_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_local_position_setpoint_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12454>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_local_position_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_local_position_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI33vehicle_local_position_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12463>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_global_velocity_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_global_velocity_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI34vehicle_global_velocity_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.vx=0.0, .vy=0.0, .vz=0.0}) >>>>>;
}
<D.12470>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_global_velocity_setpoint_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI34vehicle_global_velocity_setpoint_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_global_velocity_setpoint_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12477>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_global_velocity_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_global_velocity_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI34vehicle_global_velocity_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12486>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_local_position_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_local_position_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_local_position_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .xy_valid=0, .z_valid=0, .v_xy_valid=0, .v_z_valid=0, .x=0.0, .y=0.0, .z=0.0, .vx=0.0, .vy=0.0, .vz=0.0, .yaw=0.0, .xy_global=0, .z_global=0, .ref_timestamp=0, .ref_lat=0.0, .ref_lon=0.0, .ref_alt=0.0, .dist_bottom=0.0, .dist_bottom_rate=0.0, .surface_bottom_timestamp=0, .dist_bottom_valid=0, .eph=0.0, .epv=0.0}) >>>>>;
}
<D.12493>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_local_position_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_local_position_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_local_position_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12500>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_local_position_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_local_position_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_local_position_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12509>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = position_setpoint_triplet_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct position_setpoint_triplet_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI27position_setpoint_triplet_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.previous={.valid=0, .type=0, .x=0.0, .y=0.0, .z=0.0, .position_valid=0, .vx=0.0, .vy=0.0, .vz=0.0, .velocity_valid=0, .lat=0.0, .lon=0.0, .alt=0.0, .yaw=0.0, .yaw_valid=0, .yawspeed=0.0, .yawspeed_valid=0, .loiter_radius=0.0, .loiter_direction=0, .pitch_min=0.0, .a_x=0.0, .a_y=0.0, .a_z=0.0, .acceleration_valid=0, .acceleration_is_force=0}, .current={.valid=0, .type=0, .x=0.0, .y=0.0, .z=0.0, .position_valid=0, .vx=0.0, .vy=0.0, .vz=0.0, .velocity_valid=0, .lat=0.0, .lon=0.0, .alt=0.0, .yaw=0.0, .yaw_valid=0, .yawspeed=0.0, .yawspeed_valid=0, .loiter_radius=0.0, .loiter_direction=0, .pitch_min=0.0, .a_x=0.0, .a_y=0.0, .a_z=0.0, .acceleration_valid=0, .acceleration_is_force=0}, .next={.valid=0, .type=0, .x=0.0, .y=0.0, .z=0.0, .position_valid=0, .vx=0.0, .vy=0.0, .vz=0.0, .velocity_valid=0, .lat=0.0, .lon=0.0, .alt=0.0, .yaw=0.0, .yaw_valid=0, .yawspeed=0.0, .yawspeed_valid=0, .loiter_radius=0.0, .loiter_direction=0, .pitch_min=0.0, .a_x=0.0, .a_y=0.0, .a_z=0.0, .acceleration_valid=0, .acceleration_is_force=0}, .nav_state=0}) >>>>>;
}
<D.12516>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = position_setpoint_triplet_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI27position_setpoint_triplet_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct position_setpoint_triplet_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12523>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = position_setpoint_triplet_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct position_setpoint_triplet_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI27position_setpoint_triplet_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12532>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = offboard_control_mode_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct offboard_control_mode_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI23offboard_control_mode_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.timestamp=0, .ignore_thrust=0, .ignore_attitude=0, .ignore_bodyrate=0, .ignore_position=0, .ignore_velocity=0, .ignore_acceleration_force=0}) >>>>>;
}
<D.12539>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = offboard_control_mode_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI23offboard_control_mode_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct offboard_control_mode_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12546>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = offboard_control_mode_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct offboard_control_mode_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI23offboard_control_mode_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12555>:;
return this;


;; Function px4::PX4Message<M>::PX4Message() [with M = vehicle_force_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_force_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_force_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = {.x=0.0, .y=0.0, .z=0.0, .yaw=0.0}) >>>>>;
}
<D.12562>:;
return this;


;; Function px4::PX4Message<M>::~PX4Message() [with M = vehicle_force_setpoint_s] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_force_setpoint_sEE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct 
      {
        int (*__vtbl_ptr_type) () * _vptr.PX4Message;
        struct vehicle_force_setpoint_s _data;
      } &) this = {CLOBBER};
    }
}
<D.12569>:;
return this;


;; Function px4::PX4Message<M>::PX4Message(M) [with M = vehicle_force_setpoint_s] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*__vtbl_ptr_type) () * _vptr.PX4Message;
    struct vehicle_force_setpoint_s _data;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_vptr.PX4Message = &_ZTVN3px410PX4MessageI24vehicle_force_setpoint_sEE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PX4Message *) this)->_data = msg) >>>>>;
}
<D.12578>:;
return this;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_force_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_force_setpoint_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_force_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_force_setpoint_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = offboard_control_mode_s] (null)
;; enabled by -tree-original


return <retval> = (struct offboard_control_mode_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = offboard_control_mode_s] (null)
;; enabled by -tree-original


return <retval> = (const struct offboard_control_mode_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = position_setpoint_triplet_s] (null)
;; enabled by -tree-original


return <retval> = (struct position_setpoint_triplet_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = position_setpoint_triplet_s] (null)
;; enabled by -tree-original


return <retval> = (const struct position_setpoint_triplet_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_local_position_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_local_position_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_local_position_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_local_position_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_global_velocity_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_global_velocity_setpoint_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_global_velocity_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_global_velocity_setpoint_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_local_position_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_local_position_setpoint_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_local_position_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_local_position_setpoint_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_status_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_status_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_status_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_status_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = parameter_update_s] (null)
;; enabled by -tree-original


return <retval> = (struct parameter_update_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = parameter_update_s] (null)
;; enabled by -tree-original


return <retval> = (const struct parameter_update_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = actuator_armed_s] (null)
;; enabled by -tree-original


return <retval> = (struct actuator_armed_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = actuator_armed_s] (null)
;; enabled by -tree-original


return <retval> = (const struct actuator_armed_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_control_mode_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_control_mode_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_control_mode_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_control_mode_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_attitude_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_attitude_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_attitude_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_attitude_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_rates_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_rates_setpoint_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_rates_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_rates_setpoint_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = actuator_controls_3_s] (null)
;; enabled by -tree-original


return <retval> = (struct actuator_controls_3_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = actuator_controls_3_s] (null)
;; enabled by -tree-original


return <retval> = (const struct actuator_controls_3_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = actuator_controls_2_s] (null)
;; enabled by -tree-original


return <retval> = (struct actuator_controls_2_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = actuator_controls_2_s] (null)
;; enabled by -tree-original


return <retval> = (const struct actuator_controls_2_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = actuator_controls_1_s] (null)
;; enabled by -tree-original


return <retval> = (struct actuator_controls_1_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = actuator_controls_1_s] (null)
;; enabled by -tree-original


return <retval> = (const struct actuator_controls_1_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = actuator_controls_0_s] (null)
;; enabled by -tree-original


return <retval> = (struct actuator_controls_0_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = actuator_controls_0_s] (null)
;; enabled by -tree-original


return <retval> = (const struct actuator_controls_0_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = actuator_controls_s] (null)
;; enabled by -tree-original


return <retval> = (struct actuator_controls_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = actuator_controls_s] (null)
;; enabled by -tree-original


return <retval> = (const struct actuator_controls_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = manual_control_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (struct manual_control_setpoint_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = manual_control_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (const struct manual_control_setpoint_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = vehicle_attitude_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (struct vehicle_attitude_setpoint_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = vehicle_attitude_setpoint_s] (null)
;; enabled by -tree-original


return <retval> = (const struct vehicle_attitude_setpoint_s &) &((const struct PX4Message *) this)->_data;


;; Function M& px4::PX4Message<M>::data() [with M = rc_channels_s] (null)
;; enabled by -tree-original


return <retval> = (struct rc_channels_s &) &((struct PX4Message *) this)->_data;


;; Function const M& px4::PX4Message<M>::data() const [with M = rc_channels_s] (null)
;; enabled by -tree-original


return <retval> = (const struct rc_channels_s &) &((const struct PX4Message *) this)->_data;

